;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.6.LTS *
;* Date/Time created: Wed Nov 20 10:10:48 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.6.LTS Copyright (c) 1996-2017 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\antons\workspace_v6_1\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("conf_default")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwendtag $C$DW$1


$C$DW$2	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$2, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$2, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$2, DW_AT_declaration
	.dwattr $C$DW$2, DW_AT_external
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$2


$C$DW$4	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$4, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwendtag $C$DW$4


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$5


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("scia_init")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$9


$C$DW$11	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$11, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("lcd_puts")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$163)

$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("configCAN")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$163)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$19


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("maf_rst")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwendtag $C$DW$23


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("velf_rst")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ds1820start")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("ad7738_init")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("dac_setmode")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$27


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("InitECan")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29


$C$DW$30	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$30, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwendtag $C$DW$30

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("METHOD")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external


$C$DW$32	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$32, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("delay_us")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$34

$C$DW$36	.dwtag  DW_TAG_variable
	.dwattr $C$DW$36, DW_AT_name("UNITS")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external

$C$DW$37	.dwtag  DW_TAG_variable
	.dwattr $C$DW$37, DW_AT_name("BITMAP")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external

$C$DW$38	.dwtag  DW_TAG_variable
	.dwattr $C$DW$38, DW_AT_name("BAUD")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$329)
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("latch_dac")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39

$C$DW$40	.dwtag  DW_TAG_variable
	.dwattr $C$DW$40, DW_AT_name("LPV")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwendtag $C$DW$41


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$11)

$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$42

$C$DW$45	.dwtag  DW_TAG_variable
	.dwattr $C$DW$45, DW_AT_name("INTERFACE")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("gpio_init")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("extio_init")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwendtag $C$DW$47


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("led_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("lcd_init")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwendtag $C$DW$49


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("led_set")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$36)

$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$50


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("lcd_clear")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwendtag $C$DW$53


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("flash_init")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("shunt_switch")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("reboot")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwendtag $C$DW$57


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("ssr_set")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$36)

$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$58


$C$DW$61	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$61, DW_AT_name("sys_init")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwendtag $C$DW$61


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$62


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("tagdetect")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64

$C$DW$66	.dwtag  DW_TAG_variable
	.dwattr $C$DW$66, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external

$C$DW$67	.dwtag  DW_TAG_variable
	.dwattr $C$DW$67, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external

$C$DW$68	.dwtag  DW_TAG_variable
	.dwattr $C$DW$68, DW_AT_name("port4004")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$295)
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$69	.dwtag  DW_TAG_variable
	.dwattr $C$DW$69, DW_AT_name("autoidchanged")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$69, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$69, DW_AT_external

$C$DW$70	.dwtag  DW_TAG_variable
	.dwattr $C$DW$70, DW_AT_name("port400e")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$295)
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$71	.dwtag  DW_TAG_variable
	.dwattr $C$DW$71, DW_AT_name("cmd_mode")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$71, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$71, DW_AT_external

$C$DW$72	.dwtag  DW_TAG_variable
	.dwattr $C$DW$72, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external

$C$DW$73	.dwtag  DW_TAG_variable
	.dwattr $C$DW$73, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external

$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external

$C$DW$75	.dwtag  DW_TAG_variable
	.dwattr $C$DW$75, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external


$C$DW$76	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$76, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$163)

$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$76


$C$DW$79	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$79, DW_AT_name("scia_puts")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$79


$C$DW$81	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$81, DW_AT_name("scia_getparam")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$163)

$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$163)

$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$81


$C$DW$85	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$85, DW_AT_name("conf_write")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwendtag $C$DW$85


$C$DW$86	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$86, DW_AT_name("conf_read")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwendtag $C$DW$86


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("sprintf")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$163)

$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$177)

$C$DW$90	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$87


$C$DW$91	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$91, DW_AT_name("atoi")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$91


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$163)

$C$DW$95	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$93


$C$DW$96	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$96, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
	.dwendtag $C$DW$96


$C$DW$97	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$97, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwendtag $C$DW$97


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$101


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ds1820read")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$106	.dwtag  DW_TAG_variable
	.dwattr $C$DW$106, DW_AT_name("VEL_U")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$106, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$106, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$107	.dwtag  DW_TAG_variable
	.dwattr $C$DW$107, DW_AT_name("POS_U")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$107, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$107, DW_AT_external


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("memcpy")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$3)

$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$148)

$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$108


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("strtod")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$177)

$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$349)

	.dwendtag $C$DW$112


$C$DW$115	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$115, DW_AT_name("strlen")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$115


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
$C$DW$118	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$117


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("atol")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$119

$C$DW$121	.dwtag  DW_TAG_variable
	.dwattr $C$DW$121, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$121, DW_AT_declaration
	.dwattr $C$DW$121, DW_AT_external


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("prod_getnext")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
	.dwendtag $C$DW$122


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
	.dwendtag $C$DW$123

$C$DW$124	.dwtag  DW_TAG_variable
	.dwattr $C$DW$124, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$124, DW_AT_declaration
	.dwattr $C$DW$124, DW_AT_external


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
	.dwendtag $C$DW$125


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
	.dwendtag $C$DW$126


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("prod_getavail")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
	.dwendtag $C$DW$127


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
	.dwendtag $C$DW$128

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$129	.dwtag  DW_TAG_variable
	.dwattr $C$DW$129, DW_AT_name("tagwasthere")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$129, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$129, DW_AT_external

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$130	.dwtag  DW_TAG_variable
	.dwattr $C$DW$130, DW_AT_name("autoid")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$130, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$130, DW_AT_external


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("tagid")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
$C$DW$132	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$131

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$133	.dwtag  DW_TAG_variable
	.dwattr $C$DW$133, DW_AT_name("rtc")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$133, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$133, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$134	.dwtag  DW_TAG_variable
	.dwattr $C$DW$134, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$4:	.usect	".ebss",100,1,0
_buff$3:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$135	.dwtag  DW_TAG_variable
	.dwattr $C$DW$135, DW_AT_name("tsensor")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$135, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$135, DW_AT_external

$C$DW$136	.dwtag  DW_TAG_variable
	.dwattr $C$DW$136, DW_AT_name("_ctypes_")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$173)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$137	.dwtag  DW_TAG_variable
	.dwattr $C$DW$137, DW_AT_name("fileOb")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$137, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$137, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$138	.dwtag  DW_TAG_variable
	.dwattr $C$DW$138, DW_AT_name("Fatfs")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$138, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$138, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("conf_data")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$139, DW_AT_declaration
	.dwattr $C$DW$139, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\bin\opt2000.exe C:\\Users\\antons\\AppData\\Local\\Temp\\{FAC5ED17-8109-4B35-A111-CFDDA68EA660} C:\\Users\\antons\\AppData\\Local\\Temp\\{296A380B-BEC7-4180-959F-72C713898C77} 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\bin\ac2000.exe -@C:\\Users\\antons\\AppData\\Local\\Temp\\{B5BEB070-509D-4E1A-9E4C-8B70E6B76311} 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("update_units")
	.dwattr $C$DW$140, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$140, DW_AT_high_pc(0x00)
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$140, DW_AT_external
	.dwattr $C$DW$140, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$140, DW_AT_TI_begin_line(0x177b)
	.dwattr $C$DW$140, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$140, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6011,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$141	.dwtag  DW_TAG_variable
	.dwattr $C$DW$141, DW_AT_name("buff")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$370)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6011 | void update_units(void) {                                              
; 6013 | int l;                                                                 
; 6014 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6016,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6016 | lcd_clear();                                                           
; 6017 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$142, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$142, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6016| 
        ; call occurs [#_lcd_clear] ; [] |6016| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6018,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6018 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6018| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6018| 
        ADDL      XAR4,ACC              ; [CPU_] |6018| 
        MOV       AL,AR1                ; [CPU_] |6018| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6018| 
$C$DW$143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$143, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$143, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6018| 
        ; call occurs [#_lcd_puts] ; [] |6018| 
	.dwpsn	file "../Source/prod.c",line 6019,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6019 | switch (conf_data.vfd[l].what) {                                       
; 6020 | case VFD_LOAD:                                                         
; 6021 | case VFD_PEAK:                                                         
; 6022 | case VFD_VALL:                                                         
; 6023 | case VFD_POSI:                                                         
; 6024 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6019| 
        CMPB      AL,#4                 ; [CPU_] |6019| 
        B         $C$L2,LOS             ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        CMPB      AL,#5                 ; [CPU_] |6019| 
        B         $C$L8,EQ              ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        CMPB      AL,#6                 ; [CPU_] |6019| 
        B         $C$L7,EQ              ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        B         $C$L10,UNC            ; [CPU_] |6019| 
        ; branch occurs ; [] |6019| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6025,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6025| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6025| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6025| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6025| 
        ADDB      AL,#1                 ; [CPU_] |6025| 
        MOVL      XAR4,XAR3             ; [CPU_] |6025| 
        MOV       *-SP[3],AL            ; [CPU_] |6025| 
$C$DW$144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$144, DW_AT_name("_sprintf")
	.dwattr $C$DW$144, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6025| 
        ; call occurs [#_sprintf] ; [] |6025| 
	.dwpsn	file "../Source/prod.c",line 6026,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6026 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6026| 
        ADD       AL,AR1                ; [CPU_] |6026| 
        MOVL      XAR4,XAR3             ; [CPU_] |6026| 
$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$145, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$145, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6026| 
        ; call occurs [#_lcd_puts] ; [] |6026| 
	.dwpsn	file "../Source/prod.c",line 6027,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6027| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6027| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6027| 
        B         $C$L3,EQ              ; [CPU_] |6027| 
        ; branchcc occurs ; [] |6027| 
	.dwpsn	file "../Source/prod.c",line 6028,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6028| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6028| 
        ADD       AL,AR1                ; [CPU_] |6028| 
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$146, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6028| 
        ; call occurs [#_lcd_puts] ; [] |6028| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6031,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6031 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6032 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6031| 
        CMPB      AL,#3                 ; [CPU_] |6031| 
        B         $C$L6,EQ              ; [CPU_] |6031| 
        ; branchcc occurs ; [] |6031| 
	.dwpsn	file "../Source/prod.c",line 6033,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6033 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6034 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6035 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6033| 
        CMPB      AL,#4                 ; [CPU_] |6033| 
        B         $C$L5,EQ              ; [CPU_] |6033| 
        ; branchcc occurs ; [] |6033| 
	.dwpsn	file "../Source/prod.c",line 6036,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6036 | lcd_puts(                                                              
; 6037 |                 (char*) UNITS[0x0f                                     
; 6038 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6039 |                 18 + 20 * l);                                          
; 6041 | break;                                                                 
; 6042 | case VFD_LIMIT:                                                        
; 6043 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6044 | lcd_puts(buff, 5 + 20 * l);                                            
; 6045 | break;                                                                 
; 6046 | case VFD_TEMP:                                                         
; 6047 | #if(VFD==1)                                                            
; 6048 | buff[0] = 0xb0;                                                        
; 6049 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6036| 
        MOV       T,#10                 ; [CPU_] |6036| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6036| 
        ADDL      ACC,XAR6              ; [CPU_] |6036| 
        MOVL      XAR4,ACC              ; [CPU_] |6036| 
        MOVB      XAR0,#42              ; [CPU_] |6036| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6036| 
        MPYB      ACC,T,#152            ; [CPU_] |6036| 
        ADDL      ACC,XAR6              ; [CPU_] |6036| 
        MOVL      XAR4,ACC              ; [CPU_] |6036| 
        MOVB      XAR0,#125             ; [CPU_] |6036| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6036| 
        ANDB      AL,#0x0f              ; [CPU_] |6036| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6036| 
        MOV       ACC,AL << 1           ; [CPU_] |6036| 
        ADDL      XAR4,ACC              ; [CPU_] |6036| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6036| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6036| 
        B         $C$L9,UNC             ; [CPU_] |6036| 
        ; branch occurs ; [] |6036| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6034,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6034| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6034| 
	.dwpsn	file "../Source/prod.c",line 6035,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6035| 
        ; branch occurs ; [] |6035| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6032,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6032| 
	.dwpsn	file "../Source/prod.c",line 6033,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6033| 
        ; branch occurs ; [] |6033| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6050,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6050 | buff[0] = 0xdf;                                                        
; 6051 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6050| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6050| 
	.dwpsn	file "../Source/prod.c",line 6052,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6052 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6052| 
	.dwpsn	file "../Source/prod.c",line 6053,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6053 | buff[2] = '\0';                                                        
; 6054 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6053| 
	.dwpsn	file "../Source/prod.c",line 6055,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6055 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6055| 
        ; branch occurs ; [] |6055| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6043,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6043| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6043| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6043| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6043| 
        ADDB      AL,#1                 ; [CPU_] |6043| 
        MOVL      XAR4,XAR3             ; [CPU_] |6043| 
        MOV       *-SP[3],AL            ; [CPU_] |6043| 
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("_sprintf")
	.dwattr $C$DW$147, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6043| 
        ; call occurs [#_sprintf] ; [] |6043| 
	.dwpsn	file "../Source/prod.c",line 6044,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6044| 
        MOVL      XAR4,XAR3             ; [CPU_] |6044| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6044| 
$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$148, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6044| 
        ; call occurs [#_lcd_puts] ; [] |6044| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6017,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6017| 
        SUBB      XAR6,#1               ; [CPU_U] |6017| 
        MOVZ      AR0,AR6               ; [CPU_] |6017| 
        ADDB      XAR2,#3               ; [CPU_] |6017| 
        ADDB      XAR1,#20              ; [CPU_] |6017| 
        MOV       *-SP[4],AR6           ; [CPU_] |6017| 
        CMP       AR0,#-1               ; [CPU_] |6017| 
        B         $C$L1,NEQ             ; [CPU_] |6017| 
        ; branchcc occurs ; [] |6017| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$140, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$140, DW_AT_TI_end_line(0x17aa)
	.dwattr $C$DW$140, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$140

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$150	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$150, DW_AT_name("print_vfd")
	.dwattr $C$DW$150, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$150, DW_AT_high_pc(0x00)
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$150, DW_AT_external
	.dwattr $C$DW$150, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$150, DW_AT_TI_begin_line(0x1706)
	.dwattr $C$DW$150, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$150, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5894,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("buff")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5894 | void print_vfd(void) {                                                 
; 5895 | int l;                                                                 
; 5896 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("l")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5898,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5898 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5898| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("_scia_puts")
	.dwattr $C$DW$153, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5898| 
        ; call occurs [#_scia_puts] ; [] |5898| 
	.dwpsn	file "../Source/prod.c",line 5899,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5899 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5899| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5900,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5900 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5900| 
        MOVB      AL,#1                 ; [CPU_] |5900| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5900| 
        ADD       AL,AR1                ; [CPU_] |5900| 
        MOV       *-SP[3],AL            ; [CPU_] |5900| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5900| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5900| 
        ADDL      XAR4,ACC              ; [CPU_] |5900| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5900| 
        MOVL      XAR4,XAR3             ; [CPU_] |5900| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5900| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_sprintf")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5900| 
        ; call occurs [#_sprintf] ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5901,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5901 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5901| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5901| 
        ; call occurs [#_scia_puts] ; [] |5901| 
	.dwpsn	file "../Source/prod.c",line 5903,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5903 | switch (conf_data.vfd[l].what) {                                       
; 5904 | case VFD_LOAD:                                                         
; 5905 | case VFD_PEAK:                                                         
; 5906 | case VFD_VALL:                                                         
; 5907 | case VFD_POSI:                                                         
; 5908 | case VFD_VELO:                                                         
; 5909 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5910 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5911 |         scia_puts(buff);                                               
; 5912 |         break;                                                         
; 5913 | case VFD_LIMIT:                                                        
; 5914 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5915 |         scia_puts(buff);                                               
; 5916 |         break;                                                         
; 5917 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5903| 
        CMPB      AL,#4                 ; [CPU_] |5903| 
        B         $C$L13,LOS            ; [CPU_] |5903| 
        ; branchcc occurs ; [] |5903| 
        CMPB      AL,#5                 ; [CPU_] |5903| 
        B         $C$L12,EQ             ; [CPU_] |5903| 
        ; branchcc occurs ; [] |5903| 
        CMPB      AL,#6                 ; [CPU_] |5903| 
        B         $C$L16,NEQ            ; [CPU_] |5903| 
        ; branchcc occurs ; [] |5903| 
	.dwpsn	file "../Source/prod.c",line 5918,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5918 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5918| 
	.dwpsn	file "../Source/prod.c",line 5919,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5919 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5919| 
        ; branch occurs ; [] |5919| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5914,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5914| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5914| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5914| 
        ADDB      AL,#1                 ; [CPU_] |5914| 
        MOV       *-SP[3],AL            ; [CPU_] |5914| 
	.dwpsn	file "../Source/prod.c",line 5916,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5916| 
        ; branch occurs ; [] |5916| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5909,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5909| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5909| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5909| 
        ADDB      AL,#1                 ; [CPU_] |5909| 
        MOV       *-SP[3],AL            ; [CPU_] |5909| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5909| 
        MOV       *-SP[4],AL            ; [CPU_] |5909| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5909| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_sprintf")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5909| 
        ; call occurs [#_sprintf] ; [] |5909| 
	.dwpsn	file "../Source/prod.c",line 5911,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5911| 
$C$L15:    
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_scia_puts")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5911| 
        ; call occurs [#_scia_puts] ; [] |5911| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5921,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5921 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5921| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_scia_puts")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5921| 
        ; call occurs [#_scia_puts] ; [] |5921| 
	.dwpsn	file "../Source/prod.c",line 5899,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5899| 
        ADDB      XAR2,#3               ; [CPU_] |5899| 
        MOV       AL,AR1                ; [CPU_] |5899| 
        CMPB      AL,#4                 ; [CPU_] |5899| 
        B         $C$L11,LT             ; [CPU_] |5899| 
        ; branchcc occurs ; [] |5899| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$150, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$150, DW_AT_TI_end_line(0x1723)
	.dwattr $C$DW$150, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$150

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$160	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$160, DW_AT_name("print_sensor")
	.dwattr $C$DW$160, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$160, DW_AT_high_pc(0x00)
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$160, DW_AT_external
	.dwattr $C$DW$160, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$160, DW_AT_TI_begin_line(0x16af)
	.dwattr $C$DW$160, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$160, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5807,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$161	.dwtag  DW_TAG_variable
	.dwattr $C$DW$161, DW_AT_name("buff")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$162	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$162, DW_AT_name("ss")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$163	.dwtag  DW_TAG_variable
	.dwattr $C$DW$163, DW_AT_name("ss")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$195)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("j")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg0]

$C$DW$165	.dwtag  DW_TAG_variable
	.dwattr $C$DW$165, DW_AT_name("j")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_breg20 -7]

$C$DW$166	.dwtag  DW_TAG_variable
	.dwattr $C$DW$166, DW_AT_name("j")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_breg20 -7]

$C$DW$167	.dwtag  DW_TAG_variable
	.dwattr $C$DW$167, DW_AT_name("j")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_breg20 -7]

$C$DW$168	.dwtag  DW_TAG_variable
	.dwattr $C$DW$168, DW_AT_name("j")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5807 | void print_sensor(int ss) {                                            
; 5808 | int j;                                                                 
; 5809 | static char buff[100];                                                 
; 5811 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5807| 
	.dwpsn	file "../Source/prod.c",line 5812,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5812 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5813 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5814 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5812| 
        MPYB      P,T,#152              ; [CPU_] |5812| 
        MOVL      ACC,XAR3              ; [CPU_] |5812| 
        ADDL      ACC,P                 ; [CPU_] |5812| 
        MOVL      XAR2,ACC              ; [CPU_] |5812| 
        MOVB      XAR0,#118             ; [CPU_] |5812| 
        MOVL      *-SP[12],P            ; [CPU_] |5812| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5812| 
        B         $C$L28,EQ             ; [CPU_] |5812| 
        ; branchcc occurs ; [] |5812| 
	.dwpsn	file "../Source/prod.c",line 5815,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5815 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5815| 
        MOVL      ACC,XAR2              ; [CPU_] |5815| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5815| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5815| 
        ADDB      ACC,#82               ; [CPU_] |5815| 
        MOVL      XAR4,XAR1             ; [CPU_] |5815| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5815| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_sprintf")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5815| 
        ; call occurs [#_sprintf] ; [] |5815| 
	.dwpsn	file "../Source/prod.c",line 5816,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5816 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5816| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5816| 
        ; call occurs [#_scia_puts] ; [] |5816| 
	.dwpsn	file "../Source/prod.c",line 5817,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5817 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5817| 
        MOVL      ACC,XAR2              ; [CPU_] |5817| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5817| 
        ADDB      ACC,#98               ; [CPU_] |5817| 
        MOVL      XAR4,XAR1             ; [CPU_] |5817| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5817| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_sprintf")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5817| 
        ; call occurs [#_sprintf] ; [] |5817| 
	.dwpsn	file "../Source/prod.c",line 5818,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5818 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5818| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5818| 
        ; call occurs [#_scia_puts] ; [] |5818| 
	.dwpsn	file "../Source/prod.c",line 5819,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5819 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5820 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5819| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5819| 
        MOVL      XAR4,XAR2             ; [CPU_] |5819| 
        ADDB      XAR4,#114             ; [CPU_] |5819| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5819| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5819| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5819| 
        MOVL      XAR4,XAR1             ; [CPU_] |5819| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5819| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("_sprintf")
	.dwattr $C$DW$173, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5819| 
        ; call occurs [#_sprintf] ; [] |5819| 
	.dwpsn	file "../Source/prod.c",line 5821,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5821 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5821| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("_scia_puts")
	.dwattr $C$DW$174, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5821| 
        ; call occurs [#_scia_puts] ; [] |5821| 
	.dwpsn	file "../Source/prod.c",line 5822,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5822 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5823 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5822| 
        MOVB      XAR0,#118             ; [CPU_] |5822| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5822| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5822| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5822| 
        ADDL      XAR4,ACC              ; [CPU_] |5822| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5822| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5822| 
        MOVL      XAR4,XAR1             ; [CPU_] |5822| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("_sprintf")
	.dwattr $C$DW$175, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5822| 
        ; call occurs [#_sprintf] ; [] |5822| 
	.dwpsn	file "../Source/prod.c",line 5824,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5824 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5824| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5824| 
        ; call occurs [#_scia_puts] ; [] |5824| 
	.dwpsn	file "../Source/prod.c",line 5825,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5825 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5826 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5825| 
        MOVB      XAR0,#124             ; [CPU_] |5825| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5825| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5825| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5825| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5825| 
        ANDB      AL,#0x0f              ; [CPU_] |5825| 
        MOV       ACC,AL << 1           ; [CPU_] |5825| 
        ADDL      XAR4,ACC              ; [CPU_] |5825| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5825| 
        MOVL      XAR4,XAR1             ; [CPU_] |5825| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5825| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("_sprintf")
	.dwattr $C$DW$177, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5825| 
        ; call occurs [#_sprintf] ; [] |5825| 
	.dwpsn	file "../Source/prod.c",line 5827,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5827 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5827| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5827| 
        ; call occurs [#_scia_puts] ; [] |5827| 
	.dwpsn	file "../Source/prod.c",line 5828,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5828 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5829 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5828| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5828| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5828| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5828| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5828| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5828| 
        MOV       ACC,AL << 1           ; [CPU_] |5828| 
        ADDL      ACC,XAR6              ; [CPU_] |5828| 
        MOVL      XAR4,ACC              ; [CPU_] |5828| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5828| 
        MOVL      XAR4,XAR1             ; [CPU_] |5828| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5828| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_sprintf")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5828| 
        ; call occurs [#_sprintf] ; [] |5828| 
	.dwpsn	file "../Source/prod.c",line 5830,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5830| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5830| 
        ; call occurs [#_scia_puts] ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5831,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5831 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5832 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5831| 
        MOVB      XAR0,#126             ; [CPU_] |5831| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5831| 
        MOVL      XAR4,XAR1             ; [CPU_] |5831| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5831| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5831| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_sprintf")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5831| 
        ; call occurs [#_sprintf] ; [] |5831| 
	.dwpsn	file "../Source/prod.c",line 5833,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5833 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5833| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_scia_puts")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5833| 
        ; call occurs [#_scia_puts] ; [] |5833| 
	.dwpsn	file "../Source/prod.c",line 5834,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5834 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5835 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5834| 
        MOVB      XAR0,#122             ; [CPU_] |5834| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5834| 
        MOVL      XAR4,XAR1             ; [CPU_] |5834| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5834| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5834| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_sprintf")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5834| 
        ; call occurs [#_sprintf] ; [] |5834| 
	.dwpsn	file "../Source/prod.c",line 5836,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5836 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5836| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5836| 
        ; call occurs [#_scia_puts] ; [] |5836| 
	.dwpsn	file "../Source/prod.c",line 5837,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5837 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5838 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5837| 
        MOVB      XAR0,#222             ; [CPU_] |5837| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5837| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5837| 
        MOVL      XAR4,XAR1             ; [CPU_] |5837| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5837| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_sprintf")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5837| 
        ; call occurs [#_sprintf] ; [] |5837| 
	.dwpsn	file "../Source/prod.c",line 5839,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5839| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5839| 
        ; call occurs [#_scia_puts] ; [] |5839| 
	.dwpsn	file "../Source/prod.c",line 5840,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5840 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5841 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5840| 
        MOVB      XAR0,#224             ; [CPU_] |5840| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5840| 
        MOVL      XAR4,XAR1             ; [CPU_] |5840| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5840| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5840| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_sprintf")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5840| 
        ; call occurs [#_sprintf] ; [] |5840| 
	.dwpsn	file "../Source/prod.c",line 5842,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5842| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5842| 
        ; call occurs [#_scia_puts] ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5843,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5843 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5844 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5843| 
        MOVB      XAR0,#228             ; [CPU_] |5843| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5843| 
        MOVL      XAR4,XAR1             ; [CPU_] |5843| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5843| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5843| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_sprintf")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5843| 
        ; call occurs [#_sprintf] ; [] |5843| 
	.dwpsn	file "../Source/prod.c",line 5845,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5845| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5845| 
        ; call occurs [#_scia_puts] ; [] |5845| 
	.dwpsn	file "../Source/prod.c",line 5846,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5846 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5847 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5846| 
        MOVB      XAR0,#230             ; [CPU_] |5846| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5846| 
        MOVL      XAR4,XAR1             ; [CPU_] |5846| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5846| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5846| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_sprintf")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5846| 
        ; call occurs [#_sprintf] ; [] |5846| 
	.dwpsn	file "../Source/prod.c",line 5848,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5848 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5848| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5848| 
        ; call occurs [#_scia_puts] ; [] |5848| 
	.dwpsn	file "../Source/prod.c",line 5850,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5850 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5851 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5852 |                         conf_data.sensor[ss].points);                  
; 5853 |         scia_puts(buff);                                               
; 5855 |         scia_puts("  Point:");                                         
; 5856 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5857 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5858 |                 scia_puts(buff);                                       
; 5860 |         scia_puts("\r\n  Mass: ");                                     
; 5861 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5862 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5863 |                 scia_puts(buff);                                       
; 5865 |         scia_puts("\r\n  Count:");                                     
; 5866 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5867 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5868 |                 scia_puts(buff);                                       
; 5870 |         scia_puts("\r\n  Slope:    ");                                 
; 5871 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5872 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5873 |                 scia_puts(buff);                                       
; 5875 |         scia_puts("\r\n  Intercept:");                                 
; 5876 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5877 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5878 |                 scia_puts(buff);                                       
; 5880 |         scia_puts("\r\n");                                             
; 5881 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5850| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5850| 
        CMPB      AL,#2                 ; [CPU_] |5850| 
        B         $C$L17,EQ             ; [CPU_] |5850| 
        ; branchcc occurs ; [] |5850| 
	.dwpsn	file "../Source/prod.c",line 5882,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5882 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5883 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5882| 
        MOVB      XAR0,#178             ; [CPU_] |5882| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5882| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5882| 
        MOVL      XAR4,XAR1             ; [CPU_] |5882| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5882| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_sprintf")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5882| 
        ; call occurs [#_sprintf] ; [] |5882| 
	.dwpsn	file "../Source/prod.c",line 5884,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5884 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5884| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_scia_puts")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5884| 
        ; call occurs [#_scia_puts] ; [] |5884| 
	.dwpsn	file "../Source/prod.c",line 5885,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5885 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5886 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5885| 
        MOVB      XAR0,#200             ; [CPU_] |5885| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5885| 
        MOVL      XAR4,XAR1             ; [CPU_] |5885| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5885| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5885| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_sprintf")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5885| 
        ; call occurs [#_sprintf] ; [] |5885| 
	.dwpsn	file "../Source/prod.c",line 5887,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5887 | scia_puts(buff);                                                       
; 5890 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5887| 
        B         $C$L29,UNC            ; [CPU_] |5887| 
        ; branch occurs ; [] |5887| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5851,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5851| 
        MOVB      XAR0,#128             ; [CPU_] |5851| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5851| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5851| 
        MOVL      XAR4,XAR1             ; [CPU_] |5851| 
        MOV       *-SP[3],AL            ; [CPU_] |5851| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5851| 
        ; call occurs [#_sprintf] ; [] |5851| 
	.dwpsn	file "../Source/prod.c",line 5853,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5853| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5853| 
        ; call occurs [#_scia_puts] ; [] |5853| 
	.dwpsn	file "../Source/prod.c",line 5855,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5855| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5855| 
        ; call occurs [#_scia_puts] ; [] |5855| 
	.dwpsn	file "../Source/prod.c",line 5856,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5856| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5856,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5856| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5856| 
        B         $C$L27,LT             ; [CPU_] |5856| 
        ; branchcc occurs ; [] |5856| 
	.dwpsn	file "../Source/prod.c",line 5860,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5860| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5860| 
        ; call occurs [#_scia_puts] ; [] |5860| 
	.dwpsn	file "../Source/prod.c",line 5861,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5861| 
        MOV       *-SP[7],AL            ; [CPU_] |5861| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5861,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5861| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5861| 
        B         $C$L26,LT             ; [CPU_] |5861| 
        ; branchcc occurs ; [] |5861| 
	.dwpsn	file "../Source/prod.c",line 5865,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5865| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5865| 
        ; call occurs [#_scia_puts] ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5866,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5866| 
        MOV       *-SP[7],AL            ; [CPU_] |5866| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5866,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5866| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5866| 
        B         $C$L25,LT             ; [CPU_] |5866| 
        ; branchcc occurs ; [] |5866| 
	.dwpsn	file "../Source/prod.c",line 5870,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5870| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5870| 
        ; call occurs [#_scia_puts] ; [] |5870| 
	.dwpsn	file "../Source/prod.c",line 5871,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5871| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5871,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5871| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5871| 
        ADDB      AL,#-1                ; [CPU_] |5871| 
        CMP       AL,*-SP[7]            ; [CPU_] |5871| 
        B         $C$L24,GT             ; [CPU_] |5871| 
        ; branchcc occurs ; [] |5871| 
	.dwpsn	file "../Source/prod.c",line 5875,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5875| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5875| 
        ; call occurs [#_scia_puts] ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5876,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5876| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5876,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5876| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5876| 
        ADDB      AL,#-1                ; [CPU_] |5876| 
        CMP       AL,*-SP[7]            ; [CPU_] |5876| 
        B         $C$L23,GT             ; [CPU_] |5876| 
        ; branchcc occurs ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5880,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5880| 
	.dwpsn	file "../Source/prod.c",line 5881,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5881| 
        ; branch occurs ; [] |5881| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5877,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5877| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5877| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5877| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5877| 
        MOV       ACC,AL << 1           ; [CPU_] |5877| 
        ADDL      ACC,XAR6              ; [CPU_] |5877| 
        ADDL      ACC,XAR3              ; [CPU_] |5877| 
        MOVL      XAR4,ACC              ; [CPU_] |5877| 
        MOVB      XAR0,#200             ; [CPU_] |5877| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5877| 
        MOVL      XAR4,XAR1             ; [CPU_] |5877| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5877| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_sprintf")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5877| 
        ; call occurs [#_sprintf] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5878,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5878| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5878| 
        ; call occurs [#_scia_puts] ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5876,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5876| 
        B         $C$L22,UNC            ; [CPU_] |5876| 
        ; branch occurs ; [] |5876| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5872,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5872| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5872| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5872| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5872| 
        MOV       ACC,AL << 1           ; [CPU_] |5872| 
        ADDL      ACC,XAR6              ; [CPU_] |5872| 
        ADDL      ACC,XAR3              ; [CPU_] |5872| 
        MOVL      XAR4,ACC              ; [CPU_] |5872| 
        MOVB      XAR0,#178             ; [CPU_] |5872| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5872| 
        MOVL      XAR4,XAR1             ; [CPU_] |5872| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5872| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5872| 
        ; call occurs [#_sprintf] ; [] |5872| 
	.dwpsn	file "../Source/prod.c",line 5873,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5873| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5873| 
        ; call occurs [#_scia_puts] ; [] |5873| 
	.dwpsn	file "../Source/prod.c",line 5871,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5871| 
        B         $C$L21,UNC            ; [CPU_] |5871| 
        ; branch occurs ; [] |5871| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5867,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5867| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5867| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5867| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5867| 
        ADDL      ACC,XAR6              ; [CPU_] |5867| 
        ADDL      ACC,XAR3              ; [CPU_] |5867| 
        MOVL      XAR4,ACC              ; [CPU_] |5867| 
        MOVB      XAR0,#154             ; [CPU_] |5867| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5867| 
        MOVL      XAR4,XAR1             ; [CPU_] |5867| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5867| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_sprintf")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5867| 
        ; call occurs [#_sprintf] ; [] |5867| 
	.dwpsn	file "../Source/prod.c",line 5868,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5868| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5868| 
        ; call occurs [#_scia_puts] ; [] |5868| 
	.dwpsn	file "../Source/prod.c",line 5866,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5866| 
	.dwpsn	file "../Source/prod.c",line 5868,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5868| 
	.dwpsn	file "../Source/prod.c",line 5866,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5866| 
        ; branch occurs ; [] |5866| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5862,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5862| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5862| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5862| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5862| 
        ADDL      ACC,XAR6              ; [CPU_] |5862| 
        ADDL      ACC,XAR3              ; [CPU_] |5862| 
        MOVL      XAR4,ACC              ; [CPU_] |5862| 
        MOVB      XAR0,#130             ; [CPU_] |5862| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5862| 
        MOVL      XAR4,XAR1             ; [CPU_] |5862| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5862| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_sprintf")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5862| 
        ; call occurs [#_sprintf] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5863,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5863| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5863| 
        ; call occurs [#_scia_puts] ; [] |5863| 
	.dwpsn	file "../Source/prod.c",line 5861,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5861| 
	.dwpsn	file "../Source/prod.c",line 5863,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5863| 
	.dwpsn	file "../Source/prod.c",line 5861,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5861| 
        ; branch occurs ; [] |5861| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5857,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5857| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5857| 
        ADD       AH,AL                 ; [CPU_] |5857| 
        MOV       *-SP[7],AH            ; [CPU_] |5857| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5857| 
        MOVL      XAR4,XAR1             ; [CPU_] |5857| 
        MOV       *-SP[3],AH            ; [CPU_] |5857| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_sprintf")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5857| 
        ; call occurs [#_sprintf] ; [] |5857| 
	.dwpsn	file "../Source/prod.c",line 5858,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5858| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5858| 
        ; call occurs [#_scia_puts] ; [] |5858| 
        MOV       AL,*-SP[7]            ; [CPU_] |5858| 
	.dwpsn	file "../Source/prod.c",line 5856,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5856| 
        ; branch occurs ; [] |5856| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5813,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5813| 
$C$L29:    
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5813| 
        ; call occurs [#_scia_puts] ; [] |5813| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$160, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$160, DW_AT_TI_end_line(0x1703)
	.dwattr $C$DW$160, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$160

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$215	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$215, DW_AT_name("print_limits")
	.dwattr $C$DW$215, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$215, DW_AT_high_pc(0x00)
	.dwattr $C$DW$215, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$215, DW_AT_external
	.dwattr $C$DW$215, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$215, DW_AT_TI_begin_line(0x174a)
	.dwattr $C$DW$215, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$215, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5962,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$216	.dwtag  DW_TAG_variable
	.dwattr $C$DW$216, DW_AT_name("buff")
	.dwattr $C$DW$216, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$216, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$216, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 5962 | void print_limits(void) {                                              
; 5963 | int ii;                                                                
; 5964 | static char buff[64];                                                  
; 5965 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$217	.dwtag  DW_TAG_variable
	.dwattr $C$DW$217, DW_AT_name("ii")
	.dwattr $C$DW$217, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$217, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$217, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$218	.dwtag  DW_TAG_variable
	.dwattr $C$DW$218, DW_AT_name("up")
	.dwattr $C$DW$218, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$218, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$218, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 5967,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5967 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |5967| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5967| 
        ; call occurs [#_scia_puts] ; [] |5967| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5969,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5969 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |5969| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 5970,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5970 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |5970| 
        MOVB      AL,#1                 ; [CPU_] |5970| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5970| 
        ADD       AL,*-SP[9]            ; [CPU_] |5970| 
        MOVL      XAR4,XAR2             ; [CPU_] |5970| 
        MOV       *-SP[3],AL            ; [CPU_] |5970| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5970| 
        ; call occurs [#_sprintf] ; [] |5970| 
	.dwpsn	file "../Source/prod.c",line 5971,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5971 | scia_puts(buff);                                                       
; 5973 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5971| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5971| 
        ; call occurs [#_scia_puts] ; [] |5971| 
	.dwpsn	file "../Source/prod.c",line 5975,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5975 | switch (conf_data.lim[ii].what) {                                      
; 5976 | case VFD_LOAD:                                                         
; 5977 | case VFD_PEAK:                                                         
; 5978 | case VFD_VALL:                                                         
; 5979 |         up =                                                           
; 5980 |                         UNITS[0x0f                                     
; 5981 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 5982 |         break;                                                         
; 5983 | case VFD_POSI:                                                         
; 5984 |         up = POS_U;                                                    
; 5985 |         break;                                                         
; 5986 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |5975| 
        B         $C$L40,NTC            ; [CPU_] |5975| 
        ; branchcc occurs ; [] |5975| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5975| 
        CMPB      AL,#2                 ; [CPU_] |5975| 
        B         $C$L32,LOS            ; [CPU_] |5975| 
        ; branchcc occurs ; [] |5975| 
        CMPB      AL,#3                 ; [CPU_] |5975| 
        B         $C$L31,EQ             ; [CPU_] |5975| 
        ; branchcc occurs ; [] |5975| 
        CMPB      AL,#4                 ; [CPU_] |5975| 
        B         $C$L33,NEQ            ; [CPU_] |5975| 
        ; branchcc occurs ; [] |5975| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5987,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5987 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |5987| 
	.dwpsn	file "../Source/prod.c",line 5988,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5988 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |5988| 
        ; branch occurs ; [] |5988| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5984,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |5984| 
	.dwpsn	file "../Source/prod.c",line 5985,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |5985| 
        ; branch occurs ; [] |5985| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 5979,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5979| 
        MOV       T,#10                 ; [CPU_] |5979| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |5979| 
        ADDL      ACC,XAR6              ; [CPU_] |5979| 
        MOVL      XAR4,ACC              ; [CPU_] |5979| 
        MOVB      XAR0,#42              ; [CPU_] |5979| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |5979| 
        MPYB      ACC,T,#152            ; [CPU_] |5979| 
        ADDL      ACC,XAR6              ; [CPU_] |5979| 
        MOVL      XAR4,ACC              ; [CPU_] |5979| 
        MOVB      XAR0,#125             ; [CPU_] |5979| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5979| 
        ANDB      AL,#0x0f              ; [CPU_] |5979| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5979| 
        MOV       ACC,AL << 1           ; [CPU_] |5979| 
        ADDL      XAR4,ACC              ; [CPU_] |5979| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |5979| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 5991,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5991 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 5992 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |5991| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5991| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |5991| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5991| 
        ADDL      XAR4,ACC              ; [CPU_] |5991| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5991| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5991| 
        MOVL      XAR4,XAR2             ; [CPU_] |5991| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5991| 
        ADDB      AL,#1                 ; [CPU_] |5991| 
        MOV       *-SP[5],AL            ; [CPU_] |5991| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_sprintf")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5991| 
        ; call occurs [#_sprintf] ; [] |5991| 
	.dwpsn	file "../Source/prod.c",line 5993,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5993| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5993| 
        ; call occurs [#_scia_puts] ; [] |5993| 
	.dwpsn	file "../Source/prod.c",line 5994,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5994 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 5995 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 5996 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 5997 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |5994| 
        B         $C$L34,TC             ; [CPU_] |5994| 
        ; branchcc occurs ; [] |5994| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |5994| 
        B         $C$L35,UNC            ; [CPU_] |5994| 
        ; branch occurs ; [] |5994| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |5994| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |5994| 
        B         $C$L36,TC             ; [CPU_] |5994| 
        ; branchcc occurs ; [] |5994| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |5994| 
        B         $C$L37,UNC            ; [CPU_] |5994| 
        ; branch occurs ; [] |5994| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |5994| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |5994| 
        B         $C$L38,TC             ; [CPU_] |5994| 
        ; branchcc occurs ; [] |5994| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |5994| 
        B         $C$L39,UNC            ; [CPU_] |5994| 
        ; branch occurs ; [] |5994| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |5994| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |5994| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5994| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5994| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |5994| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |5994| 
        MOVL      XAR4,XAR2             ; [CPU_] |5994| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_sprintf")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5994| 
        ; call occurs [#_sprintf] ; [] |5994| 
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5998 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5998| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5998| 
        ; call occurs [#_scia_puts] ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 5999,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5999 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6000 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |5999| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5999| 
        MOVL      XAR4,XAR2             ; [CPU_] |5999| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |5999| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5999| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |5999| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_sprintf")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5999| 
        ; call occurs [#_sprintf] ; [] |5999| 
	.dwpsn	file "../Source/prod.c",line 6001,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6001 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6001| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6001| 
        ; call occurs [#_scia_puts] ; [] |6001| 
	.dwpsn	file "../Source/prod.c",line 6002,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6002 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6003 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6002| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6002| 
        MOVL      XAR4,XAR2             ; [CPU_] |6002| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6002| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6002| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6002| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_sprintf")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6002| 
        ; call occurs [#_sprintf] ; [] |6002| 
	.dwpsn	file "../Source/prod.c",line 6004,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6004 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6004| 
	.dwpsn	file "../Source/prod.c",line 6005,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6005 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6005| 
        ; branch occurs ; [] |6005| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6006,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6006 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6006| 
$C$L41:    
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_scia_puts")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6006| 
        ; call occurs [#_scia_puts] ; [] |6006| 
	.dwpsn	file "../Source/prod.c",line 5969,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |5969| 
        INC       *-SP[9]               ; [CPU_] |5969| 
        MOV       AL,*-SP[9]            ; [CPU_] |5969| 
        CMPB      AL,#4                 ; [CPU_] |5969| 
        B         $C$L30,LT             ; [CPU_] |5969| 
        ; branchcc occurs ; [] |5969| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$215, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$215, DW_AT_TI_end_line(0x1779)
	.dwattr $C$DW$215, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$215

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$231	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$231, DW_AT_name("print_dac")
	.dwattr $C$DW$231, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$231, DW_AT_high_pc(0x00)
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$231, DW_AT_external
	.dwattr $C$DW$231, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$231, DW_AT_TI_begin_line(0x1726)
	.dwattr $C$DW$231, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$231, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5926,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$232	.dwtag  DW_TAG_variable
	.dwattr $C$DW$232, DW_AT_name("buff")
	.dwattr $C$DW$232, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$232, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$232, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5926 | void print_dac(void) {                                                 
; 5927 | int l;                                                                 
; 5928 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$233	.dwtag  DW_TAG_variable
	.dwattr $C$DW$233, DW_AT_name("l")
	.dwattr $C$DW$233, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$233, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$233, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5930,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5930 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5930| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5930| 
        ; call occurs [#_scia_puts] ; [] |5930| 
	.dwpsn	file "../Source/prod.c",line 5932,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5932 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5932| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5933,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5933 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5933| 
        MOVB      AL,#1                 ; [CPU_] |5933| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5933| 
        ADD       AL,AR1                ; [CPU_] |5933| 
        MOV       *-SP[3],AL            ; [CPU_] |5933| 
        MOVL      XAR4,XAR3             ; [CPU_] |5933| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5933| 
        ; call occurs [#_sprintf] ; [] |5933| 
	.dwpsn	file "../Source/prod.c",line 5934,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5934 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5934| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5934| 
        ; call occurs [#_scia_puts] ; [] |5934| 
	.dwpsn	file "../Source/prod.c",line 5936,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5936 | sprintf(buff,                                                          
; 5937 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5938 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5939 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5936| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5936| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5936| 
        MOVL      XAR4,XAR3             ; [CPU_] |5936| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5936| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5936| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5936| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5936| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5936| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5936| 
        ; call occurs [#_sprintf] ; [] |5936| 
	.dwpsn	file "../Source/prod.c",line 5940,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5940 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5940| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5940| 
        ; call occurs [#_scia_puts] ; [] |5940| 
	.dwpsn	file "../Source/prod.c",line 5942,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5942| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5942| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5942| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5942| 
        ADDL      XAR4,ACC              ; [CPU_] |5942| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5942| 
        MOVL      XAR4,XAR3             ; [CPU_] |5942| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5942| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_sprintf")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5942| 
        ; call occurs [#_sprintf] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5943,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5943 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5943| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5945,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5945| 
        CMPB      AL,#7                 ; [CPU_] |5945| 
        B         $C$L43,EQ             ; [CPU_] |5945| 
        ; branchcc occurs ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5946,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5946 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5946| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5946| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5946| 
        ADDB      AL,#1                 ; [CPU_] |5946| 
        MOVL      XAR4,XAR3             ; [CPU_] |5946| 
        MOV       *-SP[3],AL            ; [CPU_] |5946| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_sprintf")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5946| 
        ; call occurs [#_sprintf] ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5947,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5947 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5947| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5947| 
        ; call occurs [#_scia_puts] ; [] |5947| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5950,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5950 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5951 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5952 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5953 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 5954 |         scia_puts(buff);                                               
; 5955 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5950| 
        CMPB      AL,#3                 ; [CPU_] |5950| 
        B         $C$L44,EQ             ; [CPU_] |5950| 
        ; branchcc occurs ; [] |5950| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5950| 
        CMPB      AL,#4                 ; [CPU_] |5950| 
        B         $C$L44,EQ             ; [CPU_] |5950| 
        ; branchcc occurs ; [] |5950| 
	.dwpsn	file "../Source/prod.c",line 5956,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5956 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5956| 
        B         $C$L45,UNC            ; [CPU_] |5956| 
        ; branch occurs ; [] |5956| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5952,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5952| 
        MOVB      XAR0,#8               ; [CPU_] |5952| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5952| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5952| 
        MOVB      XAR0,#10              ; [CPU_] |5952| 
        MOVL      XAR4,XAR3             ; [CPU_] |5952| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5952| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5952| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5952| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_sprintf")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5952| 
        ; call occurs [#_sprintf] ; [] |5952| 
	.dwpsn	file "../Source/prod.c",line 5954,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5954| 
$C$L45:    
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5954| 
        ; call occurs [#_scia_puts] ; [] |5954| 
	.dwpsn	file "../Source/prod.c",line 5932,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5932| 
        ADDB      XAR2,#12              ; [CPU_] |5932| 
        MOV       AL,AR1                ; [CPU_] |5932| 
        CMPB      AL,#4                 ; [CPU_] |5932| 
        B         $C$L42,LT             ; [CPU_] |5932| 
        ; branchcc occurs ; [] |5932| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$231, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$231, DW_AT_TI_end_line(0x1747)
	.dwattr $C$DW$231, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$231

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$246	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$246, DW_AT_name("print_channel")
	.dwattr $C$DW$246, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$246, DW_AT_high_pc(0x00)
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$246, DW_AT_external
	.dwattr $C$DW$246, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$246, DW_AT_TI_begin_line(0x1694)
	.dwattr $C$DW$246, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$246, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5780,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$247	.dwtag  DW_TAG_variable
	.dwattr $C$DW$247, DW_AT_name("buff")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$247, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$248	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$248, DW_AT_name("ch")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$248, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$249	.dwtag  DW_TAG_variable
	.dwattr $C$DW$249, DW_AT_name("ch")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$249, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5780 | void print_channel(Uint16 ch) {                                        
; 5781 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5780| 
	.dwpsn	file "../Source/prod.c",line 5783,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5783 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5783| 
        MOVZ      AR1,AR2               ; [CPU_] |5783| 
        MOVB      AH,#1                 ; [CPU_] |5783| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5783| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5783| 
        ADD       AH,AR1                ; [CPU_] |5783| 
        MOVL      XAR4,XAR3             ; [CPU_] |5783| 
        MOV       *-SP[3],AH            ; [CPU_] |5783| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5783| 
        ; call occurs [#_sprintf] ; [] |5783| 
	.dwpsn	file "../Source/prod.c",line 5784,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5784 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5784| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5784| 
        ; call occurs [#_scia_puts] ; [] |5784| 
	.dwpsn	file "../Source/prod.c",line 5786,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5786 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5786| 
        MOV       T,AR1                 ; [CPU_] |5786| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5786| 
        MPYU      ACC,T,AL              ; [CPU_] |5786| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5786| 
        ADDL      XAR1,ACC              ; [CPU_] |5786| 
        MOVB      XAR0,#44              ; [CPU_] |5786| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5786| 
        MOVL      XAR4,XAR3             ; [CPU_] |5786| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5786| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5786| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5786| 
        ; call occurs [#_sprintf] ; [] |5786| 
	.dwpsn	file "../Source/prod.c",line 5787,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5787 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5787| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5787| 
        ; call occurs [#_scia_puts] ; [] |5787| 
	.dwpsn	file "../Source/prod.c",line 5797,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5797 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5797| 
        MOVB      XAR0,#42              ; [CPU_] |5797| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5797| 
        MOVL      XAR4,XAR3             ; [CPU_] |5797| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5797| 
        ADDB      AL,#1                 ; [CPU_] |5797| 
        MOV       *-SP[3],AL            ; [CPU_] |5797| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_sprintf")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5797| 
        ; call occurs [#_sprintf] ; [] |5797| 
	.dwpsn	file "../Source/prod.c",line 5798,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5798 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5798| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5798| 
        ; call occurs [#_scia_puts] ; [] |5798| 
	.dwpsn	file "../Source/prod.c",line 5800,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5800 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5800| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5800| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5800| 
        B         $C$L46,EQ             ; [CPU_] |5800| 
        ; branchcc occurs ; [] |5800| 
	.dwpsn	file "../Source/prod.c",line 5801,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5801 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5801| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5801| 
        ; call occurs [#_scia_puts] ; [] |5801| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$246, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$246, DW_AT_TI_end_line(0x16ab)
	.dwattr $C$DW$246, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$246

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$258	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$258, DW_AT_name("matchTag")
	.dwattr $C$DW$258, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$258, DW_AT_high_pc(0x00)
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$258, DW_AT_external
	.dwattr $C$DW$258, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$258, DW_AT_TI_begin_line(0x1670)
	.dwattr $C$DW$258, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$258, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5744,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$259	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$259, DW_AT_name("ch")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$259, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5744 | void matchTag(Uint16 ch) {                                             
; 5745 | Uint16 sns;                                                            
; 5746 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$260	.dwtag  DW_TAG_variable
	.dwattr $C$DW$260, DW_AT_name("ch")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$261	.dwtag  DW_TAG_variable
	.dwattr $C$DW$261, DW_AT_name("sns")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$262	.dwtag  DW_TAG_variable
	.dwattr $C$DW$262, DW_AT_name("tag")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5748,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5748 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5748| 
	.dwpsn	file "../Source/prod.c",line 5744,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5744| 
	.dwpsn	file "../Source/prod.c",line 5748,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5748| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5748| 
        MOVL      XAR1,ACC              ; [CPU_] |5748| 
	.dwpsn	file "../Source/prod.c",line 5750,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5750 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5750| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5750| 
	.dwpsn	file "../Source/prod.c",line 5748,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5748| 
	.dwpsn	file "../Source/prod.c",line 5750,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5751 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5750| 
        B         $C$L50,EQ             ; [CPU_] |5750| 
        ; branchcc occurs ; [] |5750| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5750| 
        B         $C$L50,HIS            ; [CPU_] |5750| 
        ; branchcc occurs ; [] |5750| 
	.dwpsn	file "../Source/prod.c",line 5754,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5754 | tag = tagid(ch);                                                       
; 5755 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5756 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_tagid")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5754| 
        ; call occurs [#_tagid] ; [] |5754| 
        MOVB      XAR6,#0               ; [CPU_] |5754| 
        MOVL      XAR3,ACC              ; [CPU_] |5754| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5754| 
        MOV       *-SP[2],#0            ; [CPU_] |5754| 
        MOV       *-SP[1],#0            ; [CPU_] |5754| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$264, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5754| 
        ; call occurs [#ULL$$CMP] ; [] |5754| 
        CMPB      AL,#0                 ; [CPU_] |5754| 
        B         $C$L50,EQ             ; [CPU_] |5754| 
        ; branchcc occurs ; [] |5754| 
        MOVB      ACC,#0                ; [CPU_] |5754| 
        SUBB      ACC,#1                ; [CPU_] |5754| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5754| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5754| 
        MOVL      ACC,XAR3              ; [CPU_] |5754| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$265, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5754| 
        ; call occurs [#ULL$$CMP] ; [] |5754| 
        CMPB      AL,#0                 ; [CPU_] |5754| 
        B         $C$L50,EQ             ; [CPU_] |5754| 
        ; branchcc occurs ; [] |5754| 
	.dwpsn	file "../Source/prod.c",line 5757,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5757 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5757| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5757| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5757| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5759,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5759 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5761 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5759| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5762,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5762 | continue;                       // not calibrated                      
; 5765 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5762| 
        B         $C$L48,EQ             ; [CPU_] |5762| 
        ; branchcc occurs ; [] |5762| 
	.dwpsn	file "../Source/prod.c",line 5766,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5766 | continue;                       // doesn't match, skip                 
; 5769 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5766| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5766| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5766| 
        MOVL      ACC,XAR3              ; [CPU_] |5766| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5766| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$266, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5766| 
        ; call occurs [#ULL$$CMP] ; [] |5766| 
        CMPB      AL,#0                 ; [CPU_] |5766| 
        B         $C$L49,EQ             ; [CPU_] |5766| 
        ; branchcc occurs ; [] |5766| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5759,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5759| 
        MOVL      XAR0,ACC              ; [CPU_] |5759| 
        ADDB      XAR4,#1               ; [CPU_] |5759| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5759| 
        ; branchcc occurs ; [] |5759| 
        B         $C$L50,UNC            ; [CPU_] |5759| 
        ; branch occurs ; [] |5759| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5770,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5770 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5770| 
	.dwpsn	file "../Source/prod.c",line 5771,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5771 | conf_data.ch[ch].ci = sns;                                             
; 5773 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5771| 
        MOV       T,*-SP[5]             ; [CPU_] |5771| 
        MPYU      ACC,T,AL              ; [CPU_] |5771| 
        ADDL      ACC,XAR2              ; [CPU_] |5771| 
        MOVL      XAR5,ACC              ; [CPU_] |5771| 
        MOVB      XAR0,#42              ; [CPU_] |5771| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5771| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$258, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$258, DW_AT_TI_end_line(0x1690)
	.dwattr $C$DW$258, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$258

	.sect	".text"
	.clink
	.global	_main

$C$DW$268	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$268, DW_AT_name("main")
	.dwattr $C$DW$268, DW_AT_low_pc(_main)
	.dwattr $C$DW$268, DW_AT_high_pc(0x00)
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$268, DW_AT_external
	.dwattr $C$DW$268, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$268, DW_AT_TI_begin_line(0x7c)
	.dwattr $C$DW$268, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$268, DW_AT_TI_max_frame_size(-144)
	.dwpsn	file "../Source/prod.c",line 124,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$269	.dwtag  DW_TAG_variable
	.dwattr $C$DW$269, DW_AT_name("buff")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$365)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("cmdbuff")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$365)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 124 | void main(void) {                                                      
; 125 | int i, j, k;                            // general purpose indics      
; 127 | double version;                 // for firmware version print          
; 129 | static char buff[1024];         // output buffer                       
; 131 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 132 | Uint16 cmdlen;                  // the length of the command           
; 134 | adccnt_t* cntp;                 // point to ad7738 count data          
; 135 | adcwt_t* wtp;                           // point to ad7738 load data   
; 137 | Uint16 ch;                              // channel number              
; 138 | Uint16 ss;                              // sensor number               
; 139 | Uint16 pt;                              // point number                
; 141 | Uint16 tagch = 0;                       // channel number for autoid   
; 143 | char unsaved = 0;                       // change to setup not saved   
; 145 | Uint16 slen;                            // string lenght               
; 147 | double scale;                           // input float value           
; 149 | Uint16 flash_ret;                       // return value of flash access
; 150 | double tempvalue;                       // temperature value in F      
; 152 | double volt[3];                 // input value in mv/v                 
; 153 | long long dsum[2];                      // read count for input value  
; 154 | Uint16 dacc[3];                 // dac out count                       
; 155 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 157 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 159 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 161 | Uint16 line;                            // vfd diplay line             
; 163 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 165 | int ds_en = 0;                  // enabled for data streamming         
; 166 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 167 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 168 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 169 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 170 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 171 | Uint16 ds_sn = 0;                       // data packet serial number   
; 172 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 174 | Uint32 temp32;                                                         
; 175 | float ftemp;                                                           
; 176 | long templg;                                                           
; 177 | Uint16 temp16;                                                         
; 178 | int tempint;                                                           
; 179 | double tempft;                                                         
; 181 | Uint16 *intp;                                                          
; 183 | const char *ccp;                                                       
; 185 | #ifdef SDHCCARD                                                        
; 186 | FATFS *fs;                              // pointer to fatfs            
; 188 | FRESULT res;// Fatfs reseult code                                      
; 189 | FIL *fp;// pointer to file object                                      
; 191 | Uint32 fsize;                                                          
; 193 | char sd_write;// should write to SD card                               
; 194 | char sd_close;// file need to be closed                                
; 195 | Uint32 sd_cnt;                                                         
; 197 | FILINFO Finfo;                                                         
; 198 | DIR dir;// Directory object                                            
; 199 | long p1;                                                               
; 200 | UINT s1, s2;                                                           
; 202 | rtc.year = 2010;                                                       
; 203 | rtc.month = 8;                                                         
; 204 | rtc.mday = 27;                                                         
; 205 | rtc.hour = 12;                                                         
; 206 | rtc.min = 0;                                                           
; 207 | rtc.sec = 0;                                                           
; 208 | #endif                                                                 
; 210 | // KS - 2014-02-11                                                     
; 211 | //DownloadFlag = 0;     // removed for release                         
; 213 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 142           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 125 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR1   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR1   assigned to $O$U293
;* AR1   assigned to $O$U322
;* AR1   assigned to $O$U534
;* AR1   assigned to $O$U662
;* AR1   assigned to $O$U761
;* AR1   assigned to $O$U798
;* AR5   assigned to $O$U814
;* AL    assigned to $O$U974
;* AR1   assigned to $O$U952
;* AR1   assigned to $O$U1044
;* AR1   assigned to $O$U942
;* AR6   assigned to $O$U1245
;* AR1   assigned to $O$U1271
;* AR7   assigned to $O$U1508
;* XT    assigned to $O$U1535
;* PL    assigned to $O$U1536
;* AR5   assigned to $O$U1560
;* PL    assigned to $O$U1565
;* PL    assigned to $O$U1572
;* AR7   assigned to $O$U1574
;* AR5   assigned to $O$U1575
;* AR5   assigned to $O$U1589
;* XT    assigned to $O$U1631
;* PL    assigned to $O$U1632
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L41
;* AR3   assigned to $O$L53
;* AR3   assigned to $O$L56
;* AR3   assigned to $O$L110
$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("ccp")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_breg20 -96]

$C$DW$272	.dwtag  DW_TAG_variable
	.dwattr $C$DW$272, DW_AT_name("tempft")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_breg20 -12]

$C$DW$273	.dwtag  DW_TAG_variable
	.dwattr $C$DW$273, DW_AT_name("templg")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_breg20 -14]

$C$DW$274	.dwtag  DW_TAG_variable
	.dwattr $C$DW$274, DW_AT_name("ds_ct")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_breg20 -39]

$C$DW$275	.dwtag  DW_TAG_variable
	.dwattr $C$DW$275, DW_AT_name("ds_sn")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_breg20 -41]

$C$DW$276	.dwtag  DW_TAG_variable
	.dwattr $C$DW$276, DW_AT_name("ds_bm")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$276, DW_AT_location[DW_OP_breg20 -42]

$C$DW$277	.dwtag  DW_TAG_variable
	.dwattr $C$DW$277, DW_AT_name("ds_dec")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$277, DW_AT_location[DW_OP_breg20 -43]

$C$DW$278	.dwtag  DW_TAG_variable
	.dwattr $C$DW$278, DW_AT_name("ds_dn")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$278, DW_AT_location[DW_OP_breg20 -44]

$C$DW$279	.dwtag  DW_TAG_variable
	.dwattr $C$DW$279, DW_AT_name("ds_stop")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_breg20 -45]

$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("ds_en")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_breg20 -46]

$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("bincmdresult")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -39]

$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("line")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -47]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("daccbm")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -48]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("tempvalue")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -98]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("scale")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -16]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("unsaved")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -40]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("tagch")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -135]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ss")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -49]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ch")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -50]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("version")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U391
;* AR1   assigned to $O$U391
;* AR1   assigned to $O$U391
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR5   assigned to $O$U368
;* AR7   assigned to $O$U368
;* AR1   assigned to $O$U259
;* AR1   assigned to $O$U555
;* AR1   assigned to $O$U555
;* AR1   assigned to $O$U600
;* AR1   assigned to $O$U600
;* AR4   assigned to $O$K789
;* AR4   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR4   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR3   assigned to $O$K789
;* AR3   assigned to $O$K789
;* AR5   assigned to $O$K789
;* AR5   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR1   assigned to $O$U844
;* AR1   assigned to $O$U844
;* AR1   assigned to $O$U867
;* AR1   assigned to $O$U867
;* AR1   assigned to $O$U867
;* AR6   assigned to $O$U823
;* AL    assigned to $O$U823
;* AR1   assigned to $O$U893
;* AR1   assigned to $O$U893
;* AR1   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR4   assigned to $O$U973
;* AR4   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR1   assigned to $O$K276
;* AR7   assigned to $O$U1110
;* AR7   assigned to $O$U1110
;* AR7   assigned to $O$U1110
;* AR7   assigned to $O$U1110
;* AR4   assigned to $O$U1112
;* AR4   assigned to $O$U1112
;* AR4   assigned to $O$U1112
;* AR4   assigned to $O$U1112
;* AR1   assigned to $O$U1146
;* AR1   assigned to $O$U1146
;* AR1   assigned to $O$U1146
;* AR1   assigned to $O$U1152
;* AR4   assigned to $O$U1164
;* AR4   assigned to $O$U1161
;* AR7   assigned to $O$U1161
;* PL    assigned to $O$U1161
;* AR7   assigned to $O$U1161
;* AR4   assigned to $O$U1161
;* AR5   assigned to $O$U1221
;* AR4   assigned to $O$U1221
;* AR5   assigned to $O$U1300
;* AR5   assigned to $O$U1300
;* AR4   assigned to $O$U1296
;* AR4   assigned to $O$U1296
;* AR5   assigned to $O$U1355
;* AR5   assigned to $O$U1355
;* PL    assigned to $O$U1361
;* AR0   assigned to $O$U1361
;* AR1   assigned to $O$U1362
;* AR7   assigned to $O$U1362
;* AR0   assigned to $O$U1398
;* AR5   assigned to $O$U1398
;* PL    assigned to $O$U1401
;* AR1   assigned to $O$U1401
;* AR1   assigned to $O$U1402
;* AR0   assigned to $O$U1402
;* AR5   assigned to $O$U1440
;* AR5   assigned to $O$U1440
;* AR0   assigned to $O$U1476
;* AR5   assigned to $O$U1476
;* AR4   assigned to $O$U1511
;* AR1   assigned to $O$U1511
;* AR5   assigned to $O$U1511
;* AR5   assigned to $O$U1511
;* AR4   assigned to $O$U1600
;* AR5   assigned to $O$U1600
;* AR4   assigned to $O$U1600
;* AR5   assigned to $O$U1609
;* AR0   assigned to _intp
$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("intp")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("intp")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("intp")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("intp")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("intp")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("intp")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("intp")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("intp")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("intp")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("intp")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("intp")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("tempint")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("tempint")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("temp16")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg10]

$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("temp16")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_breg20 -51]

$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("temp32")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_breg20 -56]

;* AL    assigned to _temp32
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("temp32")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("cmethod")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg6]

$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("cmethod")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_breg20 -39]

;* AL    assigned to _flash_ret
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("flash_ret")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("flash_ret")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("flash_ret")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("flash_ret")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("slen")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("slen")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("slen")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("slen")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("slen")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("slen")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("pt")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("pt")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("pt")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_breg20 -51]

$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("pt")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_breg20 -51]

;* AL    assigned to _pt
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("pt")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("pt")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("pt")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg12]

$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("pt")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _pt
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("pt")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("wtp")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("wtp")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg12]

;* PL    assigned to _wtp
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("wtp")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg2]

;* AR4   assigned to _wtp
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("wtp")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg12]

$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("cmdlen")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_breg20 -51]

;* AL    assigned to _cmdlen
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("cmdlen")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg0]

$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("cmdlen")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_breg20 -39]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("cmdlen")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _cmdlen
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("cmdlen")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("cmdlen")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("cmdlen")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg0]

$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("k")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_breg20 -51]

$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("k")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_breg20 -52]

$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("k")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_breg20 -52]

$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("k")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _k
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("k")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg16]

$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("k")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_breg20 -51]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("k")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -39]

;* PL    assigned to _k
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("k")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg2]

$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("k")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_breg20 -39]

;* PL    assigned to _k
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("k")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("k")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("j")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg10]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("j")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -39]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("j")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -39]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("j")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -39]

;* AR1   assigned to _j
$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("j")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_reg6]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("j")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -39]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("j")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -39]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("j")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -39]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("j")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -39]

$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("j")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_breg20 -52]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("j")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -52]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -39]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -51]

$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_breg20 -53]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -40]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -40]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -40]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -40]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -40]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -40]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -39]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -53]

;* AR1   assigned to _i
$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("i")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("i")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("i")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_reg0]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("i")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -39]

;* AR7   assigned to _i
$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("i")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("i")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _i
$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("i")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_reg12]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("i")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -39]

;* AL    assigned to _i
$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("i")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("i")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("i")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg0]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -39]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -39]

$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_breg20 -40]

;* AL    assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg16]

$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg16]

$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("volt")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$363)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_breg20 -24]

$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("dsum")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$344)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_breg20 -32]

$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("dacc")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_breg20 -35]

$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("sampcnt")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$325)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_breg20 -38]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#136               ; [CPU_] 
	.dwcfi	cfa_offset, -144
	.dwpsn	file "../Source/prod.c",line 214,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 214 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$462, DW_AT_name("_sys_init")
	.dwattr $C$DW$462, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |214| 
        ; call occurs [#_sys_init] ; [] |214| 
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | delay_us(30000);                        // delay for 30 ms             
; 218 | // Clear all interrupts and initialize PIE vector table:               
; 219 | // Disable CPU interrupts                                              
; 220 | DINT;                                                                  
; 221 | // Initialize PIE control registers to their default state.            
; 222 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 223 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |216| 
$C$DW$463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$463, DW_AT_name("_delay_us")
	.dwattr $C$DW$463, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |216| 
        ; call occurs [#_delay_us] ; [] |216| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 224,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 224 | InitPieCtrl();                                                         
; 225 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$464, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$464, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |224| 
        ; call occurs [#_InitPieCtrl] ; [] |224| 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |226| 
	.dwpsn	file "../Source/prod.c",line 227,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 227 | IFR = 0x0000;                                                          
; 228 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 229 | // Service Routines (ISR).                                             
; 230 | // This will populate the entire table, even if the interrupt          
; 231 | // is not used in this example.  This is useful for debug purposes.    
; 232 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 233 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |227| 
	.dwpsn	file "../Source/prod.c",line 234,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 234 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$465, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$465, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |234| 
        ; call occurs [#_InitPieVectTable] ; [] |234| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$466, DW_AT_name("_gpio_init")
	.dwattr $C$DW$466, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |236| 
        ; call occurs [#_gpio_init] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 237,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 237 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$467, DW_AT_name("_extio_init")
	.dwattr $C$DW$467, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |237| 
        ; call occurs [#_extio_init] ; [] |237| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$468, DW_AT_name("_InitECan")
	.dwattr $C$DW$468, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |238| 
        ; call occurs [#_InitECan] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | configCAN();                                                           
; 241 | // Set SD select output as appropriate (Usually high)                  
; 242 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 255 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$469, DW_AT_name("_configCAN")
	.dwattr $C$DW$469, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |239| 
        ; call occurs [#_configCAN] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 256,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 256 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 257 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 259 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |256| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |256| 
        MOVL      ACC,XAR5              ; [CPU_] |256| 
        SUBL      XAR4,ACC              ; [CPU_] |256| 
        MOVL      ACC,XAR4              ; [CPU_] |256| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |256| 
$C$DW$470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$470, DW_AT_name("_memcpy")
	.dwattr $C$DW$470, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |256| 
        ; call occurs [#_memcpy] ; [] |256| 
	.dwpsn	file "../Source/prod.c",line 260,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 260 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 261 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |260| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |260| 
        MOVL      ACC,XAR5              ; [CPU_] |260| 
        SUBL      XAR4,ACC              ; [CPU_] |260| 
        MOVL      ACC,XAR4              ; [CPU_] |260| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |260| 
$C$DW$471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$471, DW_AT_name("_memcpy")
	.dwattr $C$DW$471, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |260| 
        ; call occurs [#_memcpy] ; [] |260| 
	.dwpsn	file "../Source/prod.c",line 278,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 278 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |278| 
        MOV       AH,#479               ; [CPU_] |278| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |278| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 288,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 288 | Flash_CallbackPtr = NULL;                                              
; 290 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |288| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |288| 
	.dwpsn	file "../Source/prod.c",line 291,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 291 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$472, DW_AT_name("_flash_init")
	.dwattr $C$DW$472, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |291| 
        ; call occurs [#_flash_init] ; [] |291| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$473, DW_AT_name("_led_init")
	.dwattr $C$DW$473, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |293| 
        ; call occurs [#_led_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 294,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 294 | lcd_init();                             // lcd/vfd display             
; 296 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_lcd_init")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |294| 
        ; call occurs [#_lcd_init] ; [] |294| 
	.dwpsn	file "../Source/prod.c",line 298,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 298 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |298| 
        MOVB      AH,#0                 ; [CPU_] |298| 
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_ssr_set")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |298| 
        ; call occurs [#_ssr_set] ; [] |298| 
	.dwpsn	file "../Source/prod.c",line 299,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 299 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |299| 
        MOVB      AH,#0                 ; [CPU_] |299| 
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_ssr_set")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |299| 
        ; call occurs [#_ssr_set] ; [] |299| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_ssr_set")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(3, 0);                  // indicate gui not connected          
; 303 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_ssr_set")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 316,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 316 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_conf_read")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |316| 
        ; call occurs [#_conf_read] ; [] |316| 
	.dwpsn	file "../Source/prod.c",line 317,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 317 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |317| 
        MOV       AH,#21930             ; [CPU_] |317| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |317| 
        B         $C$L51,EQ             ; [CPU_] |317| 
        ; branchcc occurs ; [] |317| 
	.dwpsn	file "../Source/prod.c",line 318,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_conf_default")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |318| 
        ; call occurs [#_conf_default] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_conf_write")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |319| 
        ; call occurs [#_conf_write] ; [] |319| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 322,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 322 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |322| 
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |322| 
        ; call occurs [#_shunt_switch] ; [] |322| 
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |324| 
        ; call occurs [#_ad7738_init] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 325,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 325 | ad7738_setcal();                                                       
; 327 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |325| 
        ; call occurs [#_ad7738_setcal] ; [] |325| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 328,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 328 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |328| 
	.dwpsn	file "../Source/prod.c",line 329,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 329 | tagwasthere[i] = 0;                                                    
; 331 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |329| 
	.dwpsn	file "../Source/prod.c",line 327,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |327| 
        ; branchcc occurs ; [] |327| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 333 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 331,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_delay_us")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |333| 
        ; call occurs [#_delay_us] ; [] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | lcd_clear();                                                           
; 336 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |335| 
        ; call occurs [#_lcd_clear] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |337| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |336| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |337| 
        MOVL      XAR0,#44              ; [CPU_] |337| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |336| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |337| 
        MOVL      *-SP[4],ACC           ; [CPU_] |337| 
        MOVL      XAR4,XAR1             ; [CPU_] |337| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |337| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_sprintf")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |337| 
        ; call occurs [#_sprintf] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 338 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |338| 
        MOVL      XAR4,XAR1             ; [CPU_] |338| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |338| 
        ; call occurs [#_lcd_dputs] ; [] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |339| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |339| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |339| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |339| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_sprintf")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |341| 
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |341| 
        ; call occurs [#_lcd_dputs] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |343| 
	.dwpsn	file "../Source/prod.c",line 344,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 344 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |344| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 346,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |346| 
        TBIT      AL,#4                 ; [CPU_] |346| 
        B         $C$L54,TC             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 347,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 347 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |347| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 350,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 350 | if (1 & i) {                                                           
; 351 |         led_set( LED1, LED_RED);                                       
; 352 |         led_set( LED2, LED_RED);                                       
; 353 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |350| 
        B         $C$L55,TC             ; [CPU_] |350| 
        ; branchcc occurs ; [] |350| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 354 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |354| 
        MOVB      AH,#2                 ; [CPU_] |354| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_led_set")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 355,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 355 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |355| 
        B         $C$L56,UNC            ; [CPU_] |355| 
        ; branch occurs ; [] |355| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 351,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |351| 
        MOVB      AH,#1                 ; [CPU_] |351| 
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_led_set")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |351| 
        ; call occurs [#_led_set] ; [] |351| 
	.dwpsn	file "../Source/prod.c",line 352,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |352| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |352| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_led_set")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |352| 
        ; call occurs [#_led_set] ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 357,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |357| 
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_delay_us")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |357| 
        ; call occurs [#_delay_us] ; [] |357| 
	.dwpsn	file "../Source/prod.c",line 344,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |344| 
        MOV       AL,AR1                ; [CPU_] |344| 
        CMPB      AL,#100               ; [CPU_] |344| 
        B         $C$L53,LT             ; [CPU_] |344| 
        ; branchcc occurs ; [] |344| 
	.dwpsn	file "../Source/prod.c",line 360,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 360 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |360| 
        MOVB      AH,#0                 ; [CPU_] |360| 
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_led_set")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |360| 
        ; call occurs [#_led_set] ; [] |360| 
	.dwpsn	file "../Source/prod.c",line 361,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 361 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |361| 
        MOVB      AH,#0                 ; [CPU_] |361| 
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_led_set")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |361| 
        ; call occurs [#_led_set] ; [] |361| 
        MOV       AL,AR1                ; [CPU_] |361| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |363| 
        CMPB      AL,#20                ; [CPU_] |363| 
        B         $C$L58,GEQ            ; [CPU_] |363| 
        ; branchcc occurs ; [] |363| 
	.dwpsn	file "../Source/prod.c",line 364,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 364 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |364| 
        MOVL      XAR4,XAR5             ; [CPU_] |364| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 364,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |364| 
        INC       *+XAR4[0]             ; [CPU_] |364| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |366| 
        CMPB      AL,#4                 ; [CPU_] |366| 
        B         $C$L57,LT             ; [CPU_] |366| 
        ; branchcc occurs ; [] |366| 
	.dwpsn	file "../Source/prod.c",line 367,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 367 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |367| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |367| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 370,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 370 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |370| 
        MOVB      AL,#40                ; [CPU_] |370| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |370| 
        ; call occurs [#_lcd_dputs] ; [] |370| 
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_conf_write")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |372| 
        ; call occurs [#_conf_write] ; [] |372| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 375 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |375| 
        MOVL      XAR0,#74              ; [CPU_] |375| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |375| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |375| 
        MOVB      XAR0,#35              ; [CPU_] |375| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |375| 
        ADDL      XAR4,ACC              ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 141,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |141| 
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 155,column 13,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |155| 
	.dwpsn	file "../Source/prod.c",line 165,column 12,is_stmt,isa 0
        MOV       *-SP[46],#0           ; [CPU_] |165| 
	.dwpsn	file "../Source/prod.c",line 166,column 14,is_stmt,isa 0
        MOV       *-SP[45],#0           ; [CPU_] |166| 
	.dwpsn	file "../Source/prod.c",line 168,column 15,is_stmt,isa 0
        MOV       *-SP[44],#60          ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 169,column 16,is_stmt,isa 0
        MOV       *-SP[43],#1           ; [CPU_] |169| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[42],#15          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 15,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 141,column 15,is_stmt,isa 0
        MOV       *+FP[AR0],#0          ; [CPU_] |141| 
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
        MOVL      *-SP[56],ACC          ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | switch (conf_data.rxdir) {                                             
; 378 | case SDIR_RS232:                        // RS232, 0                    
; 379 |         led_set( LED1, LED_RED);                                       
; 380 |         led_set( LED2, LED_RED);                                       
; 381 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 382 |         scia_init(temp32);                                             
; 383 |         break;                                                         
; 384 | case SDIR_RS485:                        // RS485, 1                    
; 385 |         led_set( LED1, LED_GREEN);                                     
; 386 |         led_set( LED2, LED_RED);                                       
; 387 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 388 |         scia_init(temp32);                                             
; 389 |         break;                                                         
; 390 | case SDIR_ENET:                 // Ethernet, 2                         
; 391 |         led_set( LED1, LED_RED);                                       
; 392 |         led_set( LED2, LED_GREEN);                                     
; 393 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 394 |         scia_init(921600L);                                            
; 395 |         //scia_init( 460800L );                                        
; 396 |         break;                                                         
; 397 | case SDIR_USB:                  // USB, 3                              
; 398 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 399 |         led_set( LED1, LED_GREEN);                                     
; 400 |         led_set( LED2, LED_GREEN);                                     
; 401 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 402 |         // the USB chip can't handle 921600bps without dropping bytes  
; 403 |         // it seems 460800bps is fine so far.                          
; 404 |         // the client (PC Host) side can use any baudrate.             
; 405 |         scia_init(460800L);                                            
; 406 |         break;                                                         
; 407 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |377| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |377| 
        B         $C$L64,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
        CMPB      AL,#1                 ; [CPU_] |377| 
        B         $C$L63,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
        CMPB      AL,#2                 ; [CPU_] |377| 
        B         $C$L60,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
        CMPB      AL,#3                 ; [CPU_] |377| 
        B         $C$L59,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 408 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |408| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 409 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |409| 
        MOVB      AH,#1                 ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |408| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_led_set")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |409| 
        ; call occurs [#_led_set] ; [] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |410| 
        MOVB      AH,#2                 ; [CPU_] |410| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_led_set")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |410| 
        ; call occurs [#_led_set] ; [] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 412 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |411| 
        MOVL      XAR0,#72              ; [CPU_] |411| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |411| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |411| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |411| 
        MOVB      XAR0,#34              ; [CPU_] |411| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |413| 
        ; branch occurs ; [] |413| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 399,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |399| 
        MOVB      AH,#2                 ; [CPU_] |399| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |398| 
	.dwpsn	file "../Source/prod.c",line 399,column 3,is_stmt,isa 0
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_led_set")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |399| 
        ; call occurs [#_led_set] ; [] |399| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |400| 
        MOVB      AH,#2                 ; [CPU_] |400| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_led_set")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |400| 
        ; call occurs [#_led_set] ; [] |400| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |401| 
        MOVL      XAR0,#72              ; [CPU_] |401| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |401| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |401| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |401| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |401| 
        ADDL      XAR4,ACC              ; [CPU_] |401| 
        MOVL      XAR0,#44              ; [CPU_] |401| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |401| 
        MOVL      *-SP[4],ACC           ; [CPU_] |401| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |401| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_sprintf")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |401| 
        ; call occurs [#_sprintf] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 405,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |405| 
	.dwpsn	file "../Source/prod.c",line 406,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |406| 
        ; branch occurs ; [] |406| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |391| 
        MOVB      AH,#1                 ; [CPU_] |391| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_led_set")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |391| 
        ; call occurs [#_led_set] ; [] |391| 
	.dwpsn	file "../Source/prod.c",line 392,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |392| 
        MOVB      AH,#2                 ; [CPU_] |392| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |392| 
        ; call occurs [#_led_set] ; [] |392| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |393| 
        MOVL      XAR0,#72              ; [CPU_] |393| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |393| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |393| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |393| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |393| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |393| 
        MOVL      XAR0,#44              ; [CPU_] |393| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |393| 
        MOVL      *-SP[4],ACC           ; [CPU_] |393| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |393| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_sprintf")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |393| 
        ; call occurs [#_sprintf] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |394| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |394| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |396| 
        ; branch occurs ; [] |396| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 385,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |385| 
	.dwpsn	file "../Source/prod.c",line 389,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |389| 
        ; branch occurs ; [] |389| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 379,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |379| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |379| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |379| 
        ; call occurs [#_led_set] ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 380,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |380| 
        MOVB      AH,#1                 ; [CPU_] |380| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_led_set")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |380| 
        ; call occurs [#_led_set] ; [] |380| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |381| 
        MOVL      XAR0,#72              ; [CPU_] |381| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |381| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |381| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |381| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |381| 
        ADDL      XAR4,ACC              ; [CPU_] |381| 
        MOVL      XAR1,*-SP[56]         ; [CPU_] |381| 
        MOVL      XAR0,#44              ; [CPU_] |381| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |381| 
        MOVL      *-SP[4],ACC           ; [CPU_] |381| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |381| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |381| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_sprintf")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |381| 
        ; call occurs [#_sprintf] ; [] |381| 
        MOVL      ACC,XAR1              ; [CPU_] |381| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_scia_init")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |382| 
        ; call occurs [#_scia_init] ; [] |382| 
	.dwpsn	file "../Source/prod.c",line 415,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |415| 
        ; call occurs [#_lcd_clear] ; [] |415| 
        MOVL      XAR0,#44              ; [CPU_] |415| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 416 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |416| 
	.dwpsn	file "../Source/prod.c",line 415,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |415| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |416| 
        ; call occurs [#_lcd_dputs] ; [] |416| 
	.dwpsn	file "../Source/prod.c",line 419,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 419 | uart_set_dir(conf_data.rxdir);                                         
; 421 | // initalize hardware and SFCLIB buffers                               
; 422 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 424 | // Enable global Interrupts and higher priority real-time debug events:
; 425 | EINT;                                                                  
; 426 | // Enable Global interrupt INTM                                        
; 427 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |419| 
        MOVL      XAR0,#40              ; [CPU_] |419| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |419| 
        MOVB      XAR0,#34              ; [CPU_] |419| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |419| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |419| 
        ; call occurs [#_uart_set_dir] ; [] |419| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 429,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 429 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 431 |         for (i = 0; i < 50; i++)                // 1s                  
; 433 |                 delay_us(20000);                // delay for 20ms      
; 435 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |429| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |429| 
        CMPB      AL,#3                 ; [CPU_] |429| 
        B         $C$L76,NEQ            ; [CPU_] |429| 
        ; branchcc occurs ; [] |429| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 437,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 437 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |437| 
        MOVL      *-SP[56],XAR4         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 441 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |439| 
        ; branch occurs ; [] |439| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 442,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 442 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |442| 
        ; call occurs [#_scia_rx_getcmds] ; [] |442| 
        CMPB      AL,#0                 ; [CPU_] |442| 
        B         $C$L70,EQ             ; [CPU_] |442| 
        ; branchcc occurs ; [] |442| 
	.dwpsn	file "../Source/prod.c",line 441,column 4,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |441| 
$C$L68:    
        MOVL      XAR1,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 443,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 443 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |443| 
        MOVL      XAR4,XAR1             ; [CPU_] |443| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |443| 
        ; call occurs [#_scia_rx_getcmd] ; [] |443| 
        MOV       T,*-SP[39]            ; [CPU_] |443| 
	.dwpsn	file "../Source/prod.c",line 444,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | lcd_puts(cmdbuff, 20 * j);                                             
; 445 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |444| 
        MOVL      XAR4,XAR1             ; [CPU_] |444| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |444| 
        ; call occurs [#_lcd_puts] ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[39]              ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 444,column 5,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |444| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |446| 
        B         $C$L69,LT             ; [CPU_] |446| 
        ; branchcc occurs ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 447,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 447 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[39],#0           ; [CPU_] |447| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 442,column 4,is_stmt,isa 0
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |442| 
        ; call occurs [#_scia_rx_getcmds] ; [] |442| 
        CMPB      AL,#0                 ; [CPU_] |442| 
        B         $C$L68,NEQ            ; [CPU_] |442| 
        ; branchcc occurs ; [] |442| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 439,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |439| 
        TBIT      AL,#5                 ; [CPU_] |439| 
        B         $C$L67,NTC            ; [CPU_] |439| 
        ; branchcc occurs ; [] |439| 
	.dwpsn	file "../Source/prod.c",line 451,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 451 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |451| 
        SPM       #0                    ; [CPU_] 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_scia_puts")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |451| 
        ; call occurs [#_scia_puts] ; [] |451| 
	.dwpsn	file "../Source/prod.c",line 452,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 452 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |452| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_delay_us")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |452| 
        ; call occurs [#_delay_us] ; [] |452| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
; 454 | j = 0;                                                                 
; 455 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_scia_puts")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 456,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 456 | for (i = 0; i < WTT; i++)               // 10s                         
; 458 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |456| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |454| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 459,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 459 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |459| 
        ; call occurs [#_scia_rx_getcmds] ; [] |459| 
        CMPB      AL,#0                 ; [CPU_] |459| 
        B         $C$L72,EQ             ; [CPU_] |459| 
        ; branchcc occurs ; [] |459| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 460,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 460 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |460| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |460| 
        ; call occurs [#_scia_rx_getcmd] ; [] |460| 
	.dwpsn	file "../Source/prod.c",line 461,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[39]              ; [CPU_] |461| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 463,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |463| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_delay_us")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |463| 
        ; call occurs [#_delay_us] ; [] |463| 
        MOV       AL,*-SP[39]           ; [CPU_] |463| 
	.dwpsn	file "../Source/prod.c",line 464,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 464 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |464| 
        B         $C$L73,LT             ; [CPU_] |464| 
        ; branchcc occurs ; [] |464| 
	.dwpsn	file "../Source/prod.c",line 466,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[39],#0           ; [CPU_] |466| 
	.dwpsn	file "../Source/prod.c",line 467,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 467 | i = WTT - 10;                                                          
; 471 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |467| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 456,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |456| 
        CMP       AR1,#500              ; [CPU_] |456| 
        B         $C$L71,LT             ; [CPU_] |456| 
        ; branchcc occurs ; [] |456| 
	.dwpsn	file "../Source/prod.c",line 472,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 472 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |472| 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_puts")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |472| 
        ; call occurs [#_scia_puts] ; [] |472| 
	.dwpsn	file "../Source/prod.c",line 473,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 473 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |473| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_delay_us")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |473| 
        ; call occurs [#_delay_us] ; [] |473| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |474| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_scia_puts")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_delay_us")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |476| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_puts")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_delay_us")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |478| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_scia_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | j = 0;                                                                 
; 481 | for (i = 0; i < 100; i++)               // 2s                          
; 483 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[39],#0           ; [CPU_] |480| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 484,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 484 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |484| 
        ; call occurs [#_scia_rx_getcmds] ; [] |484| 
        CMPB      AL,#0                 ; [CPU_] |484| 
        B         $C$L75,EQ             ; [CPU_] |484| 
        ; branchcc occurs ; [] |484| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 485,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 485 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |485| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |485| 
        ; call occurs [#_scia_rx_getcmd] ; [] |485| 
        MOV       T,*-SP[39]            ; [CPU_] |485| 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR4,*-SP[56]         ; [CPU_] |486| 
        MPYB      ACC,T,#20             ; [CPU_] |486| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |486| 
        ; call occurs [#_lcd_puts] ; [] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[39]              ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |487| 
        B         $C$L75,LT             ; [CPU_] |487| 
        ; branchcc occurs ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[39],#1           ; [CPU_] |488| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 491,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 491 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |491| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_delay_us")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |491| 
        ; call occurs [#_delay_us] ; [] |491| 
	.dwpsn	file "../Source/prod.c",line 481,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |481| 
        ; branchcc occurs ; [] |481| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 494,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 494 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |494| 
        B         $C$L78,UNC            ; [CPU_] |494| 
        ; branch occurs ; [] |494| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 433,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |433| 
        SPM       #0                    ; [CPU_] 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_delay_us")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |433| 
        ; call occurs [#_delay_us] ; [] |433| 
	.dwpsn	file "../Source/prod.c",line 431,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 497,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 497 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 499 | #ifdef SDHCCARD                                                        
; 501 | // check SD card                                                       
; 502 | lcd_puts( "SD Card Testing...", 0 );                                   
; 503 | sd_write = 0;                                                          
; 504 | sd_close = 0;                                                          
; 505 | sd_cnt = 0;                                                            
; 506 | fp = NULL;                                                             
; 508 | f_mount( 0, &Fatfs );                                                  
; 510 | res = f_getfree( "0:", &fsize, &fs );                                  
; 512 | sprintf( buff, "%02X", res );                                          
; 513 | lcd_puts( buff, 18 );                                                  
; 515 | if( !res )                                                             
; 517 |         switch( fs->fs_type & 3 )                                      
; 519 |                 case 1:                                                
; 520 |                 lcd_puts( "FAT12", 20 );                               
; 521 |                 break;                                                 
; 522 |                 case 2:                                                
; 523 |                 lcd_puts( "FAT16", 20 );                               
; 524 |                 break;                                                 
; 525 |                 case 3:                                                
; 526 |                 lcd_puts( "FAT32", 20 );                               
; 527 |                 break;                                                 
; 530 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 531 |         lcd_puts( buff, 40 );                                          
; 533 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 534 |         lcd_puts( buff, 60 );                                          
; 536 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 538 |                 switch( res )                                          
; 540 |                         case CT_MMC:                                   
; 541 |                         lcd_puts( "on MMC", 26 );                      
; 542 |                         break;                                         
; 543 |                         case CT_SD1:                                   
; 544 |                         lcd_puts( "on SDV1", 26 );                     
; 545 |                         break;                                         
; 546 |                         case CT_SD2:                                   
; 547 |                         lcd_puts( "on SDV2", 26 );                     
; 548 |                         break;                                         
; 549 |                         case CT_SD2|CT_BLOCK:                          
; 550 |                         lcd_puts( "on SDHC", 26 );                     
; 551 |                         break;                                         
; 552 |                         default:                                       
; 553 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 554 |                         break;                                         
; 559 | else                                                                   
; 561 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 577 | for( i = 0; i < 100; i++ )                      // 2s                  
; 579 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 581 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |497| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |497| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |497| 
	.dwpsn	file "../Source/prod.c",line 583,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 583 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |583| 
        MOVB      AH,#2                 ; [CPU_] |583| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_led_set")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |583| 
        ; call occurs [#_led_set] ; [] |583| 
	.dwpsn	file "../Source/prod.c",line 584,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 584 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |584| 
        MOVB      AH,#0                 ; [CPU_] |584| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_led_set")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |584| 
        ; call occurs [#_led_set] ; [] |584| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_update_units")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |586| 
        ; call occurs [#_update_units] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |588| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |588| 
        ; call occurs [#_ad7738_resetpeak] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 589,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 589 | ad7738_resetvall( BM_ALL);              // reset valley                
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |589| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |589| 
        ; call occurs [#_ad7738_resetvall] ; [] |589| 
        MOVL      XAR0,#40              ; [CPU_] |589| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |589| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *-SP[60],ACC          ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | line = 0;                                                              
; 592 | //=====================================================================
;     | =====//                                                                
; 593 | // main loop                                                           
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | for (;;) {                                                             
; 597 |         // check SW2 for reset command                                 
; 598 |         if (!(0x0010 & INBTTN)) {                                      
; 600 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 601 |                 ad7738_resetpeak(0x0f);                                
; 602 |                 ad7738_resetvall(0x0f);                                
; 604 | #if(0)                                                                 
; 605 |                 // DEBUG: tagid                                        
; 606 |                 lcd_clear();                                           
; 607 |                 for( i = 0; i < 4; i++ )                               
; 609 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 610 |                         lcd_puts( buff, i * 20 );                      
; 612 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 614 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 616 |                 // DEBUG: tagid                                        
; 617 |                 update_units();                                        
; 618 | #endif                                                                 
; 622 | #ifdef SDHCCARD                                                        
; 623 |         // write to SD card file if flag set                           
; 624 |         if( sd_write && fp )                                           
; 626 |                 if( prod_getavail() > 31 || sd_close )                 
; 628 |                         led_set( LED2, LED_RED );                      
; 630 |                         k = 32;                                        
; 632 |                         while( prod_getavail() && k-- )                
; 634 |                                 wtp = prod_getnext();                  
; 636 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 638 |                                         intp = (Uint16*)&wtp->adw[i];  
; 640 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 642 |                                         for( j = 0; j < 2; j++ )       
; 644 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 645 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 646 |                                                 intp++;                
; 649 |                                 sd_cnt++;                              
; 652 |                         if( sd_close )                                 
; 654 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 655 |                                 if( res )                              
; 657 |                                         sprintf( buff, "%02X ", res ); 
; 658 |                                         scia_puts( buff );             
; 661 |                                 res = f_close( fp );                   
; 662 |                                 fp = NULL;                             
; 664 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 665 |                                 scia_puts( buff );                     
; 667 |                                 sd_write = 0;                          
; 668 |                                 sd_close = 0;                          
; 671 |                         led_set( LED2, LED_OFF );                      
; 674 | #endif                                                                 
; 676 |         //=============================================================
;     | =====================//                                                
; 677 |         // update the vfd
;     |                          //                                            
; 678 |         //=============================================================
;     | =====================//                                                
; 679 |         // if there is new "monitor data" ready                        
; 680 |         if (ad7738_monrdy()) {                                         
; 681 |                 // clear the ready flag                                
; 682 |                 ad7738_monclr();                                       
; 684 |                 // display the appropriate data                        
; 685 |                 switch (conf_data.vfd[line].what) {                    
; 686 |                 case VFD_LOAD:                                         
; 687 |                         wtp = ad7738_getmon();                         
; 688 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 689 |                         goto VFD_LINE_BUFF;                            
; 691 |                 case VFD_PEAK:                                         
; 692 |                         wtp = ad7738_getpeak();                        
; 693 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 694 |                         goto VFD_LINE_BUFF;                            
; 696 |                 case VFD_VALL:                                         
; 697 |                         wtp = ad7738_getvall();                        
; 698 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 699 |                         goto VFD_LINE_BUFF;                            
; 701 |                 case VFD_POSI:                                         
; 702 |                         wtp = ad7738_getmon();                         
; 703 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 704 |                         goto VFD_LINE_BUFF;                            
; 706 |                 case VFD_VELO:                                         
; 707 |                         wtp = ad7738_getmon();                         
; 708 |                         //wtp = ad7738_getpeak();                      
; 709 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 711 |                         // display appropriate decimal points          
; 712 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 713 |                         case 0:                                        
; 714 |                                 sprintf(buff, "%10.0f", tempft);       
; 715 |                                 break;                                 
; 716 |                         case 1:                                        
; 717 |                                 sprintf(buff, "%10.1f", tempft);       
; 718 |                                 break;                                 
; 719 |                         case 2:                                        
; 720 |                                 sprintf(buff, "%10.2f", tempft);       
; 721 |                                 break;                                 
; 722 |                         case 3:                                        
; 723 |                                 sprintf(buff, "%10.3f", tempft);       
; 724 |                                 break;                                 
; 725 |                         case 4:                                        
; 726 |                                 sprintf(buff, "%10.4f", tempft);       
; 727 |                                 break;                                 
; 728 |                         case 5:                                        
; 729 |                                 sprintf(buff, "%10.5f", tempft);       
; 730 |                                 break;                                 
; 732 |                         break;                                         
; 734 |                 case VFD_LIMIT:                                        
; 735 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 736 |                         sprintf(buff, "  %s",                          
; 737 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 738 |                         break;                                         
; 739 |                 case VFD_TEMP:                                         
; 740 |                         sprintf(buff, "%10.1f", tempvalue);            
; 741 |                         break;                                         
; 744 |                 // print to LCD                                        
; 745 |                 lcd_puts(buff, 7 + 20 * line);                         
; 747 |                 line++;                                                
; 748 |                 if (line >= VFD_MAX) {                                 
; 749 |                         line = 0;                                      
; 753 |         //=============================================================
;     | =====================//                                                
; 754 |         // temperature sensor reading
;     |                  //                                                    
; 755 |         //=============================================================
;     | =====================//                                                
; 757 |         // if its time to start a temp conversion...                   
; 758 |         if (ad7738_tempstart()) {                                      
; 759 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 762 |         // if its time to start a temp reading...                      
; 763 |         else if (ad7738_tempread()) {                                  
; 764 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 765 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 768 |         //=============================================================
;     | =====================//                                                
; 769 |         // Auto ID detection
;     |                  //                                                    
; 770 |         //=============================================================
;     | =====================//                                                
; 771 |         // check for changes in the load cells connected by "TAG ID"   
; 772 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 773 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 775 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 777 |                                 // new loadcell just plugged in        
; 778 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 779 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 781 |                                         DINT;                          
; 782 |                                         maf_rst();                     
; 783 |                                         ad7738_setcal();               
; 784 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 785 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 786 |                                         EINT;                          
; 788 |                                         lcd_clear();                   
; 789 |                                         update_units();                
; 790 |                                         autoidchanged = 1;             
; 793 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 794 |                 } else {                                               
; 796 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 798 |                         if (autoid[tagch]) {                           
; 799 |                                 autoid[tagch] = 0;                     
; 800 |                                 lcd_clear();                           
; 801 |                                 update_units();                        
; 802 |                                 autoidchanged = 1;                     
; 806 |                 tagch++;                                               
; 807 |                 if (tagch >= CHS_MAX) {                                
; 808 |                         tagch = 0;                                     
; 812 |         //=============================================================
;     | =====================//                                                
; 813 |         // Data streamming
;     |                          //                                            
; 814 |         //=============================================================
;     | =====================//                                                
; 815 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 816 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 817 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 818 |                 //      taking into account decimation, etc.           
; 819 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 821 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 823 |                         ds_ct = 0;                                     
; 824 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 825 |                         j = 0;                                         
; 826 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 827 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 828 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 829 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 830 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 831 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 832 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 834 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 835 |                                 wtp = prod_getnext();                  
; 836 |                                 if (--k) {                             
; 837 |                                         continue;
;     |          // decimation                                                 
; 839 |                                 k = ds_dec;                            
; 840 |                                 ds_ct++;                               
; 842 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 843 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 844 |                                         if (ds_bm & ch) {              
; 845 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 846 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 847 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 848 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 849 |                                                         intp++;        
; 852 |                                         ch <<= 1;
;     |          // next channel                                               
; 855 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 856 |                                         if (ds_bm & ch) {              
; 857 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 858 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 859 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 860 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 861 |                                                         intp++;        
; 864 |                                         ch <<= 1;
;     |          // next channel                                               
; 867 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 868 |                                         if (ds_bm & ch) {              
; 869 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 870 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 871 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 872 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 873 |                                                         intp++;        
; 876 |                                         ch <<= 1;
;     |          // next channel                                               
; 880 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 882 |                         if (ds_stop) {                                 
; 883 |                                 ds_en = 0;                             
; 886 |                         scia_send_bin(buff, j);         // send data   
; 888 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 889 |                 } else if (ad7738_getlimitchgd()) {                    
; 890 |                         j = 0;                                         
; 891 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 892 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 893 |                         for (i = 0; i < LIM_MAX; i++) {                
; 894 |                                 buff[j++] = ad7738_getlimitst(i);      
; 896 |                         scia_send_bin(buff, j);         // send data   
; 897 |                 } else if (autoidchanged) {                            
; 898 |                         autoidchanged = 0;                             
; 900 |                         j = 0;                                         
; 901 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 902 |                         buff[j++] = GetAutoId;                  // 1,  
; 903 |                         buff[j++] = conf_data.tagiden;                 
; 904 |                         for (i = 0; i < CHS_MAX; i++) {                
; 905 |                                 buff[j++] = autoid[i];                 
; 907 |                         scia_send_bin(buff, j);         // send data   
; 913 |         //=============================================================
;     | =====================//                                                
; 914 |         // serial command processing
;     |                  //                                                    
; 915 |         //=============================================================
;     | =====================//                                                
; 917 |         //=============================================================
;     | =====================//                                                
; 918 |         // Check for available command in the command buffer
;     |                  //                                                    
; 919 |         //=============================================================
;     | =====================//                                                
; 920 |         if (0 == scia_rx_getcmds()) {                                  
; 921 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 924 |         //=============================================================
;     | =====================//                                                
; 925 |         // Read one command from command buffer
;     |                  //                                                    
; 926 |         //=============================================================
;     | =====================//                                                
; 927 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 929 |         //=============================================================
;     | =====================//                                                
; 930 |         // Empty command
;     |                          //                                            
; 931 |         //=============================================================
;     | =====================//                                                
; 932 |         if (0 == cmdlen) {                                             
; 933 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 934 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 935 |                 continue;                                              
; 938 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 940 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 941 |                 // ASCII command mode processing
;     |                                  //                                    
; 942 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 944 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 947 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 948 |                 // Current configuration print out
;     |                          //                                            
; 949 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 951 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1015 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1017 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1019 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1022 |                         case 'A':                               // all 
; 1024 |                                 version = VERSION;                     
; 1025 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1026 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1027 |                                 scia_puts(buff);                       
; 1028 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1029 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1030 |                                 scia_puts(buff);                       
; 1031 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1032 |                                 scia_puts(buff);                       
; 1033 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1034 |                                                 conf_data.uname);      
; 1035 |                                 scia_puts(buff);                       
; 1037 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1038 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1039 |                                 scia_puts(buff);                       
; 1040 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1041 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1042 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1043 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1044 |                                         scia_puts(buff);               
; 1046 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1047 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1048 |                                 scia_puts(buff);                       
; 1050 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1051 |                                                 conf_data.filter);     
; 1052 |                                 scia_puts(buff);                       
; 1054 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1055 |                                         scia_puts("\r\n");             
; 1056 |                                         print_channel(ch);
;     |          // channel info                                               
; 1057 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1060 |                                 scia_puts("\r\n");                     
; 1061 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1062 |                                                 conf_data.velfilter);  
; 1063 |                                 scia_puts(buff);                       
; 1064 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1065 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1066 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1067 |                                         scia_puts(buff);               
; 1069 |                                 print_vfd();                           
; 1070 |                                 print_dac();                           
; 1071 |                                 print_limits();                        
; 1072 |                                 break;                                 
; 1074 |                         case 'S':
;     |  // sensor list                                                        
; 1076 |                                 scia_puts("\r\n");                     
; 1078 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1079 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1080 |                                         scia_puts(buff);               
; 1081 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1083 |                                 break;                                 
; 1085 |                         case 'D':
;     |  // Display settings                                                   
; 1087 |                                 print_vfd();                           
; 1088 |                                 break;                                 
; 1090 |                         case 'O':
;     |  // DAC settings                                                       
; 1092 |                                 print_dac();                           
; 1093 |                                 break;                                 
; 1095 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1097 |                                 print_limits();                        
; 1098 |                                 break;                                 
; 1100 |                         default:                                       
; 1101 |                                 goto INVALIDCMD;                       
; 1104 |                         break;                                         
; 1106 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1107 |                         // Unit config commands
;     |                                  //                                    
; 1108 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1109 |                 case 'U':                                       // Unit
; 1111 |                         if (cmdlen < 2) {                              
; 1112 |                                 goto INVALIDCMD;                       
; 1115 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1118 |                         case 'S':
;     |  // unit serial number                                                 
; 1120 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1121 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1122 |                                 conf_data.usn = atol(cmdbuff);         
; 1124 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1125 |                                 scia_puts(buff);                       
; 1126 |                                 unsaved = 1;                           
; 1127 |                                 break;                                 
; 1129 |                         case 'N':
;     |  // unit name                                                          
; 1131 |                                 j = sizeof(conf_data.uname) - 1;       
; 1132 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1133 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1134 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1136 |                                         cmdlen = j;                    
; 1137 |                                         cmdbuff[j] = '\0';             
; 1139 |                                 // also copy the null terminater       
; 1140 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1141 |                                                 cmdlen + 1);           
; 1142 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1144 |                                 scia_puts(cmdbuff);                    
; 1145 |                                 scia_puts("\r\n");                     
; 1146 |                                 unsaved = 1;                           
; 1147 |                                 break;                                 
; 1149 |                         case 'C':
;     |  // current sensor                                                     
; 1151 |                                 // channel number                      
; 1152 |                                 j = CHS_MAX;                           
; 1153 |                                 do {                                   
; 1154 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1155 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1156 |                                         ch = atoi(cmdbuff);            
; 1157 |                                         scia_puts(cmdbuff);            
; 1158 |                                         if (ch > 0 && ch <= j) {       
; 1159 |                                                 break;
;     |          // valid input channel number                                 
; 1161 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1162 |                                 } while (j);                           
; 1163 |                                 scia_puts("\r\n");                     
; 1164 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1166 |                                 // sensor number                       
; 1167 |                                 j = SENSPCH;                           
; 1168 |                                 do {                                   
; 1169 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1170 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1171 |                                         ss = atoi(cmdbuff);            
; 1172 |                                         scia_puts(cmdbuff);            
; 1173 |                                         if (ss > 0 && ss <= j) {       
; 1174 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1176 |                                                 break;                 
; 1178 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1179 |                                 } while (j);                           
; 1180 |                                 scia_puts("\r\n");                     
; 1181 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1183 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1184 |                                                 ch + 1, ss + 1);       
; 1185 |                                 scia_puts(buff);                       
; 1186 |                                 print_sensor(ss);                      
; 1187 |                                 unsaved = 1;                           
; 1189 |                                 DINT;                                  
; 1190 |                                 conf_data.ch[ch].ci = ss;              
; 1191 |                                 ad7738_setcal();                       
; 1193 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1194 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1195 |                                 EINT;                                  
; 1197 |                                 update_units();                        
; 1198 |                                 break;                                 
; 1200 |                         case 'I':
;     |  // interface                                                          
; 1202 |                                 for (j = 0; j < 4; j++) {              
; 1203 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1204 |                                         scia_puts(buff);               
; 1205 |                                         if (j < 3) {                   
; 1206 |                                                 scia_puts(", ");       
; 1209 |                                 scia_puts("\r\n");                     
; 1210 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1211 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1212 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1213 |                                 scia_puts(cmdbuff);                    
; 1214 |                                 scia_puts("\r\n");                     
; 1215 |                                 if (cmdlen == 0) {                     
; 1216 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1217 |                                         break;                         
; 1219 |                                 pt = atoi(cmdbuff);                    
; 1220 |                                 if (pt > 3) {                          
; 1221 |                                         scia_puts(                     
; 1222 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1223 |                                         break;                         
; 1225 |                                 conf_data.rxdir = pt;                  
; 1226 |                                 sprintf(buff,                          
; 1227 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1228 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1229 |                                 scia_puts(buff);                       
; 1230 |                                 scia_puts(                             
; 1231 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1232 |                                 unsaved = 1;                           
; 1233 |                                 break;                                 
; 1235 |                         case 'B':
;     |  // baudrate                                                           
; 1237 |                                 if (conf_data.rxdir == SDIR_USB        
; 1238 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1239 |                                         scia_puts(                     
; 1240 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1241 |                                         break;                         
; 1244 |                                 for (j = 0; j < 8; j++) {              
; 1245 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1246 |                                         scia_puts(buff);               
; 1247 |                                         if (j < 7) {                   
; 1248 |                                                 scia_puts(", ");       
; 1251 |                                 scia_puts("\r\n");                     
; 1252 |                                 cmdlen = sprintf(buff,                 
; 1253 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1254 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1255 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1256 |                                 scia_puts(cmdbuff);                    
; 1257 |                                 scia_puts("\r\n");                     
; 1258 |                                 if (cmdlen == 0) {                     
; 1259 |                                         scia_puts(                     
; 1260 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1261 |                                         break;                         
; 1263 |                                 pt = atoi(cmdbuff);                    
; 1264 |                                 if (pt > 7) {                          
; 1265 |                                         scia_puts(                     
; 1266 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1267 |                                         break;                         
; 1269 |                                 conf_data.baud = pt;                   
; 1270 |                                 sprintf(buff,                          
; 1271 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1272 |                                                 BAUD[conf_data.baud]); 
; 1273 |                                 scia_puts(buff);                       
; 1274 |                                 scia_puts(                             
; 1275 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1276 |                                 unsaved = 1;                           
; 1277 |                                 break;                                 
; 1279 |                         case 'F':
;     |  // averaging filter size                                              
; 1281 |                                 j = MAF_MAX;                           
; 1282 |                                 do {                                   
; 1283 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1284 |                                                         j);            
; 1285 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1286 |                                         i = atoi(cmdbuff);             
; 1287 |                                         scia_puts(cmdbuff);            
; 1288 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1289 |                                                 break;
;     |          // valid number input                                         
; 1291 |                                         scia_puts(                     
; 1292 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1293 |                                 } while (j);                           
; 1294 |                                 scia_puts("\r\n");                     
; 1296 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1297 |                                                 i);                    
; 1298 |                                 scia_puts(buff);                       
; 1299 |                                 unsaved = 1;                           
; 1301 |                                 // update new value                    
; 1302 |                                 DINT;                                  
; 1303 |                                 conf_data.filter = i;                  
; 1304 |                                 maf_rst();                             
; 1305 |                                 EINT;                                  
; 1306 |                                 break;                                 
; 1308 |                         case 'W':
;     |  // diff window ratio                                                  
; 1310 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1311 |                                                 conf_data.diffwin);    
; 1312 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1313 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1314 |                                 scia_puts(cmdbuff);                    
; 1315 |                                 scia_puts("\r\n");                     
; 1317 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1318 |                                                 conf_data.diffwin);    
; 1319 |                                 scia_puts(buff);                       
; 1320 |                                 unsaved = 1;                           
; 1322 |                                 DINT;                                  
; 1323 |                                 ad7738_setcal();                       
; 1324 |                                 maf_rst();                             
; 1325 |                                 EINT;                                  
; 1326 |                                 break;                                 
; 1328 |                         default:                                       
; 1329 |                                 goto INVALIDCMD;                       
; 1332 |                         break;                                         
; 1334 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1335 |                         // Board calibration
;     |                                  //                                    
; 1336 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1337 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1339 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1340 |                                 goto INVALIDCMD;                       
; 1343 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1344 |                                 goto INVALIDCMD;                       
; 1345 |                                 // invalid calibration method          
; 1348 |                         // channel index                               
; 1349 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1350 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1351 |                                 goto INVALIDCMD;                       
; 1352 |                                 // invalid channel number              
; 1354 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1356 |                         volt[0] = 0;                                   
; 1357 |                         volt[1] = 0;                                   
; 1358 |                         for (j = 3; j < cmdlen; j++) {                 
; 1359 |                                 if (cmdbuff[j] == 'X') {               
; 1360 |                                         j++;                           
; 1361 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1364 |                                 if (cmdbuff[j] == 'Y') {               
; 1365 |                                         j++;                           
; 1366 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1370 |                         if (volt[0] == volt[1]) {                      
; 1371 |                                 goto INVALIDCMD;                       
; 1372 |                                 // invalid parameters                  
; 1375 |                         lcd_clear();                                   
; 1376 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1377 |                         lcd_puts(buff, 20);                            
; 1378 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1379 |                         lcd_puts(buff, 40);                            
; 1380 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1381 |                         lcd_puts(buff, 60);                            
; 1383 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1386 |                         case 'C':
;     |  // board ADC calibration                                              
; 1388 |                                 lcd_puts("Board Calibration...", 0);   
; 1390 |                                 sprintf(buff,                          
; 1391 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1392 |                                                 ch + 1);               
; 1393 |                                 scia_puts(buff);                       
; 1405 |                                 for (j = 0; j < 2; j++) {              
; 1406 |                                         sprintf(buff,                  
; 1407 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1408 |                                                         volt[j]);      
; 1409 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1410 |                                         scia_puts("Reading ... ");     
; 1412 |                                         dsum[j] = 0;                   
; 1413 |                                         sampcnt = CAL_SAMPLES;         
; 1414 |                                         while (sampcnt--) {            
; 1415 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1416 |                                                         delay_us(1);
;     |                  // wait                                               
; 1418 |                                                 cntp = ad7738_getraw();
; 1419 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1422 |                                         scia_puts("done\r\n");         
; 1425 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1426 |                                                 / (dsum[1] - dsum[0]); 
; 1428 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1429 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1430 |                                 scia_puts(buff);                       
; 1431 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1432 |                                 break;                                 
; 1434 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1436 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1437 |                                                 || volt[1] < -10) {    
; 1438 |                                         lcd_clear();                   
; 1439 |                                         update_units();                
; 1440 |                                         goto INVALIDCMD;               
; 1441 |                                         // invalid parameters          
; 1444 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1446 |                                 sprintf(buff,                          
; 1447 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1448 |                                                 ch + 1);               
; 1449 |                                 scia_puts(buff);                       
; 1450 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1451 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1453 |                                 for (j = 0; j < 2; j++) {              
; 1454 |                                         if (volt[j] < 0) {             
; 1455 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1456 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1457 |                                         } else {                       
; 1458 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1459 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1461 |                                         if (dsum[0] <= 0) {            
; 1462 |                                                 dacc[j] = 0;           
; 1463 |                                         } else if (dsum[0] >= 0xffff) {
; 1464 |                                                 dacc[j] = 0xffff;      
; 1465 |                                         } else {                       
; 1466 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1469 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1470 |                                         scia_puts(buff);               
; 1471 |                                         cmdbuff[0] = '\0';             
; 1473 |                                         do {                           
; 1474 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1475 |                                                 latch_dac();           
; 1477 |                                                 do {                   
; 1478 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1479 | 
;     |  sizeof(cmdbuff));                                                     
; 1480 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1481 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1483 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1484 |                                                         break;
;     |                  // done                                               
; 1487 |                                                 i = atoi(cmdbuff + 1); 
; 1488 |                                                 if (i == 0) {          
; 1489 |                                                         i = 1;         
; 1492 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1494 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1495 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1496 |                                                         } else {       
; 1497 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1499 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1501 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1502 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1503 |                                                         } else {       
; 1504 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1507 |                                         } while (i);                   
; 1509 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1510 |                                         scia_puts(buff);               
; 1513 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1515 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1516 |                                 cmdbuff[0] = '\0';                     
; 1518 |                                 do {                                   
; 1519 |                                         mcbsp_xmit(dacc[2], ch);       
; 1520 |                                         latch_dac();                   
; 1522 |                                         do {                           
; 1523 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1524 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1525 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1527 |                                         if ('S' == cmdbuff[0]) {       
; 1528 |                                                 break;
;     |          // done                                                       
; 1531 |                                         i = atoi(cmdbuff + 1);         
; 1532 |                                         if (i == 0) {                  
; 1533 |                                                 i = 1;                 
; 1536 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1538 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1539 |                                                         dacc[2] += i;  
; 1540 |                                                 } else {               
; 1541 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1543 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1545 |                                                 if (dacc[2] >= i) {    
; 1546 |                                                         dacc[2] -= i;  
; 1547 |                                                 } else {               
; 1548 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1551 |                                 } while (i);                           
; 1553 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1554 |                                 scia_puts(buff);                       
; 1556 |                                 // do the calculations                 
; 1557 |                                 if (volt[0] < 0) {                     
; 1558 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1559 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1560 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1561 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1562 |                                 } else {                               
; 1563 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1564 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1565 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1566 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1568 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1570 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1572 |                                 sprintf(buff,                          
; 1573 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1574 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1575 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1576 |                                 scia_puts(buff);                       
; 1578 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1579 |                                 break;                                 
; 1581 |                         default:                                       
; 1582 |                                 goto INVALIDCMD;                       
; 1585 |                         unsaved = 1;                                   
; 1586 |                         lcd_clear();                                   
; 1587 |                         update_units();                                
; 1589 |                         DINT;                                          
; 1590 |                         ad7738_setcal();                               
; 1591 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1592 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1593 |                         EINT;                                          
; 1594 |                         break;                                         
; 1596 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1597 |                         // Channel sensor calibration
;     |                                  //                                    
; 1598 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1599 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1601 |                         if (cmdlen < 2) {                              
; 1602 |                                 goto INVALIDCMD;                       
; 1605 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1606 |                                         && 'S' != cmdbuff[1]) {        
; 1607 |                                 goto INVALIDCMD;                       
; 1608 |                                 // invalid calibration method          
; 1610 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1612 |                         lcd_clear();                                   
; 1613 |                         lcd_puts("Sensor Calibration..", 0);           
; 1615 |                         // === read informations ====                  
; 1616 |                         // channel number                              
; 1617 |                         j = CHS_MAX;                                   
; 1618 |                         do {                                           
; 1619 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1620 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1621 |                                 ch = atoi(cmdbuff);                    
; 1622 |                                 scia_puts(cmdbuff);                    
; 1623 |                                 if (ch > 0 && ch <= j) {               
; 1624 |                                         break;
;     |  // valid input channel number                                         
; 1626 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1627 |                         } while (j);                                   
; 1628 |                         scia_puts("\r\n");                             
; 1629 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1631 |                         // sensor number                               
; 1632 |                         j = SENSPCH;                                   
; 1633 |                         do {                                           
; 1634 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1635 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1636 |                                 ss = atoi(cmdbuff);                    
; 1637 |                                 scia_puts(cmdbuff);                    
; 1638 |                                 if (ss > 0 && ss <= j) {               
; 1639 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1641 |                                         break;                         
; 1643 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1644 |                         } while (j);                                   
; 1645 |                         scia_puts("\r\n");                             
; 1646 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1648 |                         // put on the vfd                              
; 1649 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1650 |                         lcd_puts(buff, 20);                            
; 1652 |                         // sensor serial number                        
; 1653 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1654 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1655 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1656 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1658 |                                 cmdlen = j;                            
; 1659 |                                 cmdbuff[j] = '\0';                     
; 1661 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1662 |                         scia_puts(cmdbuff);                            
; 1663 |                         scia_puts("\r\n");                             
; 1665 |                         // sensor label                                
; 1666 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1667 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1668 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1669 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1671 |                                 cmdlen = j;                            
; 1672 |                                 cmdbuff[j] = '\0';                     
; 1674 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1675 |                         scia_puts(cmdbuff);                            
; 1676 |                         scia_puts("\r\n");                             
; 1678 |                         // unit                                        
; 1679 |                         for (j = 0; j < 7; j++) {                      
; 1680 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1682 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1683 |                         scia_puts(buff);                               
; 1684 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1685 |                                         sizeof(cmdbuff));              
; 1686 |                         tsensor.unit = atoi(cmdbuff);                  
; 1688 |                         switch (tsensor.unit) {                        
; 1689 |                         case 0:                                 // lb  
; 1690 |                         case 1:                                 // kg  
; 1691 |                                 tsensor.unit |= 0x10;                  
; 1692 |                                 break;                                 
; 1693 |                         case 2:                                 // in  
; 1694 |                         case 3:                                 // cm  
; 1695 |                         case 4:                                 // mm  
; 1696 |                                 tsensor.unit |= 0x20;                  
; 1697 |                                 break;                                 
; 1698 |                         case 5:                                 // ps  
; 1699 |                                 tsensor.unit |= 0x30;                  
; 1700 |                                 break;                                 
; 1701 |                         case 6:                                 // nm  
; 1702 |                                 tsensor.unit |= 0x40;                  
; 1703 |                                 break;                                 
; 1704 |                         case 7:                                        
; 1705 |                         case 8:                                        
; 1706 |                         case 15:                                       
; 1707 |                                 tsensor.unit |= 0xf0;                  
; 1708 |                                 break;                                 
; 1709 |                         default:                                       
; 1710 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1711 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1712 |                                 break;                                 
; 1714 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1715 |                         tsensor.ufactor = 1;                    // 1:1 
; 1717 |                         scia_puts(cmdbuff);                            
; 1718 |                         scia_puts("\r\n");                             
; 1720 |                         // range                                       
; 1721 |                         j = 1;                                         
; 1722 |                         do {                                           
; 1723 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1724 |                                 tsensor.range = atof(cmdbuff);         
; 1725 |                                 if (tsensor.range != 0) {              
; 1726 |                                         break;                         
; 1728 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1729 |                         } while (j);                                   
; 1730 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1731 |                         scia_puts(cmdbuff);                            
; 1732 |                         scia_puts("\r\n");                             
; 1734 |                         tsensor.tagid = tagid(ch);                     
; 1736 |                         if (tsensor.tagid == 0) {                      
; 1737 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1738 |                         } else {                                       
; 1739 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1741 |                         scia_puts(buff);                               
; 1743 |                         switch (cmethod)
;     |  // on method code                                                     
; 1746 |                         case 'V':
;     |  // mv/v cal                                                           
; 1748 |                                 lcd_puts("Method: mv/v", 40);          
; 1750 |                                 tsensor.method = MD_RUN_MVV;           
; 1751 |                                 tsensor.points = 1;                    
; 1753 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1754 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1755 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1756 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1757 |                                 if (tsensor.slope[0] == 0) {           
; 1758 |                                         tsensor.slope[0] = 1;          
; 1760 |                                 scia_puts(cmdbuff);                    
; 1761 |                                 scia_puts("\r\n");                     
; 1763 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1764 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1766 |                                 scia_puts("Reading ... ");             
; 1768 |                                 dsum[0] = 0;                           
; 1769 |                                 sampcnt = CAL_SAMPLES;                 
; 1770 |                                 while (sampcnt--) {                    
; 1771 |                                         while (0 == ad7738_rawrdy()) { 
; 1772 |                                                 delay_us(1);
;     |          // wait                                                       
; 1775 |                                         cntp = ad7738_getraw();        
; 1776 |                                         dsum[0] += cntp->adc[ch];      
; 1778 |                                 scia_puts("done\r\n");                 
; 1780 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1781 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1782 |                                 break;                                 
; 1784 |                         case 'M':
;     |  // mass cal                                                           
; 1786 |                                 tsensor.method = MD_RUN_MAS;           
; 1788 |                                 // calibration points for mass cal only
; 1789 |                                 j = PNT_MAX;                           
; 1790 |                                 do {                                   
; 1791 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1792 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1793 |                                         tsensor.points = atoi(cmdbuff);
; 1794 |                                         scia_puts(cmdbuff);            
; 1795 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1796 |                                                 break;                 
; 1798 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1800 |                                 } while (j);                           
; 1801 |                                 scia_puts("\r\n");                     
; 1803 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1804 |                                 lcd_puts(buff, 40);                    
; 1806 |                                 // calculate the default point values  
; 1807 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1808 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1809 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1812 |                                 // read in value with default provided 
; 1813 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1814 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1815 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1816 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1818 |                                         // zero length response set the
;     |  default                                                               
; 1819 |                                         if (cmdlen > 0) {              
; 1820 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1822 |                                         scia_puts(cmdbuff);            
; 1823 |                                         scia_puts("\r\n");             
; 1826 |                                 // TODO: sort the list of points       
; 1828 |                                 // read adc count for each point       
; 1829 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1830 |                                         sprintf(buff,                  
; 1831 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1832 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1833 |                                                         j + 1);        
; 1834 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1835 |                                         scia_puts("Reading ... ");     
; 1837 |                                         dsum[0] = 0;                   
; 1838 |                                         sampcnt = CAL_SAMPLES;         
; 1839 |                                         while (sampcnt--) {            
; 1840 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1841 |                                                         delay_us(1);
;     |                  // wait                                               
; 1844 |                                                 cntp = ad7738_getraw();
; 1845 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1847 |                                         scia_puts("done\r\n");         
; 1848 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1851 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1852 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1853 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1854 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1855 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1856 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1857 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1858 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1859 | 
;     |  * tsensor.adc[j];                                                     
; 1861 |                                 break;                                 
; 1863 |                         case 'S':
;     |  // shunt cal                                                          
; 1865 |                                 lcd_puts("Method: shunt", 40);         
; 1867 |                                 tsensor.method = MD_RUN_SHT;           
; 1868 |                                 tsensor.points = 1;                    
; 1870 |                                 sprintf(buff,                          
; 1871 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1872 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1873 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1874 |                                 scia_puts(cmdbuff);                    
; 1875 |                                 scale = atof(cmdbuff);                 
; 1876 |                                 if (scale == 0) {                      
; 1877 |                                         scale = 1.46;                  
; 1878 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1880 |                                 scia_puts("\r\n");                     
; 1882 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1883 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1885 |                                 scia_puts("Reading ... ");             
; 1887 |                                 for (j = 0; j < 2; j++) {              
; 1888 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1890 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1891 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1892 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1894 |                                                 DINT;                  
; 1895 |                                                 maf_rst();             
; 1896 |                                                 EINT;                  
; 1897 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1900 |                                         dsum[j] = 0;                   
; 1901 |                                         sampcnt = CAL_SAMPLES;         
; 1902 |                                         while (sampcnt--) {            
; 1903 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1904 |                                                         delay_us(1);
;     |                  // wait                                               
; 1907 |                                                 cntp = ad7738_getraw();
; 1908 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1912 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1913 |                                 DINT;                                  
; 1914 |                                 maf_rst();                             
; 1915 |                                 EINT;                                  
; 1917 |                                 scia_puts("done\r\n");                 
; 1919 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1920 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1921 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1922 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1923 |                                 break;                                 
; 1925 |                         default:                                       
; 1926 |                                 lcd_clear();                           
; 1927 |                                 update_units();                        
; 1928 |                                 goto INVALIDCMD;                       
; 1931 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1932 |                         scia_getparam(                                 
; 1933 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1934 |                                         cmdbuff, sizeof(cmdbuff));     
; 1935 |                         scia_puts("Reading ... ");                     
; 1937 |                         for (j = 0; j < 2; j++) {                      
; 1938 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1940 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1941 |                                         for (i = 0; i < 50; i++) {     
; 1942 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1944 |                                         DINT;                          
; 1945 |                                         maf_rst();                     
; 1946 |                                         EINT;                          
; 1947 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1950 |                                 dsum[j] = 0;                           
; 1951 |                                 sampcnt = CAL_SAMPLES;                 
; 1952 |                                 while (sampcnt--) {                    
; 1953 |                                         while (0 == ad7738_rawrdy()) { 
; 1954 |                                                 delay_us(1);
;     |          // wait                                                       
; 1957 |                                         cntp = ad7738_getraw();        
; 1958 |                                         dsum[j] += cntp->adc[ch];      
; 1960 |                                 dsum[j] /= CAL_SAMPLES;                
; 1962 |                                 pt = 0;                                
; 1963 |                                 if (tsensor.points > 2) {              
; 1964 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 1965 |                                                 pt++;                  
; 1968 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 1969 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 1972 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 1973 |                         DINT;                                          
; 1974 |                         maf_rst();                                     
; 1975 |                         EINT;                                          
; 1977 |                         scia_puts("done\r\n");                         
; 1979 |                         tsensor.shunt = volt[1] - volt[0];             
; 1981 |                         // setup some other members of the structure   
; 1982 |                         tsensor.tare = 0;                              
; 1983 |                         tsensor.dacgain = 1;                           
; 1984 |                         tsensor.dacoff = 0;                            
; 1985 |                         tsensor.ch = ch;                               
; 1987 |                         DINT;                                          
; 1988 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 1989 |                                         sizeof(sconf_t));              
; 1991 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 1993 |                         ad7738_setcal();                               
; 1994 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1995 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1996 |                         EINT;                                          
; 1998 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 1999 |                                         ch + 1, ss + 1);               
; 2000 |                         scia_puts(buff);                               
; 2001 |                         print_sensor(ss);                              
; 2003 |                         unsaved = 1;                                   
; 2004 |                         lcd_clear();                                   
; 2005 |                         update_units();                                
; 2006 |                         break;                                         
; 2008 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2009 |                         // sensor config commands
;     |                                          //                            
; 2010 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2011 |                 case 'S':                               // sensor      
; 2013 |                         if (cmdlen < 2) {                              
; 2014 |                                 goto INVALIDCMD;                       
; 2017 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2018 |                                         && 'D' != cmdbuff[1]) {        
; 2019 |                                 goto INVALIDCMD;                       
; 2020 |                                 // invalid command                     
; 2022 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2042 |                         // sensor number                               
; 2043 |                         j = SENSPCH;                                   
; 2044 |                         do {                                           
; 2045 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2046 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2047 |                                 ss = atoi(cmdbuff);                    
; 2048 |                                 scia_puts(cmdbuff);                    
; 2049 |                                 if (ss > 0 && ss <= j) {               
; 2050 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2052 |                                         break;                         
; 2054 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2055 |                         } while (j);                                   
; 2056 |                         scia_puts("\r\n");                             
; 2057 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2059 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2062 |                         case 'N':
;     |  // change sensor label                                                
; 2064 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2065 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2066 |                                                 ss + 1, j);            
; 2067 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2068 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2070 |                                         cmdlen = j;                    
; 2071 |                                         cmdbuff[j] = '\0';             
; 2073 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2074 |                                                 cmdlen + 1);           
; 2075 |                                 scia_puts(cmdbuff);                    
; 2076 |                                 scia_puts("\r\n");                     
; 2077 |                                 unsaved = 1;                           
; 2079 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2080 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2081 |                                 scia_puts(buff);                       
; 2082 |                                 break;                                 
; 2084 |                         case 'U':
;     |  // change the output unit                                             
; 2086 |                                 scale = 0;                             
; 2088 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2089 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2091 |                                         do {                           
; 2092 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2093 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2094 |                                                 j = atoi(cmdbuff);     
; 2095 |                                                 scia_puts(cmdbuff);    
; 2096 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2097 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2099 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2100 |                                         scia_puts("\r\n");             
; 2102 |                                         switch (j) {                   
; 2103 |                                         case 0:                        
; 2104 |                                                 scale = 1;             
; 2105 |                                                 j |= 0x10;             
; 2106 |                                                 break;                 
; 2107 |                                         case 1:                        
; 2108 |                                                 scale = LB_TO_KG;      
; 2109 |                                                 j |= 0x10;             
; 2110 |                                                 break;                 
; 2111 |                                         case 7:                        
; 2112 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2113 |                                                 j |= 0xf0;             
; 2114 |                                                 break;                 
; 2116 |                                         break;                         
; 2118 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2120 |                                         do {                           
; 2121 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2122 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2123 |                                                 j = atoi(cmdbuff);     
; 2124 |                                                 scia_puts(cmdbuff);    
; 2125 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2126 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2128 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2129 |                                         scia_puts("\r\n");             
; 2131 |                                         switch (j) {                   
; 2132 |                                         case 0:                        
; 2133 |                                                 scale = 1.0 / LB_TO_KG;
; 2134 |                                                 j |= 0x10;             
; 2135 |                                                 break;                 
; 2136 |                                         case 1:                        
; 2137 |                                                 scale = 1;             
; 2138 |                                                 j |= 0x10;             
; 2139 |                                                 break;                 
; 2140 |                                         case 7:                        
; 2141 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2142 |                                                 j |= 0xf0;             
; 2143 |                                                 break;                 
; 2145 |                                         break;                         
; 2147 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2149 |                                         do {                           
; 2150 |                                                 scia_getparam(         
; 2151 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2152 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2153 |                                                 j = atoi(cmdbuff);     
; 2154 |                                                 scia_puts(cmdbuff);    
; 2155 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2156 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2158 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2159 |                                         scia_puts("\r\n");             
; 2161 |                                         switch (j) {                   
; 2162 |                                         case 2:                        
; 2163 |                                                 scale = 1;             
; 2164 |                                                 j |= 0x20;             
; 2165 |                                                 break;                 
; 2166 |                                         case 3:                        
; 2167 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2168 |                                                 j |= 0x20;             
; 2169 |                                                 break;                 
; 2170 |                                         case 4:                        
; 2171 |                                                 scale = IN_TO_MM;      
; 2172 |                                                 j |= 0x20;             
; 2173 |                                                 break;                 
; 2174 |                                         case 7:                        
; 2175 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2176 |                                                 j |= 0xf0;             
; 2177 |                                                 break;                 
; 2179 |                                         break;                         
; 2181 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2183 |                                         do {                           
; 2184 |                                                 scia_getparam(         
; 2185 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2186 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2187 |                                                 j = atoi(cmdbuff);     
; 2188 |                                                 scia_puts(cmdbuff);    
; 2189 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2190 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2192 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2193 |                                         scia_puts("\r\n");             
; 2195 |                                         switch (j) {                   
; 2196 |                                         case 2:                        
; 2197 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2198 |                                                 j |= 0x20;             
; 2199 |                                                 break;                 
; 2200 |                                         case 3:                        
; 2201 |                                                 scale = 1;             
; 2202 |                                                 j |= 0x20;             
; 2203 |                                                 break;                 
; 2204 |                                         case 4:                        
; 2205 |                                                 scale = 10;            
; 2206 |                                                 j |= 0x20;             
; 2207 |                                                 break;                 
; 2208 |                                         case 7:                        
; 2209 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2210 |                                                 j |= 0xf0;             
; 2211 |                                                 break;                 
; 2213 |                                         break;                         
; 2215 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2217 |                                         do {                           
; 2218 |                                                 scia_getparam(         
; 2219 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2220 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2221 |                                                 j = atoi(cmdbuff);     
; 2222 |                                                 scia_puts(cmdbuff);    
; 2223 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2224 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2226 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2227 |                                         scia_puts("\r\n");             
; 2229 |                                         switch (j) {                   
; 2230 |                                         case 2:                        
; 2231 |                                                 scale = 1.0 / IN_TO_MM;
; 2232 |                                                 j |= 0x20;             
; 2233 |                                                 break;                 
; 2234 |                                         case 3:                        
; 2235 |                                                 scale = 0.1;           
; 2236 |                                                 j |= 0x20;             
; 2237 |                                                 break;                 
; 2238 |                                         case 4:                        
; 2239 |                                                 scale = 1;             
; 2240 |                                                 j |= 0x20;             
; 2241 |                                                 break;                 
; 2242 |                                         case 7:                        
; 2243 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2244 |                                                 j |= 0xf0;             
; 2245 |                                                 break;                 
; 2247 |                                         break;                         
; 2249 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2251 |                                         do {                           
; 2252 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2253 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2254 |                                                 j = atoi(cmdbuff);     
; 2255 |                                                 scia_puts(cmdbuff);    
; 2256 |                                                 if (j != 5 && j != 7) {
; 2257 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2259 |                                         } while (j != 5 && j != 7);    
; 2260 |                                         scia_puts("\r\n");             
; 2262 |                                         switch (j) {                   
; 2263 |                                         case 5:                        
; 2264 |                                                 scale = 1;             
; 2265 |                                                 j |= 0x30;             
; 2266 |                                                 break;                 
; 2267 |                                         case 7:                        
; 2268 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2269 |                                                 j |= 0xf0;             
; 2270 |                                                 break;                 
; 2272 |                                         break;                         
; 2274 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2276 |                                         do {                           
; 2277 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2278 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2279 |                                                 j = atoi(cmdbuff);     
; 2280 |                                                 scia_puts(cmdbuff);    
; 2281 |                                                 if (j != 6 && j != 7) {
; 2282 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2284 |                                         } while (j != 6 && j != 7);    
; 2285 |                                         scia_puts("\r\n");             
; 2287 |                                         switch (j) {                   
; 2288 |                                         case 6:                        
; 2289 |                                                 scale = 1;             
; 2290 |                                                 j |= 0x40;             
; 2291 |                                                 break;                 
; 2292 |                                         case 7:                        
; 2293 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2294 |                                                 j |= 0xf0;             
; 2295 |                                                 break;                 
; 2297 |                                         break;                         
; 2299 |                                 default:                               
; 2300 |                                         break;                         
; 2303 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2304 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2305 |                                         break;                         
; 2308 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2309 |                                         scia_puts(                     
; 2310 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2311 |                                         break;                         
; 2314 |                                 conf_data.sensor[ss].ounit = j;        
; 2315 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2316 |                                 unsaved = 1;                           
; 2318 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2319 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2320 |                                 scia_puts(buff);                       
; 2322 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2323 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2324 |                                                 update_units();        
; 2325 |                                                 DINT;                  
; 2326 |                                                 ad7738_setcal();       
; 2327 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2328 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2329 |                                                 EINT;                  
; 2332 |                                 break;                                 
; 2334 |                         case 'B':
;     |  // change percent base                                                
; 2336 |                                 // base                                
; 2337 |                                 j = 1;                                 
; 2338 |                                 do {                                   
; 2339 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2340 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2341 |                                         scale = atof(cmdbuff);         
; 2342 |                                         scia_puts(cmdbuff);            
; 2343 |                                         if (scale != 0) {              
; 2344 |                                                 break;                 
; 2346 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2347 |                                 } while (j);                           
; 2348 |                                 scia_puts("\r\n");                     
; 2349 |                                 conf_data.sensor[ss].base = scale;     
; 2350 |                                 unsaved = 1;                           
; 2352 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2353 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2354 |                                 scia_puts(buff);                       
; 2356 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2357 |                                         // output unit is percent      
; 2358 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2359 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2361 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2362 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2363 |                                                         // changed is f
;     | or the current sensor                                                  
; 2364 |                                                         DINT;          
; 2365 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2366 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2367 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2368 |                                                         EINT;          
; 2372 |                                 break;                                 
; 2374 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2376 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2377 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2378 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2379 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2380 |                                 scia_puts(cmdbuff);                    
; 2381 |                                 scia_puts("\r\n");                     
; 2383 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2384 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2385 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2386 |                                 scia_puts(cmdbuff);                    
; 2387 |                                 scia_puts("\r\n");                     
; 2388 |                                 unsaved = 1;                           
; 2390 |                                 sprintf(buff,                          
; 2391 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2392 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2393 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2394 |                                 scia_puts(buff);                       
; 2396 |                                 DINT;                                  
; 2397 |                                 ad7738_setcal();                       
; 2398 |                                 EINT;                                  
; 2399 |                                 break;                                 
; 2401 |                         default:                                       
; 2402 |                                 goto INVALIDCMD;                       
; 2405 |                         break;                                         
; 2407 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2408 |                         // Encoder config commands
;     |                                  //                                    
; 2409 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2410 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2412 |                         if (cmdlen < 2) {                              
; 2413 |                                 goto INVALIDCMD;                       
; 2416 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2419 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2421 |                                 j = MAF_MAX;                           
; 2422 |                                 do {                                   
; 2423 |                                         sprintf(buff,                  
; 2424 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2425 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2426 |                                         i = atoi(cmdbuff);             
; 2427 |                                         scia_puts(cmdbuff);            
; 2428 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2429 |                                                 break;
;     |          // valid number input                                         
; 2431 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2432 |                                 } while (j);                           
; 2433 |                                 scia_puts("\r\n");                     
; 2435 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2436 |                                                 i);                    
; 2437 |                                 scia_puts(buff);                       
; 2438 |                                 unsaved = 1;                           
; 2440 |                                 // update new value                    
; 2441 |                                 DINT;                                  
; 2442 |                                 conf_data.velfilter = i;               
; 2443 |                                 ad7738_setcal();                       
; 2444 |                                 velf_rst();                            
; 2445 |                                 EINT;                                  
; 2446 |                                 break;                                 
; 2448 |                         case 'P':
;     |  // count per inch                                                     
; 2450 |                                 // channel number                      
; 2451 |                                 j = ENC_MAX;                           
; 2452 |                                 do {                                   
; 2453 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2454 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2455 |                                         ss = atoi(cmdbuff);            
; 2456 |                                         scia_puts(cmdbuff);            
; 2457 |                                         if (ss > 0 && ss <= j) {       
; 2458 |                                                 break;
;     |          // valid input line number                                    
; 2460 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2461 |                                 } while (j);                           
; 2462 |                                 scia_puts("\r\n");                     
; 2463 |                                 ss--;
;     |  // line number, convert to index                                      
; 2465 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2466 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2467 |                                 templg = atol(cmdbuff);                
; 2468 |                                 scia_puts(cmdbuff);                    
; 2469 |                                 scia_puts("\r\n");                     
; 2470 |                                 if (templg == 0) {                     
; 2471 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2472 |                                         break;                         
; 2474 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2475 |                                                 ss + 1, templg);       
; 2476 |                                 scia_puts(buff);                       
; 2477 |                                 unsaved = 1;                           
; 2479 |                                 // update new value                    
; 2480 |                                 DINT;                                  
; 2481 |                                 conf_data.cntperin[ss] = templg;       
; 2482 |                                 ad7738_setcal();                       
; 2483 |                                 velf_rst();                            
; 2484 |                                 EINT;                                  
; 2485 |                                 break;                                 
; 2487 |                         break;                                         
; 2489 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2490 |                         // Display command
;     |                                  //                                    
; 2491 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2492 |                 case 'D':                                              
; 2494 |                         if (cmdlen < 2) {                              
; 2495 |                                 goto INVALIDCMD;                       
; 2498 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2500 |                         case 'S':
;     |  // selection                                                          
; 2502 |                                 // line number                         
; 2503 |                                 j = VFD_MAX;                           
; 2504 |                                 do {                                   
; 2505 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2506 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2507 |                                         ss = atoi(cmdbuff);            
; 2508 |                                         scia_puts(cmdbuff);            
; 2509 |                                         if (ss > 0 && ss <= j) {       
; 2510 |                                                 break;
;     |          // valid input line number                                    
; 2512 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2513 |                                 } while (j);                           
; 2514 |                                 scia_puts("\r\n");                     
; 2515 |                                 ss--;
;     |  // line number, convert to index                                      
; 2517 |                                 // what                                
; 2518 |                                 for (j = 0; j < 7; j++) {              
; 2519 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2520 |                                         scia_puts(buff);               
; 2521 |                                         if (j < 6) {                   
; 2522 |                                                 scia_puts(", ");       
; 2525 |                                 scia_puts("\r\n");                     
; 2526 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2527 |                                                 ss + 1);               
; 2528 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2529 |                                 pt = atoi(cmdbuff);                    
; 2530 |                                 if (pt >= 7) {                         
; 2531 |                                         pt = 0;                        
; 2532 |                                         scia_puts(                     
; 2533 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2535 |                                 scia_puts(cmdbuff);                    
; 2536 |                                 scia_puts("\r\n");                     
; 2537 |                                 conf_data.vfd[ss].what = pt;           
; 2539 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2541 |                                 case VFD_LOAD:                         
; 2542 |                                 case VFD_PEAK:                         
; 2543 |                                 case VFD_VALL:                         
; 2545 |                                         j = CHS_MAX;                   
; 2546 |                                         goto VFD_CHANNEL;              
; 2548 |                                 case VFD_POSI:                         
; 2549 |                                 case VFD_VELO:                         
; 2551 |                                         j = ENC_MAX;                   
; 2553 |                                         VFD_CHANNEL:                   
; 2554 |                                         // channel number              
; 2555 |                                         do {                           
; 2556 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2557 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2558 |                                                 ch = atoi(cmdbuff);    
; 2559 |                                                 scia_puts(cmdbuff);    
; 2560 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2561 |                                                         break;
;     |          // valid input channel number                                 
; 2563 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2564 |                                         } while (j);                   
; 2565 |                                         scia_puts("\r\n");             
; 2566 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2567 |                                         conf_data.vfd[ss].ch = ch;     
; 2569 |                                         // digits after decimal point  
; 2570 |                                         j = 1;                         
; 2571 |                                         do {                           
; 2572 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2573 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2574 |                                                 i = atoi(cmdbuff);     
; 2575 |                                                 if (i >= 0 && i <= 5) {
; 2576 |                                                         break;         
; 2578 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2579 |                                         } while (j);                   
; 2580 |                                         scia_puts(cmdbuff);            
; 2581 |                                         scia_puts("\r\n");             
; 2582 |                                         conf_data.vfd[ss].adec = i;    
; 2584 |                                         sprintf(buff,                  
; 2585 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2586 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2587 |                                         scia_puts(buff);               
; 2588 |                                         break;                         
; 2590 |                                 case VFD_LIMIT:                        
; 2591 |                                         // channel number              
; 2592 |                                         j = CHS_MAX;                   
; 2593 |                                         do {                           
; 2594 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2595 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2596 |                                                 ch = atoi(cmdbuff);    
; 2597 |                                                 scia_puts(cmdbuff);    
; 2598 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2599 |                                                         break;
;     |          // valid input channel number                                 
; 2601 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2602 |                                         } while (j);                   
; 2603 |                                         scia_puts("\r\n");             
; 2604 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2605 |                                         conf_data.vfd[ss].ch = ch;     
; 2607 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2608 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2609 |                                         scia_puts(buff);               
; 2610 |                                         break;                         
; 2611 |                                 case VFD_TEMP:                         
; 2612 |                                         // no more info                
; 2613 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2614 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2615 |                                         scia_puts(buff);               
; 2616 |                                         break;                         
; 2619 |                                 lcd_clear();                           
; 2620 |                                 update_units();                        
; 2621 |                                 unsaved = 1;                           
; 2622 |                                 break;                                 
; 2624 |                         default:                                       
; 2625 |                                 goto INVALIDCMD;                       
; 2628 |                         break;                                         
; 2630 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2631 |                         // DAC out command
;     |                                  //                                    
; 2632 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2633 |                 case 'O':                                              
; 2635 |                         if (cmdlen < 2) {                              
; 2636 |                                 goto INVALIDCMD;                       
; 2639 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2641 |                         case 'S':
;     |  // selection                                                          
; 2643 |                                 // DAC channel number                  
; 2644 |                                 j = DAC_MAX;                           
; 2645 |                                 do {                                   
; 2646 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2647 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2648 |                                         ss = atoi(cmdbuff);            
; 2649 |                                         scia_puts(cmdbuff);            
; 2650 |                                         if (ss > 0 && ss <= j) {       
; 2651 |                                                 break;
;     |          // valid input channel number                                 
; 2653 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2654 |                                 } while (j);                           
; 2655 |                                 scia_puts("\r\n");                     
; 2656 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2658 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2659 |                                 for (j = 0; j < 5; j++) {              
; 2660 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2661 |                                         scia_puts(buff);               
; 2662 |                                         scia_puts(", ");               
; 2664 |                                 j = 7;                                 
; 2665 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2666 |                                 scia_puts(buff);                       
; 2667 |                                 scia_puts("\r\n");                     
; 2668 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2669 |                                                 ss + 1);               
; 2670 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2671 |                                 pt = atoi(cmdbuff);                    
; 2672 |                                 if (pt >= 5 && pt != 7) {              
; 2673 |                                         pt = 0;                        
; 2674 |                                         scia_puts(                     
; 2675 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2677 |                                 scia_puts(cmdbuff);                    
; 2678 |                                 scia_puts("\r\n");                     
; 2679 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2681 |                                 if ( VFD_VOLT != pt) {                 
; 2683 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2684 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2685 |                                                 j = CHS_MAX;           
; 2686 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2687 |                                                 j = ENC_MAX;           
; 2690 |                                         // linked load/... channel numb
;     | er                                                                     
; 2691 |                                         do {                           
; 2692 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2693 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2694 |                                                 ch = atoi(cmdbuff);    
; 2695 |                                                 scia_puts(cmdbuff);    
; 2696 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2697 |                                                         break;
;     |          // valid input channel number                                 
; 2699 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2700 |                                         } while (j);                   
; 2701 |                                         scia_puts("\r\n");             
; 2702 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2703 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2705 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2706 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2707 |                                                 // gain                
; 2708 |                                                 if ( VFD_POSI == pt) { 
; 2709 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2710 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2711 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2713 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2714 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2715 |                                                 scia_puts(cmdbuff);    
; 2716 |                                                 scia_puts("\r\n");     
; 2718 |                                                 // offset              
; 2719 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2720 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2721 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2722 |                                                 scia_puts(cmdbuff);    
; 2723 |                                                 scia_puts("\r\n");     
; 2727 |                                 unsaved = 1;                           
; 2729 |                                 // print result                        
; 2730 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2731 |                                                 LPV[pt]);              
; 2732 |                                 scia_puts(buff);                       
; 2734 |                                 if ( VFD_VOLT == pt) {                 
; 2735 |                                         scia_puts("\r\n");             
; 2736 |                                 } else {                               
; 2737 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2738 |                                         scia_puts(buff);               
; 2740 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2741 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2742 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2743 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2744 |                                                 scia_puts(buff);       
; 2748 |                                 DINT;                                  
; 2749 |                                 ad7738_setcal();                       
; 2750 |                                 EINT;                                  
; 2751 |                                 break;                                 
; 2753 |                         case 'D':
;     |  // direct voltage output                                              
; 2755 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2756 |                                                 || 'V' != cmdbuff[3]) {
; 2757 |                                         goto INVALIDCMD;               
; 2760 |                                 // channel index                       
; 2761 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2762 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2763 |                                         goto INVALIDCMD;               
; 2764 |                                         // invalid channel number      
; 2766 |                                 ss--;
;     |  // change to zero based index                                         
; 2768 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2769 |                                         goto INVALIDCMD;               
; 2770 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2773 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2774 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2775 |                                         goto INVALIDCMD;               
; 2776 |                                         // invalid voltage             
; 2779 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2780 |                                 if (volt[0] < 0) {                     
; 2781 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2782 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2783 |                                 } else {                               
; 2784 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2785 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2788 |                                 if (dsum[0] <= 0) {                    
; 2789 |                                         dacc[0] = 0;                   
; 2790 |                                 } else if (dsum[0] >= 0xffff) {        
; 2791 |                                         dacc[0] = 0xffff;              
; 2792 |                                 } else {                               
; 2793 |                                         dacc[0] = (Uint16) dsum[0];    
; 2796 |                                 mcbsp_xmit(dacc[0], ss);               
; 2797 |                                 latch_dac();                           
; 2799 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2800 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2801 |                                 scia_puts(buff);                       
; 2803 |                                 break;                                 
; 2805 |                         default:                                       
; 2806 |                                 goto INVALIDCMD;                       
; 2809 |                         break;                                         
; 2811 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2812 |                         // LIMIT command
;     |                                          //                            
; 2813 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2814 |                 case 'L':                                              
; 2816 |                         if (cmdlen < 2) {                              
; 2817 |                                 goto INVALIDCMD;                       
; 2820 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2822 |                         case 'S':
;     |  // selection                                                          
; 2824 |                                 // LIMIT channel number                
; 2825 |                                 j = LIM_MAX;                           
; 2826 |                                 do {                                   
; 2827 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2828 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2829 |                                         ss = atoi(cmdbuff);            
; 2830 |                                         scia_puts(cmdbuff);            
; 2831 |                                         if (ss > 0 && ss <= j) {       
; 2832 |                                                 break;
;     |          // valid input channel number                                 
; 2834 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2835 |                                 } while (j);                           
; 2836 |                                 scia_puts("\r\n");                     
; 2837 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2839 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2840 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2841 |                                 scia_puts(cmdbuff);                    
; 2842 |                                 scia_puts("\r\n");                     
; 2844 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2846 |                                         // set on flag                 
; 2847 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2849 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2850 |                                         for (j = 0; j < 5; j++) {      
; 2851 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2852 |                                                 scia_puts(buff);       
; 2853 |                                                 if (j < 4) {           
; 2854 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2857 |                                         scia_puts("\r\n");             
; 2858 |                                         sprintf(buff,                  
; 2859 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2860 |                                                         ss + 1);       
; 2861 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2862 |                                         pt = atoi(cmdbuff);            
; 2863 |                                         if (pt >= 5) {                 
; 2864 |                                                 pt = 0;                
; 2865 |                                                 scia_puts(             
; 2866 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2868 |                                         scia_puts(cmdbuff);            
; 2869 |                                         scia_puts("\r\n");             
; 2870 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2872 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2873 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2874 |                                                 j = CHS_MAX;           
; 2875 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2876 |                                                 j = ENC_MAX;           
; 2879 |                                         // linked load/... channel numb
;     | er                                                                     
; 2880 |                                         do {                           
; 2881 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2882 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2883 |                                                 ch = atoi(cmdbuff);    
; 2884 |                                                 scia_puts(cmdbuff);    
; 2885 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2886 |                                                         break;
;     |          // valid input channel number                                 
; 2888 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2889 |                                         } while (j);                   
; 2890 |                                         scia_puts("\r\n");             
; 2891 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2892 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2894 |                                         // NO/NC                       
; 2895 |                                         scia_getparam(                 
; 2896 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2897 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2898 |                                         scia_puts(cmdbuff);            
; 2899 |                                         scia_puts("\r\n");             
; 2901 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2903 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2904 |                                         } else {                       
; 2905 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2908 |                                         scia_getparam(                 
; 2909 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2910 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2911 |                                         scia_puts(cmdbuff);            
; 2912 |                                         scia_puts("\r\n");             
; 2914 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2916 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2917 |                                         } else {                       
; 2918 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2921 |                                         scia_getparam(                 
; 2922 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2923 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2924 |                                         scia_puts(cmdbuff);            
; 2925 |                                         scia_puts("\r\n");             
; 2927 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2929 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2930 |                                         } else {                       
; 2931 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2934 |                                         // unit (output)               
; 2935 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2936 |                                         case VFD_LOAD:                 
; 2937 |                                         case VFD_PEAK:                 
; 2938 |                                         case VFD_VALL:                 
; 2939 |                                                 ccp =                  
; 2940 |                                                                 UNITS[0
;     | x0f                                                                    
; 2941 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2942 |                                                 break;                 
; 2943 |                                         case VFD_POSI:                 
; 2944 |                                                 ccp = POS_U;           
; 2945 |                                                 break;                 
; 2946 |                                         case VFD_VELO:                 
; 2947 |                                                 ccp = VEL_U;           
; 2948 |                                                 break;                 
; 2951 |                                         // set value                   
; 2952 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2953 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2954 |                                         scia_puts(cmdbuff);            
; 2955 |                                         scia_puts("\r\n");             
; 2957 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 2958 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2959 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2961 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 2962 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2963 |                                         scia_puts(cmdbuff);            
; 2964 |                                         scia_puts("\r\n");             
; 2966 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 2967 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2968 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2969 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 2971 |                                         // print result                
; 2972 |                                         sprintf(buff,                  
; 2973 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 2974 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 2975 |                                         scia_puts(buff);               
; 2977 |                                         sprintf(buff,                  
; 2978 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 2979 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 2980 | 
;     |  "NC" : "NO",                                                          
; 2981 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 2982 | 
;     |  "ON" : "OFF",                                                         
; 2983 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 2984 |                                         scia_puts(buff);               
; 2985 |                                         sprintf(buff,                  
; 2986 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 2987 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 2988 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 2989 |                                         scia_puts(buff);               
; 2991 |                                 } else
;     |  // turn off                                                           
; 2993 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 2994 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 2997 |                                 unsaved = 1;                           
; 2999 |                                 DINT;                                  
; 3000 |                                 ad7738_setcal();                       
; 3001 |                                 EINT;                                  
; 3002 |                                 break;                                 
; 3004 |                         default:                                       
; 3005 |                                 goto INVALIDCMD;                       
; 3008 |                         break;                                         
; 3010 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3011 |                         // reset commands
;     |                                          //                            
; 3012 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3013 |                 case 'R':                                              
; 3015 |                         if (cmdlen < 2) {                              
; 3016 |                                 goto INVALIDCMD;                       
; 3019 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3021 |                         case 'T':
;     |  // tare                                                               
; 3023 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3024 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3025 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3026 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3027 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3028 |                                 } else {                               
; 3029 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3030 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3031 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3033 |                                 break;                                 
; 3035 |                         case 'P':
;     |  // peak                                                               
; 3037 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3038 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3039 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3040 |                                 } else {                               
; 3041 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3043 |                                 break;                                 
; 3045 |                         case 'V':
;     |  // valley                                                             
; 3047 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3048 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3049 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3050 |                                 } else {                               
; 3051 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3053 |                                 break;                                 
; 3055 |                         case 'S':
;     |  // shunt switch                                                       
; 3057 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3058 |                                         shunt_switch(1);               
; 3059 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3060 |                                 } else {                               
; 3061 |                                         shunt_switch(0);               
; 3062 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3064 |                                 break;                                 
; 3066 |                         case 'L':
;     |  // limit                                                              
; 3068 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3069 |                                 ch--;                                  
; 3071 |                                 ad7738_resetlimit(ch);                 
; 3072 |                                 break;                                 
; 3074 |                         case 'I':
;     |  // posItion                                                           
; 3076 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3077 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3078 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3079 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3080 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3081 |                                 } else {                               
; 3082 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3083 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3084 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3086 |                                 break;                                 
; 3088 |                         default:                                       
; 3089 |                                 goto INVALIDCMD;                       
; 3091 |                         break;                                         
; 3093 | #ifdef SDHCCARD                                                        
; 3095 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3096 |                         // Stream to SD Card
;     |                                  //                                    
; 3097 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3098 |                         case 'W':// Write control                      
; 3100 |                         if( cmdlen < 2 )                               
; 3102 |                                 goto INVALIDCMD;                       
; 3105 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3107 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3109 |                                 if( cmdlen < 3 )                       
; 3111 |                                         goto INVALIDCMD;               
; 3114 |                                 if( sd_write )                         
; 3116 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3117 |                                         break;                         
; 3120 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3121 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3123 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3125 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3126 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3128 |                                 if( !res )                             
; 3130 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3131 |                                         if( res || cmdlen != temp16 )  
; 3133 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3134 |                                                 scia_puts( buff );     
; 3135 |                                                 f_close( fp );         
; 3136 |                                                 fp = NULL;             
; 3137 |                                                 break;                 
; 3154 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3156 |                                         if( res )                      
; 3158 |                                                 f_close( fp );         
; 3159 |                                                 fp = NULL;             
; 3160 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3161 |                                                 break;                 
; 3164 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3165 |                                         scia_puts( buff );             
; 3167 |                                         prod_init();                   
; 3168 |                                         sd_write = 1;                  
; 3169 |                                         sd_cnt = 0;                    
; 3170 |                                         break;                         
; 3173 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3174 |                                 scia_puts( buff );                     
; 3175 |                                 break;                                 
; 3177 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3179 |                                 if( sd_write )                         
; 3181 |                                         sd_close = 1;                  
; 3182 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3183 |                                         break;                         
; 3185 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3186 |                                 break;                                 
; 3188 |                                 case 'L':
;     |          // list files                                                 
; 3190 |                                 if( sd_write )                         
; 3192 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3193 |                                         break;                         
; 3196 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3197 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3199 |                                 res = f_opendir(&dir, "0:");           
; 3200 |                                 if (res)                               
; 3202 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3203 |                                         scia_puts( buff );             
; 3204 |                                         break;                         
; 3207 |                                 p1 = s1 = s2 = 0;                      
; 3208 |                                 for(;;)                                
; 3210 |                                         res = f_readdir(&dir, &Finfo); 
; 3211 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3212 |                                         break;                         
; 3213 |                                         if (Finfo.fattrib & AM_DIR)    
; 3215 |                                                 s2++;                  
; 3217 |                                         else                           
; 3219 |                                                 s1++;                  
; 3220 |                                                 p1 += Finfo.fsize;     
; 3222 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3223 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3224 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3225 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3226 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3227 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3228 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3229 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3230 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3231 |                                         scia_puts( buff );             
; 3233 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3234 |                                 scia_puts( buff );                     
; 3235 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3237 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3238 |                                         scia_puts( buff );             
; 3240 |                                 break;                                 
; 3242 |                                 case 'G':
;     |          // get a file                                                 
; 3244 |                                 if( sd_write )                         
; 3246 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3247 |                                         break;                         
; 3250 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3251 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3253 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3255 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3256 |                                 res = f_open( fp, buff, FA_READ );     
; 3257 |                                 if (res)                               
; 3259 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3260 |                                         scia_puts( buff );             
; 3261 |                                         break;                         
; 3264 |                                 do                                     
; 3266 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3267 |                                         scia_send( buff, temp16 );     
; 3268 |                                 }while( !res && temp16 == 512 );       
; 3270 |                                 f_close( fp );                         
; 3271 |                                 fp = NULL;                             
; 3272 |                                 break;                                 
; 3274 |                                 case 'R':
;     |          // remove a file                                              
; 3276 |                                 if( sd_write )                         
; 3278 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3279 |                                         break;                         
; 3282 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3283 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3285 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3287 |                                 res = f_unlink( buff );                
; 3289 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3290 |                                 scia_puts( buff );                     
; 3291 |                                 break;                                 
; 3293 |                                 default:                               
; 3294 |                                 goto INVALIDCMD;                       
; 3297 |                         break;                                         
; 3298 | #endif                                                                 
; 3300 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3301 |                         // Flash memory access commands
;     |                                    //                                  
; 3302 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3303 |                 case 'F':                                       // flas
;     | h access                                                               
; 3305 |                         if (cmdlen < 2) {                              
; 3306 |                                 goto INVALIDCMD;                       
; 3309 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3311 |                         case 'W':
;     |  // write flash                                                        
; 3313 |                                 if (unsaved) {                         
; 3314 |                                         // flash writing               
; 3315 |                                         lcd_clear();                   
; 3316 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3317 |                                         scia_puts("Flash writing..."); 
; 3319 |                                         for (i = 0; i < 50; i++) {     
; 3320 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3323 |                                         DINT;                          
; 3324 |                                         flash_ret = conf_write();      
; 3325 |                                         EINT;                          
; 3327 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3328 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3329 |                                                 unsaved = 0;           
; 3330 |                                         } else {                       
; 3331 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3333 |                                         lcd_clear();                   
; 3334 |                                         update_units();                
; 3335 |                                         break;                         
; 3337 |                                 scia_puts(                             
; 3338 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3339 |                                 break;                                 
; 3341 |                         case 'R':
;     |  // read flash                                                         
; 3343 |                                 // flash reading                       
; 3344 |                                 conf_read();                           
; 3346 |                                 DINT;                                  
; 3347 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3348 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3349 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3350 |                                 EINT;                                  
; 3352 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3353 |                                 unsaved = 0;                           
; 3355 |                                 update_units();                        
; 3357 |                                 break;                                 
; 3359 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3361 |                                 conf_default();                        
; 3363 |                                 // flash writing                       
; 3364 |                                 lcd_clear();                           
; 3365 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3366 |                                 scia_puts("Flash write...");           
; 3368 |                                 for (i = 0; i < 50; i++) {             
; 3369 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3372 |                                 DINT;                                  
; 3373 |                                 flash_ret = conf_write();              
; 3374 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3375 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3376 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3377 |                                 EINT;                                  
; 3379 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3380 |                                         scia_puts(                     
; 3381 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3382 |                                         unsaved = 0;                   
; 3383 |                                 } else {                               
; 3384 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3386 |                                 lcd_clear();                           
; 3387 |                                 update_units();                        
; 3388 |                                 break;                                 
; 3390 |                         default:                                       
; 3391 |                                 goto INVALIDCMD;                       
; 3394 |                         break;                                         
; 3396 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3397 |                         // Help manu
;     |                                  //                                    
; 3398 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3399 |                 case 'H':                               // help menu   
; 3401 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3403 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3404 |                         scia_puts(                                     
; 3405 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3406 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3407 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3408 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3409 |                         scia_puts("\r\n");                             
; 3411 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3412 |                         scia_puts("UN          Set unit name.\r\n");   
; 3413 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3414 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3415 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3416 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3417 |                         scia_puts("\r\n");                             
; 3419 |                         scia_puts(                                     
; 3420 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3421 |                         scia_puts(                                     
; 3422 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3423 |                         scia_puts("\r\n");                             
; 3425 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3426 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3427 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3428 |                         scia_puts("\r\n");                             
; 3430 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3431 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3432 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3433 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3434 |                         scia_puts("\r\n");                             
; 3436 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3437 |                         scia_puts(                                     
; 3438 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3439 |                         scia_puts("\r\n");                             
; 3441 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3442 |                         scia_puts("\r\n");                             
; 3444 |                         scia_puts(                                     
; 3445 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3446 |                         scia_puts(                                     
; 3447 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3448 |                         scia_puts("\r\n");                             
; 3450 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3451 |                         scia_puts("\r\n");                             
; 3453 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3454 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3455 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3456 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3457 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3458 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3459 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3460 |                         scia_puts("\r\n");                             
; 3462 | #ifdef SDHCCARD                                                        
; 3463 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3464 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3465 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3466 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3467 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3468 |                         scia_puts( "\r\n" );                           
; 3469 | #endif                                                                 
; 3471 |                         scia_puts(                                     
; 3472 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3473 |                         scia_puts(                                     
; 3474 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3475 |                         scia_puts(                                     
; 3476 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3477 |                         scia_puts("\r\n");                             
; 3479 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3481 |                         // not implemented                             
; 3482 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3484 |                         scia_puts("\r\n");                             
; 3486 |                         break;                                         
; 3488 |                 case 'X':                                              
; 3490 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3492 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3494 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3497 |                         cmd_mode = SCI_MODE_BIN;                       
; 3498 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3500 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3502 |                         break;                                         
; 3504 |                 case 'Z':                                              
; 3506 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3508 |                         for (i = 0; i < 100; i++)       // 2s          
; 3510 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3513 |                         reboot();                                      
; 3514 |                         break;                                         
; 3538 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3539 |                         // Invalid commands
;     |                                  //                                    
; 3540 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3541 |                 default:                                               
; 3543 |                         INVALIDCMD:                                    
; 3545 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3546 |                         scia_puts(cmdbuff);                            
; 3547 |                         scia_puts("\", ignored.\r\n");                 
; 3548 |                         break;                                         
; 3550 |                 } // switch on 1st byte                                
; 3552 |                 if (unsaved) {                                         
; 3553 |                         scia_puts(                                     
; 3554 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3557 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3558 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3559 |                 // BIN command mode processing
;     |                          //                                            
; 3560 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3562 |                 // ------------------------------------------------    
; 3563 |                 // DEBUG: put received command on LCD                  
; 3572 |                 // ------------------------------------------------    
; 3573 |                 if (cmdlen < 2) {                                      
; 3574 |                         // INVALID COMMAND, less than 2 byte           
; 3575 |                         // may need to send NACK back                  
; 3576 |                         continue;                                      
; 3579 |                 for (i = 0; i < 2; i++) {                              
; 3580 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3583 |                 j = 2;                                  // buff length 
; 3584 |                 bincmdresult = Error_UnImpl;                           
; 3586 |                 // DEBUG, sending the command back                     
; 3587 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3589 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3591 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3594 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3709 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3711 |                 case CheckAddress:                                     
; 3713 |                         buff[j++] = 0;                                 
; 3714 |                         bincmdresult = OK_SendResult;                  
; 3715 |                         break;                                         
; 3717 |                 case SetAddress:                                       
; 3719 |                         buff[j] = cmdbuff[j];                          
; 3720 |                         j++;                                           
; 3721 |                         bincmdresult = OK_SendResult;                  
; 3722 |                         break;                                         
; 3724 |                 case RemoveAddress:                                    
; 3726 |                         buff[j] = cmdbuff[j];                          
; 3727 |                         j++;                                           
; 3728 |                         bincmdresult = OK_SendResult;                  
; 3729 |                         break;                                         
; 3731 |                 case GetUnitInfo:                                      
; 3733 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3734 |                         for (i = 0; i < 2; i++) {                      
; 3735 |                                 buff[j++] = 0xff & *intp;              
; 3736 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3737 |                                 intp++;                                
; 3740 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3741 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3743 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3744 |                         for (i = 0; i < 2; i++) {                      
; 3745 |                                 buff[j++] = 0xff & *intp;              
; 3746 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3747 |                                 intp++;                                
; 3750 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3751 |                         buff[j++] = slen;                              
; 3752 |                         for (i = 0; i < slen; i++) {                   
; 3753 |                                 buff[j++] = conf_data.uname[i]; // name
; 3755 |                         bincmdresult = OK_SendResult;                  
; 3757 |                         break;                                         
; 3759 |                 case SetUnitSN:                                        
; 3761 |                         if (cmdlen < 6) {                              
; 3762 |                                 bincmdresult = Error_Invalid;          
; 3763 |                                 break;                                 
; 3766 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3767 |                         for (i = 0; i < 2; i++) {                      
; 3768 |                                 *intp = cmdbuff[j];                    
; 3769 |                                 buff[j++] = 0xff & *intp;              
; 3770 |                                 *intp += cmdbuff[j] << 8;              
; 3771 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3772 |                                 intp++;                                
; 3774 |                         unsaved = 1;                                   
; 3776 |                         bincmdresult = OK_SendResult;                  
; 3777 |                         break;                                         
; 3779 |                 case SetUnitName:                                      
; 3781 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3782 |                                 bincmdresult = Error_Invalid;          
; 3783 |                                 break;                                 
; 3786 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3787 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3789 |                         conf_data.uname[i] = '\0';                     
; 3790 |                         unsaved = 1;                                   
; 3792 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3793 |                         buff[j++] = slen;                              
; 3794 |                         for (i = 0; i < slen; i++) {                   
; 3795 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3797 |                         bincmdresult = OK_SendResult;                  
; 3798 |                         break;                                         
; 3800 |                 case GetInterface:                                     
; 3802 |                         buff[j++] = conf_data.rxdir;                   
; 3804 |                         if (conf_data.rxdir == SDIR_RS485              
; 3805 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3806 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3807 |                                 for (i = 0; i < 2; i++) {              
; 3808 |                                         buff[j++] = 0xff & *intp;      
; 3809 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3810 |                                         intp++;                        
; 3813 |                         bincmdresult = OK_SendResult;                  
; 3814 |                         break;                                         
; 3816 |                 case SetInterface:                                     
; 3818 |                         if (cmdlen < 3) {                              
; 3819 |                                 bincmdresult = Error_Invalid;          
; 3820 |                                 break;                                 
; 3822 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3823 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3824 |                                 bincmdresult = Error_Invalid;          
; 3825 |                                 break;                                 
; 3828 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3829 |                                 if (cmdlen < 7) {                      
; 3830 |                                         bincmdresult = Error_Invalid;  
; 3831 |                                         break;                         
; 3834 |                                 temp32 = 0;                            
; 3835 |                                 for (k = 6; k > 2; k--) {              
; 3836 |                                         temp32 += cmdbuff[k];          
; 3837 |                                         temp32 <<= 8;                  
; 3840 |                                 for (i = 0; i < 8; i++) {              
; 3841 |                                         if (temp32 == BAUD[i]) {       
; 3842 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3843 |                                                 break;                 
; 3846 |                                 if (i == 8) {                          
; 3847 |                                         bincmdresult = Error_Invalid;  
; 3848 |                                         break;                         
; 3852 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3854 |                         while (j < cmdlen) {                           
; 3855 |                                 buff[j] = cmdbuff[j];                  
; 3856 |                                 j++;                                   
; 3858 |                         unsaved = 1;                                   
; 3859 |                         bincmdresult = OK_SendResult;                  
; 3860 |                         break;                                         
; 3862 |                 case GetChannel:                                       
; 3864 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3865 |                                 bincmdresult = Error_Invalid;          
; 3866 |                                 break;                                 
; 3868 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3870 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3872 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3874 |                                 buff[j++] = 0;                         
; 3877 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3878 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3880 |                                 buff[j++] = 0xff & *intp;              
; 3881 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3882 |                                 intp++;                                
; 3885 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3886 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3888 |                                 buff[j++] = 0xff & *intp;              
; 3889 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3890 |                                 intp++;                                
; 3893 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3894 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3896 |                                 buff[j++] = 0xff & *intp;              
; 3897 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3898 |                                 intp++;                                
; 3901 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3902 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3904 |                                 buff[j++] = 0xff & *intp;              
; 3905 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3906 |                                 intp++;                                
; 3909 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3910 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3912 |                                 buff[j++] = 0xff & *intp;              
; 3913 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3914 |                                 intp++;                                
; 3917 |                         bincmdresult = OK_SendResult;                  
; 3918 |                         break;                                         
; 3920 |                 case GetSensor:                                        
; 3922 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3923 |                                 bincmdresult = Error_Invalid;          
; 3924 |                                 break;                                 
; 3926 |                         ss = cmdbuff[2];                               
; 3927 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3929 |                         // sensor serial name                          
; 3930 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3931 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3932 |                         for (i = 0; i < slen; i++) {                   
; 3933 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3936 |                         // sensor name/label                           
; 3937 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3938 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3939 |                         for (i = 0; i < slen; i++) {                   
; 3940 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3943 |                         // TAGID                                       
; 3944 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3945 |                         for (i = 0; i < 4; i++) {                      
; 3946 |                                 buff[j++] = 0xff & *intp;              
; 3947 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3948 |                                 intp++;                                
; 3951 |                         // Method                                      
; 3952 |                         buff[j++] = conf_data.sensor[ss].method;       
; 3954 |                         // Date                                        
; 3955 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 3956 |                         for (i = 0; i < 2; i++) {                      
; 3957 |                                 buff[j++] = 0xff & *intp;              
; 3958 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3959 |                                 intp++;                                
; 3962 |                         // Range                                       
; 3963 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 3964 |                         for (i = 0; i < 2; i++) {                      
; 3965 |                                 buff[j++] = 0xff & *intp;              
; 3966 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3967 |                                 intp++;                                
; 3970 |                         // Unit                                        
; 3971 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 3973 |                         // Output Unit                                 
; 3974 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 3976 |                         // Unit Factor                                 
; 3977 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 3978 |                         for (i = 0; i < 2; i++) {                      
; 3979 |                                 buff[j++] = 0xff & *intp;              
; 3980 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3981 |                                 intp++;                                
; 3984 |                         // calibration points.                         
; 3985 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 3986 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 3987 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 3988 |                                         // mass point                  
; 3989 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 3990 |                                         for (i = 0; i < 2; i++) {      
; 3991 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 3992 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 3993 |                                                 intp++;                
; 3995 |                                         // adc counts point            
; 3996 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 3997 |                                         for (i = 0; i < 2; i++) {      
; 3998 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 3999 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4000 |                                                 intp++;                
; 4004 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4005 |                                         // slope point                 
; 4006 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4007 |                                         for (i = 0; i < 2; i++) {      
; 4008 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4009 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4010 |                                                 intp++;                
; 4012 |                                         // intercept point             
; 4013 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4014 |                                         for (i = 0; i < 2; i++) {      
; 4015 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4016 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4017 |                                                 intp++;                
; 4020 |                         } else {                                       
; 4021 |                                 buff[j++] = 0;                         
; 4022 |                                 // slope                               
; 4023 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4024 |                                 for (i = 0; i < 2; i++) {              
; 4025 |                                         buff[j++] = 0xff & *intp;      
; 4026 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4027 |                                         intp++;                        
; 4029 |                                 // intercept                           
; 4030 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4031 |                                 for (i = 0; i < 2; i++) {              
; 4032 |                                         buff[j++] = 0xff & *intp;      
; 4033 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4034 |                                         intp++;                        
; 4038 |                         // shunt                                       
; 4039 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4040 |                         for (i = 0; i < 2; i++) {                      
; 4041 |                                 buff[j++] = 0xff & *intp;              
; 4042 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4043 |                                 intp++;                                
; 4046 |                         // base                                        
; 4047 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4048 |                         for (i = 0; i < 2; i++) {                      
; 4049 |                                 buff[j++] = 0xff & *intp;              
; 4050 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4051 |                                 intp++;                                
; 4054 |                         // DAC calibration gain                        
; 4055 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4056 |                         for (i = 0; i < 2; i++) {                      
; 4057 |                                 buff[j++] = 0xff & *intp;              
; 4058 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4059 |                                 intp++;                                
; 4062 |                         // DAC calibration offset                      
; 4063 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4064 |                         for (i = 0; i < 2; i++) {                      
; 4065 |                                 buff[j++] = 0xff & *intp;              
; 4066 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4067 |                                 intp++;                                
; 4070 |                         // channel calibrated on                       
; 4071 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4073 |                         bincmdresult = OK_SendResult;                  
; 4074 |                         break;                                         
; 4076 |                 case GetQEPChannels:                                   
; 4078 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4079 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4080 |                                 for (i = 0; i < 2; i++) {              
; 4081 |                                         buff[j++] = 0xff & *intp;      
; 4082 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4083 |                                         intp++;                        
; 4087 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4088 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4090 |                         bincmdresult = OK_SendResult;                  
; 4091 |                         break;                                         
; 4093 |                 case GetCurSensor:                                     
; 4095 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4096 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4099 |                         bincmdresult = OK_SendResult;                  
; 4100 |                         break;                                         
; 4102 |                 case GetAFilterSize:                                   
; 4104 |                         // filter size                                 
; 4105 |                         intp = (Uint16*) &conf_data.filter;            
; 4106 |                         buff[j++] = 0xff & *intp;                      
; 4107 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4108 |                         // filter window                               
; 4109 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4110 |                         for (i = 0; i < 2; i++) {                      
; 4111 |                                 buff[j++] = 0xff & *intp;              
; 4112 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4113 |                                 intp++;                                
; 4115 |                         bincmdresult = OK_SendResult;                  
; 4116 |                         break;                                         
; 4118 |                 case GetAutoId:                                        
; 4120 |                         buff[j++] = conf_data.tagiden;                 
; 4121 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4122 |                                 buff[j++] = autoid[i];                 
; 4124 |                         bincmdresult = OK_SendResult;                  
; 4125 |                         break;                                         
; 4127 |                 case GetDisplay:                                       
; 4129 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4130 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4131 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4132 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4134 |                         bincmdresult = OK_SendResult;                  
; 4135 |                         break;                                         
; 4137 |                 case GetDAC:                                           
; 4139 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4140 |                                 buff[j++] = conf_data.dac[i].what;     
; 4141 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4143 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4144 |                                 //{                                    
; 4145 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4146 |                                 //}                                    
; 4147 |                                 //else                                 
; 4148 |                                 //{                                    
; 4149 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4150 |                                 //}                                    
; 4151 |                                 for (k = 0; k < 2; k++) {              
; 4152 |                                         buff[j++] = 0xff & *intp;      
; 4153 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4154 |                                         intp++;                        
; 4156 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4157 |                                 //{                                    
; 4158 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4159 |                                 //}                                    
; 4160 |                                 //else                                 
; 4161 |                                 //{                                    
; 4162 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4163 |                                 //}                                    
; 4164 |                                 for (k = 0; k < 2; k++) {              
; 4165 |                                         buff[j++] = 0xff & *intp;      
; 4166 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4167 |                                         intp++;                        
; 4169 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4170 |                                 for (k = 0; k < 2; k++) {              
; 4171 |                                         buff[j++] = 0xff & *intp;      
; 4172 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4173 |                                         intp++;                        
; 4175 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4176 |                                 for (k = 0; k < 2; k++) {              
; 4177 |                                         buff[j++] = 0xff & *intp;      
; 4178 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4179 |                                         intp++;                        
; 4181 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4182 |                                 for (k = 0; k < 2; k++) {              
; 4183 |                                         buff[j++] = 0xff & *intp;      
; 4184 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4185 |                                         intp++;                        
; 4188 |                         bincmdresult = OK_SendResult;                  
; 4189 |                         break;                                         
; 4191 |                 case GetLIMIT:                                         
; 4193 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4194 |                                 buff[j++] = conf_data.lim[i].what;     
; 4195 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4196 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4198 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4199 |                                 for (k = 0; k < 2; k++) {              
; 4200 |                                         buff[j++] = 0xff & *intp;      
; 4201 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4202 |                                         intp++;                        
; 4204 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4205 |                                 for (k = 0; k < 2; k++) {              
; 4206 |                                         buff[j++] = 0xff & *intp;      
; 4207 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4208 |                                         intp++;                        
; 4211 |                         bincmdresult = OK_SendResult;                  
; 4212 |                         break;                                         
; 4214 |                 case GetLIMITStatus:                                   
; 4216 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4217 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4219 |                         bincmdresult = OK_SendResult;                  
; 4220 |                         break;                                         
; 4222 |                         // Heat Cal commands.                          
; 4223 |                 case GetTCLoadA:                                       
; 4224 |                 case GetTCLoadB:                                       
; 4225 |                 case GetTCLoadC:                                       
; 4226 |                 case GetTCLoadD:                                       
; 4228 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4229 |                         intp = (Uint16*) &temp16;                      
; 4230 |                         buff[j++] = 0xff & *intp;                      
; 4231 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4233 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4234 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4235 |                         intp = (Uint16*) &templg;                      
; 4236 |                         for (i = 0; i < 2; i++) {                      
; 4237 |                                 buff[j++] = 0xff & *intp;              
; 4238 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4239 |                                 intp++;                                
; 4241 |                         bincmdresult = OK_SendResult;                  
; 4242 |                         break;                                         
; 4244 |                 case GetTCTemp:                                        
; 4246 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4247 |                         intp = (Uint16*) &temp16;                      
; 4248 |                         buff[j++] = 0xff & *intp;                      
; 4249 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4250 |                         bincmdresult = OK_SendResult;                  
; 4251 |                         break;                                         
; 4253 |                 case GetTCStatus:                                      
; 4255 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4256 |                         for (i = 0; i < 2; i++) {                      
; 4257 |                                 buff[j++] = 0xff & *intp;              
; 4258 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4259 |                                 intp++;                                
; 4262 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4263 |                                 temp16 = 0x80;                         
; 4264 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4265 |                                         temp16 |= 0x01;                
; 4267 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4268 |                                         temp16 |= 0x02;                
; 4270 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4271 |                                         temp16 |= 0x04;                
; 4273 |                                 buff[j++] = 0xff & temp16;             
; 4275 |                         bincmdresult = OK_SendResult;                  
; 4276 |                         break;                                         
; 4278 |                 case GetTCParam:                                       
; 4280 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4281 |                                 bincmdresult = Error_Invalid;          
; 4282 |                                 break;                                 
; 4285 |                         ch = cmdbuff[2];                               
; 4286 |                         buff[j++] = ch;                                
; 4288 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4289 |                         for (k = 0; k < 2; k++) {                      
; 4290 |                                 buff[j++] = 0xff & *intp;              
; 4291 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4292 |                                 intp++;                                
; 4294 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4295 |                         for (k = 0; k < 2; k++) {                      
; 4296 |                                 buff[j++] = 0xff & *intp;              
; 4297 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4298 |                                 intp++;                                
; 4300 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4301 |                         for (k = 0; k < 2; k++) {                      
; 4302 |                                 buff[j++] = 0xff & *intp;              
; 4303 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4304 |                                 intp++;                                
; 4306 |                         bincmdresult = OK_SendResult;                  
; 4307 |                         break;                                         
; 4309 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4310 | #if 1                                                                  
; 4311 |                 case Open_SSR_IN1:                                     
; 4312 |                         ssr_set(0, SSR_OPEN);                          
; 4313 |                         break;                                         
; 4315 |                 case Close_SSR_IN1:                                    
; 4316 |                         ssr_set(0, SSR_CLOSE);                         
; 4317 |                         break;                                         
; 4318 | #endif                                                                 
; 4320 |                 case SetTCParam:                                       
; 4322 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4323 |                                 bincmdresult = Error_Invalid;          
; 4324 |                                 break;                                 
; 4327 |                         ch = cmdbuff[2];                               
; 4328 |                         buff[j++] = ch;                                
; 4330 |                         k = 3;                                         
; 4331 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4332 |                         for (i = 0; i < 2; i++) {                      
; 4333 |                                 *intp = cmdbuff[k++];                  
; 4334 |                                 *intp += cmdbuff[k++] << 8;            
; 4335 |                                 intp++;                                
; 4337 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4338 |                         for (i = 0; i < 2; i++) {                      
; 4339 |                                 *intp = cmdbuff[k++];                  
; 4340 |                                 *intp += cmdbuff[k++] << 8;            
; 4341 |                                 intp++;                                
; 4343 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4344 |                         for (i = 0; i < 2; i++) {                      
; 4345 |                                 *intp = cmdbuff[k++];                  
; 4346 |                                 *intp += cmdbuff[k++] << 8;            
; 4347 |                                 intp++;                                
; 4350 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4351 |                         for (k = 0; k < 2; k++) {                      
; 4352 |                                 buff[j++] = 0xff & *intp;              
; 4353 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4354 |                                 intp++;                                
; 4356 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4357 |                         for (k = 0; k < 2; k++) {                      
; 4358 |                                 buff[j++] = 0xff & *intp;              
; 4359 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4360 |                                 intp++;                                
; 4362 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4363 |                         for (k = 0; k < 2; k++) {                      
; 4364 |                                 buff[j++] = 0xff & *intp;              
; 4365 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4366 |                                 intp++;                                
; 4368 |                         unsaved = 1;                                   
; 4369 |                         bincmdresult = OK_SendResult;                  
; 4370 |                         break;                                         
; 4372 |                 case SetBCalParam:                                     
; 4374 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4375 |                                         || cmdbuff[3] != 2) {          
; 4376 |                                 bincmdresult = Error_Invalid;          
; 4377 |                                 break;                                 
; 4380 |                         ch = cmdbuff[2];                               
; 4381 |                         buff[j++] = ch;                                
; 4382 |                         buff[j] = cmdbuff[j++];                        
; 4384 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4385 |                                 intp = (Uint16*) &volt[k];             
; 4386 |                                 for (i = 0; i < 2; i++) {              
; 4387 |                                         *intp = cmdbuff[j];            
; 4388 |                                         buff[j++] = 0xff & *intp;      
; 4389 |                                         *intp += cmdbuff[j] << 8;      
; 4390 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4391 |                                         intp++;                        
; 4394 |                         bincmdresult = OK_SendResult;                  
; 4395 |                         break;                                         
; 4397 |                 case StartBCRead:                                      
; 4399 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4400 |                                         || cmdbuff[3] >= 2) {          
; 4401 |                                 bincmdresult = Error_Invalid;          
; 4402 |                                 break;                                 
; 4405 |                         k = cmdbuff[3];                                
; 4406 |                         intp = (Uint16*) &tempft;                      
; 4407 |                         for (i = 0; i < 2; i++) {                      
; 4408 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4409 |                                 intp++;                                
; 4411 |                         if (volt[k] != tempft) {                       
; 4412 |                                 bincmdresult = Error_Invalid;          
; 4413 |                                 break;                                 
; 4415 |                         lcd_clear();                                   
; 4416 |                         lcd_puts("Board Calibration...", 0);           
; 4417 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4418 |                         lcd_puts(buff, 20);                            
; 4419 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4420 |                         lcd_puts(buff, 40);                            
; 4421 |                         lcd_puts("Reading ... ", 60);                  
; 4423 |                         dsum[k] = 0;                                   
; 4424 |                         sampcnt = CAL_SAMPLES;                         
; 4425 |                         while (sampcnt--) {                            
; 4426 |                                 while (0 == ad7738_rawrdy()) {         
; 4427 |                                         delay_us(1);
;     |  // wait                                                               
; 4429 |                                 cntp = ad7738_getraw();                
; 4430 |                                 dsum[k] += cntp->adc[ch];              
; 4432 |                         if (1 == k) {                                  
; 4433 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4434 |                                                 / (dsum[1] - dsum[0]); 
; 4436 |                                 unsaved = 1;                           
; 4437 |                                 DINT;                                  
; 4438 |                                 ad7738_setcal();                       
; 4439 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4440 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4441 |                                 EINT;                                  
; 4443 |                         for (i = 0; i < cmdlen; i++) {                 
; 4444 |                                 buff[i] = cmdbuff[i];                  
; 4446 |                         j = cmdlen;                                    
; 4447 |                         bincmdresult = OK_SendResult;                  
; 4449 |                         lcd_clear();                                   
; 4450 |                         update_units();                                
; 4451 |                         break;                                         
; 4453 |                 case SetDCalParam:                                     
; 4455 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4456 |                                         || (0x07 | daccbm) != 0x07) {  
; 4457 |                                 bincmdresult = Error_Invalid;          
; 4458 |                                 break;                                 
; 4460 |                         ch = cmdbuff[2];                               
; 4461 |                         buff[j++] = ch;                                
; 4463 |                         for (k = 0; k < 3; k++) {                      
; 4464 |                                 intp = (Uint16*) &volt[k];             
; 4465 |                                 for (i = 0; i < 2; i++) {              
; 4466 |                                         *intp = cmdbuff[j];            
; 4467 |                                         buff[j++] = 0xff & *intp;      
; 4468 |                                         *intp += cmdbuff[j] << 8;      
; 4469 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4470 |                                         intp++;                        
; 4474 |                         // order: - o +                                
; 4475 |                         // do the calculations                         
; 4476 |                         conf_data.dac[ch].dslopen =                    
; 4477 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4478 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4479 |                         conf_data.dac[ch].dslopep =                    
; 4480 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4481 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4482 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4483 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4485 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4486 |                         daccbm = 0;                                    
; 4488 |                         unsaved = 1;                                   
; 4490 |                         DINT;                                          
; 4491 |                         ad7738_setcal();                               
; 4492 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4493 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4494 |                         EINT;                                          
; 4496 |                         bincmdresult = OK_SendResult;                  
; 4497 |                         break;                                         
; 4499 |                 case StartDCRead:                                      
; 4501 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4502 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4503 |                                 bincmdresult = Error_Invalid;          
; 4504 |                                 break;                                 
; 4507 |                         if (daccbm == 0) {                             
; 4508 |                                 ch = cmdbuff[2];                       
; 4509 |                         } else {                                       
; 4510 |                                 if (ch != cmdbuff[2]) {                
; 4511 |                                         bincmdresult = Error_Invalid;  
; 4512 |                                         break;                         
; 4515 |                         buff[j++] = ch;                                
; 4516 |                         k = cmdbuff[j];                                
; 4517 |                         buff[j++] = k;                                 
; 4519 |                         intp = (Uint16*) &volt[k];                     
; 4520 |                         for (i = 0; i < 2; i++) {                      
; 4521 |                                 *intp = cmdbuff[j];                    
; 4522 |                                 buff[j++] = 0xff & *intp;              
; 4523 |                                 *intp += cmdbuff[j] << 8;              
; 4524 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4525 |                                 intp++;                                
; 4527 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4528 |                                 bincmdresult = Error_Invalid;          
; 4529 |                                 break;                                 
; 4532 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4533 |                         if (dsum[0] <= 0) {                            
; 4534 |                                 dacc[k] = 0;                           
; 4535 |                         } else if (dsum[0] >= 0xffff) {                
; 4536 |                                 dacc[k] = 0xffff;                      
; 4537 |                         } else {                                       
; 4538 |                                 dacc[k] = (Uint16) dsum[0];            
; 4541 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4543 |                         mcbsp_xmit(dacc[k], ch);                       
; 4544 |                         latch_dac();                                   
; 4546 |                         daccbm |= (0x1 << k);                          
; 4548 |                         bincmdresult = OK_SendResult;                  
; 4549 |                         break;                                         
; 4551 |                 case SetSensorCalPa:                                   
; 4553 |                         if (cmdlen < 20) {                             
; 4554 |                                 bincmdresult = Error_Invalid;          
; 4555 |                                 break;                                 
; 4557 |                         k = 2;                                         
; 4558 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4559 |                         ss = cmdbuff[k++];              // sensor index
; 4560 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4561 |                                 bincmdresult = Error_Invalid;          
; 4562 |                                 break;                                 
; 4565 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4566 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4567 |                                 bincmdresult = Error_Invalid;          
; 4568 |                                 break;                                 
; 4570 |                         for (i = 0; i < tempint; i++) {                
; 4571 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4573 |                         tsensor.ssn[i] = '\0';                         
; 4575 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4576 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4577 |                                 bincmdresult = Error_Invalid;          
; 4578 |                                 break;                                 
; 4580 |                         for (i = 0; i < tempint; i++) {                
; 4581 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4583 |                         tsensor.slbl[i] = '\0';                        
; 4585 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4587 |                         intp = (Uint16*) &tsensor.date; // date        
; 4588 |                         for (i = 0; i < 2; i++) {                      
; 4589 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4590 |                                 k += 2;                                
; 4591 |                                 intp++;                                
; 4594 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4595 |                         for (i = 0; i < 2; i++) {                      
; 4596 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4597 |                                 k += 2;                                
; 4598 |                                 intp++;                                
; 4600 |                         tsensor.base = tsensor.range;                  
; 4602 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4603 |                         switch (tsensor.unit) {                        
; 4604 |                         case 0:                                 // lb  
; 4605 |                         case 1:                                 // kg  
; 4606 |                                 tsensor.unit |= UNIT_WT;               
; 4607 |                                 break;                                 
; 4608 |                         case 2:                                 // in  
; 4609 |                         case 3:                                 // cm  
; 4610 |                         case 4:                                 // mm  
; 4611 |                                 tsensor.unit |= UNIT_LT;               
; 4612 |                                 break;                                 
; 4613 |                         case 5:                                 // ps  
; 4614 |                                 tsensor.unit |= UNIT_PR;               
; 4615 |                                 break;                                 
; 4616 |                         case 6:                                 // nm  
; 4617 |                                 tsensor.unit |= UNIT_TQ;               
; 4618 |                                 break;                                 
; 4619 |                         case 7:                                        
; 4620 |                         case 8:                                        
; 4621 |                         case 15:                                       
; 4622 |                                 tsensor.unit |= 0xf0;                  
; 4623 |                                 break;                                 
; 4624 |                         default:                                       
; 4625 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4626 |                                 break;                                 
; 4628 |                         tsensor.ounit = tsensor.unit;                  
; 4629 |                         tsensor.ufactor = 1;                           
; 4631 |                         switch (tsensor.method) {                      
; 4632 |                         case MD_RUN_MVV:                               
; 4634 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4635 |                                 for (i = 0; i < 2; i++) {              
; 4636 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4637 |                                         k += 2;                        
; 4638 |                                         intp++;                        
; 4640 |                                 if (tsensor.slope[0] == 0) {           
; 4641 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4643 |                                 tsensor.points = 1;                    
; 4644 |                                 break;                                 
; 4646 |                         case MD_RUN_MAS:                               
; 4648 |                                 tsensor.points = cmdbuff[k++];         
; 4649 |                                 if (tsensor.points > PNT_MAX) {        
; 4650 |                                         tsensor.method = MD_UNCALED;   
; 4651 |                                         break;                         
; 4654 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4655 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4656 |                                         for (i = 0; i < 2; i++) {      
; 4657 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4658 |                                                 k += 2;                
; 4659 |                                                 intp++;                
; 4662 |                                 break;                                 
; 4664 |                         case MD_RUN_SHT:                               
; 4666 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4667 |                                 for (i = 0; i < 2; i++) {              
; 4668 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4669 |                                         k += 2;                        
; 4670 |                                         intp++;                        
; 4672 |                                 if (scale == 0) {                      
; 4673 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4675 |                                 tsensor.points = 1;                    
; 4676 |                                 break;                                 
; 4678 |                         default:                                       
; 4680 |                                 tsensor.method = MD_UNCALED;           
; 4681 |                                 break;                                 
; 4684 |                         if (tsensor.method == MD_UNCALED) {            
; 4685 |                                 bincmdresult = Error_Invalid;          
; 4686 |                                 break;                                 
; 4688 |                         tsensor.tare = 0;                              
; 4689 |                         tsensor.dacgain = 1;                           
; 4690 |                         tsensor.dacoff = 0;                            
; 4691 |                         tsensor.ch = ch;                               
; 4693 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4694 |                                 buff[j] = cmdbuff[j++];                
; 4696 |                         bincmdresult = OK_SendResult;                  
; 4697 |                         break;                                         
; 4699 |                 case StartSCRead:                                      
; 4701 |                         if (cmdlen < 5) {                              
; 4702 |                                 bincmdresult = Error_Invalid;          
; 4703 |                                 break;                                 
; 4705 |                         k = 2;                                         
; 4706 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4707 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4708 |                                 bincmdresult = Error_Invalid;          
; 4709 |                                 break;                                 
; 4712 |                         lcd_clear();                                   
; 4713 |                         lcd_puts("Sensor Calibration..", 0);           
; 4714 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4715 |                         lcd_puts(buff, 20);                            
; 4716 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4717 |                         lcd_puts(buff, 40);                            
; 4719 |                         switch (tsensor.method) {                      
; 4721 |                         case MD_RUN_MVV:                               
; 4723 |                                 lcd_puts("Reading zero point...", 60); 
; 4725 |                                 dsum[0] = 0;                           
; 4726 |                                 sampcnt = CAL_SAMPLES;                 
; 4727 |                                 while (sampcnt--) {                    
; 4728 |                                         while (0 == ad7738_rawrdy()) { 
; 4729 |                                                 delay_us(1);
;     |          // wait                                                       
; 4732 |                                         cntp = ad7738_getraw();        
; 4733 |                                         dsum[0] += cntp->adc[ch];      
; 4735 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4736 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4738 |                                 bincmdresult = OK_SendResult;          
; 4739 |                                 break;                                 
; 4741 |                         case MD_RUN_MAS:                               
; 4743 |                                 pt = cmdbuff[k++];                     
; 4744 |                                 intp = (Uint16*) &scale;               
; 4745 |                                 for (i = 0; i < 2; i++) {              
; 4746 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4747 |                                         k += 2;                        
; 4748 |                                         intp++;                        
; 4750 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4751 |                                         bincmdresult = Error_Invalid;  
; 4752 |                                         break;                         
; 4754 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4755 |                                 lcd_puts(buff, 60);                    
; 4757 |                                 dsum[0] = 0;                           
; 4758 |                                 sampcnt = CAL_SAMPLES;                 
; 4759 |                                 while (sampcnt--) {                    
; 4760 |                                         while (0 == ad7738_rawrdy()) { 
; 4761 |                                                 delay_us(1);
;     |          // wait                                                       
; 4764 |                                         cntp = ad7738_getraw();        
; 4765 |                                         dsum[0] += cntp->adc[ch];      
; 4767 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4769 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4771 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4772 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4773 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4774 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4775 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4776 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4777 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4778 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4779 | 
;     |          * tsensor.adc[k];                                             
; 4783 |                                 bincmdresult = OK_SendResult;          
; 4784 |                                 break;                                 
; 4786 |                         case MD_RUN_SHT:                               
; 4788 |                                 lcd_puts("Reading zero point...", 60); 
; 4790 |                                 for (k = 0; k < 2; k++) {              
; 4791 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4793 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4794 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4795 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4797 |                                                 DINT;                  
; 4798 |                                                 maf_rst();             
; 4799 |                                                 EINT;                  
; 4800 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4803 |                                         dsum[k] = 0;                   
; 4804 |                                         sampcnt = CAL_SAMPLES;         
; 4805 |                                         while (sampcnt--) {            
; 4806 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4807 |                                                         delay_us(1);
;     |                  // wait                                               
; 4810 |                                                 cntp = ad7738_getraw();
; 4811 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4815 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4816 |                                 DINT;                                  
; 4817 |                                 maf_rst();                             
; 4818 |                                 EINT;                                  
; 4820 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4821 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4822 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4823 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4825 |                                 bincmdresult = OK_SendResult;          
; 4826 |                                 break;                                 
; 4828 |                         default:                                       
; 4830 |                                 bincmdresult = Error_Invalid;          
; 4831 |                                 break;                                 
; 4833 |                         lcd_clear();                                   
; 4834 |                         update_units();                                
; 4836 |                         if (bincmdresult != OK_SendResult) {           
; 4837 |                                 break;                                 
; 4839 |                         for (i = 0; i < cmdlen; i++) {                 
; 4840 |                                 buff[i] = cmdbuff[i];                  
; 4842 |                         j = cmdlen;                                    
; 4843 |                         break;                                         
; 4845 |                 case StartSCShuntRd:                                   
; 4847 |                         if (cmdlen < 5) {                              
; 4848 |                                 bincmdresult = Error_Invalid;          
; 4849 |                                 break;                                 
; 4851 |                         k = 2;                                         
; 4852 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4853 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4854 |                                 bincmdresult = Error_Invalid;          
; 4855 |                                 break;                                 
; 4858 |                         lcd_clear();                                   
; 4859 |                         lcd_puts("Sensor Calibration..", 0);           
; 4860 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4861 |                         lcd_puts(buff, 20);                            
; 4862 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4863 |                         lcd_puts(buff, 40);                            
; 4864 |                         lcd_puts("Reading shunt value...", 60);        
; 4866 |                         for (k = 0; k < 2; k++) {                      
; 4867 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4869 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4870 |                                         for (i = 0; i < 50; i++) {     
; 4871 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4873 |                                         DINT;                          
; 4874 |                                         maf_rst();                     
; 4875 |                                         EINT;                          
; 4876 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4879 |                                 dsum[k] = 0;                           
; 4880 |                                 sampcnt = CAL_SAMPLES;                 
; 4881 |                                 while (sampcnt--) {                    
; 4882 |                                         while (0 == ad7738_rawrdy()) { 
; 4883 |                                                 delay_us(1);
;     |          // wait                                                       
; 4886 |                                         cntp = ad7738_getraw();        
; 4887 |                                         dsum[k] += cntp->adc[ch];      
; 4889 |                                 dsum[k] /= CAL_SAMPLES;                
; 4891 |                                 pt = 0;                                
; 4892 |                                 if (tsensor.points > 2) {              
; 4893 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4894 |                                                 pt++;                  
; 4897 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4898 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4901 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4902 |                         DINT;                                          
; 4903 |                         maf_rst();                                     
; 4904 |                         EINT;                                          
; 4906 |                         tsensor.shunt = volt[1] - volt[0];             
; 4908 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4910 |                         DINT;                                          
; 4911 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4912 |                                         sizeof(sconf_t));              
; 4914 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4916 |                         ad7738_setcal();                               
; 4917 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4918 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4919 |                         EINT;                                          
; 4921 |                         unsaved = 1;                                   
; 4923 |                         lcd_clear();                                   
; 4924 |                         update_units();                                
; 4926 |                         for (i = 0; i < cmdlen; i++) {                 
; 4927 |                                 buff[i] = cmdbuff[i];                  
; 4929 |                         j = cmdlen;                                    
; 4930 |                         bincmdresult = OK_SendResult;                  
; 4931 |                         break;                                         
; 4933 |                 case SetSensorName:                                    
; 4935 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4936 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4937 |                                 bincmdresult = Error_Invalid;          
; 4938 |                                 break;                                 
; 4940 |                         ss = cmdbuff[2];                               
; 4941 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4943 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4944 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4945 |                         for (i = 0; i < slen; i++) {                   
; 4946 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4948 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4949 |                         unsaved = 1;                                   
; 4951 |                         // sensor name/label                           
; 4952 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4953 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4954 |                         for (i = 0; i < slen; i++) {                   
; 4955 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4958 |                         bincmdresult = OK_SendResult;                  
; 4959 |                         break;                                         
; 4961 |                 case SetSensorOUnit:                                   
; 4963 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4964 |                                 bincmdresult = Error_Invalid;          
; 4965 |                                 break;                                 
; 4968 |                         ss = cmdbuff[2];                               
; 4969 |                         pt = cmdbuff[3];                               
; 4971 |                         if (pt != UNIT_PC                              
; 4972 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 4973 |                                 bincmdresult = Error_Invalid;          
; 4974 |                                 break;                                 
; 4977 |                         conf_data.sensor[ss].ounit = pt;               
; 4978 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4979 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 4981 |                         if (pt == UNIT_PC) {                           
; 4982 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 4983 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 4984 |                         } else if (conf_data.sensor[ss].ounit          
; 4985 |                                         == conf_data.sensor[ss].unit) {
; 4986 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 4987 |                         } else {                                       
; 4988 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 4989 |                                 case UNIT_LB:
;     |  // pond                                                               
; 4991 |                                         if (pt == UNIT_KG) {           
; 4992 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 4994 |                                         break;                         
; 4996 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 4998 |                                         if (pt == UNIT_LB) {           
; 4999 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5001 |                                         break;                         
; 5003 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5005 |                                         switch (pt) {                  
; 5006 |                                         case UNIT_CM:                  
; 5007 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5008 |                                                 break;                 
; 5009 |                                         case UNIT_MM:                  
; 5010 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5011 |                                                 break;                 
; 5013 |                                         break;                         
; 5015 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5017 |                                         switch (pt) {                  
; 5018 |                                         case UNIT_IN:                  
; 5019 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5020 |                                                 break;                 
; 5021 |                                         case UNIT_MM:                  
; 5022 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5023 |                                                 break;                 
; 5025 |                                         break;                         
; 5027 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5029 |                                         switch (pt) {                  
; 5030 |                                         case UNIT_IN:                  
; 5031 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5032 |                                                 break;                 
; 5033 |                                         case UNIT_CM:                  
; 5034 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5035 |                                                 break;                 
; 5037 |                                         break;                         
; 5039 |                                 default:                               
; 5041 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5042 |                                         break;                         
; 5046 |                         unsaved = 1;                                   
; 5048 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5049 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5050 |                                         update_units();                
; 5051 |                                         DINT;                          
; 5052 |                                         ad7738_setcal();               
; 5053 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5054 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5055 |                                         EINT;                          
; 5059 |                         bincmdresult = OK_SendResult;                  
; 5060 |                         break;                                         
; 5062 |                 case SetSensorBase:                                    
; 5064 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5065 |                                 bincmdresult = Error_Invalid;          
; 5066 |                                 break;                                 
; 5068 |                         ss = cmdbuff[2];                               
; 5069 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5071 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5072 |                         for (i = 0; i < 2; i++) {                      
; 5073 |                                 *intp = cmdbuff[j];                    
; 5074 |                                 buff[j++] = 0xff & *intp;              
; 5075 |                                 *intp += cmdbuff[j] << 8;              
; 5076 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5077 |                                 intp++;                                
; 5079 |                         unsaved = 1;                                   
; 5081 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5082 |                                 // output unit is percent              
; 5083 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5084 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5086 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5087 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5088 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5089 |                                                 DINT;                  
; 5090 |                                                 ad7738_setcal();       
; 5091 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5092 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5093 |                                                 EINT;                  
; 5098 |                         bincmdresult = OK_SendResult;                  
; 5099 |                         break;                                         
; 5101 |                 case SetQEPChannels:                                   
; 5103 |                         if (cmdlen < 6) {                              
; 5104 |                                 bincmdresult = Error_Invalid;          
; 5105 |                                 break;                                 
; 5108 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5109 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5110 |                                 for (i = 0; i < 2; i++) {              
; 5111 |                                         *intp = cmdbuff[j];            
; 5112 |                                         buff[j++] = 0xff & *intp;      
; 5113 |                                         *intp += cmdbuff[j] << 8;      
; 5114 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5115 |                                         intp++;                        
; 5119 |                         conf_data.velfilter = cmdbuff[j];              
; 5120 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5121 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5122 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5124 |                         unsaved = 1;                                   
; 5126 |                         DINT;                                          
; 5127 |                         ad7738_setcal();                               
; 5128 |                         velf_rst();                                    
; 5129 |                         EINT;                                          
; 5131 |                         bincmdresult = OK_SendResult;                  
; 5132 |                         break;                                         
; 5134 |                         //case SetEnCntperin: // not needed            
; 5135 |                         //break;                                       
; 5137 |                 case SetCurSensor:                                     
; 5139 |                         if (cmdlen < 4||                               
; 5140 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5141 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5142 |                                 bincmdresult = Error_Invalid;          
; 5143 |                                 break;                                 
; 5146 |                         ch = cmdbuff[2];                               
; 5147 |                         ss = cmdbuff[3];                               
; 5149 |                         if (autoid[ch]) {                              
; 5150 |                                 bincmdresult = Error_Exe;              
; 5151 |                                 break;                                 
; 5154 |                         DINT;                                          
; 5155 |                         conf_data.ch[ch].ci = ss;                      
; 5156 |                         ad7738_setcal();                               
; 5158 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5159 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5160 |                         EINT;                                          
; 5162 |                         update_units();                                
; 5163 |                         unsaved = 1;                                   
; 5165 |                         buff[j++] = ch;                                
; 5166 |                         buff[j++] = ss;                                
; 5167 |                         bincmdresult = OK_SendResult;                  
; 5168 |                         break;                                         
; 5170 |                 case SetAFilterSize:                                   
; 5172 |                         if (cmdlen < 4) {                              
; 5173 |                                 bincmdresult = Error_Invalid;          
; 5174 |                                 break;                                 
; 5177 |                         // filter length                               
; 5178 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5179 |                         if (temp16 > MAF_MAX) {                        
; 5180 |                                 bincmdresult = Error_Invalid;          
; 5181 |                                 break;                                 
; 5184 |                         // filter diff window                          
; 5185 |                         intp = (Uint16*) &tempft;                      
; 5186 |                         for (i = 0; i < 2; i++) {                      
; 5187 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5188 |                                 intp++;                                
; 5191 |                         DINT;                                          
; 5192 |                         conf_data.filter = temp16;                     
; 5193 |                         conf_data.diffwin = tempft;                    
; 5194 |                         maf_rst();                                     
; 5195 |                         EINT;                                          
; 5197 |                         unsaved = 1;                                   
; 5199 |                         buff[j++] = 0xff & temp16;                     
; 5200 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5202 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5203 |                         buff[j++] = 0xff & intp[0];                    
; 5204 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5205 |                         buff[j++] = 0xff & intp[1];                    
; 5206 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5208 |                         bincmdresult = OK_SendResult;                  
; 5209 |                         break;                                         
; 5211 |                 case SetAutoId:                                        
; 5213 |                         if (cmdlen < 3) {                              
; 5214 |                                 bincmdresult = Error_Invalid;          
; 5215 |                                 break;                                 
; 5218 |                         conf_data.tagiden = cmdbuff[2];                
; 5219 |                         if (!conf_data.tagiden) {                      
; 5220 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5221 |                                         tagwasthere[i] = 0;            
; 5222 |                                         autoid[i] = 0;                 
; 5224 |                                 update_units();                        
; 5226 |                         unsaved = 1;                                   
; 5228 |                         buff[j] = cmdbuff[j++];                        
; 5229 |                         bincmdresult = OK_SendResult;                  
; 5230 |                         break;                                         
; 5232 |                 case SetDisplayLine:                                   
; 5234 |                         if (cmdlen < 14) {                             
; 5235 |                                 bincmdresult = Error_Invalid;          
; 5236 |                                 break;                                 
; 5239 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5240 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5241 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5242 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5243 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5244 |                                         || cmdbuff[13] > 5) {          
; 5245 |                                 bincmdresult = Error_Invalid;          
; 5246 |                                 break;                                 
; 5249 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5250 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5251 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5252 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5253 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5254 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5255 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5257 |                         unsaved = 1;                                   
; 5259 |                         lcd_clear();                                   
; 5260 |                         update_units();                                
; 5261 |                         bincmdresult = OK_SendResult;                  
; 5262 |                         break;                                         
; 5264 |                 case SetDACCh:                                         
; 5266 |                         if (cmdlen < 42) {                             
; 5267 |                                 bincmdresult = Error_Invalid;          
; 5268 |                                 break;                                 
; 5271 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5272 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5273 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5274 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5275 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5276 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5277 |                                 bincmdresult = Error_Invalid;          
; 5278 |                                 break;                                 
; 5281 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5282 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5283 |                                 buff[j++] = conf_data.dac[i].what;     
; 5284 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5285 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5287 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5288 |                                 //{                                    
; 5289 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5290 |                                 //}                                    
; 5291 |                                 //else                                 
; 5292 |                                 //{                                    
; 5293 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5294 |                                 //}                                    
; 5295 |                                 for (k = 0; k < 2; k++) {              
; 5296 |                                         *intp = cmdbuff[j];            
; 5297 |                                         buff[j++] = 0xff & *intp;      
; 5298 |                                         *intp += cmdbuff[j] << 8;      
; 5299 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5300 |                                         intp++;                        
; 5303 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5304 |                                 //{                                    
; 5305 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5306 |                                 //}                                    
; 5307 |                                 //else                                 
; 5308 |                                 //{                                    
; 5309 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5310 |                                 //}                                    
; 5311 |                                 for (k = 0; k < 2; k++) {              
; 5312 |                                         *intp = cmdbuff[j];            
; 5313 |                                         buff[j++] = 0xff & *intp;      
; 5314 |                                         *intp += cmdbuff[j] << 8;      
; 5315 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5316 |                                         intp++;                        
; 5319 |                         unsaved = 1;                                   
; 5321 |                         DINT;                                          
; 5322 |                         ad7738_setcal();                               
; 5323 |                         EINT;                                          
; 5324 |                         bincmdresult = OK_SendResult;                  
; 5325 |                         break;                                         
; 5327 |                 case SetLIMITCh:                                       
; 5329 |                         if (cmdlen < 46) {                             
; 5330 |                                 bincmdresult = Error_Invalid;          
; 5331 |                                 break;                                 
; 5334 |                         if (cmdbuff[2]                                 
; 5335 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5336 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5337 |                                 bincmdresult = Error_Invalid;          
; 5338 |                                 break;                                 
; 5341 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5342 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5343 |                                 buff[j++] = conf_data.lim[i].what;     
; 5344 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5345 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5346 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5347 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5349 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5350 |                                 for (k = 0; k < 2; k++) {              
; 5351 |                                         *intp = cmdbuff[j];            
; 5352 |                                         buff[j++] = 0xff & *intp;      
; 5353 |                                         *intp += cmdbuff[j] << 8;      
; 5354 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5355 |                                         intp++;                        
; 5357 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5358 |                                 for (k = 0; k < 2; k++) {              
; 5359 |                                         *intp = cmdbuff[j];            
; 5360 |                                         buff[j++] = 0xff & *intp;      
; 5361 |                                         *intp += cmdbuff[j] << 8;      
; 5362 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5363 |                                         intp++;                        
; 5366 |                         unsaved = 1;                                   
; 5368 |                         DINT;                                          
; 5369 |                         ad7738_setcal();                               
; 5370 |                         EINT;                                          
; 5372 |                         bincmdresult = OK_SendResult;                  
; 5373 |                         break;                                         
; 5375 |                 case Tare:                                             
; 5377 |                         if (cmdlen < 3) {                              
; 5378 |                                 //bincmdresult = Error_Invalid;        
; 5379 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5380 |                                 ad7738_resetpeak(0xff);                
; 5381 |                                 ad7738_resetvall(0xff);                
; 5382 |                                 unsaved = 1;                           
; 5384 |                                 buff[j++] = 0xff;                      
; 5385 |                                 bincmdresult = OK_SendResult;          
; 5386 |                                 break;                                 
; 5389 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5390 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5391 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5392 |                         unsaved = 1;                                   
; 5394 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5395 |                         bincmdresult = OK_SendResult;                  
; 5396 |                         break;                                         
; 5398 |                 case ResetPkVly:                                       
; 5400 |                         if (cmdlen < 3) {                              
; 5401 |                                 bincmdresult = Error_Invalid;          
; 5402 |                                 break;                                 
; 5405 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5406 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5407 |                         unsaved = 1;                                   
; 5409 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5410 |                         bincmdresult = OK_SendResult;                  
; 5411 |                         break;                                         
; 5413 |                 case ResetPk:                                          
; 5415 |                         if (cmdlen < 3) {                              
; 5416 |                                 bincmdresult = Error_Invalid;          
; 5417 |                                 break;                                 
; 5420 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5421 |                         unsaved = 1;                                   
; 5423 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5424 |                         bincmdresult = OK_SendResult;                  
; 5425 |                         break;                                         
; 5427 |                 case ResetVly:                                         
; 5429 |                         if (cmdlen < 3) {                              
; 5430 |                                 bincmdresult = Error_Invalid;          
; 5431 |                                 break;                                 
; 5434 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5435 |                         unsaved = 1;                                   
; 5437 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5438 |                         bincmdresult = OK_SendResult;                  
; 5439 |                         break;                                         
; 5441 |                 case ResetLIMIT:                                       
; 5443 |                         if (cmdlen < 3) {                              
; 5444 |                                 bincmdresult = Error_Invalid;          
; 5445 |                                 break;                                 
; 5448 |                         k = 0x01;                                      
; 5449 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5450 |                                 if (k & cmdbuff[2]) {                  
; 5451 |                                         ad7738_resetlimit(i);          
; 5453 |                                 k <<= 1;                               
; 5455 |                         unsaved = 1;                                   
; 5457 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5458 |                         bincmdresult = OK_SendResult;                  
; 5459 |                         break;                                         
; 5461 |                 case ResetPosition:                                    
; 5463 |                         if (cmdlen < 3) {                              
; 5464 |                                 bincmdresult = Error_Invalid;          
; 5465 |                                 break;                                 
; 5468 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5469 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5470 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5471 |                         unsaved = 1;                                   
; 5473 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5474 |                         bincmdresult = OK_SendResult;                  
; 5475 |                         break;                                         
; 5477 |                 case SetShuntSwitch:                                   
; 5479 |                         if (cmdlen < 3) {                              
; 5480 |                                 bincmdresult = Error_Invalid;          
; 5481 |                                 break;                                 
; 5484 |                         shunt_switch(cmdbuff[2]);                      
; 5485 |                         unsaved = 1;                                   
; 5487 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5488 |                         bincmdresult = OK_SendResult;                  
; 5489 |                         break;                                         
; 5491 |                 case SetDirectVolt:                                    
; 5493 |                         if (cmdlen < 7) {                              
; 5494 |                                 bincmdresult = Error_Invalid;          
; 5495 |                                 break;                                 
; 5498 |                         ss = cmdbuff[j];                               
; 5499 |                         buff[j++] = ss;                                
; 5501 |                         intp = (Uint16*) &volt[0];                     
; 5502 |                         for (k = 0; k < 2; k++) {                      
; 5503 |                                 *intp = cmdbuff[j];                    
; 5504 |                                 buff[j++] = 0xff & *intp;              
; 5505 |                                 *intp += cmdbuff[j] << 8;              
; 5506 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5507 |                                 intp++;                                
; 5510 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5511 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5512 |                                 bincmdresult = Error_Invalid;          
; 5513 |                                 break;                                 
; 5516 |                         if (volt[0] < 0) {                             
; 5517 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5518 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5519 |                         } else {                                       
; 5520 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5521 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5524 |                         if (dsum[0] <= 0) {                            
; 5525 |                                 dacc[0] = 0;                           
; 5526 |                         } else if (dsum[0] >= 0xffff) {                
; 5527 |                                 dacc[0] = 0xffff;                      
; 5528 |                         } else {                                       
; 5529 |                                 dacc[0] = (Uint16) dsum[0];            
; 5532 |                         mcbsp_xmit(dacc[0], ss);                       
; 5533 |                         latch_dac();                                   
; 5535 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5536 |                         buff[j++] = 0xff & dacc[0];                    
; 5537 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5539 |                         bincmdresult = OK_SendResult;                  
; 5540 |                         break;                                         
; 5542 |                 case GetAllFlash:                                      
; 5544 |                         break;                                         
; 5546 |                 case SetAllFlash:                                      
; 5548 |                         break;                                         
; 5550 |                 case FlashMemWrite:                                    
; 5552 |                         bincmdresult = OK_SendResult;                  
; 5553 |                         if (unsaved) {                                 
; 5554 |                                 // flash writing                       
; 5555 |                                 lcd_clear();                           
; 5556 |                                 lcd_puts("Flash writing...", 0);       
; 5558 |                                 for (i = 0; i < 50; i++) {             
; 5559 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5562 |                                 DINT;                                  
; 5563 |                                 flash_ret = conf_write();              
; 5564 |                                 EINT;                                  
; 5566 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5567 |                                         lcd_puts("Done", 16);          
; 5568 |                                         unsaved = 0;                   
; 5569 |                                 } else {                               
; 5570 |                                         lcd_puts("Fail", 16);          
; 5571 |                                         bincmdresult = Error_Exe;      
; 5574 |                                 for (i = 0; i < 50; i++) {             
; 5575 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5577 |                                 lcd_clear();                           
; 5578 |                                 update_units();                        
; 5580 |                         break;                                         
; 5582 |                 case FlashMemDefault:                                  
; 5584 |                         conf_default();                                
; 5586 |                         // flash writing                               
; 5587 |                         lcd_clear();                                   
; 5588 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5590 |                         for (i = 0; i < 50; i++) {                     
; 5591 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5594 |                         DINT;                                          
; 5595 |                         flash_ret = conf_write();                      
; 5596 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5597 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5598 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5599 |                         EINT;                                          
; 5601 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5602 |                                 lcd_puts("Done", 31);                  
; 5603 |                                 unsaved = 0;                           
; 5604 |                                 bincmdresult = OK_SendResult;          
; 5605 |                         } else {                                       
; 5606 |                                 lcd_puts("Fail", 31);                  
; 5607 |                                 bincmdresult = Error_Exe;              
; 5609 |                         for (i = 0; i < 50; i++) {                     
; 5610 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5612 |                         lcd_clear();                                   
; 5613 |                         update_units();                                
; 5615 |                         break;                                         
; 5617 |                 case FlashMemRead:                                     
; 5619 |                         // flash reading                               
; 5620 |                         conf_read();                                   
; 5622 |                         DINT;                                          
; 5623 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5624 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5625 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5626 |                         EINT;                                          
; 5628 |                         unsaved = 0;                                   
; 5629 |                         update_units();                                
; 5630 |                         bincmdresult = OK_SendResult;                  
; 5631 |                         break;                                         
; 5633 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |590| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      *-SP[58],XAR4         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5635,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5635 | if (cmdlen < 6) {                                                      
; 5636 |         bincmdresult = Error_Invalid;                                  
; 5637 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5635| 
        B         $C$L320,LO            ; [CPU_] |5635| 
        ; branchcc occurs ; [] |5635| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5640,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5640 | ds_dn = cmdbuff[2];                                                    
; 5641 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5640| 
        MOVL      ACC,XAR7              ; [CPU_] |5640| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5642 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5640,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |5640| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5640| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5643 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5640,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5640| 
        MOV       *-SP[44],AL           ; [CPU_] |5640| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5642| 
        ADDB      ACC,#4                ; [CPU_] |5642| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5644 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5642| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5642| 
        MOV       *-SP[43],AL           ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5646 | tempint = 0;                                                           
; 5647 | k = 0x01;                                                              
; 5648 | for (i = 0; i < 8; i++) {                                              
; 5649 |         if (ds_bm & k) {                                               
; 5650 |                 tempint++;                                             
; 5652 |         k <<= 1;                                                       
; 5655 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5656 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5657 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5658 | //                                      ds_en = 0;                     
; 5659 | //                                      bincmdresult = Error_Invalid;  
; 5660 | //                                      break;                         
; 5661 | //                              }                                      
; 5663 | ds_en = 1;                                                             
; 5664 | ds_stop = 0;                                                           
; 5665 | ds_sn = 0;                                                             
; 5667 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5668 | //                              ad7738_setlimitchgd();                 
; 5670 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5644| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5644| 
        MOV       *-SP[42],AL           ; [CPU_] |5644| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5671,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5671 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5671| 
	.dwpsn	file "../Source/prod.c",line 5663,column 5,is_stmt,isa 0
        MOV       *-SP[46],#1           ; [CPU_] |5663| 
	.dwpsn	file "../Source/prod.c",line 5664,column 5,is_stmt,isa 0
        MOV       *-SP[45],#0           ; [CPU_] |5664| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |5665| 
	.dwpsn	file "../Source/prod.c",line 5672,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5672 | j++;                                                                   
; 5674 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[53],#6           ; [CPU_] |5672| 
	.dwpsn	file "../Source/prod.c",line 5675,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5675 | break;                                                                 
; 5677 | case StopStream:                                                       
; 5679 | ds_stop = 1;                                                           
; 5680 | bincmdresult = OK_SendResult;                                          
; 5681 | break;                                                                 
; 5683 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5685 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5675| 
        ; branch occurs ; [] |5675| 
$C$L80:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4847,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4847| 
        B         $C$L320,LO            ; [CPU_] |4847| 
        ; branchcc occurs ; [] |4847| 
	.dwpsn	file "../Source/prod.c",line 4852,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4852| 
        MOVL      ACC,XAR4              ; [CPU_] |4852| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4852| 
        MOVZ      AR6,*-SP[50]          ; [CPU_] |4852| 
        MOVL      XAR0,#66              ; [CPU_] |4852| 
        ADDB      ACC,#2                ; [CPU_] |4852| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4852| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4852| 
        CMPL      ACC,XAR6              ; [CPU_] |4852| 
        B         $C$L320,NEQ           ; [CPU_] |4852| 
        ; branchcc occurs ; [] |4852| 
        MOVZ      AR6,*-SP[49]          ; [CPU_] |4852| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4852| 
        CMPL      ACC,XAR6              ; [CPU_] |4852| 
        B         $C$L320,NEQ           ; [CPU_] |4852| 
        ; branchcc occurs ; [] |4852| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4852| 
        MOVL      XAR0,#64              ; [CPU_] |4852| 
        MOVL      ACC,XAR5              ; [CPU_] |4852| 
        ADDB      ACC,#4                ; [CPU_] |4852| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4852| 
        MOVB      XAR0,#36              ; [CPU_] |4852| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4852| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4852| 
        B         $C$L320,NEQ           ; [CPU_] |4852| 
        ; branchcc occurs ; [] |4852| 
	.dwpsn	file "../Source/prod.c",line 4858,column 5,is_stmt,isa 0
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4858| 
        ; call occurs [#_lcd_clear] ; [] |4858| 
	.dwpsn	file "../Source/prod.c",line 4859,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4859| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4859| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4859| 
        ; call occurs [#_lcd_puts] ; [] |4859| 
	.dwpsn	file "../Source/prod.c",line 4860,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4860| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4860| 
        MOVL      XAR0,#44              ; [CPU_] |4860| 
        ADD       AL,*-SP[50]           ; [CPU_] |4860| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4860| 
        MOV       *-SP[3],AL            ; [CPU_] |4860| 
        MOVB      AL,#1                 ; [CPU_] |4860| 
        ADD       AL,*-SP[49]           ; [CPU_] |4860| 
        MOV       *-SP[4],AL            ; [CPU_] |4860| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4860| 
        MOVL      XAR4,XAR3             ; [CPU_] |4860| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_sprintf")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4860| 
        ; call occurs [#_sprintf] ; [] |4860| 
	.dwpsn	file "../Source/prod.c",line 4861,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4861| 
        MOVL      XAR4,XAR3             ; [CPU_] |4861| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4861| 
        ; call occurs [#_lcd_puts] ; [] |4861| 
	.dwpsn	file "../Source/prod.c",line 4862,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4862| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4862| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4862| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4862| 
        MOVL      XAR0,#58              ; [CPU_] |4862| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4862| 
        MOVB      XAR1,#36              ; [CPU_] |4862| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4862| 
        ADDL      ACC,XAR6              ; [CPU_] |4862| 
        MOVL      XAR4,ACC              ; [CPU_] |4862| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4862| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4862| 
        MOVL      XAR4,XAR3             ; [CPU_] |4862| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_sprintf")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4862| 
        ; call occurs [#_sprintf] ; [] |4862| 
	.dwpsn	file "../Source/prod.c",line 4863,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4863| 
        MOVL      XAR4,XAR3             ; [CPU_] |4863| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4863| 
        ; call occurs [#_lcd_puts] ; [] |4863| 
	.dwpsn	file "../Source/prod.c",line 4864,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4864| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4864| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4864| 
        ; call occurs [#_lcd_puts] ; [] |4864| 
        MOVL      XAR0,#78              ; [CPU_] |4864| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4864| 
        MOVZ      AR0,*-SP[50]          ; [CPU_] |4864| 
        MOV       T,*-SP[50]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[49]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4892,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |4892| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4866,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4866| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[52],AL           ; [CPU_] |4866| 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4867,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4867| 
        B         $C$L83,LEQ            ; [CPU_] |4867| 
        ; branchcc occurs ; [] |4867| 
	.dwpsn	file "../Source/prod.c",line 4869,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4869| 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4869| 
        ; call occurs [#_shunt_switch] ; [] |4869| 
        MOV       *-SP[40],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4871,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4871| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_delay_us")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4871| 
        ; call occurs [#_delay_us] ; [] |4871| 
        MOVZ      AR6,*-SP[40]          ; [CPU_] |4871| 
	.dwpsn	file "../Source/prod.c",line 4870,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4870| 
        MOVZ      AR0,AR6               ; [CPU_] |4870| 
        MOV       *-SP[40],AR6          ; [CPU_] |4870| 
        CMP       AR0,#-1               ; [CPU_] |4870| 
        B         $C$L82,NEQ            ; [CPU_] |4870| 
        ; branchcc occurs ; [] |4870| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4874,column 7,is_stmt,isa 0
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_maf_rst")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4874| 
        ; call occurs [#_maf_rst] ; [] |4874| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4876,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4876| 
        SPM       #0                    ; [CPU_] 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_delay_us")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4876| 
        ; call occurs [#_delay_us] ; [] |4876| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4879| 
	.dwpsn	file "../Source/prod.c",line 4880,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4880| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4879| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4879| 
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4881| 
	.dwpsn	file "../Source/prod.c",line 4880,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4880| 
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4881| 
        MOVB      ACC,#0                ; [CPU_] |4881| 
        SUBB      ACC,#1                ; [CPU_] |4881| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4881| 
        B         $C$L86,EQ             ; [CPU_] |4881| 
        ; branchcc occurs ; [] |4881| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4882,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4882| 
        ; branch occurs ; [] |4882| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4883,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4883| 
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_delay_us")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4883| 
        ; call occurs [#_delay_us] ; [] |4883| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4882,column 14,is_stmt,isa 0
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4882| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4882| 
        CMPB      AL,#0                 ; [CPU_] |4882| 
        B         $C$L84,EQ             ; [CPU_] |4882| 
        ; branchcc occurs ; [] |4882| 
	.dwpsn	file "../Source/prod.c",line 4886,column 7,is_stmt,isa 0
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4886| 
        ; call occurs [#_ad7738_getraw] ; [] |4886| 
	.dwpsn	file "../Source/prod.c",line 4887,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4887| 
        ADDL      XAR4,ACC              ; [CPU_] |4887| 
        MOVL      XAR0,#34              ; [CPU_] |4887| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4887| 
        MOVL      XAR0,#34              ; [CPU_] |4887| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4887| 
        ASR64     ACC:P,16              ; [CPU_] |4887| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4887| 
        MOVL      XAR0,#34              ; [CPU_] |4887| 
        ASR64     ACC:P,16              ; [CPU_] |4887| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4887| 
        MOVL      XAR0,#34              ; [CPU_] |4887| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4887| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4887| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4887| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4887| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4887| 
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4881| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4881| 
        MOVB      ACC,#0                ; [CPU_] |4881| 
        SUBB      ACC,#1                ; [CPU_] |4881| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4881| 
        B         $C$L85,NEQ            ; [CPU_] |4881| 
        ; branchcc occurs ; [] |4881| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4889| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4889| 
        MOV       *-SP[2],#0            ; [CPU_] |4889| 
        MOV       *-SP[1],#0            ; [CPU_] |4889| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |4889| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |4889| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4889| 
        ; call occurs [#LL$$DIV] ; [] |4889| 
	.dwpsn	file "../Source/prod.c",line 4892,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4892| 
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4891| 
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4892,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |4892| 
        CMPB      AL,#2                 ; [CPU_] |4892| 
        B         $C$L89,LEQ            ; [CPU_] |4892| 
        ; branchcc occurs ; [] |4892| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4893,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4893| 
        ; branch occurs ; [] |4893| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4894,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4894| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4893,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4893| 
        B         $C$L89,HIS            ; [CPU_] |4893| 
        ; branchcc occurs ; [] |4893| 
        MOVB      AL,#1                 ; [CPU_] |4893| 
        ADD       AL,AR4                ; [CPU_] |4893| 
        MOVZ      AR5,AL                ; [CPU_] |4893| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4893| 
        ADDL      ACC,XAR3              ; [CPU_] |4893| 
        MOVL      XAR6,ACC              ; [CPU_] |4893| 
        MOVB      XAR0,#72              ; [CPU_] |4893| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4893| 
        MOVL      XAR0,#32              ; [CPU_] |4893| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4893| 
        MOVL      XAR0,#32              ; [CPU_] |4893| 
        ASR64     ACC:P,16              ; [CPU_] |4893| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4893| 
        MOVL      XAR0,#32              ; [CPU_] |4893| 
        ASR64     ACC:P,16              ; [CPU_] |4893| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4893| 
        MOVL      *-SP[4],P             ; [CPU_] |4893| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4893| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4893| 
        MOVL      P,*-SP[32]            ; [CPU_] |4893| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$558, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4893| 
        ; call occurs [#LL$$CMP] ; [] |4893| 
        CMPB      AL,#0                 ; [CPU_] |4893| 
        B         $C$L87,GT             ; [CPU_] |4893| 
        ; branchcc occurs ; [] |4893| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4897,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4897| 
        ADDL      ACC,XAR3              ; [CPU_] |4897| 
        MOVL      XAR4,ACC              ; [CPU_] |4897| 
        MOVB      XAR0,#96              ; [CPU_] |4897| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4897| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4897| 
        MOVL      XAR0,#38              ; [CPU_] |4897| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4897| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4897| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4897| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4897| 
        ; call occurs [#FS$$MPY] ; [] |4897| 
        MOVL      XAR0,#30              ; [CPU_] |4897| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4897| 
        MOVL      P,*XAR1++             ; [CPU_] |4897| 
        MOVL      ACC,*XAR1++           ; [CPU_] |4897| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4897| 
        ; call occurs [#LL$$TOFS] ; [] |4897| 
        MOVL      XAR0,#30              ; [CPU_] |4897| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4897| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4897| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4897| 
        ; call occurs [#FS$$MPY] ; [] |4897| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4897| 
        MOVB      XAR0,#118             ; [CPU_] |4897| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4897| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4897| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4897| 
        ; call occurs [#FS$$ADD] ; [] |4897| 
        MOVL      XAR0,#36              ; [CPU_] |4897| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4897| 
        MOVL      XAR0,#36              ; [CPU_] |4897| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4897| 
	.dwpsn	file "../Source/prod.c",line 4866,column 17,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |4866| 
	.dwpsn	file "../Source/prod.c",line 4897,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4897| 
        MOV       AL,*-SP[52]           ; [CPU_] |4897| 
	.dwpsn	file "../Source/prod.c",line 4866,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4866| 
        B         $C$L81,LT             ; [CPU_] |4866| 
        ; branchcc occurs ; [] |4866| 
	.dwpsn	file "../Source/prod.c",line 4901,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4901| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4901| 
        ; call occurs [#_shunt_switch] ; [] |4901| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4903,column 5,is_stmt,isa 0
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_maf_rst")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4903| 
        ; call occurs [#_maf_rst] ; [] |4903| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4906,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4906| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4906| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4906| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4906| 
        ; call occurs [#FS$$SUB] ; [] |4906| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4906| 
        MOVL      XAR0,#36              ; [CPU_] |4906| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4906| 
        MOVB      XAR0,#140             ; [CPU_] |4906| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4906| 
        MOV       AL,*-SP[50]           ; [CPU_] |4906| 
	.dwpsn	file "../Source/prod.c",line 4908,column 5,is_stmt,isa 0
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_tagid")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4908| 
        ; call occurs [#_tagid] ; [] |4908| 
        MOVL      XAR4,XAR1             ; [CPU_] |4908| 
        ADDB      XAR4,#32              ; [CPU_] |4908| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4908| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4908| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4911,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4911| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4911| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4911| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4911| 
        MOV       AL,*-SP[49]           ; [CPU_] |4911| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4914,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4914| 
	.dwpsn	file "../Source/prod.c",line 4916,column 5,is_stmt,isa 0
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4916| 
        ; call occurs [#_ad7738_setcal] ; [] |4916| 
        MOVZ      AR1,*-SP[39]          ; [CPU_] |4916| 
	.dwpsn	file "../Source/prod.c",line 4917,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4917| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4917| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4917| 
        MOV       AL,AR1                ; [CPU_] |4917| 
	.dwpsn	file "../Source/prod.c",line 4918,column 5,is_stmt,isa 0
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4918| 
        ; call occurs [#_ad7738_resetvall] ; [] |4918| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4923,column 5,is_stmt,isa 0
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4923| 
        ; call occurs [#_lcd_clear] ; [] |4923| 
	.dwpsn	file "../Source/prod.c",line 4924,column 5,is_stmt,isa 0
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_update_units")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4924| 
        ; call occurs [#_update_units] ; [] |4924| 
        MOVL      XAR0,#42              ; [CPU_] |4924| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4924| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4926,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4926| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4927| 
	.dwpsn	file "../Source/prod.c",line 4926,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4927| 
	.dwpsn	file "../Source/prod.c",line 4926,column 17,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4927| 
	.dwpsn	file "../Source/prod.c",line 4926,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4926| 
        B         $C$L90,HI             ; [CPU_] |4926| 
        ; branchcc occurs ; [] |4926| 
	.dwpsn	file "../Source/prod.c",line 4929,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4929| 
	.dwpsn	file "../Source/prod.c",line 4931,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4931| 
        ; branch occurs ; [] |4931| 
$C$L91:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4701,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4701| 
        B         $C$L320,LO            ; [CPU_] |4701| 
        ; branchcc occurs ; [] |4701| 
	.dwpsn	file "../Source/prod.c",line 4706,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4706| 
        MOVL      XAR0,#66              ; [CPU_] |4706| 
        MOVZ      AR6,*-SP[50]          ; [CPU_] |4706| 
        ADDB      ACC,#2                ; [CPU_] |4706| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4706| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4706| 
        CMPL      ACC,XAR6              ; [CPU_] |4706| 
        B         $C$L320,NEQ           ; [CPU_] |4706| 
        ; branchcc occurs ; [] |4706| 
        MOVZ      AR6,*-SP[49]          ; [CPU_] |4706| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4706| 
        CMPL      ACC,XAR6              ; [CPU_] |4706| 
        B         $C$L320,NEQ           ; [CPU_] |4706| 
        ; branchcc occurs ; [] |4706| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] |4706| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4706| 
        MOVL      ACC,XAR5              ; [CPU_] |4706| 
        ADDB      ACC,#4                ; [CPU_] |4706| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4706| 
        MOVB      XAR0,#36              ; [CPU_] |4706| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4706| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4706| 
        B         $C$L320,NEQ           ; [CPU_] |4706| 
        ; branchcc occurs ; [] |4706| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4712| 
        ; call occurs [#_lcd_clear] ; [] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4713| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4713| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4713| 
        ; call occurs [#_lcd_puts] ; [] |4713| 
	.dwpsn	file "../Source/prod.c",line 4714,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4714| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4714| 
        MOVL      XAR0,#44              ; [CPU_] |4714| 
        ADD       AL,*-SP[50]           ; [CPU_] |4714| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4714| 
        MOV       *-SP[3],AL            ; [CPU_] |4714| 
        MOVB      AL,#1                 ; [CPU_] |4714| 
        ADD       AL,*-SP[49]           ; [CPU_] |4714| 
        MOV       *-SP[4],AL            ; [CPU_] |4714| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4714| 
        MOVL      XAR4,XAR1             ; [CPU_] |4714| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_sprintf")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4714| 
        ; call occurs [#_sprintf] ; [] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4714,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 5,is_stmt,isa 0
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4715| 
        ; call occurs [#_lcd_puts] ; [] |4715| 
	.dwpsn	file "../Source/prod.c",line 4716,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4716| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4716| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4716| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4716| 
        MOVL      XAR0,#58              ; [CPU_] |4716| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4716| 
        MOVB      XAR1,#36              ; [CPU_] |4716| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4716| 
        ADDL      ACC,XAR6              ; [CPU_] |4716| 
        MOVL      XAR4,ACC              ; [CPU_] |4716| 
        MOVL      XAR0,#44              ; [CPU_] |4716| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4716| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4716| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4716| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_sprintf")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4716| 
        ; call occurs [#_sprintf] ; [] |4716| 
        MOVL      XAR0,#44              ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4717| 
	.dwpsn	file "../Source/prod.c",line 4716,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 5,is_stmt,isa 0
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4717| 
        ; call occurs [#_lcd_puts] ; [] |4717| 
	.dwpsn	file "../Source/prod.c",line 4719,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4719| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4719| 
        MOVB      XAR1,#36              ; [CPU_] |4719| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4719| 
        CMPB      AL,#1                 ; [CPU_] |4719| 
        B         $C$L92,EQ             ; [CPU_] |4719| 
        ; branchcc occurs ; [] |4719| 
        CMPB      AL,#2                 ; [CPU_] |4719| 
        B         $C$L105,EQ            ; [CPU_] |4719| 
        ; branchcc occurs ; [] |4719| 
        CMPB      AL,#3                 ; [CPU_] |4719| 
        B         $C$L96,EQ             ; [CPU_] |4719| 
        ; branchcc occurs ; [] |4719| 
        B         $C$L112,UNC           ; [CPU_] |4719| 
        ; branch occurs ; [] |4719| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4723| 
        MOVB      AL,#60                ; [CPU_] |4723| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4723| 
        ; call occurs [#_lcd_puts] ; [] |4723| 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4726| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4726| 
        MOV       T,*-SP[50]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4727| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4727| 
        SUBB      ACC,#1                ; [CPU_] |4727| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4727| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4727| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4727| 
        ; branchcc occurs ; [] |4727| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4728,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4728| 
        ; branch occurs ; [] |4728| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4729,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4729| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_delay_us")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4729| 
        ; call occurs [#_delay_us] ; [] |4729| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4728,column 14,is_stmt,isa 0
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4728| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4728| 
        CMPB      AL,#0                 ; [CPU_] |4728| 
        B         $C$L93,EQ             ; [CPU_] |4728| 
        ; branchcc occurs ; [] |4728| 
	.dwpsn	file "../Source/prod.c",line 4732,column 7,is_stmt,isa 0
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4732| 
        ; call occurs [#_ad7738_getraw] ; [] |4732| 
	.dwpsn	file "../Source/prod.c",line 4733,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4733| 
        ADDL      XAR4,ACC              ; [CPU_] |4733| 
        MOVL      XAR0,#28              ; [CPU_] |4733| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4733| 
        MOVL      XAR0,#28              ; [CPU_] |4733| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4733| 
        ASR64     ACC:P,16              ; [CPU_] |4733| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4733| 
        MOVL      XAR0,#28              ; [CPU_] |4733| 
        ASR64     ACC:P,16              ; [CPU_] |4733| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4733| 
        MOVL      XAR0,#28              ; [CPU_] |4733| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4733| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4733| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4733| 
        MOVL      *-SP[32],P            ; [CPU_] |4733| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4733| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4727| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4727| 
        MOVB      ACC,#0                ; [CPU_] |4727| 
        SUBB      ACC,#1                ; [CPU_] |4727| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4727| 
        B         $C$L94,NEQ            ; [CPU_] |4727| 
        ; branchcc occurs ; [] |4727| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4735| 
	.dwpsn	file "../Source/prod.c",line 4739,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4739| 
        ; branch occurs ; [] |4739| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4788,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4788| 
        MOVB      AL,#60                ; [CPU_] |4788| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4788| 
        ; call occurs [#_lcd_puts] ; [] |4788| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[50]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4790,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4790| 
        MOV       *-SP[52],AL           ; [CPU_] |4790| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4791,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4791| 
        B         $C$L99,LEQ            ; [CPU_] |4791| 
        ; branchcc occurs ; [] |4791| 
	.dwpsn	file "../Source/prod.c",line 4793,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4793| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4793| 
        ; call occurs [#_shunt_switch] ; [] |4793| 
        MOV       *-SP[39],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4795,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4795| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_delay_us")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4795| 
        ; call occurs [#_delay_us] ; [] |4795| 
        MOVZ      AR6,*-SP[39]          ; [CPU_] |4795| 
	.dwpsn	file "../Source/prod.c",line 4794,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4794| 
        MOVZ      AR0,AR6               ; [CPU_] |4794| 
        MOV       *-SP[39],AR6          ; [CPU_] |4794| 
        CMP       AR0,#-1               ; [CPU_] |4794| 
        B         $C$L98,NEQ            ; [CPU_] |4794| 
        ; branchcc occurs ; [] |4794| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4798,column 8,is_stmt,isa 0
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_maf_rst")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4798| 
        ; call occurs [#_maf_rst] ; [] |4798| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4800,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4800| 
        SPM       #0                    ; [CPU_] 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_delay_us")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4800| 
        ; call occurs [#_delay_us] ; [] |4800| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4803,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4804,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4803| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4804,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4804| 
	.dwpsn	file "../Source/prod.c",line 4805,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4805| 
        MOVB      ACC,#0                ; [CPU_] |4805| 
        SUBB      ACC,#1                ; [CPU_] |4805| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4805| 
        B         $C$L101,EQ            ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4806,column 15,is_stmt,isa 0
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4806| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4806| 
        CMPB      AL,#0                 ; [CPU_] |4806| 
        B         $C$L104,EQ            ; [CPU_] |4806| 
        ; branchcc occurs ; [] |4806| 
	.dwpsn	file "../Source/prod.c",line 4810,column 8,is_stmt,isa 0
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4810| 
        ; call occurs [#_ad7738_getraw] ; [] |4810| 
	.dwpsn	file "../Source/prod.c",line 4811,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4811| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4811| 
        ADDL      XAR4,ACC              ; [CPU_] |4811| 
        MOVL      XAR0,#26              ; [CPU_] |4811| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4811| 
        MOVL      XAR0,#26              ; [CPU_] |4811| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4811| 
        ASR64     ACC:P,16              ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      XAR0,#26              ; [CPU_] |4811| 
        ASR64     ACC:P,16              ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      XAR0,#26              ; [CPU_] |4811| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4811| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4811| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4805,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4805| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4805| 
        MOVB      ACC,#0                ; [CPU_] |4805| 
        SUBB      ACC,#1                ; [CPU_] |4805| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4805| 
        B         $C$L100,NEQ           ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4790,column 18,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |4790| 
        ADDB      XAR1,#4               ; [CPU_] |4790| 
        MOV       AL,*-SP[52]           ; [CPU_] |4790| 
        CMPB      AL,#2                 ; [CPU_] |4790| 
        B         $C$L97,LT             ; [CPU_] |4790| 
        ; branchcc occurs ; [] |4790| 
	.dwpsn	file "../Source/prod.c",line 4815,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4815| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4815| 
        ; call occurs [#_shunt_switch] ; [] |4815| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4817,column 6,is_stmt,isa 0
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_maf_rst")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4817| 
        ; call occurs [#_maf_rst] ; [] |4817| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4820,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4820| 
        MOV       AH,#17948             ; [CPU_] |4820| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4820| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4820| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4820| 
        ; call occurs [#FS$$MPY] ; [] |4820| 
        MOVL      XAR1,ACC              ; [CPU_] |4820| 
        MOVL      P,*-SP[28]            ; [CPU_] |4820| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4820| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4820| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4820| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4820| 
        ; call occurs [#LL$$TOFS] ; [] |4820| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4820| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4820| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4820| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4820| 
        ; call occurs [#FS$$MPY] ; [] |4820| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4820| 
        MOVL      ACC,XAR1              ; [CPU_] |4820| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4820| 
        ; call occurs [#FS$$DIV] ; [] |4820| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4820| 
        MOVB      XAR0,#96              ; [CPU_] |4820| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4820| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4822| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4822| 
        MOVL      XAR0,#52              ; [CPU_] |4822| 
        ADDB      ACC,#96               ; [CPU_] |4822| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4822| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4822| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4822| 
        ; call occurs [#FS$$NEG] ; [] |4822| 
        MOVB      XAR0,#96              ; [CPU_] |4822| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4822| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4822| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4822| 
        ; call occurs [#FS$$MPY] ; [] |4822| 
        MOVL      XAR1,ACC              ; [CPU_] |4822| 
        MOVL      P,*-SP[32]            ; [CPU_] |4822| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4822| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4822| 
        ; call occurs [#LL$$TOFS] ; [] |4822| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4822| 
        MOVL      ACC,XAR1              ; [CPU_] |4822| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4822| 
        ; call occurs [#FS$$MPY] ; [] |4822| 
        MOVL      XAR6,ACC              ; [CPU_] |4822| 
        MOV       AL,#16384             ; [CPU_] |4822| 
        MOV       AH,#17948             ; [CPU_] |4822| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4822| 
        MOVL      ACC,XAR6              ; [CPU_] |4822| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4822| 
        ; call occurs [#FS$$DIV] ; [] |4822| 
        MOVL      XAR0,#36              ; [CPU_] |4822| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4822| 
        MOVB      XAR1,#118             ; [CPU_] |4822| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4822| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4825,column 6,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |4825| 
	.dwpsn	file "../Source/prod.c",line 4826,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4826| 
        ; branch occurs ; [] |4826| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4807,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4807| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_delay_us")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4807| 
        ; call occurs [#_delay_us] ; [] |4807| 
	.dwpsn	file "../Source/prod.c",line 4806,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4806| 
        ; branch occurs ; [] |4806| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4743| 
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4744| 
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4743| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] |4743| 
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4744| 
        MOVZ      AR5,AR5               ; [CPU_] |4744| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4746,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4746| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4746| 
        MOV       *XAR5++,AL            ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4747,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4745,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4745| 
        ; branchcc occurs ; [] |4745| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4750| 
        MOVB      XAR0,#46              ; [CPU_] |4750| 
        MOV       AL,*-SP[39]           ; [CPU_] |4750| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4750| 
        B         $C$L112,HIS           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
        MOVL      XAR0,#36              ; [CPU_] |4750| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4750| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4750| 
        ADDL      ACC,XAR6              ; [CPU_] |4750| 
        ADDB      ACC,#48               ; [CPU_] |4750| 
        MOVL      XAR1,ACC              ; [CPU_] |4750| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4750| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4750| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4750| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4750| 
        ; call occurs [#FS$$CMP] ; [] |4750| 
        CMPB      AL,#0                 ; [CPU_] |4750| 
        B         $C$L112,NEQ           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
	.dwpsn	file "../Source/prod.c",line 4754,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4754| 
        MOVB      AL,#1                 ; [CPU_] |4754| 
        MOVL      XAR0,#44              ; [CPU_] |4754| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4754| 
        ADD       AL,*-SP[39]           ; [CPU_] |4754| 
        MOV       *-SP[3],AL            ; [CPU_] |4754| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4754| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_sprintf")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4754| 
        ; call occurs [#_sprintf] ; [] |4754| 
        MOVL      XAR0,#44              ; [CPU_] |4754| 
	.dwpsn	file "../Source/prod.c",line 4755,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4755| 
	.dwpsn	file "../Source/prod.c",line 4754,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4754| 
	.dwpsn	file "../Source/prod.c",line 4755,column 6,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4755| 
        ; call occurs [#_lcd_puts] ; [] |4755| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4758| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4759| 
        MOVB      ACC,#0                ; [CPU_] |4759| 
        SUBB      ACC,#1                ; [CPU_] |4759| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4759| 
        B         $C$L108,EQ            ; [CPU_] |4759| 
        ; branchcc occurs ; [] |4759| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4760,column 14,is_stmt,isa 0
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4760| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4760| 
        CMPB      AL,#0                 ; [CPU_] |4760| 
        B         $C$L111,EQ            ; [CPU_] |4760| 
        ; branchcc occurs ; [] |4760| 
	.dwpsn	file "../Source/prod.c",line 4764,column 7,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4764| 
        ; call occurs [#_ad7738_getraw] ; [] |4764| 
	.dwpsn	file "../Source/prod.c",line 4765,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4765| 
        ADDL      XAR4,ACC              ; [CPU_] |4765| 
        MOVL      XAR0,#24              ; [CPU_] |4765| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4765| 
        MOVL      XAR0,#24              ; [CPU_] |4765| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4765| 
        ASR64     ACC:P,16              ; [CPU_] |4765| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4765| 
        MOVL      XAR0,#24              ; [CPU_] |4765| 
        ASR64     ACC:P,16              ; [CPU_] |4765| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4765| 
        MOVL      XAR0,#24              ; [CPU_] |4765| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4765| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4765| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4765| 
        MOVL      *-SP[32],P            ; [CPU_] |4765| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4765| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4759| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4759| 
        MOVB      ACC,#0                ; [CPU_] |4759| 
        SUBB      ACC,#1                ; [CPU_] |4759| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4759| 
        B         $C$L107,NEQ           ; [CPU_] |4759| 
        ; branchcc occurs ; [] |4759| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4767| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4767| 
        MOV       *-SP[2],#0            ; [CPU_] |4767| 
        MOV       *-SP[1],#0            ; [CPU_] |4767| 
        MOVL      P,*-SP[32]            ; [CPU_] |4767| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4767| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4767| 
        ; call occurs [#LL$$DIV] ; [] |4767| 
        ADDB      XAR1,#24              ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4769| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4769| 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4769| 
        MOV       AL,*-SP[39]           ; [CPU_] |4769| 
        SUB       AL,AR6                ; [CPU_] |4769| 
        MOVZ      AR7,AL                ; [CPU_] |4769| 
        MOVL      XAR4,#65535           ; [CPU_U] |4769| 
        MOVL      ACC,XAR4              ; [CPU_] |4769| 
        CMPL      ACC,XAR7              ; [CPU_] |4769| 
        B         $C$L103,NEQ           ; [CPU_] |4769| 
        ; branchcc occurs ; [] |4769| 
	.dwpsn	file "../Source/prod.c",line 4772,column 12,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |4772| 
        B         $C$L110,UNC           ; [CPU_] |4772| 
        ; branch occurs ; [] |4772| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4773,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4773| 
        MOVB      AL,#10                ; [CPU_] |4773| 
        MOV       T,*-SP[50]            ; [CPU_] |4773| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4773| 
        SETC      SXM                   ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] |4773| 
        MOVL      XAR0,#36              ; [CPU_] |4773| 
        ADDL      ACC,XAR6              ; [CPU_] |4773| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4773| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4773| 
        MOV       AL,*-SP[39]           ; [CPU_] |4773| 
        MOV       ACC,AL << 1           ; [CPU_] |4773| 
        ADDL      ACC,XAR6              ; [CPU_] |4773| 
        MOVL      XAR1,ACC              ; [CPU_] |4773| 
        MOVB      XAR0,#48              ; [CPU_] |4773| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4773| 
        MOVB      XAR0,#50              ; [CPU_] |4773| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4773| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4773| 
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4773| 
        ; call occurs [#FS$$SUB] ; [] |4773| 
        MOVL      XAR0,#42              ; [CPU_] |4773| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4773| 
        MOVB      XAR0,#74              ; [CPU_] |4773| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4773| 
        MOVB      XAR0,#72              ; [CPU_] |4773| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |4773| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4773| 
        ; call occurs [#L$$TOFS] ; [] |4773| 
        MOVL      XAR0,#42              ; [CPU_] |4773| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4773| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4773| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4773| 
        ; call occurs [#FS$$DIV] ; [] |4773| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4773| 
        MOVB      XAR0,#44              ; [CPU_] |4773| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4773| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4773| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4773| 
        ; call occurs [#FS$$DIV] ; [] |4773| 
        MOVB      XAR0,#96              ; [CPU_] |4773| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4773| 
	.dwpsn	file "../Source/prod.c",line 4777,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4777| 
        MOVB      XAR0,#44              ; [CPU_] |4777| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4777| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4777| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4777| 
        ; call occurs [#FS$$MPY] ; [] |4777| 
        MOVB      XAR0,#72              ; [CPU_] |4777| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4777| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4777| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4777| 
        ; call occurs [#L$$TOFS] ; [] |4777| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4777| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |4777| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4777| 
        ; call occurs [#FS$$MPY] ; [] |4777| 
        MOVB      XAR0,#48              ; [CPU_] |4777| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4777| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4777| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4777| 
        ; call occurs [#FS$$SUB] ; [] |4777| 
        MOVB      XAR0,#118             ; [CPU_] |4777| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4777| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4772,column 43,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |4772| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4772,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4772| 
        ADDB      AL,#-1                ; [CPU_] |4772| 
        CMP       AL,*-SP[39]           ; [CPU_] |4772| 
        B         $C$L109,GT            ; [CPU_] |4772| 
        ; branchcc occurs ; [] |4772| 
	.dwpsn	file "../Source/prod.c",line 4784,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4784| 
        ; branch occurs ; [] |4784| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4761,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4761| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_delay_us")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4761| 
        ; call occurs [#_delay_us] ; [] |4761| 
	.dwpsn	file "../Source/prod.c",line 4760,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4760| 
        ; branch occurs ; [] |4760| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4751,column 7,is_stmt,isa 0
        MOV       *-SP[39],#2           ; [CPU_] |4751| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4833,column 5,is_stmt,isa 0
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4833| 
        ; call occurs [#_lcd_clear] ; [] |4833| 
	.dwpsn	file "../Source/prod.c",line 4834,column 5,is_stmt,isa 0
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_update_units")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4834| 
        ; call occurs [#_update_units] ; [] |4834| 
        MOV       AL,*-SP[39]           ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4837| 
        ; branchcc occurs ; [] |4837| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4839,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4839| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4840,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4840| 
	.dwpsn	file "../Source/prod.c",line 4839,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4840,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4840| 
	.dwpsn	file "../Source/prod.c",line 4839,column 17,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4840,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4840| 
	.dwpsn	file "../Source/prod.c",line 4839,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4839| 
        B         $C$L114,HI            ; [CPU_] |4839| 
        ; branchcc occurs ; [] |4839| 
	.dwpsn	file "../Source/prod.c",line 4842,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4842| 
	.dwpsn	file "../Source/prod.c",line 4843,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4843| 
        ; branch occurs ; [] |4843| 
$C$L115:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4553,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4553| 
        B         $C$L320,LO            ; [CPU_] |4553| 
        ; branchcc occurs ; [] |4553| 
	.dwpsn	file "../Source/prod.c",line 4558,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4558| 
        MOV       *-SP[50],AL           ; [CPU_] |4558| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4559| 
        MOV       *-SP[49],AL           ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4560| 
        MOV       AL,*-SP[50]           ; [CPU_] |4560| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4560| 
        CMPB      AL,#4                 ; [CPU_] |4560| 
        B         $C$L320,HIS           ; [CPU_] |4560| 
        ; branchcc occurs ; [] |4560| 
        MOV       AL,*-SP[49]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4560| 
        B         $C$L320,HIS           ; [CPU_] |4560| 
        ; branchcc occurs ; [] |4560| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4566,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4566| 
        MOVL      ACC,XAR4              ; [CPU_] |4566| 
        ADDB      ACC,#4                ; [CPU_] |4566| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4566| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4566| 
        CMPB      AL,#16                ; [CPU_] |4566| 
        B         $C$L320,HIS           ; [CPU_] |4566| 
        ; branchcc occurs ; [] |4566| 
	.dwpsn	file "../Source/prod.c",line 4570,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4570| 
        MOVL      XAR0,#64              ; [CPU_] |4570| 
        CMPB      AL,#0                 ; [CPU_] |4570| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4570| 
        B         $C$L116,LEQ           ; [CPU_] |4570| 
        ; branchcc occurs ; [] |4570| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4570| 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4570| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4570| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4570| 
        MOVL      XAR0,ACC              ; [CPU_] |4570| 
	.dwpsn	file "../Source/prod.c",line 4571,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4571| 
        ADD       AL,AR4                ; [CPU_] |4571| 
        MOVZ      AR6,AL                ; [CPU_] |4571| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4571| 
	.dwpsn	file "../Source/prod.c",line 4570,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4570| 
        ; branch occurs ; [] |4570| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4565| 
	.dwpsn	file "../Source/prod.c",line 4570,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4570| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4573,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4573| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4573| 
	.dwpsn	file "../Source/prod.c",line 4575,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4575| 
        MOVL      XAR4,ACC              ; [CPU_] |4575| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4575| 
        CMPB      AL,#16                ; [CPU_] |4575| 
        B         $C$L320,HIS           ; [CPU_] |4575| 
        ; branchcc occurs ; [] |4575| 
        ADDB      XAR4,#1               ; [CPU_] |4575| 
	.dwpsn	file "../Source/prod.c",line 4580,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4575,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4575| 
        MOVL      P,XAR4                ; [CPU_] |4575| 
	.dwpsn	file "../Source/prod.c",line 4580,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4580| 
        ; branchcc occurs ; [] |4580| 
        MOVZ      AR5,AL                ; [CPU_] |4580| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4581,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4581| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4581| 
        MOV       *XAR4++,AL            ; [CPU_] |4581| 
        ADDB      XAR7,#1               ; [CPU_] |4581| 
        MOVL      P,XAR7                ; [CPU_] |4581| 
	.dwpsn	file "../Source/prod.c",line 4580,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4580| 
        ; branchcc occurs ; [] |4580| 
        B         $C$L120,UNC           ; [CPU_] |4580| 
        ; branch occurs ; [] |4580| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4580,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4580| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4583| 
        ADD       ACC,AR5               ; [CPU_] |4583| 
        MOVL      XAR4,ACC              ; [CPU_] |4583| 
        MOVB      XAR0,#16              ; [CPU_] |4583| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4583| 
	.dwpsn	file "../Source/prod.c",line 4585,column 5,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4585| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4585| 
        ADDB      XAR7,#1               ; [CPU_] |4585| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4585| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] |4585| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4585| 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4589| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4590,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4590| 
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4589| 
        MOV       *XAR5++,AL            ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4590,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4590| 
        MOVL      P,XAR7                ; [CPU_] |4590| 
	.dwpsn	file "../Source/prod.c",line 4588,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4588| 
        ; branchcc occurs ; [] |4588| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4596,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4596| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4597,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4597| 
	.dwpsn	file "../Source/prod.c",line 4596,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4596| 
        MOV       *XAR0++,AL            ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4597,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4597| 
        MOVL      P,XAR5                ; [CPU_] |4597| 
	.dwpsn	file "../Source/prod.c",line 4595,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4595| 
        ; branchcc occurs ; [] |4595| 
	.dwpsn	file "../Source/prod.c",line 4600,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4600| 
        MOVB      XAR0,#40              ; [CPU_] |4600| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4600,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4600| 
        MOVB      XAR0,#142             ; [CPU_] |4600| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4600,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4600| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4602| 
        MOV       AL,*XAR7              ; [CPU_] |4602| 
        ADDB      XAR7,#1               ; [CPU_] |4602| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4603,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4603| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4603,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4603| 
        CMPB      AL,#6                 ; [CPU_] |4603| 
        B         $C$L123,GT            ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        CMPB      AL,#6                 ; [CPU_] |4603| 
        B         $C$L126,EQ            ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        CMPB      AL,#1                 ; [CPU_] |4603| 
        B         $C$L129,LOS           ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        MOV       AH,AL                 ; [CPU_] |4603| 
        ADDB      AH,#-2                ; [CPU_] |4603| 
        CMPB      AH,#2                 ; [CPU_] |4603| 
        B         $C$L128,LOS           ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        CMPB      AL,#5                 ; [CPU_] |4603| 
        B         $C$L127,EQ            ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        B         $C$L124,UNC           ; [CPU_] |4603| 
        ; branch occurs ; [] |4603| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4603| 
        ADDB      AH,#-7                ; [CPU_] |4603| 
        CMPB      AH,#1                 ; [CPU_] |4603| 
        B         $C$L125,LOS           ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        CMPB      AL,#15                ; [CPU_] |4603| 
        B         $C$L125,EQ            ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4625,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4625| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4626,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4626| 
        ; branch occurs ; [] |4626| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4622,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4622| 
	.dwpsn	file "../Source/prod.c",line 4623,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4623| 
        ; branch occurs ; [] |4623| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4617,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4617| 
	.dwpsn	file "../Source/prod.c",line 4618,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4618| 
        ; branch occurs ; [] |4618| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4614,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4614| 
	.dwpsn	file "../Source/prod.c",line 4615,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4615| 
        ; branch occurs ; [] |4615| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4611,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4612,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4612| 
        ; branch occurs ; [] |4612| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4606,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4606| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4628,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4628| 
        MOVB      XAR0,#43              ; [CPU_] |4628| 
        ADDB      XAR7,#42              ; [CPU_] |4628| 
        MOV       AL,*XAR7              ; [CPU_] |4628| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4628| 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4629| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4629| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4629| 
	.dwpsn	file "../Source/prod.c",line 4631,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4631| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4631| 
        CMPB      AL,#1                 ; [CPU_] |4631| 
        B         $C$L137,EQ            ; [CPU_] |4631| 
        ; branchcc occurs ; [] |4631| 
        CMPB      AL,#2                 ; [CPU_] |4631| 
        B         $C$L131,EQ            ; [CPU_] |4631| 
        ; branchcc occurs ; [] |4631| 
        CMPB      AL,#3                 ; [CPU_] |4631| 
        B         $C$L135,EQ            ; [CPU_] |4631| 
        ; branchcc occurs ; [] |4631| 
        B         $C$L134,UNC           ; [CPU_] |4631| 
        ; branch occurs ; [] |4631| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4648| 
        MOVB      XAR0,#46              ; [CPU_] |4648| 
        MOV       AL,*XAR7              ; [CPU_] |4648| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4649,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4649| 
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4649,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4649| 
        CMPB      AL,#12                ; [CPU_] |4649| 
        B         $C$L134,GT            ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4654,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4654| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4648| 
        MOVL      P,XAR6                ; [CPU_] |4648| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4662,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4662| 
        B         $C$L140,LEQ           ; [CPU_] |4662| 
        ; branchcc occurs ; [] |4662| 
	.dwpsn	file "../Source/prod.c",line 4655,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4655| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4655| 
        ADDB      ACC,#48               ; [CPU_] |4655| 
        MOVL      XAR0,ACC              ; [CPU_] |4655| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4657,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4657| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4658,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4658| 
	.dwpsn	file "../Source/prod.c",line 4657,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4657| 
        MOV       *XAR0++,AL            ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4658,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4658| 
        MOVL      P,XAR5                ; [CPU_] |4658| 
	.dwpsn	file "../Source/prod.c",line 4656,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4656| 
        ; branchcc occurs ; [] |4656| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4654,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4654| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4654| 
        ; branch occurs ; [] |4654| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4680,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4681| 
        ; branch occurs ; [] |4681| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4666,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4666| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4666| 
        MOVZ      AR0,AR5               ; [CPU_] |4666| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4668,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4668| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4669,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4668,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4668| 
        MOV       *XAR0++,AL            ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4669,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4669| 
        MOVL      P,XAR5                ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4667,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
	.dwpsn	file "../Source/prod.c",line 4672,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4672| 
        MOV       AH,#0                 ; [CPU_] |4672| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4672| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4672| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4672| 
        ; call occurs [#FS$$CMP] ; [] |4672| 
        CMPB      AL,#0                 ; [CPU_] |4672| 
        B         $C$L139,NEQ           ; [CPU_] |4672| 
        ; branchcc occurs ; [] |4672| 
	.dwpsn	file "../Source/prod.c",line 4673,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4673| 
        MOV       AH,#16314             ; [CPU_] |4673| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4673| 
        B         $C$L139,UNC           ; [CPU_] |4673| 
        ; branch occurs ; [] |4673| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4636,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4636| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4637,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4637| 
	.dwpsn	file "../Source/prod.c",line 4636,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4636| 
        MOV       *XAR0++,AL            ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4637,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4637| 
        MOVL      P,XAR5                ; [CPU_] |4637| 
	.dwpsn	file "../Source/prod.c",line 4635,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4635| 
        ; branchcc occurs ; [] |4635| 
	.dwpsn	file "../Source/prod.c",line 4640,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4640| 
        MOVL      XAR0,#52              ; [CPU_] |4640| 
        MOVL      ACC,XAR1              ; [CPU_] |4640| 
        ADDB      ACC,#96               ; [CPU_] |4640| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4640| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4640| 
        MOV       AL,#0                 ; [CPU_] |4640| 
        MOV       AH,#0                 ; [CPU_] |4640| 
        MOVB      XAR0,#96              ; [CPU_] |4640| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4640| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4640| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4640| 
        ; call occurs [#FS$$CMP] ; [] |4640| 
        CMPB      AL,#0                 ; [CPU_] |4640| 
        B         $C$L139,NEQ           ; [CPU_] |4640| 
        ; branchcc occurs ; [] |4640| 
	.dwpsn	file "../Source/prod.c",line 4641,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4641| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4641| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4641| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4643,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4643| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4684,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4684| 
        MOVB      XAR0,#36              ; [CPU_] |4684| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4684| 
        B         $C$L320,EQ            ; [CPU_] |4684| 
        ; branchcc occurs ; [] |4684| 
	.dwpsn	file "../Source/prod.c",line 4688,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4688| 
        MOV       AL,#0                 ; [CPU_] |4688| 
        MOV       AH,#0                 ; [CPU_] |4688| 
	.dwpsn	file "../Source/prod.c",line 4689,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4689| 
	.dwpsn	file "../Source/prod.c",line 4688,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4688| 
	.dwpsn	file "../Source/prod.c",line 4689,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4689| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4689| 
	.dwpsn	file "../Source/prod.c",line 4690,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4690| 
        MOV       AL,#0                 ; [CPU_] |4690| 
        MOV       AH,#0                 ; [CPU_] |4690| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4690| 
	.dwpsn	file "../Source/prod.c",line 4691,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4691| 
        MOV       AL,*-SP[50]           ; [CPU_] |4691| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4691| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4693,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4693| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4693| 
        ; branch occurs ; [] |4693| 
$C$L141:    
        MOVL      ACC,*-SP[58]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        MOV       PL,*-SP[53]           ; [CPU_] |4694| 
        MOVL      XAR0,#44              ; [CPU_] |4694| 
        ADD       ACC,PL                ; [CPU_] |4694| 
        MOVL      XAR7,ACC              ; [CPU_] |4694| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4694| 
        ADD       ACC,PL                ; [CPU_] |4694| 
        MOVL      XAR4,ACC              ; [CPU_] |4694| 
	.dwpsn	file "../Source/prod.c",line 4693,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4693| 
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4694| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4694| 
        MOV       AL,PL                 ; [CPU_] |4694| 
        ADDB      AL,#1                 ; [CPU_] |4694| 
        MOV       *-SP[53],AL           ; [CPU_] |4694| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4693,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4693| 
        B         $C$L141,HI            ; [CPU_] |4693| 
        ; branchcc occurs ; [] |4693| 
        B         $C$L743,UNC           ; [CPU_] |4693| 
        ; branch occurs ; [] |4693| 
$C$L143:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4501| 
        B         $C$L320,LO            ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        MOVL      ACC,XAR4              ; [CPU_] |4501| 
        MOVL      XAR0,#66              ; [CPU_] |4501| 
        ADDB      ACC,#2                ; [CPU_] |4501| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4501| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4501| 
        B         $C$L320,LT            ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        MOVL      XAR5,XAR4             ; [CPU_] |4501| 
        MOVL      XAR0,#66              ; [CPU_] |4501| 
        CMPB      AL,#4                 ; [CPU_] |4501| 
        ADDB      XAR5,#2               ; [CPU_] |4501| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4501| 
        B         $C$L320,GEQ           ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4501| 
        B         $C$L320,LT            ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        CMPB      AH,#2                 ; [CPU_] |4501| 
        B         $C$L320,GT            ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        MOV       AH,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4507,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4507| 
        ; branchcc occurs ; [] |4507| 
	.dwpsn	file "../Source/prod.c",line 4510,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4510| 
        MOVZ      AR6,*-SP[50]          ; [CPU_] |4510| 
        MOVL      XAR0,#66              ; [CPU_] |4510| 
        MOVU      ACC,AL                ; [CPU_] |4510| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4510| 
        CMPL      ACC,XAR6              ; [CPU_] |4510| 
        B         $C$L145,EQ            ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
        B         $C$L320,UNC           ; [CPU_] |4510| 
        ; branch occurs ; [] |4510| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4508,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4508| 
        MOVL      XAR0,#66              ; [CPU_] |4508| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4508| 
        MOV       *-SP[50],AL           ; [CPU_] |4508| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4508| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4516| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4515| 
        MOV       *-SP[39],AL           ; [CPU_] |4515| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4516| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4519| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4519| 
        MOVZ      AR4,AR4               ; [CPU_] |4519| 
	.dwpsn	file "../Source/prod.c",line 4517,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4517| 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4519| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4519| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4521,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4521| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4521| 
	.dwpsn	file "../Source/prod.c",line 4522,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4522| 
        MOV       *XAR7++,AL            ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4523,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4523| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4523| 
        MOV       *XAR4++,AL            ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4524,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4524| 
        MOV       *XAR7++,AL            ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4520,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4520| 
        ; branchcc occurs ; [] |4520| 
	.dwpsn	file "../Source/prod.c",line 4527,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4527| 
        SUBB      XAR4,#24              ; [CPU_U] |4527| 
        MOVZ      AR4,AR4               ; [CPU_] |4527| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4527| 
        ADDL      XAR4,ACC              ; [CPU_] |4527| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4527| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4527| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4527| 
        MOVL      ACC,XAR1              ; [CPU_] |4527| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4527| 
        ; call occurs [#FS$$CMP] ; [] |4527| 
        CMPB      AL,#0                 ; [CPU_] |4527| 
        B         $C$L320,LT            ; [CPU_] |4527| 
        ; branchcc occurs ; [] |4527| 
        MOV       AL,#0                 ; [CPU_] |4527| 
        MOV       AH,#16672             ; [CPU_] |4527| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4527| 
        MOVL      ACC,XAR1              ; [CPU_] |4527| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4527| 
        ; call occurs [#FS$$CMP] ; [] |4527| 
        CMPB      AL,#0                 ; [CPU_] |4527| 
        B         $C$L320,GT            ; [CPU_] |4527| 
        ; branchcc occurs ; [] |4527| 
	.dwpsn	file "../Source/prod.c",line 4532,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4532| 
        MOV       AH,#16672             ; [CPU_] |4532| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4532| 
        MOVL      ACC,XAR1              ; [CPU_] |4532| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4532| 
        ; call occurs [#FS$$ADD] ; [] |4532| 
        MOVL      XAR6,ACC              ; [CPU_] |4532| 
        MOV       AL,#65024             ; [CPU_] |4532| 
        MOV       AH,#18175             ; [CPU_] |4532| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4532| 
        MOVL      ACC,XAR6              ; [CPU_] |4532| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4532| 
        ; call occurs [#FS$$MPY] ; [] |4532| 
        MOVL      XAR6,ACC              ; [CPU_] |4532| 
        MOV       AL,#0                 ; [CPU_] |4532| 
        MOV       AH,#16672             ; [CPU_] |4532| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4532| 
        MOVL      ACC,XAR6              ; [CPU_] |4532| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4532| 
        ; call occurs [#FS$$DIV] ; [] |4532| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4532| 
        ; call occurs [#FS$$TOLL] ; [] |4532| 
	.dwpsn	file "../Source/prod.c",line 4533,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4532,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4523,column 6,is_stmt,isa 0
        MOV       *-SP[53],#8           ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4532,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4533,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4533| 
        CMP64     ACC:P                 ; [CPU_] |4533| 
        B         $C$L148,LEQ           ; [CPU_] |4533| 
        ; branchcc occurs ; [] |4533| 
	.dwpsn	file "../Source/prod.c",line 4535,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4535| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4535| 
        MOV       *-SP[2],#0            ; [CPU_] |4535| 
        MOV       *-SP[1],#0            ; [CPU_] |4535| 
        MOVL      P,*-SP[32]            ; [CPU_] |4535| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4535| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$626, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4535| 
        ; call occurs [#LL$$CMP] ; [] |4535| 
        CMPB      AL,#0                 ; [CPU_] |4535| 
        B         $C$L147,GEQ           ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
	.dwpsn	file "../Source/prod.c",line 4538,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4538| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4538| 
        MOVU      ACC,AR4               ; [CPU_] |4538| 
        ADD       ACC,*-SP[51]          ; [CPU_] |4538| 
        MOVL      XAR1,ACC              ; [CPU_] |4538| 
        MOV       AL,*-SP[32]           ; [CPU_] |4538| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4538| 
        B         $C$L149,UNC           ; [CPU_] |4538| 
        ; branch occurs ; [] |4538| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4536,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4536| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4536| 
        MOVU      ACC,AR4               ; [CPU_] |4536| 
        ADD       ACC,*-SP[51]          ; [CPU_] |4536| 
        MOVL      XAR1,ACC              ; [CPU_] |4536| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4536| 
	.dwpsn	file "../Source/prod.c",line 4537,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4537| 
        ; branch occurs ; [] |4537| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4534,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4534| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4534| 
        MOVU      ACC,AR4               ; [CPU_] |4534| 
        ADD       ACC,*-SP[51]          ; [CPU_] |4534| 
        MOVL      XAR1,ACC              ; [CPU_] |4534| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4534| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4541| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4541| 
        ; call occurs [#_dac_setmode] ; [] |4541| 
	.dwpsn	file "../Source/prod.c",line 4543,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4543| 
        MOV       AH,*-SP[39]           ; [CPU_] |4543| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4543| 
        ; call occurs [#_mcbsp_xmit] ; [] |4543| 
	.dwpsn	file "../Source/prod.c",line 4544,column 5,is_stmt,isa 0
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("_latch_dac")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4544| 
        ; call occurs [#_latch_dac] ; [] |4544| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4546| 
        MOV       T,*-SP[51]            ; [CPU_] |4546| 
        LSL       AL,T                  ; [CPU_] |4546| 
        OR        *-SP[48],AL           ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4549,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4549| 
        ; branch occurs ; [] |4549| 
$C$L150:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4455,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4455| 
        B         $C$L320,LO            ; [CPU_] |4455| 
        ; branchcc occurs ; [] |4455| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4455| 
        MOVL      XAR0,#66              ; [CPU_] |4455| 
        MOVL      ACC,XAR5              ; [CPU_] |4455| 
        ADDB      ACC,#2                ; [CPU_] |4455| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4455| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4455| 
        MOVZ      AR7,AR6               ; [CPU_] |4455| 
        MOV       AL,*-SP[50]           ; [CPU_] |4455| 
        MOVU      ACC,AL                ; [CPU_] |4455| 
        CMPL      ACC,XAR7              ; [CPU_] |4455| 
        B         $C$L320,NEQ           ; [CPU_] |4455| 
        ; branchcc occurs ; [] |4455| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4455| 
        CMPB      AL,#7                 ; [CPU_] |4455| 
        B         $C$L320,NEQ           ; [CPU_] |4455| 
        ; branchcc occurs ; [] |4455| 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4461| 
        MOVL      ACC,XAR5              ; [CPU_] |4461| 
        MOVL      XAR0,#66              ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        MOV       *-SP[50],AR6          ; [CPU_] |4460| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4461| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4461| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4461| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[53],#3           ; [CPU_] |4461| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4464,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4464| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4466,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4466| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4466| 
	.dwpsn	file "../Source/prod.c",line 4467,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4467| 
        MOV       *XAR7++,AL            ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4468| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4468| 
        MOV       *XAR0++,AL            ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4469,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4469| 
        MOV       *XAR7++,AL            ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4465,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4465| 
        ; branchcc occurs ; [] |4465| 
	.dwpsn	file "../Source/prod.c",line 4463,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4469,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4463,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4463| 
        ; branchcc occurs ; [] |4463| 
	.dwpsn	file "../Source/prod.c",line 4476,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4476| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4476| 
        ; call occurs [#U$$TOFS] ; [] |4476| 
        MOVL      XAR1,ACC              ; [CPU_] |4476| 
        MOV       AL,*-SP[35]           ; [CPU_] |4476| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4476| 
        ; call occurs [#U$$TOFS] ; [] |4476| 
        MOVL      XAR0,#40              ; [CPU_] |4476| 
        MOV       T,*-SP[50]            ; [CPU_] |4476| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4476| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4476| 
        MOVB      AL,#12                ; [CPU_] |4476| 
        MPYU      ACC,T,AL              ; [CPU_] |4476| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4476| 
        ADDL      ACC,XAR6              ; [CPU_] |4476| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4476| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4476| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4476| 
        ; call occurs [#FS$$SUB] ; [] |4476| 
        MOVL      XAR0,#42              ; [CPU_] |4476| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4476| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4476| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4476| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4476| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4476| 
        ; call occurs [#FS$$SUB] ; [] |4476| 
        MOVL      XAR0,#42              ; [CPU_] |4476| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4476| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4476| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4476| 
        ; call occurs [#FS$$DIV] ; [] |4476| 
        MOVL      XAR6,ACC              ; [CPU_] |4476| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |4476| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4476| 
        MOVL      XAR4,ACC              ; [CPU_] |4476| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4476| 
	.dwpsn	file "../Source/prod.c",line 4479,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4479| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4479| 
        ; call occurs [#U$$TOFS] ; [] |4479| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4479| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4479| 
        ; call occurs [#FS$$SUB] ; [] |4479| 
        MOVL      XAR1,ACC              ; [CPU_] |4479| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4479| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4479| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4479| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4479| 
        ; call occurs [#FS$$SUB] ; [] |4479| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4479| 
        MOVL      ACC,XAR1              ; [CPU_] |4479| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4479| 
        ; call occurs [#FS$$DIV] ; [] |4479| 
        MOVL      XAR1,*-SP[56]         ; [CPU_] |4479| 
        MOVL      XAR6,ACC              ; [CPU_] |4479| 
        MOVL      ACC,XAR1              ; [CPU_] |4479| 
        ADD       ACC,#49 << 6          ; [CPU_] |4479| 
        MOVL      XAR4,ACC              ; [CPU_] |4479| 
	.dwpsn	file "../Source/prod.c",line 4482,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4482| 
	.dwpsn	file "../Source/prod.c",line 4479,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4479| 
	.dwpsn	file "../Source/prod.c",line 4482,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4482| 
        MOVL      XAR4,ACC              ; [CPU_] |4482| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4482| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4482| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4482| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4482| 
        ; call occurs [#FS$$MPY] ; [] |4482| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4482| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4482| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4482| 
        ; call occurs [#FS$$SUB] ; [] |4482| 
        MOVL      XAR6,ACC              ; [CPU_] |4482| 
        MOVL      ACC,XAR1              ; [CPU_] |4482| 
        ADD       ACC,#785 << 2         ; [CPU_] |4482| 
        MOVL      XAR4,ACC              ; [CPU_] |4482| 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4482,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4482| 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4485| 
        ; call occurs [#_dac_setmode] ; [] |4485| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4491| 
        ; call occurs [#_ad7738_setcal] ; [] |4491| 
        MOVL      XAR0,#78              ; [CPU_] |4491| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4492,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |4492| 
        MOVL      XAR1,ACC              ; [CPU_] |4492| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4492| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4492| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4492| 
	.dwpsn	file "../Source/prod.c",line 4493,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4493| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4493| 
        ; call occurs [#_ad7738_resetvall] ; [] |4493| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4486,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |4486| 
	.dwpsn	file "../Source/prod.c",line 4497,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4497| 
        ; branch occurs ; [] |4497| 
$C$L153:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4399,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4399| 
        B         $C$L320,LO            ; [CPU_] |4399| 
        ; branchcc occurs ; [] |4399| 
        MOVL      ACC,XAR4              ; [CPU_] |4399| 
        MOVL      XAR0,#66              ; [CPU_] |4399| 
        MOVL      *-SP[56],XAR4         ; [CPU_] |4399| 
        ADDB      ACC,#2                ; [CPU_] |4399| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4399| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4399| 
        MOV       AL,*-SP[50]           ; [CPU_] |4399| 
        MOVU      ACC,AL                ; [CPU_] |4399| 
        CMPL      ACC,XAR6              ; [CPU_] |4399| 
        B         $C$L320,NEQ           ; [CPU_] |4399| 
        ; branchcc occurs ; [] |4399| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4399| 
        B         $C$L320,LT            ; [CPU_] |4399| 
        ; branchcc occurs ; [] |4399| 
        CMPB      AL,#2                 ; [CPU_] |4399| 
        B         $C$L320,GEQ           ; [CPU_] |4399| 
        ; branchcc occurs ; [] |4399| 
	.dwpsn	file "../Source/prod.c",line 4406,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4406| 
	.dwpsn	file "../Source/prod.c",line 4405,column 5,is_stmt,isa 0
        MOVL      XAR5,*-SP[56]         ; [CPU_] |4405| 
        MOV       *-SP[39],AL           ; [CPU_] |4405| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4406,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4406| 
        MOVZ      AR7,AR6               ; [CPU_] |4406| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4408,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4408| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4408| 
	.dwpsn	file "../Source/prod.c",line 4407,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4407| 
        ADDB      XAR4,#2               ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4408,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4408| 
	.dwpsn	file "../Source/prod.c",line 4407,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4407| 
        ; branchcc occurs ; [] |4407| 
	.dwpsn	file "../Source/prod.c",line 4411,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4411| 
        SUBB      XAR4,#24              ; [CPU_U] |4411| 
        MOVZ      AR1,AR4               ; [CPU_] |4411| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4411| 
        ADDL      XAR1,ACC              ; [CPU_] |4411| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4411| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4411| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4411| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4411| 
        ; call occurs [#FS$$CMP] ; [] |4411| 
        CMPB      AL,#0                 ; [CPU_] |4411| 
        B         $C$L320,NEQ           ; [CPU_] |4411| 
        ; branchcc occurs ; [] |4411| 
	.dwpsn	file "../Source/prod.c",line 4415,column 5,is_stmt,isa 0
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4415| 
        ; call occurs [#_lcd_clear] ; [] |4415| 
	.dwpsn	file "../Source/prod.c",line 4416,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4416| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4416| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4416| 
        ; call occurs [#_lcd_puts] ; [] |4416| 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4417| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4417| 
        MOVL      XAR0,#44              ; [CPU_] |4417| 
        ADD       AL,*-SP[50]           ; [CPU_] |4417| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4417| 
        MOV       *-SP[3],AL            ; [CPU_] |4417| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4417| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("_sprintf")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4417| 
        ; call occurs [#_sprintf] ; [] |4417| 
        MOVL      XAR0,#44              ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4418,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4418| 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4418,column 5,is_stmt,isa 0
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4418| 
        ; call occurs [#_lcd_puts] ; [] |4418| 
	.dwpsn	file "../Source/prod.c",line 4419,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4419| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4419| 
        MOVL      XAR0,#44              ; [CPU_] |4419| 
        ADD       AL,*-SP[39]           ; [CPU_] |4419| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4419| 
        MOV       *-SP[3],AL            ; [CPU_] |4419| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4419| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4419| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4419| 
        MOVL      XAR4,XAR1             ; [CPU_] |4419| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("_sprintf")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4419| 
        ; call occurs [#_sprintf] ; [] |4419| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4420| 
	.dwpsn	file "../Source/prod.c",line 4419,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4419| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4420| 
        ; call occurs [#_lcd_puts] ; [] |4420| 
	.dwpsn	file "../Source/prod.c",line 4421,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4421| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4421| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4421| 
        ; call occurs [#_lcd_puts] ; [] |4421| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4423| 
        SUBB      XAR4,#32              ; [CPU_U] |4423| 
        MOVZ      AR1,AR4               ; [CPU_] |4423| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4421,column 5,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |4421| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4423| 
        ADDL      XAR1,ACC              ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4424| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4423| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4423| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4425| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4424| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4425| 
        MOVB      ACC,#0                ; [CPU_] |4425| 
        SUBB      ACC,#1                ; [CPU_] |4425| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4425| 
        B         $C$L157,EQ            ; [CPU_] |4425| 
        ; branchcc occurs ; [] |4425| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4426,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4426| 
        ; branch occurs ; [] |4426| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4427,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4427| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("_delay_us")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4427| 
        ; call occurs [#_delay_us] ; [] |4427| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4426,column 13,is_stmt,isa 0
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4426| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4426| 
        CMPB      AL,#0                 ; [CPU_] |4426| 
        B         $C$L155,EQ            ; [CPU_] |4426| 
        ; branchcc occurs ; [] |4426| 
	.dwpsn	file "../Source/prod.c",line 4429,column 6,is_stmt,isa 0
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4429| 
        ; call occurs [#_ad7738_getraw] ; [] |4429| 
	.dwpsn	file "../Source/prod.c",line 4430,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |4430| 
        ADDL      XAR4,ACC              ; [CPU_] |4430| 
        MOVL      XAR0,#22              ; [CPU_] |4430| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4430| 
        MOVL      XAR0,#22              ; [CPU_] |4430| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4430| 
        ASR64     ACC:P,16              ; [CPU_] |4430| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4430| 
        MOVL      XAR0,#22              ; [CPU_] |4430| 
        ASR64     ACC:P,16              ; [CPU_] |4430| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4430| 
        MOVL      XAR0,#22              ; [CPU_] |4430| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4430| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4430| 
        MOVL      XAR0,#22              ; [CPU_] |4430| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4430| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4430| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4430| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4430| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4425| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4425| 
        MOVB      ACC,#0                ; [CPU_] |4425| 
        SUBB      ACC,#1                ; [CPU_] |4425| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4425| 
        B         $C$L156,NEQ           ; [CPU_] |4425| 
        ; branchcc occurs ; [] |4425| 
$C$L157:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4432| 
        B         $C$L158,NEQ           ; [CPU_] |4432| 
        ; branchcc occurs ; [] |4432| 
	.dwpsn	file "../Source/prod.c",line 4433,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4433| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4433| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4433| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4433| 
        ; call occurs [#FS$$SUB] ; [] |4433| 
        MOVL      XAR6,ACC              ; [CPU_] |4433| 
        MOV       AL,#16384             ; [CPU_] |4433| 
        MOV       AH,#17948             ; [CPU_] |4433| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4433| 
        MOVL      ACC,XAR6              ; [CPU_] |4433| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4433| 
        ; call occurs [#FS$$MPY] ; [] |4433| 
        MOVL      XAR1,ACC              ; [CPU_] |4433| 
        MOVL      P,*-SP[28]            ; [CPU_] |4433| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4433| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4433| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4433| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4433| 
        ; call occurs [#LL$$TOFS] ; [] |4433| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4433| 
        MOVL      ACC,XAR1              ; [CPU_] |4433| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4433| 
        ; call occurs [#FS$$DIV] ; [] |4433| 
        MOVL      XAR0,#40              ; [CPU_] |4433| 
        MOV       T,*-SP[50]            ; [CPU_] |4433| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4433| 
        MOVL      XAR6,ACC              ; [CPU_] |4433| 
        MOVB      AL,#10                ; [CPU_] |4433| 
        MPYU      ACC,T,AL              ; [CPU_] |4433| 
        ADDL      ACC,XAR7              ; [CPU_] |4433| 
        MOVL      XAR4,ACC              ; [CPU_] |4433| 
        MOVB      XAR0,#44              ; [CPU_] |4433| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4433| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4438,column 6,is_stmt,isa 0
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4438| 
        ; call occurs [#_ad7738_setcal] ; [] |4438| 
        MOVL      XAR0,#78              ; [CPU_] |4438| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4438| 
	.dwpsn	file "../Source/prod.c",line 4439,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |4439| 
        MOVL      XAR1,ACC              ; [CPU_] |4439| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4439| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4439| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4439| 
	.dwpsn	file "../Source/prod.c",line 4440,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4440| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4440| 
        ; call occurs [#_ad7738_resetvall] ; [] |4440| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4436,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |4436| 
$C$L158:    
        MOVL      XAR7,*-SP[56]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4443,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4443| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4444,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4443,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4444,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4443,column 17,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4444,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4443,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4443| 
        B         $C$L159,HI            ; [CPU_] |4443| 
        ; branchcc occurs ; [] |4443| 
	.dwpsn	file "../Source/prod.c",line 4446,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4446| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4449,column 5,is_stmt,isa 0
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4449| 
        ; call occurs [#_lcd_clear] ; [] |4449| 
	.dwpsn	file "../Source/prod.c",line 4450,column 5,is_stmt,isa 0
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("_update_units")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4450| 
        ; call occurs [#_update_units] ; [] |4450| 
	.dwpsn	file "../Source/prod.c",line 4451,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4451| 
        ; branch occurs ; [] |4451| 
$C$L160:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4374,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4374| 
        B         $C$L320,LO            ; [CPU_] |4374| 
        ; branchcc occurs ; [] |4374| 
        MOVL      ACC,XAR4              ; [CPU_] |4374| 
        MOVL      XAR0,#66              ; [CPU_] |4374| 
        ADDB      ACC,#2                ; [CPU_] |4374| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4374| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4374| 
        B         $C$L320,LT            ; [CPU_] |4374| 
        ; branchcc occurs ; [] |4374| 
        MOVL      XAR5,XAR4             ; [CPU_] |4374| 
        MOVL      XAR0,#66              ; [CPU_] |4374| 
        CMPB      AL,#4                 ; [CPU_] |4374| 
        ADDB      XAR5,#2               ; [CPU_] |4374| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4374| 
        B         $C$L320,GEQ           ; [CPU_] |4374| 
        ; branchcc occurs ; [] |4374| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4374| 
        CMPB      AH,#2                 ; [CPU_] |4374| 
        B         $C$L320,NEQ           ; [CPU_] |4374| 
        ; branchcc occurs ; [] |4374| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4381| 
        MOVL      XAR0,#66              ; [CPU_] |4381| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOV       *-SP[50],AL           ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4384,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4384| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4381| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4381| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4381| 
	.dwpsn	file "../Source/prod.c",line 4382,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4382| 
        MOV       *-SP[53],#4           ; [CPU_] |4382| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4384,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4384| 
        ; branch occurs ; [] |4384| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4385,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4385| 
        SUBB      XAR4,#24              ; [CPU_U] |4385| 
        MOVZ      AR4,AR4               ; [CPU_] |4385| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4385| 
        MOVL      XAR0,#44              ; [CPU_] |4385| 
        ADDL      XAR4,ACC              ; [CPU_] |4385| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4385| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4387,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4387| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4387| 
	.dwpsn	file "../Source/prod.c",line 4388,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4388| 
        MOV       *XAR7++,AL            ; [CPU_] |4388| 
	.dwpsn	file "../Source/prod.c",line 4389,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4389| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4389| 
        MOV       *XAR4++,AL            ; [CPU_] |4389| 
	.dwpsn	file "../Source/prod.c",line 4390,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4390| 
        MOV       *XAR7++,AL            ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4386,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4386| 
        ; branchcc occurs ; [] |4386| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4390,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4384,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4384| 
        MOV       PL,AL                 ; [CPU_] |4384| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4384,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4384| 
        MOV       AL,PL                 ; [CPU_] |4384| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4384| 
        B         $C$L161,LT            ; [CPU_] |4384| 
        ; branchcc occurs ; [] |4384| 
        B         $C$L743,UNC           ; [CPU_] |4384| 
        ; branch occurs ; [] |4384| 
$C$L164:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5329,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5329| 
        B         $C$L320,LO            ; [CPU_] |5329| 
        ; branchcc occurs ; [] |5329| 
	.dwpsn	file "../Source/prod.c",line 5334,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5334| 
        MOVL      XAR0,#66              ; [CPU_] |5334| 
        MOVL      ACC,XAR7              ; [CPU_] |5334| 
        ADDB      ACC,#2                ; [CPU_] |5334| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5334| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#13              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#24              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#35              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#14              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#25              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#36              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L320,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5342,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5342| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5342| 
        MOVL      XAR6,ACC              ; [CPU_] |5342| 
        MOV       AL,*XAR7              ; [CPU_] |5342| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5342| 
	.dwpsn	file "../Source/prod.c",line 5343,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5343| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5343| 
        MOVL      XAR6,ACC              ; [CPU_] |5343| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5343| 
        MOV       *XAR4++,AL            ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5344| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5344| 
        MOVL      XAR6,ACC              ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5342,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5342| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5344| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5345| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5345| 
        MOVL      XAR6,ACC              ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5345| 
        MOV       *XAR4++,AL            ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5346| 
        ANDB      AL,#0xfe              ; [CPU_] |5346| 
        MOVZ      AR0,AL                ; [CPU_] |5346| 
        MOVL      ACC,XAR5              ; [CPU_] |5346| 
        ADD       ACC,#199 << 4         ; [CPU_] |5346| 
        MOVL      XAR6,ACC              ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5347,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5347| 
        ADD       ACC,#199 << 4         ; [CPU_] |5347| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5347,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5347| 
        MOVL      XAR0,P                ; [CPU_] |5347| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5347| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5347| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5351,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5351| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5351| 
	.dwpsn	file "../Source/prod.c",line 5352,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5352| 
        MOV       *XAR4++,AL            ; [CPU_] |5352| 
	.dwpsn	file "../Source/prod.c",line 5353,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5353| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5353| 
        MOV       *XAR0++,AL            ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5354,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5354| 
        MOV       *XAR4++,AL            ; [CPU_] |5354| 
	.dwpsn	file "../Source/prod.c",line 5350,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5350| 
        ; branchcc occurs ; [] |5350| 
	.dwpsn	file "../Source/prod.c",line 5357,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5357| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5359,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5359| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5359| 
	.dwpsn	file "../Source/prod.c",line 5360,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5360| 
        MOV       *XAR4++,AL            ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5361| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5361| 
        MOV       *XAR0++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5362,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5362| 
        MOV       *XAR4++,AL            ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5358,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5358| 
        ; branchcc occurs ; [] |5358| 
	.dwpsn	file "../Source/prod.c",line 5341,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5341| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5344| 
        ADD       *-SP[53],#11          ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5341,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5341| 
        ADDB      XAR1,#8               ; [CPU_] |5341| 
        ADDB      ACC,#8                ; [CPU_] |5341| 
        SUBB      XAR6,#1               ; [CPU_U] |5341| 
        MOVZ      AR3,AR6               ; [CPU_] |5341| 
        MOVL      P,ACC                 ; [CPU_] |5341| 
        CMP       AR6,#-1               ; [CPU_] |5341| 
        B         $C$L165,NEQ           ; [CPU_] |5341| 
        ; branchcc occurs ; [] |5341| 
        B         $C$L176,UNC           ; [CPU_] |5341| 
        ; branch occurs ; [] |5341| 
$C$L168:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5266,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5266| 
        B         $C$L320,LO            ; [CPU_] |5266| 
        ; branchcc occurs ; [] |5266| 
	.dwpsn	file "../Source/prod.c",line 5271,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5271| 
        MOVL      XAR0,#66              ; [CPU_] |5271| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5271| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L169,LEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        CMPB      AL,#7                 ; [CPU_] |5271| 
        B         $C$L320,NEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5271| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L170,LEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        CMPB      AL,#7                 ; [CPU_] |5271| 
        B         $C$L320,NEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5271| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L171,LEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        CMPB      AL,#7                 ; [CPU_] |5271| 
        B         $C$L320,NEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5271| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L172,LEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        CMPB      AL,#7                 ; [CPU_] |5271| 
        B         $C$L320,NEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5271| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L320,GEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        MOVB      XAR0,#13              ; [CPU_] |5271| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L320,GEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        MOVB      XAR0,#23              ; [CPU_] |5271| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L320,GEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        MOVB      XAR0,#33              ; [CPU_] |5271| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5271| 
        CMPB      AL,#4                 ; [CPU_] |5271| 
        B         $C$L320,GEQ           ; [CPU_] |5271| 
        ; branchcc occurs ; [] |5271| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5282,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5282| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5282| 
        MOVL      XAR5,ACC              ; [CPU_] |5282| 
        MOV       AL,*XAR7              ; [CPU_] |5282| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5283,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5283| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5283| 
        MOVL      XAR5,ACC              ; [CPU_] |5283| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5283| 
        MOV       *XAR4++,AL            ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5284| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5284| 
        MOVL      XAR5,ACC              ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5282,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5284| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5285,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5285| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5285| 
        MOVL      XAR5,ACC              ; [CPU_] |5285| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5285,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5285| 
        MOVL      XAR5,P                ; [CPU_] |5285| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5285| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5296,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5296| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5297| 
        MOV       *XAR4++,AL            ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5298,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5298| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5298| 
        MOV       *XAR5++,AL            ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5299| 
        MOV       *XAR4++,AL            ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5295,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5295| 
        ; branchcc occurs ; [] |5295| 
	.dwpsn	file "../Source/prod.c",line 5305,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5305| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5312,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5312| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5312| 
	.dwpsn	file "../Source/prod.c",line 5313,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5313| 
        MOV       *XAR4++,AL            ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5314,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5314| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5314| 
        MOV       *XAR5++,AL            ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5315,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5315| 
        MOV       *XAR4++,AL            ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5311,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5311| 
        ; branchcc occurs ; [] |5311| 
	.dwpsn	file "../Source/prod.c",line 5281,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5284| 
        ADD       *-SP[53],#10          ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5281,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5281| 
        ADDB      XAR1,#12              ; [CPU_] |5281| 
        ADDB      ACC,#12               ; [CPU_] |5281| 
        SUBB      XAR6,#1               ; [CPU_U] |5281| 
        MOVZ      AR3,AR6               ; [CPU_] |5281| 
        MOVL      P,ACC                 ; [CPU_] |5281| 
        CMP       AR6,#-1               ; [CPU_] |5281| 
        B         $C$L173,NEQ           ; [CPU_] |5281| 
        ; branchcc occurs ; [] |5281| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5322,column 5,is_stmt,isa 0
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5322| 
        ; call occurs [#_ad7738_setcal] ; [] |5322| 
	.dwpsn	file "../Source/prod.c",line 5325,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5325| 
        ; branch occurs ; [] |5325| 
$C$L177:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5234,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5234| 
        B         $C$L320,LO            ; [CPU_] |5234| 
        ; branchcc occurs ; [] |5234| 
	.dwpsn	file "../Source/prod.c",line 5239,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5239| 
        MOVL      XAR0,#66              ; [CPU_] |5239| 
        MOVL      ACC,XAR7              ; [CPU_] |5239| 
        ADDB      ACC,#2                ; [CPU_] |5239| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5239| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GT            ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GT            ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVB      XAR0,#8               ; [CPU_] |5239| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GT            ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVB      XAR0,#11              ; [CPU_] |5239| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GT            ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5239| 
        CMPB      AL,#4                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5239| 
        CMPB      AL,#4                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVB      XAR0,#9               ; [CPU_] |5239| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5239| 
        CMPB      AL,#4                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVB      XAR0,#12              ; [CPU_] |5239| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5239| 
        CMPB      AL,#4                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVL      ACC,XAR7              ; [CPU_] |5239| 
        MOVL      XAR0,#64              ; [CPU_] |5239| 
        ADDB      ACC,#4                ; [CPU_] |5239| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5239| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVB      XAR0,#10              ; [CPU_] |5239| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVB      XAR0,#13              ; [CPU_] |5239| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5239| 
        CMPB      AL,#6                 ; [CPU_] |5239| 
        B         $C$L320,GEQ           ; [CPU_] |5239| 
        ; branchcc occurs ; [] |5239| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5250,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5250| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5250,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5252,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5252| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5252| 
        ADDB      XAR7,#1               ; [CPU_] |5252| 
	.dwpsn	file "../Source/prod.c",line 5253,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5253| 
        MOV       *XAR4++,AL            ; [CPU_] |5253| 
	.dwpsn	file "../Source/prod.c",line 5254,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5254| 
        ADDB      XAR7,#1               ; [CPU_] |5254| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5254| 
	.dwpsn	file "../Source/prod.c",line 5255,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5255| 
	.dwpsn	file "../Source/prod.c",line 5249,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5255,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5255| 
	.dwpsn	file "../Source/prod.c",line 5249,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5249| 
        ; branchcc occurs ; [] |5249| 
	.dwpsn	file "../Source/prod.c",line 5259,column 5,is_stmt,isa 0
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5259| 
        ; call occurs [#_lcd_clear] ; [] |5259| 
	.dwpsn	file "../Source/prod.c",line 5260,column 5,is_stmt,isa 0
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("_update_units")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5260| 
        ; call occurs [#_update_units] ; [] |5260| 
	.dwpsn	file "../Source/prod.c",line 5255,column 6,is_stmt,isa 0
        ADD       *-SP[53],#12          ; [CPU_] |5255| 
	.dwpsn	file "../Source/prod.c",line 5262,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5262| 
        ; branch occurs ; [] |5262| 
$C$L179:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5213| 
        B         $C$L320,LO            ; [CPU_] |5213| 
        ; branchcc occurs ; [] |5213| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5218,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5218| 
        MOVB      XAR0,#36              ; [CPU_] |5218| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5218| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5218| 
	.dwpsn	file "../Source/prod.c",line 5219,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5219| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5219| 
        B         $C$L181,NEQ           ; [CPU_] |5219| 
        ; branchcc occurs ; [] |5219| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5221,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5221| 
	.dwpsn	file "../Source/prod.c",line 5222,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5222| 
	.dwpsn	file "../Source/prod.c",line 5220,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5220| 
        ; branchcc occurs ; [] |5220| 
	.dwpsn	file "../Source/prod.c",line 5224,column 6,is_stmt,isa 0
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("_update_units")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5224| 
        ; call occurs [#_update_units] ; [] |5224| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5228,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5228| 
	.dwpsn	file "../Source/prod.c",line 5230,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5230| 
        ; branch occurs ; [] |5230| 
$C$L182:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5172,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5172| 
        B         $C$L320,LO            ; [CPU_] |5172| 
        ; branchcc occurs ; [] |5172| 
	.dwpsn	file "../Source/prod.c",line 5178,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5178| 
        ADDB      XAR4,#2               ; [CPU_] |5178| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5178| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5178| 
        MOVZ      AR3,AL                ; [CPU_] |5178| 
	.dwpsn	file "../Source/prod.c",line 5179,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5179| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5179| 
        CMP       AR3,#4096             ; [CPU_] |5179| 
        B         $C$L320,HI            ; [CPU_] |5179| 
        ; branchcc occurs ; [] |5179| 
	.dwpsn	file "../Source/prod.c",line 5185,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5185| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5185| 
        MOVZ      AR7,AR6               ; [CPU_] |5185| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5187,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5187| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5187| 
	.dwpsn	file "../Source/prod.c",line 5186,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5186| 
        ADDB      XAR4,#2               ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5187,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5187| 
	.dwpsn	file "../Source/prod.c",line 5186,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5186| 
        ; branchcc occurs ; [] |5186| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5192,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5192| 
        MOVB      XAR1,#38              ; [CPU_] |5192| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5192| 
	.dwpsn	file "../Source/prod.c",line 5193,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5193| 
        MOVB      XAR1,#40              ; [CPU_] |5193| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5193| 
	.dwpsn	file "../Source/prod.c",line 5194,column 5,is_stmt,isa 0
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("_maf_rst")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5194| 
        ; call occurs [#_maf_rst] ; [] |5194| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5199| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5199| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5200,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5200| 
        LSR       AL,8                  ; [CPU_] |5200| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5200| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5203| 
        MOVB      XAR1,#40              ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5204| 
        MOVL      XAR0,#50              ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5203| 
        ANDB      AL,#0xff              ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5204| 
        LSR       AL,8                  ; [CPU_] |5204| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5205| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5206| 
        MOV       *-SP[53],#8           ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5209,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5209| 
        ; branch occurs ; [] |5209| 
$C$L184:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5139,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5139| 
        B         $C$L320,LO            ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
        MOVL      ACC,XAR4              ; [CPU_] |5139| 
        MOVL      XAR0,#66              ; [CPU_] |5139| 
        ADDB      ACC,#2                ; [CPU_] |5139| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5139| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5139| 
        B         $C$L320,LT            ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
        MOVL      XAR5,XAR4             ; [CPU_] |5139| 
        MOVL      XAR0,#66              ; [CPU_] |5139| 
        CMPB      AL,#4                 ; [CPU_] |5139| 
        ADDB      XAR5,#2               ; [CPU_] |5139| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5139| 
        B         $C$L320,GEQ           ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5139| 
        B         $C$L320,LT            ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
        CMPB      AH,#20                ; [CPU_] |5139| 
        B         $C$L320,GEQ           ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5149| 
        MOVL      XAR0,#66              ; [CPU_] |5149| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5149| 
        MOVL      XAR0,#80              ; [CPU_] |5149| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5149| 
	.dwpsn	file "../Source/prod.c",line 5147,column 5,is_stmt,isa 0
        MOVL      *-SP[50],ACC          ; [CPU_] |5147| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[50]          ; [CPU_] |5149| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5149| 
        B         $C$L318,NEQ           ; [CPU_] |5149| 
        ; branchcc occurs ; [] |5149| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5155,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5155| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5155| 
        MOVB      AL,#10                ; [CPU_] |5155| 
        MOV       T,*-SP[50]            ; [CPU_] |5155| 
        MPYU      ACC,T,AL              ; [CPU_] |5155| 
        ADDL      ACC,XAR6              ; [CPU_] |5155| 
        MOVL      XAR4,ACC              ; [CPU_] |5155| 
        MOVB      XAR0,#42              ; [CPU_] |5155| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[49]           ; [CPU_] |5155| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5156,column 5,is_stmt,isa 0
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5156| 
        ; call occurs [#_ad7738_setcal] ; [] |5156| 
        MOVL      XAR0,#78              ; [CPU_] |5156| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5156| 
	.dwpsn	file "../Source/prod.c",line 5158,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |5158| 
        MOVL      XAR1,ACC              ; [CPU_] |5158| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5158| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5158| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5158| 
	.dwpsn	file "../Source/prod.c",line 5159,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5159| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5159| 
        ; call occurs [#_ad7738_resetvall] ; [] |5159| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5162,column 5,is_stmt,isa 0
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_update_units")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5162| 
        ; call occurs [#_update_units] ; [] |5162| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5165| 
        MOV       AL,*-SP[50]           ; [CPU_] |5165| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5165| 
        MOV       AL,*-SP[49]           ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5166,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5166| 
        MOV       *-SP[53],#4           ; [CPU_] |5166| 
	.dwpsn	file "../Source/prod.c",line 5168,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5168| 
        ; branch occurs ; [] |5168| 
$C$L185:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5103,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5103| 
        B         $C$L320,LO            ; [CPU_] |5103| 
        ; branchcc occurs ; [] |5103| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5109,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5109| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5111,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5111| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5111| 
	.dwpsn	file "../Source/prod.c",line 5112,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5112| 
        MOV       *XAR5++,AL            ; [CPU_] |5112| 
	.dwpsn	file "../Source/prod.c",line 5113,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5113| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5113| 
        MOV       *XAR1++,AL            ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5114,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5114| 
        MOV       *XAR5++,AL            ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5110,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5110| 
        ; branchcc occurs ; [] |5110| 
	.dwpsn	file "../Source/prod.c",line 5108,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5108| 
	.dwpsn	file "../Source/prod.c",line 5114,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5108,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
	.dwpsn	file "../Source/prod.c",line 5119,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5119| 
        MOVL      ACC,XAR4              ; [CPU_] |5119| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5119| 
        MOVL      XAR6,ACC              ; [CPU_] |5119| 
        MOV       AL,*XAR7              ; [CPU_] |5119| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5119| 
	.dwpsn	file "../Source/prod.c",line 5120,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5120| 
        MOVL      XAR6,XAR4             ; [CPU_] |5120| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5120| 
        MOVL      XAR4,ACC              ; [CPU_] |5120| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5120| 
        ANDB      AL,#0xff              ; [CPU_] |5120| 
        MOV       *XAR5++,AL            ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5121,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5121| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5121| 
        MOVL      XAR4,ACC              ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5119,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5119| 
	.dwpsn	file "../Source/prod.c",line 5121,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5121| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5122,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5122| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5122| 
        MOVL      XAR4,ACC              ; [CPU_] |5122| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5122| 
        LSR       AL,8                  ; [CPU_] |5122| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5122| 
	.dwpsn	file "../Source/prod.c",line 5121,column 5,is_stmt,isa 0
        ADD       *-SP[53],#2           ; [CPU_] |5121| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5127,column 5,is_stmt,isa 0
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5127| 
        ; call occurs [#_ad7738_setcal] ; [] |5127| 
	.dwpsn	file "../Source/prod.c",line 5128,column 5,is_stmt,isa 0
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_velf_rst")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5128| 
        ; call occurs [#_velf_rst] ; [] |5128| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5132,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5132| 
        ; branch occurs ; [] |5132| 
$C$L189:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5064,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5064| 
        B         $C$L320,LO            ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
        MOVL      ACC,XAR4              ; [CPU_] |5064| 
        MOVL      XAR0,#66              ; [CPU_] |5064| 
        ADDB      ACC,#2                ; [CPU_] |5064| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5064| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5064| 
        B         $C$L320,LT            ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
        MOVL      XAR5,XAR4             ; [CPU_] |5064| 
        MOVL      XAR0,#66              ; [CPU_] |5064| 
        CMPB      AL,#20                ; [CPU_] |5064| 
        ADDB      XAR5,#2               ; [CPU_] |5064| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5064| 
        B         $C$L320,GEQ           ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
	.dwpsn	file "../Source/prod.c",line 5068,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |5068| 
	.dwpsn	file "../Source/prod.c",line 5069,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5069| 
	.dwpsn	file "../Source/prod.c",line 5071,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5071| 
	.dwpsn	file "../Source/prod.c",line 5069,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5069| 
	.dwpsn	file "../Source/prod.c",line 5071,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5071| 
        ADDB      ACC,#2                ; [CPU_] |5071| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5071| 
        MOVL      XAR0,#40              ; [CPU_] |5071| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5071| 
        MOV       T,*-SP[49]            ; [CPU_] |5071| 
        MOVB      AL,#152               ; [CPU_] |5071| 
        MPYU      ACC,T,AL              ; [CPU_] |5071| 
        ADDL      ACC,XAR6              ; [CPU_] |5071| 
        ADDB      ACC,#224              ; [CPU_] |5071| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5071| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5073,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5073| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5073| 
	.dwpsn	file "../Source/prod.c",line 5074,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5074| 
        MOV       *XAR5++,AL            ; [CPU_] |5074| 
	.dwpsn	file "../Source/prod.c",line 5075,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5075| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5075| 
        MOV       *XAR7++,AL            ; [CPU_] |5075| 
	.dwpsn	file "../Source/prod.c",line 5076,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5076| 
        MOV       *XAR5++,AL            ; [CPU_] |5076| 
	.dwpsn	file "../Source/prod.c",line 5072,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5072| 
        ; branchcc occurs ; [] |5072| 
	.dwpsn	file "../Source/prod.c",line 5081,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5081| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5081| 
        MOVB      AL,#152               ; [CPU_] |5081| 
        MPYU      ACC,T,AL              ; [CPU_] |5081| 
        ADDL      ACC,XAR6              ; [CPU_] |5081| 
        MOVL      XAR1,ACC              ; [CPU_] |5081| 
        MOVB      XAR0,#125             ; [CPU_] |5081| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5081| 
        CMPB      AL,#247               ; [CPU_] |5081| 
        B         $C$L193,NEQ           ; [CPU_] |5081| 
        ; branchcc occurs ; [] |5081| 
	.dwpsn	file "../Source/prod.c",line 5083,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5083| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5083| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5083| 
        MOV       AL,#0                 ; [CPU_] |5083| 
        MOV       AH,#17096             ; [CPU_] |5083| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5083| 
        ; call occurs [#FS$$DIV] ; [] |5083| 
        MOVB      XAR0,#126             ; [CPU_] |5083| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5083| 
        MOVL      XAR0,#40              ; [CPU_] |5083| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5083| 
	.dwpsn	file "../Source/prod.c",line 5086,column 11,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |5086| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5087,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |5087| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5087| 
        CMPL      ACC,XAR6              ; [CPU_] |5087| 
        B         $C$L192,NEQ           ; [CPU_] |5087| 
        ; branchcc occurs ; [] |5087| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5090,column 8,is_stmt,isa 0
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5090| 
        ; call occurs [#_ad7738_setcal] ; [] |5090| 
        MOVL      XAR0,#78              ; [CPU_] |5090| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5090| 
	.dwpsn	file "../Source/prod.c",line 5091,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |5091| 
        MOVL      XAR4,ACC              ; [CPU_] |5091| 
        MOVL      *-SP[56],ACC          ; [CPU_] |5091| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5091| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5091| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5091| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5091| 
	.dwpsn	file "../Source/prod.c",line 5092,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5092| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5092| 
        ; call occurs [#_ad7738_resetvall] ; [] |5092| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5086,column 19,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |5086| 
        ADDB      XAR1,#10              ; [CPU_] |5086| 
        MOV       AL,*-SP[50]           ; [CPU_] |5086| 
        CMPB      AL,#4                 ; [CPU_] |5086| 
        B         $C$L191,LO            ; [CPU_] |5086| 
        ; branchcc occurs ; [] |5086| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5075,column 6,is_stmt,isa 0
        MOV       *-SP[53],#7           ; [CPU_] |5075| 
	.dwpsn	file "../Source/prod.c",line 5099,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5099| 
        ; branch occurs ; [] |5099| 
$C$L194:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4963,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4963| 
        B         $C$L320,LO            ; [CPU_] |4963| 
        ; branchcc occurs ; [] |4963| 
        MOVL      ACC,XAR4              ; [CPU_] |4963| 
        MOVL      XAR0,#66              ; [CPU_] |4963| 
        ADDB      ACC,#2                ; [CPU_] |4963| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4963| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4963| 
        B         $C$L320,LT            ; [CPU_] |4963| 
        ; branchcc occurs ; [] |4963| 
        MOVL      XAR5,XAR4             ; [CPU_] |4963| 
        MOVL      XAR0,#66              ; [CPU_] |4963| 
        CMPB      AL,#20                ; [CPU_] |4963| 
        ADDB      XAR5,#2               ; [CPU_] |4963| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4963| 
        B         $C$L320,GEQ           ; [CPU_] |4963| 
        ; branchcc occurs ; [] |4963| 
	.dwpsn	file "../Source/prod.c",line 4968,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |4968| 
        MOVL      XAR0,#66              ; [CPU_] |4968| 
        MOV       *-SP[49],AL           ; [CPU_] |4968| 
        ADDB      XAR5,#2               ; [CPU_] |4968| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4968| 
	.dwpsn	file "../Source/prod.c",line 4969,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |4969| 
        MOV       AL,AR6                ; [CPU_] |4969| 
        CMPB      AL,#247               ; [CPU_] |4969| 
        B         $C$L195,EQ            ; [CPU_] |4969| 
        ; branchcc occurs ; [] |4969| 
	.dwpsn	file "../Source/prod.c",line 4971,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4971| 
        MOVL      XAR0,#66              ; [CPU_] |4971| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4971| 
        MOVL      XAR0,#40              ; [CPU_] |4971| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4971| 
        MOVB      AL,#152               ; [CPU_] |4971| 
        MOV       T,*-SP[49]            ; [CPU_] |4971| 
        MPYU      ACC,T,AL              ; [CPU_] |4971| 
        ADDL      ACC,XAR7              ; [CPU_] |4971| 
        MOVL      XAR4,ACC              ; [CPU_] |4971| 
        MOVB      XAR0,#124             ; [CPU_] |4971| 
        MOV       PH,#0                 ; [CPU_] |4971| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4971| 
        ANDB      AL,#0xf0              ; [CPU_] |4971| 
        MOVU      ACC,AL                ; [CPU_] |4971| 
        MOVL      XAR7,ACC              ; [CPU_] |4971| 
        MOV       AL,AR6                ; [CPU_] |4971| 
        ANDB      AL,#240               ; [CPU_] |4971| 
        MOV       PL,AL                 ; [CPU_] |4971| 
        MOVL      ACC,XAR7              ; [CPU_] |4971| 
        CMPL      ACC,P                 ; [CPU_] |4971| 
        B         $C$L320,NEQ           ; [CPU_] |4971| 
        ; branchcc occurs ; [] |4971| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 4977,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4977| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4977| 
        MOVB      AL,#152               ; [CPU_] |4977| 
        MOV       T,*-SP[49]            ; [CPU_] |4977| 
        MPYU      ACC,T,AL              ; [CPU_] |4977| 
        ADDL      ACC,XAR7              ; [CPU_] |4977| 
        MOVL      XAR1,ACC              ; [CPU_] |4977| 
        MOVB      XAR0,#125             ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4978,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4978| 
	.dwpsn	file "../Source/prod.c",line 4977,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4978,column 5,is_stmt,isa 0
        MOV       AL,*-SP[49]           ; [CPU_] |4978| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4978| 
	.dwpsn	file "../Source/prod.c",line 4979,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |4979| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |4979| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4979| 
        MOV       AL,AR6                ; [CPU_] |4979| 
        MOV       *-SP[53],#4           ; [CPU_] |4979| 
	.dwpsn	file "../Source/prod.c",line 4981,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |4981| 
        B         $C$L205,EQ            ; [CPU_] |4981| 
        ; branchcc occurs ; [] |4981| 
	.dwpsn	file "../Source/prod.c",line 4984,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4984| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |4984| 
        B         $C$L204,EQ            ; [CPU_] |4984| 
        ; branchcc occurs ; [] |4984| 
	.dwpsn	file "../Source/prod.c",line 4988,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4988| 
        CMPB      AL,#34                ; [CPU_] |4988| 
        B         $C$L196,GT            ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        CMPB      AL,#34                ; [CPU_] |4988| 
        B         $C$L200,EQ            ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        CMPB      AL,#16                ; [CPU_] |4988| 
        B         $C$L203,EQ            ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        CMPB      AL,#17                ; [CPU_] |4988| 
        B         $C$L202,EQ            ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        B         $C$L204,UNC           ; [CPU_] |4988| 
        ; branch occurs ; [] |4988| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |4988| 
        B         $C$L198,EQ            ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        CMPB      AL,#36                ; [CPU_] |4988| 
        B         $C$L204,NEQ           ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5029,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5029| 
        B         $C$L197,EQ            ; [CPU_] |5029| 
        ; branchcc occurs ; [] |5029| 
        CMPB      AL,#35                ; [CPU_] |5029| 
        B         $C$L207,NEQ           ; [CPU_] |5029| 
        ; branchcc occurs ; [] |5029| 
	.dwpsn	file "../Source/prod.c",line 5034,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5034| 
        MOV       AH,#15820             ; [CPU_] |5034| 
	.dwpsn	file "../Source/prod.c",line 5035,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5035| 
        ; branch occurs ; [] |5035| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5031,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5031| 
        MOV       AH,#15649             ; [CPU_] |5031| 
	.dwpsn	file "../Source/prod.c",line 5032,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5032| 
        ; branch occurs ; [] |5032| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5017,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5017| 
        B         $C$L199,EQ            ; [CPU_] |5017| 
        ; branchcc occurs ; [] |5017| 
        CMPB      AL,#36                ; [CPU_] |5017| 
        B         $C$L207,NEQ           ; [CPU_] |5017| 
        ; branchcc occurs ; [] |5017| 
	.dwpsn	file "../Source/prod.c",line 5022,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5022| 
        MOV       AH,#16672             ; [CPU_] |5022| 
	.dwpsn	file "../Source/prod.c",line 5023,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5023| 
        ; branch occurs ; [] |5023| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5019,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5019| 
        MOV       AH,#16073             ; [CPU_] |5019| 
	.dwpsn	file "../Source/prod.c",line 5020,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5020| 
        ; branch occurs ; [] |5020| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5005,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5005| 
        B         $C$L201,EQ            ; [CPU_] |5005| 
        ; branchcc occurs ; [] |5005| 
        CMPB      AL,#36                ; [CPU_] |5005| 
        B         $C$L207,NEQ           ; [CPU_] |5005| 
        ; branchcc occurs ; [] |5005| 
	.dwpsn	file "../Source/prod.c",line 5010,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5010| 
        MOV       AH,#16843             ; [CPU_] |5010| 
	.dwpsn	file "../Source/prod.c",line 5011,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5011| 
        ; branch occurs ; [] |5011| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5007,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5007| 
        MOV       AH,#16418             ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 5008,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5008| 
        ; branch occurs ; [] |5008| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4998,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4998| 
        B         $C$L207,NEQ           ; [CPU_] |4998| 
        ; branchcc occurs ; [] |4998| 
	.dwpsn	file "../Source/prod.c",line 4999,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |4999| 
        MOV       AH,#16397             ; [CPU_] |4999| 
        B         $C$L206,UNC           ; [CPU_] |4999| 
        ; branch occurs ; [] |4999| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4991,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |4991| 
        B         $C$L207,NEQ           ; [CPU_] |4991| 
        ; branchcc occurs ; [] |4991| 
	.dwpsn	file "../Source/prod.c",line 4992,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |4992| 
        MOV       AH,#16104             ; [CPU_] |4992| 
        B         $C$L206,UNC           ; [CPU_] |4992| 
        ; branch occurs ; [] |4992| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 4986,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4986| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |4987| 
        ; branch occurs ; [] |4987| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 4982,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |4982| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4982| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4982| 
        MOV       AL,#0                 ; [CPU_] |4982| 
        MOV       AH,#17096             ; [CPU_] |4982| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4982| 
        ; call occurs [#FS$$DIV] ; [] |4982| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4982| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5048,column 10,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |5048| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5049,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |5049| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5049| 
        CMPL      ACC,XAR6              ; [CPU_] |5049| 
        B         $C$L209,NEQ           ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5050,column 7,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_update_units")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5050| 
        ; call occurs [#_update_units] ; [] |5050| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5052,column 7,is_stmt,isa 0
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5052| 
        ; call occurs [#_ad7738_setcal] ; [] |5052| 
        MOVL      XAR0,#78              ; [CPU_] |5052| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5052| 
	.dwpsn	file "../Source/prod.c",line 5053,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |5053| 
        MOVL      XAR4,ACC              ; [CPU_] |5053| 
        MOVL      *-SP[56],ACC          ; [CPU_] |5053| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5053| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5053| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5053| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5053| 
	.dwpsn	file "../Source/prod.c",line 5054,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5054| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5054| 
        ; call occurs [#_ad7738_resetvall] ; [] |5054| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5048,column 18,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |5048| 
        ADDB      XAR1,#10              ; [CPU_] |5048| 
        MOV       AL,*-SP[50]           ; [CPU_] |5048| 
        CMPB      AL,#4                 ; [CPU_] |5048| 
        B         $C$L208,LO            ; [CPU_] |5048| 
        ; branchcc occurs ; [] |5048| 
        B         $C$L304,UNC           ; [CPU_] |5048| 
        ; branch occurs ; [] |5048| 
$C$L210:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4935,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4935| 
        B         $C$L320,LO            ; [CPU_] |4935| 
        ; branchcc occurs ; [] |4935| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4935| 
        MOVL      XAR0,#66              ; [CPU_] |4935| 
        MOVL      ACC,XAR7              ; [CPU_] |4935| 
        ADDB      ACC,#2                ; [CPU_] |4935| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4935| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4935| 
        B         $C$L320,LT            ; [CPU_] |4935| 
        ; branchcc occurs ; [] |4935| 
        ADDB      XAR4,#2               ; [CPU_] |4935| 
        MOVL      XAR0,#66              ; [CPU_] |4935| 
        CMPB      AL,#20                ; [CPU_] |4935| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4935| 
        B         $C$L320,GEQ           ; [CPU_] |4935| 
        ; branchcc occurs ; [] |4935| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4935| 
        MOVB      AH,#4                 ; [CPU_] |4935| 
        ADD       AH,AR6                ; [CPU_] |4935| 
        CMP       AH,*-SP[51]           ; [CPU_] |4935| 
        B         $C$L320,HI            ; [CPU_] |4935| 
        ; branchcc occurs ; [] |4935| 
	.dwpsn	file "../Source/prod.c",line 4940,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |4940| 
	.dwpsn	file "../Source/prod.c",line 4941,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4941| 
        MOVL      XAR0,#66              ; [CPU_] |4941| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4941| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4941| 
        MOV       AL,*-SP[49]           ; [CPU_] |4941| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4941| 
        MOV       AL,AR6                ; [CPU_] |4941| 
	.dwpsn	file "../Source/prod.c",line 4943,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4943| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4943| 
        B         $C$L211,HIS           ; [CPU_] |4943| 
        ; branchcc occurs ; [] |4943| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4943| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 4945,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4945| 
        MOVB      XAR5,#0               ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4945,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |4945| 
        ; branchcc occurs ; [] |4945| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[49]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4946,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4946| 
	.dwpsn	file "../Source/prod.c",line 4945,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4946,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4946| 
	.dwpsn	file "../Source/prod.c",line 4945,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4946,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4946| 
	.dwpsn	file "../Source/prod.c",line 4945,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4945| 
        B         $C$L212,HI            ; [CPU_] |4945| 
        ; branchcc occurs ; [] |4945| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 4948,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4948| 
        MOVB      AL,#152               ; [CPU_] |4948| 
        MOV       T,*-SP[49]            ; [CPU_] |4948| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4948| 
        MPYU      P,T,AL                ; [CPU_] |4948| 
        MOVL      ACC,P                 ; [CPU_] |4948| 
        ADD       ACC,AR5               ; [CPU_] |4948| 
        ADDL      ACC,XAR6              ; [CPU_] |4948| 
        MOVL      XAR4,ACC              ; [CPU_] |4948| 
        MOVB      XAR0,#98              ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4952| 
	.dwpsn	file "../Source/prod.c",line 4948,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4952| 
        MOVL      XAR4,ACC              ; [CPU_] |4952| 
        MOVL      XAR1,ACC              ; [CPU_] |4952| 
        ADDB      XAR4,#98              ; [CPU_] |4952| 
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_strlen")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4952| 
        ; call occurs [#_strlen] ; [] |4952| 
	.dwpsn	file "../Source/prod.c",line 4953,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4953| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4953| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4953,column 5,is_stmt,isa 0
        MOV       *-SP[53],#4           ; [CPU_] |4953| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |4954| 
        ; branchcc occurs ; [] |4954| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4954,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4954| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 4955,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4955,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |4955| 
        INC       *-SP[53]              ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |4954| 
        B         $C$L214,HI            ; [CPU_] |4954| 
        ; branchcc occurs ; [] |4954| 
        B         $C$L304,UNC           ; [CPU_] |4954| 
        ; branch occurs ; [] |4954| 
$C$L215:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5493,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5493| 
        B         $C$L320,LO            ; [CPU_] |5493| 
        ; branchcc occurs ; [] |5493| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5498| 
	.dwpsn	file "../Source/prod.c",line 5499,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5499| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5498| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5498| 
        MOV       *-SP[49],AL           ; [CPU_] |5498| 
	.dwpsn	file "../Source/prod.c",line 5499,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5499| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5499| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5499| 
	.dwpsn	file "../Source/prod.c",line 5501,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5501| 
        SUBB      XAR5,#24              ; [CPU_U] |5501| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5501| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5503,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5503| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5503| 
	.dwpsn	file "../Source/prod.c",line 5504,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5504| 
        MOV       *XAR1++,AL            ; [CPU_] |5504| 
	.dwpsn	file "../Source/prod.c",line 5505,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5505| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5505| 
        MOV       *XAR5++,AL            ; [CPU_] |5505| 
	.dwpsn	file "../Source/prod.c",line 5506,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5506| 
        MOV       *XAR1++,AL            ; [CPU_] |5506| 
	.dwpsn	file "../Source/prod.c",line 5502,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5502| 
        ; branchcc occurs ; [] |5502| 
        MOV       AL,*-SP[49]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5510,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5510| 
        B         $C$L320,HIS           ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
        MOVL      XAR0,#40              ; [CPU_] |5510| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5510| 
        MOVB      AL,#12                ; [CPU_] |5510| 
        MOV       T,*-SP[49]            ; [CPU_] |5510| 
        MPYU      ACC,T,AL              ; [CPU_] |5510| 
        ADDL      ACC,XAR6              ; [CPU_] |5510| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5510| 
        MOVL      XAR4,ACC              ; [CPU_] |5510| 
        MOVL      *-SP[56],ACC          ; [CPU_] |5510| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5510| 
        CMPB      AL,#7                 ; [CPU_] |5510| 
        B         $C$L320,NEQ           ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5510| 
        MOV       *-SP[39],#0           ; [CPU_] |5510| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5510| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5510| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5510| 
        ; call occurs [#FS$$CMP] ; [] |5510| 
        CMPB      AL,#0                 ; [CPU_] |5510| 
        B         $C$L217,GEQ           ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
        MOV       *-SP[39],#1           ; [CPU_] |5510| 
$C$L217:    
        MOV       AL,*-SP[39]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
        MOV       AL,#0                 ; [CPU_] |5510| 
        MOV       AH,#16672             ; [CPU_] |5510| 
        MOV       *-SP[39],#0           ; [CPU_] |5510| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5510| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5510| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5510| 
        ; call occurs [#FS$$CMP] ; [] |5510| 
        CMPB      AL,#0                 ; [CPU_] |5510| 
        B         $C$L218,LEQ           ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
        MOV       *-SP[39],#1           ; [CPU_] |5510| 
$C$L218:    
        MOV       AL,*-SP[39]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
	.dwpsn	file "../Source/prod.c",line 5517,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5517| 
        MOV       AH,#0                 ; [CPU_] |5517| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5517| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5517| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5517| 
        ; call occurs [#FS$$CMP] ; [] |5517| 
        CMPB      AL,#0                 ; [CPU_] |5517| 
        B         $C$L219,GEQ           ; [CPU_] |5517| 
        ; branchcc occurs ; [] |5517| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5517| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5517| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5517| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5517| 
        B         $C$L220,UNC           ; [CPU_] |5517| 
        ; branch occurs ; [] |5517| 
$C$L219:    
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5517| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5517| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5517| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5517| 
$C$L220:    
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5517| 
        ; call occurs [#FS$$MPY] ; [] |5517| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5517| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5517| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5517| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5517| 
        ; call occurs [#FS$$ADD] ; [] |5517| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5517| 
        ; call occurs [#FS$$TOLL] ; [] |5517| 
	.dwpsn	file "../Source/prod.c",line 5524,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5524| 
	.dwpsn	file "../Source/prod.c",line 5517,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5517| 
	.dwpsn	file "../Source/prod.c",line 5505,column 6,is_stmt,isa 0
        MOV       *-SP[53],#7           ; [CPU_] |5505| 
	.dwpsn	file "../Source/prod.c",line 5517,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5517| 
	.dwpsn	file "../Source/prod.c",line 5524,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5524| 
        CMP64     ACC:P                 ; [CPU_] |5524| 
        B         $C$L222,LEQ           ; [CPU_] |5524| 
        ; branchcc occurs ; [] |5524| 
	.dwpsn	file "../Source/prod.c",line 5526,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5526| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5526| 
        MOV       *-SP[2],#0            ; [CPU_] |5526| 
        MOV       *-SP[1],#0            ; [CPU_] |5526| 
        MOVL      P,*-SP[32]            ; [CPU_] |5526| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5526| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$692, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5526| 
        ; call occurs [#LL$$CMP] ; [] |5526| 
        CMPB      AL,#0                 ; [CPU_] |5526| 
        B         $C$L221,GEQ           ; [CPU_] |5526| 
        ; branchcc occurs ; [] |5526| 
	.dwpsn	file "../Source/prod.c",line 5529,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5529| 
        MOV       *-SP[35],AL           ; [CPU_] |5529| 
        B         $C$L223,UNC           ; [CPU_] |5529| 
        ; branch occurs ; [] |5529| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5527,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5527| 
	.dwpsn	file "../Source/prod.c",line 5528,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5528| 
        ; branch occurs ; [] |5528| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5525,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5525| 
$C$L223:    
        MOV       AH,*-SP[49]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5532,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5532| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5532| 
        ; call occurs [#_mcbsp_xmit] ; [] |5532| 
	.dwpsn	file "../Source/prod.c",line 5533,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_latch_dac")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5533| 
        ; call occurs [#_latch_dac] ; [] |5533| 
	.dwpsn	file "../Source/prod.c",line 5536,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5536| 
        ANDB      AL,#0xff              ; [CPU_] |5536| 
        MOV       *XAR1++,AL            ; [CPU_] |5536| 
	.dwpsn	file "../Source/prod.c",line 5537,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5537| 
        LSR       AL,8                  ; [CPU_] |5537| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5537| 
	.dwpsn	file "../Source/prod.c",line 5540,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5540| 
        ; branch occurs ; [] |5540| 
$C$L224:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5429,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5429| 
        B         $C$L320,LO            ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
	.dwpsn	file "../Source/prod.c",line 5434,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5434| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5434| 
$C$L226:    
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5434| 
        ; call occurs [#_ad7738_resetvall] ; [] |5434| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5437,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5437| 
        MOVL      XAR0,#66              ; [CPU_] |5437| 
        ADDB      ACC,#2                ; [CPU_] |5437| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5437| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5437| 
        ANDB      AL,#0x0f              ; [CPU_] |5437| 
	.dwpsn	file "../Source/prod.c",line 5439,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5439| 
        ; branch occurs ; [] |5439| 
$C$L228:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5415,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5415| 
        B         $C$L320,LO            ; [CPU_] |5415| 
        ; branchcc occurs ; [] |5415| 
	.dwpsn	file "../Source/prod.c",line 5420,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5420| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5420| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5420| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5420| 
	.dwpsn	file "../Source/prod.c",line 5425,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5425| 
        ; branch occurs ; [] |5425| 
$C$L229:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5479,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5479| 
        B         $C$L320,LO            ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
	.dwpsn	file "../Source/prod.c",line 5484,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5484| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5484| 
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5484| 
        ; call occurs [#_shunt_switch] ; [] |5484| 
	.dwpsn	file "../Source/prod.c",line 5489,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5489| 
        ; branch occurs ; [] |5489| 
$C$L230:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5463,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5463| 
        B         $C$L320,LO            ; [CPU_] |5463| 
        ; branchcc occurs ; [] |5463| 
	.dwpsn	file "../Source/prod.c",line 5468,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5468| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5468| 
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5468| 
        ; call occurs [#_ad7738_resettare] ; [] |5468| 
	.dwpsn	file "../Source/prod.c",line 5469,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5469| 
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5469| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5469| 
	.dwpsn	file "../Source/prod.c",line 5470,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5470| 
	.dwpsn	file "../Source/prod.c",line 5475,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5475| 
        ; branch occurs ; [] |5475| 
$C$L231:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5443,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5443| 
        B         $C$L320,LO            ; [CPU_] |5443| 
        ; branchcc occurs ; [] |5443| 
	.dwpsn	file "../Source/prod.c",line 5448,column 5,is_stmt,isa 0
        MOV       *-SP[39],#1           ; [CPU_] |5448| 
	.dwpsn	file "../Source/prod.c",line 5449,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5449| 
$C$L232:    
        MOV       AL,*-SP[39]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5450,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5450| 
        B         $C$L233,EQ            ; [CPU_] |5450| 
        ; branchcc occurs ; [] |5450| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5451,column 7,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5451| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5451| 
$C$L233:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5449,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5449| 
	.dwpsn	file "../Source/prod.c",line 5453,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5453| 
        MOV       *-SP[39],AL           ; [CPU_] |5453| 
	.dwpsn	file "../Source/prod.c",line 5449,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5449| 
        CMPB      AL,#4                 ; [CPU_] |5449| 
        B         $C$L232,LT            ; [CPU_] |5449| 
        ; branchcc occurs ; [] |5449| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5457,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5457| 
        ANDB      AL,#0x0f              ; [CPU_] |5457| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5457| 
        MOVL      XAR0,#66              ; [CPU_] |5457| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5457| 
	.dwpsn	file "../Source/prod.c",line 5459,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5459| 
        ; branch occurs ; [] |5459| 
$C$L235:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5400,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5400| 
        B         $C$L320,LO            ; [CPU_] |5400| 
        ; branchcc occurs ; [] |5400| 
	.dwpsn	file "../Source/prod.c",line 5405,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5405| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5405| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5405| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5405| 
	.dwpsn	file "../Source/prod.c",line 5411,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5411| 
        ; branch occurs ; [] |5411| 
$C$L236:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5377,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5377| 
        B         $C$L239,LO            ; [CPU_] |5377| 
        ; branchcc occurs ; [] |5377| 
	.dwpsn	file "../Source/prod.c",line 5389,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5389| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5389| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5389| 
        ; call occurs [#_ad7738_resettare] ; [] |5389| 
	.dwpsn	file "../Source/prod.c",line 5390,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5390| 
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5390| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5390| 
	.dwpsn	file "../Source/prod.c",line 5391,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5391| 
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5391| 
        ; call occurs [#_ad7738_resetvall] ; [] |5391| 
	.dwpsn	file "../Source/prod.c",line 5394,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5394| 
        MOVL      ACC,XAR1              ; [CPU_] |5394| 
        ADDB      ACC,#2                ; [CPU_] |5394| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5394| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5394| 
        ANDB      AL,#0xff              ; [CPU_] |5394| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5394| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5394| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5392,column 5,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5396,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5396| 
        ; branch occurs ; [] |5396| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5379,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5379| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5379| 
        ; call occurs [#_ad7738_resettare] ; [] |5379| 
	.dwpsn	file "../Source/prod.c",line 5380,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5380| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5380| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5380| 
	.dwpsn	file "../Source/prod.c",line 5381,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5381| 
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5381| 
        ; call occurs [#_ad7738_resetvall] ; [] |5381| 
	.dwpsn	file "../Source/prod.c",line 5384,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5384| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5384| 
	.dwpsn	file "../Source/prod.c",line 5386,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5386| 
        ; branch occurs ; [] |5386| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5552,column 5,is_stmt,isa 0
        MOV       AL,*-SP[40]           ; [CPU_] |5552| 
        MOV       *-SP[39],#0           ; [CPU_] |5552| 
	.dwpsn	file "../Source/prod.c",line 5553,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5553| 
        ; branchcc occurs ; [] |5553| 
	.dwpsn	file "../Source/prod.c",line 5555,column 6,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5555| 
        ; call occurs [#_lcd_clear] ; [] |5555| 
	.dwpsn	file "../Source/prod.c",line 5556,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5556| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5556| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5556| 
        ; call occurs [#_lcd_puts] ; [] |5556| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5559,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5559| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_delay_us")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5559| 
        ; call occurs [#_delay_us] ; [] |5559| 
	.dwpsn	file "../Source/prod.c",line 5558,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5558| 
        ; branchcc occurs ; [] |5558| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5563,column 6,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_conf_write")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5563| 
        ; call occurs [#_conf_write] ; [] |5563| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5566,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5566| 
        B         $C$L242,NEQ           ; [CPU_] |5566| 
        ; branchcc occurs ; [] |5566| 
	.dwpsn	file "../Source/prod.c",line 5567,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5567| 
        MOVB      AL,#16                ; [CPU_] |5567| 
        SPM       #0                    ; [CPU_] 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5567| 
        ; call occurs [#_lcd_puts] ; [] |5567| 
	.dwpsn	file "../Source/prod.c",line 5568,column 7,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |5568| 
	.dwpsn	file "../Source/prod.c",line 5569,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5569| 
        ; branch occurs ; [] |5569| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5570,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5570| 
        MOVB      AL,#16                ; [CPU_] |5570| 
        SPM       #0                    ; [CPU_] 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5570| 
        ; call occurs [#_lcd_puts] ; [] |5570| 
	.dwpsn	file "../Source/prod.c",line 5571,column 7,is_stmt,isa 0
        MOV       *-SP[39],#3           ; [CPU_] |5571| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5575,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5575| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_delay_us")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5575| 
        ; call occurs [#_delay_us] ; [] |5575| 
	.dwpsn	file "../Source/prod.c",line 5574,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
        B         $C$L316,UNC           ; [CPU_] |5574| 
        ; branch occurs ; [] |5574| 
$C$L245:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4322,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4322| 
        B         $C$L320,LO            ; [CPU_] |4322| 
        ; branchcc occurs ; [] |4322| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4322| 
        MOVL      XAR0,#66              ; [CPU_] |4322| 
        MOVL      ACC,XAR7              ; [CPU_] |4322| 
        ADDB      ACC,#2                ; [CPU_] |4322| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4322| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4322| 
        B         $C$L320,LT            ; [CPU_] |4322| 
        ; branchcc occurs ; [] |4322| 
        ADDB      XAR4,#2               ; [CPU_] |4322| 
        MOVL      XAR0,#66              ; [CPU_] |4322| 
        CMPB      AL,#4                 ; [CPU_] |4322| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4322| 
        B         $C$L320,GEQ           ; [CPU_] |4322| 
        ; branchcc occurs ; [] |4322| 
	.dwpsn	file "../Source/prod.c",line 4327,column 5,is_stmt,isa 0
        MOV       *-SP[50],AL           ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4328,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4328| 
	.dwpsn	file "../Source/prod.c",line 4331,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4331| 
	.dwpsn	file "../Source/prod.c",line 4328,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4328| 
	.dwpsn	file "../Source/prod.c",line 4331,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4331| 
        ADDB      ACC,#2                ; [CPU_] |4331| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4331| 
        MOVL      XAR0,#40              ; [CPU_] |4331| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4331| 
        MOV       T,*-SP[50]            ; [CPU_] |4331| 
        MOVB      AL,#10                ; [CPU_] |4331| 
        MPYU      ACC,T,AL              ; [CPU_] |4331| 
        ADDL      ACC,XAR6              ; [CPU_] |4331| 
        ADDB      ACC,#46               ; [CPU_] |4331| 
        MOVL      XAR4,ACC              ; [CPU_] |4331| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4333,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4333| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4333| 
        ADDB      XAR7,#1               ; [CPU_] |4333| 
	.dwpsn	file "../Source/prod.c",line 4334,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4334| 
        ADD       *XAR4++,AL            ; [CPU_] |4334| 
	.dwpsn	file "../Source/prod.c",line 4332,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4332| 
        ; branchcc occurs ; [] |4332| 
	.dwpsn	file "../Source/prod.c",line 4337,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4337| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4337| 
        MOVB      AL,#10                ; [CPU_] |4337| 
        MPYU      ACC,T,AL              ; [CPU_] |4337| 
        ADDL      ACC,XAR6              ; [CPU_] |4337| 
        MOVL      XAR5,ACC              ; [CPU_] |4337| 
        ADDB      ACC,#48               ; [CPU_] |4337| 
        MOVL      XAR4,ACC              ; [CPU_] |4337| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4337| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4339,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4339| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4339| 
        ADDB      XAR7,#1               ; [CPU_] |4339| 
	.dwpsn	file "../Source/prod.c",line 4340,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4340| 
        ADD       *XAR4++,AL            ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4338,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4338| 
        ; branchcc occurs ; [] |4338| 
	.dwpsn	file "../Source/prod.c",line 4343,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4343| 
        ADDB      ACC,#50               ; [CPU_] |4343| 
        MOVL      XAR4,ACC              ; [CPU_] |4343| 
        MOVL      P,ACC                 ; [CPU_] |4343| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4345,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4345| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4345| 
        ADDB      XAR7,#1               ; [CPU_] |4345| 
	.dwpsn	file "../Source/prod.c",line 4346,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4346| 
        ADD       *XAR4++,AL            ; [CPU_] |4346| 
	.dwpsn	file "../Source/prod.c",line 4344,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4344| 
        ; branchcc occurs ; [] |4344| 
	.dwpsn	file "../Source/prod.c",line 4350,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4350| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4350| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4350| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4352,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4352| 
        ANDB      AL,#0xff              ; [CPU_] |4352| 
        MOV       *XAR4++,AL            ; [CPU_] |4352| 
	.dwpsn	file "../Source/prod.c",line 4353,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4353| 
        LSR       AL,8                  ; [CPU_] |4353| 
        MOV       *XAR4++,AL            ; [CPU_] |4353| 
	.dwpsn	file "../Source/prod.c",line 4351,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4351| 
        ; branchcc occurs ; [] |4351| 
	.dwpsn	file "../Source/prod.c",line 4356,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4356| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4358,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4358| 
        ANDB      AL,#0xff              ; [CPU_] |4358| 
        MOV       *XAR4++,AL            ; [CPU_] |4358| 
	.dwpsn	file "../Source/prod.c",line 4359,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4359| 
        LSR       AL,8                  ; [CPU_] |4359| 
        MOV       *XAR4++,AL            ; [CPU_] |4359| 
	.dwpsn	file "../Source/prod.c",line 4357,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4357| 
        ; branchcc occurs ; [] |4357| 
	.dwpsn	file "../Source/prod.c",line 4362,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4362| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4364,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4364| 
        ANDB      AL,#0xff              ; [CPU_] |4364| 
        MOV       *XAR4++,AL            ; [CPU_] |4364| 
	.dwpsn	file "../Source/prod.c",line 4365,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4365| 
        LSR       AL,8                  ; [CPU_] |4365| 
        MOV       *XAR4++,AL            ; [CPU_] |4365| 
	.dwpsn	file "../Source/prod.c",line 4363,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4363| 
        ; branchcc occurs ; [] |4363| 
	.dwpsn	file "../Source/prod.c",line 4353,column 6,is_stmt,isa 0
        MOV       *-SP[53],#15          ; [CPU_] |4353| 
	.dwpsn	file "../Source/prod.c",line 4370,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4370| 
        ; branch occurs ; [] |4370| 
$C$L252:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4280,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4280| 
        B         $C$L320,LO            ; [CPU_] |4280| 
        ; branchcc occurs ; [] |4280| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4280| 
        MOVL      XAR0,#66              ; [CPU_] |4280| 
        MOVL      ACC,XAR5              ; [CPU_] |4280| 
        ADDB      ACC,#2                ; [CPU_] |4280| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4280| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4280| 
        B         $C$L320,LT            ; [CPU_] |4280| 
        ; branchcc occurs ; [] |4280| 
        ADDB      XAR4,#2               ; [CPU_] |4280| 
        MOVL      XAR0,#66              ; [CPU_] |4280| 
        CMPB      AL,#4                 ; [CPU_] |4280| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4280| 
        B         $C$L320,GEQ           ; [CPU_] |4280| 
        ; branchcc occurs ; [] |4280| 
	.dwpsn	file "../Source/prod.c",line 4285,column 5,is_stmt,isa 0
        MOV       *-SP[50],AL           ; [CPU_] |4285| 
	.dwpsn	file "../Source/prod.c",line 4286,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4286| 
	.dwpsn	file "../Source/prod.c",line 4288,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4288| 
        MOVL      XAR0,#66              ; [CPU_] |4288| 
	.dwpsn	file "../Source/prod.c",line 4286,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4286| 
	.dwpsn	file "../Source/prod.c",line 4288,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4288| 
        MOVL      XAR0,#40              ; [CPU_] |4288| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4288| 
        MOVB      AL,#10                ; [CPU_] |4288| 
        MOV       T,*-SP[50]            ; [CPU_] |4288| 
        MPYU      ACC,T,AL              ; [CPU_] |4288| 
        ADDL      ACC,XAR6              ; [CPU_] |4288| 
        ADDB      ACC,#46               ; [CPU_] |4288| 
        MOVL      XAR5,ACC              ; [CPU_] |4288| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4290| 
        ANDB      AL,#0xff              ; [CPU_] |4290| 
        MOV       *XAR4++,AL            ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4291,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4291| 
        LSR       AL,8                  ; [CPU_] |4291| 
        MOV       *XAR4++,AL            ; [CPU_] |4291| 
	.dwpsn	file "../Source/prod.c",line 4289,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4289| 
        ; branchcc occurs ; [] |4289| 
	.dwpsn	file "../Source/prod.c",line 4294,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4294| 
        MPYU      ACC,T,AL              ; [CPU_] |4294| 
        ADDL      ACC,XAR6              ; [CPU_] |4294| 
        MOVL      XAR5,ACC              ; [CPU_] |4294| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4294| 
        ADDB      XAR5,#48              ; [CPU_] |4294| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4296,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4296| 
        ANDB      AL,#0xff              ; [CPU_] |4296| 
        MOV       *XAR4++,AL            ; [CPU_] |4296| 
	.dwpsn	file "../Source/prod.c",line 4297,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4297| 
        LSR       AL,8                  ; [CPU_] |4297| 
        MOV       *XAR4++,AL            ; [CPU_] |4297| 
	.dwpsn	file "../Source/prod.c",line 4295,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4295| 
        ; branchcc occurs ; [] |4295| 
	.dwpsn	file "../Source/prod.c",line 4300,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4300| 
	.dwpsn	file "../Source/prod.c",line 4291,column 6,is_stmt,isa 0
        MOV       *-SP[53],#15          ; [CPU_] |4291| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4300,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4300| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4302| 
        ANDB      AL,#0xff              ; [CPU_] |4302| 
        MOV       *XAR4++,AL            ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4303,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4303| 
        LSR       AL,8                  ; [CPU_] |4303| 
        MOV       *XAR4++,AL            ; [CPU_] |4303| 
	.dwpsn	file "../Source/prod.c",line 4301,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4301| 
        ; branchcc occurs ; [] |4301| 
        B         $C$L743,UNC           ; [CPU_] |4301| 
        ; branch occurs ; [] |4301| 
$C$L256:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3922,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3922| 
        B         $C$L320,LO            ; [CPU_] |3922| 
        ; branchcc occurs ; [] |3922| 
        MOVL      ACC,XAR4              ; [CPU_] |3922| 
        MOVL      XAR0,#66              ; [CPU_] |3922| 
        ADDB      ACC,#2                ; [CPU_] |3922| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3922| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3922| 
        B         $C$L320,LT            ; [CPU_] |3922| 
        ; branchcc occurs ; [] |3922| 
        MOVL      XAR5,XAR4             ; [CPU_] |3922| 
        MOVL      XAR0,#66              ; [CPU_] |3922| 
        CMPB      AL,#20                ; [CPU_] |3922| 
        ADDB      XAR5,#2               ; [CPU_] |3922| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3922| 
        B         $C$L320,GEQ           ; [CPU_] |3922| 
        ; branchcc occurs ; [] |3922| 
	.dwpsn	file "../Source/prod.c",line 3926,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |3926| 
	.dwpsn	file "../Source/prod.c",line 3927,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3927| 
	.dwpsn	file "../Source/prod.c",line 3930,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3930| 
        MOVL      XAR0,#66              ; [CPU_] |3930| 
	.dwpsn	file "../Source/prod.c",line 3927,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3927| 
	.dwpsn	file "../Source/prod.c",line 3930,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3930| 
        MOVL      XAR0,#40              ; [CPU_] |3930| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3930| 
        MOVB      AL,#152               ; [CPU_] |3930| 
        MOV       T,*-SP[49]            ; [CPU_] |3930| 
        MPYU      ACC,T,AL              ; [CPU_] |3930| 
        ADDL      ACC,XAR6              ; [CPU_] |3930| 
        ADDB      ACC,#82               ; [CPU_] |3930| 
        MOVL      XAR4,ACC              ; [CPU_] |3930| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_strlen")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3930| 
        ; call occurs [#_strlen] ; [] |3930| 
        MOVZ      AR6,AL                ; [CPU_] |3930| 
	.dwpsn	file "../Source/prod.c",line 3931,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3932,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3931,column 5,is_stmt,isa 0
        MOV       *-SP[53],#4           ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3932,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[49]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3932,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3932| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 3933,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3932,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3933,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3932,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3933,column 6,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3932,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3932| 
        B         $C$L257,HI            ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3937,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3937| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3937| 
        MOVB      AL,#152               ; [CPU_] |3937| 
        MOV       T,*-SP[49]            ; [CPU_] |3937| 
        MPYU      ACC,T,AL              ; [CPU_] |3937| 
        ADDL      ACC,XAR6              ; [CPU_] |3937| 
        MOVL      XAR4,ACC              ; [CPU_] |3937| 
        MOVL      XAR1,ACC              ; [CPU_] |3937| 
        ADDB      XAR4,#98              ; [CPU_] |3937| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_strlen")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3937| 
        ; call occurs [#_strlen] ; [] |3937| 
        MOVL      XAR0,#44              ; [CPU_] |3937| 
	.dwpsn	file "../Source/prod.c",line 3938,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[53]          ; [CPU_] |3938| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3937,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |3937| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3937| 
	.dwpsn	file "../Source/prod.c",line 3938,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |3938| 
        MOVL      XAR4,ACC              ; [CPU_] |3938| 
        MOV       AL,AR7                ; [CPU_] |3938| 
        ADDB      AL,#1                 ; [CPU_] |3938| 
        MOV       *XAR4++,AR6           ; [CPU_] |3938| 
        MOV       *-SP[53],AL           ; [CPU_] |3938| 
        MOV       AL,AR6                ; [CPU_] |3938| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |3939| 
        ; branchcc occurs ; [] |3939| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3939,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3939| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 3940,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3940,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3940,column 6,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3939| 
        B         $C$L259,HI            ; [CPU_] |3939| 
        ; branchcc occurs ; [] |3939| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3944,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3944| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |3944| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3946,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3946| 
        ANDB      AL,#0xff              ; [CPU_] |3946| 
        MOV       *XAR4++,AL            ; [CPU_] |3946| 
	.dwpsn	file "../Source/prod.c",line 3947,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3947| 
        LSR       AL,8                  ; [CPU_] |3947| 
        MOV       *XAR4++,AL            ; [CPU_] |3947| 
	.dwpsn	file "../Source/prod.c",line 3945,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |3945| 
        ; branchcc occurs ; [] |3945| 
	.dwpsn	file "../Source/prod.c",line 3952,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3952| 
	.dwpsn	file "../Source/prod.c",line 3955,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3955| 
	.dwpsn	file "../Source/prod.c",line 3952,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3952| 
        MOV       *XAR4++,AL            ; [CPU_] |3952| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3955,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |3955| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 3957,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3957| 
        ANDB      AL,#0xff              ; [CPU_] |3957| 
        MOV       *XAR4++,AL            ; [CPU_] |3957| 
	.dwpsn	file "../Source/prod.c",line 3958,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3958| 
        LSR       AL,8                  ; [CPU_] |3958| 
        MOV       *XAR4++,AL            ; [CPU_] |3958| 
	.dwpsn	file "../Source/prod.c",line 3956,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |3956| 
        ; branchcc occurs ; [] |3956| 
	.dwpsn	file "../Source/prod.c",line 3963,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3963| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |3963| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 3965,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3965| 
        ANDB      AL,#0xff              ; [CPU_] |3965| 
        MOV       *XAR4++,AL            ; [CPU_] |3965| 
	.dwpsn	file "../Source/prod.c",line 3966,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3966| 
        LSR       AL,8                  ; [CPU_] |3966| 
        MOV       *XAR4++,AL            ; [CPU_] |3966| 
	.dwpsn	file "../Source/prod.c",line 3964,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |3964| 
        ; branchcc occurs ; [] |3964| 
	.dwpsn	file "../Source/prod.c",line 3971,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |3971| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3971| 
	.dwpsn	file "../Source/prod.c",line 3977,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3971,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3971| 
	.dwpsn	file "../Source/prod.c",line 3974,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |3974| 
	.dwpsn	file "../Source/prod.c",line 3971,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3971| 
	.dwpsn	file "../Source/prod.c",line 3974,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3974| 
	.dwpsn	file "../Source/prod.c",line 3977,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3974,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3974| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |3974| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 3979,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3979| 
        ANDB      AL,#0xff              ; [CPU_] |3979| 
        MOV       *XAR4++,AL            ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3980,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3980| 
        LSR       AL,8                  ; [CPU_] |3980| 
        MOV       *XAR4++,AL            ; [CPU_] |3980| 
	.dwpsn	file "../Source/prod.c",line 3978,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |3978| 
        ; branchcc occurs ; [] |3978| 
	.dwpsn	file "../Source/prod.c",line 3947,column 6,is_stmt,isa 0
        ADD       *-SP[53],#23          ; [CPU_] |3947| 
	.dwpsn	file "../Source/prod.c",line 3985,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3985| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3985| 
        CMPB      AL,#2                 ; [CPU_] |3985| 
        B         $C$L267,EQ            ; [CPU_] |3985| 
        ; branchcc occurs ; [] |3985| 
	.dwpsn	file "../Source/prod.c",line 4023,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4023| 
        ADDB      ACC,#178              ; [CPU_] |4023| 
        MOVL      XAR5,ACC              ; [CPU_] |4023| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4021,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4021| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4025,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4025| 
        ANDB      AL,#0xff              ; [CPU_] |4025| 
        MOV       *XAR4++,AL            ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4026,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4026| 
        LSR       AL,8                  ; [CPU_] |4026| 
        MOV       *XAR4++,AL            ; [CPU_] |4026| 
	.dwpsn	file "../Source/prod.c",line 4024,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4024| 
        ; branchcc occurs ; [] |4024| 
	.dwpsn	file "../Source/prod.c",line 4030,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4030| 
        ADDB      ACC,#200              ; [CPU_] |4030| 
        MOVL      XAR5,ACC              ; [CPU_] |4030| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4021,column 6,is_stmt,isa 0
        ADD       *-SP[53],#9           ; [CPU_] |4021| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4032,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4032| 
        ANDB      AL,#0xff              ; [CPU_] |4032| 
        MOV       *XAR4++,AL            ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4033,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4033| 
        LSR       AL,8                  ; [CPU_] |4033| 
        MOV       *XAR4++,AL            ; [CPU_] |4033| 
	.dwpsn	file "../Source/prod.c",line 4031,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4031| 
        ; branchcc occurs ; [] |4031| 
        B         $C$L276,UNC           ; [CPU_] |4031| 
        ; branch occurs ; [] |4031| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 3986,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |3986| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3987,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |3987| 
	.dwpsn	file "../Source/prod.c",line 3986,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3986| 
        INC       *-SP[53]              ; [CPU_] |3986| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3987,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |3987| 
        ; branch occurs ; [] |3987| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 3989,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |3989| 
        MOVL      XAR0,#40              ; [CPU_] |3989| 
        MOV       T,*-SP[49]            ; [CPU_] |3989| 
        MOVL      XAR6,ACC              ; [CPU_] |3989| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |3989| 
        MOVB      AL,#76                ; [CPU_] |3989| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |3989| 
        ADDL      ACC,XAR6              ; [CPU_] |3989| 
        LSL       ACC,1                 ; [CPU_] |3989| 
        ADDL      ACC,XAR7              ; [CPU_] |3989| 
        ADDB      ACC,#130              ; [CPU_] |3989| 
        MOVL      XAR7,ACC              ; [CPU_] |3989| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 3991,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3991| 
        ANDB      AL,#0xff              ; [CPU_] |3991| 
        MOV       *XAR4++,AL            ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3992,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3992| 
        LSR       AL,8                  ; [CPU_] |3992| 
        MOV       *XAR4++,AL            ; [CPU_] |3992| 
	.dwpsn	file "../Source/prod.c",line 3990,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |3990| 
        ; branchcc occurs ; [] |3990| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 3998,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3998| 
        ANDB      AL,#0xff              ; [CPU_] |3998| 
        MOV       *XAR4++,AL            ; [CPU_] |3998| 
	.dwpsn	file "../Source/prod.c",line 3999,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3999| 
        LSR       AL,8                  ; [CPU_] |3999| 
        MOV       *XAR4++,AL            ; [CPU_] |3999| 
	.dwpsn	file "../Source/prod.c",line 3997,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |3997| 
        ; branchcc occurs ; [] |3997| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3992,column 8,is_stmt,isa 0
        ADD       *-SP[53],#8           ; [CPU_] |3992| 
	.dwpsn	file "../Source/prod.c",line 3987,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |3987| 
        MOV       PL,AL                 ; [CPU_] |3987| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 3987,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |3987| 
        MOV       AL,PL                 ; [CPU_] |3987| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |3987| 
        B         $C$L268,LT            ; [CPU_] |3987| 
        ; branchcc occurs ; [] |3987| 
	.dwpsn	file "../Source/prod.c",line 4004,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4004| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4004| 
        ; branch occurs ; [] |4004| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4006,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4006| 
        MOVL      XAR0,#40              ; [CPU_] |4006| 
        MOV       T,*-SP[49]            ; [CPU_] |4006| 
        MOVL      P,ACC                 ; [CPU_] |4006| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4006| 
        MOVB      AL,#76                ; [CPU_] |4006| 
        MPYU      ACC,T,AL              ; [CPU_] |4006| 
        ADDL      ACC,P                 ; [CPU_] |4006| 
        LSL       ACC,1                 ; [CPU_] |4006| 
        ADDL      ACC,XAR6              ; [CPU_] |4006| 
        ADDB      ACC,#178              ; [CPU_] |4006| 
        MOVL      XAR7,ACC              ; [CPU_] |4006| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4008,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4008| 
        ANDB      AL,#0xff              ; [CPU_] |4008| 
        MOV       *XAR4++,AL            ; [CPU_] |4008| 
	.dwpsn	file "../Source/prod.c",line 4009,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4009| 
        LSR       AL,8                  ; [CPU_] |4009| 
        MOV       *XAR4++,AL            ; [CPU_] |4009| 
	.dwpsn	file "../Source/prod.c",line 4007,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4007| 
        ; branchcc occurs ; [] |4007| 
	.dwpsn	file "../Source/prod.c",line 4013,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4013| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4015,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4015| 
        ANDB      AL,#0xff              ; [CPU_] |4015| 
        MOV       *XAR4++,AL            ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4016,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4016| 
        LSR       AL,8                  ; [CPU_] |4016| 
        MOV       *XAR4++,AL            ; [CPU_] |4016| 
	.dwpsn	file "../Source/prod.c",line 4014,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4014| 
        ; branchcc occurs ; [] |4014| 
	.dwpsn	file "../Source/prod.c",line 4004,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4004| 
	.dwpsn	file "../Source/prod.c",line 4009,column 8,is_stmt,isa 0
        ADD       *-SP[53],#8           ; [CPU_] |4009| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4020,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4020| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4020| 
        ADDB      AL,#-1                ; [CPU_] |4020| 
        CMP       AL,AR5                ; [CPU_] |4020| 
        B         $C$L272,GT            ; [CPU_] |4020| 
        ; branchcc occurs ; [] |4020| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4039,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4039| 
        ADDB      ACC,#222              ; [CPU_] |4039| 
        MOVL      XAR5,ACC              ; [CPU_] |4039| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4041,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4041| 
        ANDB      AL,#0xff              ; [CPU_] |4041| 
        MOV       *XAR4++,AL            ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4042,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4042| 
        LSR       AL,8                  ; [CPU_] |4042| 
        MOV       *XAR4++,AL            ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4040,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4040| 
        ; branchcc occurs ; [] |4040| 
	.dwpsn	file "../Source/prod.c",line 4047,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4047| 
        ADDB      ACC,#224              ; [CPU_] |4047| 
        MOVL      XAR5,ACC              ; [CPU_] |4047| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4049,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4049| 
        ANDB      AL,#0xff              ; [CPU_] |4049| 
        MOV       *XAR4++,AL            ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4050| 
        LSR       AL,8                  ; [CPU_] |4050| 
        MOV       *XAR4++,AL            ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4048,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4048| 
        ; branchcc occurs ; [] |4048| 
	.dwpsn	file "../Source/prod.c",line 4055,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4055| 
        ADDB      ACC,#228              ; [CPU_] |4055| 
        MOVL      XAR5,ACC              ; [CPU_] |4055| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4057,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4057| 
        ANDB      AL,#0xff              ; [CPU_] |4057| 
        MOV       *XAR4++,AL            ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4058,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4058| 
        LSR       AL,8                  ; [CPU_] |4058| 
        MOV       *XAR4++,AL            ; [CPU_] |4058| 
	.dwpsn	file "../Source/prod.c",line 4056,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4056| 
        ; branchcc occurs ; [] |4056| 
	.dwpsn	file "../Source/prod.c",line 4063,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4063| 
        ADDB      ACC,#230              ; [CPU_] |4063| 
        MOVL      XAR5,ACC              ; [CPU_] |4063| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4065,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4065| 
        ANDB      AL,#0xff              ; [CPU_] |4065| 
        MOV       *XAR4++,AL            ; [CPU_] |4065| 
	.dwpsn	file "../Source/prod.c",line 4066,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4066| 
        LSR       AL,8                  ; [CPU_] |4066| 
        MOV       *XAR4++,AL            ; [CPU_] |4066| 
	.dwpsn	file "../Source/prod.c",line 4064,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4064| 
        ; branchcc occurs ; [] |4064| 
	.dwpsn	file "../Source/prod.c",line 4071,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4071| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4071| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4071| 
	.dwpsn	file "../Source/prod.c",line 4042,column 6,is_stmt,isa 0
        ADD       *-SP[53],#17          ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4074,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4074| 
        ; branch occurs ; [] |4074| 
$C$L281:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3864,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3864| 
        B         $C$L320,LO            ; [CPU_] |3864| 
        ; branchcc occurs ; [] |3864| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3864| 
        MOVL      XAR0,#66              ; [CPU_] |3864| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3864| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3864| 
        B         $C$L320,LT            ; [CPU_] |3864| 
        ; branchcc occurs ; [] |3864| 
        CMPB      AL,#4                 ; [CPU_] |3864| 
        B         $C$L320,GEQ           ; [CPU_] |3864| 
        ; branchcc occurs ; [] |3864| 
	.dwpsn	file "../Source/prod.c",line 3868,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3868| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3868| 
	.dwpsn	file "../Source/prod.c",line 3870,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3870| 
        MOVL      XAR0,#40              ; [CPU_] |3870| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3870| 
        MPYB      ACC,T,#10             ; [CPU_] |3870| 
        ADDL      ACC,XAR6              ; [CPU_] |3870| 
        MOVL      XAR4,ACC              ; [CPU_] |3870| 
        MOVL      XAR7,ACC              ; [CPU_] |3870| 
        MOVB      XAR0,#42              ; [CPU_] |3870| 
        MOVL      P,ACC                 ; [CPU_] |3870| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3870| 
	.dwpsn	file "../Source/prod.c",line 3877,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3877| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3877| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3870,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3870| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3874,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3874| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3880,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3880| 
        ANDB      AL,#0xff              ; [CPU_] |3880| 
        MOV       *XAR4++,AL            ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3881,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3881| 
        LSR       AL,8                  ; [CPU_] |3881| 
        MOV       *XAR4++,AL            ; [CPU_] |3881| 
	.dwpsn	file "../Source/prod.c",line 3878,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3878| 
        ; branchcc occurs ; [] |3878| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3888,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3888| 
        ANDB      AL,#0xff              ; [CPU_] |3888| 
        MOV       *XAR4++,AL            ; [CPU_] |3888| 
	.dwpsn	file "../Source/prod.c",line 3889,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3889| 
        LSR       AL,8                  ; [CPU_] |3889| 
        MOV       *XAR4++,AL            ; [CPU_] |3889| 
	.dwpsn	file "../Source/prod.c",line 3886,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3886| 
        ; branchcc occurs ; [] |3886| 
	.dwpsn	file "../Source/prod.c",line 3893,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3893| 
        ADDB      XAR5,#46              ; [CPU_] |3893| 
        MOVL      XAR7,XAR5             ; [CPU_] |3893| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3896,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3896| 
        ANDB      AL,#0xff              ; [CPU_] |3896| 
        MOV       *XAR4++,AL            ; [CPU_] |3896| 
	.dwpsn	file "../Source/prod.c",line 3897,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3897| 
        LSR       AL,8                  ; [CPU_] |3897| 
        MOV       *XAR4++,AL            ; [CPU_] |3897| 
	.dwpsn	file "../Source/prod.c",line 3894,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3894| 
        ; branchcc occurs ; [] |3894| 
	.dwpsn	file "../Source/prod.c",line 3901,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3901| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3904,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3904| 
        ANDB      AL,#0xff              ; [CPU_] |3904| 
        MOV       *XAR4++,AL            ; [CPU_] |3904| 
	.dwpsn	file "../Source/prod.c",line 3905,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3905| 
        LSR       AL,8                  ; [CPU_] |3905| 
        MOV       *XAR4++,AL            ; [CPU_] |3905| 
	.dwpsn	file "../Source/prod.c",line 3902,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3902| 
        ; branchcc occurs ; [] |3902| 
	.dwpsn	file "../Source/prod.c",line 3874,column 6,is_stmt,isa 0
        MOV       *-SP[53],#28          ; [CPU_] |3874| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3912,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3912| 
        ANDB      AL,#0xff              ; [CPU_] |3912| 
        MOV       *XAR4++,AL            ; [CPU_] |3912| 
	.dwpsn	file "../Source/prod.c",line 3913,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3913| 
        LSR       AL,8                  ; [CPU_] |3913| 
        MOV       *XAR4++,AL            ; [CPU_] |3913| 
	.dwpsn	file "../Source/prod.c",line 3910,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3910| 
        ; branchcc occurs ; [] |3910| 
        B         $C$L743,UNC           ; [CPU_] |3910| 
        ; branch occurs ; [] |3910| 
$C$L287:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3818,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3818| 
        B         $C$L320,LO            ; [CPU_] |3818| 
        ; branchcc occurs ; [] |3818| 
	.dwpsn	file "../Source/prod.c",line 3822,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3822| 
        B         $C$L288,EQ            ; [CPU_] |3822| 
        ; branchcc occurs ; [] |3822| 
        CMPB      AL,#1                 ; [CPU_] |3822| 
        B         $C$L288,EQ            ; [CPU_] |3822| 
        ; branchcc occurs ; [] |3822| 
        CMPB      AL,#2                 ; [CPU_] |3822| 
        B         $C$L288,EQ            ; [CPU_] |3822| 
        ; branchcc occurs ; [] |3822| 
        ADDB      XAR4,#2               ; [CPU_] |3822| 
        MOVL      XAR0,#66              ; [CPU_] |3822| 
        CMPB      AL,#3                 ; [CPU_] |3822| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3822| 
        B         $C$L320,NEQ           ; [CPU_] |3822| 
        ; branchcc occurs ; [] |3822| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3828,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3828| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3828| 
        MOVL      XAR4,XAR5             ; [CPU_] |3828| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3828| 
        ADDB      XAR5,#2               ; [CPU_] |3828| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3828| 
        ADDB      XAR4,#6               ; [CPU_] |3828| 
        B         $C$L293,NEQ           ; [CPU_] |3828| 
        ; branchcc occurs ; [] |3828| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3829,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3829| 
        B         $C$L320,LO            ; [CPU_] |3829| 
        ; branchcc occurs ; [] |3829| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3834,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3834| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3836,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3836| 
        ADDL      ACC,XT                ; [CPU_] |3836| 
	.dwpsn	file "../Source/prod.c",line 3837,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3837| 
	.dwpsn	file "../Source/prod.c",line 3835,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3835| 
        ; branchcc occurs ; [] |3835| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3840,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3840| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3841,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3841| 
        B         $C$L291,EQ            ; [CPU_] |3841| 
        ; branchcc occurs ; [] |3841| 
	.dwpsn	file "../Source/prod.c",line 3840,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3840| 
        ADDB      XAR4,#1               ; [CPU_] |3840| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3840| 
        ; branchcc occurs ; [] |3840| 
        B         $C$L292,UNC           ; [CPU_] |3840| 
        ; branch occurs ; [] |3840| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3842,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3842| 
        MOVB      XAR0,#35              ; [CPU_] |3842| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3842| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3846,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3846| 
        B         $C$L320,EQ            ; [CPU_] |3846| 
        ; branchcc occurs ; [] |3846| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3852,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3852| 
        MOVL      XAR0,#66              ; [CPU_] |3852| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3852| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3852| 
        ADDB      ACC,#2                ; [CPU_] |3852| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3852| 
        MOVB      XAR0,#34              ; [CPU_] |3852| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3852| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3852| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3852| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3852| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3855,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3855| 
        MOV       *XAR4++,AL            ; [CPU_] |3855| 
	.dwpsn	file "../Source/prod.c",line 3854,column 12,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |3854| 
        MOV       AL,*-SP[51]           ; [CPU_] |3854| 
	.dwpsn	file "../Source/prod.c",line 3855,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3855| 
	.dwpsn	file "../Source/prod.c",line 3854,column 12,is_stmt,isa 0
        CMP       AL,*-SP[53]           ; [CPU_] |3854| 
        B         $C$L294,HI            ; [CPU_] |3854| 
        ; branchcc occurs ; [] |3854| 
        B         $C$L304,UNC           ; [CPU_] |3854| 
        ; branch occurs ; [] |3854| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3802,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3802| 
        MOVB      XAR0,#34              ; [CPU_] |3802| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3802| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3802| 
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3802,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3802| 
        MOV       *-SP[53],#3           ; [CPU_] |3802| 
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3804| 
        CMPB      AL,#1                 ; [CPU_] |3804| 
        B         $C$L296,EQ            ; [CPU_] |3804| 
        ; branchcc occurs ; [] |3804| 
        MOVB      XAR1,#34              ; [CPU_] |3804| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3804| 
        B         $C$L743,NEQ           ; [CPU_] |3804| 
        ; branchcc occurs ; [] |3804| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3806,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3806| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3806| 
        MOVL      XAR0,#74              ; [CPU_] |3806| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3806| 
        MOVL      XAR0,#44              ; [CPU_] |3806| 
        ADDL      ACC,XAR6              ; [CPU_] |3806| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3806| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3806| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3809,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3809| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[53],AL           ; [CPU_] |3809| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3808,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3808| 
        ANDB      AL,#0xff              ; [CPU_] |3808| 
        MOV       *XAR4++,AL            ; [CPU_] |3808| 
	.dwpsn	file "../Source/prod.c",line 3809,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3809| 
        LSR       AL,8                  ; [CPU_] |3809| 
        MOV       *XAR4++,AL            ; [CPU_] |3809| 
	.dwpsn	file "../Source/prod.c",line 3807,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3807| 
        ; branchcc occurs ; [] |3807| 
        B         $C$L743,UNC           ; [CPU_] |3807| 
        ; branch occurs ; [] |3807| 
$C$L298:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3781,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3781| 
        B         $C$L320,LO            ; [CPU_] |3781| 
        ; branchcc occurs ; [] |3781| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3781| 
        MOVL      XAR0,#66              ; [CPU_] |3781| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3781| 
        ADDB      AL,#3                 ; [CPU_] |3781| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3781| 
        CMP       AL,*-SP[51]           ; [CPU_] |3781| 
        B         $C$L320,HI            ; [CPU_] |3781| 
        ; branchcc occurs ; [] |3781| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3786,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3786| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3786| 
        ; branch occurs ; [] |3786| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3787,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3787| 
        ADD       PL,AL                 ; [CPU_] |3787| 
        MOVL      ACC,XAR7              ; [CPU_] |3787| 
        ADD       ACC,PL                ; [CPU_] |3787| 
        MOVL      XAR7,ACC              ; [CPU_] |3787| 
	.dwpsn	file "../Source/prod.c",line 3786,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3786| 
	.dwpsn	file "../Source/prod.c",line 3787,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3787| 
        MOV       *XAR4++,AL            ; [CPU_] |3787| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3786,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3786| 
        MOVL      XAR0,#66              ; [CPU_] |3786| 
        MOVL      ACC,XAR7              ; [CPU_] |3786| 
        ADDB      ACC,#2                ; [CPU_] |3786| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3786| 
        MOV       AL,AR6                ; [CPU_] |3786| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3786| 
        B         $C$L299,LT            ; [CPU_] |3786| 
        ; branchcc occurs ; [] |3786| 
	.dwpsn	file "../Source/prod.c",line 3789,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3789| 
        MOVL      XAR0,#76              ; [CPU_] |3789| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3789| 
	.dwpsn	file "../Source/prod.c",line 3792,column 5,is_stmt,isa 0
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_strlen")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3792| 
        ; call occurs [#_strlen] ; [] |3792| 
	.dwpsn	file "../Source/prod.c",line 3793,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3793| 
	.dwpsn	file "../Source/prod.c",line 3794,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3794| 
	.dwpsn	file "../Source/prod.c",line 3793,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3793| 
        MOV       *-SP[53],#3           ; [CPU_] |3793| 
	.dwpsn	file "../Source/prod.c",line 3794,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3794| 
        ; branchcc occurs ; [] |3794| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3794,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3794| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3795,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3795| 
	.dwpsn	file "../Source/prod.c",line 3794,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3794| 
	.dwpsn	file "../Source/prod.c",line 3795,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3795| 
        INC       *-SP[53]              ; [CPU_] |3795| 
	.dwpsn	file "../Source/prod.c",line 3794,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3794| 
        B         $C$L301,HI            ; [CPU_] |3794| 
        ; branchcc occurs ; [] |3794| 
	.dwpsn	file "../Source/prod.c",line 3798,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3798| 
        ; branch occurs ; [] |3798| 
$C$L302:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3761,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3761| 
        B         $C$L320,LO            ; [CPU_] |3761| 
        ; branchcc occurs ; [] |3761| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3766,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3766| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3766| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3768,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3768| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3768| 
	.dwpsn	file "../Source/prod.c",line 3769,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3769| 
        MOV       *XAR7++,AL            ; [CPU_] |3769| 
	.dwpsn	file "../Source/prod.c",line 3770,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |3770| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3770| 
        MOV       *XAR4++,AL            ; [CPU_] |3770| 
	.dwpsn	file "../Source/prod.c",line 3771,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3771| 
        MOV       *XAR7++,AL            ; [CPU_] |3771| 
	.dwpsn	file "../Source/prod.c",line 3767,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3767| 
        ; branchcc occurs ; [] |3767| 
	.dwpsn	file "../Source/prod.c",line 3771,column 6,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |3771| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3774,column 5,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |3774| 
	.dwpsn	file "../Source/prod.c",line 3777,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3777| 
        ; branch occurs ; [] |3777| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5686 | cmd_mode = SCI_MODE_ASCII;                                             
; 5687 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5688 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5689 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5692,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5692 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_update_units")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5692| 
        ; call occurs [#_update_units] ; [] |5692| 
	.dwpsn	file "../Source/prod.c",line 5685,column 5,is_stmt,isa 0
        MOV       *-SP[46],#0           ; [CPU_] |5685| 
	.dwpsn	file "../Source/prod.c",line 5693,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5693 | break;                                                                 
; 5695 | default:                                                               
; 5697 | // send back NACK?                                                     
; 5699 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5693| 
        ; branch occurs ; [] |5693| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5679,column 5,is_stmt,isa 0
        MOV       *-SP[45],#1           ; [CPU_] |5679| 
	.dwpsn	file "../Source/prod.c",line 5681,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5681| 
        ; branch occurs ; [] |5681| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4316,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4316| 
	.dwpsn	file "../Source/prod.c",line 4317,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4317| 
        ; branch occurs ; [] |4317| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4312| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4312| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_ssr_set")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4312| 
        ; call occurs [#_ssr_set] ; [] |4312| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4313| 
        ; branch occurs ; [] |4313| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5620,column 5,is_stmt,isa 0
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_conf_read")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5620| 
        ; call occurs [#_conf_read] ; [] |5620| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5623,column 5,is_stmt,isa 0
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5623| 
        ; call occurs [#_ad7738_setcal] ; [] |5623| 
	.dwpsn	file "../Source/prod.c",line 5624,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5624| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5624| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5624| 
	.dwpsn	file "../Source/prod.c",line 5625,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5625| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5625| 
        ; call occurs [#_ad7738_resetvall] ; [] |5625| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5629,column 5,is_stmt,isa 0
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_update_units")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5629| 
        ; call occurs [#_update_units] ; [] |5629| 
	.dwpsn	file "../Source/prod.c",line 5628,column 5,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |5628| 
	.dwpsn	file "../Source/prod.c",line 5631,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5631| 
        ; branch occurs ; [] |5631| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5584,column 5,is_stmt,isa 0
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_conf_default")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5584| 
        ; call occurs [#_conf_default] ; [] |5584| 
	.dwpsn	file "../Source/prod.c",line 5587,column 5,is_stmt,isa 0
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5587| 
        ; call occurs [#_lcd_clear] ; [] |5587| 
	.dwpsn	file "../Source/prod.c",line 5588,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5588| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5588| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5588| 
        ; call occurs [#_lcd_puts] ; [] |5588| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5591,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5591| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_delay_us")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5591| 
        ; call occurs [#_delay_us] ; [] |5591| 
	.dwpsn	file "../Source/prod.c",line 5590,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5595,column 5,is_stmt,isa 0
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_conf_write")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5595| 
        ; call occurs [#_conf_write] ; [] |5595| 
        MOVZ      AR1,AL                ; [CPU_] |5595| 
	.dwpsn	file "../Source/prod.c",line 5596,column 5,is_stmt,isa 0
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5596| 
        ; call occurs [#_ad7738_setcal] ; [] |5596| 
	.dwpsn	file "../Source/prod.c",line 5597,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5597| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5597| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5597| 
	.dwpsn	file "../Source/prod.c",line 5598,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5598| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5598| 
        ; call occurs [#_ad7738_resetvall] ; [] |5598| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5601,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5601| 
        ; branchcc occurs ; [] |5601| 
	.dwpsn	file "../Source/prod.c",line 5602,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5602| 
        MOVB      AL,#31                ; [CPU_] |5602| 
        SPM       #0                    ; [CPU_] 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5602| 
        ; call occurs [#_lcd_puts] ; [] |5602| 
	.dwpsn	file "../Source/prod.c",line 5603,column 6,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |5603| 
	.dwpsn	file "../Source/prod.c",line 5604,column 6,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |5604| 
	.dwpsn	file "../Source/prod.c",line 5605,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5605| 
        ; branch occurs ; [] |5605| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5606,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5606| 
        MOVB      AL,#31                ; [CPU_] |5606| 
        SPM       #0                    ; [CPU_] 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5606| 
        ; call occurs [#_lcd_puts] ; [] |5606| 
	.dwpsn	file "../Source/prod.c",line 5607,column 6,is_stmt,isa 0
        MOV       *-SP[39],#3           ; [CPU_] |5607| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5610,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5610| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_delay_us")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5610| 
        ; call occurs [#_delay_us] ; [] |5610| 
	.dwpsn	file "../Source/prod.c",line 5609,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5609| 
        ; branchcc occurs ; [] |5609| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5612,column 5,is_stmt,isa 0
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5612| 
        ; call occurs [#_lcd_clear] ; [] |5612| 
	.dwpsn	file "../Source/prod.c",line 5613,column 5,is_stmt,isa 0
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_update_units")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5613| 
        ; call occurs [#_update_units] ; [] |5613| 
$C$L317:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5702,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5702 | switch (bincmdresult) {                                                
; 5703 | case OK_SendResult:                                                    
; 5704 |         scia_send_bin(buff, j);         // send back                   
; 5706 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5707 |                 delay_us(2000);                 // 2ms                 
; 5708 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5710 |         break;                                                         
; 5712 | case Error_UnImpl:                                                     
; 5714 |         buff[1] = CmdUnImpl;                                           
; 5715 |         buff[2] = cmdbuff[1];                                          
; 5716 |         scia_send_bin(buff, 3);         // send back                   
; 5717 |         break;                                                         
; 5719 | case Error_Invalid:                                                    
; 5721 |         buff[1] = CmdInvalid;                                          
; 5722 |         buff[2] = cmdbuff[1];                                          
; 5723 |         scia_send_bin(buff, 3);         // send back                   
; 5724 |         break;                                                         
; 5726 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5702| 
        ; branchcc occurs ; [] |5702| 
        CMPB      AL,#1                 ; [CPU_] |5702| 
        B         $C$L321,EQ            ; [CPU_] |5702| 
        ; branchcc occurs ; [] |5702| 
        CMPB      AL,#2                 ; [CPU_] |5702| 
        B         $C$L320,EQ            ; [CPU_] |5702| 
        ; branchcc occurs ; [] |5702| 
        CMPB      AL,#3                 ; [CPU_] |5702| 
        B         $C$L634,NEQ           ; [CPU_] |5702| 
        ; branchcc occurs ; [] |5702| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5728,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5728 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5728| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5728| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5729,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5729 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5729| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5729| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5729| 
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5730 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5730| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5730| 
        ; call occurs [#_scia_send_bin] ; [] |5730| 
	.dwpsn	file "../Source/prod.c",line 5731,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5731 | break;                                                                 
; 5733 | default:                                                               
; 5735 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5731| 
        ; branch occurs ; [] |5731| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5721,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5721| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5721| 
	.dwpsn	file "../Source/prod.c",line 5724,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5724| 
        ; branch occurs ; [] |5724| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5714,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5714| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5714| 
	.dwpsn	file "../Source/prod.c",line 5717,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5717| 
        ; branch occurs ; [] |5717| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 944,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |944| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |944| 
        CMPB      AL,#79                ; [CPU_] |944| 
        B         $C$L324,GT            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#79                ; [CPU_] |944| 
        B         $C$L443,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#69                ; [CPU_] |944| 
        B         $C$L323,GT            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#69                ; [CPU_] |944| 
        B         $C$L507,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#66                ; [CPU_] |944| 
        B         $C$L591,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#67                ; [CPU_] |944| 
        B         $C$L530,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#68                ; [CPU_] |944| 
        B         $C$L514,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        B         $C$L625,UNC           ; [CPU_] |944| 
        ; branch occurs ; [] |944| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |944| 
        B         $C$L498,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#72                ; [CPU_] |944| 
        B         $C$L630,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#76                ; [CPU_] |944| 
        B         $C$L466,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        B         $C$L625,UNC           ; [CPU_] |944| 
        ; branch occurs ; [] |944| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |944| 
        B         $C$L325,GT            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#85                ; [CPU_] |944| 
        B         $C$L326,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#80                ; [CPU_] |944| 
        B         $C$L429,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#82                ; [CPU_] |944| 
        B         $C$L414,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#83                ; [CPU_] |944| 
        B         $C$L351,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        B         $C$L625,UNC           ; [CPU_] |944| 
        ; branch occurs ; [] |944| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |944| 
        B         $C$L628,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        CMPB      AL,#90                ; [CPU_] |944| 
        B         $C$L626,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        B         $C$L625,UNC           ; [CPU_] |944| 
        ; branch occurs ; [] |944| 
$C$L326:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1112,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1112| 
        B         $C$L625,LO            ; [CPU_] |1112| 
        ; branchcc occurs ; [] |1112| 
	.dwpsn	file "../Source/prod.c",line 1115,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1115| 
        CMPB      AL,#73                ; [CPU_] |1115| 
        B         $C$L327,GT            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        CMPB      AL,#73                ; [CPU_] |1115| 
        B         $C$L338,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        CMPB      AL,#66                ; [CPU_] |1115| 
        B         $C$L330,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        CMPB      AL,#67                ; [CPU_] |1115| 
        B         $C$L347,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        CMPB      AL,#70                ; [CPU_] |1115| 
        B         $C$L344,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        B         $C$L625,UNC           ; [CPU_] |1115| 
        ; branch occurs ; [] |1115| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1115| 
        B         $C$L328,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        CMPB      AL,#83                ; [CPU_] |1115| 
        B         $C$L337,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        CMPB      AL,#87                ; [CPU_] |1115| 
        B         $C$L336,EQ            ; [CPU_] |1115| 
        ; branchcc occurs ; [] |1115| 
        B         $C$L625,UNC           ; [CPU_] |1115| 
        ; branch occurs ; [] |1115| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1132| 
        MOVL      XAR0,#44              ; [CPU_] |1132| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1132| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1132| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1132| 
        MOVL      XAR4,XAR1             ; [CPU_] |1132| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_sprintf")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1132| 
        ; call occurs [#_sprintf] ; [] |1132| 
	.dwpsn	file "../Source/prod.c",line 1133,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1133| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1133| 
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1132| 
	.dwpsn	file "../Source/prod.c",line 1133,column 6,is_stmt,isa 0
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1133| 
        ; call occurs [#_scia_getparam] ; [] |1133| 
        CMPB      AL,#31                ; [CPU_] |1133| 
        B         $C$L329,LOS           ; [CPU_] |1133| 
        ; branchcc occurs ; [] |1133| 
	.dwpsn	file "../Source/prod.c",line 1137,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1137| 
        MOVB      XAR0,#31              ; [CPU_] |1137| 
	.dwpsn	file "../Source/prod.c",line 1136,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1136| 
	.dwpsn	file "../Source/prod.c",line 1137,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1137| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1140,column 6,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1140| 
        MOVL      XAR0,#76              ; [CPU_] |1140| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1140| 
        ADD       AH,AL                 ; [CPU_] |1140| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1140| 
        MOVU      ACC,AH                ; [CPU_] |1140| 
        MOVL      XAR5,XAR1             ; [CPU_] |1140| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_memcpy")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1140| 
        ; call occurs [#_memcpy] ; [] |1140| 
        MOVL      XAR4,XAR1             ; [CPU_] |1140| 
	.dwpsn	file "../Source/prod.c",line 1144,column 6,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_scia_puts")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1144| 
        ; call occurs [#_scia_puts] ; [] |1144| 
	.dwpsn	file "../Source/prod.c",line 1145,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1145| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1147| 
        ; branch occurs ; [] |1147| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1237,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1237| 
        MOVB      XAR0,#34              ; [CPU_] |1237| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1237| 
        CMPB      AL,#3                 ; [CPU_] |1237| 
        B         $C$L335,EQ            ; [CPU_] |1237| 
        ; branchcc occurs ; [] |1237| 
        MOVB      XAR1,#34              ; [CPU_] |1237| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1237| 
        CMPB      AL,#2                 ; [CPU_] |1237| 
        B         $C$L335,EQ            ; [CPU_] |1237| 
        ; branchcc occurs ; [] |1237| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1244,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1244| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] |1244| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1245,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1245| 
        MOVL      XAR0,#44              ; [CPU_] |1245| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1245| 
        MOV       *-SP[3],AL            ; [CPU_] |1245| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1245| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1245| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1245| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_sprintf")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1245| 
        ; call occurs [#_sprintf] ; [] |1245| 
        MOVL      XAR0,#44              ; [CPU_] |1245| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1245| 
	.dwpsn	file "../Source/prod.c",line 1246,column 7,is_stmt,isa 0
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_scia_puts")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1246| 
        ; call occurs [#_scia_puts] ; [] |1246| 
        MOV       AL,*-SP[39]           ; [CPU_] |1246| 
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1247| 
        B         $C$L332,GEQ           ; [CPU_] |1247| 
        ; branchcc occurs ; [] |1247| 
	.dwpsn	file "../Source/prod.c",line 1248,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1248| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_scia_puts")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1248| 
        ; call occurs [#_scia_puts] ; [] |1248| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1244,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1244| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1244| 
        B         $C$L331,LT            ; [CPU_] |1244| 
        ; branchcc occurs ; [] |1244| 
	.dwpsn	file "../Source/prod.c",line 1251,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1251| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_scia_puts")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1251| 
        ; call occurs [#_scia_puts] ; [] |1251| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1252,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1252| 
        MOVB      XAR0,#35              ; [CPU_] |1252| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1252| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1252| 
        MOV       *-SP[3],AL            ; [CPU_] |1252| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1252| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1252| 
        MOVL      XAR0,#74              ; [CPU_] |1252| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1252| 
        ADDL      ACC,XAR6              ; [CPU_] |1252| 
        MOVL      XAR4,ACC              ; [CPU_] |1252| 
        MOVL      XAR0,#44              ; [CPU_] |1252| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1252| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1252| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1252| 
        MOVL      XAR4,XAR1             ; [CPU_] |1252| 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_sprintf")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1252| 
        ; call occurs [#_sprintf] ; [] |1252| 
        MOVL      XAR4,XAR1             ; [CPU_] |1252| 
	.dwpsn	file "../Source/prod.c",line 1255,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1255| 
	.dwpsn	file "../Source/prod.c",line 1252,column 6,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |1252| 
	.dwpsn	file "../Source/prod.c",line 1255,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1255| 
        MOVL      XAR5,XAR1             ; [CPU_] |1255| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1255| 
        ; call occurs [#_scia_getparam] ; [] |1255| 
        MOVL      XAR4,XAR1             ; [CPU_] |1255| 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_scia_puts")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1256| 
        ; call occurs [#_scia_puts] ; [] |1256| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1257| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_scia_puts")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1257| 
        ; call occurs [#_scia_puts] ; [] |1257| 
        MOV       AL,*-SP[39]           ; [CPU_] |1257| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1258| 
        ; branchcc occurs ; [] |1258| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1263,column 6,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_atoi")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1263| 
        ; call occurs [#_atoi] ; [] |1263| 
        CMPB      AL,#7                 ; [CPU_] |1263| 
        B         $C$L333,HI            ; [CPU_] |1263| 
        ; branchcc occurs ; [] |1263| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1269| 
        MOVB      XAR1,#35              ; [CPU_] |1269| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1270,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1270| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1270| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1270,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1270| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1270| 
        MOVL      XAR0,#74              ; [CPU_] |1270| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1270| 
	.dwpsn	file "../Source/prod.c",line 1277,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1277| 
        ; branch occurs ; [] |1277| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1265,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1265| 
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1267| 
        ; branch occurs ; [] |1267| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1259,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1259| 
	.dwpsn	file "../Source/prod.c",line 1261,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1261| 
        ; branch occurs ; [] |1261| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1239,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1239| 
	.dwpsn	file "../Source/prod.c",line 1241,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1241| 
        ; branch occurs ; [] |1241| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1310,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1310| 
        MOVB      XAR0,#40              ; [CPU_] |1310| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1310| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1310| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1310| 
        MOVL      XAR0,#44              ; [CPU_] |1310| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1310| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1310| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_sprintf")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1310| 
        ; call occurs [#_sprintf] ; [] |1310| 
        MOVL      XAR0,#44              ; [CPU_] |1310| 
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1312| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1312| 
	.dwpsn	file "../Source/prod.c",line 1310,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1310| 
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1312| 
        ; call occurs [#_scia_getparam] ; [] |1312| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1312| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_strtod")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1313,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1313| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1313| 
        MOVB      XAR1,#40              ; [CPU_] |1313| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1313| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1313| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_scia_puts")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1314| 
        ; call occurs [#_scia_puts] ; [] |1314| 
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1315| 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_scia_puts")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1315| 
        ; call occurs [#_scia_puts] ; [] |1315| 
	.dwpsn	file "../Source/prod.c",line 1317,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1317| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1317| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1317| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1317| 
        MOVB      XAR1,#40              ; [CPU_] |1317| 
        MOVL      XAR0,#44              ; [CPU_] |1317| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1317| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1317| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1317| 
        MOVL      XAR4,XAR1             ; [CPU_] |1317| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_sprintf")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1317| 
        ; call occurs [#_sprintf] ; [] |1317| 
        MOVL      XAR4,XAR1             ; [CPU_] |1317| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_scia_puts")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1319| 
        ; call occurs [#_scia_puts] ; [] |1319| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1323,column 6,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1323| 
        ; call occurs [#_ad7738_setcal] ; [] |1323| 
	.dwpsn	file "../Source/prod.c",line 1326,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1326| 
        ; branch occurs ; [] |1326| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1120,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1120| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1120| 
        MOV       AL,#1024              ; [CPU_] |1120| 
        MOVL      XAR5,XAR1             ; [CPU_] |1120| 
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1120| 
        ; call occurs [#_scia_getparam] ; [] |1120| 
        MOVL      XAR4,XAR1             ; [CPU_] |1120| 
	.dwpsn	file "../Source/prod.c",line 1122,column 6,is_stmt,isa 0
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_atol")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1122| 
        ; call occurs [#_atol] ; [] |1122| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1122| 
	.dwpsn	file "../Source/prod.c",line 1124,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1124| 
	.dwpsn	file "../Source/prod.c",line 1122,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1122| 
	.dwpsn	file "../Source/prod.c",line 1124,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1124| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1124| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1124| 
	.dwpsn	file "../Source/prod.c",line 1127,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1127| 
        ; branch occurs ; [] |1127| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1202,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1202| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] |1202| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1203,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1203| 
        MOVL      XAR0,#44              ; [CPU_] |1203| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1203| 
        MOV       *-SP[3],AL            ; [CPU_] |1203| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1203| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1203| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1203| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_sprintf")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1203| 
        ; call occurs [#_sprintf] ; [] |1203| 
        MOVL      XAR0,#44              ; [CPU_] |1203| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1203| 
	.dwpsn	file "../Source/prod.c",line 1204,column 7,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_scia_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1204| 
        ; call occurs [#_scia_puts] ; [] |1204| 
        MOV       AL,*-SP[39]           ; [CPU_] |1204| 
	.dwpsn	file "../Source/prod.c",line 1205,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1205| 
        B         $C$L340,GEQ           ; [CPU_] |1205| 
        ; branchcc occurs ; [] |1205| 
	.dwpsn	file "../Source/prod.c",line 1206,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1206| 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_scia_puts")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1206| 
        ; call occurs [#_scia_puts] ; [] |1206| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1202,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1202| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1202| 
        B         $C$L339,LT            ; [CPU_] |1202| 
        ; branchcc occurs ; [] |1202| 
	.dwpsn	file "../Source/prod.c",line 1209,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1209| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_scia_puts")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1209| 
        ; call occurs [#_scia_puts] ; [] |1209| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1210,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1210| 
        MOVB      XAR0,#34              ; [CPU_] |1210| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1210| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1210| 
        MOV       *-SP[3],AL            ; [CPU_] |1210| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1210| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1210| 
        MOVL      XAR0,#72              ; [CPU_] |1210| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1210| 
        ADDL      ACC,XAR6              ; [CPU_] |1210| 
        MOVL      XAR4,ACC              ; [CPU_] |1210| 
        MOVL      XAR0,#44              ; [CPU_] |1210| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1210| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1210| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1210| 
        MOVL      XAR4,XAR1             ; [CPU_] |1210| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_sprintf")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1210| 
        ; call occurs [#_sprintf] ; [] |1210| 
        MOVL      XAR4,XAR1             ; [CPU_] |1210| 
	.dwpsn	file "../Source/prod.c",line 1212,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1212| 
        MOV       AL,#1024              ; [CPU_] |1212| 
        MOVL      XAR5,XAR1             ; [CPU_] |1212| 
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1212| 
        ; call occurs [#_scia_getparam] ; [] |1212| 
        MOV       *-SP[39],AL           ; [CPU_] |1212| 
        MOVL      XAR4,XAR1             ; [CPU_] |1212| 
	.dwpsn	file "../Source/prod.c",line 1213,column 6,is_stmt,isa 0
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_scia_puts")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1213| 
        ; call occurs [#_scia_puts] ; [] |1213| 
	.dwpsn	file "../Source/prod.c",line 1214,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1214| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_scia_puts")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1214| 
        ; call occurs [#_scia_puts] ; [] |1214| 
        MOV       AL,*-SP[39]           ; [CPU_] |1214| 
	.dwpsn	file "../Source/prod.c",line 1215,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1215| 
        ; branchcc occurs ; [] |1215| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1219,column 6,is_stmt,isa 0
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_atoi")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1219| 
        ; call occurs [#_atoi] ; [] |1219| 
        CMPB      AL,#3                 ; [CPU_] |1219| 
        B         $C$L342,HI            ; [CPU_] |1219| 
        ; branchcc occurs ; [] |1219| 
	.dwpsn	file "../Source/prod.c",line 1225,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1225| 
        MOVB      XAR1,#34              ; [CPU_] |1225| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1225| 
	.dwpsn	file "../Source/prod.c",line 1226,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1226| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1226| 
	.dwpsn	file "../Source/prod.c",line 1225,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1225| 
	.dwpsn	file "../Source/prod.c",line 1226,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1226| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1226| 
        MOVL      XAR0,#72              ; [CPU_] |1226| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1226| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1226| 
        MOVL      XAR4,ACC              ; [CPU_] |1226| 
        MOVL      XAR0,#44              ; [CPU_] |1226| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1226| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1226| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1226| 
        MOVL      XAR4,XAR1             ; [CPU_] |1226| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_sprintf")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1226| 
        ; call occurs [#_sprintf] ; [] |1226| 
        MOVL      XAR4,XAR1             ; [CPU_] |1226| 
	.dwpsn	file "../Source/prod.c",line 1229,column 6,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_puts")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1229| 
        ; call occurs [#_scia_puts] ; [] |1229| 
	.dwpsn	file "../Source/prod.c",line 1230,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1230| 
	.dwpsn	file "../Source/prod.c",line 1233,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1233| 
        ; branch occurs ; [] |1233| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1221,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1221| 
	.dwpsn	file "../Source/prod.c",line 1223,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1223| 
        ; branch occurs ; [] |1223| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1216,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1216| 
	.dwpsn	file "../Source/prod.c",line 1217,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1217| 
        ; branch occurs ; [] |1217| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1283,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1283| 
        MOVL      XAR0,#44              ; [CPU_] |1283| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1283| 
        MOV       *-SP[3],#4096         ; [CPU_] |1283| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1283| 
        MOVL      XAR4,XAR1             ; [CPU_] |1283| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_sprintf")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1283| 
        ; call occurs [#_sprintf] ; [] |1283| 
        MOVL      XAR4,XAR1             ; [CPU_] |1283| 
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1285| 
        MOV       AL,#1024              ; [CPU_] |1285| 
        MOVL      XAR5,XAR1             ; [CPU_] |1285| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1285| 
        ; call occurs [#_scia_getparam] ; [] |1285| 
	.dwpsn	file "../Source/prod.c",line 1286,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1286| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_atoi")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1286| 
        ; call occurs [#_atoi] ; [] |1286| 
        MOV       *-SP[39],AL           ; [CPU_] |1286| 
	.dwpsn	file "../Source/prod.c",line 1287,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1287| 
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1287| 
        ; call occurs [#_scia_puts] ; [] |1287| 
        MOV       AL,*-SP[39]           ; [CPU_] |1287| 
	.dwpsn	file "../Source/prod.c",line 1289,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1289| 
        ; branchcc occurs ; [] |1289| 
        CMP       AL,#4096              ; [CPU_] |1289| 
        B         $C$L346,GT            ; [CPU_] |1289| 
        ; branchcc occurs ; [] |1289| 
	.dwpsn	file "../Source/prod.c",line 1294,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1294| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_scia_puts")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1294| 
        ; call occurs [#_scia_puts] ; [] |1294| 
	.dwpsn	file "../Source/prod.c",line 1296,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1296| 
        MOVL      XAR0,#44              ; [CPU_] |1296| 
        MOV       AL,*-SP[39]           ; [CPU_] |1296| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1296| 
        MOV       *-SP[3],AL            ; [CPU_] |1296| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1296| 
        MOVL      XAR4,XAR1             ; [CPU_] |1296| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_sprintf")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1296| 
        ; call occurs [#_sprintf] ; [] |1296| 
        MOVL      XAR4,XAR1             ; [CPU_] |1296| 
	.dwpsn	file "../Source/prod.c",line 1298,column 6,is_stmt,isa 0
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_scia_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1298| 
        ; call occurs [#_scia_puts] ; [] |1298| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1303| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1303| 
        MOV       AL,*-SP[39]           ; [CPU_] |1303| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1303| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1304,column 6,is_stmt,isa 0
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_maf_rst")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1304| 
        ; call occurs [#_maf_rst] ; [] |1304| 
	.dwpsn	file "../Source/prod.c",line 1306,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1306| 
        ; branch occurs ; [] |1306| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1291,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1291| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_scia_puts")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1291| 
        ; call occurs [#_scia_puts] ; [] |1291| 
	.dwpsn	file "../Source/prod.c",line 1282,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1282| 
        ; branch occurs ; [] |1282| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1154,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1154| 
        MOVL      XAR0,#44              ; [CPU_] |1154| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1154| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1154| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1154| 
        MOVL      XAR4,XAR1             ; [CPU_] |1154| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_sprintf")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1154| 
        ; call occurs [#_sprintf] ; [] |1154| 
        MOVL      XAR4,XAR1             ; [CPU_] |1154| 
	.dwpsn	file "../Source/prod.c",line 1155,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1155| 
        MOV       AL,#1024              ; [CPU_] |1155| 
        MOVL      XAR5,XAR1             ; [CPU_] |1155| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1155| 
        ; call occurs [#_scia_getparam] ; [] |1155| 
	.dwpsn	file "../Source/prod.c",line 1156,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1156| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_atoi")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1156| 
        ; call occurs [#_atoi] ; [] |1156| 
        MOV       *-SP[50],AL           ; [CPU_] |1156| 
	.dwpsn	file "../Source/prod.c",line 1157,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1157| 
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1157| 
        ; call occurs [#_scia_puts] ; [] |1157| 
        MOV       AL,*-SP[50]           ; [CPU_] |1157| 
	.dwpsn	file "../Source/prod.c",line 1159,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1159| 
        CMPB      AL,#4                 ; [CPU_] |1159| 
        B         $C$L350,HIS           ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
	.dwpsn	file "../Source/prod.c",line 1163,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1163| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1163| 
        ; call occurs [#_scia_puts] ; [] |1163| 
	.dwpsn	file "../Source/prod.c",line 1164,column 6,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |1164| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1169,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1169| 
        MOVL      XAR0,#44              ; [CPU_] |1169| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1169| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1169| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1169| 
        MOVL      XAR4,XAR1             ; [CPU_] |1169| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_sprintf")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1169| 
        ; call occurs [#_sprintf] ; [] |1169| 
        MOVL      XAR4,XAR1             ; [CPU_] |1169| 
	.dwpsn	file "../Source/prod.c",line 1170,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1170| 
        MOV       AL,#1024              ; [CPU_] |1170| 
        MOVL      XAR5,XAR1             ; [CPU_] |1170| 
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1170| 
        ; call occurs [#_scia_getparam] ; [] |1170| 
	.dwpsn	file "../Source/prod.c",line 1171,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1171| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_atoi")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1171| 
        ; call occurs [#_atoi] ; [] |1171| 
        MOV       *-SP[49],AL           ; [CPU_] |1171| 
	.dwpsn	file "../Source/prod.c",line 1172,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1172| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1172| 
        ; call occurs [#_scia_puts] ; [] |1172| 
        MOV       AL,*-SP[49]           ; [CPU_] |1172| 
	.dwpsn	file "../Source/prod.c",line 1176,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1176| 
        CMPB      AL,#20                ; [CPU_] |1176| 
        B         $C$L349,HIS           ; [CPU_] |1176| 
        ; branchcc occurs ; [] |1176| 
	.dwpsn	file "../Source/prod.c",line 1180,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1180| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_scia_puts")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1180| 
        ; call occurs [#_scia_puts] ; [] |1180| 
	.dwpsn	file "../Source/prod.c",line 1183,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1183| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1183| 
        MOVL      XAR0,#44              ; [CPU_] |1183| 
        MOV       AH,*-SP[49]           ; [CPU_] |1183| 
        ADD       AL,*-SP[50]           ; [CPU_] |1183| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1183| 
        MOV       *-SP[3],AL            ; [CPU_] |1183| 
        MOV       *-SP[4],AH            ; [CPU_] |1183| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1183| 
        DEC       *-SP[49]              ; [CPU_] |1183| 
        MOVL      XAR4,XAR1             ; [CPU_] |1183| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_sprintf")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1183| 
        ; call occurs [#_sprintf] ; [] |1183| 
        MOVL      XAR4,XAR1             ; [CPU_] |1183| 
	.dwpsn	file "../Source/prod.c",line 1185,column 6,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_scia_puts")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1185| 
        ; call occurs [#_scia_puts] ; [] |1185| 
        MOV       AL,*-SP[49]           ; [CPU_] |1185| 
	.dwpsn	file "../Source/prod.c",line 1186,column 6,is_stmt,isa 0
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_print_sensor")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1186| 
        ; call occurs [#_print_sensor] ; [] |1186| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1190,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1190| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1190| 
        MOVB      AL,#10                ; [CPU_] |1190| 
        MOV       T,*-SP[50]            ; [CPU_] |1190| 
        MPYU      ACC,T,AL              ; [CPU_] |1190| 
        ADDL      ACC,XAR6              ; [CPU_] |1190| 
        MOVL      XAR4,ACC              ; [CPU_] |1190| 
        MOVB      XAR0,#42              ; [CPU_] |1190| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[49]           ; [CPU_] |1190| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1190| 
	.dwpsn	file "../Source/prod.c",line 1191,column 6,is_stmt,isa 0
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1191| 
        ; call occurs [#_ad7738_setcal] ; [] |1191| 
        MOVL      XAR0,#78              ; [CPU_] |1191| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1191| 
	.dwpsn	file "../Source/prod.c",line 1193,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |1193| 
        MOVL      XAR1,ACC              ; [CPU_] |1193| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1193| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1193| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1193| 
	.dwpsn	file "../Source/prod.c",line 1194,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1194| 
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1194| 
        ; call occurs [#_ad7738_resetvall] ; [] |1194| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1198,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1198| 
        ; branch occurs ; [] |1198| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1178,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1178| 
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1178| 
        ; call occurs [#_scia_puts] ; [] |1178| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1168| 
        ; branch occurs ; [] |1168| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1161,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1161| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1161| 
        ; call occurs [#_scia_puts] ; [] |1161| 
	.dwpsn	file "../Source/prod.c",line 1153,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1153| 
        ; branch occurs ; [] |1153| 
$C$L351:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2014,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2014| 
        B         $C$L625,LO            ; [CPU_] |2014| 
        ; branchcc occurs ; [] |2014| 
	.dwpsn	file "../Source/prod.c",line 2019,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2019| 
        CMPB      AL,#78                ; [CPU_] |2019| 
        B         $C$L352,EQ            ; [CPU_] |2019| 
        ; branchcc occurs ; [] |2019| 
        CMPB      AL,#85                ; [CPU_] |2019| 
        B         $C$L352,EQ            ; [CPU_] |2019| 
        ; branchcc occurs ; [] |2019| 
        CMPB      AL,#66                ; [CPU_] |2019| 
        B         $C$L352,EQ            ; [CPU_] |2019| 
        ; branchcc occurs ; [] |2019| 
        CMPB      AL,#68                ; [CPU_] |2019| 
        B         $C$L625,NEQ           ; [CPU_] |2019| 
        ; branchcc occurs ; [] |2019| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2022,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2022| 
	.dwpsn	file "../Source/prod.c",line 2043,column 5,is_stmt,isa 0
        MOV       *-SP[39],#20          ; [CPU_] |2043| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2045,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2045| 
        MOVL      XAR0,#44              ; [CPU_] |2045| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2045| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2045| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2045| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_sprintf")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2045| 
        ; call occurs [#_sprintf] ; [] |2045| 
        MOVL      XAR0,#44              ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2046| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2045,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2046| 
        ; call occurs [#_scia_getparam] ; [] |2046| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_atoi")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2047| 
        ; call occurs [#_atoi] ; [] |2047| 
        MOV       *-SP[49],AL           ; [CPU_] |2047| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2048,column 6,is_stmt,isa 0
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_puts")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2048| 
        ; call occurs [#_scia_puts] ; [] |2048| 
        MOV       AL,*-SP[49]           ; [CPU_] |2048| 
	.dwpsn	file "../Source/prod.c",line 2052,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2052| 
        CMPB      AL,#20                ; [CPU_] |2052| 
        B         $C$L413,HIS           ; [CPU_] |2052| 
        ; branchcc occurs ; [] |2052| 
	.dwpsn	file "../Source/prod.c",line 2056,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2056| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_puts")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2056| 
        ; call occurs [#_scia_puts] ; [] |2056| 
	.dwpsn	file "../Source/prod.c",line 2057,column 5,is_stmt,isa 0
        DEC       *-SP[49]              ; [CPU_] |2057| 
	.dwpsn	file "../Source/prod.c",line 2059,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2059| 
        CMPB      AL,#66                ; [CPU_] |2059| 
        B         $C$L408,EQ            ; [CPU_] |2059| 
        ; branchcc occurs ; [] |2059| 
        CMPB      AL,#68                ; [CPU_] |2059| 
        B         $C$L407,EQ            ; [CPU_] |2059| 
        ; branchcc occurs ; [] |2059| 
        CMPB      AL,#78                ; [CPU_] |2059| 
        B         $C$L403,EQ            ; [CPU_] |2059| 
        ; branchcc occurs ; [] |2059| 
        CMPB      AL,#85                ; [CPU_] |2059| 
        B         $C$L625,NEQ           ; [CPU_] |2059| 
        ; branchcc occurs ; [] |2059| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2086,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2086| 
        MOV       AH,#0                 ; [CPU_] |2086| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOV       T,*-SP[49]            ; [CPU_] |2088| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2086,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2086| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2088| 
        MPYU      ACC,T,AL              ; [CPU_] |2088| 
        ADDL      ACC,XAR6              ; [CPU_] |2088| 
        ADDB      ACC,#124              ; [CPU_] |2088| 
        MOVL      XAR1,ACC              ; [CPU_] |2088| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2088| 
        CMPB      AL,#35                ; [CPU_] |2088| 
        B         $C$L354,GT            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        CMPB      AL,#35                ; [CPU_] |2088| 
        B         $C$L370,EQ            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        CMPB      AL,#16                ; [CPU_] |2088| 
        B         $C$L390,EQ            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        CMPB      AL,#17                ; [CPU_] |2088| 
        B         $C$L386,EQ            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        CMPB      AL,#34                ; [CPU_] |2088| 
        B         $C$L377,EQ            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        B         $C$L394,UNC           ; [CPU_] |2088| 
        ; branch occurs ; [] |2088| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2088| 
        B         $C$L363,EQ            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        CMPB      AL,#53                ; [CPU_] |2088| 
        B         $C$L359,EQ            ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
        CMPB      AL,#70                ; [CPU_] |2088| 
        B         $C$L394,NEQ           ; [CPU_] |2088| 
        ; branchcc occurs ; [] |2088| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2277| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2277| 
        MOV       AL,#1024              ; [CPU_] |2277| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2277| 
        ; call occurs [#_scia_getparam] ; [] |2277| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2277| 
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_atoi")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2279| 
        ; call occurs [#_atoi] ; [] |2279| 
        MOV       *-SP[39],AL           ; [CPU_] |2279| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2279| 
	.dwpsn	file "../Source/prod.c",line 2280,column 8,is_stmt,isa 0
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2280| 
        ; call occurs [#_scia_puts] ; [] |2280| 
        MOV       AL,*-SP[39]           ; [CPU_] |2280| 
	.dwpsn	file "../Source/prod.c",line 2281,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2281| 
        B         $C$L356,EQ            ; [CPU_] |2281| 
        ; branchcc occurs ; [] |2281| 
        CMPB      AL,#7                 ; [CPU_] |2281| 
        B         $C$L357,EQ            ; [CPU_] |2281| 
        ; branchcc occurs ; [] |2281| 
	.dwpsn	file "../Source/prod.c",line 2282,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2282| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2282| 
        ; call occurs [#_scia_puts] ; [] |2282| 
$C$L356:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2284,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2284| 
        B         $C$L357,EQ            ; [CPU_] |2284| 
        ; branchcc occurs ; [] |2284| 
        CMPB      AL,#7                 ; [CPU_] |2284| 
        B         $C$L355,NEQ           ; [CPU_] |2284| 
        ; branchcc occurs ; [] |2284| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2285,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2285| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2285| 
        ; call occurs [#_scia_puts] ; [] |2285| 
        MOV       AL,*-SP[39]           ; [CPU_] |2285| 
	.dwpsn	file "../Source/prod.c",line 2287,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2287| 
        B         $C$L358,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
        CMPB      AL,#7                 ; [CPU_] |2287| 
        B         $C$L393,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
        B         $C$L394,UNC           ; [CPU_] |2287| 
        ; branch occurs ; [] |2287| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2289,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2289| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2289| 
        MOV       AL,*-SP[39]           ; [CPU_] |2289| 
	.dwpsn	file "../Source/prod.c",line 2290,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2290| 
	.dwpsn	file "../Source/prod.c",line 2291,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2291| 
        ; branch occurs ; [] |2291| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2252,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2252| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2252| 
        MOV       AL,#1024              ; [CPU_] |2252| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2252| 
        ; call occurs [#_scia_getparam] ; [] |2252| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2252| 
	.dwpsn	file "../Source/prod.c",line 2254,column 8,is_stmt,isa 0
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_atoi")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2254| 
        ; call occurs [#_atoi] ; [] |2254| 
        MOV       *-SP[39],AL           ; [CPU_] |2254| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2254| 
	.dwpsn	file "../Source/prod.c",line 2255,column 8,is_stmt,isa 0
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_scia_puts")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2255| 
        ; call occurs [#_scia_puts] ; [] |2255| 
        MOV       AL,*-SP[39]           ; [CPU_] |2255| 
	.dwpsn	file "../Source/prod.c",line 2256,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2256| 
        B         $C$L360,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
        CMPB      AL,#7                 ; [CPU_] |2256| 
        B         $C$L361,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
	.dwpsn	file "../Source/prod.c",line 2257,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2257| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_puts")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2257| 
        ; call occurs [#_scia_puts] ; [] |2257| 
$C$L360:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2259,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2259| 
        B         $C$L361,EQ            ; [CPU_] |2259| 
        ; branchcc occurs ; [] |2259| 
        CMPB      AL,#7                 ; [CPU_] |2259| 
        B         $C$L359,NEQ           ; [CPU_] |2259| 
        ; branchcc occurs ; [] |2259| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2260,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2260| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_scia_puts")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2260| 
        ; call occurs [#_scia_puts] ; [] |2260| 
        MOV       AL,*-SP[39]           ; [CPU_] |2260| 
	.dwpsn	file "../Source/prod.c",line 2262,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2262| 
        B         $C$L362,EQ            ; [CPU_] |2262| 
        ; branchcc occurs ; [] |2262| 
        CMPB      AL,#7                 ; [CPU_] |2262| 
        B         $C$L393,EQ            ; [CPU_] |2262| 
        ; branchcc occurs ; [] |2262| 
        B         $C$L394,UNC           ; [CPU_] |2262| 
        ; branch occurs ; [] |2262| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2264| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2264| 
        MOV       AL,*-SP[39]           ; [CPU_] |2264| 
	.dwpsn	file "../Source/prod.c",line 2265,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2265| 
	.dwpsn	file "../Source/prod.c",line 2266,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2266| 
        ; branch occurs ; [] |2266| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2218,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2218| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2218| 
        MOV       AL,#1024              ; [CPU_] |2218| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2218| 
        ; call occurs [#_scia_getparam] ; [] |2218| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2218| 
	.dwpsn	file "../Source/prod.c",line 2221,column 8,is_stmt,isa 0
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_atoi")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2221| 
        ; call occurs [#_atoi] ; [] |2221| 
        MOV       *-SP[39],AL           ; [CPU_] |2221| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2221| 
	.dwpsn	file "../Source/prod.c",line 2222,column 8,is_stmt,isa 0
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2222| 
        ; call occurs [#_scia_puts] ; [] |2222| 
        MOV       AL,*-SP[39]           ; [CPU_] |2222| 
	.dwpsn	file "../Source/prod.c",line 2223,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2223| 
        B         $C$L364,EQ            ; [CPU_] |2223| 
        ; branchcc occurs ; [] |2223| 
        CMPB      AL,#3                 ; [CPU_] |2223| 
        B         $C$L365,EQ            ; [CPU_] |2223| 
        ; branchcc occurs ; [] |2223| 
        CMPB      AL,#4                 ; [CPU_] |2223| 
        B         $C$L366,EQ            ; [CPU_] |2223| 
        ; branchcc occurs ; [] |2223| 
        CMPB      AL,#7                 ; [CPU_] |2223| 
        B         $C$L367,EQ            ; [CPU_] |2223| 
        ; branchcc occurs ; [] |2223| 
	.dwpsn	file "../Source/prod.c",line 2224,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2224| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_puts")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2224| 
        ; call occurs [#_scia_puts] ; [] |2224| 
$C$L364:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2226,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2226| 
        B         $C$L367,EQ            ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2226| 
        B         $C$L367,EQ            ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2226| 
        B         $C$L367,EQ            ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
        CMPB      AL,#7                 ; [CPU_] |2226| 
        B         $C$L363,NEQ           ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2227,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2227| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_puts")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2227| 
        ; call occurs [#_scia_puts] ; [] |2227| 
        MOV       AL,*-SP[39]           ; [CPU_] |2227| 
	.dwpsn	file "../Source/prod.c",line 2229,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2229| 
        B         $C$L369,EQ            ; [CPU_] |2229| 
        ; branchcc occurs ; [] |2229| 
        CMPB      AL,#3                 ; [CPU_] |2229| 
        B         $C$L368,EQ            ; [CPU_] |2229| 
        ; branchcc occurs ; [] |2229| 
        CMPB      AL,#4                 ; [CPU_] |2229| 
        B         $C$L385,EQ            ; [CPU_] |2229| 
        ; branchcc occurs ; [] |2229| 
        CMPB      AL,#7                 ; [CPU_] |2229| 
        B         $C$L393,EQ            ; [CPU_] |2229| 
        ; branchcc occurs ; [] |2229| 
        B         $C$L394,UNC           ; [CPU_] |2229| 
        ; branch occurs ; [] |2229| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2235,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2235| 
        MOV       AH,#15820             ; [CPU_] |2235| 
	.dwpsn	file "../Source/prod.c",line 2237,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2237| 
        ; branch occurs ; [] |2237| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2231,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2231| 
        MOV       AH,#15649             ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2233| 
        ; branch occurs ; [] |2233| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2184,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2184| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2184| 
        MOV       AL,#1024              ; [CPU_] |2184| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2184| 
        ; call occurs [#_scia_getparam] ; [] |2184| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2184| 
	.dwpsn	file "../Source/prod.c",line 2187,column 8,is_stmt,isa 0
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_atoi")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2187| 
        ; call occurs [#_atoi] ; [] |2187| 
        MOV       *-SP[39],AL           ; [CPU_] |2187| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2187| 
	.dwpsn	file "../Source/prod.c",line 2188,column 8,is_stmt,isa 0
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2188| 
        ; call occurs [#_scia_puts] ; [] |2188| 
        MOV       AL,*-SP[39]           ; [CPU_] |2188| 
	.dwpsn	file "../Source/prod.c",line 2189,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2189| 
        B         $C$L371,EQ            ; [CPU_] |2189| 
        ; branchcc occurs ; [] |2189| 
        CMPB      AL,#3                 ; [CPU_] |2189| 
        B         $C$L372,EQ            ; [CPU_] |2189| 
        ; branchcc occurs ; [] |2189| 
        CMPB      AL,#4                 ; [CPU_] |2189| 
        B         $C$L373,EQ            ; [CPU_] |2189| 
        ; branchcc occurs ; [] |2189| 
        CMPB      AL,#7                 ; [CPU_] |2189| 
        B         $C$L374,EQ            ; [CPU_] |2189| 
        ; branchcc occurs ; [] |2189| 
	.dwpsn	file "../Source/prod.c",line 2190,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2190| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2190| 
        ; call occurs [#_scia_puts] ; [] |2190| 
$C$L371:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2192,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2192| 
        B         $C$L374,EQ            ; [CPU_] |2192| 
        ; branchcc occurs ; [] |2192| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2192| 
        B         $C$L374,EQ            ; [CPU_] |2192| 
        ; branchcc occurs ; [] |2192| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2192| 
        B         $C$L374,EQ            ; [CPU_] |2192| 
        ; branchcc occurs ; [] |2192| 
        CMPB      AL,#7                 ; [CPU_] |2192| 
        B         $C$L370,NEQ           ; [CPU_] |2192| 
        ; branchcc occurs ; [] |2192| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2193,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2193| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_scia_puts")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2193| 
        ; call occurs [#_scia_puts] ; [] |2193| 
        MOV       AL,*-SP[39]           ; [CPU_] |2193| 
	.dwpsn	file "../Source/prod.c",line 2195,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2195| 
        B         $C$L376,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        CMPB      AL,#3                 ; [CPU_] |2195| 
        B         $C$L385,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        CMPB      AL,#4                 ; [CPU_] |2195| 
        B         $C$L375,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        CMPB      AL,#7                 ; [CPU_] |2195| 
        B         $C$L393,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        B         $C$L394,UNC           ; [CPU_] |2195| 
        ; branch occurs ; [] |2195| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2205,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2205| 
        MOV       AH,#16672             ; [CPU_] |2205| 
	.dwpsn	file "../Source/prod.c",line 2207,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2207| 
        ; branch occurs ; [] |2207| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2197,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2197| 
        MOV       AH,#16073             ; [CPU_] |2197| 
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2199| 
        ; branch occurs ; [] |2199| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2150,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2150| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2150| 
        MOV       AL,#1024              ; [CPU_] |2150| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2150| 
        ; call occurs [#_scia_getparam] ; [] |2150| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2150| 
	.dwpsn	file "../Source/prod.c",line 2153,column 8,is_stmt,isa 0
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_atoi")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2153| 
        ; call occurs [#_atoi] ; [] |2153| 
        MOV       *-SP[39],AL           ; [CPU_] |2153| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2153| 
	.dwpsn	file "../Source/prod.c",line 2154,column 8,is_stmt,isa 0
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2154| 
        ; call occurs [#_scia_puts] ; [] |2154| 
        MOV       AL,*-SP[39]           ; [CPU_] |2154| 
	.dwpsn	file "../Source/prod.c",line 2155,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2155| 
        B         $C$L378,EQ            ; [CPU_] |2155| 
        ; branchcc occurs ; [] |2155| 
        CMPB      AL,#3                 ; [CPU_] |2155| 
        B         $C$L379,EQ            ; [CPU_] |2155| 
        ; branchcc occurs ; [] |2155| 
        CMPB      AL,#4                 ; [CPU_] |2155| 
        B         $C$L380,EQ            ; [CPU_] |2155| 
        ; branchcc occurs ; [] |2155| 
        CMPB      AL,#7                 ; [CPU_] |2155| 
        B         $C$L381,EQ            ; [CPU_] |2155| 
        ; branchcc occurs ; [] |2155| 
	.dwpsn	file "../Source/prod.c",line 2156,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2156| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2156| 
        ; call occurs [#_scia_puts] ; [] |2156| 
$C$L378:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2158,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2158| 
        B         $C$L381,EQ            ; [CPU_] |2158| 
        ; branchcc occurs ; [] |2158| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2158| 
        B         $C$L381,EQ            ; [CPU_] |2158| 
        ; branchcc occurs ; [] |2158| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2158| 
        B         $C$L381,EQ            ; [CPU_] |2158| 
        ; branchcc occurs ; [] |2158| 
        CMPB      AL,#7                 ; [CPU_] |2158| 
        B         $C$L377,NEQ           ; [CPU_] |2158| 
        ; branchcc occurs ; [] |2158| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2159,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2159| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_puts")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2159| 
        ; call occurs [#_scia_puts] ; [] |2159| 
        MOV       AL,*-SP[39]           ; [CPU_] |2159| 
	.dwpsn	file "../Source/prod.c",line 2161,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2161| 
        B         $C$L385,EQ            ; [CPU_] |2161| 
        ; branchcc occurs ; [] |2161| 
        CMPB      AL,#3                 ; [CPU_] |2161| 
        B         $C$L384,EQ            ; [CPU_] |2161| 
        ; branchcc occurs ; [] |2161| 
        CMPB      AL,#4                 ; [CPU_] |2161| 
        B         $C$L382,EQ            ; [CPU_] |2161| 
        ; branchcc occurs ; [] |2161| 
        CMPB      AL,#7                 ; [CPU_] |2161| 
        B         $C$L393,EQ            ; [CPU_] |2161| 
        ; branchcc occurs ; [] |2161| 
        B         $C$L394,UNC           ; [CPU_] |2161| 
        ; branch occurs ; [] |2161| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2171,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2171| 
        MOV       AH,#16843             ; [CPU_] |2171| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2171| 
        MOV       AL,*-SP[39]           ; [CPU_] |2171| 
	.dwpsn	file "../Source/prod.c",line 2172,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2172| 
	.dwpsn	file "../Source/prod.c",line 2173,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2173| 
        ; branch occurs ; [] |2173| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2167,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2167| 
        MOV       AH,#16418             ; [CPU_] |2167| 
	.dwpsn	file "../Source/prod.c",line 2169,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2169| 
        ; branch occurs ; [] |2169| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2163,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2163| 
	.dwpsn	file "../Source/prod.c",line 2165,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2165| 
        ; branch occurs ; [] |2165| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2121,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2121| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2121| 
        MOV       AL,#1024              ; [CPU_] |2121| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2121| 
        ; call occurs [#_scia_getparam] ; [] |2121| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2121| 
	.dwpsn	file "../Source/prod.c",line 2123,column 8,is_stmt,isa 0
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_atoi")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2123| 
        ; call occurs [#_atoi] ; [] |2123| 
        MOV       *-SP[39],AL           ; [CPU_] |2123| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2123| 
	.dwpsn	file "../Source/prod.c",line 2124,column 8,is_stmt,isa 0
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2124| 
        ; call occurs [#_scia_puts] ; [] |2124| 
        MOV       AL,*-SP[39]           ; [CPU_] |2124| 
	.dwpsn	file "../Source/prod.c",line 2125,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2125| 
        B         $C$L388,EQ            ; [CPU_] |2125| 
        ; branchcc occurs ; [] |2125| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2125| 
        B         $C$L387,EQ            ; [CPU_] |2125| 
        ; branchcc occurs ; [] |2125| 
	.dwpsn	file "../Source/prod.c",line 2126,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2126| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2126| 
        ; call occurs [#_scia_puts] ; [] |2126| 
$C$L387:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2128,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2128| 
        B         $C$L388,EQ            ; [CPU_] |2128| 
        ; branchcc occurs ; [] |2128| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2128| 
        B         $C$L386,NEQ           ; [CPU_] |2128| 
        ; branchcc occurs ; [] |2128| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2129,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2129| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2129| 
        ; call occurs [#_scia_puts] ; [] |2129| 
        MOV       AL,*-SP[39]           ; [CPU_] |2129| 
	.dwpsn	file "../Source/prod.c",line 2131,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2131| 
        ; branchcc occurs ; [] |2131| 
        CMPB      AL,#1                 ; [CPU_] |2131| 
        B         $C$L396,EQ            ; [CPU_] |2131| 
        ; branchcc occurs ; [] |2131| 
        CMPB      AL,#7                 ; [CPU_] |2131| 
        B         $C$L393,EQ            ; [CPU_] |2131| 
        ; branchcc occurs ; [] |2131| 
        B         $C$L394,UNC           ; [CPU_] |2131| 
        ; branch occurs ; [] |2131| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2133,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2133| 
        MOV       AH,#16397             ; [CPU_] |2133| 
	.dwpsn	file "../Source/prod.c",line 2135,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2135| 
        ; branch occurs ; [] |2135| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2092,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2092| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2092| 
        MOV       AL,#1024              ; [CPU_] |2092| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2092| 
        ; call occurs [#_scia_getparam] ; [] |2092| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2092| 
	.dwpsn	file "../Source/prod.c",line 2094,column 8,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_atoi")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2094| 
        ; call occurs [#_atoi] ; [] |2094| 
        MOV       *-SP[39],AL           ; [CPU_] |2094| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2094| 
	.dwpsn	file "../Source/prod.c",line 2095,column 8,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2095| 
        ; call occurs [#_scia_puts] ; [] |2095| 
        MOV       AL,*-SP[39]           ; [CPU_] |2095| 
	.dwpsn	file "../Source/prod.c",line 2096,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2096| 
        B         $C$L392,EQ            ; [CPU_] |2096| 
        ; branchcc occurs ; [] |2096| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2096| 
        B         $C$L391,EQ            ; [CPU_] |2096| 
        ; branchcc occurs ; [] |2096| 
	.dwpsn	file "../Source/prod.c",line 2097,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2097| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_puts")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2097| 
        ; call occurs [#_scia_puts] ; [] |2097| 
$C$L391:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2099,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2099| 
        B         $C$L392,EQ            ; [CPU_] |2099| 
        ; branchcc occurs ; [] |2099| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2099| 
        B         $C$L390,NEQ           ; [CPU_] |2099| 
        ; branchcc occurs ; [] |2099| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2100,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2100| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2100| 
        ; call occurs [#_scia_puts] ; [] |2100| 
        MOV       AL,*-SP[39]           ; [CPU_] |2100| 
	.dwpsn	file "../Source/prod.c",line 2102,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2102| 
        ; branchcc occurs ; [] |2102| 
        CMPB      AL,#1                 ; [CPU_] |2102| 
        B         $C$L395,EQ            ; [CPU_] |2102| 
        ; branchcc occurs ; [] |2102| 
        CMPB      AL,#7                 ; [CPU_] |2102| 
        B         $C$L394,NEQ           ; [CPU_] |2102| 
        ; branchcc occurs ; [] |2102| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2112,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2112| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2112| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2112| 
        MOV       AL,#0                 ; [CPU_] |2112| 
        MOV       AH,#17096             ; [CPU_] |2112| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2112| 
        ; call occurs [#FS$$DIV] ; [] |2112| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2112| 
        MOV       AL,*-SP[39]           ; [CPU_] |2112| 
	.dwpsn	file "../Source/prod.c",line 2113,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2113| 
        MOV       *-SP[39],AL           ; [CPU_] |2113| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2303,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2303| 
        MOV       AH,#0                 ; [CPU_] |2303| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2303| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2303| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2303| 
        ; call occurs [#FS$$CMP] ; [] |2303| 
        CMPB      AL,#0                 ; [CPU_] |2303| 
        B         $C$L399,NEQ           ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
	.dwpsn	file "../Source/prod.c",line 2304,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2304| 
	.dwpsn	file "../Source/prod.c",line 2305,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2305| 
        ; branch occurs ; [] |2305| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2108,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2108| 
        MOV       AH,#16104             ; [CPU_] |2108| 
	.dwpsn	file "../Source/prod.c",line 2110,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2110| 
        ; branch occurs ; [] |2110| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2104,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2104| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2104| 
        MOV       AL,*-SP[39]           ; [CPU_] |2104| 
	.dwpsn	file "../Source/prod.c",line 2105,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2105| 
$C$L398:    
        MOV       *-SP[39],AL           ; [CPU_] |2105| 
$C$L399:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2308,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2308| 
        B         $C$L402,EQ            ; [CPU_] |2308| 
        ; branchcc occurs ; [] |2308| 
	.dwpsn	file "../Source/prod.c",line 2314,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2314| 
	.dwpsn	file "../Source/prod.c",line 2318,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2318| 
	.dwpsn	file "../Source/prod.c",line 2315,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2315| 
	.dwpsn	file "../Source/prod.c",line 2318,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2318| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2315,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2315| 
	.dwpsn	file "../Source/prod.c",line 2318,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2318| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2318| 
        ADD       AL,*-SP[49]           ; [CPU_] |2318| 
        MOV       *-SP[3],AL            ; [CPU_] |2318| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2318| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2318| 
        ANDB      AL,#0x0f              ; [CPU_] |2318| 
        MOV       ACC,AL << 1           ; [CPU_] |2318| 
        ADDL      ACC,XAR6              ; [CPU_] |2318| 
        MOVL      XAR4,ACC              ; [CPU_] |2318| 
        MOVL      XAR0,#44              ; [CPU_] |2318| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2318| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2318| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2318| 
        MOVL      XAR4,XAR1             ; [CPU_] |2318| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_sprintf")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2318| 
        ; call occurs [#_sprintf] ; [] |2318| 
        MOVL      XAR4,XAR1             ; [CPU_] |2318| 
	.dwpsn	file "../Source/prod.c",line 2320,column 6,is_stmt,isa 0
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_puts")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2320| 
        ; call occurs [#_scia_puts] ; [] |2320| 
        MOVL      XAR0,#40              ; [CPU_] |2320| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2320| 
	.dwpsn	file "../Source/prod.c",line 2322,column 11,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |2322| 
	.dwpsn	file "../Source/prod.c",line 2316,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2316| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2323,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |2323| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2323| 
        CMPL      ACC,XAR6              ; [CPU_] |2323| 
        B         $C$L401,NEQ           ; [CPU_] |2323| 
        ; branchcc occurs ; [] |2323| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2324,column 8,is_stmt,isa 0
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_update_units")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2324| 
        ; call occurs [#_update_units] ; [] |2324| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2326,column 8,is_stmt,isa 0
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2326| 
        ; call occurs [#_ad7738_setcal] ; [] |2326| 
        MOVL      XAR0,#78              ; [CPU_] |2326| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2326| 
	.dwpsn	file "../Source/prod.c",line 2327,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |2327| 
        MOVL      XAR4,ACC              ; [CPU_] |2327| 
        MOVL      *-SP[56],ACC          ; [CPU_] |2327| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2327| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2327| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2327| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |2327| 
	.dwpsn	file "../Source/prod.c",line 2328,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2328| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2328| 
        ; call occurs [#_ad7738_resetvall] ; [] |2328| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2322,column 19,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |2322| 
        ADDB      XAR1,#10              ; [CPU_] |2322| 
        MOV       AL,*-SP[50]           ; [CPU_] |2322| 
        CMPB      AL,#4                 ; [CPU_] |2322| 
        B         $C$L400,LO            ; [CPU_] |2322| 
        ; branchcc occurs ; [] |2322| 
        B         $C$L632,UNC           ; [CPU_] |2322| 
        ; branch occurs ; [] |2322| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2309,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2309| 
	.dwpsn	file "../Source/prod.c",line 2311,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2311| 
        ; branch occurs ; [] |2311| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2065,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2065| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2065| 
        MOVL      XAR0,#44              ; [CPU_] |2065| 
        ADD       AL,*-SP[49]           ; [CPU_] |2065| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2065| 
        MOV       *-SP[3],AL            ; [CPU_] |2065| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2065| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2065| 
        MOV       *-SP[39],AL           ; [CPU_] |2065| 
        MOVL      XAR4,XAR1             ; [CPU_] |2065| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_sprintf")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2065| 
        ; call occurs [#_sprintf] ; [] |2065| 
	.dwpsn	file "../Source/prod.c",line 2067,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2067| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2067| 
	.dwpsn	file "../Source/prod.c",line 2065,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2065| 
	.dwpsn	file "../Source/prod.c",line 2067,column 6,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2067| 
        ; call occurs [#_scia_getparam] ; [] |2067| 
        MOVZ      AR6,AL                ; [CPU_] |2067| 
        CMPB      AL,#15                ; [CPU_] |2067| 
        B         $C$L404,LOS           ; [CPU_] |2067| 
        ; branchcc occurs ; [] |2067| 
	.dwpsn	file "../Source/prod.c",line 2071,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2071| 
        MOVB      XAR0,#15              ; [CPU_] |2071| 
	.dwpsn	file "../Source/prod.c",line 2070,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2070| 
	.dwpsn	file "../Source/prod.c",line 2071,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2071| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2073,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2073| 
        MOVB      AL,#152               ; [CPU_] |2073| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2073| 
        MOV       T,*-SP[49]            ; [CPU_] |2073| 
        MPYU      ACC,T,AL              ; [CPU_] |2073| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2073| 
        ADDL      ACC,XAR7              ; [CPU_] |2073| 
        ADDB      ACC,#98               ; [CPU_] |2073| 
        MOVL      XAR1,ACC              ; [CPU_] |2073| 
        MOVL      XAR4,ACC              ; [CPU_] |2073| 
        MOVB      AH,#1                 ; [CPU_] |2073| 
        ADD       AH,AR6                ; [CPU_] |2073| 
        MOVU      ACC,AH                ; [CPU_] |2073| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_memcpy")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2073| 
        ; call occurs [#_memcpy] ; [] |2073| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2073| 
	.dwpsn	file "../Source/prod.c",line 2075,column 6,is_stmt,isa 0
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2075| 
        ; call occurs [#_scia_puts] ; [] |2075| 
	.dwpsn	file "../Source/prod.c",line 2076,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2076| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2076| 
        ; call occurs [#_scia_puts] ; [] |2076| 
	.dwpsn	file "../Source/prod.c",line 2079,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2079| 
        MOV       AL,*-SP[39]           ; [CPU_] |2079| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2079| 
        MOV       *-SP[3],AL            ; [CPU_] |2079| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2079| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2079| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2079| 
        MOVL      XAR4,XAR1             ; [CPU_] |2079| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_sprintf")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2079| 
        ; call occurs [#_sprintf] ; [] |2079| 
        MOVL      XAR4,XAR1             ; [CPU_] |2079| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2081,column 6,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2081| 
        ; call occurs [#_scia_puts] ; [] |2081| 
	.dwpsn	file "../Source/prod.c",line 2082,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2082| 
        ; branch occurs ; [] |2082| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2376,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2376| 
        MOVB      AL,#152               ; [CPU_] |2376| 
        MOV       T,*-SP[49]            ; [CPU_] |2376| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2376| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2376| 
        MPYU      ACC,T,AL              ; [CPU_] |2376| 
        MOVB      XAR0,#124             ; [CPU_] |2376| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2376| 
        ADDL      ACC,XAR6              ; [CPU_] |2376| 
        MOVL      XAR1,ACC              ; [CPU_] |2376| 
        MOVB      AL,#1                 ; [CPU_] |2376| 
        ADD       AL,*-SP[49]           ; [CPU_] |2376| 
        MOV       *-SP[39],AL           ; [CPU_] |2376| 
        MOV       *-SP[3],AL            ; [CPU_] |2376| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2376| 
        MOVL      XAR0,#70              ; [CPU_] |2376| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2376| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2376| 
        MOV       ACC,AL << 1           ; [CPU_] |2376| 
        ADDL      ACC,XAR6              ; [CPU_] |2376| 
        MOVL      XAR4,ACC              ; [CPU_] |2376| 
        MOVL      XAR0,#44              ; [CPU_] |2376| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2376| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2376| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2376| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_sprintf")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2376| 
        ; call occurs [#_sprintf] ; [] |2376| 
        MOVL      XAR0,#44              ; [CPU_] |2376| 
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2378| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2378| 
	.dwpsn	file "../Source/prod.c",line 2376,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2376| 
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2378| 
        ; call occurs [#_scia_getparam] ; [] |2378| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2378| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_strtod")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2379,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2379| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2379| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2379| 
	.dwpsn	file "../Source/prod.c",line 2380,column 6,is_stmt,isa 0
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2380| 
        ; call occurs [#_scia_puts] ; [] |2380| 
	.dwpsn	file "../Source/prod.c",line 2381,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2381| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2381| 
        ; call occurs [#_scia_puts] ; [] |2381| 
	.dwpsn	file "../Source/prod.c",line 2383,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2383| 
        MOVL      XAR0,#44              ; [CPU_] |2383| 
        MOV       AL,*-SP[39]           ; [CPU_] |2383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2383| 
        MOV       *-SP[3],AL            ; [CPU_] |2383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2383| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_sprintf")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2383| 
        ; call occurs [#_sprintf] ; [] |2383| 
        MOVL      XAR0,#44              ; [CPU_] |2383| 
	.dwpsn	file "../Source/prod.c",line 2384,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2384| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2384| 
	.dwpsn	file "../Source/prod.c",line 2383,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2383| 
	.dwpsn	file "../Source/prod.c",line 2384,column 6,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2384| 
        ; call occurs [#_scia_getparam] ; [] |2384| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_strtod")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2385,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2385| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2385| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 6,is_stmt,isa 0
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2386| 
        ; call occurs [#_scia_puts] ; [] |2386| 
	.dwpsn	file "../Source/prod.c",line 2387,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2387| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2387| 
        ; call occurs [#_scia_puts] ; [] |2387| 
	.dwpsn	file "../Source/prod.c",line 2390,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2390| 
        MOVB      XAR0,#228             ; [CPU_] |2390| 
        MOV       AL,*-SP[39]           ; [CPU_] |2390| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2390| 
        MOV       *-SP[3],AL            ; [CPU_] |2390| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2390| 
        MOVB      XAR0,#230             ; [CPU_] |2390| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2390| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2390| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2390| 
	.dwpsn	file "../Source/prod.c",line 2399,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2399| 
        ; branch occurs ; [] |2399| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[49]           ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2339,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2339| 
        MOV       AL,*-SP[39]           ; [CPU_] |2339| 
        MOVL      XAR0,#44              ; [CPU_] |2339| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2339| 
        MOV       *-SP[3],AL            ; [CPU_] |2339| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2339| 
        MOVL      XAR4,XAR1             ; [CPU_] |2339| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_sprintf")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2339| 
        ; call occurs [#_sprintf] ; [] |2339| 
        MOVL      XAR4,XAR1             ; [CPU_] |2339| 
	.dwpsn	file "../Source/prod.c",line 2340,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2340| 
        MOV       AL,#1024              ; [CPU_] |2340| 
        MOVL      XAR5,XAR1             ; [CPU_] |2340| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2340| 
        ; call occurs [#_scia_getparam] ; [] |2340| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_strtod")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2342,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2342| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2342| 
        ; call occurs [#_scia_puts] ; [] |2342| 
	.dwpsn	file "../Source/prod.c",line 2344,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2344| 
        MOV       AH,#0                 ; [CPU_] |2344| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2344| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2344| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2344| 
        ; call occurs [#FS$$CMP] ; [] |2344| 
        CMPB      AL,#0                 ; [CPU_] |2344| 
        B         $C$L412,EQ            ; [CPU_] |2344| 
        ; branchcc occurs ; [] |2344| 
	.dwpsn	file "../Source/prod.c",line 2348,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2348| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2348| 
        ; call occurs [#_scia_puts] ; [] |2348| 
	.dwpsn	file "../Source/prod.c",line 2349,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2349| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2349| 
        MOVB      AL,#152               ; [CPU_] |2349| 
        MOV       T,*-SP[49]            ; [CPU_] |2349| 
        MPYU      ACC,T,AL              ; [CPU_] |2349| 
        ADDL      ACC,XAR6              ; [CPU_] |2349| 
        MOVL      XAR1,ACC              ; [CPU_] |2349| 
        MOVB      XAR0,#224             ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2352,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2352| 
	.dwpsn	file "../Source/prod.c",line 2349,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2349| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2352,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2352| 
        MOV       AL,*-SP[39]           ; [CPU_] |2352| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2352| 
        MOV       *-SP[3],AL            ; [CPU_] |2352| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2352| 
        MOVL      XAR0,#44              ; [CPU_] |2352| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2352| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2352| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_sprintf")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2352| 
        ; call occurs [#_sprintf] ; [] |2352| 
        MOVL      XAR0,#44              ; [CPU_] |2352| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2352| 
	.dwpsn	file "../Source/prod.c",line 2354,column 6,is_stmt,isa 0
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2354| 
        ; call occurs [#_scia_puts] ; [] |2354| 
	.dwpsn	file "../Source/prod.c",line 2350,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2350| 
	.dwpsn	file "../Source/prod.c",line 2356,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2356| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2356| 
        CMPB      AL,#247               ; [CPU_] |2356| 
        B         $C$L632,NEQ           ; [CPU_] |2356| 
        ; branchcc occurs ; [] |2356| 
	.dwpsn	file "../Source/prod.c",line 2358,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2358| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2358| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2358| 
        MOV       AL,#0                 ; [CPU_] |2358| 
        MOV       AH,#17096             ; [CPU_] |2358| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2358| 
        ; call occurs [#FS$$DIV] ; [] |2358| 
        MOVB      XAR0,#126             ; [CPU_] |2358| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2358| 
        MOVL      XAR0,#40              ; [CPU_] |2358| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2358| 
	.dwpsn	file "../Source/prod.c",line 2361,column 12,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |2361| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2362,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |2362| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2362| 
        CMPL      ACC,XAR6              ; [CPU_] |2362| 
        B         $C$L411,NEQ           ; [CPU_] |2362| 
        ; branchcc occurs ; [] |2362| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2365,column 9,is_stmt,isa 0
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2365| 
        ; call occurs [#_ad7738_setcal] ; [] |2365| 
        MOVL      XAR0,#78              ; [CPU_] |2365| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2365| 
	.dwpsn	file "../Source/prod.c",line 2366,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |2366| 
        MOVL      XAR4,ACC              ; [CPU_] |2366| 
        MOVL      *-SP[56],ACC          ; [CPU_] |2366| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2366| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2366| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2366| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |2366| 
	.dwpsn	file "../Source/prod.c",line 2367,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2367| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2367| 
        ; call occurs [#_ad7738_resetvall] ; [] |2367| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2361,column 20,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |2361| 
        ADDB      XAR1,#10              ; [CPU_] |2361| 
        MOV       AL,*-SP[50]           ; [CPU_] |2361| 
        CMPB      AL,#4                 ; [CPU_] |2361| 
        B         $C$L410,LO            ; [CPU_] |2361| 
        ; branchcc occurs ; [] |2361| 
        B         $C$L632,UNC           ; [CPU_] |2361| 
        ; branch occurs ; [] |2361| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2346,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2346| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2346| 
        ; call occurs [#_scia_puts] ; [] |2346| 
	.dwpsn	file "../Source/prod.c",line 2338,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2338| 
        ; branch occurs ; [] |2338| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2054,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2054| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_scia_puts")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2054| 
        ; call occurs [#_scia_puts] ; [] |2054| 
	.dwpsn	file "../Source/prod.c",line 2044,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2044| 
        ; branch occurs ; [] |2044| 
$C$L414:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3016,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3016| 
        B         $C$L625,LO            ; [CPU_] |3016| 
        ; branchcc occurs ; [] |3016| 
	.dwpsn	file "../Source/prod.c",line 3019,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3019| 
        CMPB      AL,#83                ; [CPU_] |3019| 
        B         $C$L415,GT            ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        CMPB      AL,#83                ; [CPU_] |3019| 
        B         $C$L419,EQ            ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        CMPB      AL,#73                ; [CPU_] |3019| 
        B         $C$L424,EQ            ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        CMPB      AL,#76                ; [CPU_] |3019| 
        B         $C$L428,EQ            ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        CMPB      AL,#80                ; [CPU_] |3019| 
        B         $C$L421,EQ            ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        B         $C$L625,UNC           ; [CPU_] |3019| 
        ; branch occurs ; [] |3019| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3019| 
        B         $C$L417,EQ            ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        CMPB      AL,#86                ; [CPU_] |3019| 
        B         $C$L625,NEQ           ; [CPU_] |3019| 
        ; branchcc occurs ; [] |3019| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3047,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3047| 
        B         $C$L416,LOS           ; [CPU_] |3047| 
        ; branchcc occurs ; [] |3047| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3047,column 6,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_atoi")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3047| 
        ; call occurs [#_atoi] ; [] |3047| 
        CMPB      AL,#4                 ; [CPU_] |3047| 
        B         $C$L416,GT            ; [CPU_] |3047| 
        ; branchcc occurs ; [] |3047| 
        CMPB      AL,#0                 ; [CPU_] |3047| 
        B         $C$L416,LEQ           ; [CPU_] |3047| 
        ; branchcc occurs ; [] |3047| 
	.dwpsn	file "../Source/prod.c",line 3049,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3049| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3049| 
        ADD       ACC,AR5               ; [CPU_] |3049| 
        MOVL      XAR4,ACC              ; [CPU_] |3049| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3049| 
	.dwpsn	file "../Source/prod.c",line 3050,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3050| 
        ; branch occurs ; [] |3050| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3051,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3051| 
        B         $C$L426,UNC           ; [CPU_] |3051| 
        ; branch occurs ; [] |3051| 
$C$L417:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3023,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3023| 
        B         $C$L418,LOS           ; [CPU_] |3023| 
        ; branchcc occurs ; [] |3023| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3023,column 6,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_atoi")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3023| 
        ; call occurs [#_atoi] ; [] |3023| 
        CMPB      AL,#4                 ; [CPU_] |3023| 
        MOVZ      AR4,AL                ; [CPU_] |3023| 
        B         $C$L418,GT            ; [CPU_] |3023| 
        ; branchcc occurs ; [] |3023| 
        CMPB      AL,#0                 ; [CPU_] |3023| 
        B         $C$L418,LEQ           ; [CPU_] |3023| 
        ; branchcc occurs ; [] |3023| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3025,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3025| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3025| 
	.dwpsn	file "../Source/prod.c",line 3028,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3028| 
        ; branch occurs ; [] |3028| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3029,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3029| 
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3029| 
        ; call occurs [#_ad7738_resettare] ; [] |3029| 
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3030| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3030| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3030| 
	.dwpsn	file "../Source/prod.c",line 3031,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3031| 
        B         $C$L426,UNC           ; [CPU_] |3031| 
        ; branch occurs ; [] |3031| 
$C$L419:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3057,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3057| 
        B         $C$L420,LOS           ; [CPU_] |3057| 
        ; branchcc occurs ; [] |3057| 
        MOVL      ACC,XAR4              ; [CPU_] |3057| 
        MOVL      XAR0,#66              ; [CPU_] |3057| 
        ADDB      ACC,#2                ; [CPU_] |3057| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3057| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3057| 
        CMPB      AL,#67                ; [CPU_] |3057| 
        B         $C$L420,NEQ           ; [CPU_] |3057| 
        ; branchcc occurs ; [] |3057| 
	.dwpsn	file "../Source/prod.c",line 3058,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3058| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3058| 
        ; call occurs [#_shunt_switch] ; [] |3058| 
	.dwpsn	file "../Source/prod.c",line 3059,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3059| 
	.dwpsn	file "../Source/prod.c",line 3060,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3060| 
        ; branch occurs ; [] |3060| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3061,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3061| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3061| 
        ; call occurs [#_shunt_switch] ; [] |3061| 
	.dwpsn	file "../Source/prod.c",line 3062,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3062| 
        B         $C$L631,UNC           ; [CPU_] |3062| 
        ; branch occurs ; [] |3062| 
$C$L421:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3037,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3037| 
        B         $C$L423,LOS           ; [CPU_] |3037| 
        ; branchcc occurs ; [] |3037| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3037,column 6,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_atoi")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3037| 
        ; call occurs [#_atoi] ; [] |3037| 
        CMPB      AL,#4                 ; [CPU_] |3037| 
        B         $C$L423,GT            ; [CPU_] |3037| 
        ; branchcc occurs ; [] |3037| 
        CMPB      AL,#0                 ; [CPU_] |3037| 
        B         $C$L423,LEQ           ; [CPU_] |3037| 
        ; branchcc occurs ; [] |3037| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3039| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3039| 
        ADD       ACC,AR5               ; [CPU_] |3039| 
        MOVL      XAR4,ACC              ; [CPU_] |3039| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3039| 
$C$L422:    
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3039| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3039| 
	.dwpsn	file "../Source/prod.c",line 3040,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3040| 
        ; branch occurs ; [] |3040| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3041,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3041| 
        B         $C$L422,UNC           ; [CPU_] |3041| 
        ; branch occurs ; [] |3041| 
$C$L424:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3076,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3076| 
        B         $C$L427,LOS           ; [CPU_] |3076| 
        ; branchcc occurs ; [] |3076| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3076,column 6,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_atoi")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3076| 
        ; call occurs [#_atoi] ; [] |3076| 
        CMPB      AL,#2                 ; [CPU_] |3076| 
        B         $C$L427,GT            ; [CPU_] |3076| 
        ; branchcc occurs ; [] |3076| 
        CMPB      AL,#0                 ; [CPU_] |3076| 
        B         $C$L427,LEQ           ; [CPU_] |3076| 
        ; branchcc occurs ; [] |3076| 
	.dwpsn	file "../Source/prod.c",line 3078,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3078| 
        ADD       AR6,AL                ; [CPU_] |3078| 
        MOVL      XAR0,#78              ; [CPU_] |3078| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3078| 
        ADD       ACC,AR6               ; [CPU_] |3078| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3078| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3078| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3078| 
        ; call occurs [#_ad7738_resettare] ; [] |3078| 
	.dwpsn	file "../Source/prod.c",line 3079,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3079| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3079| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3079| 
	.dwpsn	file "../Source/prod.c",line 3080,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3080| 
$C$L426:    
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3080| 
        ; call occurs [#_ad7738_resetvall] ; [] |3080| 
	.dwpsn	file "../Source/prod.c",line 3081,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3081| 
        ; branch occurs ; [] |3081| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3082,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3082| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3082| 
        ; call occurs [#_ad7738_resettare] ; [] |3082| 
	.dwpsn	file "../Source/prod.c",line 3083,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3083| 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3083| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3083| 
	.dwpsn	file "../Source/prod.c",line 3084,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3084| 
        B         $C$L426,UNC           ; [CPU_] |3084| 
        ; branch occurs ; [] |3084| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3068,column 6,is_stmt,isa 0
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_atoi")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3068| 
        ; call occurs [#_atoi] ; [] |3068| 
	.dwpsn	file "../Source/prod.c",line 3071,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3071| 
        MOV       *-SP[50],AL           ; [CPU_] |3071| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3071| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3071| 
	.dwpsn	file "../Source/prod.c",line 3072,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3072| 
        ; branch occurs ; [] |3072| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1019,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1019| 
        CMPB      AL,#76                ; [CPU_] |1019| 
        B         $C$L430,GT            ; [CPU_] |1019| 
        ; branchcc occurs ; [] |1019| 
        CMPB      AL,#76                ; [CPU_] |1019| 
        B         $C$L438,EQ            ; [CPU_] |1019| 
        ; branchcc occurs ; [] |1019| 
        CMPB      AL,#65                ; [CPU_] |1019| 
        B         $C$L431,EQ            ; [CPU_] |1019| 
        ; branchcc occurs ; [] |1019| 
        CMPB      AL,#68                ; [CPU_] |1019| 
        B         $C$L442,EQ            ; [CPU_] |1019| 
        ; branchcc occurs ; [] |1019| 
        B         $C$L625,UNC           ; [CPU_] |1019| 
        ; branch occurs ; [] |1019| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1019| 
        B         $C$L441,EQ            ; [CPU_] |1019| 
        ; branchcc occurs ; [] |1019| 
        CMPB      AL,#83                ; [CPU_] |1019| 
        B         $C$L439,EQ            ; [CPU_] |1019| 
        ; branchcc occurs ; [] |1019| 
        B         $C$L625,UNC           ; [CPU_] |1019| 
        ; branch occurs ; [] |1019| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1024,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1024| 
	.dwpsn	file "../Source/prod.c",line 1025,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1025| 
	.dwpsn	file "../Source/prod.c",line 1024,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1024| 
	.dwpsn	file "../Source/prod.c",line 1025,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1025| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1025| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1025| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1025| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1025| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1025| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1025| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1025| 
        MOVL      XAR4,XAR1             ; [CPU_] |1025| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_sprintf")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1025| 
        ; call occurs [#_sprintf] ; [] |1025| 
	.dwpsn	file "../Source/prod.c",line 1027,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1027| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_scia_puts")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1027| 
        ; call occurs [#_scia_puts] ; [] |1027| 
	.dwpsn	file "../Source/prod.c",line 1028,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1028| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1028| 
        LSR       AL,8                  ; [CPU_] |1028| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1028| 
        MOV       *-SP[3],AL            ; [CPU_] |1028| 
        IN        AL,*(04004H)          ; [CPU_] |1028| 
        MOVL      XAR4,XAR1             ; [CPU_] |1028| 
        ANDB      AL,#0xff              ; [CPU_] |1028| 
        MOV       *-SP[4],AL            ; [CPU_] |1028| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_sprintf")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1028| 
        ; call occurs [#_sprintf] ; [] |1028| 
	.dwpsn	file "../Source/prod.c",line 1030,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1030| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1030| 
        ; call occurs [#_scia_puts] ; [] |1030| 
	.dwpsn	file "../Source/prod.c",line 1031,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1031| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1031| 
        MOVL      XAR0,#44              ; [CPU_] |1031| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1031| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1031| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1031| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1031| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_sprintf")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1031| 
        ; call occurs [#_sprintf] ; [] |1031| 
        MOVL      XAR0,#44              ; [CPU_] |1031| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1031| 
	.dwpsn	file "../Source/prod.c",line 1032,column 6,is_stmt,isa 0
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_puts")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1032| 
        ; call occurs [#_scia_puts] ; [] |1032| 
	.dwpsn	file "../Source/prod.c",line 1033,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1033| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1033| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1033| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1033| 
        MOVL      XAR0,#44              ; [CPU_] |1033| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1033| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1033| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_sprintf")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1033| 
        ; call occurs [#_sprintf] ; [] |1033| 
        MOVL      XAR0,#44              ; [CPU_] |1033| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1033| 
	.dwpsn	file "../Source/prod.c",line 1035,column 6,is_stmt,isa 0
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1035| 
        ; call occurs [#_scia_puts] ; [] |1035| 
	.dwpsn	file "../Source/prod.c",line 1037,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1037| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1037| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1037| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1037| 
        MOVL      XAR0,#72              ; [CPU_] |1037| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1037| 
        ADDL      ACC,XAR6              ; [CPU_] |1037| 
        MOVL      XAR4,ACC              ; [CPU_] |1037| 
        MOVL      XAR0,#44              ; [CPU_] |1037| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1037| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1037| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1037| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_sprintf")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1037| 
        ; call occurs [#_sprintf] ; [] |1037| 
        MOVL      XAR0,#44              ; [CPU_] |1037| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1037| 
	.dwpsn	file "../Source/prod.c",line 1039,column 6,is_stmt,isa 0
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_scia_puts")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1039| 
        ; call occurs [#_scia_puts] ; [] |1039| 
	.dwpsn	file "../Source/prod.c",line 1040,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1040| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1040| 
        B         $C$L432,EQ            ; [CPU_] |1040| 
        ; branchcc occurs ; [] |1040| 
        MOVB      XAR0,#34              ; [CPU_] |1040| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1040| 
        CMPB      AL,#1                 ; [CPU_] |1040| 
        B         $C$L433,NEQ           ; [CPU_] |1040| 
        ; branchcc occurs ; [] |1040| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1042,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1042| 
        MOVL      XAR0,#74              ; [CPU_] |1042| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1042| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1042| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1042| 
        ADDL      ACC,XAR6              ; [CPU_] |1042| 
        MOVL      XAR4,ACC              ; [CPU_] |1042| 
        MOVL      XAR0,#44              ; [CPU_] |1042| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1042| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1042| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1042| 
        MOVL      XAR4,XAR1             ; [CPU_] |1042| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_sprintf")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1042| 
        ; call occurs [#_sprintf] ; [] |1042| 
        MOVL      XAR4,XAR1             ; [CPU_] |1042| 
	.dwpsn	file "../Source/prod.c",line 1044,column 7,is_stmt,isa 0
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_scia_puts")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1044| 
        ; call occurs [#_scia_puts] ; [] |1044| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1046,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1046| 
        B         $C$L434,NEQ           ; [CPU_] |1046| 
        ; branchcc occurs ; [] |1046| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1046| 
        B         $C$L435,UNC           ; [CPU_] |1046| 
        ; branch occurs ; [] |1046| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1046| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1046| 
        MOVL      XAR0,#44              ; [CPU_] |1046| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1046| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1046| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1046| 
        MOVL      XAR4,XAR1             ; [CPU_] |1046| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_sprintf")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1046| 
        ; call occurs [#_sprintf] ; [] |1046| 
        MOVL      XAR4,XAR1             ; [CPU_] |1046| 
	.dwpsn	file "../Source/prod.c",line 1048,column 6,is_stmt,isa 0
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_scia_puts")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1048| 
        ; call occurs [#_scia_puts] ; [] |1048| 
	.dwpsn	file "../Source/prod.c",line 1050,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1050| 
        MOVB      XAR0,#38              ; [CPU_] |1050| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1050| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1050| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1050| 
        MOVL      XAR0,#44              ; [CPU_] |1050| 
        MOV       *-SP[3],AL            ; [CPU_] |1050| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1050| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_sprintf")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1050| 
        ; call occurs [#_sprintf] ; [] |1050| 
        MOVL      XAR0,#44              ; [CPU_] |1050| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1050| 
	.dwpsn	file "../Source/prod.c",line 1052,column 6,is_stmt,isa 0
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_scia_puts")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1052| 
        ; call occurs [#_scia_puts] ; [] |1052| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1054,column 11,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |1054| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1055,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1055| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1055| 
        ; call occurs [#_scia_puts] ; [] |1055| 
        MOV       AL,*-SP[50]           ; [CPU_] |1055| 
	.dwpsn	file "../Source/prod.c",line 1056,column 7,is_stmt,isa 0
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_print_channel")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1056| 
        ; call occurs [#_print_channel] ; [] |1056| 
	.dwpsn	file "../Source/prod.c",line 1057,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1057| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_print_sensor")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1057| 
        ; call occurs [#_print_sensor] ; [] |1057| 
	.dwpsn	file "../Source/prod.c",line 1054,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1054| 
        INC       *-SP[50]              ; [CPU_] |1054| 
        MOV       AL,*-SP[50]           ; [CPU_] |1054| 
        CMPB      AL,#4                 ; [CPU_] |1054| 
        B         $C$L436,LO            ; [CPU_] |1054| 
        ; branchcc occurs ; [] |1054| 
	.dwpsn	file "../Source/prod.c",line 1060,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1060| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_scia_puts")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1060| 
        ; call occurs [#_scia_puts] ; [] |1060| 
	.dwpsn	file "../Source/prod.c",line 1061,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1061| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1061| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1061| 
        MOVL      ACC,XAR4              ; [CPU_] |1061| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1061| 
        MOVL      XAR4,ACC              ; [CPU_] |1061| 
        MOVL      XAR0,#44              ; [CPU_] |1061| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1061| 
        MOV       *-SP[3],AL            ; [CPU_] |1061| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1061| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_sprintf")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1061| 
        ; call occurs [#_sprintf] ; [] |1061| 
        MOVL      XAR0,#44              ; [CPU_] |1061| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1061| 
	.dwpsn	file "../Source/prod.c",line 1063,column 6,is_stmt,isa 0
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1063| 
        ; call occurs [#_scia_puts] ; [] |1063| 
        MOVL      XAR0,#40              ; [CPU_] |1063| 
	.dwpsn	file "../Source/prod.c",line 1064,column 11,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |1064| 
	.dwpsn	file "../Source/prod.c",line 1063,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1063| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1065,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1065| 
        MOVB      AL,#65                ; [CPU_] |1065| 
        MOVL      XAR0,#44              ; [CPU_] |1065| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1065| 
        ADD       AL,*-SP[39]           ; [CPU_] |1065| 
        MOV       *-SP[3],AL            ; [CPU_] |1065| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1065| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1065| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1065| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_sprintf")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1065| 
        ; call occurs [#_sprintf] ; [] |1065| 
        MOVL      XAR0,#44              ; [CPU_] |1065| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1065| 
	.dwpsn	file "../Source/prod.c",line 1067,column 7,is_stmt,isa 0
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_scia_puts")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1067| 
        ; call occurs [#_scia_puts] ; [] |1067| 
	.dwpsn	file "../Source/prod.c",line 1064,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1064| 
	.dwpsn	file "../Source/prod.c",line 1067,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |1067| 
	.dwpsn	file "../Source/prod.c",line 1064,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1064| 
        B         $C$L437,LT            ; [CPU_] |1064| 
        ; branchcc occurs ; [] |1064| 
	.dwpsn	file "../Source/prod.c",line 1069,column 6,is_stmt,isa 0
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_print_vfd")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1069| 
        ; call occurs [#_print_vfd] ; [] |1069| 
	.dwpsn	file "../Source/prod.c",line 1070,column 6,is_stmt,isa 0
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_print_dac")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1070| 
        ; call occurs [#_print_dac] ; [] |1070| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_print_limits")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1071| 
        ; call occurs [#_print_limits] ; [] |1071| 
	.dwpsn	file "../Source/prod.c",line 1072,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1072| 
        ; branch occurs ; [] |1072| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1076,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1076| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_scia_puts")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1076| 
        ; call occurs [#_scia_puts] ; [] |1076| 
	.dwpsn	file "../Source/prod.c",line 1078,column 11,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |1078| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1079,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1079| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1079| 
        MOVL      XAR0,#44              ; [CPU_] |1079| 
        ADD       AL,*-SP[49]           ; [CPU_] |1079| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1079| 
        MOVZ      AR1,AL                ; [CPU_] |1079| 
        MOV       *-SP[3],AL            ; [CPU_] |1079| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1079| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_sprintf")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1079| 
        ; call occurs [#_sprintf] ; [] |1079| 
        MOVL      XAR0,#44              ; [CPU_] |1079| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1079| 
	.dwpsn	file "../Source/prod.c",line 1080,column 7,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_scia_puts")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1080| 
        ; call occurs [#_scia_puts] ; [] |1080| 
        MOV       AL,*-SP[49]           ; [CPU_] |1080| 
	.dwpsn	file "../Source/prod.c",line 1081,column 7,is_stmt,isa 0
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_print_sensor")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1081| 
        ; call occurs [#_print_sensor] ; [] |1081| 
	.dwpsn	file "../Source/prod.c",line 1078,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1078| 
        MOV       *-SP[49],AR1          ; [CPU_] |1078| 
        CMPB      AL,#20                ; [CPU_] |1078| 
        B         $C$L440,LO            ; [CPU_] |1078| 
        ; branchcc occurs ; [] |1078| 
        B         $C$L632,UNC           ; [CPU_] |1078| 
        ; branch occurs ; [] |1078| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1092,column 6,is_stmt,isa 0
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_print_dac")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1092| 
        ; call occurs [#_print_dac] ; [] |1092| 
	.dwpsn	file "../Source/prod.c",line 1093,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1093| 
        ; branch occurs ; [] |1093| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1087,column 6,is_stmt,isa 0
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_print_vfd")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1087| 
        ; call occurs [#_print_vfd] ; [] |1087| 
	.dwpsn	file "../Source/prod.c",line 1088,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1088| 
        ; branch occurs ; [] |1088| 
$C$L443:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2636,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2636| 
        B         $C$L625,LO            ; [CPU_] |2636| 
        ; branchcc occurs ; [] |2636| 
	.dwpsn	file "../Source/prod.c",line 2639,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2639| 
        CMPB      AL,#68                ; [CPU_] |2639| 
        B         $C$L444,EQ            ; [CPU_] |2639| 
        ; branchcc occurs ; [] |2639| 
        CMPB      AL,#83                ; [CPU_] |2639| 
        B         $C$L450,EQ            ; [CPU_] |2639| 
        ; branchcc occurs ; [] |2639| 
        B         $C$L625,UNC           ; [CPU_] |2639| 
        ; branch occurs ; [] |2639| 
$C$L444:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2757,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2757| 
        B         $C$L625,LO            ; [CPU_] |2757| 
        ; branchcc occurs ; [] |2757| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2761,column 6,is_stmt,isa 0
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_atoi")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2761| 
        ; call occurs [#_atoi] ; [] |2761| 
        MOV       *-SP[49],AL           ; [CPU_] |2761| 
	.dwpsn	file "../Source/prod.c",line 2763,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2763| 
        CMPB      AL,#4                 ; [CPU_] |2763| 
        B         $C$L625,HIS           ; [CPU_] |2763| 
        ; branchcc occurs ; [] |2763| 
	.dwpsn	file "../Source/prod.c",line 2769,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2769| 
        MOV       *-SP[49],AL           ; [CPU_] |2769| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2769| 
        MOV       T,AL                  ; [CPU_] |2769| 
        MOVB      AL,#12                ; [CPU_] |2769| 
        MPYU      ACC,T,AL              ; [CPU_] |2769| 
        ADDL      ACC,XAR6              ; [CPU_] |2769| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2769| 
        MOVL      XAR1,ACC              ; [CPU_] |2769| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2769| 
        CMPB      AL,#7                 ; [CPU_] |2769| 
        B         $C$L625,NEQ           ; [CPU_] |2769| 
        ; branchcc occurs ; [] |2769| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_strtod")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2773,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2773| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *-SP[56],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2775,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2775| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2775| 
        MOVL      ACC,XAR6              ; [CPU_] |2775| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2775| 
        ; call occurs [#FS$$CMP] ; [] |2775| 
        CMPB      AL,#0                 ; [CPU_] |2775| 
        B         $C$L625,LT            ; [CPU_] |2775| 
        ; branchcc occurs ; [] |2775| 
        MOV       AL,#0                 ; [CPU_] |2775| 
        MOV       AH,#16672             ; [CPU_] |2775| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2775| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |2775| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2775| 
        ; call occurs [#FS$$CMP] ; [] |2775| 
        CMPB      AL,#0                 ; [CPU_] |2775| 
        B         $C$L625,GT            ; [CPU_] |2775| 
        ; branchcc occurs ; [] |2775| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2781| 
        MOV       AH,#0                 ; [CPU_] |2781| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2781| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |2781| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2781| 
        ; call occurs [#FS$$CMP] ; [] |2781| 
        CMPB      AL,#0                 ; [CPU_] |2781| 
        B         $C$L445,GEQ           ; [CPU_] |2781| 
        ; branchcc occurs ; [] |2781| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2781| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2781| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2781| 
        B         $C$L446,UNC           ; [CPU_] |2781| 
        ; branch occurs ; [] |2781| 
$C$L445:    
        MOVL      ACC,*-SP[56]          ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2781| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2781| 
$C$L446:    
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2781| 
        ; call occurs [#FS$$MPY] ; [] |2781| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2781| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2781| 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2781| 
        ; call occurs [#FS$$ADD] ; [] |2781| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2781| 
        ; call occurs [#FS$$TOLL] ; [] |2781| 
	.dwpsn	file "../Source/prod.c",line 2788,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2788| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2781| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2781| 
	.dwpsn	file "../Source/prod.c",line 2788,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2788| 
        CMP64     ACC:P                 ; [CPU_] |2788| 
        B         $C$L448,LEQ           ; [CPU_] |2788| 
        ; branchcc occurs ; [] |2788| 
	.dwpsn	file "../Source/prod.c",line 2790,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2790| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2790| 
        MOV       *-SP[2],#0            ; [CPU_] |2790| 
        MOV       *-SP[1],#0            ; [CPU_] |2790| 
        MOVL      P,*-SP[32]            ; [CPU_] |2790| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2790| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$936, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2790| 
        ; call occurs [#LL$$CMP] ; [] |2790| 
        CMPB      AL,#0                 ; [CPU_] |2790| 
        B         $C$L447,GEQ           ; [CPU_] |2790| 
        ; branchcc occurs ; [] |2790| 
	.dwpsn	file "../Source/prod.c",line 2793,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2793| 
        MOV       *-SP[35],AL           ; [CPU_] |2793| 
        B         $C$L449,UNC           ; [CPU_] |2793| 
        ; branch occurs ; [] |2793| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2791,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2791| 
	.dwpsn	file "../Source/prod.c",line 2792,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2792| 
        ; branch occurs ; [] |2792| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2789,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2789| 
$C$L449:    
        MOV       AH,*-SP[49]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2796,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2796| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2796| 
        ; call occurs [#_mcbsp_xmit] ; [] |2796| 
	.dwpsn	file "../Source/prod.c",line 2797,column 6,is_stmt,isa 0
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_latch_dac")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2797| 
        ; call occurs [#_latch_dac] ; [] |2797| 
	.dwpsn	file "../Source/prod.c",line 2799,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2799| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2799| 
        MOVL      XAR0,#44              ; [CPU_] |2799| 
        ADD       AL,*-SP[49]           ; [CPU_] |2799| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2799| 
        MOV       *-SP[3],AL            ; [CPU_] |2799| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2799| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2799| 
        MOV       AL,*-SP[35]           ; [CPU_] |2799| 
        MOV       *-SP[7],AL            ; [CPU_] |2799| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2799| 
        MOVL      XAR4,XAR1             ; [CPU_] |2799| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_sprintf")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2799| 
        ; call occurs [#_sprintf] ; [] |2799| 
        MOVL      XAR4,XAR1             ; [CPU_] |2799| 
	.dwpsn	file "../Source/prod.c",line 2803,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2803| 
        ; branch occurs ; [] |2803| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2646,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2646| 
        MOVL      XAR0,#44              ; [CPU_] |2646| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2646| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2646| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2646| 
        MOVL      XAR4,XAR1             ; [CPU_] |2646| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_sprintf")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2646| 
        ; call occurs [#_sprintf] ; [] |2646| 
        MOVL      XAR4,XAR1             ; [CPU_] |2646| 
	.dwpsn	file "../Source/prod.c",line 2647,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2647| 
        MOV       AL,#1024              ; [CPU_] |2647| 
        MOVL      XAR5,XAR1             ; [CPU_] |2647| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2647| 
        ; call occurs [#_scia_getparam] ; [] |2647| 
	.dwpsn	file "../Source/prod.c",line 2648,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2648| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_atoi")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2648| 
        ; call occurs [#_atoi] ; [] |2648| 
        MOV       *-SP[49],AL           ; [CPU_] |2648| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2649| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_scia_puts")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2649| 
        ; call occurs [#_scia_puts] ; [] |2649| 
        MOV       AL,*-SP[49]           ; [CPU_] |2649| 
	.dwpsn	file "../Source/prod.c",line 2651,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2651| 
        CMPB      AL,#4                 ; [CPU_] |2651| 
        B         $C$L465,HIS           ; [CPU_] |2651| 
        ; branchcc occurs ; [] |2651| 
	.dwpsn	file "../Source/prod.c",line 2655,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2655| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_scia_puts")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2655| 
        ; call occurs [#_scia_puts] ; [] |2655| 
        MOVL      XAR0,#62              ; [CPU_] |2655| 
	.dwpsn	file "../Source/prod.c",line 2659,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2655,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2655| 
	.dwpsn	file "../Source/prod.c",line 2659,column 11,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |2659| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2660| 
        MOVL      XAR0,#44              ; [CPU_] |2660| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2660| 
        MOV       *-SP[3],AL            ; [CPU_] |2660| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2660| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2660| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2660| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_sprintf")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2660| 
        ; call occurs [#_sprintf] ; [] |2660| 
        MOVL      XAR0,#44              ; [CPU_] |2660| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2660| 
	.dwpsn	file "../Source/prod.c",line 2661,column 7,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_scia_puts")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2661| 
        ; call occurs [#_scia_puts] ; [] |2661| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2662| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_scia_puts")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2662| 
        ; call occurs [#_scia_puts] ; [] |2662| 
	.dwpsn	file "../Source/prod.c",line 2659,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2662| 
	.dwpsn	file "../Source/prod.c",line 2659,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2659| 
        B         $C$L451,LT            ; [CPU_] |2659| 
        ; branchcc occurs ; [] |2659| 
	.dwpsn	file "../Source/prod.c",line 2665,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2665| 
        MOVB      XAR0,#14              ; [CPU_] |2665| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2665| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2665| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2665| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2665| 
        MOVL      XAR0,#44              ; [CPU_] |2665| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2665| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2665| 
        MOVL      XAR4,XAR1             ; [CPU_] |2665| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_sprintf")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2665| 
        ; call occurs [#_sprintf] ; [] |2665| 
	.dwpsn	file "../Source/prod.c",line 2666,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2666| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_scia_puts")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2666| 
        ; call occurs [#_scia_puts] ; [] |2666| 
	.dwpsn	file "../Source/prod.c",line 2667,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2667| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_scia_puts")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2667| 
        ; call occurs [#_scia_puts] ; [] |2667| 
	.dwpsn	file "../Source/prod.c",line 2668,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2668| 
	.dwpsn	file "../Source/prod.c",line 2667,column 6,is_stmt,isa 0
        MOV       AH,*-SP[49]           ; [CPU_] |2667| 
	.dwpsn	file "../Source/prod.c",line 2668,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2668| 
        DEC       *-SP[49]              ; [CPU_] |2668| 
        MOV       *-SP[39],AH           ; [CPU_] |2668| 
        MOV       *-SP[3],AH            ; [CPU_] |2668| 
        MOVL      XAR4,XAR1             ; [CPU_] |2668| 
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_sprintf")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2668| 
        ; call occurs [#_sprintf] ; [] |2668| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2670| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2670| 
        MOV       AL,#1024              ; [CPU_] |2670| 
        MOVL      XAR5,XAR1             ; [CPU_] |2670| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2670| 
        ; call occurs [#_scia_getparam] ; [] |2670| 
        MOVL      XAR4,XAR1             ; [CPU_] |2670| 
	.dwpsn	file "../Source/prod.c",line 2671,column 6,is_stmt,isa 0
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_atoi")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2671| 
        ; call occurs [#_atoi] ; [] |2671| 
	.dwpsn	file "../Source/prod.c",line 2664,column 6,is_stmt,isa 0
        MOV       *-SP[52],#7           ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2671,column 6,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2672,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2672| 
        B         $C$L452,LO            ; [CPU_] |2672| 
        ; branchcc occurs ; [] |2672| 
        CMPB      AL,#7                 ; [CPU_] |2672| 
        B         $C$L452,EQ            ; [CPU_] |2672| 
        ; branchcc occurs ; [] |2672| 
	.dwpsn	file "../Source/prod.c",line 2674,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2674| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2674| 
        ; call occurs [#_scia_puts] ; [] |2674| 
	.dwpsn	file "../Source/prod.c",line 2673,column 7,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |2673| 
$C$L452:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2677,column 6,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2677| 
        ; call occurs [#_scia_puts] ; [] |2677| 
	.dwpsn	file "../Source/prod.c",line 2678,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2678| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_scia_puts")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2678| 
        ; call occurs [#_scia_puts] ; [] |2678| 
	.dwpsn	file "../Source/prod.c",line 2679,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2679| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2679| 
        MOVB      AL,#12                ; [CPU_] |2679| 
        MOV       T,*-SP[49]            ; [CPU_] |2679| 
        MPYU      ACC,T,AL              ; [CPU_] |2679| 
        ADDL      ACC,XAR6              ; [CPU_] |2679| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2679| 
        MOVL      XAR1,ACC              ; [CPU_] |2679| 
        MOV       AL,*-SP[51]           ; [CPU_] |2679| 
	.dwpsn	file "../Source/prod.c",line 2681,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2681| 
	.dwpsn	file "../Source/prod.c",line 2679,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2679| 
	.dwpsn	file "../Source/prod.c",line 2681,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2681| 
        ; branchcc occurs ; [] |2681| 
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2683| 
        B         $C$L454,EQ            ; [CPU_] |2683| 
        ; branchcc occurs ; [] |2683| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2683| 
        B         $C$L454,EQ            ; [CPU_] |2683| 
        ; branchcc occurs ; [] |2683| 
	.dwpsn	file "../Source/prod.c",line 2686,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2686| 
        B         $C$L453,EQ            ; [CPU_] |2686| 
        ; branchcc occurs ; [] |2686| 
        CMPB      AL,#4                 ; [CPU_] |2686| 
        B         $C$L455,NEQ           ; [CPU_] |2686| 
        ; branchcc occurs ; [] |2686| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2687,column 8,is_stmt,isa 0
        MOV       *-SP[52],#2           ; [CPU_] |2687| 
        B         $C$L455,UNC           ; [CPU_] |2687| 
        ; branch occurs ; [] |2687| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2685,column 8,is_stmt,isa 0
        MOV       *-SP[52],#4           ; [CPU_] |2685| 
$C$L455:    
        MOV       AL,*-SP[52]           ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2692,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2692| 
        MOV       AL,*-SP[52]           ; [CPU_] |2692| 
        MOVL      XAR0,#44              ; [CPU_] |2692| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2692| 
        MOV       *-SP[3],AL            ; [CPU_] |2692| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2692| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_sprintf")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2692| 
        ; call occurs [#_sprintf] ; [] |2692| 
        MOVL      XAR0,#44              ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2693,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2693| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2692,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2693,column 8,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2693| 
        ; call occurs [#_scia_getparam] ; [] |2693| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2694,column 8,is_stmt,isa 0
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_atoi")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2694| 
        ; call occurs [#_atoi] ; [] |2694| 
        MOV       *-SP[50],AL           ; [CPU_] |2694| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2695,column 8,is_stmt,isa 0
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_scia_puts")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2695| 
        ; call occurs [#_scia_puts] ; [] |2695| 
        MOV       AL,*-SP[50]           ; [CPU_] |2695| 
	.dwpsn	file "../Source/prod.c",line 2697,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2697| 
        ; branchcc occurs ; [] |2697| 
        MOV       AL,*-SP[40]           ; [CPU_] 
        CMP       AL,*-SP[50]           ; [CPU_] |2697| 
        B         $C$L464,LO            ; [CPU_] |2697| 
        ; branchcc occurs ; [] |2697| 
	.dwpsn	file "../Source/prod.c",line 2701,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2701| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2701| 
        ; call occurs [#_scia_puts] ; [] |2701| 
	.dwpsn	file "../Source/prod.c",line 2703,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2701,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2703,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2703| 
        MOV       AL,*-SP[51]           ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2706,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2706| 
        B         $C$L457,EQ            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
        CMPB      AL,#4                 ; [CPU_] |2706| 
        B         $C$L459,NEQ           ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
	.dwpsn	file "../Source/prod.c",line 2711,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2711| 
        B         $C$L458,UNC           ; [CPU_] |2711| 
        ; branch occurs ; [] |2711| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2709,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2709| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2709| 
        MOVL      XAR0,#44              ; [CPU_] |2709| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2709| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_sprintf")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2709| 
        ; call occurs [#_sprintf] ; [] |2709| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2713,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2713| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2713| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2713| 
        ; call occurs [#_scia_getparam] ; [] |2713| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2713,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2713| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_strtod")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2714,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2714| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2714| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2714| 
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_scia_puts")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2715| 
        ; call occurs [#_scia_puts] ; [] |2715| 
	.dwpsn	file "../Source/prod.c",line 2716,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2716| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_scia_puts")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2716| 
        ; call occurs [#_scia_puts] ; [] |2716| 
	.dwpsn	file "../Source/prod.c",line 2719,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2719| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2719| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2719| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2719| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_sprintf")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2719| 
        ; call occurs [#_sprintf] ; [] |2719| 
        MOVL      XAR0,#44              ; [CPU_] |2719| 
	.dwpsn	file "../Source/prod.c",line 2720,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2720| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2720| 
	.dwpsn	file "../Source/prod.c",line 2719,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2719| 
	.dwpsn	file "../Source/prod.c",line 2720,column 8,is_stmt,isa 0
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2720| 
        ; call occurs [#_scia_getparam] ; [] |2720| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2720,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2720| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_strtod")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2721,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2721| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2721| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2721| 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_scia_puts")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2722| 
        ; call occurs [#_scia_puts] ; [] |2722| 
	.dwpsn	file "../Source/prod.c",line 2723,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2723| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_puts")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2723| 
        ; call occurs [#_scia_puts] ; [] |2723| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2730,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2730| 
        MOV       AL,*-SP[39]           ; [CPU_] |2730| 
        MOVL      XAR0,#62              ; [CPU_] |2730| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2730| 
        MOV       *-SP[3],AL            ; [CPU_] |2730| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2730| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |2730| 
        MOV       ACC,AL << 1           ; [CPU_] |2730| 
        ADDL      ACC,XAR6              ; [CPU_] |2730| 
        MOVL      XAR4,ACC              ; [CPU_] |2730| 
        MOVL      XAR0,#44              ; [CPU_] |2730| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2730| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2730| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2730| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_sprintf")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2730| 
        ; call occurs [#_sprintf] ; [] |2730| 
        MOVL      XAR0,#44              ; [CPU_] |2730| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2730| 
	.dwpsn	file "../Source/prod.c",line 2732,column 6,is_stmt,isa 0
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2732| 
        ; call occurs [#_scia_puts] ; [] |2732| 
	.dwpsn	file "../Source/prod.c",line 2727,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2727| 
        MOV       AL,*-SP[51]           ; [CPU_] |2727| 
	.dwpsn	file "../Source/prod.c",line 2734,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2734| 
        B         $C$L461,EQ            ; [CPU_] |2734| 
        ; branchcc occurs ; [] |2734| 
	.dwpsn	file "../Source/prod.c",line 2737,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2737| 
        MOVB      AL,#1                 ; [CPU_] |2737| 
        MOVL      XAR0,#44              ; [CPU_] |2737| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2737| 
        ADD       AL,*-SP[50]           ; [CPU_] |2737| 
        MOV       *-SP[3],AL            ; [CPU_] |2737| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2737| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_sprintf")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2737| 
        ; call occurs [#_sprintf] ; [] |2737| 
        MOVL      XAR0,#44              ; [CPU_] |2737| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2738,column 7,is_stmt,isa 0
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_scia_puts")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2738| 
        ; call occurs [#_scia_puts] ; [] |2738| 
        MOV       AL,*-SP[51]           ; [CPU_] |2738| 
	.dwpsn	file "../Source/prod.c",line 2740,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2740| 
        B         $C$L460,EQ            ; [CPU_] |2740| 
        ; branchcc occurs ; [] |2740| 
        CMPB      AL,#4                 ; [CPU_] |2740| 
        B         $C$L463,NEQ           ; [CPU_] |2740| 
        ; branchcc occurs ; [] |2740| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2741,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2741| 
        MOVB      XAR0,#8               ; [CPU_] |2741| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2741| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2741| 
        MOVB      XAR0,#10              ; [CPU_] |2741| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2741| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2741| 
        MOVL      XAR0,#44              ; [CPU_] |2741| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2741| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2741| 
        MOVL      XAR4,XAR1             ; [CPU_] |2741| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_sprintf")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2741| 
        ; call occurs [#_sprintf] ; [] |2741| 
        MOVL      XAR4,XAR1             ; [CPU_] |2741| 
	.dwpsn	file "../Source/prod.c",line 2744,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2744| 
        ; branch occurs ; [] |2744| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2735,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2735| 
$C$L462:    
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2735| 
        ; call occurs [#_scia_puts] ; [] |2735| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2749,column 6,is_stmt,isa 0
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2749| 
        ; call occurs [#_ad7738_setcal] ; [] |2749| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2751,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2751| 
        ; branch occurs ; [] |2751| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2699,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2699| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_puts")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2699| 
        ; call occurs [#_scia_puts] ; [] |2699| 
	.dwpsn	file "../Source/prod.c",line 2691,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2691| 
        ; branch occurs ; [] |2691| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2653,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2653| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2653| 
        ; call occurs [#_scia_puts] ; [] |2653| 
	.dwpsn	file "../Source/prod.c",line 2645,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2645| 
        ; branch occurs ; [] |2645| 
$C$L466:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2817,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2817| 
        B         $C$L625,LO            ; [CPU_] |2817| 
        ; branchcc occurs ; [] |2817| 
	.dwpsn	file "../Source/prod.c",line 2820,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2820| 
        CMPB      AL,#83                ; [CPU_] |2820| 
        B         $C$L625,NEQ           ; [CPU_] |2820| 
        ; branchcc occurs ; [] |2820| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2827,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2827| 
        MOVL      XAR0,#44              ; [CPU_] |2827| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2827| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2827| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2827| 
        MOVL      XAR4,XAR1             ; [CPU_] |2827| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_sprintf")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2827| 
        ; call occurs [#_sprintf] ; [] |2827| 
        MOVL      XAR4,XAR1             ; [CPU_] |2827| 
	.dwpsn	file "../Source/prod.c",line 2828,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2828| 
        MOV       AL,#1024              ; [CPU_] |2828| 
        MOVL      XAR5,XAR1             ; [CPU_] |2828| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2828| 
        ; call occurs [#_scia_getparam] ; [] |2828| 
	.dwpsn	file "../Source/prod.c",line 2829,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2829| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_atoi")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2829| 
        ; call occurs [#_atoi] ; [] |2829| 
        MOV       *-SP[49],AL           ; [CPU_] |2829| 
	.dwpsn	file "../Source/prod.c",line 2830,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2830| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2830| 
        ; call occurs [#_scia_puts] ; [] |2830| 
        MOV       AL,*-SP[49]           ; [CPU_] |2830| 
	.dwpsn	file "../Source/prod.c",line 2832,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2832| 
        CMPB      AL,#4                 ; [CPU_] |2832| 
        B         $C$L497,HIS           ; [CPU_] |2832| 
        ; branchcc occurs ; [] |2832| 
	.dwpsn	file "../Source/prod.c",line 2836,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2836| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2836| 
        ; call occurs [#_scia_puts] ; [] |2836| 
        MOVZ      AR1,*-SP[49]          ; [CPU_] |2836| 
	.dwpsn	file "../Source/prod.c",line 2839,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2839| 
        MOVL      XAR0,#44              ; [CPU_] |2839| 
        DEC       *-SP[49]              ; [CPU_] |2839| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2839| 
        MOV       *-SP[39],AR1          ; [CPU_] |2839| 
        MOV       *-SP[3],AR1           ; [CPU_] |2839| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2839| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_sprintf")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2839| 
        ; call occurs [#_sprintf] ; [] |2839| 
        MOVL      XAR0,#44              ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2840,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2840| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2840| 
	.dwpsn	file "../Source/prod.c",line 2839,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2840,column 6,is_stmt,isa 0
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2840| 
        ; call occurs [#_scia_getparam] ; [] |2840| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2840| 
	.dwpsn	file "../Source/prod.c",line 2841,column 6,is_stmt,isa 0
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2841| 
        ; call occurs [#_scia_puts] ; [] |2841| 
	.dwpsn	file "../Source/prod.c",line 2842,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2842| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2842| 
        ; call occurs [#_scia_puts] ; [] |2842| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2842| 
	.dwpsn	file "../Source/prod.c",line 2844,column 6,is_stmt,isa 0
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_atoi")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2844| 
        ; call occurs [#_atoi] ; [] |2844| 
        CMPB      AL,#1                 ; [CPU_] |2844| 
        B         $C$L468,EQ            ; [CPU_] |2844| 
        ; branchcc occurs ; [] |2844| 
	.dwpsn	file "../Source/prod.c",line 2993,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2993| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2993| 
        MOV       AL,*-SP[49]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2993| 
        ADDL      ACC,XAR6              ; [CPU_] |2993| 
        ADD       ACC,#199 << 4         ; [CPU_] |2993| 
        MOVL      XAR4,ACC              ; [CPU_] |2993| 
	.dwpsn	file "../Source/prod.c",line 2994,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2994| 
	.dwpsn	file "../Source/prod.c",line 2993,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |2993| 
	.dwpsn	file "../Source/prod.c",line 2994,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |2994| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2994| 
        MOV       *-SP[3],AR1           ; [CPU_] |2994| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2994| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_sprintf")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2994| 
        ; call occurs [#_sprintf] ; [] |2994| 
        B         $C$L493,UNC           ; [CPU_] |2994| 
        ; branch occurs ; [] |2994| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2847,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2847| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2847| 
        MOV       AL,*-SP[49]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2847| 
        ADDL      ACC,XAR6              ; [CPU_] |2847| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2847| 
        MOVL      XAR1,ACC              ; [CPU_] |2847| 
        MOVL      XAR0,#62              ; [CPU_] |2847| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2847| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2847| 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2850,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2850| 
        MOV       *-SP[52],AL           ; [CPU_] |2850| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2851,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2851| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2851| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |2851| 
        MOV       *-SP[3],AL            ; [CPU_] |2851| 
        MOVL      XAR0,#44              ; [CPU_] |2851| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2851| 
        MOVL      *-SP[56],XAR4         ; [CPU_] |2851| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2851| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2851| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_sprintf")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2851| 
        ; call occurs [#_sprintf] ; [] |2851| 
        MOVL      XAR0,#44              ; [CPU_] |2851| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2851| 
	.dwpsn	file "../Source/prod.c",line 2852,column 8,is_stmt,isa 0
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2852| 
        ; call occurs [#_scia_puts] ; [] |2852| 
        MOV       AL,*-SP[52]           ; [CPU_] |2852| 
	.dwpsn	file "../Source/prod.c",line 2853,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2853| 
        B         $C$L470,GEQ           ; [CPU_] |2853| 
        ; branchcc occurs ; [] |2853| 
	.dwpsn	file "../Source/prod.c",line 2854,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2854| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_scia_puts")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2854| 
        ; call occurs [#_scia_puts] ; [] |2854| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2850,column 19,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |2850| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2850| 
        B         $C$L469,LT            ; [CPU_] |2850| 
        ; branchcc occurs ; [] |2850| 
	.dwpsn	file "../Source/prod.c",line 2857,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2857| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2857| 
        ; call occurs [#_scia_puts] ; [] |2857| 
	.dwpsn	file "../Source/prod.c",line 2858,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2858| 
        MOVL      XAR0,#44              ; [CPU_] |2858| 
        MOV       AL,*-SP[39]           ; [CPU_] |2858| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2858| 
        MOV       *-SP[3],AL            ; [CPU_] |2858| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2858| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_sprintf")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2858| 
        ; call occurs [#_sprintf] ; [] |2858| 
        MOVL      XAR0,#44              ; [CPU_] |2858| 
	.dwpsn	file "../Source/prod.c",line 2861,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2861| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2861| 
	.dwpsn	file "../Source/prod.c",line 2858,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2858| 
	.dwpsn	file "../Source/prod.c",line 2861,column 7,is_stmt,isa 0
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2861| 
        ; call occurs [#_scia_getparam] ; [] |2861| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2861| 
	.dwpsn	file "../Source/prod.c",line 2862,column 7,is_stmt,isa 0
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_atoi")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2862| 
        ; call occurs [#_atoi] ; [] |2862| 
        MOV       *-SP[51],AL           ; [CPU_] |2862| 
        CMPB      AL,#5                 ; [CPU_] |2862| 
        B         $C$L471,LO            ; [CPU_] |2862| 
        ; branchcc occurs ; [] |2862| 
	.dwpsn	file "../Source/prod.c",line 2865,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2865| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_scia_puts")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2865| 
        ; call occurs [#_scia_puts] ; [] |2865| 
	.dwpsn	file "../Source/prod.c",line 2864,column 8,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |2864| 
$C$L471:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2868,column 7,is_stmt,isa 0
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2868| 
        ; call occurs [#_scia_puts] ; [] |2868| 
	.dwpsn	file "../Source/prod.c",line 2869,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2869| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2869| 
        ; call occurs [#_scia_puts] ; [] |2869| 
        MOV       AL,*-SP[51]           ; [CPU_] |2869| 
	.dwpsn	file "../Source/prod.c",line 2870,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2870| 
	.dwpsn	file "../Source/prod.c",line 2872,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2872| 
        B         $C$L473,EQ            ; [CPU_] |2872| 
        ; branchcc occurs ; [] |2872| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2872| 
        B         $C$L473,EQ            ; [CPU_] |2872| 
        ; branchcc occurs ; [] |2872| 
	.dwpsn	file "../Source/prod.c",line 2875,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2875| 
        B         $C$L472,EQ            ; [CPU_] |2875| 
        ; branchcc occurs ; [] |2875| 
        CMPB      AL,#4                 ; [CPU_] |2875| 
        B         $C$L474,NEQ           ; [CPU_] |2875| 
        ; branchcc occurs ; [] |2875| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2876,column 8,is_stmt,isa 0
        MOV       *-SP[52],#2           ; [CPU_] |2876| 
        B         $C$L474,UNC           ; [CPU_] |2876| 
        ; branch occurs ; [] |2876| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2874,column 8,is_stmt,isa 0
        MOV       *-SP[52],#4           ; [CPU_] |2874| 
$C$L474:    
        MOV       AL,*-SP[52]           ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2881,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2881| 
        MOV       AL,*-SP[52]           ; [CPU_] |2881| 
        MOVL      XAR0,#44              ; [CPU_] |2881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2881| 
        MOV       *-SP[3],AL            ; [CPU_] |2881| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2881| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_sprintf")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2881| 
        ; call occurs [#_sprintf] ; [] |2881| 
        MOVL      XAR0,#44              ; [CPU_] |2881| 
	.dwpsn	file "../Source/prod.c",line 2882,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2882| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2882| 
	.dwpsn	file "../Source/prod.c",line 2881,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2881| 
	.dwpsn	file "../Source/prod.c",line 2882,column 8,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2882| 
        ; call occurs [#_scia_getparam] ; [] |2882| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2882| 
	.dwpsn	file "../Source/prod.c",line 2883,column 8,is_stmt,isa 0
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_atoi")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2883| 
        ; call occurs [#_atoi] ; [] |2883| 
        MOV       *-SP[50],AL           ; [CPU_] |2883| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2884,column 8,is_stmt,isa 0
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2884| 
        ; call occurs [#_scia_puts] ; [] |2884| 
        MOV       AL,*-SP[50]           ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2886,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2886| 
        ; branchcc occurs ; [] |2886| 
        MOV       AL,*-SP[40]           ; [CPU_] 
        CMP       AL,*-SP[50]           ; [CPU_] |2886| 
        B         $C$L496,LO            ; [CPU_] |2886| 
        ; branchcc occurs ; [] |2886| 
	.dwpsn	file "../Source/prod.c",line 2890,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2890| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2890| 
        ; call occurs [#_scia_puts] ; [] |2890| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2892| 
	.dwpsn	file "../Source/prod.c",line 2890,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2890| 
	.dwpsn	file "../Source/prod.c",line 2895,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2895| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2892| 
	.dwpsn	file "../Source/prod.c",line 2895,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2895| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2895| 
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2895| 
        ; call occurs [#_scia_getparam] ; [] |2895| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2895| 
	.dwpsn	file "../Source/prod.c",line 2898,column 7,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2898| 
        ; call occurs [#_scia_puts] ; [] |2898| 
	.dwpsn	file "../Source/prod.c",line 2899,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2899| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2899| 
        ; call occurs [#_scia_puts] ; [] |2899| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2899| 
	.dwpsn	file "../Source/prod.c",line 2901,column 7,is_stmt,isa 0
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_atoi")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2901| 
        ; call occurs [#_atoi] ; [] |2901| 
        CMPB      AL,#1                 ; [CPU_] |2901| 
        B         $C$L476,EQ            ; [CPU_] |2901| 
        ; branchcc occurs ; [] |2901| 
	.dwpsn	file "../Source/prod.c",line 2905,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2905| 
        B         $C$L477,UNC           ; [CPU_] |2905| 
        ; branch occurs ; [] |2905| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2903,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2903| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2908| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2908| 
        MOV       AL,#1024              ; [CPU_] |2908| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2908| 
        ; call occurs [#_scia_getparam] ; [] |2908| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2908| 
	.dwpsn	file "../Source/prod.c",line 2911,column 7,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2911| 
        ; call occurs [#_scia_puts] ; [] |2911| 
	.dwpsn	file "../Source/prod.c",line 2912,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2912| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2912| 
        ; call occurs [#_scia_puts] ; [] |2912| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2912| 
	.dwpsn	file "../Source/prod.c",line 2914,column 7,is_stmt,isa 0
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_atoi")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2914| 
        ; call occurs [#_atoi] ; [] |2914| 
        CMPB      AL,#1                 ; [CPU_] |2914| 
        B         $C$L478,EQ            ; [CPU_] |2914| 
        ; branchcc occurs ; [] |2914| 
	.dwpsn	file "../Source/prod.c",line 2918,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2918| 
        B         $C$L479,UNC           ; [CPU_] |2918| 
        ; branch occurs ; [] |2918| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2916,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2916| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2921,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2921| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2921| 
        MOV       AL,#1024              ; [CPU_] |2921| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2921| 
        ; call occurs [#_scia_getparam] ; [] |2921| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2921| 
	.dwpsn	file "../Source/prod.c",line 2924,column 7,is_stmt,isa 0
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2924| 
        ; call occurs [#_scia_puts] ; [] |2924| 
	.dwpsn	file "../Source/prod.c",line 2925,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2925| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2925| 
        ; call occurs [#_scia_puts] ; [] |2925| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2925| 
	.dwpsn	file "../Source/prod.c",line 2927,column 7,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_atoi")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2927| 
        ; call occurs [#_atoi] ; [] |2927| 
        CMPB      AL,#1                 ; [CPU_] |2927| 
        B         $C$L480,EQ            ; [CPU_] |2927| 
        ; branchcc occurs ; [] |2927| 
	.dwpsn	file "../Source/prod.c",line 2931,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2931| 
        B         $C$L481,UNC           ; [CPU_] |2931| 
        ; branch occurs ; [] |2931| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2929,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2929| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2935,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2935| 
        CMPB      AL,#2                 ; [CPU_] |2935| 
        B         $C$L483,LOS           ; [CPU_] |2935| 
        ; branchcc occurs ; [] |2935| 
        CMPB      AL,#3                 ; [CPU_] |2935| 
        B         $C$L482,EQ            ; [CPU_] |2935| 
        ; branchcc occurs ; [] |2935| 
        CMPB      AL,#4                 ; [CPU_] |2935| 
        B         $C$L485,NEQ           ; [CPU_] |2935| 
        ; branchcc occurs ; [] |2935| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2947,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2947| 
	.dwpsn	file "../Source/prod.c",line 2948,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2948| 
        ; branch occurs ; [] |2948| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2944,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2944| 
	.dwpsn	file "../Source/prod.c",line 2945,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2945| 
        ; branch occurs ; [] |2945| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2939,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2939| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2939| 
        MOV       T,#10                 ; [CPU_] |2939| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2939| 
        ADDL      ACC,XAR6              ; [CPU_] |2939| 
        MOVL      XAR4,ACC              ; [CPU_] |2939| 
        MOVB      XAR0,#42              ; [CPU_] |2939| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2939| 
        MPYB      ACC,T,#152            ; [CPU_] |2939| 
        ADDL      ACC,XAR6              ; [CPU_] |2939| 
        MOVL      XAR4,ACC              ; [CPU_] |2939| 
        MOVB      XAR0,#125             ; [CPU_] |2939| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2939| 
        MOVL      XAR0,#70              ; [CPU_] |2939| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2939| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2939| 
        MOV       ACC,AL << 1           ; [CPU_] |2939| 
        ADDL      ACC,XAR6              ; [CPU_] |2939| 
        MOVL      XAR4,ACC              ; [CPU_] |2939| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2939| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |2939| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2939| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2952| 
        MOVL      XAR0,#48              ; [CPU_] |2952| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2952| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2952| 
        MOVL      XAR0,#44              ; [CPU_] |2952| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2952| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2952| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_sprintf")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2952| 
        ; call occurs [#_sprintf] ; [] |2952| 
        MOVL      XAR0,#44              ; [CPU_] |2952| 
	.dwpsn	file "../Source/prod.c",line 2953,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2953| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2953| 
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2952| 
	.dwpsn	file "../Source/prod.c",line 2953,column 7,is_stmt,isa 0
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2953| 
        ; call occurs [#_scia_getparam] ; [] |2953| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2953| 
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2954| 
        ; call occurs [#_scia_puts] ; [] |2954| 
	.dwpsn	file "../Source/prod.c",line 2955,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2955| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2955| 
        ; call occurs [#_scia_puts] ; [] |2955| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2955,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2955| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_strtod")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2961,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |2961| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |2961| 
	.dwpsn	file "../Source/prod.c",line 2957,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |2957| 
	.dwpsn	file "../Source/prod.c",line 2961,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2961| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_sprintf")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2961| 
        ; call occurs [#_sprintf] ; [] |2961| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2962,column 7,is_stmt,isa 0
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2962| 
        MOV       AL,#1024              ; [CPU_] |2962| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2962| 
        ; call occurs [#_scia_getparam] ; [] |2962| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2963| 
        ; call occurs [#_scia_puts] ; [] |2963| 
	.dwpsn	file "../Source/prod.c",line 2964,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2964| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2964| 
        ; call occurs [#_scia_puts] ; [] |2964| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2964,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2964| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_strtod")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |2972| 
        MOVL      XAR0,#62              ; [CPU_] |2972| 
	.dwpsn	file "../Source/prod.c",line 2966,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |2966| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2972| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2972| 
        MOV       *-SP[3],AL            ; [CPU_] |2972| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2972| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |2972| 
        MOV       ACC,AL << 1           ; [CPU_] |2972| 
        ADDL      ACC,XAR6              ; [CPU_] |2972| 
        MOVL      XAR4,ACC              ; [CPU_] |2972| 
        MOVL      XAR0,#44              ; [CPU_] |2972| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2972| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2972| 
        MOVB      AL,#1                 ; [CPU_] |2972| 
        ADD       AL,*-SP[50]           ; [CPU_] |2972| 
        MOV       *-SP[7],AL            ; [CPU_] |2972| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2972| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_sprintf")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2972| 
        ; call occurs [#_sprintf] ; [] |2972| 
        MOVL      XAR0,#44              ; [CPU_] |2972| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2972| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2975| 
        ; call occurs [#_scia_puts] ; [] |2975| 
	.dwpsn	file "../Source/prod.c",line 2977,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |2977| 
        B         $C$L486,TC            ; [CPU_] |2977| 
        ; branchcc occurs ; [] |2977| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |2977| 
        B         $C$L487,UNC           ; [CPU_] |2977| 
        ; branch occurs ; [] |2977| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |2977| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |2977| 
        B         $C$L488,TC            ; [CPU_] |2977| 
        ; branchcc occurs ; [] |2977| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |2977| 
        B         $C$L489,UNC           ; [CPU_] |2977| 
        ; branch occurs ; [] |2977| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |2977| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |2977| 
        B         $C$L490,TC            ; [CPU_] |2977| 
        ; branchcc occurs ; [] |2977| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |2977| 
        B         $C$L491,UNC           ; [CPU_] |2977| 
        ; branch occurs ; [] |2977| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |2977| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |2977| 
        MOVL      XAR0,#44              ; [CPU_] |2977| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |2977| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2977| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |2977| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |2977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2977| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_sprintf")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2977| 
        ; call occurs [#_sprintf] ; [] |2977| 
        MOVL      XAR0,#44              ; [CPU_] |2977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2977| 
	.dwpsn	file "../Source/prod.c",line 2984,column 7,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2984| 
        ; call occurs [#_scia_puts] ; [] |2984| 
	.dwpsn	file "../Source/prod.c",line 2985,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |2985| 
        MOVL      XAR0,#48              ; [CPU_] |2985| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2985| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2985| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2985| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2985| 
        MOVL      XAR0,#48              ; [CPU_] |2985| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2985| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |2985| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2985| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2985| 
        MOVL      *-SP[10],ACC          ; [CPU_] |2985| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |2985| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2985| 
        MOVL      XAR4,XAR1             ; [CPU_] |2985| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_sprintf")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2985| 
        ; call occurs [#_sprintf] ; [] |2985| 
        MOVL      XAR4,XAR1             ; [CPU_] |2985| 
	.dwpsn	file "../Source/prod.c",line 2989,column 7,is_stmt,isa 0
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2989| 
        ; call occurs [#_scia_puts] ; [] |2989| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3000,column 6,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3000| 
        ; call occurs [#_ad7738_setcal] ; [] |3000| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 2997,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2997| 
	.dwpsn	file "../Source/prod.c",line 3002,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3002| 
        ; branch occurs ; [] |3002| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2888,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2888| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2888| 
        ; call occurs [#_scia_puts] ; [] |2888| 
	.dwpsn	file "../Source/prod.c",line 2880,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2880| 
        ; branch occurs ; [] |2880| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2834,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2834| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2834| 
        ; call occurs [#_scia_puts] ; [] |2834| 
	.dwpsn	file "../Source/prod.c",line 2826,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2826| 
        ; branch occurs ; [] |2826| 
$C$L498:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3306,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3306| 
        B         $C$L625,LO            ; [CPU_] |3306| 
        ; branchcc occurs ; [] |3306| 
	.dwpsn	file "../Source/prod.c",line 3309,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3309| 
        CMPB      AL,#68                ; [CPU_] |3309| 
        B         $C$L502,EQ            ; [CPU_] |3309| 
        ; branchcc occurs ; [] |3309| 
        CMPB      AL,#82                ; [CPU_] |3309| 
        B         $C$L501,EQ            ; [CPU_] |3309| 
        ; branchcc occurs ; [] |3309| 
        CMPB      AL,#87                ; [CPU_] |3309| 
        B         $C$L625,NEQ           ; [CPU_] |3309| 
        ; branchcc occurs ; [] |3309| 
        MOV       AL,*-SP[40]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3313,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3313| 
        ; branchcc occurs ; [] |3313| 
	.dwpsn	file "../Source/prod.c",line 3337,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3337| 
	.dwpsn	file "../Source/prod.c",line 3339,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3339| 
        ; branch occurs ; [] |3339| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3315,column 7,is_stmt,isa 0
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3315| 
        ; call occurs [#_lcd_clear] ; [] |3315| 
	.dwpsn	file "../Source/prod.c",line 3316,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3316| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3316| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3316| 
        ; call occurs [#_lcd_puts] ; [] |3316| 
	.dwpsn	file "../Source/prod.c",line 3317,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3317| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3317| 
        ; call occurs [#_scia_puts] ; [] |3317| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3320,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3320| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_delay_us")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3320| 
        ; call occurs [#_delay_us] ; [] |3320| 
	.dwpsn	file "../Source/prod.c",line 3319,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3319| 
        ; branchcc occurs ; [] |3319| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3324,column 7,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_conf_write")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3324| 
        ; call occurs [#_conf_write] ; [] |3324| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3327,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3327| 
        B         $C$L505,NEQ           ; [CPU_] |3327| 
        ; branchcc occurs ; [] |3327| 
	.dwpsn	file "../Source/prod.c",line 3328,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3328| 
	.dwpsn	file "../Source/prod.c",line 3330,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3330| 
        ; branch occurs ; [] |3330| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3344,column 6,is_stmt,isa 0
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_conf_read")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3344| 
        ; call occurs [#_conf_read] ; [] |3344| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3347,column 6,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3347| 
        ; call occurs [#_ad7738_setcal] ; [] |3347| 
	.dwpsn	file "../Source/prod.c",line 3348,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3348| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3348| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3348| 
	.dwpsn	file "../Source/prod.c",line 3349,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3349| 
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3349| 
        ; call occurs [#_ad7738_resetvall] ; [] |3349| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3352,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3352| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3352| 
        ; call occurs [#_scia_puts] ; [] |3352| 
	.dwpsn	file "../Source/prod.c",line 3355,column 6,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_update_units")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3355| 
        ; call occurs [#_update_units] ; [] |3355| 
	.dwpsn	file "../Source/prod.c",line 3353,column 6,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |3353| 
	.dwpsn	file "../Source/prod.c",line 3357,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3357| 
        ; branch occurs ; [] |3357| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3361,column 6,is_stmt,isa 0
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_conf_default")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3361| 
        ; call occurs [#_conf_default] ; [] |3361| 
	.dwpsn	file "../Source/prod.c",line 3364,column 6,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3364| 
        ; call occurs [#_lcd_clear] ; [] |3364| 
	.dwpsn	file "../Source/prod.c",line 3365,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3365| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3365| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3365| 
        ; call occurs [#_lcd_puts] ; [] |3365| 
	.dwpsn	file "../Source/prod.c",line 3366,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3366| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3366| 
        ; call occurs [#_scia_puts] ; [] |3366| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3369,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3369| 
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_delay_us")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3369| 
        ; call occurs [#_delay_us] ; [] |3369| 
	.dwpsn	file "../Source/prod.c",line 3368,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3368| 
        ; branchcc occurs ; [] |3368| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3373,column 6,is_stmt,isa 0
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_conf_write")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3373| 
        ; call occurs [#_conf_write] ; [] |3373| 
        MOVZ      AR1,AL                ; [CPU_] |3373| 
	.dwpsn	file "../Source/prod.c",line 3374,column 6,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3374| 
        ; call occurs [#_ad7738_setcal] ; [] |3374| 
	.dwpsn	file "../Source/prod.c",line 3375,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3375| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3375| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3375| 
	.dwpsn	file "../Source/prod.c",line 3376,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3376| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3376| 
        ; call occurs [#_ad7738_resetvall] ; [] |3376| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3379,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3379| 
        ; branchcc occurs ; [] |3379| 
	.dwpsn	file "../Source/prod.c",line 3380,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3380| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3380| 
        ; call occurs [#_scia_puts] ; [] |3380| 
	.dwpsn	file "../Source/prod.c",line 3382,column 7,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |3382| 
	.dwpsn	file "../Source/prod.c",line 3383,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3383| 
        ; branch occurs ; [] |3383| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3384,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3384| 
        SPM       #0                    ; [CPU_] 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3384| 
        ; call occurs [#_scia_puts] ; [] |3384| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3386,column 6,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3386| 
        ; call occurs [#_lcd_clear] ; [] |3386| 
	.dwpsn	file "../Source/prod.c",line 3387,column 6,is_stmt,isa 0
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_update_units")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3387| 
        ; call occurs [#_update_units] ; [] |3387| 
	.dwpsn	file "../Source/prod.c",line 3388,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3388| 
        ; branch occurs ; [] |3388| 
$C$L507:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2413| 
        B         $C$L625,LO            ; [CPU_] |2413| 
        ; branchcc occurs ; [] |2413| 
	.dwpsn	file "../Source/prod.c",line 2416,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2416| 
        CMPB      AL,#70                ; [CPU_] |2416| 
        B         $C$L512,EQ            ; [CPU_] |2416| 
        ; branchcc occurs ; [] |2416| 
        CMPB      AL,#80                ; [CPU_] |2416| 
        B         $C$L632,NEQ           ; [CPU_] |2416| 
        ; branchcc occurs ; [] |2416| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2453,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2453| 
        MOVL      XAR0,#44              ; [CPU_] |2453| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2453| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2453| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2453| 
        MOVL      XAR4,XAR1             ; [CPU_] |2453| 
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_sprintf")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2453| 
        ; call occurs [#_sprintf] ; [] |2453| 
        MOVL      XAR4,XAR1             ; [CPU_] |2453| 
	.dwpsn	file "../Source/prod.c",line 2454,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2454| 
        MOV       AL,#1024              ; [CPU_] |2454| 
        MOVL      XAR5,XAR1             ; [CPU_] |2454| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2454| 
        ; call occurs [#_scia_getparam] ; [] |2454| 
	.dwpsn	file "../Source/prod.c",line 2455,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2455| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_atoi")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2455| 
        ; call occurs [#_atoi] ; [] |2455| 
        MOV       *-SP[49],AL           ; [CPU_] |2455| 
	.dwpsn	file "../Source/prod.c",line 2456,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2456| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2456| 
        ; call occurs [#_scia_puts] ; [] |2456| 
        MOV       AL,*-SP[49]           ; [CPU_] |2456| 
	.dwpsn	file "../Source/prod.c",line 2458,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2458| 
        CMPB      AL,#2                 ; [CPU_] |2458| 
        B         $C$L511,HIS           ; [CPU_] |2458| 
        ; branchcc occurs ; [] |2458| 
	.dwpsn	file "../Source/prod.c",line 2462,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2462| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2462| 
        ; call occurs [#_scia_puts] ; [] |2462| 
        MOVZ      AR1,*-SP[49]          ; [CPU_] |2462| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2465| 
        MOVL      XAR0,#44              ; [CPU_] |2465| 
        DEC       *-SP[49]              ; [CPU_] |2465| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2465| 
        MOV       *-SP[3],AR1           ; [CPU_] |2465| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2465| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_sprintf")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2465| 
        ; call occurs [#_sprintf] ; [] |2465| 
        MOVL      XAR0,#44              ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2466,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2466| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2466| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2466,column 6,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2466| 
        ; call occurs [#_scia_getparam] ; [] |2466| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2466| 
	.dwpsn	file "../Source/prod.c",line 2467,column 6,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_atol")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2467| 
        ; call occurs [#_atol] ; [] |2467| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2467| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2467| 
	.dwpsn	file "../Source/prod.c",line 2468,column 6,is_stmt,isa 0
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2468| 
        ; call occurs [#_scia_puts] ; [] |2468| 
	.dwpsn	file "../Source/prod.c",line 2469,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2469| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2469| 
        ; call occurs [#_scia_puts] ; [] |2469| 
	.dwpsn	file "../Source/prod.c",line 2470,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2470| 
        B         $C$L509,NEQ           ; [CPU_] |2470| 
        ; branchcc occurs ; [] |2470| 
	.dwpsn	file "../Source/prod.c",line 2471,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2471| 
	.dwpsn	file "../Source/prod.c",line 2472,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2472| 
        ; branch occurs ; [] |2472| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2474,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2474| 
        MOVL      XAR0,#44              ; [CPU_] |2474| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2474| 
        MOV       *-SP[3],AR1           ; [CPU_] |2474| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2474| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2474| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2474| 
        MOVL      XAR4,XAR1             ; [CPU_] |2474| 
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_sprintf")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2474| 
        ; call occurs [#_sprintf] ; [] |2474| 
        MOVL      XAR4,XAR1             ; [CPU_] |2474| 
	.dwpsn	file "../Source/prod.c",line 2476,column 6,is_stmt,isa 0
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2476| 
        ; call occurs [#_scia_puts] ; [] |2476| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2481,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2481| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2481| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[49]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2481| 
        ADDL      ACC,XAR6              ; [CPU_] |2481| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2481| 
        ADD       ACC,#201 << 4         ; [CPU_] |2481| 
        MOVL      XAR4,ACC              ; [CPU_] |2481| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2481| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2482,column 6,is_stmt,isa 0
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2482| 
        ; call occurs [#_ad7738_setcal] ; [] |2482| 
	.dwpsn	file "../Source/prod.c",line 2483,column 6,is_stmt,isa 0
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2483| 
        ; call occurs [#_velf_rst] ; [] |2483| 
	.dwpsn	file "../Source/prod.c",line 2485,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2485| 
        ; branch occurs ; [] |2485| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2460,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2460| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2460| 
        ; call occurs [#_scia_puts] ; [] |2460| 
	.dwpsn	file "../Source/prod.c",line 2452,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2452| 
        ; branch occurs ; [] |2452| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2423,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2423| 
        MOVL      XAR0,#44              ; [CPU_] |2423| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2423| 
        MOV       *-SP[3],#4096         ; [CPU_] |2423| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2423| 
        MOVL      XAR4,XAR1             ; [CPU_] |2423| 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_sprintf")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2423| 
        ; call occurs [#_sprintf] ; [] |2423| 
        MOVL      XAR4,XAR1             ; [CPU_] |2423| 
	.dwpsn	file "../Source/prod.c",line 2425,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2425| 
        MOV       AL,#1024              ; [CPU_] |2425| 
        MOVL      XAR5,XAR1             ; [CPU_] |2425| 
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2425| 
        ; call occurs [#_scia_getparam] ; [] |2425| 
	.dwpsn	file "../Source/prod.c",line 2426,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2426| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_atoi")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2426| 
        ; call occurs [#_atoi] ; [] |2426| 
        MOV       *-SP[39],AL           ; [CPU_] |2426| 
	.dwpsn	file "../Source/prod.c",line 2427,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2427| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2427| 
        ; call occurs [#_scia_puts] ; [] |2427| 
        MOV       AL,*-SP[39]           ; [CPU_] |2427| 
	.dwpsn	file "../Source/prod.c",line 2429,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2429| 
        ; branchcc occurs ; [] |2429| 
        CMP       AL,#4096              ; [CPU_] |2429| 
        B         $C$L513,GT            ; [CPU_] |2429| 
        ; branchcc occurs ; [] |2429| 
	.dwpsn	file "../Source/prod.c",line 2433,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2433| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2433| 
        ; call occurs [#_scia_puts] ; [] |2433| 
	.dwpsn	file "../Source/prod.c",line 2435,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2435| 
        MOVL      XAR0,#44              ; [CPU_] |2435| 
        MOV       AL,*-SP[39]           ; [CPU_] |2435| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2435| 
        MOV       *-SP[3],AL            ; [CPU_] |2435| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2435| 
        MOVL      XAR4,XAR1             ; [CPU_] |2435| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_sprintf")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2435| 
        ; call occurs [#_sprintf] ; [] |2435| 
        MOVL      XAR4,XAR1             ; [CPU_] |2435| 
	.dwpsn	file "../Source/prod.c",line 2437,column 6,is_stmt,isa 0
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2437| 
        ; call occurs [#_scia_puts] ; [] |2437| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2442,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2442| 
        MOVL      ACC,XAR4              ; [CPU_] |2442| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2442| 
        MOVL      XAR4,ACC              ; [CPU_] |2442| 
        MOV       AL,*-SP[39]           ; [CPU_] |2442| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2442| 
	.dwpsn	file "../Source/prod.c",line 2446,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2446| 
        ; branch occurs ; [] |2446| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2431,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2431| 
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2431| 
        ; call occurs [#_scia_puts] ; [] |2431| 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2422| 
        ; branch occurs ; [] |2422| 
$C$L514:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2495,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2495| 
        B         $C$L625,LO            ; [CPU_] |2495| 
        ; branchcc occurs ; [] |2495| 
	.dwpsn	file "../Source/prod.c",line 2498,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2498| 
        CMPB      AL,#83                ; [CPU_] |2498| 
        B         $C$L625,NEQ           ; [CPU_] |2498| 
        ; branchcc occurs ; [] |2498| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2505,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2505| 
        MOVL      XAR0,#44              ; [CPU_] |2505| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2505| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2505| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2505| 
        MOVL      XAR4,XAR1             ; [CPU_] |2505| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_sprintf")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2505| 
        ; call occurs [#_sprintf] ; [] |2505| 
        MOVL      XAR4,XAR1             ; [CPU_] |2505| 
	.dwpsn	file "../Source/prod.c",line 2506,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2506| 
        MOV       AL,#1024              ; [CPU_] |2506| 
        MOVL      XAR5,XAR1             ; [CPU_] |2506| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2506| 
        ; call occurs [#_scia_getparam] ; [] |2506| 
	.dwpsn	file "../Source/prod.c",line 2507,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2507| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_atoi")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2507| 
        ; call occurs [#_atoi] ; [] |2507| 
        MOV       *-SP[49],AL           ; [CPU_] |2507| 
	.dwpsn	file "../Source/prod.c",line 2508,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2508| 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2508| 
        ; call occurs [#_scia_puts] ; [] |2508| 
        MOV       AL,*-SP[49]           ; [CPU_] |2508| 
	.dwpsn	file "../Source/prod.c",line 2510,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2510| 
        CMPB      AL,#4                 ; [CPU_] |2510| 
        B         $C$L529,HIS           ; [CPU_] |2510| 
        ; branchcc occurs ; [] |2510| 
	.dwpsn	file "../Source/prod.c",line 2514,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2514| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2514| 
        ; call occurs [#_scia_puts] ; [] |2514| 
        MOVL      XAR0,#62              ; [CPU_] |2514| 
	.dwpsn	file "../Source/prod.c",line 2518,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2518| 
	.dwpsn	file "../Source/prod.c",line 2514,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2514| 
	.dwpsn	file "../Source/prod.c",line 2518,column 11,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |2518| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2519,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2519| 
        MOVL      XAR0,#44              ; [CPU_] |2519| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2519| 
        MOV       *-SP[3],AL            ; [CPU_] |2519| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2519| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2519| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2519| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_sprintf")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2519| 
        ; call occurs [#_sprintf] ; [] |2519| 
        MOVL      XAR0,#44              ; [CPU_] |2519| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2519| 
	.dwpsn	file "../Source/prod.c",line 2520,column 7,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2520| 
        ; call occurs [#_scia_puts] ; [] |2520| 
        MOV       AL,*-SP[39]           ; [CPU_] |2520| 
	.dwpsn	file "../Source/prod.c",line 2521,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2521| 
        B         $C$L517,GEQ           ; [CPU_] |2521| 
        ; branchcc occurs ; [] |2521| 
	.dwpsn	file "../Source/prod.c",line 2522,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2522| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2522| 
        ; call occurs [#_scia_puts] ; [] |2522| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2518,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |2518| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2518| 
        B         $C$L516,LT            ; [CPU_] |2518| 
        ; branchcc occurs ; [] |2518| 
	.dwpsn	file "../Source/prod.c",line 2525,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2525| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2525| 
        ; call occurs [#_scia_puts] ; [] |2525| 
	.dwpsn	file "../Source/prod.c",line 2526,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2526| 
        MOVL      XAR0,#44              ; [CPU_] |2526| 
	.dwpsn	file "../Source/prod.c",line 2525,column 6,is_stmt,isa 0
        MOV       AH,*-SP[49]           ; [CPU_] |2525| 
	.dwpsn	file "../Source/prod.c",line 2526,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2526| 
        MOV       *-SP[3],AH            ; [CPU_] |2526| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2526| 
        DEC       *-SP[49]              ; [CPU_] |2526| 
        MOV       *-SP[39],AH           ; [CPU_] |2526| 
        MOVL      XAR4,XAR1             ; [CPU_] |2526| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_sprintf")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2526| 
        ; call occurs [#_sprintf] ; [] |2526| 
        MOVL      XAR4,XAR1             ; [CPU_] |2526| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2528| 
        MOV       AL,#1024              ; [CPU_] |2528| 
        MOVL      XAR5,XAR1             ; [CPU_] |2528| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2528| 
        ; call occurs [#_scia_getparam] ; [] |2528| 
        MOVL      XAR4,XAR1             ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_atoi")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2529| 
        ; call occurs [#_atoi] ; [] |2529| 
        MOVZ      AR1,AL                ; [CPU_] |2529| 
        CMPB      AL,#7                 ; [CPU_] |2529| 
        B         $C$L518,LO            ; [CPU_] |2529| 
        ; branchcc occurs ; [] |2529| 
	.dwpsn	file "../Source/prod.c",line 2532,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2532| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2532| 
        ; call occurs [#_scia_puts] ; [] |2532| 
	.dwpsn	file "../Source/prod.c",line 2531,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2531| 
$C$L518:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2535,column 6,is_stmt,isa 0
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2535| 
        ; call occurs [#_scia_puts] ; [] |2535| 
	.dwpsn	file "../Source/prod.c",line 2536,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2536| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2536| 
        ; call occurs [#_scia_puts] ; [] |2536| 
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2537| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2537| 
        MOVB      AL,#3                 ; [CPU_] |2537| 
        MOV       T,*-SP[49]            ; [CPU_] |2537| 
        MPYU      ACC,T,AL              ; [CPU_] |2537| 
        ADDL      ACC,XAR6              ; [CPU_] |2537| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2537| 
        MOVL      XAR4,ACC              ; [CPU_] |2537| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2539,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2539| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2539| 
        CMPB      AL,#2                 ; [CPU_] |2539| 
        B         $C$L522,LOS           ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
        MOV       AH,AL                 ; [CPU_] |2539| 
        ADDB      AH,#-3                ; [CPU_] |2539| 
        CMPB      AH,#1                 ; [CPU_] |2539| 
        B         $C$L521,LOS           ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
        CMPB      AL,#5                 ; [CPU_] |2539| 
        B         $C$L519,EQ            ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
        CMPB      AL,#6                 ; [CPU_] |2539| 
        B         $C$L584,NEQ           ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
	.dwpsn	file "../Source/prod.c",line 2613,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2613| 
        MOV       AL,*-SP[39]           ; [CPU_] |2613| 
        MOVL      XAR0,#62              ; [CPU_] |2613| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2613| 
        MOV       *-SP[3],AL            ; [CPU_] |2613| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2613| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2613| 
        ADDL      ACC,XAR6              ; [CPU_] |2613| 
        MOVL      XAR4,ACC              ; [CPU_] |2613| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2613| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2613| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2616| 
        ; branch occurs ; [] |2616| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2594,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2594| 
        MOVL      XAR0,#44              ; [CPU_] |2594| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2594| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2594| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2594| 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_sprintf")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2594| 
        ; call occurs [#_sprintf] ; [] |2594| 
        MOVL      XAR0,#44              ; [CPU_] |2594| 
	.dwpsn	file "../Source/prod.c",line 2595,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2595| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2595| 
	.dwpsn	file "../Source/prod.c",line 2594,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2594| 
	.dwpsn	file "../Source/prod.c",line 2595,column 8,is_stmt,isa 0
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2595| 
        ; call occurs [#_scia_getparam] ; [] |2595| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2595| 
	.dwpsn	file "../Source/prod.c",line 2596,column 8,is_stmt,isa 0
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_atoi")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2596| 
        ; call occurs [#_atoi] ; [] |2596| 
        MOV       *-SP[50],AL           ; [CPU_] |2596| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2596| 
	.dwpsn	file "../Source/prod.c",line 2597,column 8,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2597| 
        ; call occurs [#_scia_puts] ; [] |2597| 
        MOV       AL,*-SP[50]           ; [CPU_] |2597| 
	.dwpsn	file "../Source/prod.c",line 2599,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2599| 
        CMPB      AL,#4                 ; [CPU_] |2599| 
        B         $C$L520,HIS           ; [CPU_] |2599| 
        ; branchcc occurs ; [] |2599| 
	.dwpsn	file "../Source/prod.c",line 2603,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2603| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2603| 
        ; call occurs [#_scia_puts] ; [] |2603| 
	.dwpsn	file "../Source/prod.c",line 2605,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2607| 
        MOVL      XAR0,#62              ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2603,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2605,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2607| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2607| 
        MOV       *-SP[3],AL            ; [CPU_] |2607| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2607| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2607| 
        ADDL      ACC,XAR6              ; [CPU_] |2607| 
        MOVL      XAR4,ACC              ; [CPU_] |2607| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2607| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2607| 
        MOVB      AL,#1                 ; [CPU_] |2607| 
        ADD       AL,*-SP[50]           ; [CPU_] |2607| 
        MOV       *-SP[7],AL            ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2610,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2610| 
        ; branch occurs ; [] |2610| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2601,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2601| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2601| 
        ; call occurs [#_scia_puts] ; [] |2601| 
	.dwpsn	file "../Source/prod.c",line 2593,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2593| 
        ; branch occurs ; [] |2593| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2551,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2551| 
        B         $C$L523,UNC           ; [CPU_] |2551| 
        ; branch occurs ; [] |2551| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2545,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2545| 
$C$L523:    
        MOV       *-SP[51],AL           ; [CPU_] |2545| 
        MOV       *-SP[40],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2556,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2556| 
        MOV       AL,*-SP[51]           ; [CPU_] |2556| 
        MOVL      XAR0,#44              ; [CPU_] |2556| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2556| 
        MOV       *-SP[3],AL            ; [CPU_] |2556| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2556| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_sprintf")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2556| 
        ; call occurs [#_sprintf] ; [] |2556| 
        MOVL      XAR0,#44              ; [CPU_] |2556| 
	.dwpsn	file "../Source/prod.c",line 2557,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2557| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2557| 
	.dwpsn	file "../Source/prod.c",line 2556,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2556| 
	.dwpsn	file "../Source/prod.c",line 2557,column 8,is_stmt,isa 0
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2557| 
        ; call occurs [#_scia_getparam] ; [] |2557| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2557| 
	.dwpsn	file "../Source/prod.c",line 2558,column 8,is_stmt,isa 0
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_atoi")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2558| 
        ; call occurs [#_atoi] ; [] |2558| 
        MOV       *-SP[50],AL           ; [CPU_] |2558| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2558| 
	.dwpsn	file "../Source/prod.c",line 2559,column 8,is_stmt,isa 0
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2559| 
        ; call occurs [#_scia_puts] ; [] |2559| 
        MOV       AL,*-SP[50]           ; [CPU_] |2559| 
	.dwpsn	file "../Source/prod.c",line 2561,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2561| 
        ; branchcc occurs ; [] |2561| 
        MOV       AL,*-SP[40]           ; [CPU_] 
        CMP       AL,*-SP[50]           ; [CPU_] |2561| 
        B         $C$L528,LO            ; [CPU_] |2561| 
        ; branchcc occurs ; [] |2561| 
	.dwpsn	file "../Source/prod.c",line 2565,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2565| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2565| 
        ; call occurs [#_scia_puts] ; [] |2565| 
	.dwpsn	file "../Source/prod.c",line 2567,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2567| 
	.dwpsn	file "../Source/prod.c",line 2565,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2565| 
	.dwpsn	file "../Source/prod.c",line 2567,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2567| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2572,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2572| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2572| 
        MOV       AL,#1024              ; [CPU_] |2572| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2572| 
        ; call occurs [#_scia_getparam] ; [] |2572| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2574,column 8,is_stmt,isa 0
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_atoi")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2574| 
        ; call occurs [#_atoi] ; [] |2574| 
        MOV       *-SP[40],AL           ; [CPU_] |2574| 
        CMPB      AL,#0                 ; [CPU_] |2574| 
        B         $C$L527,LT            ; [CPU_] |2574| 
        ; branchcc occurs ; [] |2574| 
        CMPB      AL,#6                 ; [CPU_] |2574| 
        B         $C$L527,GEQ           ; [CPU_] |2574| 
        ; branchcc occurs ; [] |2574| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2580,column 7,is_stmt,isa 0
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2580| 
        ; call occurs [#_scia_puts] ; [] |2580| 
	.dwpsn	file "../Source/prod.c",line 2581,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2581| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2581| 
        ; call occurs [#_scia_puts] ; [] |2581| 
        MOV       AL,*-SP[40]           ; [CPU_] |2581| 
	.dwpsn	file "../Source/prod.c",line 2584,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2584| 
        MOVL      XAR0,#62              ; [CPU_] |2584| 
	.dwpsn	file "../Source/prod.c",line 2582,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2582| 
	.dwpsn	file "../Source/prod.c",line 2584,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2584| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2584| 
        MOV       *-SP[3],AL            ; [CPU_] |2584| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2584| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2584| 
        ADDL      ACC,XAR6              ; [CPU_] |2584| 
        MOVL      XAR4,ACC              ; [CPU_] |2584| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2584| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2584| 
        MOVB      AL,#1                 ; [CPU_] |2584| 
        ADD       AL,*-SP[50]           ; [CPU_] |2584| 
        MOV       *-SP[7],AL            ; [CPU_] |2584| 
        MOV       AL,*-SP[40]           ; [CPU_] |2584| 
        MOV       *-SP[8],AL            ; [CPU_] |2584| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2584| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2584| 
        MOVL      XAR4,XAR1             ; [CPU_] |2584| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_sprintf")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2584| 
        ; call occurs [#_sprintf] ; [] |2584| 
        MOVL      XAR4,XAR1             ; [CPU_] |2584| 
	.dwpsn	file "../Source/prod.c",line 2587,column 7,is_stmt,isa 0
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2587| 
        ; call occurs [#_scia_puts] ; [] |2587| 
	.dwpsn	file "../Source/prod.c",line 2622,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2622| 
        ; branch occurs ; [] |2622| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2578,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2578| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2578| 
        ; call occurs [#_scia_puts] ; [] |2578| 
	.dwpsn	file "../Source/prod.c",line 2571,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2571| 
        ; branch occurs ; [] |2571| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2563,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2563| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2563| 
        ; call occurs [#_scia_puts] ; [] |2563| 
	.dwpsn	file "../Source/prod.c",line 2555,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2555| 
        ; branch occurs ; [] |2555| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2512,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2512| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2512| 
        ; call occurs [#_scia_puts] ; [] |2512| 
	.dwpsn	file "../Source/prod.c",line 2504,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2504| 
        ; branch occurs ; [] |2504| 
$C$L530:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1602,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1602| 
        B         $C$L625,LO            ; [CPU_] |1602| 
        ; branchcc occurs ; [] |1602| 
	.dwpsn	file "../Source/prod.c",line 1607,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1607| 
        CMPB      AL,#86                ; [CPU_] |1607| 
        B         $C$L531,EQ            ; [CPU_] |1607| 
        ; branchcc occurs ; [] |1607| 
        CMPB      AL,#77                ; [CPU_] |1607| 
        B         $C$L531,EQ            ; [CPU_] |1607| 
        ; branchcc occurs ; [] |1607| 
        CMPB      AL,#83                ; [CPU_] |1607| 
        B         $C$L625,NEQ           ; [CPU_] |1607| 
        ; branchcc occurs ; [] |1607| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1610,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1610| 
        MOV       *-SP[39],AL           ; [CPU_] |1610| 
	.dwpsn	file "../Source/prod.c",line 1612,column 5,is_stmt,isa 0
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1612| 
        ; call occurs [#_lcd_clear] ; [] |1612| 
	.dwpsn	file "../Source/prod.c",line 1613,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1613| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1613| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1613| 
        ; call occurs [#_lcd_puts] ; [] |1613| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1619,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1619| 
        MOVL      XAR0,#44              ; [CPU_] |1619| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1619| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1619| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1619| 
        MOVL      XAR4,XAR1             ; [CPU_] |1619| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_sprintf")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1619| 
        ; call occurs [#_sprintf] ; [] |1619| 
        MOVL      XAR4,XAR1             ; [CPU_] |1619| 
	.dwpsn	file "../Source/prod.c",line 1620,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1620| 
        MOV       AL,#1024              ; [CPU_] |1620| 
        MOVL      XAR5,XAR1             ; [CPU_] |1620| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1620| 
        ; call occurs [#_scia_getparam] ; [] |1620| 
	.dwpsn	file "../Source/prod.c",line 1621,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1621| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_atoi")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1621| 
        ; call occurs [#_atoi] ; [] |1621| 
        MOV       *-SP[50],AL           ; [CPU_] |1621| 
	.dwpsn	file "../Source/prod.c",line 1622,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1622| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1622| 
        ; call occurs [#_scia_puts] ; [] |1622| 
        MOV       AL,*-SP[50]           ; [CPU_] |1622| 
	.dwpsn	file "../Source/prod.c",line 1624,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1624| 
        CMPB      AL,#4                 ; [CPU_] |1624| 
        B         $C$L590,HIS           ; [CPU_] |1624| 
        ; branchcc occurs ; [] |1624| 
	.dwpsn	file "../Source/prod.c",line 1628,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1628| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1628| 
        ; call occurs [#_scia_puts] ; [] |1628| 
	.dwpsn	file "../Source/prod.c",line 1629,column 5,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |1629| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1634,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1634| 
        MOVL      XAR0,#44              ; [CPU_] |1634| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1634| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1634| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1634| 
        MOVL      XAR4,XAR1             ; [CPU_] |1634| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_sprintf")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1634| 
        ; call occurs [#_sprintf] ; [] |1634| 
        MOVL      XAR4,XAR1             ; [CPU_] |1634| 
	.dwpsn	file "../Source/prod.c",line 1635,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1635| 
        MOV       AL,#1024              ; [CPU_] |1635| 
        MOVL      XAR5,XAR1             ; [CPU_] |1635| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1635| 
        ; call occurs [#_scia_getparam] ; [] |1635| 
	.dwpsn	file "../Source/prod.c",line 1636,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1636| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_atoi")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1636| 
        ; call occurs [#_atoi] ; [] |1636| 
        MOV       *-SP[49],AL           ; [CPU_] |1636| 
	.dwpsn	file "../Source/prod.c",line 1637,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1637| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1637| 
        ; call occurs [#_scia_puts] ; [] |1637| 
        MOV       AL,*-SP[49]           ; [CPU_] |1637| 
	.dwpsn	file "../Source/prod.c",line 1641,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1641| 
        CMPB      AL,#20                ; [CPU_] |1641| 
        B         $C$L589,HIS           ; [CPU_] |1641| 
        ; branchcc occurs ; [] |1641| 
	.dwpsn	file "../Source/prod.c",line 1645,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1645| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1645| 
        ; call occurs [#_scia_puts] ; [] |1645| 
	.dwpsn	file "../Source/prod.c",line 1649,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1649| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1649| 
        MOVL      XAR0,#44              ; [CPU_] |1649| 
	.dwpsn	file "../Source/prod.c",line 1645,column 5,is_stmt,isa 0
        MOV       AH,*-SP[49]           ; [CPU_] |1645| 
	.dwpsn	file "../Source/prod.c",line 1649,column 5,is_stmt,isa 0
        ADD       AL,*-SP[50]           ; [CPU_] |1649| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1649| 
        MOV       *-SP[3],AL            ; [CPU_] |1649| 
        MOV       *-SP[4],AH            ; [CPU_] |1649| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1649| 
        DEC       *-SP[49]              ; [CPU_] |1649| 
        MOV       *-SP[51],AH           ; [CPU_] |1649| 
        MOV       *-SP[52],AL           ; [CPU_] |1649| 
        MOVL      XAR4,XAR1             ; [CPU_] |1649| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_sprintf")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1649| 
        ; call occurs [#_sprintf] ; [] |1649| 
	.dwpsn	file "../Source/prod.c",line 1650,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1650| 
        MOVL      XAR4,XAR1             ; [CPU_] |1650| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1650| 
        ; call occurs [#_lcd_puts] ; [] |1650| 
	.dwpsn	file "../Source/prod.c",line 1654,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1654| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1654| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1654| 
        MOVL      XAR4,XAR1             ; [CPU_] |1654| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_sprintf")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1654| 
        ; call occurs [#_sprintf] ; [] |1654| 
	.dwpsn	file "../Source/prod.c",line 1655,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1655| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1655| 
        MOVL      XAR4,XAR1             ; [CPU_] |1655| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1655| 
        ; call occurs [#_scia_getparam] ; [] |1655| 
        CMPB      AL,#15                ; [CPU_] |1655| 
        B         $C$L534,LOS           ; [CPU_] |1655| 
        ; branchcc occurs ; [] |1655| 
	.dwpsn	file "../Source/prod.c",line 1659,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1659| 
        MOVB      XAR0,#15              ; [CPU_] |1659| 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1658| 
	.dwpsn	file "../Source/prod.c",line 1659,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1659| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1661,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1661| 
        MOVL      XAR0,#36              ; [CPU_] |1661| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1661| 
        ADD       AH,AL                 ; [CPU_] |1661| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1661| 
        MOVU      ACC,AH                ; [CPU_] |1661| 
        MOVL      XAR5,XAR1             ; [CPU_] |1661| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_memcpy")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1661| 
        ; call occurs [#_memcpy] ; [] |1661| 
        MOVL      XAR4,XAR1             ; [CPU_] |1661| 
	.dwpsn	file "../Source/prod.c",line 1662,column 5,is_stmt,isa 0
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1662| 
        ; call occurs [#_scia_puts] ; [] |1662| 
	.dwpsn	file "../Source/prod.c",line 1663,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1663| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1663| 
        ; call occurs [#_scia_puts] ; [] |1663| 
	.dwpsn	file "../Source/prod.c",line 1667,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1667| 
        MOVL      XAR0,#44              ; [CPU_] |1667| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1667| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1667| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1667| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_sprintf")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1667| 
        ; call occurs [#_sprintf] ; [] |1667| 
        MOVL      XAR0,#44              ; [CPU_] |1667| 
	.dwpsn	file "../Source/prod.c",line 1668,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1668| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1668| 
	.dwpsn	file "../Source/prod.c",line 1667,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1667| 
	.dwpsn	file "../Source/prod.c",line 1668,column 5,is_stmt,isa 0
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1668| 
        ; call occurs [#_scia_getparam] ; [] |1668| 
        CMPB      AL,#15                ; [CPU_] |1668| 
        B         $C$L535,LOS           ; [CPU_] |1668| 
        ; branchcc occurs ; [] |1668| 
	.dwpsn	file "../Source/prod.c",line 1672,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1672| 
        MOVB      XAR0,#15              ; [CPU_] |1672| 
	.dwpsn	file "../Source/prod.c",line 1671,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1671| 
	.dwpsn	file "../Source/prod.c",line 1672,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1672| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1674,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1674| 
        MOVL      XAR0,#60              ; [CPU_] |1674| 
        MOVL      XAR5,XAR1             ; [CPU_] |1674| 
        ADD       AH,AL                 ; [CPU_] |1674| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1674| 
        MOVU      ACC,AH                ; [CPU_] |1674| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_memcpy")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1674| 
        ; call occurs [#_memcpy] ; [] |1674| 
        MOVL      XAR4,XAR1             ; [CPU_] |1674| 
	.dwpsn	file "../Source/prod.c",line 1675,column 5,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1675| 
        ; call occurs [#_scia_puts] ; [] |1675| 
	.dwpsn	file "../Source/prod.c",line 1676,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1676| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1676| 
        ; call occurs [#_scia_puts] ; [] |1676| 
        MOVL      XAR0,#70              ; [CPU_] |1676| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1676| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1679,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1679| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[53],AL           ; [CPU_] |1679| 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1680| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1680| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1680| 
        MOV       *-SP[3],AL            ; [CPU_] |1680| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1680| 
        MOVL      *-SP[56],XAR4         ; [CPU_] |1680| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1680| 
        MOVL      XAR4,XAR1             ; [CPU_] |1680| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_sprintf")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1680| 
        ; call occurs [#_sprintf] ; [] |1680| 
	.dwpsn	file "../Source/prod.c",line 1679,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1679| 
        INC       *-SP[53]              ; [CPU_] |1679| 
        MOV       AL,*-SP[53]           ; [CPU_] |1679| 
        CMPB      AL,#7                 ; [CPU_] |1679| 
        B         $C$L536,LT            ; [CPU_] |1679| 
        ; branchcc occurs ; [] |1679| 
	.dwpsn	file "../Source/prod.c",line 1682,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1682| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1682| 
        MOVB      XAR1,#54              ; [CPU_] |1682| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1682| 
	.dwpsn	file "../Source/prod.c",line 1683,column 5,is_stmt,isa 0
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1683| 
        ; call occurs [#_scia_puts] ; [] |1683| 
	.dwpsn	file "../Source/prod.c",line 1684,column 5,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1684| 
        MOV       AL,#1024              ; [CPU_] |1684| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1684| 
        MOVL      XAR5,XAR1             ; [CPU_] |1684| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1684| 
        ; call occurs [#_scia_getparam] ; [] |1684| 
        MOVL      XAR4,XAR1             ; [CPU_] |1684| 
	.dwpsn	file "../Source/prod.c",line 1686,column 5,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_atoi")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1686| 
        ; call occurs [#_atoi] ; [] |1686| 
        MOVB      XAR0,#42              ; [CPU_] |1686| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1686| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1686| 
	.dwpsn	file "../Source/prod.c",line 1688,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1688| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1688| 
        CMPB      AL,#6                 ; [CPU_] |1688| 
        B         $C$L537,GT            ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
        CMPB      AL,#6                 ; [CPU_] |1688| 
        B         $C$L540,EQ            ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
        CMPB      AL,#1                 ; [CPU_] |1688| 
        B         $C$L543,LOS           ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
        MOV       AH,AL                 ; [CPU_] |1688| 
        ADDB      AH,#-2                ; [CPU_] |1688| 
        CMPB      AH,#2                 ; [CPU_] |1688| 
        B         $C$L542,LOS           ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
        CMPB      AL,#5                 ; [CPU_] |1688| 
        B         $C$L541,EQ            ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
        B         $C$L538,UNC           ; [CPU_] |1688| 
        ; branch occurs ; [] |1688| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1688| 
        ADDB      AH,#-7                ; [CPU_] |1688| 
        CMPB      AH,#1                 ; [CPU_] |1688| 
        B         $C$L539,LOS           ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
        CMPB      AL,#15                ; [CPU_] |1688| 
        B         $C$L539,EQ            ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1710,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1710| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1710| 
	.dwpsn	file "../Source/prod.c",line 1711,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1711| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1711| 
        ; call occurs [#_scia_puts] ; [] |1711| 
	.dwpsn	file "../Source/prod.c",line 1712,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1712| 
        ; branch occurs ; [] |1712| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1707,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1707| 
	.dwpsn	file "../Source/prod.c",line 1708,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1708| 
        ; branch occurs ; [] |1708| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1702| 
	.dwpsn	file "../Source/prod.c",line 1703,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1703| 
        ; branch occurs ; [] |1703| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1699| 
	.dwpsn	file "../Source/prod.c",line 1700,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1700| 
        ; branch occurs ; [] |1700| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1696,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1696| 
	.dwpsn	file "../Source/prod.c",line 1697,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1697| 
        ; branch occurs ; [] |1697| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1691,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1691| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1714,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1714| 
        MOVL      XAR4,XAR7             ; [CPU_] |1714| 
        MOVB      XAR0,#43              ; [CPU_] |1714| 
        ADDB      XAR7,#42              ; [CPU_] |1714| 
        MOV       AL,*XAR7              ; [CPU_] |1714| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1714| 
	.dwpsn	file "../Source/prod.c",line 1715,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1715| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1715| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1715| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1715| 
	.dwpsn	file "../Source/prod.c",line 1717,column 5,is_stmt,isa 0
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1717| 
        ; call occurs [#_scia_puts] ; [] |1717| 
	.dwpsn	file "../Source/prod.c",line 1718,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1718| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1718| 
        ; call occurs [#_scia_puts] ; [] |1718| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1723| 
        MOVL      XAR5,XAR1             ; [CPU_] |1723| 
        MOV       AL,#1024              ; [CPU_] |1723| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1723| 
        ; call occurs [#_scia_getparam] ; [] |1723| 
        MOVL      XAR4,XAR1             ; [CPU_] |1723| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_strtod")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1724,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1724| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1724| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1724,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1724| 
	.dwpsn	file "../Source/prod.c",line 1726,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1726| 
        MOV       AH,#0                 ; [CPU_] |1726| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1726| 
        MOVL      ACC,XAR3              ; [CPU_] |1726| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1726| 
        ; call occurs [#FS$$CMP] ; [] |1726| 
        CMPB      AL,#0                 ; [CPU_] |1726| 
        B         $C$L588,EQ            ; [CPU_] |1726| 
        ; branchcc occurs ; [] |1726| 
	.dwpsn	file "../Source/prod.c",line 1730,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1730| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1730| 
        MOVB      XAR1,#142             ; [CPU_] |1730| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1730| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1730| 
	.dwpsn	file "../Source/prod.c",line 1731,column 5,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1731| 
        ; call occurs [#_scia_puts] ; [] |1731| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1732| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1732| 
        ; call occurs [#_scia_puts] ; [] |1732| 
        MOV       AL,*-SP[50]           ; [CPU_] |1732| 
	.dwpsn	file "../Source/prod.c",line 1734,column 5,is_stmt,isa 0
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_tagid")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1734| 
        ; call occurs [#_tagid] ; [] |1734| 
        MOVL      XAR0,#36              ; [CPU_] |1734| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1734| 
        MOVL      XAR4,XAR5             ; [CPU_] |1734| 
        ADDB      XAR4,#32              ; [CPU_] |1734| 
	.dwpsn	file "../Source/prod.c",line 1736,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1736| 
	.dwpsn	file "../Source/prod.c",line 1734,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1734| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1734| 
	.dwpsn	file "../Source/prod.c",line 1736,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1736| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1736| 
        MOV       *-SP[2],#0            ; [CPU_] |1736| 
        MOV       *-SP[1],#0            ; [CPU_] |1736| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1736| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1736| 
        MOVL      P,XAR4                ; [CPU_] |1736| 
        MOVL      ACC,XAR5              ; [CPU_] |1736| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1157, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1736| 
        ; call occurs [#ULL$$CMP] ; [] |1736| 
        CMPB      AL,#0                 ; [CPU_] |1736| 
        B         $C$L546,NEQ           ; [CPU_] |1736| 
        ; branchcc occurs ; [] |1736| 
	.dwpsn	file "../Source/prod.c",line 1737,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1737| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1737| 
	.dwpsn	file "../Source/prod.c",line 1738,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1738| 
        ; branch occurs ; [] |1738| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1739,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1739| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1739| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1739| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1739| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1739| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_sprintf")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1739| 
        ; call occurs [#_sprintf] ; [] |1739| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1741,column 5,is_stmt,isa 0
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1741| 
        ; call occurs [#_scia_puts] ; [] |1741| 
        MOV       AL,*-SP[39]           ; [CPU_] |1741| 
	.dwpsn	file "../Source/prod.c",line 1743,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1743| 
        B         $C$L561,EQ            ; [CPU_] |1743| 
        ; branchcc occurs ; [] |1743| 
        CMPB      AL,#83                ; [CPU_] |1743| 
        B         $C$L553,EQ            ; [CPU_] |1743| 
        ; branchcc occurs ; [] |1743| 
        CMPB      AL,#86                ; [CPU_] |1743| 
        B         $C$L618,NEQ           ; [CPU_] |1743| 
        ; branchcc occurs ; [] |1743| 
	.dwpsn	file "../Source/prod.c",line 1748,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1748| 
        MOVB      AL,#40                ; [CPU_] |1748| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1748| 
        ; call occurs [#_lcd_puts] ; [] |1748| 
	.dwpsn	file "../Source/prod.c",line 1750,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1750| 
        MOVB      XAR0,#36              ; [CPU_] |1750| 
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1753| 
	.dwpsn	file "../Source/prod.c",line 1750,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1750| 
	.dwpsn	file "../Source/prod.c",line 1751,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1751| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1751| 
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1753| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1753| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1753| 
        MOVL      XAR0,#70              ; [CPU_] |1753| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1753| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1753| 
        MOV       ACC,AL << 1           ; [CPU_] |1753| 
        ADDL      ACC,XAR6              ; [CPU_] |1753| 
        MOVL      XAR4,ACC              ; [CPU_] |1753| 
        MOVL      XAR0,#44              ; [CPU_] |1753| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1753| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1753| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_sprintf")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1753| 
        ; call occurs [#_sprintf] ; [] |1753| 
        MOVL      XAR0,#44              ; [CPU_] |1753| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1755| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1753| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1755| 
        ; call occurs [#_scia_getparam] ; [] |1755| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1755| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_strtod")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1756,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1756| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1756,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1756| 
	.dwpsn	file "../Source/prod.c",line 1757,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1757| 
        MOV       AH,#0                 ; [CPU_] |1757| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1757| 
        MOVL      ACC,XAR6              ; [CPU_] |1757| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1757| 
        ; call occurs [#FS$$CMP] ; [] |1757| 
        CMPB      AL,#0                 ; [CPU_] |1757| 
        B         $C$L548,NEQ           ; [CPU_] |1757| 
        ; branchcc occurs ; [] |1757| 
	.dwpsn	file "../Source/prod.c",line 1758,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1758| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1758| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1758| 
$C$L548:    
        MOVL      XAR1,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1760,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1760| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1760| 
        ; call occurs [#_scia_puts] ; [] |1760| 
	.dwpsn	file "../Source/prod.c",line 1761,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1761| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1761| 
        ; call occurs [#_scia_puts] ; [] |1761| 
	.dwpsn	file "../Source/prod.c",line 1763,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1763| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1763| 
        MOVL      XAR5,XAR1             ; [CPU_] |1763| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1763| 
        ; call occurs [#_scia_getparam] ; [] |1763| 
	.dwpsn	file "../Source/prod.c",line 1766,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1766| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1766| 
        ; call occurs [#_scia_puts] ; [] |1766| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1769| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1769| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1770| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1770| 
        MOVB      ACC,#0                ; [CPU_] |1770| 
        SUBB      ACC,#1                ; [CPU_] |1770| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1770| 
        B         $C$L551,EQ            ; [CPU_] |1770| 
        ; branchcc occurs ; [] |1770| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1771,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1771| 
        ; branch occurs ; [] |1771| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1772,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1772| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_delay_us")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1772| 
        ; call occurs [#_delay_us] ; [] |1772| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1771,column 14,is_stmt,isa 0
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1771| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1771| 
        CMPB      AL,#0                 ; [CPU_] |1771| 
        B         $C$L549,EQ            ; [CPU_] |1771| 
        ; branchcc occurs ; [] |1771| 
	.dwpsn	file "../Source/prod.c",line 1775,column 7,is_stmt,isa 0
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1775| 
        ; call occurs [#_ad7738_getraw] ; [] |1775| 
	.dwpsn	file "../Source/prod.c",line 1776,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1776| 
        ADDL      XAR4,ACC              ; [CPU_] |1776| 
        MOVL      XAR0,#20              ; [CPU_] |1776| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1776| 
        MOVL      XAR0,#20              ; [CPU_] |1776| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1776| 
        ASR64     ACC:P,16              ; [CPU_] |1776| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1776| 
        MOVL      XAR0,#20              ; [CPU_] |1776| 
        ASR64     ACC:P,16              ; [CPU_] |1776| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1776| 
        MOVL      XAR0,#20              ; [CPU_] |1776| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1776| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1776| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1776| 
        MOVL      *-SP[32],P            ; [CPU_] |1776| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1776| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1770| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1770| 
        MOVB      ACC,#0                ; [CPU_] |1770| 
        SUBB      ACC,#1                ; [CPU_] |1770| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1770| 
        B         $C$L550,NEQ           ; [CPU_] |1770| 
        ; branchcc occurs ; [] |1770| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1778| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1778| 
        ; call occurs [#_scia_puts] ; [] |1778| 
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1780| 
        MOVL      XAR0,#52              ; [CPU_] |1780| 
        MOVL      ACC,XAR1              ; [CPU_] |1780| 
        ADDB      ACC,#96               ; [CPU_] |1780| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1780| 
        MOVL      XAR0,#40              ; [CPU_] |1780| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1780| 
        MOV       T,*-SP[50]            ; [CPU_] |1780| 
        MOVB      AL,#10                ; [CPU_] |1780| 
        MPYU      ACC,T,AL              ; [CPU_] |1780| 
        ADDL      ACC,XAR6              ; [CPU_] |1780| 
        ADDB      ACC,#42               ; [CPU_] |1780| 
        MOVL      XAR4,ACC              ; [CPU_] |1780| 
        MOVL      XAR0,#42              ; [CPU_] |1780| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1780| 
$C$L552:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1780| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1780| 
        ; call occurs [#FS$$NEG] ; [] |1780| 
        MOVB      XAR0,#96              ; [CPU_] |1780| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1780| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1780| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1780| 
        ; call occurs [#FS$$MPY] ; [] |1780| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1780| 
        MOVL      P,*-SP[32]            ; [CPU_] |1780| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1780| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1780| 
        ; call occurs [#LL$$TOFS] ; [] |1780| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1780| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1780| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1780| 
        ; call occurs [#FS$$MPY] ; [] |1780| 
        MOVL      XAR6,ACC              ; [CPU_] |1780| 
        MOV       AL,#16384             ; [CPU_] |1780| 
        MOV       AH,#17948             ; [CPU_] |1780| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1780| 
        MOVL      ACC,XAR6              ; [CPU_] |1780| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1780| 
        ; call occurs [#FS$$DIV] ; [] |1780| 
        MOVB      XAR0,#118             ; [CPU_] |1780| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1780| 
	.dwpsn	file "../Source/prod.c",line 1782,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |1782| 
        ; branch occurs ; [] |1782| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1865| 
        MOVB      AL,#40                ; [CPU_] |1865| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1865| 
        ; call occurs [#_lcd_puts] ; [] |1865| 
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1867| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1867| 
	.dwpsn	file "../Source/prod.c",line 1870,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1870| 
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1867| 
	.dwpsn	file "../Source/prod.c",line 1868,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1868| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1868| 
	.dwpsn	file "../Source/prod.c",line 1870,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1870| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1870| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1870| 
        MOVL      XAR0,#70              ; [CPU_] |1870| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1870| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1870| 
        MOV       ACC,AL << 1           ; [CPU_] |1870| 
        ADDL      ACC,XAR6              ; [CPU_] |1870| 
        MOVL      XAR4,ACC              ; [CPU_] |1870| 
        MOVL      XAR0,#44              ; [CPU_] |1870| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1870| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1870| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1870| 
        MOVL      XAR4,XAR1             ; [CPU_] |1870| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_sprintf")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1870| 
        ; call occurs [#_sprintf] ; [] |1870| 
        MOVL      XAR4,XAR1             ; [CPU_] |1870| 
	.dwpsn	file "../Source/prod.c",line 1873,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1873| 
        MOV       AL,#1024              ; [CPU_] |1873| 
        MOVL      XAR5,XAR1             ; [CPU_] |1873| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1873| 
        ; call occurs [#_scia_getparam] ; [] |1873| 
	.dwpsn	file "../Source/prod.c",line 1874,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1874| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1874| 
        ; call occurs [#_scia_puts] ; [] |1874| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_strtod")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1876,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1876| 
        MOV       AH,#0                 ; [CPU_] |1876| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1876| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1876| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1876| 
        ; call occurs [#FS$$CMP] ; [] |1876| 
        CMPB      AL,#0                 ; [CPU_] |1876| 
        B         $C$L554,NEQ           ; [CPU_] |1876| 
        ; branchcc occurs ; [] |1876| 
	.dwpsn	file "../Source/prod.c",line 1877,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1877| 
        MOV       AH,#16314             ; [CPU_] |1877| 
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1878| 
	.dwpsn	file "../Source/prod.c",line 1877,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1877| 
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1878| 
        ; call occurs [#_scia_puts] ; [] |1878| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1880,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1880| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1880| 
        ; call occurs [#_scia_puts] ; [] |1880| 
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1882| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1882| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1882| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1882| 
        ; call occurs [#_scia_getparam] ; [] |1882| 
	.dwpsn	file "../Source/prod.c",line 1885,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1885| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1885| 
        ; call occurs [#_scia_puts] ; [] |1885| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1887,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1887| 
        MOV       *-SP[40],AL           ; [CPU_] |1887| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1888,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1888| 
        B         $C$L557,LEQ           ; [CPU_] |1888| 
        ; branchcc occurs ; [] |1888| 
	.dwpsn	file "../Source/prod.c",line 1890,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1890| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1890| 
        ; call occurs [#_shunt_switch] ; [] |1890| 
        MOV       *-SP[39],#49          ; [CPU_] 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1892,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1892| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_delay_us")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1892| 
        ; call occurs [#_delay_us] ; [] |1892| 
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1892| 
	.dwpsn	file "../Source/prod.c",line 1891,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1891| 
        MOVZ      AR0,AR6               ; [CPU_] |1891| 
        MOV       *-SP[39],AR6          ; [CPU_] |1891| 
        CMP       AR0,#-1               ; [CPU_] |1891| 
        B         $C$L556,NEQ           ; [CPU_] |1891| 
        ; branchcc occurs ; [] |1891| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1895,column 8,is_stmt,isa 0
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1895| 
        ; call occurs [#_maf_rst] ; [] |1895| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1897,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1897| 
        SPM       #0                    ; [CPU_] 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_delay_us")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1897| 
        ; call occurs [#_delay_us] ; [] |1897| 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1900| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1901| 
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1900| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1900| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1902| 
        MOVB      ACC,#0                ; [CPU_] |1902| 
        SUBB      ACC,#1                ; [CPU_] |1902| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1902| 
        B         $C$L559,EQ            ; [CPU_] |1902| 
        ; branchcc occurs ; [] |1902| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1903,column 15,is_stmt,isa 0
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1903| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1903| 
        CMPB      AL,#0                 ; [CPU_] |1903| 
        B         $C$L560,EQ            ; [CPU_] |1903| 
        ; branchcc occurs ; [] |1903| 
	.dwpsn	file "../Source/prod.c",line 1907,column 8,is_stmt,isa 0
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1907| 
        ; call occurs [#_ad7738_getraw] ; [] |1907| 
	.dwpsn	file "../Source/prod.c",line 1908,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1908| 
        ADDL      XAR4,ACC              ; [CPU_] |1908| 
        MOVL      XAR0,#18              ; [CPU_] |1908| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1908| 
        MOVL      XAR0,#18              ; [CPU_] |1908| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1908| 
        ASR64     ACC:P,16              ; [CPU_] |1908| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1908| 
        MOVL      XAR0,#18              ; [CPU_] |1908| 
        ASR64     ACC:P,16              ; [CPU_] |1908| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1908| 
        MOVL      XAR0,#18              ; [CPU_] |1908| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1908| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1908| 
        MOVL      XAR0,#18              ; [CPU_] |1908| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1908| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1908| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1908| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1908| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1902| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1902| 
        MOVB      ACC,#0                ; [CPU_] |1902| 
        SUBB      ACC,#1                ; [CPU_] |1902| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1902| 
        B         $C$L558,NEQ           ; [CPU_] |1902| 
        ; branchcc occurs ; [] |1902| 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 1887,column 18,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1887| 
        ADDB      XAR1,#4               ; [CPU_] |1887| 
        MOV       AL,*-SP[40]           ; [CPU_] |1887| 
        CMPB      AL,#2                 ; [CPU_] |1887| 
        B         $C$L555,LT            ; [CPU_] |1887| 
        ; branchcc occurs ; [] |1887| 
	.dwpsn	file "../Source/prod.c",line 1912,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1912| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1912| 
        ; call occurs [#_shunt_switch] ; [] |1912| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1914| 
        ; call occurs [#_maf_rst] ; [] |1914| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1917,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1917| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1917| 
        ; call occurs [#_scia_puts] ; [] |1917| 
	.dwpsn	file "../Source/prod.c",line 1919,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1919| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1919| 
        MOVB      AL,#10                ; [CPU_] |1919| 
        MOV       T,*-SP[50]            ; [CPU_] |1919| 
        MPYU      ACC,T,AL              ; [CPU_] |1919| 
        ADDL      ACC,XAR6              ; [CPU_] |1919| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1919| 
        MOV       AL,#16384             ; [CPU_] |1919| 
        MOV       AH,#17948             ; [CPU_] |1919| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1919| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1919| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1919| 
        ; call occurs [#FS$$MPY] ; [] |1919| 
        MOVL      XAR1,ACC              ; [CPU_] |1919| 
        MOVL      P,*-SP[28]            ; [CPU_] |1919| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1919| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1919| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1919| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1919| 
        ; call occurs [#LL$$TOFS] ; [] |1919| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1919| 
        MOVB      XAR0,#44              ; [CPU_] |1919| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1919| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1919| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1919| 
        ; call occurs [#FS$$MPY] ; [] |1919| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1919| 
        MOVL      ACC,XAR1              ; [CPU_] |1919| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1919| 
        ; call occurs [#FS$$DIV] ; [] |1919| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1919| 
        MOVB      XAR0,#96              ; [CPU_] |1919| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1919| 
	.dwpsn	file "../Source/prod.c",line 1921,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1921| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1921| 
        MOVL      ACC,XAR1              ; [CPU_] |1921| 
        ADDB      ACC,#96               ; [CPU_] |1921| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1921| 
        ADDB      XAR4,#42              ; [CPU_] |1921| 
        MOVL      XAR0,#42              ; [CPU_] |1921| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1921| 
	.dwpsn	file "../Source/prod.c",line 1923,column 6,is_stmt,isa 0
        B         $C$L552,UNC           ; [CPU_] |1923| 
        ; branch occurs ; [] |1923| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1904,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1904| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_delay_us")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1904| 
        ; call occurs [#_delay_us] ; [] |1904| 
	.dwpsn	file "../Source/prod.c",line 1903,column 15,is_stmt,isa 0
        B         $C$L558,UNC           ; [CPU_] |1903| 
        ; branch occurs ; [] |1903| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1786,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1786| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1791,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1791| 
        MOVL      XAR0,#44              ; [CPU_] |1791| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1791| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1791| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1791| 
        MOVL      XAR4,XAR1             ; [CPU_] |1791| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_sprintf")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1791| 
        ; call occurs [#_sprintf] ; [] |1791| 
        MOVL      XAR4,XAR1             ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1792,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1792| 
        MOV       AL,#1024              ; [CPU_] |1792| 
        MOVL      XAR5,XAR1             ; [CPU_] |1792| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1792| 
        ; call occurs [#_scia_getparam] ; [] |1792| 
        MOVL      XAR4,XAR1             ; [CPU_] |1792| 
	.dwpsn	file "../Source/prod.c",line 1793,column 7,is_stmt,isa 0
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_atoi")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1793| 
        ; call occurs [#_atoi] ; [] |1793| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1793| 
        MOVB      XAR0,#46              ; [CPU_] |1793| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1793| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1793| 
	.dwpsn	file "../Source/prod.c",line 1794,column 7,is_stmt,isa 0
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1794| 
        ; call occurs [#_scia_puts] ; [] |1794| 
	.dwpsn	file "../Source/prod.c",line 1796,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1796| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1796| 
        CMPB      AL,#2                 ; [CPU_] |1796| 
        B         $C$L587,LT            ; [CPU_] |1796| 
        ; branchcc occurs ; [] |1796| 
        CMPB      AL,#12                ; [CPU_] |1796| 
        B         $C$L587,GT            ; [CPU_] |1796| 
        ; branchcc occurs ; [] |1796| 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1801| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1801| 
        ; call occurs [#_scia_puts] ; [] |1801| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1803| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1803| 
        MOVL      XAR0,#44              ; [CPU_] |1803| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1803| 
        ADDB      XAR7,#46              ; [CPU_] |1803| 
        MOV       AL,*XAR7              ; [CPU_] |1803| 
        MOV       *-SP[3],AL            ; [CPU_] |1803| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1803| 
        MOVL      XAR4,XAR1             ; [CPU_] |1803| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_sprintf")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1803| 
        ; call occurs [#_sprintf] ; [] |1803| 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1804| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1803| 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1804| 
        ; call occurs [#_lcd_puts] ; [] |1804| 
	.dwpsn	file "../Source/prod.c",line 1807,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1807| 
	.dwpsn	file "../Source/prod.c",line 1807,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1807| 
	.dwpsn	file "../Source/prod.c",line 1807,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1807| 
        ; branch occurs ; [] |1807| 
$C$L563:    
        MOV       AL,*-SP[40]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1808,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1808| 
        SUB       AL,*-SP[39]           ; [CPU_] |1808| 
        ADDB      AL,#1                 ; [CPU_] |1808| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1808| 
        ; call occurs [#I$$TOFS] ; [] |1808| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1808| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1808| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1808| 
        ; call occurs [#FS$$MPY] ; [] |1808| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1808| 
        MOV       AL,*-SP[39]           ; [CPU_] |1808| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1808| 
        ; call occurs [#I$$TOFS] ; [] |1808| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1808| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1808| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1808| 
        ; call occurs [#FS$$DIV] ; [] |1808| 
        MOVZ      AR6,*-SP[40]          ; [CPU_] |1808| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1808| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1808| 
        ADDL      ACC,XAR1              ; [CPU_] |1808| 
        MOVL      XAR4,ACC              ; [CPU_] |1808| 
        MOVB      XAR0,#48              ; [CPU_] |1808| 
	.dwpsn	file "../Source/prod.c",line 1807,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1807| 
	.dwpsn	file "../Source/prod.c",line 1808,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1808| 
	.dwpsn	file "../Source/prod.c",line 1807,column 38,is_stmt,isa 0
        MOV       *-SP[40],AR6          ; [CPU_] |1807| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1807,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1807| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1807| 
        MOV       *-SP[39],AL           ; [CPU_] |1807| 
        CMP       AL,*-SP[40]           ; [CPU_] |1807| 
        B         $C$L563,GT            ; [CPU_] |1807| 
        ; branchcc occurs ; [] |1807| 
	.dwpsn	file "../Source/prod.c",line 1813,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1813| 
        B         $C$L567,UNC           ; [CPU_] |1813| 
        ; branch occurs ; [] |1813| 
$C$L565:    
        MOVZ      AR6,*-SP[40]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1814,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1814| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1814| 
        MOVL      XAR0,#44              ; [CPU_] |1814| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1814| 
        ADDL      ACC,XAR1              ; [CPU_] |1814| 
        ADDB      ACC,#48               ; [CPU_] |1814| 
        MOVL      XAR1,ACC              ; [CPU_] |1814| 
        MOVB      AL,#1                 ; [CPU_] |1814| 
        ADD       AL,AR6                ; [CPU_] |1814| 
        MOV       *-SP[3],AL            ; [CPU_] |1814| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1814| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1814| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1814| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_sprintf")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1814| 
        ; call occurs [#_sprintf] ; [] |1814| 
        MOVL      XAR0,#44              ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1816,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1816| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1814,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1816,column 7,is_stmt,isa 0
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1816| 
        ; call occurs [#_scia_getparam] ; [] |1816| 
        CMPB      AL,#0                 ; [CPU_] |1816| 
        B         $C$L566,EQ            ; [CPU_] |1816| 
        ; branchcc occurs ; [] |1816| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_strtod")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1820,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1820| 
$C$L566:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1822,column 7,is_stmt,isa 0
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1822| 
        ; call occurs [#_scia_puts] ; [] |1822| 
	.dwpsn	file "../Source/prod.c",line 1823,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1823| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1823| 
        ; call occurs [#_scia_puts] ; [] |1823| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1813,column 38,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1813| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1813,column 18,is_stmt,isa 0
        CMP       AL,*-SP[40]           ; [CPU_] |1813| 
        B         $C$L565,GT            ; [CPU_] |1813| 
        ; branchcc occurs ; [] |1813| 
	.dwpsn	file "../Source/prod.c",line 1829,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1829| 
        B         $C$L572,UNC           ; [CPU_] |1829| 
        ; branch occurs ; [] |1829| 
$C$L568:    
        MOVZ      AR6,*-SP[40]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1830,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1830| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1830| 
        ADDL      ACC,XAR1              ; [CPU_] |1830| 
        ADDB      ACC,#48               ; [CPU_] |1830| 
        MOVL      XAR1,ACC              ; [CPU_] |1830| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1830| 
        MOVL      XAR0,#70              ; [CPU_] |1830| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1830| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1830| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1830| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1830| 
        ANDB      AL,#0x0f              ; [CPU_] |1830| 
        MOV       ACC,AL << 1           ; [CPU_] |1830| 
        ADDL      ACC,XAR7              ; [CPU_] |1830| 
        MOVL      XAR4,ACC              ; [CPU_] |1830| 
        MOVL      XAR0,#44              ; [CPU_] |1830| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1830| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1830| 
        MOVB      AL,#1                 ; [CPU_] |1830| 
        ADD       AL,AR6                ; [CPU_] |1830| 
        MOV       *-SP[7],AL            ; [CPU_] |1830| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1830| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_sprintf")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1830| 
        ; call occurs [#_sprintf] ; [] |1830| 
        MOVL      XAR0,#44              ; [CPU_] |1830| 
	.dwpsn	file "../Source/prod.c",line 1834,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1834| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1834| 
	.dwpsn	file "../Source/prod.c",line 1830,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1830| 
	.dwpsn	file "../Source/prod.c",line 1834,column 7,is_stmt,isa 0
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1834| 
        ; call occurs [#_scia_getparam] ; [] |1834| 
	.dwpsn	file "../Source/prod.c",line 1835,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1835| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1835| 
        ; call occurs [#_scia_puts] ; [] |1835| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1838| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1838| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1839| 
        MOVB      ACC,#0                ; [CPU_] |1839| 
        SUBB      ACC,#1                ; [CPU_] |1839| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1839| 
        B         $C$L571,EQ            ; [CPU_] |1839| 
        ; branchcc occurs ; [] |1839| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1840,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1840| 
        ; branch occurs ; [] |1840| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1841,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1841| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_delay_us")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1841| 
        ; call occurs [#_delay_us] ; [] |1841| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1840,column 15,is_stmt,isa 0
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1840| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1840| 
        CMPB      AL,#0                 ; [CPU_] |1840| 
        B         $C$L569,EQ            ; [CPU_] |1840| 
        ; branchcc occurs ; [] |1840| 
	.dwpsn	file "../Source/prod.c",line 1844,column 8,is_stmt,isa 0
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1844| 
        ; call occurs [#_ad7738_getraw] ; [] |1844| 
	.dwpsn	file "../Source/prod.c",line 1845,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1845| 
        ADDL      XAR4,ACC              ; [CPU_] |1845| 
        MOVL      XAR0,#16              ; [CPU_] |1845| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1845| 
        MOVL      XAR0,#16              ; [CPU_] |1845| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1845| 
        ASR64     ACC:P,16              ; [CPU_] |1845| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1845| 
        MOVL      XAR0,#16              ; [CPU_] |1845| 
        ASR64     ACC:P,16              ; [CPU_] |1845| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1845| 
        MOVL      XAR0,#16              ; [CPU_] |1845| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1845| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1845| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1845| 
        MOVL      *-SP[32],P            ; [CPU_] |1845| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1845| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1839| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1839| 
        MOVB      ACC,#0                ; [CPU_] |1839| 
        SUBB      ACC,#1                ; [CPU_] |1839| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1839| 
        B         $C$L570,NEQ           ; [CPU_] |1839| 
        ; branchcc occurs ; [] |1839| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1847,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1847| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1847| 
        ; call occurs [#_scia_puts] ; [] |1847| 
	.dwpsn	file "../Source/prod.c",line 1848,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1848| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1848| 
        MOV       *-SP[2],#0            ; [CPU_] |1848| 
        MOV       *-SP[1],#0            ; [CPU_] |1848| 
        MOVL      P,*-SP[32]            ; [CPU_] |1848| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1848| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1848| 
        ; call occurs [#LL$$DIV] ; [] |1848| 
        ADDB      XAR1,#24              ; [CPU_] |1848| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1829,column 38,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1829| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1829,column 18,is_stmt,isa 0
        CMP       AL,*-SP[40]           ; [CPU_] |1829| 
        B         $C$L568,GT            ; [CPU_] |1829| 
        ; branchcc occurs ; [] |1829| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[50]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1852,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1852| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1852| 
        ; branch occurs ; [] |1852| 
$C$L573:    
        MOV       AL,*-SP[40]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1853,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1853| 
        ADDL      XAR1,ACC              ; [CPU_] |1853| 
        MOVB      XAR0,#48              ; [CPU_] |1853| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1853| 
        MOVB      XAR0,#50              ; [CPU_] |1853| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1853| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1853| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1853| 
        ; call occurs [#FS$$SUB] ; [] |1853| 
        MOVB      XAR0,#74              ; [CPU_] |1853| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1853| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1853| 
        MOVB      XAR0,#72              ; [CPU_] |1853| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1853| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1853| 
        ; call occurs [#L$$TOFS] ; [] |1853| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1853| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1853| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1853| 
        ; call occurs [#FS$$DIV] ; [] |1853| 
        MOVL      XAR0,#42              ; [CPU_] |1853| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1853| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1853| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1853| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1853| 
        ; call occurs [#FS$$DIV] ; [] |1853| 
        MOVB      XAR0,#96              ; [CPU_] |1853| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1853| 
	.dwpsn	file "../Source/prod.c",line 1857,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1857| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1857| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1857| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1857| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1857| 
        ; call occurs [#FS$$MPY] ; [] |1857| 
        MOVB      XAR0,#72              ; [CPU_] |1857| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1857| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1857| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1857| 
        ; call occurs [#L$$TOFS] ; [] |1857| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1857| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1857| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1857| 
        ; call occurs [#FS$$MPY] ; [] |1857| 
        MOVB      XAR0,#48              ; [CPU_] |1857| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1857| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1857| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1857| 
        ; call occurs [#FS$$SUB] ; [] |1857| 
        MOVB      XAR0,#118             ; [CPU_] |1857| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1857| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1852,column 42,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1852| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1861,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1861| 
        CMP       AL,*-SP[40]           ; [CPU_] |1861| 
        B         $C$L573,GT            ; [CPU_] |1861| 
        ; branchcc occurs ; [] |1861| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 1932,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1932| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1932| 
        MOV       AL,#1024              ; [CPU_] |1932| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1932| 
        ; call occurs [#_scia_getparam] ; [] |1932| 
	.dwpsn	file "../Source/prod.c",line 1935,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1935| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1935| 
        ; call occurs [#_scia_puts] ; [] |1935| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |1963| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1937,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1937| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] |1937| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 1938,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1938| 
        B         $C$L578,LEQ           ; [CPU_] |1938| 
        ; branchcc occurs ; [] |1938| 
	.dwpsn	file "../Source/prod.c",line 1940,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1940| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1940| 
        ; call occurs [#_shunt_switch] ; [] |1940| 
        MOV       *-SP[39],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 1942,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1942| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_delay_us")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1942| 
        ; call occurs [#_delay_us] ; [] |1942| 
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1942| 
	.dwpsn	file "../Source/prod.c",line 1941,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1941| 
        MOVZ      AR0,AR6               ; [CPU_] |1941| 
        MOV       *-SP[39],AR6          ; [CPU_] |1941| 
        CMP       AR0,#-1               ; [CPU_] |1941| 
        B         $C$L577,NEQ           ; [CPU_] |1941| 
        ; branchcc occurs ; [] |1941| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1945,column 7,is_stmt,isa 0
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1945| 
        ; call occurs [#_maf_rst] ; [] |1945| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1947| 
        SPM       #0                    ; [CPU_] 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_delay_us")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1947| 
        ; call occurs [#_delay_us] ; [] |1947| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1950| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1951| 
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1950| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1950| 
	.dwpsn	file "../Source/prod.c",line 1952,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1952| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1951| 
	.dwpsn	file "../Source/prod.c",line 1952,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1952| 
        MOVB      ACC,#0                ; [CPU_] |1952| 
        SUBB      ACC,#1                ; [CPU_] |1952| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1952| 
        B         $C$L580,EQ            ; [CPU_] |1952| 
        ; branchcc occurs ; [] |1952| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1953,column 14,is_stmt,isa 0
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1953| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1953| 
        CMPB      AL,#0                 ; [CPU_] |1953| 
        B         $C$L586,EQ            ; [CPU_] |1953| 
        ; branchcc occurs ; [] |1953| 
	.dwpsn	file "../Source/prod.c",line 1957,column 7,is_stmt,isa 0
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1957| 
        ; call occurs [#_ad7738_getraw] ; [] |1957| 
	.dwpsn	file "../Source/prod.c",line 1958,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1958| 
        ADDL      XAR4,ACC              ; [CPU_] |1958| 
        MOVL      XAR0,#14              ; [CPU_] |1958| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1958| 
        MOVL      XAR0,#14              ; [CPU_] |1958| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1958| 
        ASR64     ACC:P,16              ; [CPU_] |1958| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1958| 
        MOVL      XAR0,#14              ; [CPU_] |1958| 
        ASR64     ACC:P,16              ; [CPU_] |1958| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1958| 
        MOVL      XAR0,#14              ; [CPU_] |1958| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1958| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1958| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1958| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1958| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1958| 
	.dwpsn	file "../Source/prod.c",line 1952,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1952| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1952| 
        MOVB      ACC,#0                ; [CPU_] |1952| 
        SUBB      ACC,#1                ; [CPU_] |1952| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1952| 
        B         $C$L579,NEQ           ; [CPU_] |1952| 
        ; branchcc occurs ; [] |1952| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1960| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1960| 
        MOV       *-SP[2],#0            ; [CPU_] |1960| 
        MOV       *-SP[1],#0            ; [CPU_] |1960| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |1960| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |1960| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1960| 
        ; call occurs [#LL$$DIV] ; [] |1960| 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1963| 
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1960| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |1962| 
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1960| 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |1963| 
        CMPB      AL,#2                 ; [CPU_] |1963| 
        B         $C$L583,LEQ           ; [CPU_] |1963| 
        ; branchcc occurs ; [] |1963| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1964,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |1964| 
        ; branch occurs ; [] |1964| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 1965,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |1965| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1964,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |1964| 
        B         $C$L583,HIS           ; [CPU_] |1964| 
        ; branchcc occurs ; [] |1964| 
        MOVB      AL,#1                 ; [CPU_] |1964| 
        ADD       AL,AR4                ; [CPU_] |1964| 
        MOVZ      AR5,AL                ; [CPU_] |1964| 
        MOV       ACC,AR5 << 1          ; [CPU_] |1964| 
        ADDL      ACC,XAR3              ; [CPU_] |1964| 
        MOVL      XAR6,ACC              ; [CPU_] |1964| 
        MOVB      XAR0,#72              ; [CPU_] |1964| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |1964| 
        MOVL      XAR0,#12              ; [CPU_] |1964| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1964| 
        MOVL      XAR0,#12              ; [CPU_] |1964| 
        ASR64     ACC:P,16              ; [CPU_] |1964| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1964| 
        MOVL      XAR0,#12              ; [CPU_] |1964| 
        ASR64     ACC:P,16              ; [CPU_] |1964| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1964| 
        MOVL      *-SP[4],P             ; [CPU_] |1964| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1964| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1964| 
        MOVL      P,*-SP[32]            ; [CPU_] |1964| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1243, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1964| 
        ; call occurs [#LL$$CMP] ; [] |1964| 
        CMPB      AL,#0                 ; [CPU_] |1964| 
        B         $C$L581,GT            ; [CPU_] |1964| 
        ; branchcc occurs ; [] |1964| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1968,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |1968| 
        ADDL      ACC,XAR3              ; [CPU_] |1968| 
        MOVL      XAR4,ACC              ; [CPU_] |1968| 
        MOVB      XAR0,#96              ; [CPU_] |1968| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1968| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1968| 
        MOVL      XAR0,#42              ; [CPU_] |1968| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1968| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1968| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1968| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1968| 
        ; call occurs [#FS$$MPY] ; [] |1968| 
        MOVL      XAR0,#36              ; [CPU_] |1968| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1968| 
        MOVL      P,*XAR1++             ; [CPU_] |1968| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1968| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1968| 
        ; call occurs [#LL$$TOFS] ; [] |1968| 
        MOVL      XAR0,#36              ; [CPU_] |1968| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1968| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1968| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1968| 
        ; call occurs [#FS$$MPY] ; [] |1968| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1968| 
        MOVB      XAR0,#118             ; [CPU_] |1968| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |1968| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1968| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1968| 
        ; call occurs [#FS$$ADD] ; [] |1968| 
        MOVL      XAR0,#38              ; [CPU_] |1968| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1968| 
        MOVL      XAR0,#38              ; [CPU_] |1968| 
        MOVL      *XAR4++,ACC           ; [CPU_] |1968| 
	.dwpsn	file "../Source/prod.c",line 1937,column 17,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1937| 
	.dwpsn	file "../Source/prod.c",line 1968,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1968| 
        MOV       AL,*-SP[40]           ; [CPU_] |1968| 
	.dwpsn	file "../Source/prod.c",line 1937,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1937| 
        B         $C$L576,LT            ; [CPU_] |1937| 
        ; branchcc occurs ; [] |1937| 
	.dwpsn	file "../Source/prod.c",line 1972,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1972| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1972| 
        ; call occurs [#_shunt_switch] ; [] |1972| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1974,column 5,is_stmt,isa 0
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1974| 
        ; call occurs [#_maf_rst] ; [] |1974| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1977,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1977| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1977| 
        ; call occurs [#_scia_puts] ; [] |1977| 
	.dwpsn	file "../Source/prod.c",line 1979,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |1979| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1979| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1979| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1979| 
        ; call occurs [#FS$$SUB] ; [] |1979| 
        MOVL      XAR0,#36              ; [CPU_] |1979| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1979| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1979| 
        MOVB      XAR0,#140             ; [CPU_] |1979| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1979| 
	.dwpsn	file "../Source/prod.c",line 1982,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |1982| 
        MOV       AL,#0                 ; [CPU_] |1982| 
        MOV       AH,#0                 ; [CPU_] |1982| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1983,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |1983| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1983| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1984,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |1984| 
        MOV       AL,#0                 ; [CPU_] |1984| 
        MOV       AH,#0                 ; [CPU_] |1984| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1984| 
	.dwpsn	file "../Source/prod.c",line 1985,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |1985| 
        MOV       AL,*-SP[50]           ; [CPU_] |1985| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1985| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1988,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1988| 
        MOVB      AL,#152               ; [CPU_] |1988| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1988| 
        MOV       T,*-SP[49]            ; [CPU_] |1988| 
        MOVL      XAR7,XAR4             ; [CPU_] |1988| 
        MPYU      ACC,T,AL              ; [CPU_] |1988| 
        ADDL      ACC,XAR6              ; [CPU_] |1988| 
        ADDB      ACC,#82               ; [CPU_] |1988| 
        MOVL      XAR5,ACC              ; [CPU_] |1988| 
        MOVL      XAR0,#42              ; [CPU_] |1988| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1988| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1988| 
        MOV       AL,*-SP[49]           ; [CPU_] |1988| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1991,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |1991| 
	.dwpsn	file "../Source/prod.c",line 1993,column 5,is_stmt,isa 0
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1993| 
        ; call occurs [#_ad7738_setcal] ; [] |1993| 
        MOVL      XAR0,#78              ; [CPU_] |1993| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1993| 
	.dwpsn	file "../Source/prod.c",line 1994,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |1994| 
        MOVL      XAR1,ACC              ; [CPU_] |1994| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1994| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1994| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1994| 
	.dwpsn	file "../Source/prod.c",line 1995,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1995| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1995| 
        ; call occurs [#_ad7738_resetvall] ; [] |1995| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1998,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |1998| 
        MOV       AL,*-SP[52]           ; [CPU_] |1998| 
        MOVL      XAR0,#44              ; [CPU_] |1998| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1998| 
        MOV       *-SP[3],AL            ; [CPU_] |1998| 
        MOV       AL,*-SP[51]           ; [CPU_] |1998| 
        MOV       *-SP[4],AL            ; [CPU_] |1998| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1998| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |1998| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_sprintf")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1998| 
        ; call occurs [#_sprintf] ; [] |1998| 
        MOVL      XAR4,XAR1             ; [CPU_] |1998| 
	.dwpsn	file "../Source/prod.c",line 2000,column 5,is_stmt,isa 0
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2000| 
        ; call occurs [#_scia_puts] ; [] |2000| 
        MOV       AL,*-SP[49]           ; [CPU_] |2000| 
	.dwpsn	file "../Source/prod.c",line 2001,column 5,is_stmt,isa 0
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2001| 
        ; call occurs [#_print_sensor] ; [] |2001| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2004,column 5,is_stmt,isa 0
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2004| 
        ; call occurs [#_lcd_clear] ; [] |2004| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2005,column 5,is_stmt,isa 0
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_update_units")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2005| 
        ; call occurs [#_update_units] ; [] |2005| 
	.dwpsn	file "../Source/prod.c",line 2006,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2006| 
        ; branch occurs ; [] |2006| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 1954,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1954| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_delay_us")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1954| 
        ; call occurs [#_delay_us] ; [] |1954| 
	.dwpsn	file "../Source/prod.c",line 1953,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |1953| 
        ; branch occurs ; [] |1953| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1798,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1798| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1798| 
        ; call occurs [#_scia_puts] ; [] |1798| 
	.dwpsn	file "../Source/prod.c",line 1790,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1790| 
        ; branch occurs ; [] |1790| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1728,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1728| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1728| 
        ; call occurs [#_scia_puts] ; [] |1728| 
	.dwpsn	file "../Source/prod.c",line 1722,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1722| 
        ; branch occurs ; [] |1722| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1643,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1643| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1643| 
        ; call occurs [#_scia_puts] ; [] |1643| 
	.dwpsn	file "../Source/prod.c",line 1633,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1633| 
        ; branch occurs ; [] |1633| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1626,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1626| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1626| 
        ; call occurs [#_scia_puts] ; [] |1626| 
	.dwpsn	file "../Source/prod.c",line 1618,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1618| 
        ; branch occurs ; [] |1618| 
$C$L591:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1340,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1340| 
        B         $C$L625,LO            ; [CPU_] |1340| 
        ; branchcc occurs ; [] |1340| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1344,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1344| 
        CMPB      AL,#67                ; [CPU_] |1344| 
        B         $C$L592,EQ            ; [CPU_] |1344| 
        ; branchcc occurs ; [] |1344| 
        CMPB      AL,#68                ; [CPU_] |1344| 
        B         $C$L625,NEQ           ; [CPU_] |1344| 
        ; branchcc occurs ; [] |1344| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1349,column 5,is_stmt,isa 0
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_atoi")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1349| 
        ; call occurs [#_atoi] ; [] |1349| 
        MOV       *-SP[50],AL           ; [CPU_] |1349| 
	.dwpsn	file "../Source/prod.c",line 1351,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1351| 
        CMPB      AL,#4                 ; [CPU_] |1351| 
        B         $C$L625,HIS           ; [CPU_] |1351| 
        ; branchcc occurs ; [] |1351| 
	.dwpsn	file "../Source/prod.c",line 1356,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1356| 
        MOV       AH,#0                 ; [CPU_] |1356| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1357,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1357| 
        MOV       AH,#0                 ; [CPU_] |1357| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1357| 
        MOV       AL,*-SP[51]           ; [CPU_] |1357| 
	.dwpsn	file "../Source/prod.c",line 1358,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1358| 
        B         $C$L596,LOS           ; [CPU_] |1358| 
        ; branchcc occurs ; [] |1358| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1358,column 10,is_stmt,isa 0
        MOV       *-SP[39],#3           ; [CPU_] |1358| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1359,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1359| 
        CMPB      AL,#88                ; [CPU_] |1359| 
        B         $C$L594,NEQ           ; [CPU_] |1359| 
        ; branchcc occurs ; [] |1359| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[39]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_strtod")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1361,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1361| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1364,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1364| 
        B         $C$L595,NEQ           ; [CPU_] |1364| 
        ; branchcc occurs ; [] |1364| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[39]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_strtod")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1366,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1366| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1358,column 17,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1358| 
        MOV       AL,*-SP[51]           ; [CPU_] |1358| 
        ADDB      XAR1,#1               ; [CPU_] |1358| 
        CMP       AL,*-SP[39]           ; [CPU_] |1358| 
        B         $C$L593,HI            ; [CPU_] |1358| 
        ; branchcc occurs ; [] |1358| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1371,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1371| 
	.dwpsn	file "../Source/prod.c",line 1354,column 5,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |1354| 
	.dwpsn	file "../Source/prod.c",line 1371,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1371| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1371| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1371| 
        ; call occurs [#FS$$CMP] ; [] |1371| 
        CMPB      AL,#0                 ; [CPU_] |1371| 
        B         $C$L625,EQ            ; [CPU_] |1371| 
        ; branchcc occurs ; [] |1371| 
	.dwpsn	file "../Source/prod.c",line 1375,column 5,is_stmt,isa 0
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1375| 
        ; call occurs [#_lcd_clear] ; [] |1375| 
	.dwpsn	file "../Source/prod.c",line 1376,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1376| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1376| 
        MOVL      XAR0,#44              ; [CPU_] |1376| 
        ADD       AL,*-SP[50]           ; [CPU_] |1376| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1376| 
        MOVZ      AR1,AL                ; [CPU_] |1376| 
        MOV       *-SP[51],AL           ; [CPU_] |1376| 
        MOV       *-SP[3],AL            ; [CPU_] |1376| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1376| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_sprintf")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1376| 
        ; call occurs [#_sprintf] ; [] |1376| 
        MOVL      XAR0,#44              ; [CPU_] |1376| 
	.dwpsn	file "../Source/prod.c",line 1377,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1377| 
	.dwpsn	file "../Source/prod.c",line 1376,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1376| 
	.dwpsn	file "../Source/prod.c",line 1377,column 5,is_stmt,isa 0
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1377| 
        ; call occurs [#_lcd_puts] ; [] |1377| 
	.dwpsn	file "../Source/prod.c",line 1378,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1378| 
        MOVL      XAR0,#44              ; [CPU_] |1378| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1378| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1378| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1378| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1378| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_sprintf")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1378| 
        ; call occurs [#_sprintf] ; [] |1378| 
        MOVL      XAR0,#44              ; [CPU_] |1378| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1378,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1378| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1379| 
        ; call occurs [#_lcd_puts] ; [] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1380| 
        MOVL      XAR0,#44              ; [CPU_] |1380| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1380| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1380| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1380| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1380| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_sprintf")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1380| 
        ; call occurs [#_sprintf] ; [] |1380| 
        MOVL      XAR0,#44              ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1381,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1381| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1381,column 5,is_stmt,isa 0
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1381| 
        ; call occurs [#_lcd_puts] ; [] |1381| 
	.dwpsn	file "../Source/prod.c",line 1383,column 5,is_stmt,isa 0
        MOVL      XAR0,#38              ; [CPU_] |1383| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1383| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1383| 
        ADDB      ACC,#1                ; [CPU_] |1383| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1383| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1383| 
        CMPB      AL,#67                ; [CPU_] |1383| 
        B         $C$L619,EQ            ; [CPU_] |1383| 
        ; branchcc occurs ; [] |1383| 
        CMPB      AL,#68                ; [CPU_] |1383| 
        B         $C$L625,NEQ           ; [CPU_] |1383| 
        ; branchcc occurs ; [] |1383| 
	.dwpsn	file "../Source/prod.c",line 1436,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1436| 
        MOV       AH,#16672             ; [CPU_] |1436| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1436| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1436| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1436| 
        ; call occurs [#FS$$CMP] ; [] |1436| 
        CMPB      AL,#0                 ; [CPU_] |1436| 
        B         $C$L618,GT            ; [CPU_] |1436| 
        ; branchcc occurs ; [] |1436| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1436| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1436| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1436| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1436| 
        ; call occurs [#FS$$CMP] ; [] |1436| 
        CMPB      AL,#0                 ; [CPU_] |1436| 
        B         $C$L618,LT            ; [CPU_] |1436| 
        ; branchcc occurs ; [] |1436| 
        MOV       AL,#0                 ; [CPU_] |1436| 
        MOV       AH,#16672             ; [CPU_] |1436| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1436| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1436| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1436| 
        ; call occurs [#FS$$CMP] ; [] |1436| 
        CMPB      AL,#0                 ; [CPU_] |1436| 
        B         $C$L618,GT            ; [CPU_] |1436| 
        ; branchcc occurs ; [] |1436| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1436| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1436| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1436| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1436| 
        ; call occurs [#FS$$CMP] ; [] |1436| 
        CMPB      AL,#0                 ; [CPU_] |1436| 
        B         $C$L618,LT            ; [CPU_] |1436| 
        ; branchcc occurs ; [] |1436| 
	.dwpsn	file "../Source/prod.c",line 1444,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1444| 
        MOVB      AL,#0                 ; [CPU_] |1444| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1444| 
        ; call occurs [#_lcd_puts] ; [] |1444| 
	.dwpsn	file "../Source/prod.c",line 1446,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1446| 
        MOVL      XAR0,#44              ; [CPU_] |1446| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1446| 
        MOV       *-SP[3],AR1           ; [CPU_] |1446| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1446| 
        MOVL      XAR4,XAR1             ; [CPU_] |1446| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("_sprintf")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1446| 
        ; call occurs [#_sprintf] ; [] |1446| 
        MOVL      XAR4,XAR1             ; [CPU_] |1446| 
	.dwpsn	file "../Source/prod.c",line 1449,column 6,is_stmt,isa 0
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1449| 
        ; call occurs [#_scia_puts] ; [] |1449| 
	.dwpsn	file "../Source/prod.c",line 1450,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1450| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1450| 
        ; call occurs [#_scia_puts] ; [] |1450| 
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1451| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1451| 
        ; call occurs [#_dac_setmode] ; [] |1451| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOV       T,*-SP[50]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
        MOV       AL,*-SP[50]           ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOV       *-SP[39],#1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1454,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1454| 
	.dwpsn	file "../Source/prod.c",line 1455,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1455| 
        MOV       AH,#0                 ; [CPU_] |1455| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1455| 
        MOVL      ACC,XAR1              ; [CPU_] |1455| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1455| 
        ; call occurs [#FS$$CMP] ; [] |1455| 
        CMPB      AL,#0                 ; [CPU_] |1455| 
        B         $C$L598,GEQ           ; [CPU_] |1455| 
        ; branchcc occurs ; [] |1455| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1455| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1455| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1455| 
        B         $C$L599,UNC           ; [CPU_] |1455| 
        ; branch occurs ; [] |1455| 
$C$L598:    
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1455| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1455| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1455| 
$C$L599:    
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1455| 
        ; call occurs [#FS$$MPY] ; [] |1455| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1455| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1455| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1455| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1455| 
        ; call occurs [#FS$$ADD] ; [] |1455| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1455| 
        ; call occurs [#FS$$TOLL] ; [] |1455| 
	.dwpsn	file "../Source/prod.c",line 1461,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1461| 
	.dwpsn	file "../Source/prod.c",line 1455,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1455| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1461,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1461| 
        CMP64     ACC:P                 ; [CPU_] |1461| 
        B         $C$L601,LEQ           ; [CPU_] |1461| 
        ; branchcc occurs ; [] |1461| 
	.dwpsn	file "../Source/prod.c",line 1463,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1463| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1463| 
        MOV       *-SP[2],#0            ; [CPU_] |1463| 
        MOV       *-SP[1],#0            ; [CPU_] |1463| 
        MOVL      P,*-SP[32]            ; [CPU_] |1463| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1463| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1289, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1463| 
        ; call occurs [#LL$$CMP] ; [] |1463| 
        CMPB      AL,#0                 ; [CPU_] |1463| 
        B         $C$L600,GEQ           ; [CPU_] |1463| 
        ; branchcc occurs ; [] |1463| 
	.dwpsn	file "../Source/prod.c",line 1466,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1466| 
        MOV       AL,*-SP[32]           ; [CPU_] |1466| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1466| 
        B         $C$L602,UNC           ; [CPU_] |1466| 
        ; branch occurs ; [] |1466| 
$C$L600:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1464,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1464| 
	.dwpsn	file "../Source/prod.c",line 1465,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1465| 
        ; branch occurs ; [] |1465| 
$C$L601:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1462,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1462| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1469,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1469| 
        MOVL      XAR0,#44              ; [CPU_] |1469| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1469| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1469| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1469| 
        MOVL      XAR4,XAR1             ; [CPU_] |1469| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_sprintf")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1469| 
        ; call occurs [#_sprintf] ; [] |1469| 
        MOVL      XAR4,XAR1             ; [CPU_] |1469| 
	.dwpsn	file "../Source/prod.c",line 1470,column 7,is_stmt,isa 0
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1470| 
        ; call occurs [#_scia_puts] ; [] |1470| 
	.dwpsn	file "../Source/prod.c",line 1471,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1471| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1471| 
$C$L603:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1474,column 8,is_stmt,isa 0
        MOV       AH,*-SP[40]           ; [CPU_] |1474| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1474| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1474| 
        ; call occurs [#_mcbsp_xmit] ; [] |1474| 
	.dwpsn	file "../Source/prod.c",line 1475,column 8,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1475| 
        ; call occurs [#_latch_dac] ; [] |1475| 
	.dwpsn	file "../Source/prod.c",line 1478,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1478| 
        MOVL      XAR4,XAR1             ; [CPU_] |1478| 
        MOVL      XAR5,XAR1             ; [CPU_] |1478| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1478| 
        ; call occurs [#_scia_getparam] ; [] |1478| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1480,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1480| 
        CMPB      AL,#45                ; [CPU_] |1480| 
        B         $C$L604,EQ            ; [CPU_] |1480| 
        ; branchcc occurs ; [] |1480| 
        CMPB      AL,#83                ; [CPU_] |1480| 
        B         $C$L609,EQ            ; [CPU_] |1480| 
        ; branchcc occurs ; [] |1480| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1487,column 8,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_atoi")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1487| 
        ; call occurs [#_atoi] ; [] |1487| 
        CMPB      AL,#0                 ; [CPU_] |1487| 
	.dwpsn	file "../Source/prod.c",line 1489,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1489| 
	.dwpsn	file "../Source/prod.c",line 1492,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1492| 
        CMPB      AH,#43                ; [CPU_] |1492| 
        B         $C$L605,EQ            ; [CPU_] |1492| 
        ; branchcc occurs ; [] |1492| 
	.dwpsn	file "../Source/prod.c",line 1499,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1499| 
        B         $C$L608,NEQ           ; [CPU_] |1499| 
        ; branchcc occurs ; [] |1499| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1501,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1501| 
        B         $C$L606,HI            ; [CPU_] |1501| 
        ; branchcc occurs ; [] |1501| 
	.dwpsn	file "../Source/prod.c",line 1502,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1502| 
	.dwpsn	file "../Source/prod.c",line 1503,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1503| 
        ; branch occurs ; [] |1503| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1494,column 9,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1494| 
        MOV       AH,#65535             ; [CPU_] |1494| 
        SUB       AH,AL                 ; [CPU_] |1494| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1494| 
        B         $C$L607,HIS           ; [CPU_] |1494| 
        ; branchcc occurs ; [] |1494| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1497,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1497| 
        B         $C$L608,UNC           ; [CPU_] |1497| 
        ; branch occurs ; [] |1497| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1495,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1495| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1473,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1473| 
        B         $C$L603,NEQ           ; [CPU_] |1473| 
        ; branchcc occurs ; [] |1473| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
        MOVL      XAR7,*-SP[58]         ; [CPU_] |1509| 
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1509| 
        MOVL      XAR0,#44              ; [CPU_] |1509| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1509| 
        MOV       AL,*XAR7              ; [CPU_] |1509| 
        MOV       *-SP[3],AL            ; [CPU_] |1509| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1509| 
        ADDB      XAR7,#1               ; [CPU_] |1509| 
        MOVL      *-SP[58],XAR7         ; [CPU_] |1509| 
        MOVL      XAR4,XAR1             ; [CPU_] |1509| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_sprintf")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1509| 
        ; call occurs [#_sprintf] ; [] |1509| 
        MOVL      XAR4,XAR1             ; [CPU_] |1509| 
	.dwpsn	file "../Source/prod.c",line 1510,column 7,is_stmt,isa 0
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1510| 
        ; call occurs [#_scia_puts] ; [] |1510| 
	.dwpsn	file "../Source/prod.c",line 1453,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1453| 
	.dwpsn	file "../Source/prod.c",line 1510,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1510| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1510| 
	.dwpsn	file "../Source/prod.c",line 1453,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1453| 
        SUBB      XAR6,#1               ; [CPU_U] |1453| 
        ADDB      ACC,#2                ; [CPU_] |1453| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1453| 
        MOVZ      AR0,AR6               ; [CPU_] |1453| 
        MOV       *-SP[39],AR6          ; [CPU_] |1453| 
        CMP       AR0,#-1               ; [CPU_] |1453| 
        B         $C$L597,NEQ           ; [CPU_] |1453| 
        ; branchcc occurs ; [] |1453| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1513,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1513| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1513| 
        ; call occurs [#FS$$TOU] ; [] |1513| 
        MOV       *-SP[33],AL           ; [CPU_] |1513| 
	.dwpsn	file "../Source/prod.c",line 1515,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1515| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1515| 
        ; call occurs [#_scia_puts] ; [] |1515| 
	.dwpsn	file "../Source/prod.c",line 1516,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1516| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |1516| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1516| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1519| 
        MOV       AH,*-SP[40]           ; [CPU_] |1519| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1519| 
        ; call occurs [#_mcbsp_xmit] ; [] |1519| 
	.dwpsn	file "../Source/prod.c",line 1520,column 7,is_stmt,isa 0
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1520| 
        ; call occurs [#_latch_dac] ; [] |1520| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1520| 
	.dwpsn	file "../Source/prod.c",line 1523,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1523| 
        MOVL      XAR4,XAR5             ; [CPU_] |1523| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1523| 
        ; call occurs [#_scia_getparam] ; [] |1523| 
	.dwpsn	file "../Source/prod.c",line 1528,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1528| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1528| 
        CMPB      AL,#83                ; [CPU_] |1528| 
        B         $C$L615,EQ            ; [CPU_] |1528| 
        ; branchcc occurs ; [] |1528| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1531,column 7,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_atoi")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1531| 
        ; call occurs [#_atoi] ; [] |1531| 
        CMPB      AL,#0                 ; [CPU_] |1531| 
	.dwpsn	file "../Source/prod.c",line 1536,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1536| 
	.dwpsn	file "../Source/prod.c",line 1533,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1536,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1536| 
        CMPB      AH,#43                ; [CPU_] |1536| 
        B         $C$L611,EQ            ; [CPU_] |1536| 
        ; branchcc occurs ; [] |1536| 
	.dwpsn	file "../Source/prod.c",line 1543,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1543| 
        B         $C$L614,NEQ           ; [CPU_] |1543| 
        ; branchcc occurs ; [] |1543| 
	.dwpsn	file "../Source/prod.c",line 1545,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1545| 
        B         $C$L612,HI            ; [CPU_] |1545| 
        ; branchcc occurs ; [] |1545| 
	.dwpsn	file "../Source/prod.c",line 1546,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1546| 
	.dwpsn	file "../Source/prod.c",line 1547,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1547| 
        ; branch occurs ; [] |1547| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1538,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1538| 
        SUB       AH,AL                 ; [CPU_] |1538| 
        CMP       AH,*-SP[33]           ; [CPU_] |1538| 
        B         $C$L613,HIS           ; [CPU_] |1538| 
        ; branchcc occurs ; [] |1538| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1541,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1541| 
        B         $C$L614,UNC           ; [CPU_] |1541| 
        ; branch occurs ; [] |1541| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1539,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1539| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1518,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1518| 
        B         $C$L610,NEQ           ; [CPU_] |1518| 
        ; branchcc occurs ; [] |1518| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1553,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1553| 
        MOV       AL,*-SP[33]           ; [CPU_] |1553| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1553| 
        MOV       *-SP[3],AL            ; [CPU_] |1553| 
        MOVL      XAR4,XAR1             ; [CPU_] |1553| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_sprintf")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1553| 
        ; call occurs [#_sprintf] ; [] |1553| 
        MOVL      XAR4,XAR1             ; [CPU_] |1553| 
	.dwpsn	file "../Source/prod.c",line 1554,column 6,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1554| 
        ; call occurs [#_scia_puts] ; [] |1554| 
	.dwpsn	file "../Source/prod.c",line 1557,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1557| 
        MOV       AH,#0                 ; [CPU_] |1557| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1557| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1557| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1557| 
        ; call occurs [#FS$$CMP] ; [] |1557| 
        CMPB      AL,#0                 ; [CPU_] |1557| 
        B         $C$L616,LT            ; [CPU_] |1557| 
        ; branchcc occurs ; [] |1557| 
	.dwpsn	file "../Source/prod.c",line 1563,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1563| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1563| 
        ; call occurs [#U$$TOFS] ; [] |1563| 
        MOVL      XAR1,ACC              ; [CPU_] |1563| 
        MOV       AL,*-SP[35]           ; [CPU_] |1563| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1563| 
        ; call occurs [#U$$TOFS] ; [] |1563| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1563| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1563| 
        ; call occurs [#FS$$SUB] ; [] |1563| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1563| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1563| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1563| 
        ; call occurs [#FS$$DIV] ; [] |1563| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1563| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1563| 
	.dwpsn	file "../Source/prod.c",line 1565,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1565| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1565| 
        ; call occurs [#U$$TOFS] ; [] |1565| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1565| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1565| 
        ; call occurs [#FS$$SUB] ; [] |1565| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1565| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1565| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1565| 
        ; call occurs [#FS$$DIV] ; [] |1565| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1565| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1565| 
        B         $C$L617,UNC           ; [CPU_] |1565| 
        ; branch occurs ; [] |1565| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1558,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1558| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1558| 
        ; call occurs [#U$$TOFS] ; [] |1558| 
        MOVL      XAR1,ACC              ; [CPU_] |1558| 
        MOV       AL,*-SP[35]           ; [CPU_] |1558| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1558| 
        ; call occurs [#U$$TOFS] ; [] |1558| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1558| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1558| 
        ; call occurs [#FS$$SUB] ; [] |1558| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1558| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1558| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1558| 
        ; call occurs [#FS$$DIV] ; [] |1558| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1558| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1558| 
	.dwpsn	file "../Source/prod.c",line 1560,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1560| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1560| 
        ; call occurs [#U$$TOFS] ; [] |1560| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1560| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1560| 
        ; call occurs [#FS$$SUB] ; [] |1560| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1560| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1560| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1560| 
        ; call occurs [#FS$$DIV] ; [] |1560| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1560| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1560| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1568,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1568| 
	.dwpsn	file "../Source/prod.c",line 1570,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1570| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1570| 
        ; call occurs [#_dac_setmode] ; [] |1570| 
	.dwpsn	file "../Source/prod.c",line 1572,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1572| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1572| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1572| 
        MOV       AL,*-SP[51]           ; [CPU_] |1572| 
        MOV       *-SP[3],AL            ; [CPU_] |1572| 
        MOVL      XAR0,#44              ; [CPU_] |1572| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1572| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1572| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1572| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1572| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1572| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1572| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1572| 
        MOVL      XAR4,XAR1             ; [CPU_] |1572| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_sprintf")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1572| 
        ; call occurs [#_sprintf] ; [] |1572| 
        MOVL      XAR4,XAR1             ; [CPU_] |1572| 
	.dwpsn	file "../Source/prod.c",line 1576,column 6,is_stmt,isa 0
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1576| 
        ; call occurs [#_scia_puts] ; [] |1576| 
	.dwpsn	file "../Source/prod.c",line 1578,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1578| 
	.dwpsn	file "../Source/prod.c",line 1579,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1579| 
        ; branch occurs ; [] |1579| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1438,column 7,is_stmt,isa 0
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1438| 
        ; call occurs [#_lcd_clear] ; [] |1438| 
	.dwpsn	file "../Source/prod.c",line 1439,column 7,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_update_units")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1439| 
        ; call occurs [#_update_units] ; [] |1439| 
	.dwpsn	file "../Source/prod.c",line 1440,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1440| 
        ; branch occurs ; [] |1440| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1388,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1388| 
        MOVB      AL,#0                 ; [CPU_] |1388| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1388| 
        ; call occurs [#_lcd_puts] ; [] |1388| 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1390| 
        MOVL      XAR0,#44              ; [CPU_] |1390| 
        MOV       AL,*-SP[51]           ; [CPU_] |1390| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1390| 
        MOV       *-SP[3],AL            ; [CPU_] |1390| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1390| 
        MOVL      XAR4,XAR1             ; [CPU_] |1390| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_sprintf")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1390| 
        ; call occurs [#_sprintf] ; [] |1390| 
        MOVL      XAR4,XAR1             ; [CPU_] |1390| 
	.dwpsn	file "../Source/prod.c",line 1393,column 6,is_stmt,isa 0
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1393| 
        ; call occurs [#_scia_puts] ; [] |1393| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[39],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1406,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1406| 
        MOVL      XAR0,#42              ; [CPU_] |1406| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1406| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1406| 
        MOVL      XAR0,#44              ; [CPU_] |1406| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1406| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1406| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1406| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_sprintf")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1406| 
        ; call occurs [#_sprintf] ; [] |1406| 
        MOVL      XAR0,#44              ; [CPU_] |1406| 
	.dwpsn	file "../Source/prod.c",line 1409,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1409| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1409| 
	.dwpsn	file "../Source/prod.c",line 1406,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1406| 
	.dwpsn	file "../Source/prod.c",line 1409,column 7,is_stmt,isa 0
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1409| 
        ; call occurs [#_scia_getparam] ; [] |1409| 
	.dwpsn	file "../Source/prod.c",line 1410,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1410| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1410| 
        ; call occurs [#_scia_puts] ; [] |1410| 
	.dwpsn	file "../Source/prod.c",line 1413,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1413| 
	.dwpsn	file "../Source/prod.c",line 1412,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1412| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1412| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1412| 
	.dwpsn	file "../Source/prod.c",line 1414,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1414| 
	.dwpsn	file "../Source/prod.c",line 1413,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1413| 
	.dwpsn	file "../Source/prod.c",line 1414,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1414| 
        MOVB      ACC,#0                ; [CPU_] |1414| 
        SUBB      ACC,#1                ; [CPU_] |1414| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1414| 
        B         $C$L622,EQ            ; [CPU_] |1414| 
        ; branchcc occurs ; [] |1414| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1415,column 15,is_stmt,isa 0
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1415| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1415| 
        CMPB      AL,#0                 ; [CPU_] |1415| 
        B         $C$L624,EQ            ; [CPU_] |1415| 
        ; branchcc occurs ; [] |1415| 
	.dwpsn	file "../Source/prod.c",line 1418,column 8,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1418| 
        ; call occurs [#_ad7738_getraw] ; [] |1418| 
	.dwpsn	file "../Source/prod.c",line 1419,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1419| 
        ADDL      XAR4,ACC              ; [CPU_] |1419| 
        MOVL      XAR0,#10              ; [CPU_] |1419| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1419| 
        MOVL      XAR0,#10              ; [CPU_] |1419| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1419| 
        ASR64     ACC:P,16              ; [CPU_] |1419| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1419| 
        MOVL      XAR0,#10              ; [CPU_] |1419| 
        ASR64     ACC:P,16              ; [CPU_] |1419| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1419| 
        MOVL      XAR0,#10              ; [CPU_] |1419| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1419| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1419| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1419| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1419| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1419| 
	.dwpsn	file "../Source/prod.c",line 1414,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1414| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1414| 
        MOVB      ACC,#0                ; [CPU_] |1414| 
        SUBB      ACC,#1                ; [CPU_] |1414| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1414| 
        B         $C$L621,NEQ           ; [CPU_] |1414| 
        ; branchcc occurs ; [] |1414| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1422,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1422| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1422| 
        ; call occurs [#_scia_puts] ; [] |1422| 
	.dwpsn	file "../Source/prod.c",line 1405,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1405| 
        MOVL      XAR0,#42              ; [CPU_] |1405| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1405| 
        MOVL      XAR0,#42              ; [CPU_] |1405| 
        SUBB      XAR6,#1               ; [CPU_U] |1405| 
        ADDB      ACC,#2                ; [CPU_] |1405| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1405| 
        MOVZ      AR0,AR6               ; [CPU_] |1405| 
        MOV       *-SP[39],AR6          ; [CPU_] |1405| 
        ADDB      XAR1,#4               ; [CPU_] |1405| 
        CMP       AR0,#-1               ; [CPU_] |1405| 
        B         $C$L620,NEQ           ; [CPU_] |1405| 
        ; branchcc occurs ; [] |1405| 
	.dwpsn	file "../Source/prod.c",line 1425,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1425| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1425| 
        MOVB      AL,#10                ; [CPU_] |1425| 
        MOV       T,*-SP[50]            ; [CPU_] |1425| 
        MPYU      ACC,T,AL              ; [CPU_] |1425| 
        ADDL      ACC,XAR6              ; [CPU_] |1425| 
        MOVL      XAR1,ACC              ; [CPU_] |1425| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1425| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1425| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1425| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1425| 
        ; call occurs [#FS$$SUB] ; [] |1425| 
        MOVL      XAR6,ACC              ; [CPU_] |1425| 
        MOV       AL,#16384             ; [CPU_] |1425| 
        MOV       AH,#17948             ; [CPU_] |1425| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1425| 
        MOVL      ACC,XAR6              ; [CPU_] |1425| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1425| 
        ; call occurs [#FS$$MPY] ; [] |1425| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1425| 
        MOVL      P,*-SP[28]            ; [CPU_] |1425| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1425| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1425| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1425| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1425| 
        ; call occurs [#LL$$TOFS] ; [] |1425| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1425| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1425| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1425| 
        ; call occurs [#FS$$DIV] ; [] |1425| 
        MOVB      XAR0,#44              ; [CPU_] |1425| 
	.dwpsn	file "../Source/prod.c",line 1428,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1428| 
	.dwpsn	file "../Source/prod.c",line 1425,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1425| 
	.dwpsn	file "../Source/prod.c",line 1428,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1428| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1428| 
        MOV       AL,*-SP[51]           ; [CPU_] |1428| 
        MOV       *-SP[3],AL            ; [CPU_] |1428| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1428| 
        MOVL      XAR0,#44              ; [CPU_] |1428| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1428| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1428| 
        MOVL      XAR4,XAR1             ; [CPU_] |1428| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_sprintf")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1428| 
        ; call occurs [#_sprintf] ; [] |1428| 
        MOVL      XAR4,XAR1             ; [CPU_] |1428| 
	.dwpsn	file "../Source/prod.c",line 1430,column 6,is_stmt,isa 0
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1430| 
        ; call occurs [#_scia_puts] ; [] |1430| 
	.dwpsn	file "../Source/prod.c",line 1431,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1431| 
$C$L623:    
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1431| 
        ; call occurs [#_scia_puts] ; [] |1431| 
	.dwpsn	file "../Source/prod.c",line 1586,column 5,is_stmt,isa 0
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1586| 
        ; call occurs [#_lcd_clear] ; [] |1586| 
	.dwpsn	file "../Source/prod.c",line 1587,column 5,is_stmt,isa 0
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_update_units")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1587| 
        ; call occurs [#_update_units] ; [] |1587| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1590,column 5,is_stmt,isa 0
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1590| 
        ; call occurs [#_ad7738_setcal] ; [] |1590| 
        MOVL      XAR0,#78              ; [CPU_] |1590| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1590| 
	.dwpsn	file "../Source/prod.c",line 1591,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |1591| 
        MOVL      XAR1,ACC              ; [CPU_] |1591| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1591| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1591| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1591| 
	.dwpsn	file "../Source/prod.c",line 1592,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1592| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1592| 
        ; call occurs [#_ad7738_resetvall] ; [] |1592| 
	.dwpsn	file "../Source/prod.c",line 1594,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1594| 
        ; branch occurs ; [] |1594| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1416,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1416| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_delay_us")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1416| 
        ; call occurs [#_delay_us] ; [] |1416| 
	.dwpsn	file "../Source/prod.c",line 1415,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1415| 
        ; branch occurs ; [] |1415| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3545,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3545| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3545| 
        ; call occurs [#_scia_puts] ; [] |3545| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |3545| 
	.dwpsn	file "../Source/prod.c",line 3546,column 5,is_stmt,isa 0
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3546| 
        ; call occurs [#_scia_puts] ; [] |3546| 
	.dwpsn	file "../Source/prod.c",line 3547,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3547| 
	.dwpsn	file "../Source/prod.c",line 3548,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3548| 
        ; branch occurs ; [] |3548| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3506| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3506| 
        ; call occurs [#_scia_puts] ; [] |3506| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3510,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3510| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_delay_us")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3510| 
        ; call occurs [#_delay_us] ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3508,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3508| 
        ; branchcc occurs ; [] |3508| 
	.dwpsn	file "../Source/prod.c",line 3513,column 5,is_stmt,isa 0
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_reboot")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3513| 
        ; call occurs [#_reboot] ; [] |3513| 
	.dwpsn	file "../Source/prod.c",line 3514,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3514| 
        ; branch occurs ; [] |3514| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3490,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3490| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3490| 
        ; call occurs [#_scia_puts] ; [] |3490| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3494,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3494| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_delay_us")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3494| 
        ; call occurs [#_delay_us] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3492,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3492| 
        ; branchcc occurs ; [] |3492| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3498,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3498| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3497| 
	.dwpsn	file "../Source/prod.c",line 3498,column 5,is_stmt,isa 0
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3498| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3498| 
	.dwpsn	file "../Source/prod.c",line 3502,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3502| 
        ; branch occurs ; [] |3502| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3401,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3401| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3401| 
        ; call occurs [#_scia_puts] ; [] |3401| 
	.dwpsn	file "../Source/prod.c",line 3403,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3403| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3403| 
        ; call occurs [#_scia_puts] ; [] |3403| 
	.dwpsn	file "../Source/prod.c",line 3404,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3404| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3404| 
        ; call occurs [#_scia_puts] ; [] |3404| 
	.dwpsn	file "../Source/prod.c",line 3406,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3406| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3406| 
        ; call occurs [#_scia_puts] ; [] |3406| 
	.dwpsn	file "../Source/prod.c",line 3407,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3407| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3407| 
        ; call occurs [#_scia_puts] ; [] |3407| 
	.dwpsn	file "../Source/prod.c",line 3408,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3408| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3408| 
        ; call occurs [#_scia_puts] ; [] |3408| 
	.dwpsn	file "../Source/prod.c",line 3409,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3409| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3409| 
        ; call occurs [#_scia_puts] ; [] |3409| 
	.dwpsn	file "../Source/prod.c",line 3411,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3411| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3411| 
        ; call occurs [#_scia_puts] ; [] |3411| 
	.dwpsn	file "../Source/prod.c",line 3412,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3412| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3412| 
        ; call occurs [#_scia_puts] ; [] |3412| 
	.dwpsn	file "../Source/prod.c",line 3413,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3413| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3413| 
        ; call occurs [#_scia_puts] ; [] |3413| 
	.dwpsn	file "../Source/prod.c",line 3414,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3414| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3414| 
        ; call occurs [#_scia_puts] ; [] |3414| 
	.dwpsn	file "../Source/prod.c",line 3415,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3415| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3415| 
        ; call occurs [#_scia_puts] ; [] |3415| 
	.dwpsn	file "../Source/prod.c",line 3416,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3416| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3416| 
        ; call occurs [#_scia_puts] ; [] |3416| 
	.dwpsn	file "../Source/prod.c",line 3417,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3417| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3417| 
        ; call occurs [#_scia_puts] ; [] |3417| 
	.dwpsn	file "../Source/prod.c",line 3419,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3419| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3419| 
        ; call occurs [#_scia_puts] ; [] |3419| 
	.dwpsn	file "../Source/prod.c",line 3421,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3421| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3421| 
        ; call occurs [#_scia_puts] ; [] |3421| 
	.dwpsn	file "../Source/prod.c",line 3423,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3423| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3423| 
        ; call occurs [#_scia_puts] ; [] |3423| 
	.dwpsn	file "../Source/prod.c",line 3425,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3425| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3425| 
        ; call occurs [#_scia_puts] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3426,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3426| 
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3426| 
        ; call occurs [#_scia_puts] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3427,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3427| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3427| 
        ; call occurs [#_scia_puts] ; [] |3427| 
	.dwpsn	file "../Source/prod.c",line 3428,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3428| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3428| 
        ; call occurs [#_scia_puts] ; [] |3428| 
	.dwpsn	file "../Source/prod.c",line 3430,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3430| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3431,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3431| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3431| 
        ; call occurs [#_scia_puts] ; [] |3431| 
	.dwpsn	file "../Source/prod.c",line 3432,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3432| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3432| 
        ; call occurs [#_scia_puts] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3433,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3433| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3433| 
        ; call occurs [#_scia_puts] ; [] |3433| 
	.dwpsn	file "../Source/prod.c",line 3434,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3434| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3434| 
        ; call occurs [#_scia_puts] ; [] |3434| 
	.dwpsn	file "../Source/prod.c",line 3436,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3436| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3436| 
        ; call occurs [#_scia_puts] ; [] |3436| 
	.dwpsn	file "../Source/prod.c",line 3437,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3437| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3437| 
        ; call occurs [#_scia_puts] ; [] |3437| 
	.dwpsn	file "../Source/prod.c",line 3439,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3439| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3439| 
        ; call occurs [#_scia_puts] ; [] |3439| 
	.dwpsn	file "../Source/prod.c",line 3441,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3441| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3441| 
        ; call occurs [#_scia_puts] ; [] |3441| 
	.dwpsn	file "../Source/prod.c",line 3442,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3442| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3442| 
        ; call occurs [#_scia_puts] ; [] |3442| 
	.dwpsn	file "../Source/prod.c",line 3444,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3444| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3444| 
        ; call occurs [#_scia_puts] ; [] |3444| 
	.dwpsn	file "../Source/prod.c",line 3446,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3446| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3446| 
        ; call occurs [#_scia_puts] ; [] |3446| 
	.dwpsn	file "../Source/prod.c",line 3448,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3448| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3448| 
        ; call occurs [#_scia_puts] ; [] |3448| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3450| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3451,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3451| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3451| 
        ; call occurs [#_scia_puts] ; [] |3451| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3453| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3454,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3454| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3454| 
        ; call occurs [#_scia_puts] ; [] |3454| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3455| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3456,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3456| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3456| 
        ; call occurs [#_scia_puts] ; [] |3456| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3457| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3458| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3458| 
        ; call occurs [#_scia_puts] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3459| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3460| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3471,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3471| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3471| 
        ; call occurs [#_scia_puts] ; [] |3471| 
	.dwpsn	file "../Source/prod.c",line 3473,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3473| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3473| 
        ; call occurs [#_scia_puts] ; [] |3473| 
	.dwpsn	file "../Source/prod.c",line 3475,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3475| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3475| 
        ; call occurs [#_scia_puts] ; [] |3475| 
	.dwpsn	file "../Source/prod.c",line 3477,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3477| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3477| 
        ; call occurs [#_scia_puts] ; [] |3477| 
	.dwpsn	file "../Source/prod.c",line 3479,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3479| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3484,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3484| 
$C$L631:    
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3484| 
        ; call occurs [#_scia_puts] ; [] |3484| 
$C$L632:    
        MOV       AL,*-SP[40]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3552,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3552| 
        ; branchcc occurs ; [] |3552| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3553,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3553| 
        SPM       #0                    ; [CPU_] 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3553| 
        ; call occurs [#_scia_puts] ; [] |3553| 
$C$L634:    
	.dwpsn	file "../Source/prod.c",line 598,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |598| 
        TBIT      AL,#4                 ; [CPU_] |598| 
        B         $C$L635,TC            ; [CPU_] |598| 
        ; branchcc occurs ; [] |598| 
	.dwpsn	file "../Source/prod.c",line 600,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |600| 
        SPM       #0                    ; [CPU_] 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |600| 
        ; call occurs [#_ad7738_resettare] ; [] |600| 
	.dwpsn	file "../Source/prod.c",line 601,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |601| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |601| 
        ; call occurs [#_ad7738_resetpeak] ; [] |601| 
	.dwpsn	file "../Source/prod.c",line 602,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |602| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |602| 
        ; call occurs [#_ad7738_resetvall] ; [] |602| 
$C$L635:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 680,column 3,is_stmt,isa 0
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |680| 
        ; call occurs [#_ad7738_monrdy] ; [] |680| 
        CMPB      AL,#0                 ; [CPU_] |680| 
        B         $C$L661,EQ            ; [CPU_] |680| 
        ; branchcc occurs ; [] |680| 
	.dwpsn	file "../Source/prod.c",line 682,column 4,is_stmt,isa 0
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |682| 
        ; call occurs [#_ad7738_monclr] ; [] |682| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |682| 
	.dwpsn	file "../Source/prod.c",line 685,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |685| 
        CMPB      AL,#3                 ; [CPU_] |685| 
        B         $C$L636,GT            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#3                 ; [CPU_] |685| 
        B         $C$L642,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#0                 ; [CPU_] |685| 
        B         $C$L646,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#1                 ; [CPU_] |685| 
        B         $C$L645,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#2                 ; [CPU_] |685| 
        B         $C$L644,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        B         $C$L658,UNC           ; [CPU_] |685| 
        ; branch occurs ; [] |685| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |685| 
        B         $C$L641,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#5                 ; [CPU_] |685| 
        B         $C$L637,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#6                 ; [CPU_] |685| 
        B         $C$L658,NEQ           ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
	.dwpsn	file "../Source/prod.c",line 740,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |740| 
        MOVL      XAR0,#46              ; [CPU_] |740| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |740| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |740| 
	.dwpsn	file "../Source/prod.c",line 741,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |741| 
        ; branch occurs ; [] |741| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 735,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |735| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |735| 
        ; call occurs [#_ad7738_getlimitst] ; [] |735| 
	.dwpsn	file "../Source/prod.c",line 736,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |736| 
        B         $C$L639,NTC           ; [CPU_] |736| 
        ; branchcc occurs ; [] |736| 
        TBIT      AL,#0                 ; [CPU_] |736| 
        B         $C$L638,NTC           ; [CPU_] |736| 
        ; branchcc occurs ; [] |736| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |736| 
        B         $C$L640,UNC           ; [CPU_] |736| 
        ; branch occurs ; [] |736| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |736| 
        B         $C$L640,UNC           ; [CPU_] |736| 
        ; branch occurs ; [] |736| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |736| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |736| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |736| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |736| 
	.dwpsn	file "../Source/prod.c",line 738,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |738| 
        ; branch occurs ; [] |738| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 707,column 5,is_stmt,isa 0
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |707| 
        ; call occurs [#_ad7738_getmon] ; [] |707| 
	.dwpsn	file "../Source/prod.c",line 709,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |709| 
        B         $C$L643,UNC           ; [CPU_] |709| 
        ; branch occurs ; [] |709| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 702,column 5,is_stmt,isa 0
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |702| 
        ; call occurs [#_ad7738_getmon] ; [] |702| 
	.dwpsn	file "../Source/prod.c",line 703,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |703| 
$C$L643:    
	.dwpsn	file "../Source/prod.c",line 702,column 5,is_stmt,isa 0
        MOVL      XAR5,*-SP[60]         ; [CPU_] |702| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 703,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |703| 
        ADDL      XAR4,ACC              ; [CPU_] |703| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |703| 
	.dwpsn	file "../Source/prod.c",line 704,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |704| 
        ; branch occurs ; [] |704| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 697,column 5,is_stmt,isa 0
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |697| 
        ; call occurs [#_ad7738_getvall] ; [] |697| 
	.dwpsn	file "../Source/prod.c",line 699,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |699| 
        ; branch occurs ; [] |699| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 692,column 5,is_stmt,isa 0
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |692| 
        ; call occurs [#_ad7738_getpeak] ; [] |692| 
	.dwpsn	file "../Source/prod.c",line 694,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |694| 
        ; branch occurs ; [] |694| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 687,column 5,is_stmt,isa 0
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |687| 
        ; call occurs [#_ad7738_getmon] ; [] |687| 
$C$L647:    
        MOVL      XAR5,*-SP[60]         ; [CPU_] |687| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 688,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |688| 
        ADDL      XAR4,ACC              ; [CPU_] |688| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |688| 
$C$L648:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |688| 
	.dwpsn	file "../Source/prod.c",line 712,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |712| 
        CMPB      AL,#3                 ; [CPU_] |712| 
        B         $C$L649,GT            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#3                 ; [CPU_] |712| 
        B         $C$L651,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#0                 ; [CPU_] |712| 
        B         $C$L654,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#1                 ; [CPU_] |712| 
        B         $C$L653,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#2                 ; [CPU_] |712| 
        B         $C$L652,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        B         $C$L658,UNC           ; [CPU_] |712| 
        ; branch occurs ; [] |712| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |712| 
        B         $C$L650,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#5                 ; [CPU_] |712| 
        B         $C$L658,NEQ           ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
	.dwpsn	file "../Source/prod.c",line 729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |729| 
	.dwpsn	file "../Source/prod.c",line 730,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |730| 
        ; branch occurs ; [] |730| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 726,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |726| 
	.dwpsn	file "../Source/prod.c",line 727,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |727| 
        ; branch occurs ; [] |727| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |723| 
	.dwpsn	file "../Source/prod.c",line 724,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |724| 
        ; branch occurs ; [] |724| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 720,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |720| 
	.dwpsn	file "../Source/prod.c",line 721,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |721| 
        ; branch occurs ; [] |721| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 717,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |717| 
	.dwpsn	file "../Source/prod.c",line 718,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |718| 
        ; branch occurs ; [] |718| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 714,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |714| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |714| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |714| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |714| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |714| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |714| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_sprintf")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |714| 
        ; call occurs [#_sprintf] ; [] |714| 
$C$L658:    
        MOV       T,*-SP[47]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 745,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |745| 
        MPYB      ACC,T,#20             ; [CPU_] |745| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |745| 
        ADDB      AL,#7                 ; [CPU_] |745| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |745| 
        ; call occurs [#_lcd_puts] ; [] |745| 
	.dwpsn	file "../Source/prod.c",line 748,column 4,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |748| 
	.dwpsn	file "../Source/prod.c",line 745,column 4,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |745| 
	.dwpsn	file "../Source/prod.c",line 748,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |748| 
        B         $C$L659,HIS           ; [CPU_] |748| 
        ; branchcc occurs ; [] |748| 
        MOVL      ACC,*-SP[60]          ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |748| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 749,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |749| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      *-SP[60],ACC          ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 758,column 3,is_stmt,isa 0
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |758| 
        ; call occurs [#_ad7738_tempstart] ; [] |758| 
        CMPB      AL,#0                 ; [CPU_] |758| 
        B         $C$L662,NEQ           ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
	.dwpsn	file "../Source/prod.c",line 763,column 8,is_stmt,isa 0
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |763| 
        ; call occurs [#_ad7738_tempread] ; [] |763| 
        CMPB      AL,#0                 ; [CPU_] |763| 
        B         $C$L663,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
	.dwpsn	file "../Source/prod.c",line 764,column 4,is_stmt,isa 0
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |764| 
        ; call occurs [#_ds1820read] ; [] |764| 
        MOVL      XAR0,#46              ; [CPU_] |764| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |764| 
	.dwpsn	file "../Source/prod.c",line 765,column 4,is_stmt,isa 0
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |765| 
        ; call occurs [#_ad7738_settemp] ; [] |765| 
        B         $C$L663,UNC           ; [CPU_] |765| 
        ; branch occurs ; [] |765| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 759,column 4,is_stmt,isa 0
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |759| 
        ; call occurs [#_ds1820start] ; [] |759| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 772,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |772| 
        MOVB      XAR0,#36              ; [CPU_] |772| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |772| 
        B         $C$L668,EQ            ; [CPU_] |772| 
        ; branchcc occurs ; [] |772| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |772| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |772| 
        CMPB      AL,#0                 ; [CPU_] |772| 
        B         $C$L668,EQ            ; [CPU_] |772| 
        ; branchcc occurs ; [] |772| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 773,column 4,is_stmt,isa 0
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |773| 
        ; call occurs [#_tagdetect] ; [] |773| 
        CMPB      AL,#0                 ; [CPU_] |773| 
        B         $C$L664,NEQ           ; [CPU_] |773| 
        ; branchcc occurs ; [] |773| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 796,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |796| 
        MOV       *+XAR4[0],#0          ; [CPU_] |796| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |796| 
	.dwpsn	file "../Source/prod.c",line 798,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |798| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |798| 
        MOVL      XAR4,ACC              ; [CPU_] |798| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |798| 
        B         $C$L666,EQ            ; [CPU_] |798| 
        ; branchcc occurs ; [] |798| 
	.dwpsn	file "../Source/prod.c",line 799,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |799| 
	.dwpsn	file "../Source/prod.c",line 800,column 6,is_stmt,isa 0
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |800| 
        ; call occurs [#_lcd_clear] ; [] |800| 
	.dwpsn	file "../Source/prod.c",line 801,column 6,is_stmt,isa 0
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_update_units")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |801| 
        ; call occurs [#_update_units] ; [] |801| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 802,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |802| 
        B         $C$L666,UNC           ; [CPU_] |802| 
        ; branch occurs ; [] |802| 
$C$L664:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 775,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |775| 
        B         $C$L665,NEQ           ; [CPU_] |775| 
        ; branchcc occurs ; [] |775| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 778,column 6,is_stmt,isa 0
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_matchTag")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |778| 
        ; call occurs [#_matchTag] ; [] |778| 
        MOVL      XAR0,#80              ; [CPU_] |778| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |778| 
        MOVL      XAR0,#9               ; [CPU_] |778| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |778| 
	.dwpsn	file "../Source/prod.c",line 779,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |779| 
        B         $C$L665,EQ            ; [CPU_] |779| 
        ; branchcc occurs ; [] |779| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 782,column 7,is_stmt,isa 0
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |782| 
        ; call occurs [#_maf_rst] ; [] |782| 
	.dwpsn	file "../Source/prod.c",line 783,column 7,is_stmt,isa 0
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |783| 
        ; call occurs [#_ad7738_setcal] ; [] |783| 
        MOVL      XAR0,#78              ; [CPU_] |783| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |783| 
	.dwpsn	file "../Source/prod.c",line 784,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |784| 
        MOVL      XAR1,ACC              ; [CPU_] |784| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |784| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |784| 
        ; call occurs [#_ad7738_resetpeak] ; [] |784| 
	.dwpsn	file "../Source/prod.c",line 785,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |785| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |785| 
        ; call occurs [#_ad7738_resetvall] ; [] |785| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 788,column 7,is_stmt,isa 0
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |788| 
        ; call occurs [#_lcd_clear] ; [] |788| 
	.dwpsn	file "../Source/prod.c",line 789,column 7,is_stmt,isa 0
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_update_units")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |789| 
        ; call occurs [#_update_units] ; [] |789| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 790,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |790| 
$C$L665:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 793,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |793| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 807,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |807| 
        ADDB      AL,#1                 ; [CPU_] |807| 
        MOV       *+FP[AR0],AL          ; [CPU_] |807| 
        CMPB      AL,#4                 ; [CPU_] |807| 
        B         $C$L667,HIS           ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        MOVL      ACC,*-SP[62]          ; [CPU_] 
        ADDB      ACC,#1                ; [CPU_] |807| 
        MOVL      *-SP[62],ACC          ; [CPU_] |807| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
	.dwpsn	file "../Source/prod.c",line 808,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |808| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOV       *+FP[AR0],#0          ; [CPU_] |808| 
        MOVL      *-SP[62],XAR4         ; [CPU_] 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 816,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |816| 
        CMPB      AL,#1                 ; [CPU_] |816| 
        B         $C$L686,NEQ           ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
        MOV       AL,*-SP[46]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
	.dwpsn	file "../Source/prod.c",line 819,column 4,is_stmt,isa 0
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |819| 
        ; call occurs [#_prod_getavail] ; [] |819| 
        MOVL      XAR6,ACC              ; [CPU_] |819| 
        MOV       T,*-SP[43]            ; [CPU_] |819| 
        MPY       P,T,*-SP[44]          ; [CPU_] |819| 
        MOVU      ACC,PL                ; [CPU_] |819| 
        CMPL      ACC,XAR6              ; [CPU_] |819| 
        B         $C$L671,LOS           ; [CPU_] |819| 
        ; branchcc occurs ; [] |819| 
        MOV       AL,*-SP[45]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |819| 
        ; branchcc occurs ; [] |819| 
	.dwpsn	file "../Source/prod.c",line 889,column 11,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |889| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |889| 
        CMPB      AL,#0                 ; [CPU_] |889| 
        B         $C$L669,NEQ           ; [CPU_] |889| 
        ; branchcc occurs ; [] |889| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 897,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |897| 
        B         $C$L686,EQ            ; [CPU_] |897| 
        ; branchcc occurs ; [] |897| 
	.dwpsn	file "../Source/prod.c",line 898,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |898| 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |901| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |903| 
        MOVB      XAR0,#36              ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |901| 
	.dwpsn	file "../Source/prod.c",line 902,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |902| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |903| 
        MOVL      XAR0,#80              ; [CPU_] |903| 
        MOV       *+XAR4[2],AL          ; [CPU_] |903| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |907| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 905,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |907| 
        ; branch occurs ; [] |907| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 891,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |891| 
        MOV       *+XAR4[0],#0          ; [CPU_] |891| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 893,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 892,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |892| 
	.dwpsn	file "../Source/prod.c",line 893,column 10,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |893| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 894,column 6,is_stmt,isa 0
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |894| 
        ; call occurs [#_ad7738_getlimitst] ; [] |894| 
        MOV       *XAR1++,AL            ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 893,column 17,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 6,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 893,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |893| 
        B         $C$L670,LT            ; [CPU_] |893| 
        ; branchcc occurs ; [] |893| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 896,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |896| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 897,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |897| 
        ; branch occurs ; [] |897| 
$C$L671:    
        MOV       AL,*-SP[43]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 826,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |826| 
	.dwpsn	file "../Source/prod.c",line 824,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |824| 
	.dwpsn	file "../Source/prod.c",line 826,column 5,is_stmt,isa 0
        MOVL      *-SP[56],XAR4         ; [CPU_] |826| 
        MOV       *+XAR4[0],#0          ; [CPU_] |826| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 827,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |827| 
        MOV       AL,*-SP[44]           ; [CPU_] |827| 
	.dwpsn	file "../Source/prod.c",line 828,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |828| 
        MOV       AL,*-SP[51]           ; [CPU_] |828| 
	.dwpsn	file "../Source/prod.c",line 829,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |829| 
        MOV       *+XAR4[3],AL          ; [CPU_] |829| 
        MOV       AL,*-SP[51]           ; [CPU_] |829| 
	.dwpsn	file "../Source/prod.c",line 830,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |830| 
        MOV       *+XAR4[4],AL          ; [CPU_] |830| 
        MOV       AL,*-SP[42]           ; [CPU_] |830| 
	.dwpsn	file "../Source/prod.c",line 831,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |831| 
        MOV       AH,*-SP[41]           ; [CPU_] |831| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |832| 
        MOV       *+XAR4[6],AL          ; [CPU_] |832| 
        MOV       AL,AH                 ; [CPU_] |832| 
        ADDB      AL,#1                 ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 823,column 5,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |823| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        MOV       *-SP[41],AL           ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 834,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |834| 
        ; branch occurs ; [] |834| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 835,column 6,is_stmt,isa 0
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |835| 
        ; call occurs [#_prod_getnext] ; [] |835| 
	.dwpsn	file "../Source/prod.c",line 837,column 7,is_stmt,isa 0
        DEC       *-SP[51]              ; [CPU_] |837| 
	.dwpsn	file "../Source/prod.c",line 835,column 6,is_stmt,isa 0
        MOVL      P,XAR4                ; [CPU_] |835| 
	.dwpsn	file "../Source/prod.c",line 837,column 7,is_stmt,isa 0
        B         $C$L682,NEQ           ; [CPU_] |837| 
        ; branchcc occurs ; [] |837| 
        MOV       AL,*-SP[43]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 839,column 6,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |839| 
	.dwpsn	file "../Source/prod.c",line 843,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |843| 
        MOVB      XAR4,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 842,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |842| 
        MOV       *-SP[50],AL           ; [CPU_] |842| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 844,column 7,is_stmt,isa 0
        AND       AL,*-SP[42]           ; [CPU_] |844| 
        B         $C$L675,EQ            ; [CPU_] |844| 
        ; branchcc occurs ; [] |844| 
	.dwpsn	file "../Source/prod.c",line 845,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |845| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |845| 
        MOVL      XAR0,ACC              ; [CPU_] |845| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |845| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 848,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |848| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 846,column 21,is_stmt,isa 0
        MOV       *-SP[49],#2           ; [CPU_] |846| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 847,column 9,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |847| 
        ANDB      AL,#0xff              ; [CPU_] |847| 
        MOV       *XAR5++,AL            ; [CPU_] |847| 
	.dwpsn	file "../Source/prod.c",line 848,column 9,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |848| 
        LSR       AL,8                  ; [CPU_] |848| 
        MOV       *XAR5++,AL            ; [CPU_] |848| 
	.dwpsn	file "../Source/prod.c",line 846,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR6--         ; [CPU_] |846| 
        ; branchcc occurs ; [] |846| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 843,column 18,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |843| 
        ADDB      XAR7,#1               ; [CPU_] |843| 
	.dwpsn	file "../Source/prod.c",line 852,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |852| 
        MOV       *-SP[50],AL           ; [CPU_] |852| 
	.dwpsn	file "../Source/prod.c",line 843,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR4--         ; [CPU_] |843| 
        ; branchcc occurs ; [] |843| 
	.dwpsn	file "../Source/prod.c",line 855,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |855| 
        MOVB      XAR4,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 856,column 7,is_stmt,isa 0
        AND       AL,*-SP[42]           ; [CPU_] |856| 
        B         $C$L678,EQ            ; [CPU_] |856| 
        ; branchcc occurs ; [] |856| 
	.dwpsn	file "../Source/prod.c",line 857,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |857| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |857| 
        ADDB      ACC,#8                ; [CPU_] |857| 
        MOVL      XAR0,ACC              ; [CPU_] |857| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |857| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 860,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |860| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 858,column 21,is_stmt,isa 0
        MOV       *-SP[49],#2           ; [CPU_] |858| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 859,column 9,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |859| 
        ANDB      AL,#0xff              ; [CPU_] |859| 
        MOV       *XAR5++,AL            ; [CPU_] |859| 
	.dwpsn	file "../Source/prod.c",line 860,column 9,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |860| 
        LSR       AL,8                  ; [CPU_] |860| 
        MOV       *XAR5++,AL            ; [CPU_] |860| 
	.dwpsn	file "../Source/prod.c",line 858,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR6--         ; [CPU_] |858| 
        ; branchcc occurs ; [] |858| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 855,column 18,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |855| 
        ADDB      XAR7,#1               ; [CPU_] |855| 
	.dwpsn	file "../Source/prod.c",line 864,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |864| 
        MOV       *-SP[50],AL           ; [CPU_] |864| 
	.dwpsn	file "../Source/prod.c",line 855,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR4--         ; [CPU_] |855| 
        ; branchcc occurs ; [] |855| 
	.dwpsn	file "../Source/prod.c",line 840,column 6,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |840| 
	.dwpsn	file "../Source/prod.c",line 867,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |867| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[50]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 868,column 7,is_stmt,isa 0
        AND       AL,*-SP[42]           ; [CPU_] |868| 
        B         $C$L681,EQ            ; [CPU_] |868| 
        ; branchcc occurs ; [] |868| 
	.dwpsn	file "../Source/prod.c",line 869,column 8,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |869| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |869| 
        ADDB      ACC,#12               ; [CPU_] |869| 
        MOVL      XAR7,ACC              ; [CPU_] |869| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |869| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 872,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |872| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 870,column 21,is_stmt,isa 0
        MOV       *-SP[49],#2           ; [CPU_] |870| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 871,column 9,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |871| 
        ANDB      AL,#0xff              ; [CPU_] |871| 
        MOV       *XAR5++,AL            ; [CPU_] |871| 
	.dwpsn	file "../Source/prod.c",line 872,column 9,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |872| 
        LSR       AL,8                  ; [CPU_] |872| 
        MOV       *XAR5++,AL            ; [CPU_] |872| 
	.dwpsn	file "../Source/prod.c",line 870,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR6--         ; [CPU_] |870| 
        ; branchcc occurs ; [] |870| 
$C$L681:    
        MOV       AL,*-SP[50]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 867,column 18,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |867| 
	.dwpsn	file "../Source/prod.c",line 876,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |876| 
        MOV       *-SP[50],AL           ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 867,column 18,is_stmt,isa 0
        MOV       AL,AR4                ; [CPU_] |867| 
        CMPB      AL,#2                 ; [CPU_] |867| 
        B         $C$L679,LT            ; [CPU_] |867| 
        ; branchcc occurs ; [] |867| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 834,column 12,is_stmt,isa 0
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |834| 
        ; call occurs [#_prod_getavail] ; [] |834| 
        TEST      ACC                   ; [CPU_] |834| 
        B         $C$L683,EQ            ; [CPU_] |834| 
        ; branchcc occurs ; [] |834| 
        MOV       AL,*-SP[44]           ; [CPU_] 
        CMP       AL,*-SP[39]           ; [CPU_] |834| 
        B         $C$L672,HI            ; [CPU_] |834| 
        ; branchcc occurs ; [] |834| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 880,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |880| 
        MOV       AL,*-SP[39]           ; [CPU_] |880| 
        MOV       *+XAR4[2],AL          ; [CPU_] |880| 
        MOV       AL,*-SP[45]           ; [CPU_] |880| 
	.dwpsn	file "../Source/prod.c",line 882,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |882| 
        ; branchcc occurs ; [] |882| 
	.dwpsn	file "../Source/prod.c",line 883,column 6,is_stmt,isa 0
        MOV       *-SP[46],#0           ; [CPU_] |883| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 886,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |886| 
$C$L685:    
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |886| 
        ; call occurs [#_scia_send_bin] ; [] |886| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 921,column 4,is_stmt,isa 0
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |921| 
        ; call occurs [#_scia_rx_getcmds] ; [] |921| 
        CMPB      AL,#0                 ; [CPU_] |921| 
        B         $C$L634,EQ            ; [CPU_] |921| 
        ; branchcc occurs ; [] |921| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 927,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |927| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |927| 
        ; call occurs [#_scia_rx_getcmd] ; [] |927| 
        MOV       *-SP[51],AL           ; [CPU_] |927| 
        CMPB      AL,#0                 ; [CPU_] |927| 
        B         $C$L634,EQ            ; [CPU_] |927| 
        ; branchcc occurs ; [] |927| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 944,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |944| 
        B         $C$L322,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
	.dwpsn	file "../Source/prod.c",line 3557,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3557| 
        B         $C$L634,NEQ           ; [CPU_] |3557| 
        ; branchcc occurs ; [] |3557| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3557| 
        B         $C$L634,LO            ; [CPU_] |3557| 
        ; branchcc occurs ; [] |3557| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3591,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3591| 
	.dwpsn	file "../Source/prod.c",line 3580,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3580| 
	.dwpsn	file "../Source/prod.c",line 3584,column 4,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |3584| 
	.dwpsn	file "../Source/prod.c",line 3583,column 4,is_stmt,isa 0
        MOV       *-SP[53],#2           ; [CPU_] |3583| 
	.dwpsn	file "../Source/prod.c",line 3591,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3591| 
	.dwpsn	file "../Source/prod.c",line 3584,column 4,is_stmt,isa 0
        MOV       *-SP[39],#1           ; [CPU_] |3584| 
	.dwpsn	file "../Source/prod.c",line 3591,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3591| 
        CMPB      AL,#146               ; [CPU_] |3591| 
        B         $C$L694,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#146               ; [CPU_] |3591| 
        B         $C$L231,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#54                ; [CPU_] |3591| 
        B         $C$L690,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#54                ; [CPU_] |3591| 
        B         $C$L725,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#36                ; [CPU_] |3591| 
        B         $C$L688,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#36                ; [CPU_] |3591| 
        B         $C$L287,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#33                ; [CPU_] |3591| 
        B         $C$L687,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#33                ; [CPU_] |3591| 
        B         $C$L302,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#16                ; [CPU_] |3591| 
        B         $C$L741,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        MOV       AH,AL                 ; [CPU_] |3591| 
        ADDB      AH,#-17               ; [CPU_] |3591| 
        CMPB      AH,#1                 ; [CPU_] |3591| 
        B         $C$L740,LOS           ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#32                ; [CPU_] |3591| 
        B         $C$L736,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3591| 
        B         $C$L298,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#35                ; [CPU_] |3591| 
        B         $C$L295,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3591| 
        B         $C$L689,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#51                ; [CPU_] |3591| 
        B         $C$L730,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#48                ; [CPU_] |3591| 
        B         $C$L281,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#49                ; [CPU_] |3591| 
        B         $C$L256,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#50                ; [CPU_] |3591| 
        B         $C$L732,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3591| 
        B         $C$L728,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#53                ; [CPU_] |3591| 
        B         $C$L727,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3591| 
        B         $C$L692,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#71                ; [CPU_] |3591| 
        B         $C$L252,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#68                ; [CPU_] |3591| 
        B         $C$L691,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#65                ; [CPU_] |3591| 
        B         $C$L710,GEQ           ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#55                ; [CPU_] |3591| 
        B         $C$L718,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#56                ; [CPU_] |3591| 
        B         $C$L714,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#57                ; [CPU_] |3591| 
        B         $C$L712,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3591| 
        B         $C$L709,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#70                ; [CPU_] |3591| 
        B         $C$L702,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3591| 
        B         $C$L693,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#132               ; [CPU_] |3591| 
        B         $C$L310,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#72                ; [CPU_] |3591| 
        B         $C$L245,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#130               ; [CPU_] |3591| 
        B         $C$L240,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#131               ; [CPU_] |3591| 
        B         $C$L311,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3591| 
        B         $C$L236,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#145               ; [CPU_] |3591| 
        B         $C$L235,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3591| 
        B         $C$L698,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#169               ; [CPU_] |3591| 
        B         $C$L168,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#161               ; [CPU_] |3591| 
        B         $C$L696,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#161               ; [CPU_] |3591| 
        B         $C$L194,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#150               ; [CPU_] |3591| 
        B         $C$L695,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#150               ; [CPU_] |3591| 
        B         $C$L224,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#147               ; [CPU_] |3591| 
        B         $C$L230,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#148               ; [CPU_] |3591| 
        B         $C$L229,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#149               ; [CPU_] |3591| 
        B         $C$L228,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3591| 
        B         $C$L215,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#160               ; [CPU_] |3591| 
        B         $C$L210,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3591| 
        B         $C$L697,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#166               ; [CPU_] |3591| 
        B         $C$L182,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#162               ; [CPU_] |3591| 
        B         $C$L189,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#163               ; [CPU_] |3591| 
        B         $C$L185,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#165               ; [CPU_] |3591| 
        B         $C$L184,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3591| 
        B         $C$L179,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#168               ; [CPU_] |3591| 
        B         $C$L177,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3591| 
        B         $C$L700,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#195               ; [CPU_] |3591| 
        B         $C$L143,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#192               ; [CPU_] |3591| 
        B         $C$L699,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#192               ; [CPU_] |3591| 
        B         $C$L160,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#170               ; [CPU_] |3591| 
        B         $C$L164,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#186               ; [CPU_] |3591| 
        B         $C$L308,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#187               ; [CPU_] |3591| 
        B         $C$L307,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3591| 
        B         $C$L153,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#194               ; [CPU_] |3591| 
        B         $C$L150,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3591| 
        B         $C$L701,GT            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#210               ; [CPU_] |3591| 
        B         $C$L79,EQ             ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#196               ; [CPU_] |3591| 
        B         $C$L115,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#197               ; [CPU_] |3591| 
        B         $C$L91,EQ             ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#198               ; [CPU_] |3591| 
        B         $C$L80,EQ             ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3591| 
        B         $C$L306,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        CMPB      AL,#240               ; [CPU_] |3591| 
        B         $C$L305,EQ            ; [CPU_] |3591| 
        ; branchcc occurs ; [] |3591| 
        B         $C$L317,UNC           ; [CPU_] |3591| 
        ; branch occurs ; [] |3591| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4255,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4255| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4255| 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4257,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4257| 
        ANDB      AL,#0xff              ; [CPU_] |4257| 
        MOV       *XAR1++,AL            ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4258| 
        LSR       AL,8                  ; [CPU_] |4258| 
        MOV       *XAR1++,AL            ; [CPU_] |4258| 
	.dwpsn	file "../Source/prod.c",line 4256,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4256| 
        ; branchcc occurs ; [] |4256| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4258,column 6,is_stmt,isa 0
        ADD       *-SP[53],#8           ; [CPU_] |4258| 
        MOV       *-SP[39],#3           ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4264,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4264| 
        MOV       AL,#0                 ; [CPU_] |4264| 
        MOV       AH,#0                 ; [CPU_] |4264| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4264| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4264| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4264| 
        ; call occurs [#FS$$CMP] ; [] |4264| 
        CMPB      AL,#0                 ; [CPU_] |4264| 
        B         $C$L705,NEQ           ; [CPU_] |4264| 
        ; branchcc occurs ; [] |4264| 
	.dwpsn	file "../Source/prod.c",line 4263,column 6,is_stmt,isa 0
        MOV       *-SP[51],#128         ; [CPU_] |4263| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4265,column 7,is_stmt,isa 0
        MOV       *-SP[51],#129         ; [CPU_] |4265| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4267,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4267| 
        MOV       AL,#0                 ; [CPU_] |4267| 
        MOV       AH,#0                 ; [CPU_] |4267| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4267| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4267| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4267| 
        ; call occurs [#FS$$CMP] ; [] |4267| 
        CMPB      AL,#0                 ; [CPU_] |4267| 
        B         $C$L707,EQ            ; [CPU_] |4267| 
        ; branchcc occurs ; [] |4267| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4268,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4268| 
        MOV       *-SP[51],AL           ; [CPU_] |4268| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4270,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4270| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4270| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4270| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4270| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4270| 
        ; call occurs [#FS$$CMP] ; [] |4270| 
        CMPB      AL,#0                 ; [CPU_] |4270| 
        B         $C$L708,EQ            ; [CPU_] |4270| 
        ; branchcc occurs ; [] |4270| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4271,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4271| 
        MOV       *-SP[51],AL           ; [CPU_] |4271| 
$C$L708:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4273,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4273| 
        MOV       *XAR1++,AL            ; [CPU_] |4273| 
	.dwpsn	file "../Source/prod.c",line 4262,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |4262| 
	.dwpsn	file "../Source/prod.c",line 4273,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4273| 
	.dwpsn	file "../Source/prod.c",line 4262,column 17,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4262| 
        MOVZ      AR0,AR6               ; [CPU_] |4262| 
        ADDB      ACC,#10               ; [CPU_] |4262| 
        MOV       *-SP[39],AR6          ; [CPU_] |4262| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4262| 
        CMP       AR0,#-1               ; [CPU_] |4262| 
        B         $C$L704,NEQ           ; [CPU_] |4262| 
        ; branchcc occurs ; [] |4262| 
        B         $C$L743,UNC           ; [CPU_] |4262| 
        ; branch occurs ; [] |4262| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4248,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4248| 
        MOV       AH,#16672             ; [CPU_] |4248| 
        MOVL      XAR0,#46              ; [CPU_] |4248| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4248| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4248| 
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4248| 
        ; call occurs [#FS$$MPY] ; [] |4248| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4248| 
        ; call occurs [#FS$$TOU] ; [] |4248| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4248| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4248| 
	.dwpsn	file "../Source/prod.c",line 4249,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4249| 
	.dwpsn	file "../Source/prod.c",line 4248,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4248| 
	.dwpsn	file "../Source/prod.c",line 4249,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4249| 
        MOV       *-SP[53],#4           ; [CPU_] |4249| 
	.dwpsn	file "../Source/prod.c",line 4251,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4251| 
        ; branch occurs ; [] |4251| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4230,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4230| 
        MOV       AH,#16672             ; [CPU_] |4230| 
        MOVL      XAR0,#46              ; [CPU_] |4230| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4230| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4230| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4230| 
        ; call occurs [#FS$$MPY] ; [] |4230| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4230| 
        ; call occurs [#FS$$TOU] ; [] |4230| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4230| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4230| 
	.dwpsn	file "../Source/prod.c",line 4231,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4231| 
	.dwpsn	file "../Source/prod.c",line 4230,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4231,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4231| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4233| 
        ; call occurs [#_ad7738_getmon] ; [] |4233| 
	.dwpsn	file "../Source/prod.c",line 4234,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4234| 
        MOV       AH,#18371             ; [CPU_] |4234| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4234| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4234| 
        ADDL      ACC,XAR4              ; [CPU_] |4234| 
        SUBB      ACC,#130              ; [CPU_] |4234| 
        MOVL      XAR4,ACC              ; [CPU_] |4234| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4234| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4234| 
        ; call occurs [#FS$$MPY] ; [] |4234| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4234| 
        ; call occurs [#FS$$TOL] ; [] |4234| 
	.dwpsn	file "../Source/prod.c",line 4235,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4235| 
	.dwpsn	file "../Source/prod.c",line 4234,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4234| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4234| 
	.dwpsn	file "../Source/prod.c",line 4235,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4235| 
	.dwpsn	file "../Source/prod.c",line 4234,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4234| 
	.dwpsn	file "../Source/prod.c",line 4235,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4235| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4238,column 6,is_stmt,isa 0
        MOV       *-SP[53],#8           ; [CPU_] |4238| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4237,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4237| 
        ANDB      AL,#0xff              ; [CPU_] |4237| 
        MOV       *XAR4++,AL            ; [CPU_] |4237| 
	.dwpsn	file "../Source/prod.c",line 4238,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4238| 
        LSR       AL,8                  ; [CPU_] |4238| 
        MOV       *XAR4++,AL            ; [CPU_] |4238| 
	.dwpsn	file "../Source/prod.c",line 4236,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4236| 
        ; branchcc occurs ; [] |4236| 
        B         $C$L743,UNC           ; [CPU_] |4236| 
        ; branch occurs ; [] |4236| 
$C$L712:    
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4217,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4217| 
        MOV       *-SP[53],AL           ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4216,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4216| 
        MOV       *-SP[39],AL           ; [CPU_] |4216| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4217,column 6,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4217| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4217| 
        MOV       *XAR1++,AL            ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4216,column 17,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4217,column 6,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4216,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4216| 
        B         $C$L713,LT            ; [CPU_] |4216| 
        ; branchcc occurs ; [] |4216| 
        B         $C$L743,UNC           ; [CPU_] |4216| 
        ; branch occurs ; [] |4216| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4194,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4194| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4194| 
        MOVL      XAR6,ACC              ; [CPU_] |4194| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4194| 
        MOV       *XAR4++,AL            ; [CPU_] |4194| 
	.dwpsn	file "../Source/prod.c",line 4195,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4195| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4195| 
        MOVL      XAR6,ACC              ; [CPU_] |4195| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4195| 
        MOV       *XAR4++,AL            ; [CPU_] |4195| 
	.dwpsn	file "../Source/prod.c",line 4196,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4196| 
        ADD       ACC,#199 << 4         ; [CPU_] |4196| 
        MOVL      XAR6,ACC              ; [CPU_] |4196| 
	.dwpsn	file "../Source/prod.c",line 4198,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4198| 
	.dwpsn	file "../Source/prod.c",line 4196,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4196| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4196| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4200,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4200| 
        ANDB      AL,#0xff              ; [CPU_] |4200| 
        MOV       *XAR4++,AL            ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4201,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4201| 
        LSR       AL,8                  ; [CPU_] |4201| 
        MOV       *XAR4++,AL            ; [CPU_] |4201| 
	.dwpsn	file "../Source/prod.c",line 4199,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4199| 
        ; branchcc occurs ; [] |4199| 
	.dwpsn	file "../Source/prod.c",line 4204,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4204| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4206,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4206| 
        ANDB      AL,#0xff              ; [CPU_] |4206| 
        MOV       *XAR4++,AL            ; [CPU_] |4206| 
	.dwpsn	file "../Source/prod.c",line 4207,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4207| 
        LSR       AL,8                  ; [CPU_] |4207| 
        MOV       *XAR4++,AL            ; [CPU_] |4207| 
	.dwpsn	file "../Source/prod.c",line 4205,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4205| 
        ; branchcc occurs ; [] |4205| 
	.dwpsn	file "../Source/prod.c",line 4195,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4195| 
        ADD       *-SP[53],#11          ; [CPU_] |4195| 
	.dwpsn	file "../Source/prod.c",line 4193,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4193| 
        ADDB      XAR0,#8               ; [CPU_] |4193| 
        ADDB      XAR7,#8               ; [CPU_] |4193| 
        SUBB      XAR6,#1               ; [CPU_U] |4193| 
        MOVZ      AR3,AR6               ; [CPU_] |4193| 
        CMP       AR6,#-1               ; [CPU_] |4193| 
        B         $C$L715,NEQ           ; [CPU_] |4193| 
        ; branchcc occurs ; [] |4193| 
        B         $C$L743,UNC           ; [CPU_] |4193| 
        ; branch occurs ; [] |4193| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOV       *-SP[39],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4140| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4140| 
        MOVL      XAR6,ACC              ; [CPU_] |4140| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4140| 
        MOV       *XAR4++,AL            ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4141| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4141| 
        MOVL      XAR6,ACC              ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4145,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4145| 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4141| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4141| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4152,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4152| 
        ANDB      AL,#0xff              ; [CPU_] |4152| 
        MOV       *XAR4++,AL            ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4153,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4153| 
        LSR       AL,8                  ; [CPU_] |4153| 
        MOV       *XAR4++,AL            ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4151,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR6--         ; [CPU_] |4151| 
        ; branchcc occurs ; [] |4151| 
	.dwpsn	file "../Source/prod.c",line 4158,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR0             ; [CPU_] |4158| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4165,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4165| 
        ANDB      AL,#0xff              ; [CPU_] |4165| 
        MOV       *XAR4++,AL            ; [CPU_] |4165| 
	.dwpsn	file "../Source/prod.c",line 4166,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4166| 
        LSR       AL,8                  ; [CPU_] |4166| 
        MOV       *XAR4++,AL            ; [CPU_] |4166| 
	.dwpsn	file "../Source/prod.c",line 4164,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR6--         ; [CPU_] |4164| 
        ; branchcc occurs ; [] |4164| 
        MOVL      XAR7,*-SP[56]         ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4171,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4171| 
        ANDB      AL,#0xff              ; [CPU_] |4171| 
        MOV       *XAR4++,AL            ; [CPU_] |4171| 
	.dwpsn	file "../Source/prod.c",line 4172,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4172| 
        LSR       AL,8                  ; [CPU_] |4172| 
        MOV       *XAR4++,AL            ; [CPU_] |4172| 
	.dwpsn	file "../Source/prod.c",line 4170,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR6--         ; [CPU_] |4170| 
        ; branchcc occurs ; [] |4170| 
        MOVL      XAR7,XT               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4177,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4177| 
        ANDB      AL,#0xff              ; [CPU_] |4177| 
        MOV       *XAR4++,AL            ; [CPU_] |4177| 
	.dwpsn	file "../Source/prod.c",line 4178,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4178| 
        LSR       AL,8                  ; [CPU_] |4178| 
        MOV       *XAR4++,AL            ; [CPU_] |4178| 
	.dwpsn	file "../Source/prod.c",line 4176,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR6--         ; [CPU_] |4176| 
        ; branchcc occurs ; [] |4176| 
        MOVL      XAR7,P                ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4183,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4183| 
        ANDB      AL,#0xff              ; [CPU_] |4183| 
        MOV       *XAR4++,AL            ; [CPU_] |4183| 
	.dwpsn	file "../Source/prod.c",line 4184,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4184| 
        LSR       AL,8                  ; [CPU_] |4184| 
        MOV       *XAR4++,AL            ; [CPU_] |4184| 
	.dwpsn	file "../Source/prod.c",line 4182,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR6--         ; [CPU_] |4182| 
        ; branchcc occurs ; [] |4182| 
	.dwpsn	file "../Source/prod.c",line 4139,column 17,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4139| 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4139,column 17,is_stmt,isa 0
        ADDB      ACC,#12               ; [CPU_] |4139| 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        ADD       *-SP[53],#22          ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4139,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4139| 
        ADDB      XAR1,#12              ; [CPU_] |4139| 
        ADDB      XAR0,#12              ; [CPU_] |4139| 
        SUBB      XAR6,#1               ; [CPU_U] |4139| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4139| 
        MOVL      ACC,XT                ; [CPU_] |4139| 
        MOV       *-SP[39],AR6          ; [CPU_] |4139| 
        ADDB      ACC,#12               ; [CPU_] |4139| 
        MOVL      XT,ACC                ; [CPU_] |4139| 
        MOVL      ACC,P                 ; [CPU_] |4139| 
        ADDB      ACC,#12               ; [CPU_] |4139| 
        MOVL      P,ACC                 ; [CPU_] |4139| 
        CMP       AR6,#-1               ; [CPU_] |4139| 
        B         $C$L719,NEQ           ; [CPU_] |4139| 
        ; branchcc occurs ; [] |4139| 
        B         $C$L743,UNC           ; [CPU_] |4139| 
        ; branch occurs ; [] |4139| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4132,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4132| 
        MOV       *-SP[53],AL           ; [CPU_] |4132| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4130,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4130| 
        MOV       *XAR4++,AL            ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4131| 
        MOV       *XAR4++,AL            ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4132,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4132| 
	.dwpsn	file "../Source/prod.c",line 4129,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4132,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4132| 
	.dwpsn	file "../Source/prod.c",line 4129,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4129| 
        ; branchcc occurs ; [] |4129| 
        B         $C$L743,UNC           ; [CPU_] |4129| 
        ; branch occurs ; [] |4129| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4120,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4120| 
        MOVB      XAR0,#36              ; [CPU_] |4120| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4120| 
        MOVL      XAR0,#80              ; [CPU_] |4120| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4120| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4120| 
	.dwpsn	file "../Source/prod.c",line 4122,column 6,is_stmt,isa 0
        MOV       *-SP[53],#7           ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4120,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4120| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4122,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4121,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4121| 
        ; branch occurs ; [] |4121| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4106,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4106| 
        MOVB      XAR0,#38              ; [CPU_] |4106| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4106| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4107,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4107| 
	.dwpsn	file "../Source/prod.c",line 4106,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4106| 
	.dwpsn	file "../Source/prod.c",line 4107,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4107| 
	.dwpsn	file "../Source/prod.c",line 4106,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4107,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4107| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4107| 
	.dwpsn	file "../Source/prod.c",line 4112,column 6,is_stmt,isa 0
        MOV       *-SP[53],#8           ; [CPU_] |4112| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4111,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4111| 
        ANDB      AL,#0xff              ; [CPU_] |4111| 
        MOV       *XAR4++,AL            ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4112,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4112| 
        LSR       AL,8                  ; [CPU_] |4112| 
        MOV       *XAR4++,AL            ; [CPU_] |4112| 
	.dwpsn	file "../Source/prod.c",line 4110,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4110| 
        ; branchcc occurs ; [] |4110| 
        B         $C$L743,UNC           ; [CPU_] |4110| 
        ; branch occurs ; [] |4110| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4096,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4096| 
        MOV       *-SP[53],AL           ; [CPU_] |4096| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4095,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4095| 
	.dwpsn	file "../Source/prod.c",line 4096,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4095,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4095| 
        ; branchcc occurs ; [] |4095| 
        B         $C$L743,UNC           ; [CPU_] |4095| 
        ; branch occurs ; [] |4095| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4079,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4079| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4081,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4081| 
        ANDB      AL,#0xff              ; [CPU_] |4081| 
        MOV       *XAR4++,AL            ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4082,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4082| 
        LSR       AL,8                  ; [CPU_] |4082| 
        MOV       *XAR4++,AL            ; [CPU_] |4082| 
	.dwpsn	file "../Source/prod.c",line 4080,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4080| 
        ; branchcc occurs ; [] |4080| 
	.dwpsn	file "../Source/prod.c",line 4078,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4078| 
	.dwpsn	file "../Source/prod.c",line 4082,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |4082| 
	.dwpsn	file "../Source/prod.c",line 4078,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4078| 
        ; branchcc occurs ; [] |4078| 
	.dwpsn	file "../Source/prod.c",line 4087,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4087| 
        MOVL      ACC,XAR5              ; [CPU_] |4087| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4087| 
        MOVL      XAR6,ACC              ; [CPU_] |4087| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4087| 
        ANDB      AL,#0xff              ; [CPU_] |4087| 
        MOV       *XAR4++,AL            ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4088,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4088| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4088| 
        MOVL      XAR5,ACC              ; [CPU_] |4088| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4088| 
        LSR       AL,8                  ; [CPU_] |4088| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4088| 
$C$L735:    
        ADD       *-SP[53],#2           ; [CPU_] |4088| 
	.dwpsn	file "../Source/prod.c",line 4091,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4091| 
        ; branch occurs ; [] |4091| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3733,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3733| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3733| 
        MOVZ      AR4,AR4               ; [CPU_] |3733| 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3735,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3735| 
        ANDB      AL,#0xff              ; [CPU_] |3735| 
        MOV       *XAR1++,AL            ; [CPU_] |3735| 
	.dwpsn	file "../Source/prod.c",line 3736,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3736| 
        LSR       AL,8                  ; [CPU_] |3736| 
        MOV       *XAR1++,AL            ; [CPU_] |3736| 
	.dwpsn	file "../Source/prod.c",line 3734,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3734| 
        ; branchcc occurs ; [] |3734| 
	.dwpsn	file "../Source/prod.c",line 3740,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3740| 
        ANDB      AL,#0xff              ; [CPU_] |3740| 
	.dwpsn	file "../Source/prod.c",line 3741,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3741| 
	.dwpsn	file "../Source/prod.c",line 3740,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3740| 
	.dwpsn	file "../Source/prod.c",line 3741,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3741| 
        LSR       AL,8                  ; [CPU_] |3741| 
        MOV       *XAR1++,AL            ; [CPU_] |3741| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3741| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3745,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3745| 
        ANDB      AL,#0xff              ; [CPU_] |3745| 
        MOV       *XAR1++,AL            ; [CPU_] |3745| 
	.dwpsn	file "../Source/prod.c",line 3746,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3746| 
        LSR       AL,8                  ; [CPU_] |3746| 
        MOV       *XAR1++,AL            ; [CPU_] |3746| 
	.dwpsn	file "../Source/prod.c",line 3744,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3744| 
        ; branchcc occurs ; [] |3744| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3750,column 5,is_stmt,isa 0
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_strlen")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3750| 
        ; call occurs [#_strlen] ; [] |3750| 
	.dwpsn	file "../Source/prod.c",line 3751,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3751| 
	.dwpsn	file "../Source/prod.c",line 3736,column 6,is_stmt,isa 0
        ADD       *-SP[53],#11          ; [CPU_] |3736| 
	.dwpsn	file "../Source/prod.c",line 3752,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3752| 
        B         $C$L743,EQ            ; [CPU_] |3752| 
        ; branchcc occurs ; [] |3752| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3751,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3751| 
	.dwpsn	file "../Source/prod.c",line 3752,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3752| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3753,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3753| 
	.dwpsn	file "../Source/prod.c",line 3752,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3752| 
	.dwpsn	file "../Source/prod.c",line 3753,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3753| 
        INC       *-SP[53]              ; [CPU_] |3753| 
	.dwpsn	file "../Source/prod.c",line 3752,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3752| 
        B         $C$L739,HI            ; [CPU_] |3752| 
        ; branchcc occurs ; [] |3752| 
        B         $C$L743,UNC           ; [CPU_] |3752| 
        ; branch occurs ; [] |3752| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3719,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3719| 
        MOVL      XAR0,#66              ; [CPU_] |3719| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3719| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3719| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3719| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3719| 
	.dwpsn	file "../Source/prod.c",line 3722,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3722| 
        ; branch occurs ; [] |3722| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3713,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3713| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3713| 
$C$L742:    
        MOV       *-SP[53],#3           ; [CPU_] |3713| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5704,column 5,is_stmt,isa 0
        MOV       AL,*-SP[53]           ; [CPU_] |5704| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5704| 
        ; call occurs [#_scia_send_bin] ; [] |5704| 
	.dwpsn	file "../Source/prod.c",line 5706,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5706| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |5706| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5706| 
        CMPB      AL,#240               ; [CPU_] |5706| 
        B         $C$L634,NEQ           ; [CPU_] |5706| 
        ; branchcc occurs ; [] |5706| 
	.dwpsn	file "../Source/prod.c",line 5707,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5707| 
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_delay_us")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5707| 
        ; call occurs [#_delay_us] ; [] |5707| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5708,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5708| 
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5708| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5708| 
        B         $C$L634,UNC           ; [CPU_] |5708| 
        ; branch occurs ; [] |5708| 
	.dwattr $C$DW$268, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$268, DW_AT_TI_end_line(0x166b)
	.dwattr $C$DW$268, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$268

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1459	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1459, DW_AT_name("get_fattime")
	.dwattr $C$DW$1459, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1459, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1459, DW_AT_external
	.dwattr $C$DW$1459, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1459, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1459, DW_AT_TI_begin_line(0x73)
	.dwattr $C$DW$1459, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1459, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 115,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 115 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 119,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 119 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 120 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 121 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |119| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |119| 
        MOVL      ACC,P                 ; [CPU_] |119| 
        SFR       ACC,1                 ; [CPU_] |119| 
        MOVL      P,ACC                 ; [CPU_] |119| 
        MOV       AL,@_rtc              ; [CPU_] |119| 
        SUB       AL,#1980              ; [CPU_] |119| 
        MOV       ACC,AL << 4           ; [CPU_] |119| 
        OR        ACC,@_rtc+1           ; [CPU_] |119| 
        LSL       ACC,5                 ; [CPU_] |119| 
        OR        ACC,@_rtc+2           ; [CPU_] |119| 
        LSL       ACC,5                 ; [CPU_] |119| 
        OR        ACC,@_rtc+4           ; [CPU_] |119| 
        LSL       ACC,6                 ; [CPU_] |119| 
        OR        ACC,@_rtc+5           ; [CPU_] |119| 
        LSL       ACC,5                 ; [CPU_] |119| 
        OR        AL,PL                 ; [CPU_] |119| 
        OR        AH,PH                 ; [CPU_] |119| 
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1459, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1459, DW_AT_TI_end_line(0x7a)
	.dwattr $C$DW$1459, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1459

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Nov 20 2019",0
	.align	2
$C$FSL62:	.string	"10:10:38",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_conf_default
	.global	_ad7738_resettare
	.global	_ad7738_setcal
	.global	_ad7738_resetpeak
	.global	_ad7738_resetlimit
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_lcd_puts
	.global	_configCAN
	.global	_ad7738_resetvall
	.global	_lcd_dputs
	.global	_ad7738_monclr
	.global	_maf_rst
	.global	_velf_rst
	.global	_ds1820start
	.global	_ad7738_init
	.global	_dac_setmode
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_METHOD
	.global	_ad7738_settemp
	.global	_delay_us
	.global	_UNITS
	.global	_BITMAP
	.global	_BAUD
	.global	_latch_dac
	.global	_LPV
	.global	_InitPieVectTable
	.global	_mcbsp_xmit
	.global	_INTERFACE
	.global	_gpio_init
	.global	_extio_init
	.global	_led_init
	.global	_lcd_init
	.global	_led_set
	.global	_lcd_clear
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_ssr_set
	.global	_sys_init
	.global	_uart_set_dir
	.global	_tagdetect
	.global	_secureRamFuncs_runstart
	.global	_secureRamFuncs_loadend
	.global	_port4004
	.global	_port400e
	.global	_Flash28_API_LoadStart
	.global	_Flash28_API_RunStart
	.global	_Flash28_API_LoadEnd
	.global	_secureRamFuncs_loadstart
	.global	_scia_send_bin
	.global	_scia_puts
	.global	_scia_getparam
	.global	_conf_write
	.global	_conf_read
	.global	_sprintf
	.global	_atoi
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_getlimitst
	.global	_ad7738_tempstart
	.global	_ad7738_getlimitchgd
	.global	_ds1820read
	.global	_strtod
	.global	_strlen
	.global	_atol
	.global	_Flash_CallbackPtr
	.global	_prod_getnext
	.global	_ad7738_getvall
	.global	_Flash_CPUScaleFactor
	.global	_ad7738_getraw
	.global	_ad7738_getmon
	.global	_prod_getavail
	.global	_ad7738_getpeak
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1461	.dwtag  DW_TAG_member
	.dwattr $C$DW$1461, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1461, DW_AT_name("fs_type")
	.dwattr $C$DW$1461, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1461, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1461, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1462	.dwtag  DW_TAG_member
	.dwattr $C$DW$1462, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1462, DW_AT_name("drv")
	.dwattr $C$DW$1462, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1462, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1462, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1463	.dwtag  DW_TAG_member
	.dwattr $C$DW$1463, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1463, DW_AT_name("csize")
	.dwattr $C$DW$1463, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1463, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1463, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1464	.dwtag  DW_TAG_member
	.dwattr $C$DW$1464, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1464, DW_AT_name("n_fats")
	.dwattr $C$DW$1464, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1464, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1464, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1465	.dwtag  DW_TAG_member
	.dwattr $C$DW$1465, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1465, DW_AT_name("wflag")
	.dwattr $C$DW$1465, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1465, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1465, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1466	.dwtag  DW_TAG_member
	.dwattr $C$DW$1466, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1466, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1466, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1466, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1466, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1467	.dwtag  DW_TAG_member
	.dwattr $C$DW$1467, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1467, DW_AT_name("id")
	.dwattr $C$DW$1467, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1467, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1467, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1468	.dwtag  DW_TAG_member
	.dwattr $C$DW$1468, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1468, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1468, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1468, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1468, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1469	.dwtag  DW_TAG_member
	.dwattr $C$DW$1469, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1469, DW_AT_name("last_clust")
	.dwattr $C$DW$1469, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1469, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1469, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1470	.dwtag  DW_TAG_member
	.dwattr $C$DW$1470, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1470, DW_AT_name("free_clust")
	.dwattr $C$DW$1470, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1470, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1470, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1471	.dwtag  DW_TAG_member
	.dwattr $C$DW$1471, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1471, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1471, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1471, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1471, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1472	.dwtag  DW_TAG_member
	.dwattr $C$DW$1472, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1472, DW_AT_name("cdir")
	.dwattr $C$DW$1472, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1472, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1472, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1473	.dwtag  DW_TAG_member
	.dwattr $C$DW$1473, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1473, DW_AT_name("n_fatent")
	.dwattr $C$DW$1473, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1473, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1473, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1474	.dwtag  DW_TAG_member
	.dwattr $C$DW$1474, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1474, DW_AT_name("fsize")
	.dwattr $C$DW$1474, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1474, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1474, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1475	.dwtag  DW_TAG_member
	.dwattr $C$DW$1475, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1475, DW_AT_name("fatbase")
	.dwattr $C$DW$1475, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1475, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1475, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1476	.dwtag  DW_TAG_member
	.dwattr $C$DW$1476, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1476, DW_AT_name("dirbase")
	.dwattr $C$DW$1476, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1476, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1476, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1477	.dwtag  DW_TAG_member
	.dwattr $C$DW$1477, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1477, DW_AT_name("database")
	.dwattr $C$DW$1477, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1477, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1477, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1478	.dwtag  DW_TAG_member
	.dwattr $C$DW$1478, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1478, DW_AT_name("winsect")
	.dwattr $C$DW$1478, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1478, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1478, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1479	.dwtag  DW_TAG_member
	.dwattr $C$DW$1479, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1479, DW_AT_name("win")
	.dwattr $C$DW$1479, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1479, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1479, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1480	.dwtag  DW_TAG_member
	.dwattr $C$DW$1480, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1480, DW_AT_name("fs")
	.dwattr $C$DW$1480, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1480, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1480, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1481	.dwtag  DW_TAG_member
	.dwattr $C$DW$1481, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1481, DW_AT_name("id")
	.dwattr $C$DW$1481, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1481, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1481, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1482	.dwtag  DW_TAG_member
	.dwattr $C$DW$1482, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1482, DW_AT_name("flag")
	.dwattr $C$DW$1482, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1482, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1482, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1483	.dwtag  DW_TAG_member
	.dwattr $C$DW$1483, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1483, DW_AT_name("pad1")
	.dwattr $C$DW$1483, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1483, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1483, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1484	.dwtag  DW_TAG_member
	.dwattr $C$DW$1484, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1484, DW_AT_name("fptr")
	.dwattr $C$DW$1484, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1484, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1484, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1485	.dwtag  DW_TAG_member
	.dwattr $C$DW$1485, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1485, DW_AT_name("fsize")
	.dwattr $C$DW$1485, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1485, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1485, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1486	.dwtag  DW_TAG_member
	.dwattr $C$DW$1486, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1486, DW_AT_name("org_clust")
	.dwattr $C$DW$1486, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1486, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1486, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1487	.dwtag  DW_TAG_member
	.dwattr $C$DW$1487, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1487, DW_AT_name("curr_clust")
	.dwattr $C$DW$1487, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1487, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1487, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1488	.dwtag  DW_TAG_member
	.dwattr $C$DW$1488, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1488, DW_AT_name("dsect")
	.dwattr $C$DW$1488, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1488, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1488, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1489	.dwtag  DW_TAG_member
	.dwattr $C$DW$1489, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1489, DW_AT_name("dir_sect")
	.dwattr $C$DW$1489, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1489, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1489, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1490	.dwtag  DW_TAG_member
	.dwattr $C$DW$1490, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1490, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1490, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1490, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1490, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1491	.dwtag  DW_TAG_member
	.dwattr $C$DW$1491, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1491, DW_AT_name("cltbl")
	.dwattr $C$DW$1491, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1491, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1491, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1492	.dwtag  DW_TAG_member
	.dwattr $C$DW$1492, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1492, DW_AT_name("buf")
	.dwattr $C$DW$1492, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1492, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1492, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1493	.dwtag  DW_TAG_member
	.dwattr $C$DW$1493, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1493, DW_AT_name("year")
	.dwattr $C$DW$1493, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1493, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1493, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1494, DW_AT_name("month")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1495, DW_AT_name("mday")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1496, DW_AT_name("wday")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("hour")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("min")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1499, DW_AT_name("sec")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1500, DW_AT_name("adc")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1501, DW_AT_name("adw")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1502, DW_AT_name("pos")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1503, DW_AT_name("vel")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1504, DW_AT_name("ci")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1505, DW_AT_name("bslope")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1506, DW_AT_name("tcx")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1507, DW_AT_name("tcy")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1508, DW_AT_name("tcz")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1509	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1509, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1510, DW_AT_name("what")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1511, DW_AT_name("ch")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1512, DW_AT_name("dslopep")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1513, DW_AT_name("dslopen")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1514, DW_AT_name("dint")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1515, DW_AT_name("gain")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1516, DW_AT_name("offset")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1517	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1517, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1518, DW_AT_name("what")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1519, DW_AT_name("ch")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1520, DW_AT_name("adec")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1521	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1521, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1522, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1522, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1522, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1523, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1523, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1523, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1524, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1524, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1524, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1525, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1525, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1525, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1526, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1526, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1526, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1527, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1527, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1527, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1528, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1528, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1528, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1529, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1529, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1529, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1530, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1530, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1530, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1531, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1531, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1531, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1532, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1532, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1532, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1533, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1533, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1533, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1534, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1534, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1534, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1535, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1535, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1535, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1536, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1536, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1536, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1537, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1537, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1537, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1538, DW_AT_name("all")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1539, DW_AT_name("bit")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1540, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1540, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1540, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1541, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1541, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1541, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1542, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1542, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1542, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1543, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1543, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1543, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1544, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1544, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1544, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1545, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1545, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1545, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1546, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1546, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1547, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1547, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1548, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1548, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1548, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1549, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1549, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1549, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1550, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1550, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1550, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1551, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1551, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1552, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1552, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1553, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1553, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1554, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1554, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("all")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1557, DW_AT_name("bit")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("all")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1575, DW_AT_name("bit")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("all")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1593, DW_AT_name("bit")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("all")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1611, DW_AT_name("bit")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("all")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1629, DW_AT_name("bit")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("all")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1647, DW_AT_name("bit")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("all")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1665, DW_AT_name("bit")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("rsvd1")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("rsvd2")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("all")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1673, DW_AT_name("bit")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("rsvd1")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("rsvd2")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("all")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1681, DW_AT_name("bit")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("rsvd1")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("rsvd2")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("all")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1689, DW_AT_name("bit")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("rsvd1")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("rsvd2")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("all")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1697, DW_AT_name("bit")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("rsvd1")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("all")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1703, DW_AT_name("bit")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("rsvd1")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("all")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1709, DW_AT_name("bit")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("rsvd1")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("all")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1715, DW_AT_name("bit")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("rsvd1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("all")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1721, DW_AT_name("bit")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("all")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1739, DW_AT_name("bit")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("all")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1757, DW_AT_name("bit")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("all")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1775, DW_AT_name("bit")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("all")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1793, DW_AT_name("bit")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("rsvd1")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("rsvd2")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("all")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1799, DW_AT_name("bit")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("rsvd1")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("rsvd2")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("all")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1805, DW_AT_name("bit")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("rsvd1")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("rsvd2")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("all")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1811, DW_AT_name("bit")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("rsvd1")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("rsvd2")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("all")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1817, DW_AT_name("bit")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1818, DW_AT_name("GPADAT")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1819, DW_AT_name("GPASET")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1820, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1821, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1822, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1823, DW_AT_name("GPBSET")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1824, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1825, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1826, DW_AT_name("rsvd1")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1827, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1828, DW_AT_name("GPDSET")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1829, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1830, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1831, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1832, DW_AT_name("GPESET")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1833, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1834, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1835, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1836, DW_AT_name("GPFSET")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1837, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1838, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1839, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1840, DW_AT_name("GPGSET")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1841, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1842, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1843, DW_AT_name("rsvd2")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1844	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1844)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("what")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("ch")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("limit")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1848, DW_AT_name("limits")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1849, DW_AT_name("limitr")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1850	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1850, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1851, DW_AT_name("usn")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1852, DW_AT_name("uname")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1853, DW_AT_name("rxdir")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1854, DW_AT_name("baud")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1855, DW_AT_name("tagiden")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1856, DW_AT_name("tarepersist")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("filter")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1858, DW_AT_name("diffwin")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1859, DW_AT_name("ch")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1860, DW_AT_name("sensor")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1861, DW_AT_name("vfd")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1862, DW_AT_name("dac")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1863, DW_AT_name("lim")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1864, DW_AT_name("velfilter")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1865, DW_AT_name("cntperin")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1866, DW_AT_name("magic")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1867	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1867)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1868, DW_AT_name("ssn")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1869, DW_AT_name("slbl")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1870, DW_AT_name("tagid")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1871, DW_AT_name("method")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1872, DW_AT_name("date")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1873, DW_AT_name("range")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1874, DW_AT_name("unit")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1875, DW_AT_name("ounit")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1876, DW_AT_name("ufactor")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1877, DW_AT_name("points")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1878, DW_AT_name("mass")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1879, DW_AT_name("adc")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1880, DW_AT_name("slope")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1881, DW_AT_name("intercept")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1882, DW_AT_name("shunt")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1883, DW_AT_name("base")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1884, DW_AT_name("tare")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1885, DW_AT_name("dacgain")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1886, DW_AT_name("dacoff")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1887, DW_AT_name("ch")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1888	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1888, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1889	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1889)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1890	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1890, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1891	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$6)

$C$DW$T$172	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$1891)


$C$DW$T$173	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_byte_size(0x101)
$C$DW$1892	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1892, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$173

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1893	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$10)

$C$DW$T$195	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$1893)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1894	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$36)

$C$DW$1895	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$1894)

$C$DW$T$295	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$295, DW_AT_type(*$C$DW$1895)

$C$DW$1896	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$36)

$C$DW$T$296	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$296, DW_AT_type(*$C$DW$1896)


$C$DW$T$297	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$T$297, DW_AT_language(DW_LANG_C)
$C$DW$1897	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$297


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1898	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1898, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$302	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$302, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$302, DW_AT_byte_size(0x03)
$C$DW$1899	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1899, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$302

$C$DW$T$303	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$303, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$303, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1900	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1900, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1901	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1901, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1902	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1902, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1903	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$12)

$C$DW$T$325	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$325, DW_AT_type(*$C$DW$1903)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1904	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$90)

$C$DW$T$328	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$328, DW_AT_type(*$C$DW$1904)


$C$DW$T$329	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$329, DW_AT_type(*$C$DW$T$328)
	.dwattr $C$DW$T$329, DW_AT_language(DW_LANG_C)
$C$DW$1905	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$329

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$344	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$344, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$344, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$344, DW_AT_byte_size(0x08)
$C$DW$1906	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1906, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$344

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1907	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1907, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1908	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1908, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1909	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1909, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1910	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1910, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$363	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$363, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$363, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$363, DW_AT_byte_size(0x06)
$C$DW$1911	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1911, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$363

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1912	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1912, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1913	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1913, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$349	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$349, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$349, DW_AT_address_class(0x20)

$C$DW$1914	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$5)

$C$DW$T$176	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$1914)

$C$DW$T$177	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$T$177, DW_AT_address_class(0x20)


$C$DW$T$364	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$364, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$T$364, DW_AT_language(DW_LANG_C)
$C$DW$1915	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$364


$C$DW$T$365	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$365, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$365, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$365, DW_AT_byte_size(0x400)
$C$DW$1916	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1916, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$365


$C$DW$T$370	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$370, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$370, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$370, DW_AT_byte_size(0x08)
$C$DW$1917	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1917, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$370


$C$DW$T$371	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$371, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$371, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$371, DW_AT_byte_size(0x64)
$C$DW$1918	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1918, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$371


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$372, DW_AT_byte_size(0x40)
$C$DW$1919	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1919, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$372

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1920	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1920, DW_AT_name("AL")
	.dwattr $C$DW$1920, DW_AT_location[DW_OP_reg0]

$C$DW$1921	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1921, DW_AT_name("AH")
	.dwattr $C$DW$1921, DW_AT_location[DW_OP_reg1]

$C$DW$1922	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1922, DW_AT_name("PL")
	.dwattr $C$DW$1922, DW_AT_location[DW_OP_reg2]

$C$DW$1923	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1923, DW_AT_name("PH")
	.dwattr $C$DW$1923, DW_AT_location[DW_OP_reg3]

$C$DW$1924	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1924, DW_AT_name("SP")
	.dwattr $C$DW$1924, DW_AT_location[DW_OP_reg20]

$C$DW$1925	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1925, DW_AT_name("XT")
	.dwattr $C$DW$1925, DW_AT_location[DW_OP_reg21]

$C$DW$1926	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1926, DW_AT_name("T")
	.dwattr $C$DW$1926, DW_AT_location[DW_OP_reg22]

$C$DW$1927	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1927, DW_AT_name("ST0")
	.dwattr $C$DW$1927, DW_AT_location[DW_OP_reg23]

$C$DW$1928	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1928, DW_AT_name("ST1")
	.dwattr $C$DW$1928, DW_AT_location[DW_OP_reg24]

$C$DW$1929	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1929, DW_AT_name("PC")
	.dwattr $C$DW$1929, DW_AT_location[DW_OP_reg25]

$C$DW$1930	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1930, DW_AT_name("RPC")
	.dwattr $C$DW$1930, DW_AT_location[DW_OP_reg26]

$C$DW$1931	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1931, DW_AT_name("FP")
	.dwattr $C$DW$1931, DW_AT_location[DW_OP_reg28]

$C$DW$1932	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1932, DW_AT_name("DP")
	.dwattr $C$DW$1932, DW_AT_location[DW_OP_reg29]

$C$DW$1933	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1933, DW_AT_name("SXM")
	.dwattr $C$DW$1933, DW_AT_location[DW_OP_reg30]

$C$DW$1934	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1934, DW_AT_name("PM")
	.dwattr $C$DW$1934, DW_AT_location[DW_OP_reg31]

$C$DW$1935	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1935, DW_AT_name("OVM")
	.dwattr $C$DW$1935, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1936	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1936, DW_AT_name("PAGE0")
	.dwattr $C$DW$1936, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1937	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1937, DW_AT_name("AMODE")
	.dwattr $C$DW$1937, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1938	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1938, DW_AT_name("INTM")
	.dwattr $C$DW$1938, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1939	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1939, DW_AT_name("IFR")
	.dwattr $C$DW$1939, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1940	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1940, DW_AT_name("IER")
	.dwattr $C$DW$1940, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1941	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1941, DW_AT_name("V")
	.dwattr $C$DW$1941, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1942	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1942, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1942, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1943	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1943, DW_AT_name("VOL")
	.dwattr $C$DW$1943, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1944	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1944, DW_AT_name("AR0")
	.dwattr $C$DW$1944, DW_AT_location[DW_OP_reg4]

$C$DW$1945	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1945, DW_AT_name("XAR0")
	.dwattr $C$DW$1945, DW_AT_location[DW_OP_reg5]

$C$DW$1946	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1946, DW_AT_name("AR1")
	.dwattr $C$DW$1946, DW_AT_location[DW_OP_reg6]

$C$DW$1947	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1947, DW_AT_name("XAR1")
	.dwattr $C$DW$1947, DW_AT_location[DW_OP_reg7]

$C$DW$1948	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1948, DW_AT_name("AR2")
	.dwattr $C$DW$1948, DW_AT_location[DW_OP_reg8]

$C$DW$1949	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1949, DW_AT_name("XAR2")
	.dwattr $C$DW$1949, DW_AT_location[DW_OP_reg9]

$C$DW$1950	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1950, DW_AT_name("AR3")
	.dwattr $C$DW$1950, DW_AT_location[DW_OP_reg10]

$C$DW$1951	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1951, DW_AT_name("XAR3")
	.dwattr $C$DW$1951, DW_AT_location[DW_OP_reg11]

$C$DW$1952	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1952, DW_AT_name("AR4")
	.dwattr $C$DW$1952, DW_AT_location[DW_OP_reg12]

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("XAR4")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg13]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("AR5")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg14]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("XAR5")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_reg15]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("AR6")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_reg16]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("XAR6")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg17]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("AR7")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg18]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("XAR7")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

