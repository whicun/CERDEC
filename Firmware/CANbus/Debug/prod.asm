;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Thu Dec 19 09:55:00 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwendtag $C$DW$5


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$6


$C$DW$8	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$8, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$8


$C$DW$10	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$10, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_declaration
	.dwattr $C$DW$10, DW_AT_external
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$11)

$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$10


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwendtag $C$DW$15


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("SPICANRoutine")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_SPICANRoutine")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("conf_default")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwendtag $C$DW$17


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$36)

$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$18


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("SPICANWaitForTXBuf")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$22


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("velf_rst")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("dac_setmode")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$25


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("ad7738_init")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27


$C$DW$28	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$28, DW_AT_name("maf_rst")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwendtag $C$DW$28


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("SPICANInit")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29

$C$DW$30	.dwtag  DW_TAG_variable
	.dwattr $C$DW$30, DW_AT_name("UNITS")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("METHOD")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("BAUD")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$339)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("BITMAP")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$300)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external

$C$DW$34	.dwtag  DW_TAG_variable
	.dwattr $C$DW$34, DW_AT_name("LPV")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("INTERFACE")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("ds1820start")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("configCAN")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("latch_dac")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("extio_init")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("gpio_init")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwendtag $C$DW$40


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("ssr_set")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$36)

$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$41


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$44


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("lcd_init")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("lcd_clear")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwendtag $C$DW$47


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("led_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("led_set")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$36)

$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$49


$C$DW$52	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$52, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwendtag $C$DW$52


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("delay_us")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$53


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("InitECan")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwendtag $C$DW$55


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwendtag $C$DW$56


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("flash_init")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwendtag $C$DW$57


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("shunt_switch")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$58


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("reboot")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
	.dwendtag $C$DW$60


$C$DW$61	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$61, DW_AT_name("sys_init")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwendtag $C$DW$61


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$163)

$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$62


$C$DW$65	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$65, DW_AT_name("lcd_puts")
	.dwattr $C$DW$65, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$65, DW_AT_declaration
	.dwattr $C$DW$65, DW_AT_external
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$163)

$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$65


$C$DW$68	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$68, DW_AT_name("scia_init")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$68


$C$DW$70	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$70, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$70

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$72	.dwtag  DW_TAG_variable
	.dwattr $C$DW$72, DW_AT_name("cmd_mode")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$72, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$72, DW_AT_external


$C$DW$73	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$73, DW_AT_name("SPICANRead")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$73


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
	.dwendtag $C$DW$75


$C$DW$76	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$76, DW_AT_name("scia_puts")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$76


$C$DW$78	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$78, DW_AT_name("sprintf")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$163)

$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$180)

$C$DW$81	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$78


$C$DW$82	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$82, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$163)

$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$82


$C$DW$85	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$85, DW_AT_name("scia_getparam")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$163)

$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$163)

$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$85

$C$DW$89	.dwtag  DW_TAG_variable
	.dwattr $C$DW$89, DW_AT_name("port4004")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external

$C$DW$90	.dwtag  DW_TAG_variable
	.dwattr $C$DW$90, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external


$C$DW$91	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$91, DW_AT_name("atoi")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$91

$C$DW$93	.dwtag  DW_TAG_variable
	.dwattr $C$DW$93, DW_AT_name("port400e")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$94	.dwtag  DW_TAG_variable
	.dwattr $C$DW$94, DW_AT_name("autoidchanged")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$94, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$94, DW_AT_external

$C$DW$95	.dwtag  DW_TAG_variable
	.dwattr $C$DW$95, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external

$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external

$C$DW$97	.dwtag  DW_TAG_variable
	.dwattr $C$DW$97, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external

$C$DW$98	.dwtag  DW_TAG_variable
	.dwattr $C$DW$98, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external

$C$DW$99	.dwtag  DW_TAG_variable
	.dwattr $C$DW$99, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("conf_write")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwendtag $C$DW$101


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwendtag $C$DW$102


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
	.dwendtag $C$DW$106


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
$C$DW$108	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$107


$C$DW$109	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$109, DW_AT_name("conf_read")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
	.dwendtag $C$DW$109


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("tagdetect")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$110


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$163)

$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$112


$C$DW$115	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$115, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
	.dwendtag $C$DW$115


$C$DW$116	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$116, DW_AT_name("strtod")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$116, DW_AT_declaration
	.dwattr $C$DW$116, DW_AT_external
$C$DW$117	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$180)

$C$DW$118	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$359)

	.dwendtag $C$DW$116

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$119	.dwtag  DW_TAG_variable
	.dwattr $C$DW$119, DW_AT_name("VEL_U")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$119, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$119, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$120	.dwtag  DW_TAG_variable
	.dwattr $C$DW$120, DW_AT_name("POS_U")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$120, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$120, DW_AT_external


$C$DW$121	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$121, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$121, DW_AT_declaration
	.dwattr $C$DW$121, DW_AT_external
$C$DW$122	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$121


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("memcpy")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$3)

$C$DW$125	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$148)

$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$123


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("atol")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
$C$DW$128	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$127


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
	.dwendtag $C$DW$129


$C$DW$130	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$130, DW_AT_name("ds1820read")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external
	.dwendtag $C$DW$130


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("prod_getnext")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
	.dwendtag $C$DW$131

$C$DW$132	.dwtag  DW_TAG_variable
	.dwattr $C$DW$132, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external

$C$DW$133	.dwtag  DW_TAG_variable
	.dwattr $C$DW$133, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
	.dwendtag $C$DW$134


$C$DW$135	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$135, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external
	.dwendtag $C$DW$135


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("strlen")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
$C$DW$137	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$136


$C$DW$138	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$138, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external
	.dwendtag $C$DW$138


$C$DW$139	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$139, DW_AT_name("prod_getavail")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$139, DW_AT_declaration
	.dwattr $C$DW$139, DW_AT_external
	.dwendtag $C$DW$139

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$140	.dwtag  DW_TAG_variable
	.dwattr $C$DW$140, DW_AT_name("autoid")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$140, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$140, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$141	.dwtag  DW_TAG_variable
	.dwattr $C$DW$141, DW_AT_name("tagwasthere")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$141, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$141, DW_AT_external


$C$DW$142	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$142, DW_AT_name("tagid")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$142, DW_AT_declaration
	.dwattr $C$DW$142, DW_AT_external
$C$DW$143	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$142

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$144	.dwtag  DW_TAG_variable
	.dwattr $C$DW$144, DW_AT_name("rtc")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$144, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$144, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$145	.dwtag  DW_TAG_variable
	.dwattr $C$DW$145, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$146	.dwtag  DW_TAG_variable
	.dwattr $C$DW$146, DW_AT_name("tsensor")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$146, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$146, DW_AT_external

$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("_ctypes_")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$147, DW_AT_declaration
	.dwattr $C$DW$147, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("fileOb")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$148, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$148, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$149	.dwtag  DW_TAG_variable
	.dwattr $C$DW$149, DW_AT_name("Fatfs")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$149, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$149, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("conf_data")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$150, DW_AT_declaration
	.dwattr $C$DW$150, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\041482 C:\\Users\\ebenton\\AppData\\Local\\Temp\\041484 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\0414812 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$151	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$151, DW_AT_name("update_units")
	.dwattr $C$DW$151, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$151, DW_AT_high_pc(0x00)
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$151, DW_AT_external
	.dwattr $C$DW$151, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$151, DW_AT_TI_begin_line(0x17c9)
	.dwattr $C$DW$151, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$151, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6089,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("buff")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6089 | void update_units(void) {                                              
; 6091 | int l;                                                                 
; 6092 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6094,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6094 | lcd_clear();                                                           
; 6095 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$153, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6094| 
        ; call occurs [#_lcd_clear] ; [] |6094| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6096,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6096 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6096| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6096| 
        ADDL      XAR4,ACC              ; [CPU_] |6096| 
        MOV       AL,AR1                ; [CPU_] |6096| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6096| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6096| 
        ; call occurs [#_lcd_puts] ; [] |6096| 
	.dwpsn	file "../Source/prod.c",line 6097,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6097 | switch (conf_data.vfd[l].what) {                                       
; 6098 | case VFD_LOAD:                                                         
; 6099 | case VFD_PEAK:                                                         
; 6100 | case VFD_VALL:                                                         
; 6101 | case VFD_POSI:                                                         
; 6102 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6097| 
        CMPB      AL,#4                 ; [CPU_] |6097| 
        B         $C$L2,LOS             ; [CPU_] |6097| 
        ; branchcc occurs ; [] |6097| 
        CMPB      AL,#5                 ; [CPU_] |6097| 
        B         $C$L8,EQ              ; [CPU_] |6097| 
        ; branchcc occurs ; [] |6097| 
        CMPB      AL,#6                 ; [CPU_] |6097| 
        B         $C$L7,EQ              ; [CPU_] |6097| 
        ; branchcc occurs ; [] |6097| 
        B         $C$L10,UNC            ; [CPU_] |6097| 
        ; branch occurs ; [] |6097| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6103,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6103 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6103| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6103| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6103| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6103| 
        ADDB      AL,#1                 ; [CPU_] |6103| 
        MOVL      XAR4,XAR3             ; [CPU_] |6103| 
        MOV       *-SP[3],AL            ; [CPU_] |6103| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_sprintf")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6103| 
        ; call occurs [#_sprintf] ; [] |6103| 
	.dwpsn	file "../Source/prod.c",line 6104,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6104 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6104| 
        ADD       AL,AR1                ; [CPU_] |6104| 
        MOVL      XAR4,XAR3             ; [CPU_] |6104| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6104| 
        ; call occurs [#_lcd_puts] ; [] |6104| 
	.dwpsn	file "../Source/prod.c",line 6105,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6105 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6105| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6105| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6105| 
        B         $C$L3,EQ              ; [CPU_] |6105| 
        ; branchcc occurs ; [] |6105| 
	.dwpsn	file "../Source/prod.c",line 6106,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6106 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6106| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6106| 
        ADD       AL,AR1                ; [CPU_] |6106| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6106| 
        ; call occurs [#_lcd_puts] ; [] |6106| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6109,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6109 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6110 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6109| 
        CMPB      AL,#3                 ; [CPU_] |6109| 
        B         $C$L6,EQ              ; [CPU_] |6109| 
        ; branchcc occurs ; [] |6109| 
	.dwpsn	file "../Source/prod.c",line 6111,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6111 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6112 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6113 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6111| 
        CMPB      AL,#4                 ; [CPU_] |6111| 
        B         $C$L5,EQ              ; [CPU_] |6111| 
        ; branchcc occurs ; [] |6111| 
	.dwpsn	file "../Source/prod.c",line 6114,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6114 | lcd_puts(                                                              
; 6115 |                 (char*) UNITS[0x0f                                     
; 6116 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6117 |                 18 + 20 * l);                                          
; 6119 | break;                                                                 
; 6120 | case VFD_LIMIT:                                                        
; 6121 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6122 | lcd_puts(buff, 5 + 20 * l);                                            
; 6123 | break;                                                                 
; 6124 | case VFD_TEMP:                                                         
; 6125 | #if(VFD==1)                                                            
; 6126 | buff[0] = 0xb0;                                                        
; 6127 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6114| 
        MOV       T,#10                 ; [CPU_] |6114| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6114| 
        ADDL      ACC,XAR6              ; [CPU_] |6114| 
        MOVL      XAR4,ACC              ; [CPU_] |6114| 
        MOVB      XAR0,#42              ; [CPU_] |6114| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6114| 
        MPYB      ACC,T,#152            ; [CPU_] |6114| 
        ADDL      ACC,XAR6              ; [CPU_] |6114| 
        MOVL      XAR4,ACC              ; [CPU_] |6114| 
        MOVB      XAR0,#125             ; [CPU_] |6114| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6114| 
        ANDB      AL,#0x0f              ; [CPU_] |6114| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6114| 
        MOV       ACC,AL << 1           ; [CPU_] |6114| 
        ADDL      XAR4,ACC              ; [CPU_] |6114| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6114| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6114| 
        B         $C$L9,UNC             ; [CPU_] |6114| 
        ; branch occurs ; [] |6114| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6112,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6112| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6112| 
	.dwpsn	file "../Source/prod.c",line 6113,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6113| 
        ; branch occurs ; [] |6113| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6110,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6110| 
	.dwpsn	file "../Source/prod.c",line 6111,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6111| 
        ; branch occurs ; [] |6111| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6128,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6128 | buff[0] = 0xdf;                                                        
; 6129 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6128| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6128| 
	.dwpsn	file "../Source/prod.c",line 6130,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6130 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6130| 
	.dwpsn	file "../Source/prod.c",line 6131,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6131 | buff[2] = '\0';                                                        
; 6132 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6131| 
	.dwpsn	file "../Source/prod.c",line 6133,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6133 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6133| 
        ; branch occurs ; [] |6133| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6121,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6121| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6121| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6121| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6121| 
        ADDB      AL,#1                 ; [CPU_] |6121| 
        MOVL      XAR4,XAR3             ; [CPU_] |6121| 
        MOV       *-SP[3],AL            ; [CPU_] |6121| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_sprintf")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6121| 
        ; call occurs [#_sprintf] ; [] |6121| 
	.dwpsn	file "../Source/prod.c",line 6122,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6122| 
        MOVL      XAR4,XAR3             ; [CPU_] |6122| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6122| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$159, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6122| 
        ; call occurs [#_lcd_puts] ; [] |6122| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6095,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6095| 
        SUBB      XAR6,#1               ; [CPU_U] |6095| 
        MOVZ      AR0,AR6               ; [CPU_] |6095| 
        ADDB      XAR2,#3               ; [CPU_] |6095| 
        ADDB      XAR1,#20              ; [CPU_] |6095| 
        MOV       *-SP[4],AR6           ; [CPU_] |6095| 
        CMP       AR0,#-1               ; [CPU_] |6095| 
        B         $C$L1,NEQ             ; [CPU_] |6095| 
        ; branchcc occurs ; [] |6095| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$151, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$151, DW_AT_TI_end_line(0x17f8)
	.dwattr $C$DW$151, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$151

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$161	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$161, DW_AT_name("print_vfd")
	.dwattr $C$DW$161, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$161, DW_AT_high_pc(0x00)
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$161, DW_AT_external
	.dwattr $C$DW$161, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$161, DW_AT_TI_begin_line(0x1754)
	.dwattr $C$DW$161, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$161, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5972,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$162	.dwtag  DW_TAG_variable
	.dwattr $C$DW$162, DW_AT_name("buff")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5972 | void print_vfd(void) {                                                 
; 5973 | int l;                                                                 
; 5974 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$163	.dwtag  DW_TAG_variable
	.dwattr $C$DW$163, DW_AT_name("l")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5976,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5976 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5976| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5976| 
        ; call occurs [#_scia_puts] ; [] |5976| 
	.dwpsn	file "../Source/prod.c",line 5977,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5977 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5977| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5978,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5978 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5978| 
        MOVB      AL,#1                 ; [CPU_] |5978| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5978| 
        ADD       AL,AR1                ; [CPU_] |5978| 
        MOV       *-SP[3],AL            ; [CPU_] |5978| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5978| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5978| 
        ADDL      XAR4,ACC              ; [CPU_] |5978| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5978| 
        MOVL      XAR4,XAR3             ; [CPU_] |5978| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5978| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("_sprintf")
	.dwattr $C$DW$165, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5978| 
        ; call occurs [#_sprintf] ; [] |5978| 
	.dwpsn	file "../Source/prod.c",line 5979,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5979| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5979| 
        ; call occurs [#_scia_puts] ; [] |5979| 
	.dwpsn	file "../Source/prod.c",line 5981,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5981 | switch (conf_data.vfd[l].what) {                                       
; 5982 | case VFD_LOAD:                                                         
; 5983 | case VFD_PEAK:                                                         
; 5984 | case VFD_VALL:                                                         
; 5985 | case VFD_POSI:                                                         
; 5986 | case VFD_VELO:                                                         
; 5987 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5988 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5989 |         scia_puts(buff);                                               
; 5990 |         break;                                                         
; 5991 | case VFD_LIMIT:                                                        
; 5992 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5993 |         scia_puts(buff);                                               
; 5994 |         break;                                                         
; 5995 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5981| 
        CMPB      AL,#4                 ; [CPU_] |5981| 
        B         $C$L13,LOS            ; [CPU_] |5981| 
        ; branchcc occurs ; [] |5981| 
        CMPB      AL,#5                 ; [CPU_] |5981| 
        B         $C$L12,EQ             ; [CPU_] |5981| 
        ; branchcc occurs ; [] |5981| 
        CMPB      AL,#6                 ; [CPU_] |5981| 
        B         $C$L16,NEQ            ; [CPU_] |5981| 
        ; branchcc occurs ; [] |5981| 
	.dwpsn	file "../Source/prod.c",line 5996,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5996 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5996| 
	.dwpsn	file "../Source/prod.c",line 5997,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5997 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5997| 
        ; branch occurs ; [] |5997| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5992,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5992| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5992| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5992| 
        ADDB      AL,#1                 ; [CPU_] |5992| 
        MOV       *-SP[3],AL            ; [CPU_] |5992| 
	.dwpsn	file "../Source/prod.c",line 5994,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5994| 
        ; branch occurs ; [] |5994| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5987,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5987| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5987| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5987| 
        ADDB      AL,#1                 ; [CPU_] |5987| 
        MOV       *-SP[3],AL            ; [CPU_] |5987| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5987| 
        MOV       *-SP[4],AL            ; [CPU_] |5987| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5987| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_sprintf")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5987| 
        ; call occurs [#_sprintf] ; [] |5987| 
	.dwpsn	file "../Source/prod.c",line 5989,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5989| 
$C$L15:    
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5989| 
        ; call occurs [#_scia_puts] ; [] |5989| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5999,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5999 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5999| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_scia_puts")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5999| 
        ; call occurs [#_scia_puts] ; [] |5999| 
	.dwpsn	file "../Source/prod.c",line 5977,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5977| 
        ADDB      XAR2,#3               ; [CPU_] |5977| 
        MOV       AL,AR1                ; [CPU_] |5977| 
        CMPB      AL,#4                 ; [CPU_] |5977| 
        B         $C$L11,LT             ; [CPU_] |5977| 
        ; branchcc occurs ; [] |5977| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$161, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$161, DW_AT_TI_end_line(0x1771)
	.dwattr $C$DW$161, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$161

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$171	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$171, DW_AT_name("print_sensor")
	.dwattr $C$DW$171, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$171, DW_AT_high_pc(0x00)
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$171, DW_AT_external
	.dwattr $C$DW$171, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$171, DW_AT_TI_begin_line(0x16fd)
	.dwattr $C$DW$171, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$171, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5885,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$172	.dwtag  DW_TAG_variable
	.dwattr $C$DW$172, DW_AT_name("buff")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$173	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$173, DW_AT_name("ss")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("ss")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("j")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg0]

$C$DW$176	.dwtag  DW_TAG_variable
	.dwattr $C$DW$176, DW_AT_name("j")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_breg20 -7]

$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("j")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_breg20 -7]

$C$DW$178	.dwtag  DW_TAG_variable
	.dwattr $C$DW$178, DW_AT_name("j")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_breg20 -7]

$C$DW$179	.dwtag  DW_TAG_variable
	.dwattr $C$DW$179, DW_AT_name("j")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5885 | void print_sensor(int ss) {                                            
; 5886 | int j;                                                                 
; 5887 | static char buff[100];                                                 
; 5889 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5885| 
	.dwpsn	file "../Source/prod.c",line 5890,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5890 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5891 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5892 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5890| 
        MPYB      P,T,#152              ; [CPU_] |5890| 
        MOVL      ACC,XAR3              ; [CPU_] |5890| 
        ADDL      ACC,P                 ; [CPU_] |5890| 
        MOVL      XAR2,ACC              ; [CPU_] |5890| 
        MOVB      XAR0,#118             ; [CPU_] |5890| 
        MOVL      *-SP[12],P            ; [CPU_] |5890| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5890| 
        B         $C$L28,EQ             ; [CPU_] |5890| 
        ; branchcc occurs ; [] |5890| 
	.dwpsn	file "../Source/prod.c",line 5893,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5893 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5893| 
        MOVL      ACC,XAR2              ; [CPU_] |5893| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5893| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5893| 
        ADDB      ACC,#82               ; [CPU_] |5893| 
        MOVL      XAR4,XAR1             ; [CPU_] |5893| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5893| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_sprintf")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5893| 
        ; call occurs [#_sprintf] ; [] |5893| 
	.dwpsn	file "../Source/prod.c",line 5894,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5894 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5894| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5894| 
        ; call occurs [#_scia_puts] ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5895,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5895 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5895| 
        MOVL      ACC,XAR2              ; [CPU_] |5895| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5895| 
        ADDB      ACC,#98               ; [CPU_] |5895| 
        MOVL      XAR4,XAR1             ; [CPU_] |5895| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5895| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_sprintf")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5895| 
        ; call occurs [#_sprintf] ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5896,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5896| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5896| 
        ; call occurs [#_scia_puts] ; [] |5896| 
	.dwpsn	file "../Source/prod.c",line 5897,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5897 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5898 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5897| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5897| 
        MOVL      XAR4,XAR2             ; [CPU_] |5897| 
        ADDB      XAR4,#114             ; [CPU_] |5897| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5897| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5897| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5897| 
        MOVL      XAR4,XAR1             ; [CPU_] |5897| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5897| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_sprintf")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5897| 
        ; call occurs [#_sprintf] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5899,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5899 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5899| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5899| 
        ; call occurs [#_scia_puts] ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5900,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5900 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5901 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5900| 
        MOVB      XAR0,#118             ; [CPU_] |5900| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5900| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5900| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5900| 
        ADDL      XAR4,ACC              ; [CPU_] |5900| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5900| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5900| 
        MOVL      XAR4,XAR1             ; [CPU_] |5900| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_sprintf")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5900| 
        ; call occurs [#_sprintf] ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5902,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5902 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5902| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5902| 
        ; call occurs [#_scia_puts] ; [] |5902| 
	.dwpsn	file "../Source/prod.c",line 5903,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5903 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5904 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5903| 
        MOVB      XAR0,#124             ; [CPU_] |5903| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5903| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5903| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5903| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5903| 
        ANDB      AL,#0x0f              ; [CPU_] |5903| 
        MOV       ACC,AL << 1           ; [CPU_] |5903| 
        ADDL      XAR4,ACC              ; [CPU_] |5903| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5903| 
        MOVL      XAR4,XAR1             ; [CPU_] |5903| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5903| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5903| 
        ; call occurs [#_sprintf] ; [] |5903| 
	.dwpsn	file "../Source/prod.c",line 5905,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5905 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5905| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5905| 
        ; call occurs [#_scia_puts] ; [] |5905| 
	.dwpsn	file "../Source/prod.c",line 5906,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5906 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5907 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5906| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5906| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5906| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5906| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5906| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5906| 
        MOV       ACC,AL << 1           ; [CPU_] |5906| 
        ADDL      ACC,XAR6              ; [CPU_] |5906| 
        MOVL      XAR4,ACC              ; [CPU_] |5906| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5906| 
        MOVL      XAR4,XAR1             ; [CPU_] |5906| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5906| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5906| 
        ; call occurs [#_sprintf] ; [] |5906| 
	.dwpsn	file "../Source/prod.c",line 5908,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5908 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5908| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5908| 
        ; call occurs [#_scia_puts] ; [] |5908| 
	.dwpsn	file "../Source/prod.c",line 5909,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5909 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5910 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5909| 
        MOVB      XAR0,#126             ; [CPU_] |5909| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5909| 
        MOVL      XAR4,XAR1             ; [CPU_] |5909| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5909| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5909| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5909| 
        ; call occurs [#_sprintf] ; [] |5909| 
	.dwpsn	file "../Source/prod.c",line 5911,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5911 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5911| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5911| 
        ; call occurs [#_scia_puts] ; [] |5911| 
	.dwpsn	file "../Source/prod.c",line 5912,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5912 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5913 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5912| 
        MOVB      XAR0,#122             ; [CPU_] |5912| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5912| 
        MOVL      XAR4,XAR1             ; [CPU_] |5912| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5912| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5912| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5912| 
        ; call occurs [#_sprintf] ; [] |5912| 
	.dwpsn	file "../Source/prod.c",line 5914,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5914 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5914| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5914| 
        ; call occurs [#_scia_puts] ; [] |5914| 
	.dwpsn	file "../Source/prod.c",line 5915,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5915 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5916 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5915| 
        MOVB      XAR0,#222             ; [CPU_] |5915| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5915| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5915| 
        MOVL      XAR4,XAR1             ; [CPU_] |5915| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5915| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5915| 
        ; call occurs [#_sprintf] ; [] |5915| 
	.dwpsn	file "../Source/prod.c",line 5917,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5917 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5917| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5917| 
        ; call occurs [#_scia_puts] ; [] |5917| 
	.dwpsn	file "../Source/prod.c",line 5918,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5918 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5919 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5918| 
        MOVB      XAR0,#224             ; [CPU_] |5918| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5918| 
        MOVL      XAR4,XAR1             ; [CPU_] |5918| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5918| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5918| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5918| 
        ; call occurs [#_sprintf] ; [] |5918| 
	.dwpsn	file "../Source/prod.c",line 5920,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5920 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5920| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5920| 
        ; call occurs [#_scia_puts] ; [] |5920| 
	.dwpsn	file "../Source/prod.c",line 5921,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5921 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5922 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5921| 
        MOVB      XAR0,#228             ; [CPU_] |5921| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5921| 
        MOVL      XAR4,XAR1             ; [CPU_] |5921| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5921| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5921| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5921| 
        ; call occurs [#_sprintf] ; [] |5921| 
	.dwpsn	file "../Source/prod.c",line 5923,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5923 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5923| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5923| 
        ; call occurs [#_scia_puts] ; [] |5923| 
	.dwpsn	file "../Source/prod.c",line 5924,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5924 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5925 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5924| 
        MOVB      XAR0,#230             ; [CPU_] |5924| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5924| 
        MOVL      XAR4,XAR1             ; [CPU_] |5924| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5924| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5924| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5924| 
        ; call occurs [#_sprintf] ; [] |5924| 
	.dwpsn	file "../Source/prod.c",line 5926,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5926 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5926| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5926| 
        ; call occurs [#_scia_puts] ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5928,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5929 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5930 |                         conf_data.sensor[ss].points);                  
; 5931 |         scia_puts(buff);                                               
; 5933 |         scia_puts("  Point:");                                         
; 5934 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5935 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5936 |                 scia_puts(buff);                                       
; 5938 |         scia_puts("\r\n  Mass: ");                                     
; 5939 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5940 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5941 |                 scia_puts(buff);                                       
; 5943 |         scia_puts("\r\n  Count:");                                     
; 5944 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5945 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5946 |                 scia_puts(buff);                                       
; 5948 |         scia_puts("\r\n  Slope:    ");                                 
; 5949 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5950 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5951 |                 scia_puts(buff);                                       
; 5953 |         scia_puts("\r\n  Intercept:");                                 
; 5954 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5955 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5956 |                 scia_puts(buff);                                       
; 5958 |         scia_puts("\r\n");                                             
; 5959 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5928| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5928| 
        CMPB      AL,#2                 ; [CPU_] |5928| 
        B         $C$L17,EQ             ; [CPU_] |5928| 
        ; branchcc occurs ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5960,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5960 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5961 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5960| 
        MOVB      XAR0,#178             ; [CPU_] |5960| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5960| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5960| 
        MOVL      XAR4,XAR1             ; [CPU_] |5960| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5960| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5960| 
        ; call occurs [#_sprintf] ; [] |5960| 
	.dwpsn	file "../Source/prod.c",line 5962,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5962 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5962| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5962| 
        ; call occurs [#_scia_puts] ; [] |5962| 
	.dwpsn	file "../Source/prod.c",line 5963,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5963 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5964 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5963| 
        MOVB      XAR0,#200             ; [CPU_] |5963| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5963| 
        MOVL      XAR4,XAR1             ; [CPU_] |5963| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5963| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5963| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5963| 
        ; call occurs [#_sprintf] ; [] |5963| 
	.dwpsn	file "../Source/prod.c",line 5965,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | scia_puts(buff);                                                       
; 5968 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5965| 
        B         $C$L29,UNC            ; [CPU_] |5965| 
        ; branch occurs ; [] |5965| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5929,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5929| 
        MOVB      XAR0,#128             ; [CPU_] |5929| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5929| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5929| 
        MOVL      XAR4,XAR1             ; [CPU_] |5929| 
        MOV       *-SP[3],AL            ; [CPU_] |5929| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_sprintf")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5929| 
        ; call occurs [#_sprintf] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5931,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5931| 
        ; call occurs [#_scia_puts] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5933,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5933| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5933| 
        ; call occurs [#_scia_puts] ; [] |5933| 
	.dwpsn	file "../Source/prod.c",line 5934,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5934| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5934,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5934| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5934| 
        B         $C$L27,LT             ; [CPU_] |5934| 
        ; branchcc occurs ; [] |5934| 
	.dwpsn	file "../Source/prod.c",line 5938,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5938| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5938| 
        ; call occurs [#_scia_puts] ; [] |5938| 
	.dwpsn	file "../Source/prod.c",line 5939,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5939| 
        MOV       *-SP[7],AL            ; [CPU_] |5939| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5939,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5939| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5939| 
        B         $C$L26,LT             ; [CPU_] |5939| 
        ; branchcc occurs ; [] |5939| 
	.dwpsn	file "../Source/prod.c",line 5943,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5943| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5944,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5944| 
        MOV       *-SP[7],AL            ; [CPU_] |5944| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5944,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5944| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5944| 
        B         $C$L25,LT             ; [CPU_] |5944| 
        ; branchcc occurs ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5948,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5948| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5948| 
        ; call occurs [#_scia_puts] ; [] |5948| 
	.dwpsn	file "../Source/prod.c",line 5949,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5949| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5949,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5949| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5949| 
        ADDB      AL,#-1                ; [CPU_] |5949| 
        CMP       AL,*-SP[7]            ; [CPU_] |5949| 
        B         $C$L24,GT             ; [CPU_] |5949| 
        ; branchcc occurs ; [] |5949| 
	.dwpsn	file "../Source/prod.c",line 5953,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5953| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5953| 
        ; call occurs [#_scia_puts] ; [] |5953| 
	.dwpsn	file "../Source/prod.c",line 5954,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5954| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5954,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5954| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5954| 
        ADDB      AL,#-1                ; [CPU_] |5954| 
        CMP       AL,*-SP[7]            ; [CPU_] |5954| 
        B         $C$L23,GT             ; [CPU_] |5954| 
        ; branchcc occurs ; [] |5954| 
	.dwpsn	file "../Source/prod.c",line 5958,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5958| 
	.dwpsn	file "../Source/prod.c",line 5959,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5959| 
        ; branch occurs ; [] |5959| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5955,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5955| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5955| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5955| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5955| 
        MOV       ACC,AL << 1           ; [CPU_] |5955| 
        ADDL      ACC,XAR6              ; [CPU_] |5955| 
        ADDL      ACC,XAR3              ; [CPU_] |5955| 
        MOVL      XAR4,ACC              ; [CPU_] |5955| 
        MOVB      XAR0,#200             ; [CPU_] |5955| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5955| 
        MOVL      XAR4,XAR1             ; [CPU_] |5955| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5955| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_sprintf")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5955| 
        ; call occurs [#_sprintf] ; [] |5955| 
	.dwpsn	file "../Source/prod.c",line 5956,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5956| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5956| 
        ; call occurs [#_scia_puts] ; [] |5956| 
	.dwpsn	file "../Source/prod.c",line 5954,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5954| 
        B         $C$L22,UNC            ; [CPU_] |5954| 
        ; branch occurs ; [] |5954| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5950,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5950| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5950| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5950| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5950| 
        MOV       ACC,AL << 1           ; [CPU_] |5950| 
        ADDL      ACC,XAR6              ; [CPU_] |5950| 
        ADDL      ACC,XAR3              ; [CPU_] |5950| 
        MOVL      XAR4,ACC              ; [CPU_] |5950| 
        MOVB      XAR0,#178             ; [CPU_] |5950| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5950| 
        MOVL      XAR4,XAR1             ; [CPU_] |5950| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5950| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5950| 
        ; call occurs [#_sprintf] ; [] |5950| 
	.dwpsn	file "../Source/prod.c",line 5951,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5951| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5951| 
        ; call occurs [#_scia_puts] ; [] |5951| 
	.dwpsn	file "../Source/prod.c",line 5949,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5949| 
        B         $C$L21,UNC            ; [CPU_] |5949| 
        ; branch occurs ; [] |5949| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5945,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5945| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5945| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5945| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5945| 
        ADDL      ACC,XAR6              ; [CPU_] |5945| 
        ADDL      ACC,XAR3              ; [CPU_] |5945| 
        MOVL      XAR4,ACC              ; [CPU_] |5945| 
        MOVB      XAR0,#154             ; [CPU_] |5945| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5945| 
        MOVL      XAR4,XAR1             ; [CPU_] |5945| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5945| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_sprintf")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5945| 
        ; call occurs [#_sprintf] ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5946,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5946| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5946| 
        ; call occurs [#_scia_puts] ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5944,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5944| 
	.dwpsn	file "../Source/prod.c",line 5946,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5946| 
	.dwpsn	file "../Source/prod.c",line 5944,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5944| 
        ; branch occurs ; [] |5944| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5940,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5940| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5940| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5940| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5940| 
        ADDL      ACC,XAR6              ; [CPU_] |5940| 
        ADDL      ACC,XAR3              ; [CPU_] |5940| 
        MOVL      XAR4,ACC              ; [CPU_] |5940| 
        MOVB      XAR0,#130             ; [CPU_] |5940| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5940| 
        MOVL      XAR4,XAR1             ; [CPU_] |5940| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5940| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5940| 
        ; call occurs [#_sprintf] ; [] |5940| 
	.dwpsn	file "../Source/prod.c",line 5941,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5941| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5941| 
        ; call occurs [#_scia_puts] ; [] |5941| 
	.dwpsn	file "../Source/prod.c",line 5939,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5939| 
	.dwpsn	file "../Source/prod.c",line 5941,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5941| 
	.dwpsn	file "../Source/prod.c",line 5939,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5939| 
        ; branch occurs ; [] |5939| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5935,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5935| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5935| 
        ADD       AH,AL                 ; [CPU_] |5935| 
        MOV       *-SP[7],AH            ; [CPU_] |5935| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5935| 
        MOVL      XAR4,XAR1             ; [CPU_] |5935| 
        MOV       *-SP[3],AH            ; [CPU_] |5935| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_sprintf")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5935| 
        ; call occurs [#_sprintf] ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5936,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5936| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5936| 
        ; call occurs [#_scia_puts] ; [] |5936| 
        MOV       AL,*-SP[7]            ; [CPU_] |5936| 
	.dwpsn	file "../Source/prod.c",line 5934,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5934| 
        ; branch occurs ; [] |5934| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5891,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5891| 
$C$L29:    
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5891| 
        ; call occurs [#_scia_puts] ; [] |5891| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$171, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$171, DW_AT_TI_end_line(0x1751)
	.dwattr $C$DW$171, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$171

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$226	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$226, DW_AT_name("print_limits")
	.dwattr $C$DW$226, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$226, DW_AT_high_pc(0x00)
	.dwattr $C$DW$226, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$226, DW_AT_external
	.dwattr $C$DW$226, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$226, DW_AT_TI_begin_line(0x1798)
	.dwattr $C$DW$226, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$226, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6040,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$227	.dwtag  DW_TAG_variable
	.dwattr $C$DW$227, DW_AT_name("buff")
	.dwattr $C$DW$227, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$227, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$227, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6040 | void print_limits(void) {                                              
; 6041 | int ii;                                                                
; 6042 | static char buff[64];                                                  
; 6043 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$228	.dwtag  DW_TAG_variable
	.dwattr $C$DW$228, DW_AT_name("ii")
	.dwattr $C$DW$228, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$228, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$228, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$229	.dwtag  DW_TAG_variable
	.dwattr $C$DW$229, DW_AT_name("up")
	.dwattr $C$DW$229, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$229, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$229, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6045,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6045 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6045| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_scia_puts")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6045| 
        ; call occurs [#_scia_puts] ; [] |6045| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6047,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6047 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6047| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6048,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6048 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6048| 
        MOVB      AL,#1                 ; [CPU_] |6048| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6048| 
        ADD       AL,*-SP[9]            ; [CPU_] |6048| 
        MOVL      XAR4,XAR2             ; [CPU_] |6048| 
        MOV       *-SP[3],AL            ; [CPU_] |6048| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_sprintf")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6048| 
        ; call occurs [#_sprintf] ; [] |6048| 
	.dwpsn	file "../Source/prod.c",line 6049,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6049 | scia_puts(buff);                                                       
; 6051 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6049| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6049| 
        ; call occurs [#_scia_puts] ; [] |6049| 
	.dwpsn	file "../Source/prod.c",line 6053,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6053 | switch (conf_data.lim[ii].what) {                                      
; 6054 | case VFD_LOAD:                                                         
; 6055 | case VFD_PEAK:                                                         
; 6056 | case VFD_VALL:                                                         
; 6057 |         up =                                                           
; 6058 |                         UNITS[0x0f                                     
; 6059 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6060 |         break;                                                         
; 6061 | case VFD_POSI:                                                         
; 6062 |         up = POS_U;                                                    
; 6063 |         break;                                                         
; 6064 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6053| 
        B         $C$L40,NTC            ; [CPU_] |6053| 
        ; branchcc occurs ; [] |6053| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6053| 
        CMPB      AL,#2                 ; [CPU_] |6053| 
        B         $C$L32,LOS            ; [CPU_] |6053| 
        ; branchcc occurs ; [] |6053| 
        CMPB      AL,#3                 ; [CPU_] |6053| 
        B         $C$L31,EQ             ; [CPU_] |6053| 
        ; branchcc occurs ; [] |6053| 
        CMPB      AL,#4                 ; [CPU_] |6053| 
        B         $C$L33,NEQ            ; [CPU_] |6053| 
        ; branchcc occurs ; [] |6053| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6065,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6065 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6065| 
	.dwpsn	file "../Source/prod.c",line 6066,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6066 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6066| 
        ; branch occurs ; [] |6066| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6062,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6062| 
	.dwpsn	file "../Source/prod.c",line 6063,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6063| 
        ; branch occurs ; [] |6063| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6057,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6057| 
        MOV       T,#10                 ; [CPU_] |6057| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6057| 
        ADDL      ACC,XAR6              ; [CPU_] |6057| 
        MOVL      XAR4,ACC              ; [CPU_] |6057| 
        MOVB      XAR0,#42              ; [CPU_] |6057| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6057| 
        MPYB      ACC,T,#152            ; [CPU_] |6057| 
        ADDL      ACC,XAR6              ; [CPU_] |6057| 
        MOVL      XAR4,ACC              ; [CPU_] |6057| 
        MOVB      XAR0,#125             ; [CPU_] |6057| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6057| 
        ANDB      AL,#0x0f              ; [CPU_] |6057| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6057| 
        MOV       ACC,AL << 1           ; [CPU_] |6057| 
        ADDL      XAR4,ACC              ; [CPU_] |6057| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6057| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6069,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6069 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6070 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6069| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6069| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6069| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6069| 
        ADDL      XAR4,ACC              ; [CPU_] |6069| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6069| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6069| 
        MOVL      XAR4,XAR2             ; [CPU_] |6069| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6069| 
        ADDB      AL,#1                 ; [CPU_] |6069| 
        MOV       *-SP[5],AL            ; [CPU_] |6069| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_sprintf")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6069| 
        ; call occurs [#_sprintf] ; [] |6069| 
	.dwpsn	file "../Source/prod.c",line 6071,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6071 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6071| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6071| 
        ; call occurs [#_scia_puts] ; [] |6071| 
	.dwpsn	file "../Source/prod.c",line 6072,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6072 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6073 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6074 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6075 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6072| 
        B         $C$L34,TC             ; [CPU_] |6072| 
        ; branchcc occurs ; [] |6072| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6072| 
        B         $C$L35,UNC            ; [CPU_] |6072| 
        ; branch occurs ; [] |6072| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6072| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6072| 
        B         $C$L36,TC             ; [CPU_] |6072| 
        ; branchcc occurs ; [] |6072| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6072| 
        B         $C$L37,UNC            ; [CPU_] |6072| 
        ; branch occurs ; [] |6072| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6072| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6072| 
        B         $C$L38,TC             ; [CPU_] |6072| 
        ; branchcc occurs ; [] |6072| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6072| 
        B         $C$L39,UNC            ; [CPU_] |6072| 
        ; branch occurs ; [] |6072| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6072| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6072| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6072| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6072| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6072| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6072| 
        MOVL      XAR4,XAR2             ; [CPU_] |6072| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6072| 
        ; call occurs [#_sprintf] ; [] |6072| 
	.dwpsn	file "../Source/prod.c",line 6076,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6076 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6076| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6076| 
        ; call occurs [#_scia_puts] ; [] |6076| 
	.dwpsn	file "../Source/prod.c",line 6077,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6077 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6078 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6077| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6077| 
        MOVL      XAR4,XAR2             ; [CPU_] |6077| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6077| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6077| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6077| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6077| 
        ; call occurs [#_sprintf] ; [] |6077| 
	.dwpsn	file "../Source/prod.c",line 6079,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6079 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6079| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6079| 
        ; call occurs [#_scia_puts] ; [] |6079| 
	.dwpsn	file "../Source/prod.c",line 6080,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6080 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6081 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6080| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6080| 
        MOVL      XAR4,XAR2             ; [CPU_] |6080| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6080| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6080| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6080| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_sprintf")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6080| 
        ; call occurs [#_sprintf] ; [] |6080| 
	.dwpsn	file "../Source/prod.c",line 6082,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6082 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6082| 
	.dwpsn	file "../Source/prod.c",line 6083,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6083 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6083| 
        ; branch occurs ; [] |6083| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6084,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6084 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6084| 
$C$L41:    
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6084| 
        ; call occurs [#_scia_puts] ; [] |6084| 
	.dwpsn	file "../Source/prod.c",line 6047,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6047| 
        INC       *-SP[9]               ; [CPU_] |6047| 
        MOV       AL,*-SP[9]            ; [CPU_] |6047| 
        CMPB      AL,#4                 ; [CPU_] |6047| 
        B         $C$L30,LT             ; [CPU_] |6047| 
        ; branchcc occurs ; [] |6047| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$226, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$226, DW_AT_TI_end_line(0x17c7)
	.dwattr $C$DW$226, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$226

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$242	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$242, DW_AT_name("print_dac")
	.dwattr $C$DW$242, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$242, DW_AT_high_pc(0x00)
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$242, DW_AT_external
	.dwattr $C$DW$242, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$242, DW_AT_TI_begin_line(0x1774)
	.dwattr $C$DW$242, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$242, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 6004,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$243	.dwtag  DW_TAG_variable
	.dwattr $C$DW$243, DW_AT_name("buff")
	.dwattr $C$DW$243, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$243, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$243, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 6004 | void print_dac(void) {                                                 
; 6005 | int l;                                                                 
; 6006 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$244	.dwtag  DW_TAG_variable
	.dwattr $C$DW$244, DW_AT_name("l")
	.dwattr $C$DW$244, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$244, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$244, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 6008,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6008 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |6008| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_scia_puts")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6008| 
        ; call occurs [#_scia_puts] ; [] |6008| 
	.dwpsn	file "../Source/prod.c",line 6010,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6010 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6010| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 6011,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6011 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |6011| 
        MOVB      AL,#1                 ; [CPU_] |6011| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6011| 
        ADD       AL,AR1                ; [CPU_] |6011| 
        MOV       *-SP[3],AL            ; [CPU_] |6011| 
        MOVL      XAR4,XAR3             ; [CPU_] |6011| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_sprintf")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6011| 
        ; call occurs [#_sprintf] ; [] |6011| 
	.dwpsn	file "../Source/prod.c",line 6012,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6012 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6012| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6012| 
        ; call occurs [#_scia_puts] ; [] |6012| 
	.dwpsn	file "../Source/prod.c",line 6014,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | sprintf(buff,                                                          
; 6015 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 6016 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 6017 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |6014| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6014| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6014| 
        MOVL      XAR4,XAR3             ; [CPU_] |6014| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6014| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6014| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6014| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |6014| 
        MOVL      *-SP[8],ACC           ; [CPU_] |6014| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_sprintf")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6014| 
        ; call occurs [#_sprintf] ; [] |6014| 
	.dwpsn	file "../Source/prod.c",line 6018,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6018 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6018| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_scia_puts")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6018| 
        ; call occurs [#_scia_puts] ; [] |6018| 
	.dwpsn	file "../Source/prod.c",line 6020,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6020 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |6020| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6020| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6020| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6020| 
        ADDL      XAR4,ACC              ; [CPU_] |6020| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6020| 
        MOVL      XAR4,XAR3             ; [CPU_] |6020| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6020| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6020| 
        ; call occurs [#_sprintf] ; [] |6020| 
	.dwpsn	file "../Source/prod.c",line 6021,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6021 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6021| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6021| 
        ; call occurs [#_scia_puts] ; [] |6021| 
	.dwpsn	file "../Source/prod.c",line 6023,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6023 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6023| 
        CMPB      AL,#7                 ; [CPU_] |6023| 
        B         $C$L43,EQ             ; [CPU_] |6023| 
        ; branchcc occurs ; [] |6023| 
	.dwpsn	file "../Source/prod.c",line 6024,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6024 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |6024| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6024| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6024| 
        ADDB      AL,#1                 ; [CPU_] |6024| 
        MOVL      XAR4,XAR3             ; [CPU_] |6024| 
        MOV       *-SP[3],AL            ; [CPU_] |6024| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6024| 
        ; call occurs [#_sprintf] ; [] |6024| 
	.dwpsn	file "../Source/prod.c",line 6025,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6025| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6025| 
        ; call occurs [#_scia_puts] ; [] |6025| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 6028,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 6029 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 6030 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 6031 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6032 |         scia_puts(buff);                                               
; 6033 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6028| 
        CMPB      AL,#3                 ; [CPU_] |6028| 
        B         $C$L44,EQ             ; [CPU_] |6028| 
        ; branchcc occurs ; [] |6028| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |6028| 
        CMPB      AL,#4                 ; [CPU_] |6028| 
        B         $C$L44,EQ             ; [CPU_] |6028| 
        ; branchcc occurs ; [] |6028| 
	.dwpsn	file "../Source/prod.c",line 6034,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6034 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6034| 
        B         $C$L45,UNC            ; [CPU_] |6034| 
        ; branch occurs ; [] |6034| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 6030,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |6030| 
        MOVB      XAR0,#8               ; [CPU_] |6030| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6030| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6030| 
        MOVB      XAR0,#10              ; [CPU_] |6030| 
        MOVL      XAR4,XAR3             ; [CPU_] |6030| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6030| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6030| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6030| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_sprintf")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6030| 
        ; call occurs [#_sprintf] ; [] |6030| 
	.dwpsn	file "../Source/prod.c",line 6032,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6032| 
$C$L45:    
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6032| 
        ; call occurs [#_scia_puts] ; [] |6032| 
	.dwpsn	file "../Source/prod.c",line 6010,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6010| 
        ADDB      XAR2,#12              ; [CPU_] |6010| 
        MOV       AL,AR1                ; [CPU_] |6010| 
        CMPB      AL,#4                 ; [CPU_] |6010| 
        B         $C$L42,LT             ; [CPU_] |6010| 
        ; branchcc occurs ; [] |6010| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$242, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$242, DW_AT_TI_end_line(0x1795)
	.dwattr $C$DW$242, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$242

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$257	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$257, DW_AT_name("print_channel")
	.dwattr $C$DW$257, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$257, DW_AT_high_pc(0x00)
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$257, DW_AT_external
	.dwattr $C$DW$257, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$257, DW_AT_TI_begin_line(0x16e2)
	.dwattr $C$DW$257, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$257, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5858,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$258	.dwtag  DW_TAG_variable
	.dwattr $C$DW$258, DW_AT_name("buff")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$258, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$259	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$259, DW_AT_name("ch")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$259, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$260	.dwtag  DW_TAG_variable
	.dwattr $C$DW$260, DW_AT_name("ch")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5858 | void print_channel(Uint16 ch) {                                        
; 5859 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5858| 
	.dwpsn	file "../Source/prod.c",line 5861,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5861 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5861| 
        MOVZ      AR1,AR2               ; [CPU_] |5861| 
        MOVB      AH,#1                 ; [CPU_] |5861| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5861| 
        ADD       AH,AR1                ; [CPU_] |5861| 
        MOVL      XAR4,XAR3             ; [CPU_] |5861| 
        MOV       *-SP[3],AH            ; [CPU_] |5861| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_sprintf")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5861| 
        ; call occurs [#_sprintf] ; [] |5861| 
	.dwpsn	file "../Source/prod.c",line 5862,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5862 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5862| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5864,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5864 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5864| 
        MOV       T,AR1                 ; [CPU_] |5864| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5864| 
        MPYU      ACC,T,AL              ; [CPU_] |5864| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5864| 
        ADDL      XAR1,ACC              ; [CPU_] |5864| 
        MOVB      XAR0,#44              ; [CPU_] |5864| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5864| 
        MOVL      XAR4,XAR3             ; [CPU_] |5864| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5864| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5864| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_sprintf")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5864| 
        ; call occurs [#_sprintf] ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5865,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5865 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5865| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5865| 
        ; call occurs [#_scia_puts] ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5875,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5875 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5875| 
        MOVB      XAR0,#42              ; [CPU_] |5875| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5875| 
        MOVL      XAR4,XAR3             ; [CPU_] |5875| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5875| 
        ADDB      AL,#1                 ; [CPU_] |5875| 
        MOV       *-SP[3],AL            ; [CPU_] |5875| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_sprintf")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5875| 
        ; call occurs [#_sprintf] ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5876,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5876 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5876| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5876| 
        ; call occurs [#_scia_puts] ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5878,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5878 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5878| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5878| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5878| 
        B         $C$L46,EQ             ; [CPU_] |5878| 
        ; branchcc occurs ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5879,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5879 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5879| 
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_name("_scia_puts")
	.dwattr $C$DW$267, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5879| 
        ; call occurs [#_scia_puts] ; [] |5879| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$257, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$257, DW_AT_TI_end_line(0x16f9)
	.dwattr $C$DW$257, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$257

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$269	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$269, DW_AT_name("matchTag")
	.dwattr $C$DW$269, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$269, DW_AT_high_pc(0x00)
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$269, DW_AT_external
	.dwattr $C$DW$269, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$269, DW_AT_TI_begin_line(0x16be)
	.dwattr $C$DW$269, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$269, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5822,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$270	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$270, DW_AT_name("ch")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5822 | void matchTag(Uint16 ch) {                                             
; 5823 | Uint16 sns;                                                            
; 5824 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("ch")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$272	.dwtag  DW_TAG_variable
	.dwattr $C$DW$272, DW_AT_name("sns")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$273	.dwtag  DW_TAG_variable
	.dwattr $C$DW$273, DW_AT_name("tag")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5826,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5826 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5826| 
	.dwpsn	file "../Source/prod.c",line 5822,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5822| 
	.dwpsn	file "../Source/prod.c",line 5826,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5826| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5826| 
        MOVL      XAR1,ACC              ; [CPU_] |5826| 
	.dwpsn	file "../Source/prod.c",line 5828,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5828 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5828| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5828| 
	.dwpsn	file "../Source/prod.c",line 5826,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5826| 
	.dwpsn	file "../Source/prod.c",line 5828,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5829 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5828| 
        B         $C$L50,EQ             ; [CPU_] |5828| 
        ; branchcc occurs ; [] |5828| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5828| 
        B         $C$L50,HIS            ; [CPU_] |5828| 
        ; branchcc occurs ; [] |5828| 
	.dwpsn	file "../Source/prod.c",line 5832,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5832 | tag = tagid(ch);                                                       
; 5833 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5834 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("_tagid")
	.dwattr $C$DW$274, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5832| 
        ; call occurs [#_tagid] ; [] |5832| 
        MOVB      XAR6,#0               ; [CPU_] |5832| 
        MOVL      XAR3,ACC              ; [CPU_] |5832| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5832| 
        MOV       *-SP[2],#0            ; [CPU_] |5832| 
        MOV       *-SP[1],#0            ; [CPU_] |5832| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$275, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5832| 
        ; call occurs [#ULL$$CMP] ; [] |5832| 
        CMPB      AL,#0                 ; [CPU_] |5832| 
        B         $C$L50,EQ             ; [CPU_] |5832| 
        ; branchcc occurs ; [] |5832| 
        MOVB      ACC,#0                ; [CPU_] |5832| 
        SUBB      ACC,#1                ; [CPU_] |5832| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5832| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5832| 
        MOVL      ACC,XAR3              ; [CPU_] |5832| 
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$276, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5832| 
        ; call occurs [#ULL$$CMP] ; [] |5832| 
        CMPB      AL,#0                 ; [CPU_] |5832| 
        B         $C$L50,EQ             ; [CPU_] |5832| 
        ; branchcc occurs ; [] |5832| 
	.dwpsn	file "../Source/prod.c",line 5835,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5835 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5835| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5835| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5835| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5837,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5837 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5839 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5837| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5840,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5840 | continue;                       // not calibrated                      
; 5843 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5840| 
        B         $C$L48,EQ             ; [CPU_] |5840| 
        ; branchcc occurs ; [] |5840| 
	.dwpsn	file "../Source/prod.c",line 5844,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5844 | continue;                       // doesn't match, skip                 
; 5847 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5844| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5844| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5844| 
        MOVL      ACC,XAR3              ; [CPU_] |5844| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5844| 
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$277, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5844| 
        ; call occurs [#ULL$$CMP] ; [] |5844| 
        CMPB      AL,#0                 ; [CPU_] |5844| 
        B         $C$L49,EQ             ; [CPU_] |5844| 
        ; branchcc occurs ; [] |5844| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5837,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5837| 
        MOVL      XAR0,ACC              ; [CPU_] |5837| 
        ADDB      XAR4,#1               ; [CPU_] |5837| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5837| 
        ; branchcc occurs ; [] |5837| 
        B         $C$L50,UNC            ; [CPU_] |5837| 
        ; branch occurs ; [] |5837| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5848,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5848 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5848| 
	.dwpsn	file "../Source/prod.c",line 5849,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5849 | conf_data.ch[ch].ci = sns;                                             
; 5851 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5849| 
        MOV       T,*-SP[5]             ; [CPU_] |5849| 
        MPYU      ACC,T,AL              ; [CPU_] |5849| 
        ADDL      ACC,XAR2              ; [CPU_] |5849| 
        MOVL      XAR5,ACC              ; [CPU_] |5849| 
        MOVB      XAR0,#42              ; [CPU_] |5849| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5849| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$269, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$269, DW_AT_TI_end_line(0x16de)
	.dwattr $C$DW$269, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$269

	.sect	".text"
	.clink
	.global	_main

$C$DW$279	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$279, DW_AT_name("main")
	.dwattr $C$DW$279, DW_AT_low_pc(_main)
	.dwattr $C$DW$279, DW_AT_high_pc(0x00)
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$279, DW_AT_external
	.dwattr $C$DW$279, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$279, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$279, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$279, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("buff")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("cmdbuff")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U141
;* AR1   assigned to $O$U328
;* AR1   assigned to $O$U357
;* AR1   assigned to $O$U566
;* AR1   assigned to $O$U694
;* AR1   assigned to $O$U793
;* AR1   assigned to $O$U830
;* AR5   assigned to $O$U846
;* AL    assigned to $O$U1004
;* AR1   assigned to $O$U982
;* AR1   assigned to $O$U1072
;* AR1   assigned to $O$U972
;* AR6   assigned to $O$U1273
;* AR1   assigned to $O$U1299
;* AR7   assigned to $O$U1535
;* XT    assigned to $O$U1562
;* PL    assigned to $O$U1563
;* AR5   assigned to $O$U1587
;* PL    assigned to $O$U1592
;* PL    assigned to $O$U1599
;* AR7   assigned to $O$U1601
;* AR5   assigned to $O$U1602
;* AR5   assigned to $O$U1616
;* XT    assigned to $O$U1658
;* PL    assigned to $O$U1659
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("ccp")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -104]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("tempft")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -12]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("templg")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -14]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("ds_ct")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -47]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("ds_sn")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -49]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("ds_bm")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -50]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_dec")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -51]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_dn")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -52]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("ds_stop")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -53]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("ds_en")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -54]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("bincmdresult")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -47]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("line")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -55]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("daccbm")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -56]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("tempvalue")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -106]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("scale")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -16]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("unsaved")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -48]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("tagch")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -143]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("ss")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -57]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("ch")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -58]

$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("version")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U256
;* AR1   assigned to $O$U256
;* AR5   assigned to $O$U256
;* AR5   assigned to $O$U256
;* AR5   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR7   assigned to $O$U256
;* AR7   assigned to $O$U256
;* AR7   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR5   assigned to $O$U256
;* AR5   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR1   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR5   assigned to $O$U256
;* AR1   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR1   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR4   assigned to $O$U256
;* AR1   assigned to $O$U256
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U425
;* AR1   assigned to $O$U425
;* AR1   assigned to $O$U425
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR5   assigned to $O$U403
;* AR7   assigned to $O$U403
;* AR1   assigned to $O$U294
;* AR1   assigned to $O$U587
;* AR1   assigned to $O$U587
;* AR1   assigned to $O$U632
;* AR1   assigned to $O$U632
;* AR4   assigned to $O$K821
;* AR4   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR4   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR5   assigned to $O$K821
;* AR5   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$U875
;* AR1   assigned to $O$U875
;* AR1   assigned to $O$U897
;* AR3   assigned to $O$U897
;* AR1   assigned to $O$U897
;* AR6   assigned to $O$U855
;* AL    assigned to $O$U855
;* AR1   assigned to $O$U923
;* AR1   assigned to $O$U923
;* AR1   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR5   assigned to $O$U1003
;* AR5   assigned to $O$U1003
;* AR5   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR4   assigned to $O$U1003
;* AR4   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR7   assigned to $O$U1003
;* AR1   assigned to $O$K311
;* AR7   assigned to $O$U1138
;* AR7   assigned to $O$U1138
;* AR7   assigned to $O$U1138
;* AR7   assigned to $O$U1138
;* AR4   assigned to $O$U1140
;* AR4   assigned to $O$U1140
;* AR4   assigned to $O$U1140
;* AR4   assigned to $O$U1140
;* AR3   assigned to $O$U1174
;* AR1   assigned to $O$U1174
;* AR1   assigned to $O$U1174
;* AR1   assigned to $O$U1180
;* AR4   assigned to $O$U1192
;* AR4   assigned to $O$U1189
;* AR7   assigned to $O$U1189
;* PL    assigned to $O$U1189
;* AR7   assigned to $O$U1189
;* AR4   assigned to $O$U1189
;* AR5   assigned to $O$U1249
;* AR4   assigned to $O$U1249
;* AR5   assigned to $O$U1328
;* AR5   assigned to $O$U1328
;* AR4   assigned to $O$U1324
;* AR4   assigned to $O$U1324
;* AR5   assigned to $O$U1383
;* AR5   assigned to $O$U1383
;* PL    assigned to $O$U1389
;* AR0   assigned to $O$U1389
;* AR1   assigned to $O$U1390
;* AR7   assigned to $O$U1390
;* AR0   assigned to $O$U1426
;* AR5   assigned to $O$U1426
;* PL    assigned to $O$U1429
;* AR1   assigned to $O$U1429
;* AR1   assigned to $O$U1430
;* AR7   assigned to $O$U1430
;* AR5   assigned to $O$U1468
;* AR5   assigned to $O$U1468
;* AR0   assigned to $O$U1503
;* AR5   assigned to $O$U1503
;* AR4   assigned to $O$U1538
;* AR1   assigned to $O$U1538
;* AR5   assigned to $O$U1538
;* AR5   assigned to $O$U1538
;* AR4   assigned to $O$U1627
;* AR5   assigned to $O$U1627
;* AR4   assigned to $O$U1627
;* AR5   assigned to $O$U1636
;* AR3   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("tempint")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("tempint")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("temp16")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg10]

$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("temp16")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_breg20 -59]

$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("temp32")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("temp32")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("cmethod")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg6]

$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("cmethod")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("flash_ret")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("flash_ret")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("flash_ret")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("flash_ret")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("slen")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("slen")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("slen")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("slen")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("slen")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("pt")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("pt")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg0]

$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("pt")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_breg20 -59]

$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg12]

$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("pt")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("pt")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("wtp")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("wtp")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("wtp")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("wtp")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg12]

$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("cmdlen")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("cmdlen")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg0]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("cmdlen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -47]

$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("cmdlen")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("cmdlen")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg0]

$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("k")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_breg20 -59]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("k")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -60]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("k")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -60]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_reg16]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -59]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_reg2]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("k")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("k")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_reg10]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -47]

$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_breg20 -47]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_reg6]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -47]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -47]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -47]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -60]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -60]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -47]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -59]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -61]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -48]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -48]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -48]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -48]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -48]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -48]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("j")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -47]

$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("j")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_reg0]

$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg18]

$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg0]

$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_breg20 -47]

$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_breg20 -47]

$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg16]

$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_reg16]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("volt")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -24]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("dsum")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$354)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -32]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("dacc")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -35]

$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("sampcnt")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$335)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_breg20 -38]

$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("data")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_sys_init")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_delay_us")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_gpio_init")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_extio_init")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_InitECan")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_configCAN")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_memcpy")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_memcpy")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_flash_init")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_led_init")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_lcd_init")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_ssr_set")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_ssr_set")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_ssr_set")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_ssr_set")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_conf_read")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_conf_default")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_conf_write")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_delay_us")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_sprintf")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_sprintf")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_led_set")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_led_set")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_delay_us")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_led_set")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_conf_write")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_led_set")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_led_set")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_led_set")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_led_set")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_sprintf")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_led_set")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_led_set")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_sprintf")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_led_set")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_led_set")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_sprintf")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_scia_init")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[47]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_scia_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_delay_us")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_puts")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_delay_us")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[47]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_puts")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_delay_us")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_puts")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_delay_us")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_scia_puts")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_delay_us")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_puts")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_delay_us")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_delay_us")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_led_set")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_led_set")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_update_units")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | Uint16 data[8];                                                        
; 598 | Uint16 data2[8];                                                       
; 599 | Uint16 data3[8];                                                       
; 600 | int n;                                                                 
; 601 | Uint16 res_1;                                                          
; 602 | volatile Uint16 res_2;                                                 
; 603 | res_1 = 0;                                                             
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 604,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 604 | SPICANInit();                                                          
; 605 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |604| 
        ; call occurs [#_SPICANInit] ; [] |604| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 607,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 607 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |607| 
	.dwpsn	file "../Source/prod.c",line 610,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 610 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |610| 
        ; call occurs [#_SPICANReadStat] ; [] |610| 
        MOV       *-SP[46],AL           ; [CPU_] |610| 
	.dwpsn	file "../Source/prod.c",line 611,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 611 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |611| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |611| 
        ; call occurs [#_SPICANRead] ; [] |611| 
        MOV       *-SP[45],AL           ; [CPU_] |611| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |612| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |612| 
        ; call occurs [#_SPICANRead] ; [] |612| 
        MOV       *-SP[44],AL           ; [CPU_] |612| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 613 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |613| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |613| 
        ; call occurs [#_SPICANRead] ; [] |613| 
        MOV       *-SP[43],AL           ; [CPU_] |613| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 614 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |614| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |614| 
        ; call occurs [#_SPICANRead] ; [] |614| 
        MOV       *-SP[42],AL           ; [CPU_] |614| 
	.dwpsn	file "../Source/prod.c",line 615,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 615 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |615| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |615| 
        ; call occurs [#_SPICANRead] ; [] |615| 
        MOV       *-SP[41],AL           ; [CPU_] |615| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |616| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |616| 
        ; call occurs [#_SPICANRead] ; [] |616| 
        MOV       *-SP[40],AL           ; [CPU_] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 617 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |617| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |617| 
        ; call occurs [#_SPICANRead] ; [] |617| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 619 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |619| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |617| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |619| 
        MOVB      AL,#161               ; [CPU_] |619| 
        SUBB      XAR4,#46              ; [CPU_U] |619| 
        MOVZ      AR4,AR4               ; [CPU_] |619| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |619| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |619| 
	.dwpsn	file "../Source/prod.c",line 620,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 620 | SPICANWaitForTXBuf(0);                                                 
; 621 | //      SPICAN_T0_RTS();                                               
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |620| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |620| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |620| 
	.dwpsn	file "../Source/prod.c",line 623,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 623 | data[0] = res_1;                                                       
; 624 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        MOVB      *-SP[46],#1,UNC       ; [CPU_] |623| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 625 | data[1] = data[1] + 1;                                                 
; 626 | data[2] = data[2] + 1;                                                 
; 627 | data[3] = data[3] + 1;                                                 
; 628 | data[4] = data[4] + 1;                                                 
; 629 | data[5] = data[5] + 1;                                                 
; 630 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 626,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |626| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |630| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |632| 
        ; call occurs [#_SPICANRead] ; [] |632| 
        MOV       *-SP[46],AL           ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 633,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 633 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |633| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |633| 
        ; call occurs [#_SPICANRead] ; [] |633| 
        MOV       *-SP[45],AL           ; [CPU_] |633| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 634 | data[2] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |634| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |634| 
        ; call occurs [#_SPICANRead] ; [] |634| 
        MOV       *-SP[44],AL           ; [CPU_] |634| 
	.dwpsn	file "../Source/prod.c",line 635,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 635 | data[3] = SPICANRead(0x2C);                                            
;----------------------------------------------------------------------
        MOVB      AL,#44                ; [CPU_] |635| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |635| 
        ; call occurs [#_SPICANRead] ; [] |635| 
        MOV       *-SP[43],AL           ; [CPU_] |635| 
	.dwpsn	file "../Source/prod.c",line 636,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 636 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |636| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |636| 
        ; call occurs [#_SPICANRead] ; [] |636| 
        MOV       *-SP[42],AL           ; [CPU_] |636| 
	.dwpsn	file "../Source/prod.c",line 637,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 637 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |637| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |637| 
        ; call occurs [#_SPICANRead] ; [] |637| 
        MOV       *-SP[41],AL           ; [CPU_] |637| 
	.dwpsn	file "../Source/prod.c",line 638,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 638 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 640 | for (;;) {                                                             
; 642 |         Uint16 should_send;                                            
; 643 |         SPICANRoutine();                                               
; 644 |         // data[7] = SPICANReadBufs(data2, data3);                     
; 645 | //              should_send = SPICANReadBufs(data2, data3);            
; 647 | //              res_1 = SPICANRead(0x2C);                              
; 648 | //              delay_us(10);                                          
; 649 | //              res_2 = (res_1 & 0xFC);                                
; 650 | //              SPICANBitModify(0x2C, 0x03, 0x00);                     
; 651 | //              // delay_us(10);                                       
; 652 | //              res_2 = SPICANReadInts();                              
; 653 | //              // SPICANWrite(0x2C, res_2);                           
; 654 | // //           res_2 = SPICANRead(0x2C);                              
; 655 | // //           res_2 = 0x00;                                          
; 656 | //              if((res_2 & 0x01) == 0x01)                             
; 657 | //              {                                                      
; 658 | //                      SPICANWaitForTXBuf(0);                         
; 659 | //                      SPICANReadSetT0Message(0xA2, 8, data2);        
; 660 | //                      SPICANWaitForTXBuf(0);                         
; 661 | //                      SPICAN_T0_RTS();                               
; 662 | //                      res_2 = SPICANRead(0x2C);                      
; 663 | //              }                                                      
; 664 | //              else if((res_2 & 0x02) == 0x02)                        
; 665 | //              {                                                      
; 666 | //                      SPICANWaitForTXBuf(0);                         
; 667 | //                      SPICANReadSetT0Message(0xA3, 8, data3);        
; 668 | //                      SPICANWaitForTXBuf(0);                         
; 669 | //                      SPICAN_T0_RTS();                               
; 670 | //              }                                                      
; 672 |         // Check for any errors                                        
; 673 |         data[6] = SPICANRead(0x2D);                                    
; 675 |         // check SW2 for reset command                                 
; 676 |         if (!(0x0010 & INBTTN)) {                                      
; 678 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 679 |                 ad7738_resetpeak(0x0f);                                
; 680 |                 ad7738_resetvall(0x0f);                                
; 682 | #if(0)                                                                 
; 683 |                 // DEBUG: tagid                                        
; 684 |                 lcd_clear();                                           
; 685 |                 for( i = 0; i < 4; i++ )                               
; 687 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 688 |                         lcd_puts( buff, i * 20 );                      
; 690 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 692 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 694 |                 // DEBUG: tagid                                        
; 695 |                 update_units();                                        
; 696 | #endif                                                                 
; 700 | #ifdef SDHCCARD                                                        
; 701 |         // write to SD card file if flag set                           
; 702 |         if( sd_write && fp )                                           
; 704 |                 if( prod_getavail() > 31 || sd_close )                 
; 706 |                         led_set( LED2, LED_RED );                      
; 708 |                         k = 32;                                        
; 710 |                         while( prod_getavail() && k-- )                
; 712 |                                 wtp = prod_getnext();                  
; 714 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 716 |                                         intp = (Uint16*)&wtp->adw[i];  
; 718 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 720 |                                         for( j = 0; j < 2; j++ )       
; 722 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 723 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 724 |                                                 intp++;                
; 727 |                                 sd_cnt++;                              
; 730 |                         if( sd_close )                                 
; 732 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 733 |                                 if( res )                              
; 735 |                                         sprintf( buff, "%02X ", res ); 
; 736 |                                         scia_puts( buff );             
; 739 |                                 res = f_close( fp );                   
; 740 |                                 fp = NULL;                             
; 742 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 743 |                                 scia_puts( buff );                     
; 745 |                                 sd_write = 0;                          
; 746 |                                 sd_close = 0;                          
; 749 |                         led_set( LED2, LED_OFF );                      
; 752 | #endif                                                                 
; 754 |         //=============================================================
;     | =====================//                                                
; 755 |         // update the vfd
;     |                          //                                            
; 756 |         //=============================================================
;     | =====================//                                                
; 757 |         // if there is new "monitor data" ready                        
; 758 |         if (ad7738_monrdy()) {                                         
; 759 |                 // clear the ready flag                                
; 760 |                 ad7738_monclr();                                       
; 762 |                 // display the appropriate data                        
; 763 |                 switch (conf_data.vfd[line].what) {                    
; 764 |                 case VFD_LOAD:                                         
; 765 |                         wtp = ad7738_getmon();                         
; 766 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 767 |                         goto VFD_LINE_BUFF;                            
; 769 |                 case VFD_PEAK:                                         
; 770 |                         wtp = ad7738_getpeak();                        
; 771 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 772 |                         goto VFD_LINE_BUFF;                            
; 774 |                 case VFD_VALL:                                         
; 775 |                         wtp = ad7738_getvall();                        
; 776 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 777 |                         goto VFD_LINE_BUFF;                            
; 779 |                 case VFD_POSI:                                         
; 780 |                         wtp = ad7738_getmon();                         
; 781 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 782 |                         goto VFD_LINE_BUFF;                            
; 784 |                 case VFD_VELO:                                         
; 785 |                         wtp = ad7738_getmon();                         
; 786 |                         //wtp = ad7738_getpeak();                      
; 787 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 789 |                         // display appropriate decimal points          
; 790 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 791 |                         case 0:                                        
; 792 |                                 sprintf(buff, "%10.0f", tempft);       
; 793 |                                 break;                                 
; 794 |                         case 1:                                        
; 795 |                                 sprintf(buff, "%10.1f", tempft);       
; 796 |                                 break;                                 
; 797 |                         case 2:                                        
; 798 |                                 sprintf(buff, "%10.2f", tempft);       
; 799 |                                 break;                                 
; 800 |                         case 3:                                        
; 801 |                                 sprintf(buff, "%10.3f", tempft);       
; 802 |                                 break;                                 
; 803 |                         case 4:                                        
; 804 |                                 sprintf(buff, "%10.4f", tempft);       
; 805 |                                 break;                                 
; 806 |                         case 5:                                        
; 807 |                                 sprintf(buff, "%10.5f", tempft);       
; 808 |                                 break;                                 
; 810 |                         break;                                         
; 812 |                 case VFD_LIMIT:                                        
; 813 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 814 |                         sprintf(buff, "  %s",                          
; 815 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 816 |                         break;                                         
; 817 |                 case VFD_TEMP:                                         
; 818 |                         sprintf(buff, "%10.1f", tempvalue);            
; 819 |                         break;                                         
; 822 |                 // print to LCD                                        
; 823 |                 lcd_puts(buff, 7 + 20 * line);                         
; 825 |                 line++;                                                
; 826 |                 if (line >= VFD_MAX) {                                 
; 827 |                         line = 0;                                      
; 831 |         //=============================================================
;     | =====================//                                                
; 832 |         // temperature sensor reading
;     |                  //                                                    
; 833 |         //=============================================================
;     | =====================//                                                
; 835 |         // if its time to start a temp conversion...                   
; 836 |         if (ad7738_tempstart()) {                                      
; 837 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 840 |         // if its time to start a temp reading...                      
; 841 |         else if (ad7738_tempread()) {                                  
; 842 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 843 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 846 |         //=============================================================
;     | =====================//                                                
; 847 |         // Auto ID detection
;     |                  //                                                    
; 848 |         //=============================================================
;     | =====================//                                                
; 849 |         // check for changes in the load cells connected by "TAG ID"   
; 850 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 851 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 853 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 855 |                                 // new loadcell just plugged in        
; 856 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 857 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 859 |                                         DINT;                          
; 860 |                                         maf_rst();                     
; 861 |                                         ad7738_setcal();               
; 862 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 863 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 864 |                                         EINT;                          
; 866 |                                         lcd_clear();                   
; 867 |                                         update_units();                
; 868 |                                         autoidchanged = 1;             
; 871 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 872 |                 } else {                                               
; 874 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 876 |                         if (autoid[tagch]) {                           
; 877 |                                 autoid[tagch] = 0;                     
; 878 |                                 lcd_clear();                           
; 879 |                                 update_units();                        
; 880 |                                 autoidchanged = 1;                     
; 884 |                 tagch++;                                               
; 885 |                 if (tagch >= CHS_MAX) {                                
; 886 |                         tagch = 0;                                     
; 890 |         //=============================================================
;     | =====================//                                                
; 891 |         // Data streamming
;     |                          //                                            
; 892 |         //=============================================================
;     | =====================//                                                
; 893 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 894 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 895 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 896 |                 //      taking into account decimation, etc.           
; 897 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 899 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 901 |                         ds_ct = 0;                                     
; 902 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 903 |                         j = 0;                                         
; 904 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 905 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 906 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 907 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 908 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 909 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 910 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 912 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 913 |                                 wtp = prod_getnext();                  
; 914 |                                 if (--k) {                             
; 915 |                                         continue;
;     |          // decimation                                                 
; 917 |                                 k = ds_dec;                            
; 918 |                                 ds_ct++;                               
; 920 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 921 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 922 |                                         if (ds_bm & ch) {              
; 923 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 924 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 925 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 926 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 927 |                                                         intp++;        
; 930 |                                         ch <<= 1;
;     |          // next channel                                               
; 933 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 934 |                                         if (ds_bm & ch) {              
; 935 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 936 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 937 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 938 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 939 |                                                         intp++;        
; 942 |                                         ch <<= 1;
;     |          // next channel                                               
; 945 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 946 |                                         if (ds_bm & ch) {              
; 947 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 948 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 949 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 950 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 951 |                                                         intp++;        
; 954 |                                         ch <<= 1;
;     |          // next channel                                               
; 958 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 960 |                         if (ds_stop) {                                 
; 961 |                                 ds_en = 0;                             
; 964 |                         scia_send_bin(buff, j);         // send data   
; 966 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 967 |                 } else if (ad7738_getlimitchgd()) {                    
; 968 |                         j = 0;                                         
; 969 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 970 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 971 |                         for (i = 0; i < LIM_MAX; i++) {                
; 972 |                                 buff[j++] = ad7738_getlimitst(i);      
; 974 |                         scia_send_bin(buff, j);         // send data   
; 975 |                 } else if (autoidchanged) {                            
; 976 |                         autoidchanged = 0;                             
; 978 |                         j = 0;                                         
; 979 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 980 |                         buff[j++] = GetAutoId;                  // 1,  
; 981 |                         buff[j++] = conf_data.tagiden;                 
; 982 |                         for (i = 0; i < CHS_MAX; i++) {                
; 983 |                                 buff[j++] = autoid[i];                 
; 985 |                         scia_send_bin(buff, j);         // send data   
; 991 |         //=============================================================
;     | =====================//                                                
; 992 |         // serial command processing
;     |                  //                                                    
; 993 |         //=============================================================
;     | =====================//                                                
; 995 |         //=============================================================
;     | =====================//                                                
; 996 |         // Check for available command in the command buffer
;     |                  //                                                    
; 997 |         //=============================================================
;     | =====================//                                                
; 998 |         if (0 == scia_rx_getcmds()) {                                  
; 999 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 1002 |         //=============================================================
;     | =====================//                                                
; 1003 |         // Read one command from command buffer
;     |                  //                                                    
; 1004 |         //=============================================================
;     | =====================//                                                
; 1005 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 1007 |         //=============================================================
;     | =====================//                                                
; 1008 |         // Empty command
;     |                          //                                            
; 1009 |         //=============================================================
;     | =====================//                                                
; 1010 |         if (0 == cmdlen) {                                             
; 1011 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 1012 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 1013 |                 continue;                                              
; 1016 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 1018 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1019 |                 // ASCII command mode processing
;     |                                  //                                    
; 1020 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1022 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 1025 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1026 |                 // Current configuration print out
;     |                          //                                            
; 1027 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1029 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1093 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1095 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1097 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1100 |                         case 'A':                               // all 
; 1102 |                                 version = VERSION;                     
; 1103 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1104 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1105 |                                 scia_puts(buff);                       
; 1106 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1107 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1108 |                                 scia_puts(buff);                       
; 1109 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1110 |                                 scia_puts(buff);                       
; 1111 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1112 |                                                 conf_data.uname);      
; 1113 |                                 scia_puts(buff);                       
; 1115 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1116 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1117 |                                 scia_puts(buff);                       
; 1118 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1119 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1120 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1121 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1122 |                                         scia_puts(buff);               
; 1124 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1125 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1126 |                                 scia_puts(buff);                       
; 1128 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1129 |                                                 conf_data.filter);     
; 1130 |                                 scia_puts(buff);                       
; 1132 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1133 |                                         scia_puts("\r\n");             
; 1134 |                                         print_channel(ch);
;     |          // channel info                                               
; 1135 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1138 |                                 scia_puts("\r\n");                     
; 1139 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1140 |                                                 conf_data.velfilter);  
; 1141 |                                 scia_puts(buff);                       
; 1142 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1143 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1144 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1145 |                                         scia_puts(buff);               
; 1147 |                                 print_vfd();                           
; 1148 |                                 print_dac();                           
; 1149 |                                 print_limits();                        
; 1150 |                                 break;                                 
; 1152 |                         case 'S':
;     |  // sensor list                                                        
; 1154 |                                 scia_puts("\r\n");                     
; 1156 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1157 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1158 |                                         scia_puts(buff);               
; 1159 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1161 |                                 break;                                 
; 1163 |                         case 'D':
;     |  // Display settings                                                   
; 1165 |                                 print_vfd();                           
; 1166 |                                 break;                                 
; 1168 |                         case 'O':
;     |  // DAC settings                                                       
; 1170 |                                 print_dac();                           
; 1171 |                                 break;                                 
; 1173 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1175 |                                 print_limits();                        
; 1176 |                                 break;                                 
; 1178 |                         default:                                       
; 1179 |                                 goto INVALIDCMD;                       
; 1182 |                         break;                                         
; 1184 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1185 |                         // Unit config commands
;     |                                  //                                    
; 1186 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1187 |                 case 'U':                                       // Unit
; 1189 |                         if (cmdlen < 2) {                              
; 1190 |                                 goto INVALIDCMD;                       
; 1193 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1196 |                         case 'S':
;     |  // unit serial number                                                 
; 1198 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1199 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1200 |                                 conf_data.usn = atol(cmdbuff);         
; 1202 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1203 |                                 scia_puts(buff);                       
; 1204 |                                 unsaved = 1;                           
; 1205 |                                 break;                                 
; 1207 |                         case 'N':
;     |  // unit name                                                          
; 1209 |                                 j = sizeof(conf_data.uname) - 1;       
; 1210 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1211 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1212 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1214 |                                         cmdlen = j;                    
; 1215 |                                         cmdbuff[j] = '\0';             
; 1217 |                                 // also copy the null terminater       
; 1218 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1219 |                                                 cmdlen + 1);           
; 1220 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1222 |                                 scia_puts(cmdbuff);                    
; 1223 |                                 scia_puts("\r\n");                     
; 1224 |                                 unsaved = 1;                           
; 1225 |                                 break;                                 
; 1227 |                         case 'C':
;     |  // current sensor                                                     
; 1229 |                                 // channel number                      
; 1230 |                                 j = CHS_MAX;                           
; 1231 |                                 do {                                   
; 1232 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1233 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1234 |                                         ch = atoi(cmdbuff);            
; 1235 |                                         scia_puts(cmdbuff);            
; 1236 |                                         if (ch > 0 && ch <= j) {       
; 1237 |                                                 break;
;     |          // valid input channel number                                 
; 1239 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1240 |                                 } while (j);                           
; 1241 |                                 scia_puts("\r\n");                     
; 1242 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1244 |                                 // sensor number                       
; 1245 |                                 j = SENSPCH;                           
; 1246 |                                 do {                                   
; 1247 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1248 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1249 |                                         ss = atoi(cmdbuff);            
; 1250 |                                         scia_puts(cmdbuff);            
; 1251 |                                         if (ss > 0 && ss <= j) {       
; 1252 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1254 |                                                 break;                 
; 1256 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1257 |                                 } while (j);                           
; 1258 |                                 scia_puts("\r\n");                     
; 1259 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1261 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1262 |                                                 ch + 1, ss + 1);       
; 1263 |                                 scia_puts(buff);                       
; 1264 |                                 print_sensor(ss);                      
; 1265 |                                 unsaved = 1;                           
; 1267 |                                 DINT;                                  
; 1268 |                                 conf_data.ch[ch].ci = ss;              
; 1269 |                                 ad7738_setcal();                       
; 1271 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1272 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1273 |                                 EINT;                                  
; 1275 |                                 update_units();                        
; 1276 |                                 break;                                 
; 1278 |                         case 'I':
;     |  // interface                                                          
; 1280 |                                 for (j = 0; j < 4; j++) {              
; 1281 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1282 |                                         scia_puts(buff);               
; 1283 |                                         if (j < 3) {                   
; 1284 |                                                 scia_puts(", ");       
; 1287 |                                 scia_puts("\r\n");                     
; 1288 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1289 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1290 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1291 |                                 scia_puts(cmdbuff);                    
; 1292 |                                 scia_puts("\r\n");                     
; 1293 |                                 if (cmdlen == 0) {                     
; 1294 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1295 |                                         break;                         
; 1297 |                                 pt = atoi(cmdbuff);                    
; 1298 |                                 if (pt > 3) {                          
; 1299 |                                         scia_puts(                     
; 1300 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1301 |                                         break;                         
; 1303 |                                 conf_data.rxdir = pt;                  
; 1304 |                                 sprintf(buff,                          
; 1305 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1306 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1307 |                                 scia_puts(buff);                       
; 1308 |                                 scia_puts(                             
; 1309 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1310 |                                 unsaved = 1;                           
; 1311 |                                 break;                                 
; 1313 |                         case 'B':
;     |  // baudrate                                                           
; 1315 |                                 if (conf_data.rxdir == SDIR_USB        
; 1316 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1317 |                                         scia_puts(                     
; 1318 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1319 |                                         break;                         
; 1322 |                                 for (j = 0; j < 8; j++) {              
; 1323 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1324 |                                         scia_puts(buff);               
; 1325 |                                         if (j < 7) {                   
; 1326 |                                                 scia_puts(", ");       
; 1329 |                                 scia_puts("\r\n");                     
; 1330 |                                 cmdlen = sprintf(buff,                 
; 1331 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1332 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1333 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1334 |                                 scia_puts(cmdbuff);                    
; 1335 |                                 scia_puts("\r\n");                     
; 1336 |                                 if (cmdlen == 0) {                     
; 1337 |                                         scia_puts(                     
; 1338 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1339 |                                         break;                         
; 1341 |                                 pt = atoi(cmdbuff);                    
; 1342 |                                 if (pt > 7) {                          
; 1343 |                                         scia_puts(                     
; 1344 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1345 |                                         break;                         
; 1347 |                                 conf_data.baud = pt;                   
; 1348 |                                 sprintf(buff,                          
; 1349 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1350 |                                                 BAUD[conf_data.baud]); 
; 1351 |                                 scia_puts(buff);                       
; 1352 |                                 scia_puts(                             
; 1353 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1354 |                                 unsaved = 1;                           
; 1355 |                                 break;                                 
; 1357 |                         case 'F':
;     |  // averaging filter size                                              
; 1359 |                                 j = MAF_MAX;                           
; 1360 |                                 do {                                   
; 1361 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1362 |                                                         j);            
; 1363 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1364 |                                         i = atoi(cmdbuff);             
; 1365 |                                         scia_puts(cmdbuff);            
; 1366 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1367 |                                                 break;
;     |          // valid number input                                         
; 1369 |                                         scia_puts(                     
; 1370 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1371 |                                 } while (j);                           
; 1372 |                                 scia_puts("\r\n");                     
; 1374 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1375 |                                                 i);                    
; 1376 |                                 scia_puts(buff);                       
; 1377 |                                 unsaved = 1;                           
; 1379 |                                 // update new value                    
; 1380 |                                 DINT;                                  
; 1381 |                                 conf_data.filter = i;                  
; 1382 |                                 maf_rst();                             
; 1383 |                                 EINT;                                  
; 1384 |                                 break;                                 
; 1386 |                         case 'W':
;     |  // diff window ratio                                                  
; 1388 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1389 |                                                 conf_data.diffwin);    
; 1390 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1391 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1392 |                                 scia_puts(cmdbuff);                    
; 1393 |                                 scia_puts("\r\n");                     
; 1395 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1396 |                                                 conf_data.diffwin);    
; 1397 |                                 scia_puts(buff);                       
; 1398 |                                 unsaved = 1;                           
; 1400 |                                 DINT;                                  
; 1401 |                                 ad7738_setcal();                       
; 1402 |                                 maf_rst();                             
; 1403 |                                 EINT;                                  
; 1404 |                                 break;                                 
; 1406 |                         default:                                       
; 1407 |                                 goto INVALIDCMD;                       
; 1410 |                         break;                                         
; 1412 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1413 |                         // Board calibration
;     |                                  //                                    
; 1414 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1415 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1417 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1418 |                                 goto INVALIDCMD;                       
; 1421 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1422 |                                 goto INVALIDCMD;                       
; 1423 |                                 // invalid calibration method          
; 1426 |                         // channel index                               
; 1427 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1428 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1429 |                                 goto INVALIDCMD;                       
; 1430 |                                 // invalid channel number              
; 1432 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1434 |                         volt[0] = 0;                                   
; 1435 |                         volt[1] = 0;                                   
; 1436 |                         for (j = 3; j < cmdlen; j++) {                 
; 1437 |                                 if (cmdbuff[j] == 'X') {               
; 1438 |                                         j++;                           
; 1439 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1442 |                                 if (cmdbuff[j] == 'Y') {               
; 1443 |                                         j++;                           
; 1444 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1448 |                         if (volt[0] == volt[1]) {                      
; 1449 |                                 goto INVALIDCMD;                       
; 1450 |                                 // invalid parameters                  
; 1453 |                         lcd_clear();                                   
; 1454 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1455 |                         lcd_puts(buff, 20);                            
; 1456 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1457 |                         lcd_puts(buff, 40);                            
; 1458 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1459 |                         lcd_puts(buff, 60);                            
; 1461 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1464 |                         case 'C':
;     |  // board ADC calibration                                              
; 1466 |                                 lcd_puts("Board Calibration...", 0);   
; 1468 |                                 sprintf(buff,                          
; 1469 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1470 |                                                 ch + 1);               
; 1471 |                                 scia_puts(buff);                       
; 1483 |                                 for (j = 0; j < 2; j++) {              
; 1484 |                                         sprintf(buff,                  
; 1485 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1486 |                                                         volt[j]);      
; 1487 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1488 |                                         scia_puts("Reading ... ");     
; 1490 |                                         dsum[j] = 0;                   
; 1491 |                                         sampcnt = CAL_SAMPLES;         
; 1492 |                                         while (sampcnt--) {            
; 1493 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1494 |                                                         delay_us(1);
;     |                  // wait                                               
; 1496 |                                                 cntp = ad7738_getraw();
; 1497 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1500 |                                         scia_puts("done\r\n");         
; 1503 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1504 |                                                 / (dsum[1] - dsum[0]); 
; 1506 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1507 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1508 |                                 scia_puts(buff);                       
; 1509 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1510 |                                 break;                                 
; 1512 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1514 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1515 |                                                 || volt[1] < -10) {    
; 1516 |                                         lcd_clear();                   
; 1517 |                                         update_units();                
; 1518 |                                         goto INVALIDCMD;               
; 1519 |                                         // invalid parameters          
; 1522 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1524 |                                 sprintf(buff,                          
; 1525 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1526 |                                                 ch + 1);               
; 1527 |                                 scia_puts(buff);                       
; 1528 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1529 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1531 |                                 for (j = 0; j < 2; j++) {              
; 1532 |                                         if (volt[j] < 0) {             
; 1533 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1534 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1535 |                                         } else {                       
; 1536 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1537 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1539 |                                         if (dsum[0] <= 0) {            
; 1540 |                                                 dacc[j] = 0;           
; 1541 |                                         } else if (dsum[0] >= 0xffff) {
; 1542 |                                                 dacc[j] = 0xffff;      
; 1543 |                                         } else {                       
; 1544 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1547 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1548 |                                         scia_puts(buff);               
; 1549 |                                         cmdbuff[0] = '\0';             
; 1551 |                                         do {                           
; 1552 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1553 |                                                 latch_dac();           
; 1555 |                                                 do {                   
; 1556 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1557 | 
;     |  sizeof(cmdbuff));                                                     
; 1558 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1559 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1561 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1562 |                                                         break;
;     |                  // done                                               
; 1565 |                                                 i = atoi(cmdbuff + 1); 
; 1566 |                                                 if (i == 0) {          
; 1567 |                                                         i = 1;         
; 1570 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1572 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1573 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1574 |                                                         } else {       
; 1575 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1577 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1579 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1580 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1581 |                                                         } else {       
; 1582 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1585 |                                         } while (i);                   
; 1587 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1588 |                                         scia_puts(buff);               
; 1591 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1593 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1594 |                                 cmdbuff[0] = '\0';                     
; 1596 |                                 do {                                   
; 1597 |                                         mcbsp_xmit(dacc[2], ch);       
; 1598 |                                         latch_dac();                   
; 1600 |                                         do {                           
; 1601 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1602 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1603 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1605 |                                         if ('S' == cmdbuff[0]) {       
; 1606 |                                                 break;
;     |          // done                                                       
; 1609 |                                         i = atoi(cmdbuff + 1);         
; 1610 |                                         if (i == 0) {                  
; 1611 |                                                 i = 1;                 
; 1614 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1616 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1617 |                                                         dacc[2] += i;  
; 1618 |                                                 } else {               
; 1619 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1621 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1623 |                                                 if (dacc[2] >= i) {    
; 1624 |                                                         dacc[2] -= i;  
; 1625 |                                                 } else {               
; 1626 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1629 |                                 } while (i);                           
; 1631 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1632 |                                 scia_puts(buff);                       
; 1634 |                                 // do the calculations                 
; 1635 |                                 if (volt[0] < 0) {                     
; 1636 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1637 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1638 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1639 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1640 |                                 } else {                               
; 1641 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1642 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1643 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1644 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1646 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1648 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1650 |                                 sprintf(buff,                          
; 1651 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1652 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1653 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1654 |                                 scia_puts(buff);                       
; 1656 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1657 |                                 break;                                 
; 1659 |                         default:                                       
; 1660 |                                 goto INVALIDCMD;                       
; 1663 |                         unsaved = 1;                                   
; 1664 |                         lcd_clear();                                   
; 1665 |                         update_units();                                
; 1667 |                         DINT;                                          
; 1668 |                         ad7738_setcal();                               
; 1669 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1670 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1671 |                         EINT;                                          
; 1672 |                         break;                                         
; 1674 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1675 |                         // Channel sensor calibration
;     |                                  //                                    
; 1676 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1677 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1679 |                         if (cmdlen < 2) {                              
; 1680 |                                 goto INVALIDCMD;                       
; 1683 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1684 |                                         && 'S' != cmdbuff[1]) {        
; 1685 |                                 goto INVALIDCMD;                       
; 1686 |                                 // invalid calibration method          
; 1688 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1690 |                         lcd_clear();                                   
; 1691 |                         lcd_puts("Sensor Calibration..", 0);           
; 1693 |                         // === read informations ====                  
; 1694 |                         // channel number                              
; 1695 |                         j = CHS_MAX;                                   
; 1696 |                         do {                                           
; 1697 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1698 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1699 |                                 ch = atoi(cmdbuff);                    
; 1700 |                                 scia_puts(cmdbuff);                    
; 1701 |                                 if (ch > 0 && ch <= j) {               
; 1702 |                                         break;
;     |  // valid input channel number                                         
; 1704 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1705 |                         } while (j);                                   
; 1706 |                         scia_puts("\r\n");                             
; 1707 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1709 |                         // sensor number                               
; 1710 |                         j = SENSPCH;                                   
; 1711 |                         do {                                           
; 1712 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1713 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1714 |                                 ss = atoi(cmdbuff);                    
; 1715 |                                 scia_puts(cmdbuff);                    
; 1716 |                                 if (ss > 0 && ss <= j) {               
; 1717 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1719 |                                         break;                         
; 1721 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1722 |                         } while (j);                                   
; 1723 |                         scia_puts("\r\n");                             
; 1724 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1726 |                         // put on the vfd                              
; 1727 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1728 |                         lcd_puts(buff, 20);                            
; 1730 |                         // sensor serial number                        
; 1731 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1732 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1733 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1734 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1736 |                                 cmdlen = j;                            
; 1737 |                                 cmdbuff[j] = '\0';                     
; 1739 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1740 |                         scia_puts(cmdbuff);                            
; 1741 |                         scia_puts("\r\n");                             
; 1743 |                         // sensor label                                
; 1744 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1745 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1746 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1747 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1749 |                                 cmdlen = j;                            
; 1750 |                                 cmdbuff[j] = '\0';                     
; 1752 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1753 |                         scia_puts(cmdbuff);                            
; 1754 |                         scia_puts("\r\n");                             
; 1756 |                         // unit                                        
; 1757 |                         for (j = 0; j < 7; j++) {                      
; 1758 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1760 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1761 |                         scia_puts(buff);                               
; 1762 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1763 |                                         sizeof(cmdbuff));              
; 1764 |                         tsensor.unit = atoi(cmdbuff);                  
; 1766 |                         switch (tsensor.unit) {                        
; 1767 |                         case 0:                                 // lb  
; 1768 |                         case 1:                                 // kg  
; 1769 |                                 tsensor.unit |= 0x10;                  
; 1770 |                                 break;                                 
; 1771 |                         case 2:                                 // in  
; 1772 |                         case 3:                                 // cm  
; 1773 |                         case 4:                                 // mm  
; 1774 |                                 tsensor.unit |= 0x20;                  
; 1775 |                                 break;                                 
; 1776 |                         case 5:                                 // ps  
; 1777 |                                 tsensor.unit |= 0x30;                  
; 1778 |                                 break;                                 
; 1779 |                         case 6:                                 // nm  
; 1780 |                                 tsensor.unit |= 0x40;                  
; 1781 |                                 break;                                 
; 1782 |                         case 7:                                        
; 1783 |                         case 8:                                        
; 1784 |                         case 15:                                       
; 1785 |                                 tsensor.unit |= 0xf0;                  
; 1786 |                                 break;                                 
; 1787 |                         default:                                       
; 1788 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1789 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1790 |                                 break;                                 
; 1792 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1793 |                         tsensor.ufactor = 1;                    // 1:1 
; 1795 |                         scia_puts(cmdbuff);                            
; 1796 |                         scia_puts("\r\n");                             
; 1798 |                         // range                                       
; 1799 |                         j = 1;                                         
; 1800 |                         do {                                           
; 1801 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1802 |                                 tsensor.range = atof(cmdbuff);         
; 1803 |                                 if (tsensor.range != 0) {              
; 1804 |                                         break;                         
; 1806 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1807 |                         } while (j);                                   
; 1808 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1809 |                         scia_puts(cmdbuff);                            
; 1810 |                         scia_puts("\r\n");                             
; 1812 |                         tsensor.tagid = tagid(ch);                     
; 1814 |                         if (tsensor.tagid == 0) {                      
; 1815 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1816 |                         } else {                                       
; 1817 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1819 |                         scia_puts(buff);                               
; 1821 |                         switch (cmethod)
;     |  // on method code                                                     
; 1824 |                         case 'V':
;     |  // mv/v cal                                                           
; 1826 |                                 lcd_puts("Method: mv/v", 40);          
; 1828 |                                 tsensor.method = MD_RUN_MVV;           
; 1829 |                                 tsensor.points = 1;                    
; 1831 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1832 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1833 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1834 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1835 |                                 if (tsensor.slope[0] == 0) {           
; 1836 |                                         tsensor.slope[0] = 1;          
; 1838 |                                 scia_puts(cmdbuff);                    
; 1839 |                                 scia_puts("\r\n");                     
; 1841 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1842 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1844 |                                 scia_puts("Reading ... ");             
; 1846 |                                 dsum[0] = 0;                           
; 1847 |                                 sampcnt = CAL_SAMPLES;                 
; 1848 |                                 while (sampcnt--) {                    
; 1849 |                                         while (0 == ad7738_rawrdy()) { 
; 1850 |                                                 delay_us(1);
;     |          // wait                                                       
; 1853 |                                         cntp = ad7738_getraw();        
; 1854 |                                         dsum[0] += cntp->adc[ch];      
; 1856 |                                 scia_puts("done\r\n");                 
; 1858 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1859 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1860 |                                 break;                                 
; 1862 |                         case 'M':
;     |  // mass cal                                                           
; 1864 |                                 tsensor.method = MD_RUN_MAS;           
; 1866 |                                 // calibration points for mass cal only
; 1867 |                                 j = PNT_MAX;                           
; 1868 |                                 do {                                   
; 1869 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1870 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1871 |                                         tsensor.points = atoi(cmdbuff);
; 1872 |                                         scia_puts(cmdbuff);            
; 1873 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1874 |                                                 break;                 
; 1876 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1878 |                                 } while (j);                           
; 1879 |                                 scia_puts("\r\n");                     
; 1881 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1882 |                                 lcd_puts(buff, 40);                    
; 1884 |                                 // calculate the default point values  
; 1885 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1886 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1887 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1890 |                                 // read in value with default provided 
; 1891 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1892 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1893 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1894 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1896 |                                         // zero length response set the
;     |  default                                                               
; 1897 |                                         if (cmdlen > 0) {              
; 1898 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1900 |                                         scia_puts(cmdbuff);            
; 1901 |                                         scia_puts("\r\n");             
; 1904 |                                 // TODO: sort the list of points       
; 1906 |                                 // read adc count for each point       
; 1907 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1908 |                                         sprintf(buff,                  
; 1909 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1910 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1911 |                                                         j + 1);        
; 1912 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1913 |                                         scia_puts("Reading ... ");     
; 1915 |                                         dsum[0] = 0;                   
; 1916 |                                         sampcnt = CAL_SAMPLES;         
; 1917 |                                         while (sampcnt--) {            
; 1918 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1919 |                                                         delay_us(1);
;     |                  // wait                                               
; 1922 |                                                 cntp = ad7738_getraw();
; 1923 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1925 |                                         scia_puts("done\r\n");         
; 1926 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1929 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1930 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1931 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1932 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1933 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1934 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1935 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1936 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1937 | 
;     |  * tsensor.adc[j];                                                     
; 1939 |                                 break;                                 
; 1941 |                         case 'S':
;     |  // shunt cal                                                          
; 1943 |                                 lcd_puts("Method: shunt", 40);         
; 1945 |                                 tsensor.method = MD_RUN_SHT;           
; 1946 |                                 tsensor.points = 1;                    
; 1948 |                                 sprintf(buff,                          
; 1949 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1950 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1951 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1952 |                                 scia_puts(cmdbuff);                    
; 1953 |                                 scale = atof(cmdbuff);                 
; 1954 |                                 if (scale == 0) {                      
; 1955 |                                         scale = 1.46;                  
; 1956 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1958 |                                 scia_puts("\r\n");                     
; 1960 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1961 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1963 |                                 scia_puts("Reading ... ");             
; 1965 |                                 for (j = 0; j < 2; j++) {              
; 1966 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1968 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1969 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1970 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1972 |                                                 DINT;                  
; 1973 |                                                 maf_rst();             
; 1974 |                                                 EINT;                  
; 1975 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1978 |                                         dsum[j] = 0;                   
; 1979 |                                         sampcnt = CAL_SAMPLES;         
; 1980 |                                         while (sampcnt--) {            
; 1981 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1982 |                                                         delay_us(1);
;     |                  // wait                                               
; 1985 |                                                 cntp = ad7738_getraw();
; 1986 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1990 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1991 |                                 DINT;                                  
; 1992 |                                 maf_rst();                             
; 1993 |                                 EINT;                                  
; 1995 |                                 scia_puts("done\r\n");                 
; 1997 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1998 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1999 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 2000 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 2001 |                                 break;                                 
; 2003 |                         default:                                       
; 2004 |                                 lcd_clear();                           
; 2005 |                                 update_units();                        
; 2006 |                                 goto INVALIDCMD;                       
; 2009 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 2010 |                         scia_getparam(                                 
; 2011 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 2012 |                                         cmdbuff, sizeof(cmdbuff));     
; 2013 |                         scia_puts("Reading ... ");                     
; 2015 |                         for (j = 0; j < 2; j++) {                      
; 2016 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 2018 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 2019 |                                         for (i = 0; i < 50; i++) {     
; 2020 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 2022 |                                         DINT;                          
; 2023 |                                         maf_rst();                     
; 2024 |                                         EINT;                          
; 2025 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 2028 |                                 dsum[j] = 0;                           
; 2029 |                                 sampcnt = CAL_SAMPLES;                 
; 2030 |                                 while (sampcnt--) {                    
; 2031 |                                         while (0 == ad7738_rawrdy()) { 
; 2032 |                                                 delay_us(1);
;     |          // wait                                                       
; 2035 |                                         cntp = ad7738_getraw();        
; 2036 |                                         dsum[j] += cntp->adc[ch];      
; 2038 |                                 dsum[j] /= CAL_SAMPLES;                
; 2040 |                                 pt = 0;                                
; 2041 |                                 if (tsensor.points > 2) {              
; 2042 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2043 |                                                 pt++;                  
; 2046 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2047 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2050 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2051 |                         DINT;                                          
; 2052 |                         maf_rst();                                     
; 2053 |                         EINT;                                          
; 2055 |                         scia_puts("done\r\n");                         
; 2057 |                         tsensor.shunt = volt[1] - volt[0];             
; 2059 |                         // setup some other members of the structure   
; 2060 |                         tsensor.tare = 0;                              
; 2061 |                         tsensor.dacgain = 1;                           
; 2062 |                         tsensor.dacoff = 0;                            
; 2063 |                         tsensor.ch = ch;                               
; 2065 |                         DINT;                                          
; 2066 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2067 |                                         sizeof(sconf_t));              
; 2069 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2071 |                         ad7738_setcal();                               
; 2072 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2073 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2074 |                         EINT;                                          
; 2076 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2077 |                                         ch + 1, ss + 1);               
; 2078 |                         scia_puts(buff);                               
; 2079 |                         print_sensor(ss);                              
; 2081 |                         unsaved = 1;                                   
; 2082 |                         lcd_clear();                                   
; 2083 |                         update_units();                                
; 2084 |                         break;                                         
; 2086 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2087 |                         // sensor config commands
;     |                                          //                            
; 2088 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2089 |                 case 'S':                               // sensor      
; 2091 |                         if (cmdlen < 2) {                              
; 2092 |                                 goto INVALIDCMD;                       
; 2095 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2096 |                                         && 'D' != cmdbuff[1]) {        
; 2097 |                                 goto INVALIDCMD;                       
; 2098 |                                 // invalid command                     
; 2100 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2120 |                         // sensor number                               
; 2121 |                         j = SENSPCH;                                   
; 2122 |                         do {                                           
; 2123 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2124 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2125 |                                 ss = atoi(cmdbuff);                    
; 2126 |                                 scia_puts(cmdbuff);                    
; 2127 |                                 if (ss > 0 && ss <= j) {               
; 2128 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2130 |                                         break;                         
; 2132 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2133 |                         } while (j);                                   
; 2134 |                         scia_puts("\r\n");                             
; 2135 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2137 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2140 |                         case 'N':
;     |  // change sensor label                                                
; 2142 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2143 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2144 |                                                 ss + 1, j);            
; 2145 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2146 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2148 |                                         cmdlen = j;                    
; 2149 |                                         cmdbuff[j] = '\0';             
; 2151 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2152 |                                                 cmdlen + 1);           
; 2153 |                                 scia_puts(cmdbuff);                    
; 2154 |                                 scia_puts("\r\n");                     
; 2155 |                                 unsaved = 1;                           
; 2157 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2158 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2159 |                                 scia_puts(buff);                       
; 2160 |                                 break;                                 
; 2162 |                         case 'U':
;     |  // change the output unit                                             
; 2164 |                                 scale = 0;                             
; 2166 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2167 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2169 |                                         do {                           
; 2170 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2171 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2172 |                                                 j = atoi(cmdbuff);     
; 2173 |                                                 scia_puts(cmdbuff);    
; 2174 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2175 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2177 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2178 |                                         scia_puts("\r\n");             
; 2180 |                                         switch (j) {                   
; 2181 |                                         case 0:                        
; 2182 |                                                 scale = 1;             
; 2183 |                                                 j |= 0x10;             
; 2184 |                                                 break;                 
; 2185 |                                         case 1:                        
; 2186 |                                                 scale = LB_TO_KG;      
; 2187 |                                                 j |= 0x10;             
; 2188 |                                                 break;                 
; 2189 |                                         case 7:                        
; 2190 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2191 |                                                 j |= 0xf0;             
; 2192 |                                                 break;                 
; 2194 |                                         break;                         
; 2196 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2198 |                                         do {                           
; 2199 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2200 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2201 |                                                 j = atoi(cmdbuff);     
; 2202 |                                                 scia_puts(cmdbuff);    
; 2203 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2204 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2206 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2207 |                                         scia_puts("\r\n");             
; 2209 |                                         switch (j) {                   
; 2210 |                                         case 0:                        
; 2211 |                                                 scale = 1.0 / LB_TO_KG;
; 2212 |                                                 j |= 0x10;             
; 2213 |                                                 break;                 
; 2214 |                                         case 1:                        
; 2215 |                                                 scale = 1;             
; 2216 |                                                 j |= 0x10;             
; 2217 |                                                 break;                 
; 2218 |                                         case 7:                        
; 2219 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2220 |                                                 j |= 0xf0;             
; 2221 |                                                 break;                 
; 2223 |                                         break;                         
; 2225 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2227 |                                         do {                           
; 2228 |                                                 scia_getparam(         
; 2229 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2230 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2231 |                                                 j = atoi(cmdbuff);     
; 2232 |                                                 scia_puts(cmdbuff);    
; 2233 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2234 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2236 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2237 |                                         scia_puts("\r\n");             
; 2239 |                                         switch (j) {                   
; 2240 |                                         case 2:                        
; 2241 |                                                 scale = 1;             
; 2242 |                                                 j |= 0x20;             
; 2243 |                                                 break;                 
; 2244 |                                         case 3:                        
; 2245 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2246 |                                                 j |= 0x20;             
; 2247 |                                                 break;                 
; 2248 |                                         case 4:                        
; 2249 |                                                 scale = IN_TO_MM;      
; 2250 |                                                 j |= 0x20;             
; 2251 |                                                 break;                 
; 2252 |                                         case 7:                        
; 2253 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2254 |                                                 j |= 0xf0;             
; 2255 |                                                 break;                 
; 2257 |                                         break;                         
; 2259 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2261 |                                         do {                           
; 2262 |                                                 scia_getparam(         
; 2263 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2264 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2265 |                                                 j = atoi(cmdbuff);     
; 2266 |                                                 scia_puts(cmdbuff);    
; 2267 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2268 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2270 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2271 |                                         scia_puts("\r\n");             
; 2273 |                                         switch (j) {                   
; 2274 |                                         case 2:                        
; 2275 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2276 |                                                 j |= 0x20;             
; 2277 |                                                 break;                 
; 2278 |                                         case 3:                        
; 2279 |                                                 scale = 1;             
; 2280 |                                                 j |= 0x20;             
; 2281 |                                                 break;                 
; 2282 |                                         case 4:                        
; 2283 |                                                 scale = 10;            
; 2284 |                                                 j |= 0x20;             
; 2285 |                                                 break;                 
; 2286 |                                         case 7:                        
; 2287 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2288 |                                                 j |= 0xf0;             
; 2289 |                                                 break;                 
; 2291 |                                         break;                         
; 2293 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2295 |                                         do {                           
; 2296 |                                                 scia_getparam(         
; 2297 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2298 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2299 |                                                 j = atoi(cmdbuff);     
; 2300 |                                                 scia_puts(cmdbuff);    
; 2301 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2302 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2304 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2305 |                                         scia_puts("\r\n");             
; 2307 |                                         switch (j) {                   
; 2308 |                                         case 2:                        
; 2309 |                                                 scale = 1.0 / IN_TO_MM;
; 2310 |                                                 j |= 0x20;             
; 2311 |                                                 break;                 
; 2312 |                                         case 3:                        
; 2313 |                                                 scale = 0.1;           
; 2314 |                                                 j |= 0x20;             
; 2315 |                                                 break;                 
; 2316 |                                         case 4:                        
; 2317 |                                                 scale = 1;             
; 2318 |                                                 j |= 0x20;             
; 2319 |                                                 break;                 
; 2320 |                                         case 7:                        
; 2321 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2322 |                                                 j |= 0xf0;             
; 2323 |                                                 break;                 
; 2325 |                                         break;                         
; 2327 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2329 |                                         do {                           
; 2330 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2331 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2332 |                                                 j = atoi(cmdbuff);     
; 2333 |                                                 scia_puts(cmdbuff);    
; 2334 |                                                 if (j != 5 && j != 7) {
; 2335 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2337 |                                         } while (j != 5 && j != 7);    
; 2338 |                                         scia_puts("\r\n");             
; 2340 |                                         switch (j) {                   
; 2341 |                                         case 5:                        
; 2342 |                                                 scale = 1;             
; 2343 |                                                 j |= 0x30;             
; 2344 |                                                 break;                 
; 2345 |                                         case 7:                        
; 2346 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2347 |                                                 j |= 0xf0;             
; 2348 |                                                 break;                 
; 2350 |                                         break;                         
; 2352 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2354 |                                         do {                           
; 2355 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2356 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2357 |                                                 j = atoi(cmdbuff);     
; 2358 |                                                 scia_puts(cmdbuff);    
; 2359 |                                                 if (j != 6 && j != 7) {
; 2360 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2362 |                                         } while (j != 6 && j != 7);    
; 2363 |                                         scia_puts("\r\n");             
; 2365 |                                         switch (j) {                   
; 2366 |                                         case 6:                        
; 2367 |                                                 scale = 1;             
; 2368 |                                                 j |= 0x40;             
; 2369 |                                                 break;                 
; 2370 |                                         case 7:                        
; 2371 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2372 |                                                 j |= 0xf0;             
; 2373 |                                                 break;                 
; 2375 |                                         break;                         
; 2377 |                                 default:                               
; 2378 |                                         break;                         
; 2381 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2382 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2383 |                                         break;                         
; 2386 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2387 |                                         scia_puts(                     
; 2388 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2389 |                                         break;                         
; 2392 |                                 conf_data.sensor[ss].ounit = j;        
; 2393 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2394 |                                 unsaved = 1;                           
; 2396 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2397 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2398 |                                 scia_puts(buff);                       
; 2400 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2401 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2402 |                                                 update_units();        
; 2403 |                                                 DINT;                  
; 2404 |                                                 ad7738_setcal();       
; 2405 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2406 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2407 |                                                 EINT;                  
; 2410 |                                 break;                                 
; 2412 |                         case 'B':
;     |  // change percent base                                                
; 2414 |                                 // base                                
; 2415 |                                 j = 1;                                 
; 2416 |                                 do {                                   
; 2417 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2418 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2419 |                                         scale = atof(cmdbuff);         
; 2420 |                                         scia_puts(cmdbuff);            
; 2421 |                                         if (scale != 0) {              
; 2422 |                                                 break;                 
; 2424 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2425 |                                 } while (j);                           
; 2426 |                                 scia_puts("\r\n");                     
; 2427 |                                 conf_data.sensor[ss].base = scale;     
; 2428 |                                 unsaved = 1;                           
; 2430 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2431 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2432 |                                 scia_puts(buff);                       
; 2434 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2435 |                                         // output unit is percent      
; 2436 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2437 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2439 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2440 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2441 |                                                         // changed is f
;     | or the current sensor                                                  
; 2442 |                                                         DINT;          
; 2443 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2444 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2445 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2446 |                                                         EINT;          
; 2450 |                                 break;                                 
; 2452 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2454 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2455 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2456 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2457 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2458 |                                 scia_puts(cmdbuff);                    
; 2459 |                                 scia_puts("\r\n");                     
; 2461 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2462 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2463 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2464 |                                 scia_puts(cmdbuff);                    
; 2465 |                                 scia_puts("\r\n");                     
; 2466 |                                 unsaved = 1;                           
; 2468 |                                 sprintf(buff,                          
; 2469 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2470 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2471 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2472 |                                 scia_puts(buff);                       
; 2474 |                                 DINT;                                  
; 2475 |                                 ad7738_setcal();                       
; 2476 |                                 EINT;                                  
; 2477 |                                 break;                                 
; 2479 |                         default:                                       
; 2480 |                                 goto INVALIDCMD;                       
; 2483 |                         break;                                         
; 2485 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2486 |                         // Encoder config commands
;     |                                  //                                    
; 2487 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2488 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2490 |                         if (cmdlen < 2) {                              
; 2491 |                                 goto INVALIDCMD;                       
; 2494 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2497 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2499 |                                 j = MAF_MAX;                           
; 2500 |                                 do {                                   
; 2501 |                                         sprintf(buff,                  
; 2502 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2503 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2504 |                                         i = atoi(cmdbuff);             
; 2505 |                                         scia_puts(cmdbuff);            
; 2506 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2507 |                                                 break;
;     |          // valid number input                                         
; 2509 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2510 |                                 } while (j);                           
; 2511 |                                 scia_puts("\r\n");                     
; 2513 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2514 |                                                 i);                    
; 2515 |                                 scia_puts(buff);                       
; 2516 |                                 unsaved = 1;                           
; 2518 |                                 // update new value                    
; 2519 |                                 DINT;                                  
; 2520 |                                 conf_data.velfilter = i;               
; 2521 |                                 ad7738_setcal();                       
; 2522 |                                 velf_rst();                            
; 2523 |                                 EINT;                                  
; 2524 |                                 break;                                 
; 2526 |                         case 'P':
;     |  // count per inch                                                     
; 2528 |                                 // channel number                      
; 2529 |                                 j = ENC_MAX;                           
; 2530 |                                 do {                                   
; 2531 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2532 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2533 |                                         ss = atoi(cmdbuff);            
; 2534 |                                         scia_puts(cmdbuff);            
; 2535 |                                         if (ss > 0 && ss <= j) {       
; 2536 |                                                 break;
;     |          // valid input line number                                    
; 2538 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2539 |                                 } while (j);                           
; 2540 |                                 scia_puts("\r\n");                     
; 2541 |                                 ss--;
;     |  // line number, convert to index                                      
; 2543 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2544 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2545 |                                 templg = atol(cmdbuff);                
; 2546 |                                 scia_puts(cmdbuff);                    
; 2547 |                                 scia_puts("\r\n");                     
; 2548 |                                 if (templg == 0) {                     
; 2549 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2550 |                                         break;                         
; 2552 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2553 |                                                 ss + 1, templg);       
; 2554 |                                 scia_puts(buff);                       
; 2555 |                                 unsaved = 1;                           
; 2557 |                                 // update new value                    
; 2558 |                                 DINT;                                  
; 2559 |                                 conf_data.cntperin[ss] = templg;       
; 2560 |                                 ad7738_setcal();                       
; 2561 |                                 velf_rst();                            
; 2562 |                                 EINT;                                  
; 2563 |                                 break;                                 
; 2565 |                         break;                                         
; 2567 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2568 |                         // Display command
;     |                                  //                                    
; 2569 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2570 |                 case 'D':                                              
; 2572 |                         if (cmdlen < 2) {                              
; 2573 |                                 goto INVALIDCMD;                       
; 2576 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2578 |                         case 'S':
;     |  // selection                                                          
; 2580 |                                 // line number                         
; 2581 |                                 j = VFD_MAX;                           
; 2582 |                                 do {                                   
; 2583 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2584 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2585 |                                         ss = atoi(cmdbuff);            
; 2586 |                                         scia_puts(cmdbuff);            
; 2587 |                                         if (ss > 0 && ss <= j) {       
; 2588 |                                                 break;
;     |          // valid input line number                                    
; 2590 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2591 |                                 } while (j);                           
; 2592 |                                 scia_puts("\r\n");                     
; 2593 |                                 ss--;
;     |  // line number, convert to index                                      
; 2595 |                                 // what                                
; 2596 |                                 for (j = 0; j < 7; j++) {              
; 2597 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2598 |                                         scia_puts(buff);               
; 2599 |                                         if (j < 6) {                   
; 2600 |                                                 scia_puts(", ");       
; 2603 |                                 scia_puts("\r\n");                     
; 2604 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2605 |                                                 ss + 1);               
; 2606 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2607 |                                 pt = atoi(cmdbuff);                    
; 2608 |                                 if (pt >= 7) {                         
; 2609 |                                         pt = 0;                        
; 2610 |                                         scia_puts(                     
; 2611 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2613 |                                 scia_puts(cmdbuff);                    
; 2614 |                                 scia_puts("\r\n");                     
; 2615 |                                 conf_data.vfd[ss].what = pt;           
; 2617 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2619 |                                 case VFD_LOAD:                         
; 2620 |                                 case VFD_PEAK:                         
; 2621 |                                 case VFD_VALL:                         
; 2623 |                                         j = CHS_MAX;                   
; 2624 |                                         goto VFD_CHANNEL;              
; 2626 |                                 case VFD_POSI:                         
; 2627 |                                 case VFD_VELO:                         
; 2629 |                                         j = ENC_MAX;                   
; 2631 |                                         VFD_CHANNEL:                   
; 2632 |                                         // channel number              
; 2633 |                                         do {                           
; 2634 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2635 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2636 |                                                 ch = atoi(cmdbuff);    
; 2637 |                                                 scia_puts(cmdbuff);    
; 2638 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2639 |                                                         break;
;     |          // valid input channel number                                 
; 2641 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2642 |                                         } while (j);                   
; 2643 |                                         scia_puts("\r\n");             
; 2644 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2645 |                                         conf_data.vfd[ss].ch = ch;     
; 2647 |                                         // digits after decimal point  
; 2648 |                                         j = 1;                         
; 2649 |                                         do {                           
; 2650 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2651 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2652 |                                                 i = atoi(cmdbuff);     
; 2653 |                                                 if (i >= 0 && i <= 5) {
; 2654 |                                                         break;         
; 2656 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2657 |                                         } while (j);                   
; 2658 |                                         scia_puts(cmdbuff);            
; 2659 |                                         scia_puts("\r\n");             
; 2660 |                                         conf_data.vfd[ss].adec = i;    
; 2662 |                                         sprintf(buff,                  
; 2663 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2664 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2665 |                                         scia_puts(buff);               
; 2666 |                                         break;                         
; 2668 |                                 case VFD_LIMIT:                        
; 2669 |                                         // channel number              
; 2670 |                                         j = CHS_MAX;                   
; 2671 |                                         do {                           
; 2672 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2673 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2674 |                                                 ch = atoi(cmdbuff);    
; 2675 |                                                 scia_puts(cmdbuff);    
; 2676 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2677 |                                                         break;
;     |          // valid input channel number                                 
; 2679 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2680 |                                         } while (j);                   
; 2681 |                                         scia_puts("\r\n");             
; 2682 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2683 |                                         conf_data.vfd[ss].ch = ch;     
; 2685 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2686 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2687 |                                         scia_puts(buff);               
; 2688 |                                         break;                         
; 2689 |                                 case VFD_TEMP:                         
; 2690 |                                         // no more info                
; 2691 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2692 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2693 |                                         scia_puts(buff);               
; 2694 |                                         break;                         
; 2697 |                                 lcd_clear();                           
; 2698 |                                 update_units();                        
; 2699 |                                 unsaved = 1;                           
; 2700 |                                 break;                                 
; 2702 |                         default:                                       
; 2703 |                                 goto INVALIDCMD;                       
; 2706 |                         break;                                         
; 2708 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2709 |                         // DAC out command
;     |                                  //                                    
; 2710 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2711 |                 case 'O':                                              
; 2713 |                         if (cmdlen < 2) {                              
; 2714 |                                 goto INVALIDCMD;                       
; 2717 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2719 |                         case 'S':
;     |  // selection                                                          
; 2721 |                                 // DAC channel number                  
; 2722 |                                 j = DAC_MAX;                           
; 2723 |                                 do {                                   
; 2724 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2725 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2726 |                                         ss = atoi(cmdbuff);            
; 2727 |                                         scia_puts(cmdbuff);            
; 2728 |                                         if (ss > 0 && ss <= j) {       
; 2729 |                                                 break;
;     |          // valid input channel number                                 
; 2731 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2732 |                                 } while (j);                           
; 2733 |                                 scia_puts("\r\n");                     
; 2734 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2736 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2737 |                                 for (j = 0; j < 5; j++) {              
; 2738 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2739 |                                         scia_puts(buff);               
; 2740 |                                         scia_puts(", ");               
; 2742 |                                 j = 7;                                 
; 2743 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2744 |                                 scia_puts(buff);                       
; 2745 |                                 scia_puts("\r\n");                     
; 2746 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2747 |                                                 ss + 1);               
; 2748 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2749 |                                 pt = atoi(cmdbuff);                    
; 2750 |                                 if (pt >= 5 && pt != 7) {              
; 2751 |                                         pt = 0;                        
; 2752 |                                         scia_puts(                     
; 2753 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2755 |                                 scia_puts(cmdbuff);                    
; 2756 |                                 scia_puts("\r\n");                     
; 2757 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2759 |                                 if ( VFD_VOLT != pt) {                 
; 2761 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2762 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2763 |                                                 j = CHS_MAX;           
; 2764 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2765 |                                                 j = ENC_MAX;           
; 2768 |                                         // linked load/... channel numb
;     | er                                                                     
; 2769 |                                         do {                           
; 2770 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2771 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2772 |                                                 ch = atoi(cmdbuff);    
; 2773 |                                                 scia_puts(cmdbuff);    
; 2774 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2775 |                                                         break;
;     |          // valid input channel number                                 
; 2777 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2778 |                                         } while (j);                   
; 2779 |                                         scia_puts("\r\n");             
; 2780 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2781 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2783 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2784 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2785 |                                                 // gain                
; 2786 |                                                 if ( VFD_POSI == pt) { 
; 2787 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2788 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2789 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2791 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2792 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2793 |                                                 scia_puts(cmdbuff);    
; 2794 |                                                 scia_puts("\r\n");     
; 2796 |                                                 // offset              
; 2797 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2798 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2799 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2800 |                                                 scia_puts(cmdbuff);    
; 2801 |                                                 scia_puts("\r\n");     
; 2805 |                                 unsaved = 1;                           
; 2807 |                                 // print result                        
; 2808 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2809 |                                                 LPV[pt]);              
; 2810 |                                 scia_puts(buff);                       
; 2812 |                                 if ( VFD_VOLT == pt) {                 
; 2813 |                                         scia_puts("\r\n");             
; 2814 |                                 } else {                               
; 2815 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2816 |                                         scia_puts(buff);               
; 2818 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2819 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2820 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2821 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2822 |                                                 scia_puts(buff);       
; 2826 |                                 DINT;                                  
; 2827 |                                 ad7738_setcal();                       
; 2828 |                                 EINT;                                  
; 2829 |                                 break;                                 
; 2831 |                         case 'D':
;     |  // direct voltage output                                              
; 2833 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2834 |                                                 || 'V' != cmdbuff[3]) {
; 2835 |                                         goto INVALIDCMD;               
; 2838 |                                 // channel index                       
; 2839 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2840 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2841 |                                         goto INVALIDCMD;               
; 2842 |                                         // invalid channel number      
; 2844 |                                 ss--;
;     |  // change to zero based index                                         
; 2846 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2847 |                                         goto INVALIDCMD;               
; 2848 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2851 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2852 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2853 |                                         goto INVALIDCMD;               
; 2854 |                                         // invalid voltage             
; 2857 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2858 |                                 if (volt[0] < 0) {                     
; 2859 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2860 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2861 |                                 } else {                               
; 2862 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2863 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2866 |                                 if (dsum[0] <= 0) {                    
; 2867 |                                         dacc[0] = 0;                   
; 2868 |                                 } else if (dsum[0] >= 0xffff) {        
; 2869 |                                         dacc[0] = 0xffff;              
; 2870 |                                 } else {                               
; 2871 |                                         dacc[0] = (Uint16) dsum[0];    
; 2874 |                                 mcbsp_xmit(dacc[0], ss);               
; 2875 |                                 latch_dac();                           
; 2877 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2878 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2879 |                                 scia_puts(buff);                       
; 2881 |                                 break;                                 
; 2883 |                         default:                                       
; 2884 |                                 goto INVALIDCMD;                       
; 2887 |                         break;                                         
; 2889 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2890 |                         // LIMIT command
;     |                                          //                            
; 2891 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2892 |                 case 'L':                                              
; 2894 |                         if (cmdlen < 2) {                              
; 2895 |                                 goto INVALIDCMD;                       
; 2898 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2900 |                         case 'S':
;     |  // selection                                                          
; 2902 |                                 // LIMIT channel number                
; 2903 |                                 j = LIM_MAX;                           
; 2904 |                                 do {                                   
; 2905 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2906 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2907 |                                         ss = atoi(cmdbuff);            
; 2908 |                                         scia_puts(cmdbuff);            
; 2909 |                                         if (ss > 0 && ss <= j) {       
; 2910 |                                                 break;
;     |          // valid input channel number                                 
; 2912 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2913 |                                 } while (j);                           
; 2914 |                                 scia_puts("\r\n");                     
; 2915 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2917 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2918 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2919 |                                 scia_puts(cmdbuff);                    
; 2920 |                                 scia_puts("\r\n");                     
; 2922 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2924 |                                         // set on flag                 
; 2925 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2927 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2928 |                                         for (j = 0; j < 5; j++) {      
; 2929 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2930 |                                                 scia_puts(buff);       
; 2931 |                                                 if (j < 4) {           
; 2932 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2935 |                                         scia_puts("\r\n");             
; 2936 |                                         sprintf(buff,                  
; 2937 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2938 |                                                         ss + 1);       
; 2939 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2940 |                                         pt = atoi(cmdbuff);            
; 2941 |                                         if (pt >= 5) {                 
; 2942 |                                                 pt = 0;                
; 2943 |                                                 scia_puts(             
; 2944 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2946 |                                         scia_puts(cmdbuff);            
; 2947 |                                         scia_puts("\r\n");             
; 2948 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2950 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2951 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2952 |                                                 j = CHS_MAX;           
; 2953 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2954 |                                                 j = ENC_MAX;           
; 2957 |                                         // linked load/... channel numb
;     | er                                                                     
; 2958 |                                         do {                           
; 2959 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2960 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2961 |                                                 ch = atoi(cmdbuff);    
; 2962 |                                                 scia_puts(cmdbuff);    
; 2963 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2964 |                                                         break;
;     |          // valid input channel number                                 
; 2966 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2967 |                                         } while (j);                   
; 2968 |                                         scia_puts("\r\n");             
; 2969 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2970 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2972 |                                         // NO/NC                       
; 2973 |                                         scia_getparam(                 
; 2974 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2975 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2976 |                                         scia_puts(cmdbuff);            
; 2977 |                                         scia_puts("\r\n");             
; 2979 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2981 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2982 |                                         } else {                       
; 2983 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2986 |                                         scia_getparam(                 
; 2987 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2988 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2989 |                                         scia_puts(cmdbuff);            
; 2990 |                                         scia_puts("\r\n");             
; 2992 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2994 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2995 |                                         } else {                       
; 2996 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2999 |                                         scia_getparam(                 
; 3000 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 3001 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3002 |                                         scia_puts(cmdbuff);            
; 3003 |                                         scia_puts("\r\n");             
; 3005 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 3007 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 3008 |                                         } else {                       
; 3009 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 3012 |                                         // unit (output)               
; 3013 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 3014 |                                         case VFD_LOAD:                 
; 3015 |                                         case VFD_PEAK:                 
; 3016 |                                         case VFD_VALL:                 
; 3017 |                                                 ccp =                  
; 3018 |                                                                 UNITS[0
;     | x0f                                                                    
; 3019 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 3020 |                                                 break;                 
; 3021 |                                         case VFD_POSI:                 
; 3022 |                                                 ccp = POS_U;           
; 3023 |                                                 break;                 
; 3024 |                                         case VFD_VELO:                 
; 3025 |                                                 ccp = VEL_U;           
; 3026 |                                                 break;                 
; 3029 |                                         // set value                   
; 3030 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 3031 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3032 |                                         scia_puts(cmdbuff);            
; 3033 |                                         scia_puts("\r\n");             
; 3035 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3036 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3037 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3039 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3040 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3041 |                                         scia_puts(cmdbuff);            
; 3042 |                                         scia_puts("\r\n");             
; 3044 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3045 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3046 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3047 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3049 |                                         // print result                
; 3050 |                                         sprintf(buff,                  
; 3051 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3052 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3053 |                                         scia_puts(buff);               
; 3055 |                                         sprintf(buff,                  
; 3056 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3057 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3058 | 
;     |  "NC" : "NO",                                                          
; 3059 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3060 | 
;     |  "ON" : "OFF",                                                         
; 3061 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3062 |                                         scia_puts(buff);               
; 3063 |                                         sprintf(buff,                  
; 3064 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3065 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3066 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3067 |                                         scia_puts(buff);               
; 3069 |                                 } else
;     |  // turn off                                                           
; 3071 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3072 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3075 |                                 unsaved = 1;                           
; 3077 |                                 DINT;                                  
; 3078 |                                 ad7738_setcal();                       
; 3079 |                                 EINT;                                  
; 3080 |                                 break;                                 
; 3082 |                         default:                                       
; 3083 |                                 goto INVALIDCMD;                       
; 3086 |                         break;                                         
; 3088 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3089 |                         // reset commands
;     |                                          //                            
; 3090 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3091 |                 case 'R':                                              
; 3093 |                         if (cmdlen < 2) {                              
; 3094 |                                 goto INVALIDCMD;                       
; 3097 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3099 |                         case 'T':
;     |  // tare                                                               
; 3101 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3102 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3103 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3104 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3105 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3106 |                                 } else {                               
; 3107 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3108 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3109 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3111 |                                 break;                                 
; 3113 |                         case 'P':
;     |  // peak                                                               
; 3115 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3116 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3117 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3118 |                                 } else {                               
; 3119 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3121 |                                 break;                                 
; 3123 |                         case 'V':
;     |  // valley                                                             
; 3125 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3126 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3127 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3128 |                                 } else {                               
; 3129 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3131 |                                 break;                                 
; 3133 |                         case 'S':
;     |  // shunt switch                                                       
; 3135 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3136 |                                         shunt_switch(1);               
; 3137 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3138 |                                 } else {                               
; 3139 |                                         shunt_switch(0);               
; 3140 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3142 |                                 break;                                 
; 3144 |                         case 'L':
;     |  // limit                                                              
; 3146 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3147 |                                 ch--;                                  
; 3149 |                                 ad7738_resetlimit(ch);                 
; 3150 |                                 break;                                 
; 3152 |                         case 'I':
;     |  // posItion                                                           
; 3154 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3155 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3156 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3157 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3158 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3159 |                                 } else {                               
; 3160 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3161 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3162 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3164 |                                 break;                                 
; 3166 |                         default:                                       
; 3167 |                                 goto INVALIDCMD;                       
; 3169 |                         break;                                         
; 3171 | #ifdef SDHCCARD                                                        
; 3173 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3174 |                         // Stream to SD Card
;     |                                  //                                    
; 3175 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3176 |                         case 'W':// Write control                      
; 3178 |                         if( cmdlen < 2 )                               
; 3180 |                                 goto INVALIDCMD;                       
; 3183 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3185 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3187 |                                 if( cmdlen < 3 )                       
; 3189 |                                         goto INVALIDCMD;               
; 3192 |                                 if( sd_write )                         
; 3194 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3195 |                                         break;                         
; 3198 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3199 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3201 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3203 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3204 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3206 |                                 if( !res )                             
; 3208 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3209 |                                         if( res || cmdlen != temp16 )  
; 3211 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3212 |                                                 scia_puts( buff );     
; 3213 |                                                 f_close( fp );         
; 3214 |                                                 fp = NULL;             
; 3215 |                                                 break;                 
; 3232 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3234 |                                         if( res )                      
; 3236 |                                                 f_close( fp );         
; 3237 |                                                 fp = NULL;             
; 3238 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3239 |                                                 break;                 
; 3242 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3243 |                                         scia_puts( buff );             
; 3245 |                                         prod_init();                   
; 3246 |                                         sd_write = 1;                  
; 3247 |                                         sd_cnt = 0;                    
; 3248 |                                         break;                         
; 3251 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3252 |                                 scia_puts( buff );                     
; 3253 |                                 break;                                 
; 3255 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3257 |                                 if( sd_write )                         
; 3259 |                                         sd_close = 1;                  
; 3260 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3261 |                                         break;                         
; 3263 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3264 |                                 break;                                 
; 3266 |                                 case 'L':
;     |          // list files                                                 
; 3268 |                                 if( sd_write )                         
; 3270 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3271 |                                         break;                         
; 3274 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3275 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3277 |                                 res = f_opendir(&dir, "0:");           
; 3278 |                                 if (res)                               
; 3280 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3281 |                                         scia_puts( buff );             
; 3282 |                                         break;                         
; 3285 |                                 p1 = s1 = s2 = 0;                      
; 3286 |                                 for(;;)                                
; 3288 |                                         res = f_readdir(&dir, &Finfo); 
; 3289 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3290 |                                         break;                         
; 3291 |                                         if (Finfo.fattrib & AM_DIR)    
; 3293 |                                                 s2++;                  
; 3295 |                                         else                           
; 3297 |                                                 s1++;                  
; 3298 |                                                 p1 += Finfo.fsize;     
; 3300 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3301 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3302 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3303 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3304 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3305 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3306 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3307 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3308 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3309 |                                         scia_puts( buff );             
; 3311 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3312 |                                 scia_puts( buff );                     
; 3313 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3315 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3316 |                                         scia_puts( buff );             
; 3318 |                                 break;                                 
; 3320 |                                 case 'G':
;     |          // get a file                                                 
; 3322 |                                 if( sd_write )                         
; 3324 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3325 |                                         break;                         
; 3328 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3329 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3331 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3333 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3334 |                                 res = f_open( fp, buff, FA_READ );     
; 3335 |                                 if (res)                               
; 3337 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3338 |                                         scia_puts( buff );             
; 3339 |                                         break;                         
; 3342 |                                 do                                     
; 3344 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3345 |                                         scia_send( buff, temp16 );     
; 3346 |                                 }while( !res && temp16 == 512 );       
; 3348 |                                 f_close( fp );                         
; 3349 |                                 fp = NULL;                             
; 3350 |                                 break;                                 
; 3352 |                                 case 'R':
;     |          // remove a file                                              
; 3354 |                                 if( sd_write )                         
; 3356 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3357 |                                         break;                         
; 3360 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3361 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3363 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3365 |                                 res = f_unlink( buff );                
; 3367 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3368 |                                 scia_puts( buff );                     
; 3369 |                                 break;                                 
; 3371 |                                 default:                               
; 3372 |                                 goto INVALIDCMD;                       
; 3375 |                         break;                                         
; 3376 | #endif                                                                 
; 3378 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3379 |                         // Flash memory access commands
;     |                                    //                                  
; 3380 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3381 |                 case 'F':                                       // flas
;     | h access                                                               
; 3383 |                         if (cmdlen < 2) {                              
; 3384 |                                 goto INVALIDCMD;                       
; 3387 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3389 |                         case 'W':
;     |  // write flash                                                        
; 3391 |                                 if (unsaved) {                         
; 3392 |                                         // flash writing               
; 3393 |                                         lcd_clear();                   
; 3394 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3395 |                                         scia_puts("Flash writing..."); 
; 3397 |                                         for (i = 0; i < 50; i++) {     
; 3398 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3401 |                                         DINT;                          
; 3402 |                                         flash_ret = conf_write();      
; 3403 |                                         EINT;                          
; 3405 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3406 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3407 |                                                 unsaved = 0;           
; 3408 |                                         } else {                       
; 3409 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3411 |                                         lcd_clear();                   
; 3412 |                                         update_units();                
; 3413 |                                         break;                         
; 3415 |                                 scia_puts(                             
; 3416 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3417 |                                 break;                                 
; 3419 |                         case 'R':
;     |  // read flash                                                         
; 3421 |                                 // flash reading                       
; 3422 |                                 conf_read();                           
; 3424 |                                 DINT;                                  
; 3425 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3426 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3427 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3428 |                                 EINT;                                  
; 3430 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3431 |                                 unsaved = 0;                           
; 3433 |                                 update_units();                        
; 3435 |                                 break;                                 
; 3437 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3439 |                                 conf_default();                        
; 3441 |                                 // flash writing                       
; 3442 |                                 lcd_clear();                           
; 3443 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3444 |                                 scia_puts("Flash write...");           
; 3446 |                                 for (i = 0; i < 50; i++) {             
; 3447 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3450 |                                 DINT;                                  
; 3451 |                                 flash_ret = conf_write();              
; 3452 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3453 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3454 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3455 |                                 EINT;                                  
; 3457 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3458 |                                         scia_puts(                     
; 3459 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3460 |                                         unsaved = 0;                   
; 3461 |                                 } else {                               
; 3462 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3464 |                                 lcd_clear();                           
; 3465 |                                 update_units();                        
; 3466 |                                 break;                                 
; 3468 |                         default:                                       
; 3469 |                                 goto INVALIDCMD;                       
; 3472 |                         break;                                         
; 3474 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3475 |                         // Help manu
;     |                                  //                                    
; 3476 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3477 |                 case 'H':                               // help menu   
; 3479 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3481 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3482 |                         scia_puts(                                     
; 3483 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3484 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3485 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3486 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3487 |                         scia_puts("\r\n");                             
; 3489 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3490 |                         scia_puts("UN          Set unit name.\r\n");   
; 3491 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3492 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3493 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3494 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3495 |                         scia_puts("\r\n");                             
; 3497 |                         scia_puts(                                     
; 3498 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3499 |                         scia_puts(                                     
; 3500 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3501 |                         scia_puts("\r\n");                             
; 3503 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3504 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3505 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3506 |                         scia_puts("\r\n");                             
; 3508 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3509 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3510 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3511 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3512 |                         scia_puts("\r\n");                             
; 3514 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3515 |                         scia_puts(                                     
; 3516 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3517 |                         scia_puts("\r\n");                             
; 3519 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3520 |                         scia_puts("\r\n");                             
; 3522 |                         scia_puts(                                     
; 3523 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3524 |                         scia_puts(                                     
; 3525 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3526 |                         scia_puts("\r\n");                             
; 3528 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3529 |                         scia_puts("\r\n");                             
; 3531 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3532 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3533 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3534 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3535 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3536 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3537 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3538 |                         scia_puts("\r\n");                             
; 3540 | #ifdef SDHCCARD                                                        
; 3541 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3542 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3543 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3544 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3545 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3546 |                         scia_puts( "\r\n" );                           
; 3547 | #endif                                                                 
; 3549 |                         scia_puts(                                     
; 3550 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3551 |                         scia_puts(                                     
; 3552 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3553 |                         scia_puts(                                     
; 3554 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3555 |                         scia_puts("\r\n");                             
; 3557 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3559 |                         // not implemented                             
; 3560 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3562 |                         scia_puts("\r\n");                             
; 3564 |                         break;                                         
; 3566 |                 case 'X':                                              
; 3568 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3570 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3572 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3575 |                         cmd_mode = SCI_MODE_BIN;                       
; 3576 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3578 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3580 |                         break;                                         
; 3582 |                 case 'Z':                                              
; 3584 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3586 |                         for (i = 0; i < 100; i++)       // 2s          
; 3588 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3591 |                         reboot();                                      
; 3592 |                         break;                                         
; 3616 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3617 |                         // Invalid commands
;     |                                  //                                    
; 3618 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3619 |                 default:                                               
; 3621 |                         INVALIDCMD:                                    
; 3623 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3624 |                         scia_puts(cmdbuff);                            
; 3625 |                         scia_puts("\", ignored.\r\n");                 
; 3626 |                         break;                                         
; 3628 |                 } // switch on 1st byte                                
; 3630 |                 if (unsaved) {                                         
; 3631 |                         scia_puts(                                     
; 3632 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3635 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3636 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3637 |                 // BIN command mode processing
;     |                          //                                            
; 3638 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3640 |                 // ------------------------------------------------    
; 3641 |                 // DEBUG: put received command on LCD                  
; 3650 |                 // ------------------------------------------------    
; 3651 |                 if (cmdlen < 2) {                                      
; 3652 |                         // INVALID COMMAND, less than 2 byte           
; 3653 |                         // may need to send NACK back                  
; 3654 |                         continue;                                      
; 3657 |                 for (i = 0; i < 2; i++) {                              
; 3658 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3661 |                 j = 2;                                  // buff length 
; 3662 |                 bincmdresult = Error_UnImpl;                           
; 3664 |                 // DEBUG, sending the command back                     
; 3665 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3667 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3669 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3672 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3787 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3789 |                 case CheckAddress:                                     
; 3791 |                         buff[j++] = 0;                                 
; 3792 |                         bincmdresult = OK_SendResult;                  
; 3793 |                         break;                                         
; 3795 |                 case SetAddress:                                       
; 3797 |                         buff[j] = cmdbuff[j];                          
; 3798 |                         j++;                                           
; 3799 |                         bincmdresult = OK_SendResult;                  
; 3800 |                         break;                                         
; 3802 |                 case RemoveAddress:                                    
; 3804 |                         buff[j] = cmdbuff[j];                          
; 3805 |                         j++;                                           
; 3806 |                         bincmdresult = OK_SendResult;                  
; 3807 |                         break;                                         
; 3809 |                 case GetUnitInfo:                                      
; 3811 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3812 |                         for (i = 0; i < 2; i++) {                      
; 3813 |                                 buff[j++] = 0xff & *intp;              
; 3814 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3815 |                                 intp++;                                
; 3818 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3819 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3821 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3822 |                         for (i = 0; i < 2; i++) {                      
; 3823 |                                 buff[j++] = 0xff & *intp;              
; 3824 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3825 |                                 intp++;                                
; 3828 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3829 |                         buff[j++] = slen;                              
; 3830 |                         for (i = 0; i < slen; i++) {                   
; 3831 |                                 buff[j++] = conf_data.uname[i]; // name
; 3833 |                         bincmdresult = OK_SendResult;                  
; 3835 |                         break;                                         
; 3837 |                 case SetUnitSN:                                        
; 3839 |                         if (cmdlen < 6) {                              
; 3840 |                                 bincmdresult = Error_Invalid;          
; 3841 |                                 break;                                 
; 3844 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3845 |                         for (i = 0; i < 2; i++) {                      
; 3846 |                                 *intp = cmdbuff[j];                    
; 3847 |                                 buff[j++] = 0xff & *intp;              
; 3848 |                                 *intp += cmdbuff[j] << 8;              
; 3849 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3850 |                                 intp++;                                
; 3852 |                         unsaved = 1;                                   
; 3854 |                         bincmdresult = OK_SendResult;                  
; 3855 |                         break;                                         
; 3857 |                 case SetUnitName:                                      
; 3859 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3860 |                                 bincmdresult = Error_Invalid;          
; 3861 |                                 break;                                 
; 3864 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3865 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3867 |                         conf_data.uname[i] = '\0';                     
; 3868 |                         unsaved = 1;                                   
; 3870 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3871 |                         buff[j++] = slen;                              
; 3872 |                         for (i = 0; i < slen; i++) {                   
; 3873 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3875 |                         bincmdresult = OK_SendResult;                  
; 3876 |                         break;                                         
; 3878 |                 case GetInterface:                                     
; 3880 |                         buff[j++] = conf_data.rxdir;                   
; 3882 |                         if (conf_data.rxdir == SDIR_RS485              
; 3883 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3884 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3885 |                                 for (i = 0; i < 2; i++) {              
; 3886 |                                         buff[j++] = 0xff & *intp;      
; 3887 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3888 |                                         intp++;                        
; 3891 |                         bincmdresult = OK_SendResult;                  
; 3892 |                         break;                                         
; 3894 |                 case SetInterface:                                     
; 3896 |                         if (cmdlen < 3) {                              
; 3897 |                                 bincmdresult = Error_Invalid;          
; 3898 |                                 break;                                 
; 3900 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3901 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3902 |                                 bincmdresult = Error_Invalid;          
; 3903 |                                 break;                                 
; 3906 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3907 |                                 if (cmdlen < 7) {                      
; 3908 |                                         bincmdresult = Error_Invalid;  
; 3909 |                                         break;                         
; 3912 |                                 temp32 = 0;                            
; 3913 |                                 for (k = 6; k > 2; k--) {              
; 3914 |                                         temp32 += cmdbuff[k];          
; 3915 |                                         temp32 <<= 8;                  
; 3918 |                                 for (i = 0; i < 8; i++) {              
; 3919 |                                         if (temp32 == BAUD[i]) {       
; 3920 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3921 |                                                 break;                 
; 3924 |                                 if (i == 8) {                          
; 3925 |                                         bincmdresult = Error_Invalid;  
; 3926 |                                         break;                         
; 3930 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3932 |                         while (j < cmdlen) {                           
; 3933 |                                 buff[j] = cmdbuff[j];                  
; 3934 |                                 j++;                                   
; 3936 |                         unsaved = 1;                                   
; 3937 |                         bincmdresult = OK_SendResult;                  
; 3938 |                         break;                                         
; 3940 |                 case GetChannel:                                       
; 3942 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3943 |                                 bincmdresult = Error_Invalid;          
; 3944 |                                 break;                                 
; 3946 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3948 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3950 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3952 |                                 buff[j++] = 0;                         
; 3955 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3956 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3958 |                                 buff[j++] = 0xff & *intp;              
; 3959 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3960 |                                 intp++;                                
; 3963 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3964 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3966 |                                 buff[j++] = 0xff & *intp;              
; 3967 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3968 |                                 intp++;                                
; 3971 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3972 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3974 |                                 buff[j++] = 0xff & *intp;              
; 3975 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3976 |                                 intp++;                                
; 3979 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3980 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3982 |                                 buff[j++] = 0xff & *intp;              
; 3983 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3984 |                                 intp++;                                
; 3987 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3988 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3990 |                                 buff[j++] = 0xff & *intp;              
; 3991 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3992 |                                 intp++;                                
; 3995 |                         bincmdresult = OK_SendResult;                  
; 3996 |                         break;                                         
; 3998 |                 case GetSensor:                                        
; 4000 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4001 |                                 bincmdresult = Error_Invalid;          
; 4002 |                                 break;                                 
; 4004 |                         ss = cmdbuff[2];                               
; 4005 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4007 |                         // sensor serial name                          
; 4008 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 4009 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4010 |                         for (i = 0; i < slen; i++) {                   
; 4011 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 4014 |                         // sensor name/label                           
; 4015 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4016 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4017 |                         for (i = 0; i < slen; i++) {                   
; 4018 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4021 |                         // TAGID                                       
; 4022 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 4023 |                         for (i = 0; i < 4; i++) {                      
; 4024 |                                 buff[j++] = 0xff & *intp;              
; 4025 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4026 |                                 intp++;                                
; 4029 |                         // Method                                      
; 4030 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4032 |                         // Date                                        
; 4033 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4034 |                         for (i = 0; i < 2; i++) {                      
; 4035 |                                 buff[j++] = 0xff & *intp;              
; 4036 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4037 |                                 intp++;                                
; 4040 |                         // Range                                       
; 4041 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4042 |                         for (i = 0; i < 2; i++) {                      
; 4043 |                                 buff[j++] = 0xff & *intp;              
; 4044 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4045 |                                 intp++;                                
; 4048 |                         // Unit                                        
; 4049 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4051 |                         // Output Unit                                 
; 4052 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4054 |                         // Unit Factor                                 
; 4055 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4056 |                         for (i = 0; i < 2; i++) {                      
; 4057 |                                 buff[j++] = 0xff & *intp;              
; 4058 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4059 |                                 intp++;                                
; 4062 |                         // calibration points.                         
; 4063 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4064 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4065 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4066 |                                         // mass point                  
; 4067 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4068 |                                         for (i = 0; i < 2; i++) {      
; 4069 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4070 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4071 |                                                 intp++;                
; 4073 |                                         // adc counts point            
; 4074 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4075 |                                         for (i = 0; i < 2; i++) {      
; 4076 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4077 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4078 |                                                 intp++;                
; 4082 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4083 |                                         // slope point                 
; 4084 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4085 |                                         for (i = 0; i < 2; i++) {      
; 4086 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4087 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4088 |                                                 intp++;                
; 4090 |                                         // intercept point             
; 4091 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4092 |                                         for (i = 0; i < 2; i++) {      
; 4093 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4094 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4095 |                                                 intp++;                
; 4098 |                         } else {                                       
; 4099 |                                 buff[j++] = 0;                         
; 4100 |                                 // slope                               
; 4101 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4102 |                                 for (i = 0; i < 2; i++) {              
; 4103 |                                         buff[j++] = 0xff & *intp;      
; 4104 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4105 |                                         intp++;                        
; 4107 |                                 // intercept                           
; 4108 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4109 |                                 for (i = 0; i < 2; i++) {              
; 4110 |                                         buff[j++] = 0xff & *intp;      
; 4111 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4112 |                                         intp++;                        
; 4116 |                         // shunt                                       
; 4117 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4118 |                         for (i = 0; i < 2; i++) {                      
; 4119 |                                 buff[j++] = 0xff & *intp;              
; 4120 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4121 |                                 intp++;                                
; 4124 |                         // base                                        
; 4125 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4126 |                         for (i = 0; i < 2; i++) {                      
; 4127 |                                 buff[j++] = 0xff & *intp;              
; 4128 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4129 |                                 intp++;                                
; 4132 |                         // DAC calibration gain                        
; 4133 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4134 |                         for (i = 0; i < 2; i++) {                      
; 4135 |                                 buff[j++] = 0xff & *intp;              
; 4136 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4137 |                                 intp++;                                
; 4140 |                         // DAC calibration offset                      
; 4141 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4142 |                         for (i = 0; i < 2; i++) {                      
; 4143 |                                 buff[j++] = 0xff & *intp;              
; 4144 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4145 |                                 intp++;                                
; 4148 |                         // channel calibrated on                       
; 4149 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4151 |                         bincmdresult = OK_SendResult;                  
; 4152 |                         break;                                         
; 4154 |                 case GetQEPChannels:                                   
; 4156 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4157 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4158 |                                 for (i = 0; i < 2; i++) {              
; 4159 |                                         buff[j++] = 0xff & *intp;      
; 4160 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4161 |                                         intp++;                        
; 4165 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4166 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4168 |                         bincmdresult = OK_SendResult;                  
; 4169 |                         break;                                         
; 4171 |                 case GetCurSensor:                                     
; 4173 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4174 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4177 |                         bincmdresult = OK_SendResult;                  
; 4178 |                         break;                                         
; 4180 |                 case GetAFilterSize:                                   
; 4182 |                         // filter size                                 
; 4183 |                         intp = (Uint16*) &conf_data.filter;            
; 4184 |                         buff[j++] = 0xff & *intp;                      
; 4185 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4186 |                         // filter window                               
; 4187 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4188 |                         for (i = 0; i < 2; i++) {                      
; 4189 |                                 buff[j++] = 0xff & *intp;              
; 4190 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4191 |                                 intp++;                                
; 4193 |                         bincmdresult = OK_SendResult;                  
; 4194 |                         break;                                         
; 4196 |                 case GetAutoId:                                        
; 4198 |                         buff[j++] = conf_data.tagiden;                 
; 4199 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4200 |                                 buff[j++] = autoid[i];                 
; 4202 |                         bincmdresult = OK_SendResult;                  
; 4203 |                         break;                                         
; 4205 |                 case GetDisplay:                                       
; 4207 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4208 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4209 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4210 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4212 |                         bincmdresult = OK_SendResult;                  
; 4213 |                         break;                                         
; 4215 |                 case GetDAC:                                           
; 4217 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4218 |                                 buff[j++] = conf_data.dac[i].what;     
; 4219 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4221 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4222 |                                 //{                                    
; 4223 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4224 |                                 //}                                    
; 4225 |                                 //else                                 
; 4226 |                                 //{                                    
; 4227 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4228 |                                 //}                                    
; 4229 |                                 for (k = 0; k < 2; k++) {              
; 4230 |                                         buff[j++] = 0xff & *intp;      
; 4231 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4232 |                                         intp++;                        
; 4234 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4235 |                                 //{                                    
; 4236 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4237 |                                 //}                                    
; 4238 |                                 //else                                 
; 4239 |                                 //{                                    
; 4240 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4241 |                                 //}                                    
; 4242 |                                 for (k = 0; k < 2; k++) {              
; 4243 |                                         buff[j++] = 0xff & *intp;      
; 4244 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4245 |                                         intp++;                        
; 4247 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4248 |                                 for (k = 0; k < 2; k++) {              
; 4249 |                                         buff[j++] = 0xff & *intp;      
; 4250 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4251 |                                         intp++;                        
; 4253 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4254 |                                 for (k = 0; k < 2; k++) {              
; 4255 |                                         buff[j++] = 0xff & *intp;      
; 4256 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4257 |                                         intp++;                        
; 4259 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4260 |                                 for (k = 0; k < 2; k++) {              
; 4261 |                                         buff[j++] = 0xff & *intp;      
; 4262 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4263 |                                         intp++;                        
; 4266 |                         bincmdresult = OK_SendResult;                  
; 4267 |                         break;                                         
; 4269 |                 case GetLIMIT:                                         
; 4271 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4272 |                                 buff[j++] = conf_data.lim[i].what;     
; 4273 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4274 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4276 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4277 |                                 for (k = 0; k < 2; k++) {              
; 4278 |                                         buff[j++] = 0xff & *intp;      
; 4279 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4280 |                                         intp++;                        
; 4282 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4283 |                                 for (k = 0; k < 2; k++) {              
; 4284 |                                         buff[j++] = 0xff & *intp;      
; 4285 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4286 |                                         intp++;                        
; 4289 |                         bincmdresult = OK_SendResult;                  
; 4290 |                         break;                                         
; 4292 |                 case GetLIMITStatus:                                   
; 4294 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4295 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4297 |                         bincmdresult = OK_SendResult;                  
; 4298 |                         break;                                         
; 4300 |                         // Heat Cal commands.                          
; 4301 |                 case GetTCLoadA:                                       
; 4302 |                 case GetTCLoadB:                                       
; 4303 |                 case GetTCLoadC:                                       
; 4304 |                 case GetTCLoadD:                                       
; 4306 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4307 |                         intp = (Uint16*) &temp16;                      
; 4308 |                         buff[j++] = 0xff & *intp;                      
; 4309 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4311 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4312 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4313 |                         intp = (Uint16*) &templg;                      
; 4314 |                         for (i = 0; i < 2; i++) {                      
; 4315 |                                 buff[j++] = 0xff & *intp;              
; 4316 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4317 |                                 intp++;                                
; 4319 |                         bincmdresult = OK_SendResult;                  
; 4320 |                         break;                                         
; 4322 |                 case GetTCTemp:                                        
; 4324 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4325 |                         intp = (Uint16*) &temp16;                      
; 4326 |                         buff[j++] = 0xff & *intp;                      
; 4327 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4328 |                         bincmdresult = OK_SendResult;                  
; 4329 |                         break;                                         
; 4331 |                 case GetTCStatus:                                      
; 4333 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4334 |                         for (i = 0; i < 2; i++) {                      
; 4335 |                                 buff[j++] = 0xff & *intp;              
; 4336 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4337 |                                 intp++;                                
; 4340 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4341 |                                 temp16 = 0x80;                         
; 4342 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4343 |                                         temp16 |= 0x01;                
; 4345 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4346 |                                         temp16 |= 0x02;                
; 4348 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4349 |                                         temp16 |= 0x04;                
; 4351 |                                 buff[j++] = 0xff & temp16;             
; 4353 |                         bincmdresult = OK_SendResult;                  
; 4354 |                         break;                                         
; 4356 |                 case GetTCParam:                                       
; 4358 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4359 |                                 bincmdresult = Error_Invalid;          
; 4360 |                                 break;                                 
; 4363 |                         ch = cmdbuff[2];                               
; 4364 |                         buff[j++] = ch;                                
; 4366 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4367 |                         for (k = 0; k < 2; k++) {                      
; 4368 |                                 buff[j++] = 0xff & *intp;              
; 4369 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4370 |                                 intp++;                                
; 4372 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4373 |                         for (k = 0; k < 2; k++) {                      
; 4374 |                                 buff[j++] = 0xff & *intp;              
; 4375 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4376 |                                 intp++;                                
; 4378 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4379 |                         for (k = 0; k < 2; k++) {                      
; 4380 |                                 buff[j++] = 0xff & *intp;              
; 4381 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4382 |                                 intp++;                                
; 4384 |                         bincmdresult = OK_SendResult;                  
; 4385 |                         break;                                         
; 4387 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4388 | #if 1                                                                  
; 4389 |                 case Open_SSR_IN1:                                     
; 4390 |                         ssr_set(0, SSR_OPEN);                          
; 4391 |                         break;                                         
; 4393 |                 case Close_SSR_IN1:                                    
; 4394 |                         ssr_set(0, SSR_CLOSE);                         
; 4395 |                         break;                                         
; 4396 | #endif                                                                 
; 4398 |                 case SetTCParam:                                       
; 4400 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4401 |                                 bincmdresult = Error_Invalid;          
; 4402 |                                 break;                                 
; 4405 |                         ch = cmdbuff[2];                               
; 4406 |                         buff[j++] = ch;                                
; 4408 |                         k = 3;                                         
; 4409 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4410 |                         for (i = 0; i < 2; i++) {                      
; 4411 |                                 *intp = cmdbuff[k++];                  
; 4412 |                                 *intp += cmdbuff[k++] << 8;            
; 4413 |                                 intp++;                                
; 4415 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4416 |                         for (i = 0; i < 2; i++) {                      
; 4417 |                                 *intp = cmdbuff[k++];                  
; 4418 |                                 *intp += cmdbuff[k++] << 8;            
; 4419 |                                 intp++;                                
; 4421 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4422 |                         for (i = 0; i < 2; i++) {                      
; 4423 |                                 *intp = cmdbuff[k++];                  
; 4424 |                                 *intp += cmdbuff[k++] << 8;            
; 4425 |                                 intp++;                                
; 4428 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4429 |                         for (k = 0; k < 2; k++) {                      
; 4430 |                                 buff[j++] = 0xff & *intp;              
; 4431 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4432 |                                 intp++;                                
; 4434 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4435 |                         for (k = 0; k < 2; k++) {                      
; 4436 |                                 buff[j++] = 0xff & *intp;              
; 4437 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4438 |                                 intp++;                                
; 4440 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4441 |                         for (k = 0; k < 2; k++) {                      
; 4442 |                                 buff[j++] = 0xff & *intp;              
; 4443 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4444 |                                 intp++;                                
; 4446 |                         unsaved = 1;                                   
; 4447 |                         bincmdresult = OK_SendResult;                  
; 4448 |                         break;                                         
; 4450 |                 case SetBCalParam:                                     
; 4452 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4453 |                                         || cmdbuff[3] != 2) {          
; 4454 |                                 bincmdresult = Error_Invalid;          
; 4455 |                                 break;                                 
; 4458 |                         ch = cmdbuff[2];                               
; 4459 |                         buff[j++] = ch;                                
; 4460 |                         buff[j] = cmdbuff[j++];                        
; 4462 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4463 |                                 intp = (Uint16*) &volt[k];             
; 4464 |                                 for (i = 0; i < 2; i++) {              
; 4465 |                                         *intp = cmdbuff[j];            
; 4466 |                                         buff[j++] = 0xff & *intp;      
; 4467 |                                         *intp += cmdbuff[j] << 8;      
; 4468 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4469 |                                         intp++;                        
; 4472 |                         bincmdresult = OK_SendResult;                  
; 4473 |                         break;                                         
; 4475 |                 case StartBCRead:                                      
; 4477 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4478 |                                         || cmdbuff[3] >= 2) {          
; 4479 |                                 bincmdresult = Error_Invalid;          
; 4480 |                                 break;                                 
; 4483 |                         k = cmdbuff[3];                                
; 4484 |                         intp = (Uint16*) &tempft;                      
; 4485 |                         for (i = 0; i < 2; i++) {                      
; 4486 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4487 |                                 intp++;                                
; 4489 |                         if (volt[k] != tempft) {                       
; 4490 |                                 bincmdresult = Error_Invalid;          
; 4491 |                                 break;                                 
; 4493 |                         lcd_clear();                                   
; 4494 |                         lcd_puts("Board Calibration...", 0);           
; 4495 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4496 |                         lcd_puts(buff, 20);                            
; 4497 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4498 |                         lcd_puts(buff, 40);                            
; 4499 |                         lcd_puts("Reading ... ", 60);                  
; 4501 |                         dsum[k] = 0;                                   
; 4502 |                         sampcnt = CAL_SAMPLES;                         
; 4503 |                         while (sampcnt--) {                            
; 4504 |                                 while (0 == ad7738_rawrdy()) {         
; 4505 |                                         delay_us(1);
;     |  // wait                                                               
; 4507 |                                 cntp = ad7738_getraw();                
; 4508 |                                 dsum[k] += cntp->adc[ch];              
; 4510 |                         if (1 == k) {                                  
; 4511 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4512 |                                                 / (dsum[1] - dsum[0]); 
; 4514 |                                 unsaved = 1;                           
; 4515 |                                 DINT;                                  
; 4516 |                                 ad7738_setcal();                       
; 4517 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4518 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4519 |                                 EINT;                                  
; 4521 |                         for (i = 0; i < cmdlen; i++) {                 
; 4522 |                                 buff[i] = cmdbuff[i];                  
; 4524 |                         j = cmdlen;                                    
; 4525 |                         bincmdresult = OK_SendResult;                  
; 4527 |                         lcd_clear();                                   
; 4528 |                         update_units();                                
; 4529 |                         break;                                         
; 4531 |                 case SetDCalParam:                                     
; 4533 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4534 |                                         || (0x07 | daccbm) != 0x07) {  
; 4535 |                                 bincmdresult = Error_Invalid;          
; 4536 |                                 break;                                 
; 4538 |                         ch = cmdbuff[2];                               
; 4539 |                         buff[j++] = ch;                                
; 4541 |                         for (k = 0; k < 3; k++) {                      
; 4542 |                                 intp = (Uint16*) &volt[k];             
; 4543 |                                 for (i = 0; i < 2; i++) {              
; 4544 |                                         *intp = cmdbuff[j];            
; 4545 |                                         buff[j++] = 0xff & *intp;      
; 4546 |                                         *intp += cmdbuff[j] << 8;      
; 4547 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4548 |                                         intp++;                        
; 4552 |                         // order: - o +                                
; 4553 |                         // do the calculations                         
; 4554 |                         conf_data.dac[ch].dslopen =                    
; 4555 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4556 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4557 |                         conf_data.dac[ch].dslopep =                    
; 4558 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4559 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4560 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4561 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4563 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4564 |                         daccbm = 0;                                    
; 4566 |                         unsaved = 1;                                   
; 4568 |                         DINT;                                          
; 4569 |                         ad7738_setcal();                               
; 4570 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4571 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4572 |                         EINT;                                          
; 4574 |                         bincmdresult = OK_SendResult;                  
; 4575 |                         break;                                         
; 4577 |                 case StartDCRead:                                      
; 4579 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4580 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4581 |                                 bincmdresult = Error_Invalid;          
; 4582 |                                 break;                                 
; 4585 |                         if (daccbm == 0) {                             
; 4586 |                                 ch = cmdbuff[2];                       
; 4587 |                         } else {                                       
; 4588 |                                 if (ch != cmdbuff[2]) {                
; 4589 |                                         bincmdresult = Error_Invalid;  
; 4590 |                                         break;                         
; 4593 |                         buff[j++] = ch;                                
; 4594 |                         k = cmdbuff[j];                                
; 4595 |                         buff[j++] = k;                                 
; 4597 |                         intp = (Uint16*) &volt[k];                     
; 4598 |                         for (i = 0; i < 2; i++) {                      
; 4599 |                                 *intp = cmdbuff[j];                    
; 4600 |                                 buff[j++] = 0xff & *intp;              
; 4601 |                                 *intp += cmdbuff[j] << 8;              
; 4602 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4603 |                                 intp++;                                
; 4605 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4606 |                                 bincmdresult = Error_Invalid;          
; 4607 |                                 break;                                 
; 4610 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4611 |                         if (dsum[0] <= 0) {                            
; 4612 |                                 dacc[k] = 0;                           
; 4613 |                         } else if (dsum[0] >= 0xffff) {                
; 4614 |                                 dacc[k] = 0xffff;                      
; 4615 |                         } else {                                       
; 4616 |                                 dacc[k] = (Uint16) dsum[0];            
; 4619 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4621 |                         mcbsp_xmit(dacc[k], ch);                       
; 4622 |                         latch_dac();                                   
; 4624 |                         daccbm |= (0x1 << k);                          
; 4626 |                         bincmdresult = OK_SendResult;                  
; 4627 |                         break;                                         
; 4629 |                 case SetSensorCalPa:                                   
; 4631 |                         if (cmdlen < 20) {                             
; 4632 |                                 bincmdresult = Error_Invalid;          
; 4633 |                                 break;                                 
; 4635 |                         k = 2;                                         
; 4636 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4637 |                         ss = cmdbuff[k++];              // sensor index
; 4638 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4639 |                                 bincmdresult = Error_Invalid;          
; 4640 |                                 break;                                 
; 4643 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4644 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4645 |                                 bincmdresult = Error_Invalid;          
; 4646 |                                 break;                                 
; 4648 |                         for (i = 0; i < tempint; i++) {                
; 4649 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4651 |                         tsensor.ssn[i] = '\0';                         
; 4653 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4654 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4655 |                                 bincmdresult = Error_Invalid;          
; 4656 |                                 break;                                 
; 4658 |                         for (i = 0; i < tempint; i++) {                
; 4659 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4661 |                         tsensor.slbl[i] = '\0';                        
; 4663 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4665 |                         intp = (Uint16*) &tsensor.date; // date        
; 4666 |                         for (i = 0; i < 2; i++) {                      
; 4667 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4668 |                                 k += 2;                                
; 4669 |                                 intp++;                                
; 4672 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4673 |                         for (i = 0; i < 2; i++) {                      
; 4674 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4675 |                                 k += 2;                                
; 4676 |                                 intp++;                                
; 4678 |                         tsensor.base = tsensor.range;                  
; 4680 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4681 |                         switch (tsensor.unit) {                        
; 4682 |                         case 0:                                 // lb  
; 4683 |                         case 1:                                 // kg  
; 4684 |                                 tsensor.unit |= UNIT_WT;               
; 4685 |                                 break;                                 
; 4686 |                         case 2:                                 // in  
; 4687 |                         case 3:                                 // cm  
; 4688 |                         case 4:                                 // mm  
; 4689 |                                 tsensor.unit |= UNIT_LT;               
; 4690 |                                 break;                                 
; 4691 |                         case 5:                                 // ps  
; 4692 |                                 tsensor.unit |= UNIT_PR;               
; 4693 |                                 break;                                 
; 4694 |                         case 6:                                 // nm  
; 4695 |                                 tsensor.unit |= UNIT_TQ;               
; 4696 |                                 break;                                 
; 4697 |                         case 7:                                        
; 4698 |                         case 8:                                        
; 4699 |                         case 15:                                       
; 4700 |                                 tsensor.unit |= 0xf0;                  
; 4701 |                                 break;                                 
; 4702 |                         default:                                       
; 4703 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4704 |                                 break;                                 
; 4706 |                         tsensor.ounit = tsensor.unit;                  
; 4707 |                         tsensor.ufactor = 1;                           
; 4709 |                         switch (tsensor.method) {                      
; 4710 |                         case MD_RUN_MVV:                               
; 4712 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4713 |                                 for (i = 0; i < 2; i++) {              
; 4714 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4715 |                                         k += 2;                        
; 4716 |                                         intp++;                        
; 4718 |                                 if (tsensor.slope[0] == 0) {           
; 4719 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4721 |                                 tsensor.points = 1;                    
; 4722 |                                 break;                                 
; 4724 |                         case MD_RUN_MAS:                               
; 4726 |                                 tsensor.points = cmdbuff[k++];         
; 4727 |                                 if (tsensor.points > PNT_MAX) {        
; 4728 |                                         tsensor.method = MD_UNCALED;   
; 4729 |                                         break;                         
; 4732 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4733 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4734 |                                         for (i = 0; i < 2; i++) {      
; 4735 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4736 |                                                 k += 2;                
; 4737 |                                                 intp++;                
; 4740 |                                 break;                                 
; 4742 |                         case MD_RUN_SHT:                               
; 4744 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4745 |                                 for (i = 0; i < 2; i++) {              
; 4746 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4747 |                                         k += 2;                        
; 4748 |                                         intp++;                        
; 4750 |                                 if (scale == 0) {                      
; 4751 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4753 |                                 tsensor.points = 1;                    
; 4754 |                                 break;                                 
; 4756 |                         default:                                       
; 4758 |                                 tsensor.method = MD_UNCALED;           
; 4759 |                                 break;                                 
; 4762 |                         if (tsensor.method == MD_UNCALED) {            
; 4763 |                                 bincmdresult = Error_Invalid;          
; 4764 |                                 break;                                 
; 4766 |                         tsensor.tare = 0;                              
; 4767 |                         tsensor.dacgain = 1;                           
; 4768 |                         tsensor.dacoff = 0;                            
; 4769 |                         tsensor.ch = ch;                               
; 4771 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4772 |                                 buff[j] = cmdbuff[j++];                
; 4774 |                         bincmdresult = OK_SendResult;                  
; 4775 |                         break;                                         
; 4777 |                 case StartSCRead:                                      
; 4779 |                         if (cmdlen < 5) {                              
; 4780 |                                 bincmdresult = Error_Invalid;          
; 4781 |                                 break;                                 
; 4783 |                         k = 2;                                         
; 4784 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4785 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4786 |                                 bincmdresult = Error_Invalid;          
; 4787 |                                 break;                                 
; 4790 |                         lcd_clear();                                   
; 4791 |                         lcd_puts("Sensor Calibration..", 0);           
; 4792 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4793 |                         lcd_puts(buff, 20);                            
; 4794 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4795 |                         lcd_puts(buff, 40);                            
; 4797 |                         switch (tsensor.method) {                      
; 4799 |                         case MD_RUN_MVV:                               
; 4801 |                                 lcd_puts("Reading zero point...", 60); 
; 4803 |                                 dsum[0] = 0;                           
; 4804 |                                 sampcnt = CAL_SAMPLES;                 
; 4805 |                                 while (sampcnt--) {                    
; 4806 |                                         while (0 == ad7738_rawrdy()) { 
; 4807 |                                                 delay_us(1);
;     |          // wait                                                       
; 4810 |                                         cntp = ad7738_getraw();        
; 4811 |                                         dsum[0] += cntp->adc[ch];      
; 4813 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4814 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4816 |                                 bincmdresult = OK_SendResult;          
; 4817 |                                 break;                                 
; 4819 |                         case MD_RUN_MAS:                               
; 4821 |                                 pt = cmdbuff[k++];                     
; 4822 |                                 intp = (Uint16*) &scale;               
; 4823 |                                 for (i = 0; i < 2; i++) {              
; 4824 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4825 |                                         k += 2;                        
; 4826 |                                         intp++;                        
; 4828 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4829 |                                         bincmdresult = Error_Invalid;  
; 4830 |                                         break;                         
; 4832 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4833 |                                 lcd_puts(buff, 60);                    
; 4835 |                                 dsum[0] = 0;                           
; 4836 |                                 sampcnt = CAL_SAMPLES;                 
; 4837 |                                 while (sampcnt--) {                    
; 4838 |                                         while (0 == ad7738_rawrdy()) { 
; 4839 |                                                 delay_us(1);
;     |          // wait                                                       
; 4842 |                                         cntp = ad7738_getraw();        
; 4843 |                                         dsum[0] += cntp->adc[ch];      
; 4845 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4847 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4849 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4850 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4851 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4852 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4853 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4854 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4855 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4856 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4857 | 
;     |          * tsensor.adc[k];                                             
; 4861 |                                 bincmdresult = OK_SendResult;          
; 4862 |                                 break;                                 
; 4864 |                         case MD_RUN_SHT:                               
; 4866 |                                 lcd_puts("Reading zero point...", 60); 
; 4868 |                                 for (k = 0; k < 2; k++) {              
; 4869 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4871 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4872 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4873 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4875 |                                                 DINT;                  
; 4876 |                                                 maf_rst();             
; 4877 |                                                 EINT;                  
; 4878 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4881 |                                         dsum[k] = 0;                   
; 4882 |                                         sampcnt = CAL_SAMPLES;         
; 4883 |                                         while (sampcnt--) {            
; 4884 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4885 |                                                         delay_us(1);
;     |                  // wait                                               
; 4888 |                                                 cntp = ad7738_getraw();
; 4889 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4893 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4894 |                                 DINT;                                  
; 4895 |                                 maf_rst();                             
; 4896 |                                 EINT;                                  
; 4898 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4899 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4900 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4901 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4903 |                                 bincmdresult = OK_SendResult;          
; 4904 |                                 break;                                 
; 4906 |                         default:                                       
; 4908 |                                 bincmdresult = Error_Invalid;          
; 4909 |                                 break;                                 
; 4911 |                         lcd_clear();                                   
; 4912 |                         update_units();                                
; 4914 |                         if (bincmdresult != OK_SendResult) {           
; 4915 |                                 break;                                 
; 4917 |                         for (i = 0; i < cmdlen; i++) {                 
; 4918 |                                 buff[i] = cmdbuff[i];                  
; 4920 |                         j = cmdlen;                                    
; 4921 |                         break;                                         
; 4923 |                 case StartSCShuntRd:                                   
; 4925 |                         if (cmdlen < 5) {                              
; 4926 |                                 bincmdresult = Error_Invalid;          
; 4927 |                                 break;                                 
; 4929 |                         k = 2;                                         
; 4930 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4931 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4932 |                                 bincmdresult = Error_Invalid;          
; 4933 |                                 break;                                 
; 4936 |                         lcd_clear();                                   
; 4937 |                         lcd_puts("Sensor Calibration..", 0);           
; 4938 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4939 |                         lcd_puts(buff, 20);                            
; 4940 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4941 |                         lcd_puts(buff, 40);                            
; 4942 |                         lcd_puts("Reading shunt value...", 60);        
; 4944 |                         for (k = 0; k < 2; k++) {                      
; 4945 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4947 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4948 |                                         for (i = 0; i < 50; i++) {     
; 4949 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4951 |                                         DINT;                          
; 4952 |                                         maf_rst();                     
; 4953 |                                         EINT;                          
; 4954 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4957 |                                 dsum[k] = 0;                           
; 4958 |                                 sampcnt = CAL_SAMPLES;                 
; 4959 |                                 while (sampcnt--) {                    
; 4960 |                                         while (0 == ad7738_rawrdy()) { 
; 4961 |                                                 delay_us(1);
;     |          // wait                                                       
; 4964 |                                         cntp = ad7738_getraw();        
; 4965 |                                         dsum[k] += cntp->adc[ch];      
; 4967 |                                 dsum[k] /= CAL_SAMPLES;                
; 4969 |                                 pt = 0;                                
; 4970 |                                 if (tsensor.points > 2) {              
; 4971 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4972 |                                                 pt++;                  
; 4975 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4976 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4979 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4980 |                         DINT;                                          
; 4981 |                         maf_rst();                                     
; 4982 |                         EINT;                                          
; 4984 |                         tsensor.shunt = volt[1] - volt[0];             
; 4986 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4988 |                         DINT;                                          
; 4989 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4990 |                                         sizeof(sconf_t));              
; 4992 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4994 |                         ad7738_setcal();                               
; 4995 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4996 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4997 |                         EINT;                                          
; 4999 |                         unsaved = 1;                                   
; 5001 |                         lcd_clear();                                   
; 5002 |                         update_units();                                
; 5004 |                         for (i = 0; i < cmdlen; i++) {                 
; 5005 |                                 buff[i] = cmdbuff[i];                  
; 5007 |                         j = cmdlen;                                    
; 5008 |                         bincmdresult = OK_SendResult;                  
; 5009 |                         break;                                         
; 5011 |                 case SetSensorName:                                    
; 5013 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 5014 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 5015 |                                 bincmdresult = Error_Invalid;          
; 5016 |                                 break;                                 
; 5018 |                         ss = cmdbuff[2];                               
; 5019 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5021 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 5022 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 5023 |                         for (i = 0; i < slen; i++) {                   
; 5024 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 5026 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 5027 |                         unsaved = 1;                                   
; 5029 |                         // sensor name/label                           
; 5030 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 5031 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5032 |                         for (i = 0; i < slen; i++) {                   
; 5033 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5036 |                         bincmdresult = OK_SendResult;                  
; 5037 |                         break;                                         
; 5039 |                 case SetSensorOUnit:                                   
; 5041 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5042 |                                 bincmdresult = Error_Invalid;          
; 5043 |                                 break;                                 
; 5046 |                         ss = cmdbuff[2];                               
; 5047 |                         pt = cmdbuff[3];                               
; 5049 |                         if (pt != UNIT_PC                              
; 5050 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5051 |                                 bincmdresult = Error_Invalid;          
; 5052 |                                 break;                                 
; 5055 |                         conf_data.sensor[ss].ounit = pt;               
; 5056 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5057 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5059 |                         if (pt == UNIT_PC) {                           
; 5060 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5061 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5062 |                         } else if (conf_data.sensor[ss].ounit          
; 5063 |                                         == conf_data.sensor[ss].unit) {
; 5064 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5065 |                         } else {                                       
; 5066 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5067 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5069 |                                         if (pt == UNIT_KG) {           
; 5070 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5072 |                                         break;                         
; 5074 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5076 |                                         if (pt == UNIT_LB) {           
; 5077 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5079 |                                         break;                         
; 5081 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5083 |                                         switch (pt) {                  
; 5084 |                                         case UNIT_CM:                  
; 5085 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5086 |                                                 break;                 
; 5087 |                                         case UNIT_MM:                  
; 5088 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5089 |                                                 break;                 
; 5091 |                                         break;                         
; 5093 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5095 |                                         switch (pt) {                  
; 5096 |                                         case UNIT_IN:                  
; 5097 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5098 |                                                 break;                 
; 5099 |                                         case UNIT_MM:                  
; 5100 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5101 |                                                 break;                 
; 5103 |                                         break;                         
; 5105 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5107 |                                         switch (pt) {                  
; 5108 |                                         case UNIT_IN:                  
; 5109 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5110 |                                                 break;                 
; 5111 |                                         case UNIT_CM:                  
; 5112 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5113 |                                                 break;                 
; 5115 |                                         break;                         
; 5117 |                                 default:                               
; 5119 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5120 |                                         break;                         
; 5124 |                         unsaved = 1;                                   
; 5126 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5127 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5128 |                                         update_units();                
; 5129 |                                         DINT;                          
; 5130 |                                         ad7738_setcal();               
; 5131 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5132 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5133 |                                         EINT;                          
; 5137 |                         bincmdresult = OK_SendResult;                  
; 5138 |                         break;                                         
; 5140 |                 case SetSensorBase:                                    
; 5142 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5143 |                                 bincmdresult = Error_Invalid;          
; 5144 |                                 break;                                 
; 5146 |                         ss = cmdbuff[2];                               
; 5147 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5149 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5150 |                         for (i = 0; i < 2; i++) {                      
; 5151 |                                 *intp = cmdbuff[j];                    
; 5152 |                                 buff[j++] = 0xff & *intp;              
; 5153 |                                 *intp += cmdbuff[j] << 8;              
; 5154 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5155 |                                 intp++;                                
; 5157 |                         unsaved = 1;                                   
; 5159 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5160 |                                 // output unit is percent              
; 5161 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5162 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5164 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5165 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5166 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5167 |                                                 DINT;                  
; 5168 |                                                 ad7738_setcal();       
; 5169 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5170 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5171 |                                                 EINT;                  
; 5176 |                         bincmdresult = OK_SendResult;                  
; 5177 |                         break;                                         
; 5179 |                 case SetQEPChannels:                                   
; 5181 |                         if (cmdlen < 6) {                              
; 5182 |                                 bincmdresult = Error_Invalid;          
; 5183 |                                 break;                                 
; 5186 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5187 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5188 |                                 for (i = 0; i < 2; i++) {              
; 5189 |                                         *intp = cmdbuff[j];            
; 5190 |                                         buff[j++] = 0xff & *intp;      
; 5191 |                                         *intp += cmdbuff[j] << 8;      
; 5192 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5193 |                                         intp++;                        
; 5197 |                         conf_data.velfilter = cmdbuff[j];              
; 5198 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5199 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5200 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5202 |                         unsaved = 1;                                   
; 5204 |                         DINT;                                          
; 5205 |                         ad7738_setcal();                               
; 5206 |                         velf_rst();                                    
; 5207 |                         EINT;                                          
; 5209 |                         bincmdresult = OK_SendResult;                  
; 5210 |                         break;                                         
; 5212 |                         //case SetEnCntperin: // not needed            
; 5213 |                         //break;                                       
; 5215 |                 case SetCurSensor:                                     
; 5217 |                         if (cmdlen < 4||                               
; 5218 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5219 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5220 |                                 bincmdresult = Error_Invalid;          
; 5221 |                                 break;                                 
; 5224 |                         ch = cmdbuff[2];                               
; 5225 |                         ss = cmdbuff[3];                               
; 5227 |                         if (autoid[ch]) {                              
; 5228 |                                 bincmdresult = Error_Exe;              
; 5229 |                                 break;                                 
; 5232 |                         DINT;                                          
; 5233 |                         conf_data.ch[ch].ci = ss;                      
; 5234 |                         ad7738_setcal();                               
; 5236 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5237 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5238 |                         EINT;                                          
; 5240 |                         update_units();                                
; 5241 |                         unsaved = 1;                                   
; 5243 |                         buff[j++] = ch;                                
; 5244 |                         buff[j++] = ss;                                
; 5245 |                         bincmdresult = OK_SendResult;                  
; 5246 |                         break;                                         
; 5248 |                 case SetAFilterSize:                                   
; 5250 |                         if (cmdlen < 4) {                              
; 5251 |                                 bincmdresult = Error_Invalid;          
; 5252 |                                 break;                                 
; 5255 |                         // filter length                               
; 5256 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5257 |                         if (temp16 > MAF_MAX) {                        
; 5258 |                                 bincmdresult = Error_Invalid;          
; 5259 |                                 break;                                 
; 5262 |                         // filter diff window                          
; 5263 |                         intp = (Uint16*) &tempft;                      
; 5264 |                         for (i = 0; i < 2; i++) {                      
; 5265 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5266 |                                 intp++;                                
; 5269 |                         DINT;                                          
; 5270 |                         conf_data.filter = temp16;                     
; 5271 |                         conf_data.diffwin = tempft;                    
; 5272 |                         maf_rst();                                     
; 5273 |                         EINT;                                          
; 5275 |                         unsaved = 1;                                   
; 5277 |                         buff[j++] = 0xff & temp16;                     
; 5278 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5280 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5281 |                         buff[j++] = 0xff & intp[0];                    
; 5282 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5283 |                         buff[j++] = 0xff & intp[1];                    
; 5284 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5286 |                         bincmdresult = OK_SendResult;                  
; 5287 |                         break;                                         
; 5289 |                 case SetAutoId:                                        
; 5291 |                         if (cmdlen < 3) {                              
; 5292 |                                 bincmdresult = Error_Invalid;          
; 5293 |                                 break;                                 
; 5296 |                         conf_data.tagiden = cmdbuff[2];                
; 5297 |                         if (!conf_data.tagiden) {                      
; 5298 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5299 |                                         tagwasthere[i] = 0;            
; 5300 |                                         autoid[i] = 0;                 
; 5302 |                                 update_units();                        
; 5304 |                         unsaved = 1;                                   
; 5306 |                         buff[j] = cmdbuff[j++];                        
; 5307 |                         bincmdresult = OK_SendResult;                  
; 5308 |                         break;                                         
; 5310 |                 case SetDisplayLine:                                   
; 5312 |                         if (cmdlen < 14) {                             
; 5313 |                                 bincmdresult = Error_Invalid;          
; 5314 |                                 break;                                 
; 5317 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5318 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5319 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5320 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5321 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5322 |                                         || cmdbuff[13] > 5) {          
; 5323 |                                 bincmdresult = Error_Invalid;          
; 5324 |                                 break;                                 
; 5327 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5328 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5329 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5330 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5331 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5332 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5333 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5335 |                         unsaved = 1;                                   
; 5337 |                         lcd_clear();                                   
; 5338 |                         update_units();                                
; 5339 |                         bincmdresult = OK_SendResult;                  
; 5340 |                         break;                                         
; 5342 |                 case SetDACCh:                                         
; 5344 |                         if (cmdlen < 42) {                             
; 5345 |                                 bincmdresult = Error_Invalid;          
; 5346 |                                 break;                                 
; 5349 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5350 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5351 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5352 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5353 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5354 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5355 |                                 bincmdresult = Error_Invalid;          
; 5356 |                                 break;                                 
; 5359 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5360 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5361 |                                 buff[j++] = conf_data.dac[i].what;     
; 5362 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5363 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5365 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5366 |                                 //{                                    
; 5367 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5368 |                                 //}                                    
; 5369 |                                 //else                                 
; 5370 |                                 //{                                    
; 5371 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5372 |                                 //}                                    
; 5373 |                                 for (k = 0; k < 2; k++) {              
; 5374 |                                         *intp = cmdbuff[j];            
; 5375 |                                         buff[j++] = 0xff & *intp;      
; 5376 |                                         *intp += cmdbuff[j] << 8;      
; 5377 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5378 |                                         intp++;                        
; 5381 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5382 |                                 //{                                    
; 5383 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5384 |                                 //}                                    
; 5385 |                                 //else                                 
; 5386 |                                 //{                                    
; 5387 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5388 |                                 //}                                    
; 5389 |                                 for (k = 0; k < 2; k++) {              
; 5390 |                                         *intp = cmdbuff[j];            
; 5391 |                                         buff[j++] = 0xff & *intp;      
; 5392 |                                         *intp += cmdbuff[j] << 8;      
; 5393 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5394 |                                         intp++;                        
; 5397 |                         unsaved = 1;                                   
; 5399 |                         DINT;                                          
; 5400 |                         ad7738_setcal();                               
; 5401 |                         EINT;                                          
; 5402 |                         bincmdresult = OK_SendResult;                  
; 5403 |                         break;                                         
; 5405 |                 case SetLIMITCh:                                       
; 5407 |                         if (cmdlen < 46) {                             
; 5408 |                                 bincmdresult = Error_Invalid;          
; 5409 |                                 break;                                 
; 5412 |                         if (cmdbuff[2]                                 
; 5413 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5414 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5415 |                                 bincmdresult = Error_Invalid;          
; 5416 |                                 break;                                 
; 5419 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5420 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5421 |                                 buff[j++] = conf_data.lim[i].what;     
; 5422 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5423 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5424 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5425 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5427 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5428 |                                 for (k = 0; k < 2; k++) {              
; 5429 |                                         *intp = cmdbuff[j];            
; 5430 |                                         buff[j++] = 0xff & *intp;      
; 5431 |                                         *intp += cmdbuff[j] << 8;      
; 5432 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5433 |                                         intp++;                        
; 5435 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5436 |                                 for (k = 0; k < 2; k++) {              
; 5437 |                                         *intp = cmdbuff[j];            
; 5438 |                                         buff[j++] = 0xff & *intp;      
; 5439 |                                         *intp += cmdbuff[j] << 8;      
; 5440 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5441 |                                         intp++;                        
; 5444 |                         unsaved = 1;                                   
; 5446 |                         DINT;                                          
; 5447 |                         ad7738_setcal();                               
; 5448 |                         EINT;                                          
; 5450 |                         bincmdresult = OK_SendResult;                  
; 5451 |                         break;                                         
; 5453 |                 case Tare:                                             
; 5455 |                         if (cmdlen < 3) {                              
; 5456 |                                 //bincmdresult = Error_Invalid;        
; 5457 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5458 |                                 ad7738_resetpeak(0xff);                
; 5459 |                                 ad7738_resetvall(0xff);                
; 5460 |                                 unsaved = 1;                           
; 5462 |                                 buff[j++] = 0xff;                      
; 5463 |                                 bincmdresult = OK_SendResult;          
; 5464 |                                 break;                                 
; 5467 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5468 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5469 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5470 |                         unsaved = 1;                                   
; 5472 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5473 |                         bincmdresult = OK_SendResult;                  
; 5474 |                         break;                                         
; 5476 |                 case ResetPkVly:                                       
; 5478 |                         if (cmdlen < 3) {                              
; 5479 |                                 bincmdresult = Error_Invalid;          
; 5480 |                                 break;                                 
; 5483 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5484 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5485 |                         unsaved = 1;                                   
; 5487 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5488 |                         bincmdresult = OK_SendResult;                  
; 5489 |                         break;                                         
; 5491 |                 case ResetPk:                                          
; 5493 |                         if (cmdlen < 3) {                              
; 5494 |                                 bincmdresult = Error_Invalid;          
; 5495 |                                 break;                                 
; 5498 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5499 |                         unsaved = 1;                                   
; 5501 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5502 |                         bincmdresult = OK_SendResult;                  
; 5503 |                         break;                                         
; 5505 |                 case ResetVly:                                         
; 5507 |                         if (cmdlen < 3) {                              
; 5508 |                                 bincmdresult = Error_Invalid;          
; 5509 |                                 break;                                 
; 5512 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5513 |                         unsaved = 1;                                   
; 5515 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5516 |                         bincmdresult = OK_SendResult;                  
; 5517 |                         break;                                         
; 5519 |                 case ResetLIMIT:                                       
; 5521 |                         if (cmdlen < 3) {                              
; 5522 |                                 bincmdresult = Error_Invalid;          
; 5523 |                                 break;                                 
; 5526 |                         k = 0x01;                                      
; 5527 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5528 |                                 if (k & cmdbuff[2]) {                  
; 5529 |                                         ad7738_resetlimit(i);          
; 5531 |                                 k <<= 1;                               
; 5533 |                         unsaved = 1;                                   
; 5535 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5536 |                         bincmdresult = OK_SendResult;                  
; 5537 |                         break;                                         
; 5539 |                 case ResetPosition:                                    
; 5541 |                         if (cmdlen < 3) {                              
; 5542 |                                 bincmdresult = Error_Invalid;          
; 5543 |                                 break;                                 
; 5546 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5547 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5548 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5549 |                         unsaved = 1;                                   
; 5551 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5552 |                         bincmdresult = OK_SendResult;                  
; 5553 |                         break;                                         
; 5555 |                 case SetShuntSwitch:                                   
; 5557 |                         if (cmdlen < 3) {                              
; 5558 |                                 bincmdresult = Error_Invalid;          
; 5559 |                                 break;                                 
; 5562 |                         shunt_switch(cmdbuff[2]);                      
; 5563 |                         unsaved = 1;                                   
; 5565 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5566 |                         bincmdresult = OK_SendResult;                  
; 5567 |                         break;                                         
; 5569 |                 case SetDirectVolt:                                    
; 5571 |                         if (cmdlen < 7) {                              
; 5572 |                                 bincmdresult = Error_Invalid;          
; 5573 |                                 break;                                 
; 5576 |                         ss = cmdbuff[j];                               
; 5577 |                         buff[j++] = ss;                                
; 5579 |                         intp = (Uint16*) &volt[0];                     
; 5580 |                         for (k = 0; k < 2; k++) {                      
; 5581 |                                 *intp = cmdbuff[j];                    
; 5582 |                                 buff[j++] = 0xff & *intp;              
; 5583 |                                 *intp += cmdbuff[j] << 8;              
; 5584 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5585 |                                 intp++;                                
; 5588 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5589 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5590 |                                 bincmdresult = Error_Invalid;          
; 5591 |                                 break;                                 
; 5594 |                         if (volt[0] < 0) {                             
; 5595 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5596 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5597 |                         } else {                                       
; 5598 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5599 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5602 |                         if (dsum[0] <= 0) {                            
; 5603 |                                 dacc[0] = 0;                           
; 5604 |                         } else if (dsum[0] >= 0xffff) {                
; 5605 |                                 dacc[0] = 0xffff;                      
; 5606 |                         } else {                                       
; 5607 |                                 dacc[0] = (Uint16) dsum[0];            
; 5610 |                         mcbsp_xmit(dacc[0], ss);                       
; 5611 |                         latch_dac();                                   
; 5613 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5614 |                         buff[j++] = 0xff & dacc[0];                    
; 5615 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5617 |                         bincmdresult = OK_SendResult;                  
; 5618 |                         break;                                         
; 5620 |                 case GetAllFlash:                                      
; 5622 |                         break;                                         
; 5624 |                 case SetAllFlash:                                      
; 5626 |                         break;                                         
; 5628 |                 case FlashMemWrite:                                    
; 5630 |                         bincmdresult = OK_SendResult;                  
; 5631 |                         if (unsaved) {                                 
; 5632 |                                 // flash writing                       
; 5633 |                                 lcd_clear();                           
; 5634 |                                 lcd_puts("Flash writing...", 0);       
; 5636 |                                 for (i = 0; i < 50; i++) {             
; 5637 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5640 |                                 DINT;                                  
; 5641 |                                 flash_ret = conf_write();              
; 5642 |                                 EINT;                                  
; 5644 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5645 |                                         lcd_puts("Done", 16);          
; 5646 |                                         unsaved = 0;                   
; 5647 |                                 } else {                               
; 5648 |                                         lcd_puts("Fail", 16);          
; 5649 |                                         bincmdresult = Error_Exe;      
; 5652 |                                 for (i = 0; i < 50; i++) {             
; 5653 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5655 |                                 lcd_clear();                           
; 5656 |                                 update_units();                        
; 5658 |                         break;                                         
; 5660 |                 case FlashMemDefault:                                  
; 5662 |                         conf_default();                                
; 5664 |                         // flash writing                               
; 5665 |                         lcd_clear();                                   
; 5666 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5668 |                         for (i = 0; i < 50; i++) {                     
; 5669 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5672 |                         DINT;                                          
; 5673 |                         flash_ret = conf_write();                      
; 5674 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5675 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5676 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5677 |                         EINT;                                          
; 5679 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5680 |                                 lcd_puts("Done", 31);                  
; 5681 |                                 unsaved = 0;                           
; 5682 |                                 bincmdresult = OK_SendResult;          
; 5683 |                         } else {                                       
; 5684 |                                 lcd_puts("Fail", 31);                  
; 5685 |                                 bincmdresult = Error_Exe;              
; 5687 |                         for (i = 0; i < 50; i++) {                     
; 5688 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5690 |                         lcd_clear();                                   
; 5691 |                         update_units();                                
; 5693 |                         break;                                         
; 5695 |                 case FlashMemRead:                                     
; 5697 |                         // flash reading                               
; 5698 |                         conf_read();                                   
; 5700 |                         DINT;                                          
; 5701 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5702 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5703 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5704 |                         EINT;                                          
; 5706 |                         unsaved = 0;                                   
; 5707 |                         update_units();                                
; 5708 |                         bincmdresult = OK_SendResult;                  
; 5709 |                         break;                                         
; 5711 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |638| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |638| 
        ; call occurs [#_SPICANRead] ; [] |638| 
        MOVL      XAR0,#40              ; [CPU_] |638| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |638| 
        MOV       *-SP[40],AL           ; [CPU_] |638| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |592| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5713,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5713 | if (cmdlen < 6) {                                                      
; 5714 |         bincmdresult = Error_Invalid;                                  
; 5715 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5713| 
        B         $C$L320,LO            ; [CPU_] |5713| 
        ; branchcc occurs ; [] |5713| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5718,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5718 | ds_dn = cmdbuff[2];                                                    
; 5719 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5718| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5720 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5718,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5718| 
        ADDB      ACC,#2                ; [CPU_] |5718| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5718| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5721 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5718,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5718| 
        MOV       *-SP[52],AL           ; [CPU_] |5718| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5720| 
        ADDB      ACC,#4                ; [CPU_] |5720| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5722 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5722| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5720| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5720| 
        MOV       *-SP[51],AL           ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5724 | tempint = 0;                                                           
; 5725 | k = 0x01;                                                              
; 5726 | for (i = 0; i < 8; i++) {                                              
; 5727 |         if (ds_bm & k) {                                               
; 5728 |                 tempint++;                                             
; 5730 |         k <<= 1;                                                       
; 5733 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5734 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5735 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5736 | //                                      ds_en = 0;                     
; 5737 | //                                      bincmdresult = Error_Invalid;  
; 5738 | //                                      break;                         
; 5739 | //                              }                                      
; 5741 | ds_en = 1;                                                             
; 5742 | ds_stop = 0;                                                           
; 5743 | ds_sn = 0;                                                             
; 5745 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5746 | //                              ad7738_setlimitchgd();                 
; 5748 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5722| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5722| 
        MOV       *-SP[50],AL           ; [CPU_] |5722| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5749,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5749 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5749| 
	.dwpsn	file "../Source/prod.c",line 5741,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5741| 
	.dwpsn	file "../Source/prod.c",line 5742,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5742| 
	.dwpsn	file "../Source/prod.c",line 5743,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5743| 
	.dwpsn	file "../Source/prod.c",line 5750,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5750 | j++;                                                                   
; 5752 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5753,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5753 | break;                                                                 
; 5755 | case StopStream:                                                       
; 5757 | ds_stop = 1;                                                           
; 5758 | bincmdresult = OK_SendResult;                                          
; 5759 | break;                                                                 
; 5761 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5763 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5753| 
        ; branch occurs ; [] |5753| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4925,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4925| 
        B         $C$L320,LO            ; [CPU_] |4925| 
        ; branchcc occurs ; [] |4925| 
	.dwpsn	file "../Source/prod.c",line 4930,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4930| 
        MOVL      ACC,XAR4              ; [CPU_] |4930| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4930| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4930| 
        MOVL      XAR0,#66              ; [CPU_] |4930| 
        ADDB      ACC,#2                ; [CPU_] |4930| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4930| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4930| 
        CMPL      ACC,XAR6              ; [CPU_] |4930| 
        B         $C$L320,NEQ           ; [CPU_] |4930| 
        ; branchcc occurs ; [] |4930| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4930| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4930| 
        CMPL      ACC,XAR6              ; [CPU_] |4930| 
        B         $C$L320,NEQ           ; [CPU_] |4930| 
        ; branchcc occurs ; [] |4930| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4930| 
        MOVL      XAR0,#64              ; [CPU_] |4930| 
        MOVL      ACC,XAR5              ; [CPU_] |4930| 
        ADDB      ACC,#4                ; [CPU_] |4930| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4930| 
        MOVB      XAR0,#36              ; [CPU_] |4930| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4930| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4930| 
        B         $C$L320,NEQ           ; [CPU_] |4930| 
        ; branchcc occurs ; [] |4930| 
	.dwpsn	file "../Source/prod.c",line 4936,column 5,is_stmt,isa 0
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4936| 
        ; call occurs [#_lcd_clear] ; [] |4936| 
	.dwpsn	file "../Source/prod.c",line 4937,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4937| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4937| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4937| 
        ; call occurs [#_lcd_puts] ; [] |4937| 
	.dwpsn	file "../Source/prod.c",line 4938,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4938| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4938| 
        MOVL      XAR0,#44              ; [CPU_] |4938| 
        ADD       AL,*-SP[58]           ; [CPU_] |4938| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4938| 
        MOV       *-SP[3],AL            ; [CPU_] |4938| 
        MOVB      AL,#1                 ; [CPU_] |4938| 
        ADD       AL,*-SP[57]           ; [CPU_] |4938| 
        MOV       *-SP[4],AL            ; [CPU_] |4938| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4938| 
        MOVL      XAR4,XAR3             ; [CPU_] |4938| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_sprintf")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4938| 
        ; call occurs [#_sprintf] ; [] |4938| 
	.dwpsn	file "../Source/prod.c",line 4939,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4939| 
        MOVL      XAR4,XAR3             ; [CPU_] |4939| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4939| 
        ; call occurs [#_lcd_puts] ; [] |4939| 
	.dwpsn	file "../Source/prod.c",line 4940,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4940| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4940| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4940| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4940| 
        MOVL      XAR0,#58              ; [CPU_] |4940| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4940| 
        MOVB      XAR1,#36              ; [CPU_] |4940| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4940| 
        ADDL      ACC,XAR6              ; [CPU_] |4940| 
        MOVL      XAR4,ACC              ; [CPU_] |4940| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4940| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4940| 
        MOVL      XAR4,XAR3             ; [CPU_] |4940| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_sprintf")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4940| 
        ; call occurs [#_sprintf] ; [] |4940| 
	.dwpsn	file "../Source/prod.c",line 4941,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4941| 
        MOVL      XAR4,XAR3             ; [CPU_] |4941| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4941| 
        ; call occurs [#_lcd_puts] ; [] |4941| 
	.dwpsn	file "../Source/prod.c",line 4942,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4942| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4942| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4942| 
        ; call occurs [#_lcd_puts] ; [] |4942| 
        MOVL      XAR0,#78              ; [CPU_] |4942| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4942| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4942| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4944,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4944| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4944| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4945| 
        B         $C$L83,LEQ            ; [CPU_] |4945| 
        ; branchcc occurs ; [] |4945| 
	.dwpsn	file "../Source/prod.c",line 4947,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4947| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4947| 
        ; call occurs [#_shunt_switch] ; [] |4947| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4949,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4949| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_delay_us")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4949| 
        ; call occurs [#_delay_us] ; [] |4949| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4948,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4948| 
        MOVZ      AR0,AR6               ; [CPU_] |4948| 
        MOV       *-SP[48],AR6          ; [CPU_] |4948| 
        CMP       AR0,#-1               ; [CPU_] |4948| 
        B         $C$L82,NEQ            ; [CPU_] |4948| 
        ; branchcc occurs ; [] |4948| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4952,column 7,is_stmt,isa 0
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_maf_rst")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4952| 
        ; call occurs [#_maf_rst] ; [] |4952| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4954,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4954| 
        SPM       #0                    ; [CPU_] 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_delay_us")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4954| 
        ; call occurs [#_delay_us] ; [] |4954| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4957,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4957| 
	.dwpsn	file "../Source/prod.c",line 4958,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4958| 
	.dwpsn	file "../Source/prod.c",line 4957,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4957| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4957| 
	.dwpsn	file "../Source/prod.c",line 4959,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4959| 
	.dwpsn	file "../Source/prod.c",line 4958,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4958| 
	.dwpsn	file "../Source/prod.c",line 4959,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4959| 
        MOVB      ACC,#0                ; [CPU_] |4959| 
        SUBB      ACC,#1                ; [CPU_] |4959| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4959| 
        B         $C$L86,EQ             ; [CPU_] |4959| 
        ; branchcc occurs ; [] |4959| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4960,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4960| 
        ; branch occurs ; [] |4960| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4961,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4961| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_delay_us")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4961| 
        ; call occurs [#_delay_us] ; [] |4961| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4960,column 14,is_stmt,isa 0
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4960| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4960| 
        CMPB      AL,#0                 ; [CPU_] |4960| 
        B         $C$L84,EQ             ; [CPU_] |4960| 
        ; branchcc occurs ; [] |4960| 
	.dwpsn	file "../Source/prod.c",line 4964,column 7,is_stmt,isa 0
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4964| 
        ; call occurs [#_ad7738_getraw] ; [] |4964| 
	.dwpsn	file "../Source/prod.c",line 4965,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4965| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4965| 
        ADDL      XAR4,ACC              ; [CPU_] |4965| 
        MOVL      XAR0,#34              ; [CPU_] |4965| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4965| 
        MOVL      XAR0,#34              ; [CPU_] |4965| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4965| 
        ASR64     ACC:P,16              ; [CPU_] |4965| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4965| 
        MOVL      XAR0,#34              ; [CPU_] |4965| 
        ASR64     ACC:P,16              ; [CPU_] |4965| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4965| 
        MOVL      XAR0,#34              ; [CPU_] |4965| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4965| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4965| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4965| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4965| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4965| 
	.dwpsn	file "../Source/prod.c",line 4959,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4959| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4959| 
        MOVB      ACC,#0                ; [CPU_] |4959| 
        SUBB      ACC,#1                ; [CPU_] |4959| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4959| 
        B         $C$L85,NEQ            ; [CPU_] |4959| 
        ; branchcc occurs ; [] |4959| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4967,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4967| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4967| 
        MOV       *-SP[2],#0            ; [CPU_] |4967| 
        MOV       *-SP[1],#0            ; [CPU_] |4967| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4967| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4967| 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4967| 
        ; call occurs [#LL$$DIV] ; [] |4967| 
	.dwpsn	file "../Source/prod.c",line 4970,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4970| 
        MOVB      XAR0,#46              ; [CPU_] |4970| 
	.dwpsn	file "../Source/prod.c",line 4967,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4967| 
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4969| 
	.dwpsn	file "../Source/prod.c",line 4967,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4967| 
	.dwpsn	file "../Source/prod.c",line 4970,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4970| 
        CMPB      AL,#2                 ; [CPU_] |4970| 
        B         $C$L89,LEQ            ; [CPU_] |4970| 
        ; branchcc occurs ; [] |4970| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4971,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4971| 
        ; branch occurs ; [] |4971| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4972,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4972| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4971,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4971| 
        B         $C$L89,HIS            ; [CPU_] |4971| 
        ; branchcc occurs ; [] |4971| 
        MOVB      AL,#1                 ; [CPU_] |4971| 
        ADD       AL,AR4                ; [CPU_] |4971| 
        MOVZ      AR5,AL                ; [CPU_] |4971| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4971| 
        ADDL      ACC,XAR1              ; [CPU_] |4971| 
        MOVL      XAR6,ACC              ; [CPU_] |4971| 
        MOVB      XAR0,#72              ; [CPU_] |4971| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4971| 
        MOVL      XAR0,#32              ; [CPU_] |4971| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4971| 
        MOVL      XAR0,#32              ; [CPU_] |4971| 
        ASR64     ACC:P,16              ; [CPU_] |4971| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4971| 
        MOVL      XAR0,#32              ; [CPU_] |4971| 
        ASR64     ACC:P,16              ; [CPU_] |4971| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4971| 
        MOVL      *-SP[4],P             ; [CPU_] |4971| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4971| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4971| 
        MOVL      P,*-SP[32]            ; [CPU_] |4971| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$588, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4971| 
        ; call occurs [#LL$$CMP] ; [] |4971| 
        CMPB      AL,#0                 ; [CPU_] |4971| 
        B         $C$L87,GT             ; [CPU_] |4971| 
        ; branchcc occurs ; [] |4971| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4975,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4975| 
        ADDL      ACC,XAR1              ; [CPU_] |4975| 
        MOVL      XAR4,ACC              ; [CPU_] |4975| 
        MOVL      XAR0,#88              ; [CPU_] |4975| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4975| 
        MOVB      XAR0,#96              ; [CPU_] |4975| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4975| 
        MOVL      XAR0,#38              ; [CPU_] |4975| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4975| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4975| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4975| 
        ; call occurs [#FS$$MPY] ; [] |4975| 
        MOVL      XAR0,#30              ; [CPU_] |4975| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4975| 
        MOVL      P,*XAR3++             ; [CPU_] |4975| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4975| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4975| 
        ; call occurs [#LL$$TOFS] ; [] |4975| 
        MOVL      XAR0,#30              ; [CPU_] |4975| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4975| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4975| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4975| 
        ; call occurs [#FS$$MPY] ; [] |4975| 
        MOVL      XAR0,#88              ; [CPU_] |4975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4975| 
        MOVB      XAR1,#118             ; [CPU_] |4975| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4975| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4975| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4975| 
        ; call occurs [#FS$$ADD] ; [] |4975| 
        MOVL      XAR0,#36              ; [CPU_] |4975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4975| 
        MOVL      XAR0,#36              ; [CPU_] |4975| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4975| 
	.dwpsn	file "../Source/prod.c",line 4944,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4944| 
	.dwpsn	file "../Source/prod.c",line 4975,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4975| 
        MOV       AL,*-SP[60]           ; [CPU_] |4975| 
	.dwpsn	file "../Source/prod.c",line 4944,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4944| 
        B         $C$L81,LT             ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
	.dwpsn	file "../Source/prod.c",line 4979,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4979| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4979| 
        ; call occurs [#_shunt_switch] ; [] |4979| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4981,column 5,is_stmt,isa 0
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_maf_rst")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4981| 
        ; call occurs [#_maf_rst] ; [] |4981| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4984,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4984| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4984| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4984| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4984| 
        ; call occurs [#FS$$SUB] ; [] |4984| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4984| 
        MOVL      XAR0,#36              ; [CPU_] |4984| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4984| 
        MOVB      XAR0,#140             ; [CPU_] |4984| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4984| 
        MOV       AL,*-SP[58]           ; [CPU_] |4984| 
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("_tagid")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4986| 
        ; call occurs [#_tagid] ; [] |4986| 
        MOVL      XAR4,XAR1             ; [CPU_] |4986| 
        ADDB      XAR4,#32              ; [CPU_] |4986| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4986| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4986| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4989,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4989| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4989| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4989| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4989| 
        MOV       AL,*-SP[57]           ; [CPU_] |4989| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4992,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4994,column 5,is_stmt,isa 0
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4994| 
        ; call occurs [#_ad7738_setcal] ; [] |4994| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |4994| 
	.dwpsn	file "../Source/prod.c",line 4995,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4995| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4995| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4995| 
        MOV       AL,AR1                ; [CPU_] |4995| 
	.dwpsn	file "../Source/prod.c",line 4996,column 5,is_stmt,isa 0
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4996| 
        ; call occurs [#_ad7738_resetvall] ; [] |4996| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5001,column 5,is_stmt,isa 0
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5001| 
        ; call occurs [#_lcd_clear] ; [] |5001| 
	.dwpsn	file "../Source/prod.c",line 5002,column 5,is_stmt,isa 0
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_update_units")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5002| 
        ; call occurs [#_update_units] ; [] |5002| 
        MOVL      XAR0,#42              ; [CPU_] |5002| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5002| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5004,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |5004| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 5005,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5005| 
	.dwpsn	file "../Source/prod.c",line 5004,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |5004| 
	.dwpsn	file "../Source/prod.c",line 5005,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5005| 
	.dwpsn	file "../Source/prod.c",line 5004,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |5004| 
	.dwpsn	file "../Source/prod.c",line 5005,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5005| 
	.dwpsn	file "../Source/prod.c",line 5004,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |5004| 
        B         $C$L90,HI             ; [CPU_] |5004| 
        ; branchcc occurs ; [] |5004| 
	.dwpsn	file "../Source/prod.c",line 5007,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 5009,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5009| 
        ; branch occurs ; [] |5009| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4779,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4779| 
        B         $C$L320,LO            ; [CPU_] |4779| 
        ; branchcc occurs ; [] |4779| 
	.dwpsn	file "../Source/prod.c",line 4784,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4784| 
        MOVL      XAR0,#66              ; [CPU_] |4784| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4784| 
        ADDB      ACC,#2                ; [CPU_] |4784| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4784| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4784| 
        CMPL      ACC,XAR6              ; [CPU_] |4784| 
        B         $C$L320,NEQ           ; [CPU_] |4784| 
        ; branchcc occurs ; [] |4784| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4784| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4784| 
        CMPL      ACC,XAR6              ; [CPU_] |4784| 
        B         $C$L320,NEQ           ; [CPU_] |4784| 
        ; branchcc occurs ; [] |4784| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4784| 
        MOVL      XAR0,#64              ; [CPU_] |4784| 
        MOVL      ACC,XAR5              ; [CPU_] |4784| 
        ADDB      ACC,#4                ; [CPU_] |4784| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4784| 
        MOVB      XAR0,#36              ; [CPU_] |4784| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4784| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4784| 
        B         $C$L320,NEQ           ; [CPU_] |4784| 
        ; branchcc occurs ; [] |4784| 
	.dwpsn	file "../Source/prod.c",line 4790,column 5,is_stmt,isa 0
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4790| 
        ; call occurs [#_lcd_clear] ; [] |4790| 
	.dwpsn	file "../Source/prod.c",line 4791,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4791| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4791| 
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4791| 
        ; call occurs [#_lcd_puts] ; [] |4791| 
	.dwpsn	file "../Source/prod.c",line 4792,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4792| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4792| 
        MOVL      XAR0,#44              ; [CPU_] |4792| 
        ADD       AL,*-SP[58]           ; [CPU_] |4792| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4792| 
        MOV       *-SP[3],AL            ; [CPU_] |4792| 
        MOVB      AL,#1                 ; [CPU_] |4792| 
        ADD       AL,*-SP[57]           ; [CPU_] |4792| 
        MOV       *-SP[4],AL            ; [CPU_] |4792| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4792| 
        MOVL      XAR4,XAR1             ; [CPU_] |4792| 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_sprintf")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4792| 
        ; call occurs [#_sprintf] ; [] |4792| 
	.dwpsn	file "../Source/prod.c",line 4793,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4793| 
	.dwpsn	file "../Source/prod.c",line 4792,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4792| 
	.dwpsn	file "../Source/prod.c",line 4793,column 5,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4793| 
        ; call occurs [#_lcd_puts] ; [] |4793| 
	.dwpsn	file "../Source/prod.c",line 4794,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4794| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4794| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4794| 
        MOVL      XAR0,#58              ; [CPU_] |4794| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4794| 
        MOVB      XAR1,#36              ; [CPU_] |4794| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4794| 
        ADDL      ACC,XAR6              ; [CPU_] |4794| 
        MOVL      XAR4,ACC              ; [CPU_] |4794| 
        MOVL      XAR0,#44              ; [CPU_] |4794| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4794| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4794| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_sprintf")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4794| 
        ; call occurs [#_sprintf] ; [] |4794| 
        MOVL      XAR0,#44              ; [CPU_] |4794| 
	.dwpsn	file "../Source/prod.c",line 4795,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4795| 
	.dwpsn	file "../Source/prod.c",line 4794,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4794| 
	.dwpsn	file "../Source/prod.c",line 4795,column 5,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4795| 
        ; call occurs [#_lcd_puts] ; [] |4795| 
	.dwpsn	file "../Source/prod.c",line 4797,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4797| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4797| 
        MOVB      XAR1,#36              ; [CPU_] |4797| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4797| 
        CMPB      AL,#1                 ; [CPU_] |4797| 
        B         $C$L92,EQ             ; [CPU_] |4797| 
        ; branchcc occurs ; [] |4797| 
        CMPB      AL,#2                 ; [CPU_] |4797| 
        B         $C$L105,EQ            ; [CPU_] |4797| 
        ; branchcc occurs ; [] |4797| 
        CMPB      AL,#3                 ; [CPU_] |4797| 
        B         $C$L96,EQ             ; [CPU_] |4797| 
        ; branchcc occurs ; [] |4797| 
        B         $C$L112,UNC           ; [CPU_] |4797| 
        ; branch occurs ; [] |4797| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4801| 
        MOVB      AL,#60                ; [CPU_] |4801| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4801| 
        ; call occurs [#_lcd_puts] ; [] |4801| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4803| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4804,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4805| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4804,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4804| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4805| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4805| 
        SUBB      ACC,#1                ; [CPU_] |4805| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4805| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4805| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4806,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4806| 
        ; branch occurs ; [] |4806| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4807,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4807| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_delay_us")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4807| 
        ; call occurs [#_delay_us] ; [] |4807| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4806,column 14,is_stmt,isa 0
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4806| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4806| 
        CMPB      AL,#0                 ; [CPU_] |4806| 
        B         $C$L93,EQ             ; [CPU_] |4806| 
        ; branchcc occurs ; [] |4806| 
	.dwpsn	file "../Source/prod.c",line 4810,column 7,is_stmt,isa 0
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4810| 
        ; call occurs [#_ad7738_getraw] ; [] |4810| 
	.dwpsn	file "../Source/prod.c",line 4811,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4811| 
        ADDL      XAR4,ACC              ; [CPU_] |4811| 
        MOVL      XAR0,#28              ; [CPU_] |4811| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4811| 
        MOVL      XAR0,#28              ; [CPU_] |4811| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4811| 
        ASR64     ACC:P,16              ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      XAR0,#28              ; [CPU_] |4811| 
        ASR64     ACC:P,16              ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      XAR0,#28              ; [CPU_] |4811| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4811| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      *-SP[32],P            ; [CPU_] |4811| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4805| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4805| 
        MOVB      ACC,#0                ; [CPU_] |4805| 
        SUBB      ACC,#1                ; [CPU_] |4805| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4805| 
        B         $C$L94,NEQ            ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4813,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4813| 
	.dwpsn	file "../Source/prod.c",line 4817,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4817| 
        ; branch occurs ; [] |4817| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4866,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4866| 
        MOVB      AL,#60                ; [CPU_] |4866| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4866| 
        ; call occurs [#_lcd_puts] ; [] |4866| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4868,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4868| 
        MOV       *-SP[60],AL           ; [CPU_] |4868| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4869,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4869| 
        B         $C$L99,LEQ            ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
	.dwpsn	file "../Source/prod.c",line 4871,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4871| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4871| 
        ; call occurs [#_shunt_switch] ; [] |4871| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4873,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4873| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_delay_us")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4873| 
        ; call occurs [#_delay_us] ; [] |4873| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4873| 
	.dwpsn	file "../Source/prod.c",line 4872,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4872| 
        MOVZ      AR0,AR6               ; [CPU_] |4872| 
        MOV       *-SP[47],AR6          ; [CPU_] |4872| 
        CMP       AR0,#-1               ; [CPU_] |4872| 
        B         $C$L98,NEQ            ; [CPU_] |4872| 
        ; branchcc occurs ; [] |4872| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4876,column 8,is_stmt,isa 0
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_maf_rst")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4876| 
        ; call occurs [#_maf_rst] ; [] |4876| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4878,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4878| 
        SPM       #0                    ; [CPU_] 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_delay_us")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4878| 
        ; call occurs [#_delay_us] ; [] |4878| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4881,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4881| 
	.dwpsn	file "../Source/prod.c",line 4882,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4882| 
	.dwpsn	file "../Source/prod.c",line 4881,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4881| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4881| 
	.dwpsn	file "../Source/prod.c",line 4883,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4882,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4882| 
	.dwpsn	file "../Source/prod.c",line 4883,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4883| 
        MOVB      ACC,#0                ; [CPU_] |4883| 
        SUBB      ACC,#1                ; [CPU_] |4883| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4883| 
        B         $C$L101,EQ            ; [CPU_] |4883| 
        ; branchcc occurs ; [] |4883| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4884,column 15,is_stmt,isa 0
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4884| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4884| 
        CMPB      AL,#0                 ; [CPU_] |4884| 
        B         $C$L104,EQ            ; [CPU_] |4884| 
        ; branchcc occurs ; [] |4884| 
	.dwpsn	file "../Source/prod.c",line 4888,column 8,is_stmt,isa 0
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4888| 
        ; call occurs [#_ad7738_getraw] ; [] |4888| 
	.dwpsn	file "../Source/prod.c",line 4889,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4889| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4889| 
        ADDL      XAR4,ACC              ; [CPU_] |4889| 
        MOVL      XAR0,#26              ; [CPU_] |4889| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4889| 
        MOVL      XAR0,#26              ; [CPU_] |4889| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4889| 
        ASR64     ACC:P,16              ; [CPU_] |4889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4889| 
        MOVL      XAR0,#26              ; [CPU_] |4889| 
        ASR64     ACC:P,16              ; [CPU_] |4889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4889| 
        MOVL      XAR0,#26              ; [CPU_] |4889| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4889| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4889| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4889| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4883,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4883| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4883| 
        MOVB      ACC,#0                ; [CPU_] |4883| 
        SUBB      ACC,#1                ; [CPU_] |4883| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4883| 
        B         $C$L100,NEQ           ; [CPU_] |4883| 
        ; branchcc occurs ; [] |4883| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4868,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4868| 
        ADDB      XAR1,#4               ; [CPU_] |4868| 
        MOV       AL,*-SP[60]           ; [CPU_] |4868| 
        CMPB      AL,#2                 ; [CPU_] |4868| 
        B         $C$L97,LT             ; [CPU_] |4868| 
        ; branchcc occurs ; [] |4868| 
	.dwpsn	file "../Source/prod.c",line 4893,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4893| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4893| 
        ; call occurs [#_shunt_switch] ; [] |4893| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4895,column 6,is_stmt,isa 0
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_maf_rst")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4895| 
        ; call occurs [#_maf_rst] ; [] |4895| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4898,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4898| 
        MOV       AH,#17948             ; [CPU_] |4898| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4898| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4898| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4898| 
        ; call occurs [#FS$$MPY] ; [] |4898| 
        MOVL      XAR1,ACC              ; [CPU_] |4898| 
        MOVL      P,*-SP[28]            ; [CPU_] |4898| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4898| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4898| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4898| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4898| 
        ; call occurs [#LL$$TOFS] ; [] |4898| 
        MOVL      XAR0,#88              ; [CPU_] |4898| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4898| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4898| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4898| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4898| 
        ; call occurs [#FS$$MPY] ; [] |4898| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4898| 
        MOVL      ACC,XAR1              ; [CPU_] |4898| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4898| 
        ; call occurs [#FS$$DIV] ; [] |4898| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4898| 
        MOVB      XAR0,#96              ; [CPU_] |4898| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4898| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4900,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4900| 
        MOVL      XAR0,#52              ; [CPU_] |4900| 
        ADDB      ACC,#96               ; [CPU_] |4900| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4900| 
        MOVL      XAR0,#88              ; [CPU_] |4900| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4900| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4900| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4900| 
        ; call occurs [#FS$$NEG] ; [] |4900| 
        MOVB      XAR0,#96              ; [CPU_] |4900| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4900| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4900| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4900| 
        ; call occurs [#FS$$MPY] ; [] |4900| 
        MOVL      XAR1,ACC              ; [CPU_] |4900| 
        MOVL      P,*-SP[32]            ; [CPU_] |4900| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4900| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4900| 
        ; call occurs [#LL$$TOFS] ; [] |4900| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4900| 
        MOVL      ACC,XAR1              ; [CPU_] |4900| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4900| 
        ; call occurs [#FS$$MPY] ; [] |4900| 
        MOVL      XAR6,ACC              ; [CPU_] |4900| 
        MOV       AL,#16384             ; [CPU_] |4900| 
        MOV       AH,#17948             ; [CPU_] |4900| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4900| 
        MOVL      ACC,XAR6              ; [CPU_] |4900| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4900| 
        ; call occurs [#FS$$DIV] ; [] |4900| 
        MOVL      XAR0,#36              ; [CPU_] |4900| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4900| 
        MOVB      XAR1,#118             ; [CPU_] |4900| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4900| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4903,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4903| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4904| 
        ; branch occurs ; [] |4904| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4885,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4885| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("_delay_us")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4885| 
        ; call occurs [#_delay_us] ; [] |4885| 
	.dwpsn	file "../Source/prod.c",line 4884,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4884| 
        ; branch occurs ; [] |4884| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4821| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4822| 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4821| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4821| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4822| 
        MOVZ      AR5,AR5               ; [CPU_] |4822| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4824,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4824| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4824| 
        MOV       *XAR5++,AL            ; [CPU_] |4824| 
	.dwpsn	file "../Source/prod.c",line 4825,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4825| 
	.dwpsn	file "../Source/prod.c",line 4823,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4823| 
        ; branchcc occurs ; [] |4823| 
	.dwpsn	file "../Source/prod.c",line 4828,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4828| 
        MOVB      XAR0,#46              ; [CPU_] |4828| 
        MOV       AL,*-SP[47]           ; [CPU_] |4828| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4828| 
        B         $C$L112,HIS           ; [CPU_] |4828| 
        ; branchcc occurs ; [] |4828| 
        MOVL      XAR0,#36              ; [CPU_] |4828| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4828| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4828| 
        ADDL      ACC,XAR6              ; [CPU_] |4828| 
        ADDB      ACC,#48               ; [CPU_] |4828| 
        MOVL      XAR1,ACC              ; [CPU_] |4828| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4828| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4828| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4828| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4828| 
        ; call occurs [#FS$$CMP] ; [] |4828| 
        CMPB      AL,#0                 ; [CPU_] |4828| 
        B         $C$L112,NEQ           ; [CPU_] |4828| 
        ; branchcc occurs ; [] |4828| 
	.dwpsn	file "../Source/prod.c",line 4832,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4832| 
        MOVB      AL,#1                 ; [CPU_] |4832| 
        MOVL      XAR0,#44              ; [CPU_] |4832| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4832| 
        ADD       AL,*-SP[47]           ; [CPU_] |4832| 
        MOV       *-SP[3],AL            ; [CPU_] |4832| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4832| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("_sprintf")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4832| 
        ; call occurs [#_sprintf] ; [] |4832| 
        MOVL      XAR0,#44              ; [CPU_] |4832| 
	.dwpsn	file "../Source/prod.c",line 4833,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4833| 
	.dwpsn	file "../Source/prod.c",line 4832,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4832| 
	.dwpsn	file "../Source/prod.c",line 4833,column 6,is_stmt,isa 0
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4833| 
        ; call occurs [#_lcd_puts] ; [] |4833| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4836,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4836| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4836,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4836| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4837| 
        MOVB      ACC,#0                ; [CPU_] |4837| 
        SUBB      ACC,#1                ; [CPU_] |4837| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4837| 
        B         $C$L108,EQ            ; [CPU_] |4837| 
        ; branchcc occurs ; [] |4837| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4838,column 14,is_stmt,isa 0
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4838| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4838| 
        CMPB      AL,#0                 ; [CPU_] |4838| 
        B         $C$L111,EQ            ; [CPU_] |4838| 
        ; branchcc occurs ; [] |4838| 
	.dwpsn	file "../Source/prod.c",line 4842,column 7,is_stmt,isa 0
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4842| 
        ; call occurs [#_ad7738_getraw] ; [] |4842| 
	.dwpsn	file "../Source/prod.c",line 4843,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4843| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4843| 
        ADDL      XAR4,ACC              ; [CPU_] |4843| 
        MOVL      XAR0,#24              ; [CPU_] |4843| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4843| 
        MOVL      XAR0,#24              ; [CPU_] |4843| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4843| 
        ASR64     ACC:P,16              ; [CPU_] |4843| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4843| 
        MOVL      XAR0,#24              ; [CPU_] |4843| 
        ASR64     ACC:P,16              ; [CPU_] |4843| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4843| 
        MOVL      XAR0,#24              ; [CPU_] |4843| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4843| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4843| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4843| 
        MOVL      *-SP[32],P            ; [CPU_] |4843| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4843| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4837| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4837| 
        MOVB      ACC,#0                ; [CPU_] |4837| 
        SUBB      ACC,#1                ; [CPU_] |4837| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4837| 
        B         $C$L107,NEQ           ; [CPU_] |4837| 
        ; branchcc occurs ; [] |4837| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4845,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4845| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4845| 
        MOV       *-SP[2],#0            ; [CPU_] |4845| 
        MOV       *-SP[1],#0            ; [CPU_] |4845| 
        MOVL      P,*-SP[32]            ; [CPU_] |4845| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4845| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4845| 
        ; call occurs [#LL$$DIV] ; [] |4845| 
        ADDB      XAR1,#24              ; [CPU_] |4845| 
	.dwpsn	file "../Source/prod.c",line 4847,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4847| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4847| 
	.dwpsn	file "../Source/prod.c",line 4845,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4845| 
	.dwpsn	file "../Source/prod.c",line 4847,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4847| 
        MOV       AL,*-SP[47]           ; [CPU_] |4847| 
        SUB       AL,AR6                ; [CPU_] |4847| 
        MOVZ      AR7,AL                ; [CPU_] |4847| 
        MOVL      XAR4,#65535           ; [CPU_U] |4847| 
        MOVL      ACC,XAR4              ; [CPU_] |4847| 
        CMPL      ACC,XAR7              ; [CPU_] |4847| 
        B         $C$L103,NEQ           ; [CPU_] |4847| 
        ; branchcc occurs ; [] |4847| 
	.dwpsn	file "../Source/prod.c",line 4850,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4850| 
        B         $C$L110,UNC           ; [CPU_] |4850| 
        ; branch occurs ; [] |4850| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4851,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4851| 
        MOVB      AL,#10                ; [CPU_] |4851| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4851| 
        MOV       T,*-SP[58]            ; [CPU_] |4851| 
        MPYU      ACC,T,AL              ; [CPU_] |4851| 
        MOVL      XAR0,#88              ; [CPU_] |4851| 
        ADDL      ACC,XAR6              ; [CPU_] |4851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4851| 
        MOVL      XAR0,#36              ; [CPU_] |4851| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4851| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4851| 
        MOV       ACC,AL << 1           ; [CPU_] |4851| 
        ADDL      ACC,XAR6              ; [CPU_] |4851| 
        MOVL      XAR3,ACC              ; [CPU_] |4851| 
        MOVB      XAR0,#48              ; [CPU_] |4851| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4851| 
        MOVB      XAR0,#50              ; [CPU_] |4851| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4851| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4851| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4851| 
        ; call occurs [#FS$$SUB] ; [] |4851| 
        MOVL      XAR0,#42              ; [CPU_] |4851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4851| 
        MOVB      XAR0,#74              ; [CPU_] |4851| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4851| 
        MOVB      XAR0,#72              ; [CPU_] |4851| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4851| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4851| 
        ; call occurs [#L$$TOFS] ; [] |4851| 
        MOVL      XAR0,#42              ; [CPU_] |4851| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4851| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4851| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4851| 
        ; call occurs [#FS$$DIV] ; [] |4851| 
        MOVL      XAR0,#88              ; [CPU_] |4851| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4851| 
        MOVB      XAR1,#44              ; [CPU_] |4851| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4851| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4851| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4851| 
        ; call occurs [#FS$$DIV] ; [] |4851| 
        MOVB      XAR0,#96              ; [CPU_] |4851| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4851| 
	.dwpsn	file "../Source/prod.c",line 4855,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4855| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4855| 
        MOVB      XAR1,#44              ; [CPU_] |4855| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4855| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4855| 
        ; call occurs [#FS$$MPY] ; [] |4855| 
        MOVL      XAR0,#88              ; [CPU_] |4855| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4855| 
        MOVB      XAR0,#72              ; [CPU_] |4855| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4855| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4855| 
        ; call occurs [#L$$TOFS] ; [] |4855| 
        MOVL      XAR0,#88              ; [CPU_] |4855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4855| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4855| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4855| 
        ; call occurs [#FS$$MPY] ; [] |4855| 
        MOVB      XAR0,#48              ; [CPU_] |4855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4855| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4855| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4855| 
        ; call occurs [#FS$$SUB] ; [] |4855| 
        MOVB      XAR0,#118             ; [CPU_] |4855| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4855| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4850,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4850| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4850,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4850| 
        ADDB      AL,#-1                ; [CPU_] |4850| 
        CMP       AL,*-SP[47]           ; [CPU_] |4850| 
        B         $C$L109,GT            ; [CPU_] |4850| 
        ; branchcc occurs ; [] |4850| 
	.dwpsn	file "../Source/prod.c",line 4862,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4862| 
        ; branch occurs ; [] |4862| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4839,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4839| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("_delay_us")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4839| 
        ; call occurs [#_delay_us] ; [] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4838| 
        ; branch occurs ; [] |4838| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4829,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4829| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4911,column 5,is_stmt,isa 0
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4911| 
        ; call occurs [#_lcd_clear] ; [] |4911| 
	.dwpsn	file "../Source/prod.c",line 4912,column 5,is_stmt,isa 0
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_update_units")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4912| 
        ; call occurs [#_update_units] ; [] |4912| 
        MOV       AL,*-SP[47]           ; [CPU_] |4912| 
	.dwpsn	file "../Source/prod.c",line 4915,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4915| 
        ; branchcc occurs ; [] |4915| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4917,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4917| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4918,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4918| 
	.dwpsn	file "../Source/prod.c",line 4917,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4917| 
	.dwpsn	file "../Source/prod.c",line 4918,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4918| 
	.dwpsn	file "../Source/prod.c",line 4917,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4917| 
	.dwpsn	file "../Source/prod.c",line 4918,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4918| 
	.dwpsn	file "../Source/prod.c",line 4917,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4917| 
        B         $C$L114,HI            ; [CPU_] |4917| 
        ; branchcc occurs ; [] |4917| 
	.dwpsn	file "../Source/prod.c",line 4920,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4921,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4921| 
        ; branch occurs ; [] |4921| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4631,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4631| 
        B         $C$L320,LO            ; [CPU_] |4631| 
        ; branchcc occurs ; [] |4631| 
	.dwpsn	file "../Source/prod.c",line 4636,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4636| 
        MOV       *-SP[58],AL           ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4638,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4638| 
	.dwpsn	file "../Source/prod.c",line 4637,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4637| 
        MOV       *-SP[57],AL           ; [CPU_] |4637| 
	.dwpsn	file "../Source/prod.c",line 4638,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4638| 
        MOV       AL,*-SP[58]           ; [CPU_] |4638| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4638| 
        CMPB      AL,#4                 ; [CPU_] |4638| 
        B         $C$L320,HIS           ; [CPU_] |4638| 
        ; branchcc occurs ; [] |4638| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4638| 
        B         $C$L320,HIS           ; [CPU_] |4638| 
        ; branchcc occurs ; [] |4638| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4644,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4644| 
        MOVL      ACC,XAR4              ; [CPU_] |4644| 
        ADDB      ACC,#4                ; [CPU_] |4644| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4644| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4644| 
        CMPB      AL,#16                ; [CPU_] |4644| 
        B         $C$L320,HIS           ; [CPU_] |4644| 
        ; branchcc occurs ; [] |4644| 
	.dwpsn	file "../Source/prod.c",line 4648,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4648| 
        MOVL      XAR0,#64              ; [CPU_] |4648| 
        CMPB      AL,#0                 ; [CPU_] |4648| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4648| 
        B         $C$L116,LEQ           ; [CPU_] |4648| 
        ; branchcc occurs ; [] |4648| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4648| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4648| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4648| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4648| 
        MOVL      XAR0,ACC              ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4649,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4649| 
        ADD       AL,AR4                ; [CPU_] |4649| 
        MOVZ      AR6,AL                ; [CPU_] |4649| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4649| 
	.dwpsn	file "../Source/prod.c",line 4648,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4648| 
        ; branch occurs ; [] |4648| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4643,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4643| 
	.dwpsn	file "../Source/prod.c",line 4648,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4648| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4651,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4651| 
        MOVL      XAR0,#86              ; [CPU_] |4651| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4651| 
	.dwpsn	file "../Source/prod.c",line 4653,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4653| 
        MOVL      XAR4,ACC              ; [CPU_] |4653| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4653| 
        CMPB      AL,#16                ; [CPU_] |4653| 
        B         $C$L320,HIS           ; [CPU_] |4653| 
        ; branchcc occurs ; [] |4653| 
        ADDB      XAR4,#1               ; [CPU_] |4653| 
	.dwpsn	file "../Source/prod.c",line 4658,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4658| 
	.dwpsn	file "../Source/prod.c",line 4653,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4653| 
        MOVL      P,XAR4                ; [CPU_] |4653| 
	.dwpsn	file "../Source/prod.c",line 4658,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4658| 
        ; branchcc occurs ; [] |4658| 
        MOVZ      AR5,AL                ; [CPU_] |4658| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4659,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4659| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4659| 
        MOV       *XAR4++,AL            ; [CPU_] |4659| 
        ADDB      XAR7,#1               ; [CPU_] |4659| 
        MOVL      P,XAR7                ; [CPU_] |4659| 
	.dwpsn	file "../Source/prod.c",line 4658,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4658| 
        ; branchcc occurs ; [] |4658| 
        B         $C$L120,UNC           ; [CPU_] |4658| 
        ; branch occurs ; [] |4658| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4658,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4658| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4661,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4661| 
        ADD       ACC,AR5               ; [CPU_] |4661| 
        MOVL      XAR4,ACC              ; [CPU_] |4661| 
        MOVB      XAR0,#16              ; [CPU_] |4661| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4663,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4663| 
        MOV       AL,*XAR7              ; [CPU_] |4663| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4663| 
        ADDB      XAR7,#1               ; [CPU_] |4663| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4663| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4663| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4667,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4667| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4668,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4667,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4667| 
        MOV       *XAR5++,AL            ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4668,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4668| 
        MOVL      P,XAR7                ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4666,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4666| 
        ; branchcc occurs ; [] |4666| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4674,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4674| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4674| 
	.dwpsn	file "../Source/prod.c",line 4675,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4675| 
	.dwpsn	file "../Source/prod.c",line 4674,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4674| 
        MOV       *XAR0++,AL            ; [CPU_] |4674| 
	.dwpsn	file "../Source/prod.c",line 4675,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4675| 
        MOVL      P,XAR5                ; [CPU_] |4675| 
	.dwpsn	file "../Source/prod.c",line 4673,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4673| 
        ; branchcc occurs ; [] |4673| 
	.dwpsn	file "../Source/prod.c",line 4678,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4678| 
        MOVB      XAR0,#40              ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4678,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4678| 
        MOVB      XAR0,#142             ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4678,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4680| 
        MOV       AL,*XAR7              ; [CPU_] |4680| 
        ADDB      XAR7,#1               ; [CPU_] |4680| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4681| 
        CMPB      AL,#6                 ; [CPU_] |4681| 
        B         $C$L123,GT            ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
        CMPB      AL,#6                 ; [CPU_] |4681| 
        B         $C$L126,EQ            ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
        CMPB      AL,#1                 ; [CPU_] |4681| 
        B         $C$L129,LOS           ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
        MOV       AH,AL                 ; [CPU_] |4681| 
        ADDB      AH,#-2                ; [CPU_] |4681| 
        CMPB      AH,#2                 ; [CPU_] |4681| 
        B         $C$L128,LOS           ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
        CMPB      AL,#5                 ; [CPU_] |4681| 
        B         $C$L127,EQ            ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
        B         $C$L124,UNC           ; [CPU_] |4681| 
        ; branch occurs ; [] |4681| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4681| 
        ADDB      AH,#-7                ; [CPU_] |4681| 
        CMPB      AH,#1                 ; [CPU_] |4681| 
        B         $C$L125,LOS           ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
        CMPB      AL,#15                ; [CPU_] |4681| 
        B         $C$L125,EQ            ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4703,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4703| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4703| 
	.dwpsn	file "../Source/prod.c",line 4704,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4704| 
        ; branch occurs ; [] |4704| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4700,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4700| 
	.dwpsn	file "../Source/prod.c",line 4701,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4701| 
        ; branch occurs ; [] |4701| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4695,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4695| 
	.dwpsn	file "../Source/prod.c",line 4696,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4696| 
        ; branch occurs ; [] |4696| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4693,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4693| 
        ; branch occurs ; [] |4693| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4689,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4689| 
	.dwpsn	file "../Source/prod.c",line 4690,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4690| 
        ; branch occurs ; [] |4690| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4684,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4684| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4706,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4706| 
        MOVB      XAR0,#43              ; [CPU_] |4706| 
        ADDB      XAR7,#42              ; [CPU_] |4706| 
        MOV       AL,*XAR7              ; [CPU_] |4706| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4706| 
	.dwpsn	file "../Source/prod.c",line 4707,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4707| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4707| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4707| 
	.dwpsn	file "../Source/prod.c",line 4709,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4709| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4709| 
        CMPB      AL,#1                 ; [CPU_] |4709| 
        B         $C$L137,EQ            ; [CPU_] |4709| 
        ; branchcc occurs ; [] |4709| 
        CMPB      AL,#2                 ; [CPU_] |4709| 
        B         $C$L131,EQ            ; [CPU_] |4709| 
        ; branchcc occurs ; [] |4709| 
        CMPB      AL,#3                 ; [CPU_] |4709| 
        B         $C$L135,EQ            ; [CPU_] |4709| 
        ; branchcc occurs ; [] |4709| 
        B         $C$L134,UNC           ; [CPU_] |4709| 
        ; branch occurs ; [] |4709| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4726| 
        MOVB      XAR0,#46              ; [CPU_] |4726| 
        MOV       AL,*XAR7              ; [CPU_] |4726| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4727| 
        CMPB      AL,#12                ; [CPU_] |4727| 
        B         $C$L134,GT            ; [CPU_] |4727| 
        ; branchcc occurs ; [] |4727| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4732,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4732| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4726| 
        MOVL      P,XAR6                ; [CPU_] |4726| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4740,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4740| 
        B         $C$L140,LEQ           ; [CPU_] |4740| 
        ; branchcc occurs ; [] |4740| 
	.dwpsn	file "../Source/prod.c",line 4733,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4733| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4733| 
        ADDB      ACC,#48               ; [CPU_] |4733| 
        MOVL      XAR0,ACC              ; [CPU_] |4733| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4735,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4735| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4736,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4736| 
	.dwpsn	file "../Source/prod.c",line 4735,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4735| 
        MOV       *XAR0++,AL            ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4736,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4736| 
        MOVL      P,XAR5                ; [CPU_] |4736| 
	.dwpsn	file "../Source/prod.c",line 4734,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4734| 
        ; branchcc occurs ; [] |4734| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4732,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4732| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4732| 
        ; branch occurs ; [] |4732| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4759| 
        ; branch occurs ; [] |4759| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4744| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4744| 
        MOVZ      AR0,AR5               ; [CPU_] |4744| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4746,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4746| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4747,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4746,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4746| 
        MOV       *XAR0++,AL            ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4747,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4747| 
        MOVL      P,XAR5                ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4745,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4745| 
        ; branchcc occurs ; [] |4745| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4750| 
        MOV       AH,#0                 ; [CPU_] |4750| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4750| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4750| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4750| 
        ; call occurs [#FS$$CMP] ; [] |4750| 
        CMPB      AL,#0                 ; [CPU_] |4750| 
        B         $C$L139,NEQ           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
	.dwpsn	file "../Source/prod.c",line 4751,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4751| 
        MOV       AH,#16314             ; [CPU_] |4751| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4751| 
        B         $C$L139,UNC           ; [CPU_] |4751| 
        ; branch occurs ; [] |4751| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4714,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4714| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4714,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4714| 
        MOV       *XAR0++,AL            ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4715| 
        MOVL      P,XAR5                ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4713,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
	.dwpsn	file "../Source/prod.c",line 4718,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4718| 
        MOVL      XAR0,#88              ; [CPU_] |4718| 
        MOVL      ACC,XAR1              ; [CPU_] |4718| 
        ADDB      ACC,#96               ; [CPU_] |4718| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4718| 
        MOVL      XAR0,#52              ; [CPU_] |4718| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4718| 
        MOV       AL,#0                 ; [CPU_] |4718| 
        MOV       AH,#0                 ; [CPU_] |4718| 
        MOVB      XAR0,#96              ; [CPU_] |4718| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4718| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4718| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4718| 
        ; call occurs [#FS$$CMP] ; [] |4718| 
        CMPB      AL,#0                 ; [CPU_] |4718| 
        B         $C$L139,NEQ           ; [CPU_] |4718| 
        ; branchcc occurs ; [] |4718| 
	.dwpsn	file "../Source/prod.c",line 4719,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4719| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4719| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4719| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4721,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4721| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4762,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4762| 
        MOVB      XAR0,#36              ; [CPU_] |4762| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4762| 
        B         $C$L320,EQ            ; [CPU_] |4762| 
        ; branchcc occurs ; [] |4762| 
	.dwpsn	file "../Source/prod.c",line 4766,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4766| 
        MOV       AL,#0                 ; [CPU_] |4766| 
        MOV       AH,#0                 ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4766,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4767| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4768,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4768| 
        MOV       AL,#0                 ; [CPU_] |4768| 
        MOV       AH,#0                 ; [CPU_] |4768| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4768| 
	.dwpsn	file "../Source/prod.c",line 4769,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4769| 
        MOV       AL,*-SP[58]           ; [CPU_] |4769| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4769| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4771| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4771| 
        ; branch occurs ; [] |4771| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4772,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4772| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4772| 
        ADD       ACC,PL                ; [CPU_] |4772| 
        MOVL      XAR7,ACC              ; [CPU_] |4772| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4772| 
        ADD       ACC,PL                ; [CPU_] |4772| 
        MOVL      XAR4,ACC              ; [CPU_] |4772| 
	.dwpsn	file "../Source/prod.c",line 4771,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4771| 
	.dwpsn	file "../Source/prod.c",line 4772,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4772| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4772| 
        MOV       AL,PL                 ; [CPU_] |4772| 
        ADDB      AL,#1                 ; [CPU_] |4772| 
        MOV       *-SP[61],AL           ; [CPU_] |4772| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4771,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4771| 
        B         $C$L141,HI            ; [CPU_] |4771| 
        ; branchcc occurs ; [] |4771| 
        B         $C$L743,UNC           ; [CPU_] |4771| 
        ; branch occurs ; [] |4771| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4579,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4579| 
        B         $C$L320,LO            ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        MOVL      ACC,XAR4              ; [CPU_] |4579| 
        MOVL      XAR0,#66              ; [CPU_] |4579| 
        ADDB      ACC,#2                ; [CPU_] |4579| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4579| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4579| 
        B         $C$L320,LT            ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        MOVL      XAR5,XAR4             ; [CPU_] |4579| 
        MOVL      XAR0,#66              ; [CPU_] |4579| 
        CMPB      AL,#4                 ; [CPU_] |4579| 
        ADDB      XAR5,#2               ; [CPU_] |4579| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4579| 
        B         $C$L320,GEQ           ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4579| 
        B         $C$L320,LT            ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        CMPB      AH,#2                 ; [CPU_] |4579| 
        B         $C$L320,GT            ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4585,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4585| 
        ; branchcc occurs ; [] |4585| 
	.dwpsn	file "../Source/prod.c",line 4588,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4588| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4588| 
        MOVL      XAR0,#66              ; [CPU_] |4588| 
        MOVU      ACC,AL                ; [CPU_] |4588| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4588| 
        CMPL      ACC,XAR6              ; [CPU_] |4588| 
        B         $C$L145,EQ            ; [CPU_] |4588| 
        ; branchcc occurs ; [] |4588| 
        B         $C$L320,UNC           ; [CPU_] |4588| 
        ; branch occurs ; [] |4588| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4586,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4586| 
        MOVL      XAR0,#66              ; [CPU_] |4586| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4586| 
        MOV       *-SP[58],AL           ; [CPU_] |4586| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4586| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4594,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4594| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4594| 
	.dwpsn	file "../Source/prod.c",line 4593,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4593| 
        MOV       *-SP[47],AL           ; [CPU_] |4593| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4593| 
	.dwpsn	file "../Source/prod.c",line 4594,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4594| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4594| 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4597| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4594,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4594| 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4597| 
        MOVZ      AR4,AR4               ; [CPU_] |4597| 
	.dwpsn	file "../Source/prod.c",line 4595,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4595| 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4597| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4597| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4599,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4599| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4600,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4600| 
        MOV       *XAR7++,AL            ; [CPU_] |4600| 
	.dwpsn	file "../Source/prod.c",line 4601,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4601| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4601| 
        MOV       *XAR4++,AL            ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4602,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4602| 
        MOV       *XAR7++,AL            ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4598,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4598| 
        ; branchcc occurs ; [] |4598| 
	.dwpsn	file "../Source/prod.c",line 4605,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4605| 
        SUBB      XAR4,#24              ; [CPU_U] |4605| 
        MOVZ      AR4,AR4               ; [CPU_] |4605| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4605| 
        ADDL      XAR4,ACC              ; [CPU_] |4605| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4605| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4605| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4605| 
        MOVL      ACC,XAR1              ; [CPU_] |4605| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4605| 
        ; call occurs [#FS$$CMP] ; [] |4605| 
        CMPB      AL,#0                 ; [CPU_] |4605| 
        B         $C$L320,LT            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        MOV       AL,#0                 ; [CPU_] |4605| 
        MOV       AH,#16672             ; [CPU_] |4605| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4605| 
        MOVL      ACC,XAR1              ; [CPU_] |4605| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4605| 
        ; call occurs [#FS$$CMP] ; [] |4605| 
        CMPB      AL,#0                 ; [CPU_] |4605| 
        B         $C$L320,GT            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
	.dwpsn	file "../Source/prod.c",line 4610,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4610| 
        MOV       AH,#16672             ; [CPU_] |4610| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4610| 
        MOVL      ACC,XAR1              ; [CPU_] |4610| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4610| 
        ; call occurs [#FS$$ADD] ; [] |4610| 
        MOVL      XAR6,ACC              ; [CPU_] |4610| 
        MOV       AL,#65024             ; [CPU_] |4610| 
        MOV       AH,#18175             ; [CPU_] |4610| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4610| 
        MOVL      ACC,XAR6              ; [CPU_] |4610| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4610| 
        ; call occurs [#FS$$MPY] ; [] |4610| 
        MOVL      XAR6,ACC              ; [CPU_] |4610| 
        MOV       AL,#0                 ; [CPU_] |4610| 
        MOV       AH,#16672             ; [CPU_] |4610| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4610| 
        MOVL      ACC,XAR6              ; [CPU_] |4610| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4610| 
        ; call occurs [#FS$$DIV] ; [] |4610| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4610| 
        ; call occurs [#FS$$TOLL] ; [] |4610| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4610,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4610| 
	.dwpsn	file "../Source/prod.c",line 4601,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4610,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4610| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4611| 
        CMP64     ACC:P                 ; [CPU_] |4611| 
        B         $C$L148,LEQ           ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
	.dwpsn	file "../Source/prod.c",line 4613,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4613| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4613| 
        MOV       *-SP[2],#0            ; [CPU_] |4613| 
        MOV       *-SP[1],#0            ; [CPU_] |4613| 
        MOVL      P,*-SP[32]            ; [CPU_] |4613| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4613| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$656, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4613| 
        ; call occurs [#LL$$CMP] ; [] |4613| 
        CMPB      AL,#0                 ; [CPU_] |4613| 
        B         $C$L147,GEQ           ; [CPU_] |4613| 
        ; branchcc occurs ; [] |4613| 
	.dwpsn	file "../Source/prod.c",line 4616,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4616| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4616| 
        MOVU      ACC,AR4               ; [CPU_] |4616| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4616| 
        MOVL      XAR1,ACC              ; [CPU_] |4616| 
        MOV       AL,*-SP[32]           ; [CPU_] |4616| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4616| 
        B         $C$L149,UNC           ; [CPU_] |4616| 
        ; branch occurs ; [] |4616| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4614,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4614| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4614| 
        MOVU      ACC,AR4               ; [CPU_] |4614| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4614| 
        MOVL      XAR1,ACC              ; [CPU_] |4614| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4614| 
	.dwpsn	file "../Source/prod.c",line 4615,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4615| 
        ; branch occurs ; [] |4615| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4612,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4612| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4612| 
        MOVU      ACC,AR4               ; [CPU_] |4612| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4612| 
        MOVL      XAR1,ACC              ; [CPU_] |4612| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4612| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4619,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4619| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4619| 
        ; call occurs [#_dac_setmode] ; [] |4619| 
	.dwpsn	file "../Source/prod.c",line 4621,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4621| 
        MOV       AH,*-SP[47]           ; [CPU_] |4621| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4621| 
        ; call occurs [#_mcbsp_xmit] ; [] |4621| 
	.dwpsn	file "../Source/prod.c",line 4622,column 5,is_stmt,isa 0
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("_latch_dac")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4622| 
        ; call occurs [#_latch_dac] ; [] |4622| 
	.dwpsn	file "../Source/prod.c",line 4624,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4624| 
        MOV       T,*-SP[59]            ; [CPU_] |4624| 
        LSL       AL,T                  ; [CPU_] |4624| 
        OR        *-SP[56],AL           ; [CPU_] |4624| 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4627| 
        ; branch occurs ; [] |4627| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4533,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4533| 
        B         $C$L320,LO            ; [CPU_] |4533| 
        ; branchcc occurs ; [] |4533| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4533| 
        MOVL      XAR0,#66              ; [CPU_] |4533| 
        MOVL      ACC,XAR5              ; [CPU_] |4533| 
        ADDB      ACC,#2                ; [CPU_] |4533| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4533| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4533| 
        MOVZ      AR7,AR6               ; [CPU_] |4533| 
        MOV       AL,*-SP[58]           ; [CPU_] |4533| 
        MOVU      ACC,AL                ; [CPU_] |4533| 
        CMPL      ACC,XAR7              ; [CPU_] |4533| 
        B         $C$L320,NEQ           ; [CPU_] |4533| 
        ; branchcc occurs ; [] |4533| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4533| 
        CMPB      AL,#7                 ; [CPU_] |4533| 
        B         $C$L320,NEQ           ; [CPU_] |4533| 
        ; branchcc occurs ; [] |4533| 
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4539| 
        MOVL      ACC,XAR5              ; [CPU_] |4539| 
        MOVL      XAR0,#66              ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4538,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4538| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4539| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4539| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4539| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4539| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4542,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4542| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4544,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4544| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4544| 
	.dwpsn	file "../Source/prod.c",line 4545,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4545| 
        MOV       *XAR7++,AL            ; [CPU_] |4545| 
	.dwpsn	file "../Source/prod.c",line 4546,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4546| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4546| 
        MOV       *XAR0++,AL            ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4547,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4547| 
        MOV       *XAR7++,AL            ; [CPU_] |4547| 
	.dwpsn	file "../Source/prod.c",line 4543,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4543| 
        ; branchcc occurs ; [] |4543| 
	.dwpsn	file "../Source/prod.c",line 4541,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4541| 
	.dwpsn	file "../Source/prod.c",line 4547,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4547| 
	.dwpsn	file "../Source/prod.c",line 4541,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4541| 
        ; branchcc occurs ; [] |4541| 
	.dwpsn	file "../Source/prod.c",line 4554,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4554| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4554| 
        ; call occurs [#U$$TOFS] ; [] |4554| 
        MOVL      XAR1,ACC              ; [CPU_] |4554| 
        MOV       AL,*-SP[35]           ; [CPU_] |4554| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4554| 
        ; call occurs [#U$$TOFS] ; [] |4554| 
        MOVL      XAR0,#86              ; [CPU_] |4554| 
        MOV       T,*-SP[58]            ; [CPU_] |4554| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4554| 
        MOVL      XAR0,#40              ; [CPU_] |4554| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4554| 
        MOVB      AL,#12                ; [CPU_] |4554| 
        MPYU      ACC,T,AL              ; [CPU_] |4554| 
        MOVL      XAR0,#88              ; [CPU_] |4554| 
        ADDL      ACC,XAR6              ; [CPU_] |4554| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4554| 
        MOVL      XAR0,#86              ; [CPU_] |4554| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4554| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4554| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4554| 
        ; call occurs [#FS$$SUB] ; [] |4554| 
        MOVL      XAR0,#42              ; [CPU_] |4554| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4554| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4554| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4554| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4554| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4554| 
        ; call occurs [#FS$$SUB] ; [] |4554| 
        MOVL      XAR0,#42              ; [CPU_] |4554| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4554| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4554| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4554| 
        ; call occurs [#FS$$DIV] ; [] |4554| 
        MOVL      XAR0,#88              ; [CPU_] |4554| 
        MOVL      XAR6,ACC              ; [CPU_] |4554| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4554| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4554| 
        MOVL      XAR4,ACC              ; [CPU_] |4554| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4554| 
	.dwpsn	file "../Source/prod.c",line 4557,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4557| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4557| 
        ; call occurs [#U$$TOFS] ; [] |4557| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4557| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4557| 
        ; call occurs [#FS$$SUB] ; [] |4557| 
        MOVL      XAR1,ACC              ; [CPU_] |4557| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4557| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4557| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4557| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4557| 
        ; call occurs [#FS$$SUB] ; [] |4557| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4557| 
        MOVL      ACC,XAR1              ; [CPU_] |4557| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4557| 
        ; call occurs [#FS$$DIV] ; [] |4557| 
        MOVL      XAR0,#88              ; [CPU_] |4557| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4557| 
        MOVL      XAR6,ACC              ; [CPU_] |4557| 
        MOVL      ACC,XAR1              ; [CPU_] |4557| 
        ADD       ACC,#49 << 6          ; [CPU_] |4557| 
        MOVL      XAR4,ACC              ; [CPU_] |4557| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4557,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4557| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4560| 
        MOVL      XAR4,ACC              ; [CPU_] |4560| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4560| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4560| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4560| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4560| 
        ; call occurs [#FS$$MPY] ; [] |4560| 
        MOVL      XAR0,#86              ; [CPU_] |4560| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4560| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4560| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4560| 
        ; call occurs [#FS$$SUB] ; [] |4560| 
        MOVL      XAR6,ACC              ; [CPU_] |4560| 
        MOVL      ACC,XAR1              ; [CPU_] |4560| 
        ADD       ACC,#785 << 2         ; [CPU_] |4560| 
        MOVL      XAR4,ACC              ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4563| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4563| 
        ; call occurs [#_dac_setmode] ; [] |4563| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4569,column 5,is_stmt,isa 0
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4569| 
        ; call occurs [#_ad7738_setcal] ; [] |4569| 
        MOVL      XAR0,#78              ; [CPU_] |4569| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4570,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4570| 
        MOVL      XAR1,ACC              ; [CPU_] |4570| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4570| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4570| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4570| 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4571| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4571| 
        ; call occurs [#_ad7738_resetvall] ; [] |4571| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4564,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4564| 
	.dwpsn	file "../Source/prod.c",line 4575,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4575| 
        ; branch occurs ; [] |4575| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4477,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4477| 
        B         $C$L320,LO            ; [CPU_] |4477| 
        ; branchcc occurs ; [] |4477| 
        MOVL      XAR0,#88              ; [CPU_] |4477| 
        MOVL      ACC,XAR4              ; [CPU_] |4477| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4477| 
        MOVL      XAR0,#66              ; [CPU_] |4477| 
        ADDB      ACC,#2                ; [CPU_] |4477| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4477| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4477| 
        MOV       AL,*-SP[58]           ; [CPU_] |4477| 
        MOVU      ACC,AL                ; [CPU_] |4477| 
        CMPL      ACC,XAR6              ; [CPU_] |4477| 
        B         $C$L320,NEQ           ; [CPU_] |4477| 
        ; branchcc occurs ; [] |4477| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4477| 
        B         $C$L320,LT            ; [CPU_] |4477| 
        ; branchcc occurs ; [] |4477| 
        CMPB      AL,#2                 ; [CPU_] |4477| 
        B         $C$L320,GEQ           ; [CPU_] |4477| 
        ; branchcc occurs ; [] |4477| 
	.dwpsn	file "../Source/prod.c",line 4483,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4483| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4483,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4483| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4483| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4484| 
        MOVZ      AR7,AR6               ; [CPU_] |4484| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4486,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4486| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4486| 
	.dwpsn	file "../Source/prod.c",line 4485,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4485| 
        ADDB      XAR4,#2               ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4486,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4486| 
	.dwpsn	file "../Source/prod.c",line 4485,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4485| 
        ; branchcc occurs ; [] |4485| 
	.dwpsn	file "../Source/prod.c",line 4489,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4489| 
        SUBB      XAR4,#24              ; [CPU_U] |4489| 
        MOVZ      AR1,AR4               ; [CPU_] |4489| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4489| 
        ADDL      XAR1,ACC              ; [CPU_] |4489| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4489| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4489| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4489| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4489| 
        ; call occurs [#FS$$CMP] ; [] |4489| 
        CMPB      AL,#0                 ; [CPU_] |4489| 
        B         $C$L320,NEQ           ; [CPU_] |4489| 
        ; branchcc occurs ; [] |4489| 
	.dwpsn	file "../Source/prod.c",line 4493,column 5,is_stmt,isa 0
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4493| 
        ; call occurs [#_lcd_clear] ; [] |4493| 
	.dwpsn	file "../Source/prod.c",line 4494,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4494| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4494| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4494| 
        ; call occurs [#_lcd_puts] ; [] |4494| 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4495| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4495| 
        MOVL      XAR0,#44              ; [CPU_] |4495| 
        ADD       AL,*-SP[58]           ; [CPU_] |4495| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4495| 
        MOV       *-SP[3],AL            ; [CPU_] |4495| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4495| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_sprintf")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4495| 
        ; call occurs [#_sprintf] ; [] |4495| 
        MOVL      XAR0,#44              ; [CPU_] |4495| 
	.dwpsn	file "../Source/prod.c",line 4496,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4496| 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4495| 
	.dwpsn	file "../Source/prod.c",line 4496,column 5,is_stmt,isa 0
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4496| 
        ; call occurs [#_lcd_puts] ; [] |4496| 
	.dwpsn	file "../Source/prod.c",line 4497,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4497| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4497| 
        MOVL      XAR0,#44              ; [CPU_] |4497| 
        ADD       AL,*-SP[47]           ; [CPU_] |4497| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4497| 
        MOV       *-SP[3],AL            ; [CPU_] |4497| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4497| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4497| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4497| 
        MOVL      XAR4,XAR1             ; [CPU_] |4497| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_sprintf")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4497| 
        ; call occurs [#_sprintf] ; [] |4497| 
	.dwpsn	file "../Source/prod.c",line 4498,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4498| 
	.dwpsn	file "../Source/prod.c",line 4497,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4497| 
	.dwpsn	file "../Source/prod.c",line 4498,column 5,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4498| 
        ; call occurs [#_lcd_puts] ; [] |4498| 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4499| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4499| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4499| 
        ; call occurs [#_lcd_puts] ; [] |4499| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4501| 
        SUBB      XAR4,#32              ; [CPU_U] |4501| 
        MOVZ      AR1,AR4               ; [CPU_] |4501| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4499| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4501| 
        ADDL      XAR1,ACC              ; [CPU_] |4501| 
	.dwpsn	file "../Source/prod.c",line 4502,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4502| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4501| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4501| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4501| 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4503| 
	.dwpsn	file "../Source/prod.c",line 4502,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4502| 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4503| 
        MOVB      ACC,#0                ; [CPU_] |4503| 
        SUBB      ACC,#1                ; [CPU_] |4503| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4503| 
        B         $C$L157,EQ            ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4504,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4504| 
        ; branch occurs ; [] |4504| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4505,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4505| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_delay_us")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4505| 
        ; call occurs [#_delay_us] ; [] |4505| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4504,column 13,is_stmt,isa 0
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4504| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4504| 
        CMPB      AL,#0                 ; [CPU_] |4504| 
        B         $C$L155,EQ            ; [CPU_] |4504| 
        ; branchcc occurs ; [] |4504| 
	.dwpsn	file "../Source/prod.c",line 4507,column 6,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4507| 
        ; call occurs [#_ad7738_getraw] ; [] |4507| 
	.dwpsn	file "../Source/prod.c",line 4508,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4508| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4508| 
        ADDL      XAR4,ACC              ; [CPU_] |4508| 
        MOVL      XAR0,#22              ; [CPU_] |4508| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4508| 
        MOVL      XAR0,#22              ; [CPU_] |4508| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4508| 
        ASR64     ACC:P,16              ; [CPU_] |4508| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4508| 
        MOVL      XAR0,#22              ; [CPU_] |4508| 
        ASR64     ACC:P,16              ; [CPU_] |4508| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4508| 
        MOVL      XAR0,#22              ; [CPU_] |4508| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4508| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4508| 
        MOVL      XAR0,#22              ; [CPU_] |4508| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4508| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4508| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4508| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4508| 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4503| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4503| 
        MOVB      ACC,#0                ; [CPU_] |4503| 
        SUBB      ACC,#1                ; [CPU_] |4503| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4503| 
        B         $C$L156,NEQ           ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4510,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4510| 
        B         $C$L158,NEQ           ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
	.dwpsn	file "../Source/prod.c",line 4511,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4511| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4511| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4511| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4511| 
        ; call occurs [#FS$$SUB] ; [] |4511| 
        MOVL      XAR6,ACC              ; [CPU_] |4511| 
        MOV       AL,#16384             ; [CPU_] |4511| 
        MOV       AH,#17948             ; [CPU_] |4511| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4511| 
        MOVL      ACC,XAR6              ; [CPU_] |4511| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4511| 
        ; call occurs [#FS$$MPY] ; [] |4511| 
        MOVL      XAR1,ACC              ; [CPU_] |4511| 
        MOVL      P,*-SP[28]            ; [CPU_] |4511| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4511| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4511| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4511| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4511| 
        ; call occurs [#LL$$TOFS] ; [] |4511| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4511| 
        MOVL      ACC,XAR1              ; [CPU_] |4511| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4511| 
        ; call occurs [#FS$$DIV] ; [] |4511| 
        MOVL      XAR0,#40              ; [CPU_] |4511| 
        MOV       T,*-SP[58]            ; [CPU_] |4511| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4511| 
        MOVL      XAR6,ACC              ; [CPU_] |4511| 
        MOVB      AL,#10                ; [CPU_] |4511| 
        MPYU      ACC,T,AL              ; [CPU_] |4511| 
        ADDL      ACC,XAR7              ; [CPU_] |4511| 
        MOVL      XAR4,ACC              ; [CPU_] |4511| 
        MOVB      XAR0,#44              ; [CPU_] |4511| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4511| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4516,column 6,is_stmt,isa 0
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4516| 
        ; call occurs [#_ad7738_setcal] ; [] |4516| 
        MOVL      XAR0,#78              ; [CPU_] |4516| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4517,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4517| 
        MOVL      XAR1,ACC              ; [CPU_] |4517| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4517| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4517| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4517| 
	.dwpsn	file "../Source/prod.c",line 4518,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4518| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4518| 
        ; call occurs [#_ad7738_resetvall] ; [] |4518| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4514,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4514| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4521,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4521| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4522,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4521,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4521| 
	.dwpsn	file "../Source/prod.c",line 4522,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4521,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4521| 
	.dwpsn	file "../Source/prod.c",line 4522,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4521,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4521| 
        B         $C$L159,HI            ; [CPU_] |4521| 
        ; branchcc occurs ; [] |4521| 
	.dwpsn	file "../Source/prod.c",line 4524,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4524| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4527,column 5,is_stmt,isa 0
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4527| 
        ; call occurs [#_lcd_clear] ; [] |4527| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_update_units")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4528| 
        ; call occurs [#_update_units] ; [] |4528| 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4529| 
        ; branch occurs ; [] |4529| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4452,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4452| 
        B         $C$L320,LO            ; [CPU_] |4452| 
        ; branchcc occurs ; [] |4452| 
        MOVL      ACC,XAR4              ; [CPU_] |4452| 
        MOVL      XAR0,#66              ; [CPU_] |4452| 
        ADDB      ACC,#2                ; [CPU_] |4452| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4452| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4452| 
        B         $C$L320,LT            ; [CPU_] |4452| 
        ; branchcc occurs ; [] |4452| 
        MOVL      XAR5,XAR4             ; [CPU_] |4452| 
        MOVL      XAR0,#66              ; [CPU_] |4452| 
        CMPB      AL,#4                 ; [CPU_] |4452| 
        ADDB      XAR5,#2               ; [CPU_] |4452| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4452| 
        B         $C$L320,GEQ           ; [CPU_] |4452| 
        ; branchcc occurs ; [] |4452| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4452| 
        CMPB      AH,#2                 ; [CPU_] |4452| 
        B         $C$L320,NEQ           ; [CPU_] |4452| 
        ; branchcc occurs ; [] |4452| 
	.dwpsn	file "../Source/prod.c",line 4459,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4459| 
        MOVL      XAR0,#66              ; [CPU_] |4459| 
	.dwpsn	file "../Source/prod.c",line 4458,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4458| 
	.dwpsn	file "../Source/prod.c",line 4462,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4462| 
	.dwpsn	file "../Source/prod.c",line 4459,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4459| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4459| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4459| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4460| 
        MOV       *-SP[61],#4           ; [CPU_] |4460| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4462,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4462| 
        ; branch occurs ; [] |4462| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4463,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4463| 
        SUBB      XAR4,#24              ; [CPU_U] |4463| 
        MOVZ      AR4,AR4               ; [CPU_] |4463| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4463| 
        MOVL      XAR0,#44              ; [CPU_] |4463| 
        ADDL      XAR4,ACC              ; [CPU_] |4463| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4463| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4465,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4465| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4465| 
	.dwpsn	file "../Source/prod.c",line 4466,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4466| 
        MOV       *XAR7++,AL            ; [CPU_] |4466| 
	.dwpsn	file "../Source/prod.c",line 4467,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4467| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4467| 
        MOV       *XAR4++,AL            ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4468| 
        MOV       *XAR7++,AL            ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4464,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4464| 
        ; branchcc occurs ; [] |4464| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4462,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4462| 
        MOV       PL,AL                 ; [CPU_] |4462| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4462,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4462| 
        MOV       AL,PL                 ; [CPU_] |4462| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4462| 
        B         $C$L161,LT            ; [CPU_] |4462| 
        ; branchcc occurs ; [] |4462| 
        B         $C$L743,UNC           ; [CPU_] |4462| 
        ; branch occurs ; [] |4462| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5407,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5407| 
        B         $C$L320,LO            ; [CPU_] |5407| 
        ; branchcc occurs ; [] |5407| 
	.dwpsn	file "../Source/prod.c",line 5412,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5412| 
        MOVL      XAR0,#66              ; [CPU_] |5412| 
        MOVL      ACC,XAR7              ; [CPU_] |5412| 
        ADDB      ACC,#2                ; [CPU_] |5412| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5412| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GT            ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVB      XAR0,#13              ; [CPU_] |5412| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GT            ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVB      XAR0,#24              ; [CPU_] |5412| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GT            ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVB      XAR0,#35              ; [CPU_] |5412| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GT            ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GEQ           ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVB      XAR0,#14              ; [CPU_] |5412| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GEQ           ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVB      XAR0,#25              ; [CPU_] |5412| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GEQ           ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVB      XAR0,#36              ; [CPU_] |5412| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5412| 
        CMPB      AL,#4                 ; [CPU_] |5412| 
        B         $C$L320,GEQ           ; [CPU_] |5412| 
        ; branchcc occurs ; [] |5412| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5420,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5420| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5420| 
        MOVL      XAR6,ACC              ; [CPU_] |5420| 
        MOV       AL,*XAR7              ; [CPU_] |5420| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5420| 
	.dwpsn	file "../Source/prod.c",line 5421,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5421| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5421| 
        MOVL      XAR6,ACC              ; [CPU_] |5421| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5421| 
        MOV       *XAR4++,AL            ; [CPU_] |5421| 
	.dwpsn	file "../Source/prod.c",line 5422,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5422| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5422| 
        MOVL      XAR6,ACC              ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5420,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5420| 
	.dwpsn	file "../Source/prod.c",line 5422,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5422| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5423,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5423| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5423| 
        MOVL      XAR6,ACC              ; [CPU_] |5423| 
	.dwpsn	file "../Source/prod.c",line 5422,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5423,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5423| 
        MOV       *XAR4++,AL            ; [CPU_] |5423| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5424| 
        ANDB      AL,#0xfe              ; [CPU_] |5424| 
        MOVZ      AR0,AL                ; [CPU_] |5424| 
        MOVL      ACC,XAR5              ; [CPU_] |5424| 
        ADD       ACC,#199 << 4         ; [CPU_] |5424| 
        MOVL      XAR6,ACC              ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5425| 
        ADD       ACC,#199 << 4         ; [CPU_] |5425| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5425| 
        MOVL      XAR0,P                ; [CPU_] |5425| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5425| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5425| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5429,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5429| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5429| 
	.dwpsn	file "../Source/prod.c",line 5430,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5430| 
        MOV       *XAR4++,AL            ; [CPU_] |5430| 
	.dwpsn	file "../Source/prod.c",line 5431,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5431| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5431| 
        MOV       *XAR0++,AL            ; [CPU_] |5431| 
	.dwpsn	file "../Source/prod.c",line 5432,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5432| 
        MOV       *XAR4++,AL            ; [CPU_] |5432| 
	.dwpsn	file "../Source/prod.c",line 5428,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5428| 
        ; branchcc occurs ; [] |5428| 
	.dwpsn	file "../Source/prod.c",line 5435,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5435| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5437,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5437| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5437| 
	.dwpsn	file "../Source/prod.c",line 5438,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5438| 
        MOV       *XAR4++,AL            ; [CPU_] |5438| 
	.dwpsn	file "../Source/prod.c",line 5439,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5439| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5439| 
        MOV       *XAR0++,AL            ; [CPU_] |5439| 
	.dwpsn	file "../Source/prod.c",line 5440,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5440| 
        MOV       *XAR4++,AL            ; [CPU_] |5440| 
	.dwpsn	file "../Source/prod.c",line 5436,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5436| 
        ; branchcc occurs ; [] |5436| 
	.dwpsn	file "../Source/prod.c",line 5419,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5419| 
	.dwpsn	file "../Source/prod.c",line 5422,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5422| 
        ADD       *-SP[61],#11          ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5419,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5419| 
        ADDB      XAR1,#8               ; [CPU_] |5419| 
        ADDB      ACC,#8                ; [CPU_] |5419| 
        SUBB      XAR6,#1               ; [CPU_U] |5419| 
        MOVZ      AR3,AR6               ; [CPU_] |5419| 
        MOVL      P,ACC                 ; [CPU_] |5419| 
        CMP       AR6,#-1               ; [CPU_] |5419| 
        B         $C$L165,NEQ           ; [CPU_] |5419| 
        ; branchcc occurs ; [] |5419| 
        B         $C$L176,UNC           ; [CPU_] |5419| 
        ; branch occurs ; [] |5419| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5344,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5344| 
        B         $C$L320,LO            ; [CPU_] |5344| 
        ; branchcc occurs ; [] |5344| 
	.dwpsn	file "../Source/prod.c",line 5349,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5349| 
        MOVL      XAR0,#66              ; [CPU_] |5349| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5349| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L169,LEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        CMPB      AL,#7                 ; [CPU_] |5349| 
        B         $C$L320,NEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5349| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L170,LEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        CMPB      AL,#7                 ; [CPU_] |5349| 
        B         $C$L320,NEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5349| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L171,LEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        CMPB      AL,#7                 ; [CPU_] |5349| 
        B         $C$L320,NEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5349| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L172,LEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        CMPB      AL,#7                 ; [CPU_] |5349| 
        B         $C$L320,NEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5349| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#13              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#23              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#33              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5360,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5360| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5360| 
        MOVL      XAR5,ACC              ; [CPU_] |5360| 
        MOV       AL,*XAR7              ; [CPU_] |5360| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5361| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5361| 
        MOVL      XAR5,ACC              ; [CPU_] |5361| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5361| 
        MOV       *XAR4++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5362| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5362| 
        MOVL      XAR5,ACC              ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5360,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5362| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5363| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5363| 
        MOVL      XAR5,ACC              ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5363| 
        MOVL      XAR5,P                ; [CPU_] |5363| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5363| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5374,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5374| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5374| 
	.dwpsn	file "../Source/prod.c",line 5375,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5375| 
        MOV       *XAR4++,AL            ; [CPU_] |5375| 
	.dwpsn	file "../Source/prod.c",line 5376,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5376| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5376| 
        MOV       *XAR5++,AL            ; [CPU_] |5376| 
	.dwpsn	file "../Source/prod.c",line 5377,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5377| 
        MOV       *XAR4++,AL            ; [CPU_] |5377| 
	.dwpsn	file "../Source/prod.c",line 5373,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5373| 
        ; branchcc occurs ; [] |5373| 
	.dwpsn	file "../Source/prod.c",line 5383,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5383| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5390,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5390| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5391,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5391| 
        MOV       *XAR4++,AL            ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5392,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5392| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5392| 
        MOV       *XAR5++,AL            ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5393| 
        MOV       *XAR4++,AL            ; [CPU_] |5393| 
	.dwpsn	file "../Source/prod.c",line 5389,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5389| 
        ; branchcc occurs ; [] |5389| 
	.dwpsn	file "../Source/prod.c",line 5359,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5359| 
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5362| 
        ADD       *-SP[61],#10          ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5359,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5359| 
        ADDB      XAR1,#12              ; [CPU_] |5359| 
        ADDB      ACC,#12               ; [CPU_] |5359| 
        SUBB      XAR6,#1               ; [CPU_U] |5359| 
        MOVZ      AR3,AR6               ; [CPU_] |5359| 
        MOVL      P,ACC                 ; [CPU_] |5359| 
        CMP       AR6,#-1               ; [CPU_] |5359| 
        B         $C$L173,NEQ           ; [CPU_] |5359| 
        ; branchcc occurs ; [] |5359| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5400,column 5,is_stmt,isa 0
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5400| 
        ; call occurs [#_ad7738_setcal] ; [] |5400| 
	.dwpsn	file "../Source/prod.c",line 5403,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5403| 
        ; branch occurs ; [] |5403| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5312,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5312| 
        B         $C$L320,LO            ; [CPU_] |5312| 
        ; branchcc occurs ; [] |5312| 
	.dwpsn	file "../Source/prod.c",line 5317,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5317| 
        MOVL      XAR0,#66              ; [CPU_] |5317| 
        MOVL      ACC,XAR7              ; [CPU_] |5317| 
        ADDB      ACC,#2                ; [CPU_] |5317| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5317| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GT            ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GT            ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#8               ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GT            ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#11              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GT            ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#9               ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#12              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVL      ACC,XAR7              ; [CPU_] |5317| 
        MOVL      XAR0,#64              ; [CPU_] |5317| 
        ADDB      ACC,#4                ; [CPU_] |5317| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5317| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#10              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#13              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#6                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5328| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5329,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5329| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5329,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5329| 
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5330| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5330| 
        ADDB      XAR7,#1               ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5331,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5331| 
        MOV       *XAR4++,AL            ; [CPU_] |5331| 
	.dwpsn	file "../Source/prod.c",line 5332,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5332| 
        ADDB      XAR7,#1               ; [CPU_] |5332| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5332| 
	.dwpsn	file "../Source/prod.c",line 5333,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5333| 
	.dwpsn	file "../Source/prod.c",line 5327,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5327| 
	.dwpsn	file "../Source/prod.c",line 5333,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5333| 
	.dwpsn	file "../Source/prod.c",line 5327,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5327| 
        ; branchcc occurs ; [] |5327| 
	.dwpsn	file "../Source/prod.c",line 5337,column 5,is_stmt,isa 0
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5337| 
        ; call occurs [#_lcd_clear] ; [] |5337| 
	.dwpsn	file "../Source/prod.c",line 5338,column 5,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_update_units")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5338| 
        ; call occurs [#_update_units] ; [] |5338| 
	.dwpsn	file "../Source/prod.c",line 5333,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5333| 
	.dwpsn	file "../Source/prod.c",line 5340,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5340| 
        ; branch occurs ; [] |5340| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5291,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5291| 
        B         $C$L320,LO            ; [CPU_] |5291| 
        ; branchcc occurs ; [] |5291| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5296,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5296| 
        MOVB      XAR0,#36              ; [CPU_] |5296| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5296| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5297| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5297| 
        B         $C$L181,NEQ           ; [CPU_] |5297| 
        ; branchcc occurs ; [] |5297| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5299,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5300,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5298,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5298| 
        ; branchcc occurs ; [] |5298| 
	.dwpsn	file "../Source/prod.c",line 5302,column 6,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_update_units")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5302| 
        ; call occurs [#_update_units] ; [] |5302| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5306,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5306| 
	.dwpsn	file "../Source/prod.c",line 5308,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5308| 
        ; branch occurs ; [] |5308| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5250| 
        B         $C$L320,LO            ; [CPU_] |5250| 
        ; branchcc occurs ; [] |5250| 
	.dwpsn	file "../Source/prod.c",line 5256,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5256| 
        ADDB      XAR4,#2               ; [CPU_] |5256| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5256| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5256| 
        MOVZ      AR3,AL                ; [CPU_] |5256| 
	.dwpsn	file "../Source/prod.c",line 5257,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5257| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5257| 
        CMP       AR3,#4096             ; [CPU_] |5257| 
        B         $C$L320,HI            ; [CPU_] |5257| 
        ; branchcc occurs ; [] |5257| 
	.dwpsn	file "../Source/prod.c",line 5263,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5263| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5263| 
        MOVZ      AR7,AR6               ; [CPU_] |5263| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5265,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5265| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5265| 
	.dwpsn	file "../Source/prod.c",line 5264,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5264| 
        ADDB      XAR4,#2               ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5265,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5265| 
	.dwpsn	file "../Source/prod.c",line 5264,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5264| 
        ; branchcc occurs ; [] |5264| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5270,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5270| 
        MOVB      XAR1,#38              ; [CPU_] |5270| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5270| 
	.dwpsn	file "../Source/prod.c",line 5271,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5271| 
        MOVB      XAR1,#40              ; [CPU_] |5271| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5271| 
	.dwpsn	file "../Source/prod.c",line 5272,column 5,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_maf_rst")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5272| 
        ; call occurs [#_maf_rst] ; [] |5272| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5277,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5277| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5277| 
	.dwpsn	file "../Source/prod.c",line 5281,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5277,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5277| 
	.dwpsn	file "../Source/prod.c",line 5278,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5278| 
        LSR       AL,8                  ; [CPU_] |5278| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5278| 
	.dwpsn	file "../Source/prod.c",line 5281,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5281| 
        MOVB      XAR1,#40              ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5282| 
        MOVL      XAR0,#50              ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5281,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5281| 
        ANDB      AL,#0xff              ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5281,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5282| 
        LSR       AL,8                  ; [CPU_] |5282| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5283| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5284| 
        MOV       *-SP[61],#8           ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5287,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5287| 
        ; branch occurs ; [] |5287| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5217,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5217| 
        B         $C$L320,LO            ; [CPU_] |5217| 
        ; branchcc occurs ; [] |5217| 
        MOVL      ACC,XAR4              ; [CPU_] |5217| 
        MOVL      XAR0,#66              ; [CPU_] |5217| 
        ADDB      ACC,#2                ; [CPU_] |5217| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5217| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5217| 
        B         $C$L320,LT            ; [CPU_] |5217| 
        ; branchcc occurs ; [] |5217| 
        MOVL      XAR5,XAR4             ; [CPU_] |5217| 
        MOVL      XAR0,#66              ; [CPU_] |5217| 
        CMPB      AL,#4                 ; [CPU_] |5217| 
        ADDB      XAR5,#2               ; [CPU_] |5217| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5217| 
        B         $C$L320,GEQ           ; [CPU_] |5217| 
        ; branchcc occurs ; [] |5217| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5217| 
        B         $C$L320,LT            ; [CPU_] |5217| 
        ; branchcc occurs ; [] |5217| 
        CMPB      AH,#20                ; [CPU_] |5217| 
        B         $C$L320,GEQ           ; [CPU_] |5217| 
        ; branchcc occurs ; [] |5217| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5227| 
        MOVL      XAR0,#66              ; [CPU_] |5227| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5227| 
        MOVL      XAR0,#80              ; [CPU_] |5227| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5225,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5225| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5227| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5227| 
        B         $C$L318,NEQ           ; [CPU_] |5227| 
        ; branchcc occurs ; [] |5227| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5233,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5233| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5233| 
        MOVB      AL,#10                ; [CPU_] |5233| 
        MOV       T,*-SP[58]            ; [CPU_] |5233| 
        MPYU      ACC,T,AL              ; [CPU_] |5233| 
        ADDL      ACC,XAR6              ; [CPU_] |5233| 
        MOVL      XAR4,ACC              ; [CPU_] |5233| 
        MOVB      XAR0,#42              ; [CPU_] |5233| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5233| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5233| 
	.dwpsn	file "../Source/prod.c",line 5234,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5234| 
        ; call occurs [#_ad7738_setcal] ; [] |5234| 
        MOVL      XAR0,#78              ; [CPU_] |5234| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5234| 
	.dwpsn	file "../Source/prod.c",line 5236,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5236| 
        MOVL      XAR1,ACC              ; [CPU_] |5236| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5236| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5236| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5236| 
	.dwpsn	file "../Source/prod.c",line 5237,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5237| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5237| 
        ; call occurs [#_ad7738_resetvall] ; [] |5237| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5240,column 5,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_update_units")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5240| 
        ; call occurs [#_update_units] ; [] |5240| 
	.dwpsn	file "../Source/prod.c",line 5243,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5243| 
        MOV       AL,*-SP[58]           ; [CPU_] |5243| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5243| 
        MOV       AL,*-SP[57]           ; [CPU_] |5243| 
	.dwpsn	file "../Source/prod.c",line 5244,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5244| 
        MOV       *-SP[61],#4           ; [CPU_] |5244| 
	.dwpsn	file "../Source/prod.c",line 5246,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5246| 
        ; branch occurs ; [] |5246| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5181,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5181| 
        B         $C$L320,LO            ; [CPU_] |5181| 
        ; branchcc occurs ; [] |5181| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5187,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5187| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5189,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5189| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5189| 
	.dwpsn	file "../Source/prod.c",line 5190,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5190| 
        MOV       *XAR5++,AL            ; [CPU_] |5190| 
	.dwpsn	file "../Source/prod.c",line 5191,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5191| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5191| 
        MOV       *XAR1++,AL            ; [CPU_] |5191| 
	.dwpsn	file "../Source/prod.c",line 5192,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5192| 
        MOV       *XAR5++,AL            ; [CPU_] |5192| 
	.dwpsn	file "../Source/prod.c",line 5188,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5188| 
        ; branchcc occurs ; [] |5188| 
	.dwpsn	file "../Source/prod.c",line 5186,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5192,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5192| 
	.dwpsn	file "../Source/prod.c",line 5186,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5186| 
        ; branchcc occurs ; [] |5186| 
	.dwpsn	file "../Source/prod.c",line 5197,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5197| 
        MOVL      ACC,XAR4              ; [CPU_] |5197| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5197| 
        MOVL      XAR6,ACC              ; [CPU_] |5197| 
        MOV       AL,*XAR7              ; [CPU_] |5197| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5197| 
	.dwpsn	file "../Source/prod.c",line 5198,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5198| 
        MOVL      XAR6,XAR4             ; [CPU_] |5198| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5198| 
        MOVL      XAR4,ACC              ; [CPU_] |5198| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5198| 
        ANDB      AL,#0xff              ; [CPU_] |5198| 
        MOV       *XAR5++,AL            ; [CPU_] |5198| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5199| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5199| 
        MOVL      XAR4,ACC              ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5197,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5197| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5199| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5200,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5200| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5200| 
        MOVL      XAR4,ACC              ; [CPU_] |5200| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5200| 
        LSR       AL,8                  ; [CPU_] |5200| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5200| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5199| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5205| 
        ; call occurs [#_ad7738_setcal] ; [] |5205| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_velf_rst")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5206| 
        ; call occurs [#_velf_rst] ; [] |5206| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5210,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5210| 
        ; branch occurs ; [] |5210| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5142,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5142| 
        B         $C$L320,LO            ; [CPU_] |5142| 
        ; branchcc occurs ; [] |5142| 
        MOVL      ACC,XAR4              ; [CPU_] |5142| 
        MOVL      XAR0,#66              ; [CPU_] |5142| 
        ADDB      ACC,#2                ; [CPU_] |5142| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5142| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5142| 
        B         $C$L320,LT            ; [CPU_] |5142| 
        ; branchcc occurs ; [] |5142| 
        MOVL      XAR5,XAR4             ; [CPU_] |5142| 
        MOVL      XAR0,#66              ; [CPU_] |5142| 
        CMPB      AL,#20                ; [CPU_] |5142| 
        ADDB      XAR5,#2               ; [CPU_] |5142| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5142| 
        B         $C$L320,GEQ           ; [CPU_] |5142| 
        ; branchcc occurs ; [] |5142| 
	.dwpsn	file "../Source/prod.c",line 5146,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5146| 
	.dwpsn	file "../Source/prod.c",line 5147,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5147| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5149| 
	.dwpsn	file "../Source/prod.c",line 5147,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5147| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5149| 
        ADDB      ACC,#2                ; [CPU_] |5149| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5149| 
        MOVL      XAR0,#40              ; [CPU_] |5149| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5149| 
        MOV       T,*-SP[57]            ; [CPU_] |5149| 
        MOVB      AL,#152               ; [CPU_] |5149| 
        MPYU      ACC,T,AL              ; [CPU_] |5149| 
        ADDL      ACC,XAR6              ; [CPU_] |5149| 
        ADDB      ACC,#224              ; [CPU_] |5149| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5149| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5151,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5151| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5151| 
	.dwpsn	file "../Source/prod.c",line 5152,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5152| 
        MOV       *XAR5++,AL            ; [CPU_] |5152| 
	.dwpsn	file "../Source/prod.c",line 5153,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5153| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5153| 
        MOV       *XAR7++,AL            ; [CPU_] |5153| 
	.dwpsn	file "../Source/prod.c",line 5154,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5154| 
        MOV       *XAR5++,AL            ; [CPU_] |5154| 
	.dwpsn	file "../Source/prod.c",line 5150,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5150| 
        ; branchcc occurs ; [] |5150| 
	.dwpsn	file "../Source/prod.c",line 5159,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5159| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5159| 
        MOVB      AL,#152               ; [CPU_] |5159| 
        MPYU      ACC,T,AL              ; [CPU_] |5159| 
        ADDL      ACC,XAR6              ; [CPU_] |5159| 
        MOVL      XAR1,ACC              ; [CPU_] |5159| 
        MOVB      XAR0,#125             ; [CPU_] |5159| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5159| 
        CMPB      AL,#247               ; [CPU_] |5159| 
        B         $C$L193,NEQ           ; [CPU_] |5159| 
        ; branchcc occurs ; [] |5159| 
	.dwpsn	file "../Source/prod.c",line 5161,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5161| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5161| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5161| 
        MOV       AL,#0                 ; [CPU_] |5161| 
        MOV       AH,#17096             ; [CPU_] |5161| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5161| 
        ; call occurs [#FS$$DIV] ; [] |5161| 
        MOVB      XAR0,#126             ; [CPU_] |5161| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5161| 
        MOVL      XAR0,#40              ; [CPU_] |5161| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5161| 
	.dwpsn	file "../Source/prod.c",line 5164,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5164| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5165,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5165| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5165| 
        CMPL      ACC,XAR6              ; [CPU_] |5165| 
        B         $C$L192,NEQ           ; [CPU_] |5165| 
        ; branchcc occurs ; [] |5165| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5168,column 8,is_stmt,isa 0
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5168| 
        ; call occurs [#_ad7738_setcal] ; [] |5168| 
        MOVL      XAR0,#78              ; [CPU_] |5168| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5168| 
	.dwpsn	file "../Source/prod.c",line 5169,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5169| 
        MOVL      XAR4,ACC              ; [CPU_] |5169| 
        MOVL      XAR0,#88              ; [CPU_] |5169| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5169| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5169| 
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5169| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5169| 
        MOVL      XAR0,#88              ; [CPU_] |5169| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5169| 
	.dwpsn	file "../Source/prod.c",line 5170,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5170| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5170| 
        ; call occurs [#_ad7738_resetvall] ; [] |5170| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5164,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5164| 
        ADDB      XAR1,#10              ; [CPU_] |5164| 
        MOV       AL,*-SP[58]           ; [CPU_] |5164| 
        CMPB      AL,#4                 ; [CPU_] |5164| 
        B         $C$L191,LO            ; [CPU_] |5164| 
        ; branchcc occurs ; [] |5164| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5153,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5153| 
	.dwpsn	file "../Source/prod.c",line 5177,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5177| 
        ; branch occurs ; [] |5177| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5041,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5041| 
        B         $C$L320,LO            ; [CPU_] |5041| 
        ; branchcc occurs ; [] |5041| 
        MOVL      ACC,XAR4              ; [CPU_] |5041| 
        MOVL      XAR0,#66              ; [CPU_] |5041| 
        ADDB      ACC,#2                ; [CPU_] |5041| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5041| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5041| 
        B         $C$L320,LT            ; [CPU_] |5041| 
        ; branchcc occurs ; [] |5041| 
        MOVL      XAR5,XAR4             ; [CPU_] |5041| 
        MOVL      XAR0,#66              ; [CPU_] |5041| 
        CMPB      AL,#20                ; [CPU_] |5041| 
        ADDB      XAR5,#2               ; [CPU_] |5041| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5041| 
        B         $C$L320,GEQ           ; [CPU_] |5041| 
        ; branchcc occurs ; [] |5041| 
	.dwpsn	file "../Source/prod.c",line 5046,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5046| 
        MOVL      XAR0,#66              ; [CPU_] |5046| 
        MOV       *-SP[57],AL           ; [CPU_] |5046| 
        ADDB      XAR5,#2               ; [CPU_] |5046| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5046| 
	.dwpsn	file "../Source/prod.c",line 5047,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5047| 
        MOV       AL,AR6                ; [CPU_] |5047| 
        CMPB      AL,#247               ; [CPU_] |5047| 
        B         $C$L195,EQ            ; [CPU_] |5047| 
        ; branchcc occurs ; [] |5047| 
	.dwpsn	file "../Source/prod.c",line 5049,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5049| 
        MOVL      XAR0,#66              ; [CPU_] |5049| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5049| 
        MOVL      XAR0,#40              ; [CPU_] |5049| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5049| 
        MOVB      AL,#152               ; [CPU_] |5049| 
        MOV       T,*-SP[57]            ; [CPU_] |5049| 
        MPYU      ACC,T,AL              ; [CPU_] |5049| 
        ADDL      ACC,XAR7              ; [CPU_] |5049| 
        MOVL      XAR4,ACC              ; [CPU_] |5049| 
        MOVB      XAR0,#124             ; [CPU_] |5049| 
        MOV       PH,#0                 ; [CPU_] |5049| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5049| 
        ANDB      AL,#0xf0              ; [CPU_] |5049| 
        MOVU      ACC,AL                ; [CPU_] |5049| 
        MOVL      XAR7,ACC              ; [CPU_] |5049| 
        MOV       AL,AR6                ; [CPU_] |5049| 
        ANDB      AL,#240               ; [CPU_] |5049| 
        MOV       PL,AL                 ; [CPU_] |5049| 
        MOVL      ACC,XAR7              ; [CPU_] |5049| 
        CMPL      ACC,P                 ; [CPU_] |5049| 
        B         $C$L320,NEQ           ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5055,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5055| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5055| 
        MOVB      AL,#152               ; [CPU_] |5055| 
        MOV       T,*-SP[57]            ; [CPU_] |5055| 
        MPYU      ACC,T,AL              ; [CPU_] |5055| 
        ADDL      ACC,XAR7              ; [CPU_] |5055| 
        MOVL      XAR1,ACC              ; [CPU_] |5055| 
        MOVB      XAR0,#125             ; [CPU_] |5055| 
	.dwpsn	file "../Source/prod.c",line 5056,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5056| 
	.dwpsn	file "../Source/prod.c",line 5055,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5055| 
	.dwpsn	file "../Source/prod.c",line 5056,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5056| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5056| 
	.dwpsn	file "../Source/prod.c",line 5057,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5057| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5057| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5057| 
        MOV       AL,AR6                ; [CPU_] |5057| 
        MOV       *-SP[61],#4           ; [CPU_] |5057| 
	.dwpsn	file "../Source/prod.c",line 5059,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5059| 
        B         $C$L205,EQ            ; [CPU_] |5059| 
        ; branchcc occurs ; [] |5059| 
	.dwpsn	file "../Source/prod.c",line 5062,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5062| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5062| 
        B         $C$L204,EQ            ; [CPU_] |5062| 
        ; branchcc occurs ; [] |5062| 
	.dwpsn	file "../Source/prod.c",line 5066,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5066| 
        CMPB      AL,#34                ; [CPU_] |5066| 
        B         $C$L196,GT            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        CMPB      AL,#34                ; [CPU_] |5066| 
        B         $C$L200,EQ            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        CMPB      AL,#16                ; [CPU_] |5066| 
        B         $C$L203,EQ            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        CMPB      AL,#17                ; [CPU_] |5066| 
        B         $C$L202,EQ            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        B         $C$L204,UNC           ; [CPU_] |5066| 
        ; branch occurs ; [] |5066| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5066| 
        B         $C$L198,EQ            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        CMPB      AL,#36                ; [CPU_] |5066| 
        B         $C$L204,NEQ           ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5107,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5107| 
        B         $C$L197,EQ            ; [CPU_] |5107| 
        ; branchcc occurs ; [] |5107| 
        CMPB      AL,#35                ; [CPU_] |5107| 
        B         $C$L207,NEQ           ; [CPU_] |5107| 
        ; branchcc occurs ; [] |5107| 
	.dwpsn	file "../Source/prod.c",line 5112,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5112| 
        MOV       AH,#15820             ; [CPU_] |5112| 
	.dwpsn	file "../Source/prod.c",line 5113,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5113| 
        ; branch occurs ; [] |5113| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5109,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5109| 
        MOV       AH,#15649             ; [CPU_] |5109| 
	.dwpsn	file "../Source/prod.c",line 5110,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5110| 
        ; branch occurs ; [] |5110| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5095,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5095| 
        B         $C$L199,EQ            ; [CPU_] |5095| 
        ; branchcc occurs ; [] |5095| 
        CMPB      AL,#36                ; [CPU_] |5095| 
        B         $C$L207,NEQ           ; [CPU_] |5095| 
        ; branchcc occurs ; [] |5095| 
	.dwpsn	file "../Source/prod.c",line 5100,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5100| 
        MOV       AH,#16672             ; [CPU_] |5100| 
	.dwpsn	file "../Source/prod.c",line 5101,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5101| 
        ; branch occurs ; [] |5101| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5097,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5097| 
        MOV       AH,#16073             ; [CPU_] |5097| 
	.dwpsn	file "../Source/prod.c",line 5098,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5098| 
        ; branch occurs ; [] |5098| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5083,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5083| 
        B         $C$L201,EQ            ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        CMPB      AL,#36                ; [CPU_] |5083| 
        B         $C$L207,NEQ           ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
	.dwpsn	file "../Source/prod.c",line 5088,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5088| 
        MOV       AH,#16843             ; [CPU_] |5088| 
	.dwpsn	file "../Source/prod.c",line 5089,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5089| 
        ; branch occurs ; [] |5089| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5085,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5085| 
        MOV       AH,#16418             ; [CPU_] |5085| 
	.dwpsn	file "../Source/prod.c",line 5086,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5086| 
        ; branch occurs ; [] |5086| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5076,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5076| 
        B         $C$L207,NEQ           ; [CPU_] |5076| 
        ; branchcc occurs ; [] |5076| 
	.dwpsn	file "../Source/prod.c",line 5077,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5077| 
        MOV       AH,#16397             ; [CPU_] |5077| 
        B         $C$L206,UNC           ; [CPU_] |5077| 
        ; branch occurs ; [] |5077| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5069,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5069| 
        B         $C$L207,NEQ           ; [CPU_] |5069| 
        ; branchcc occurs ; [] |5069| 
	.dwpsn	file "../Source/prod.c",line 5070,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5070| 
        MOV       AH,#16104             ; [CPU_] |5070| 
        B         $C$L206,UNC           ; [CPU_] |5070| 
        ; branch occurs ; [] |5070| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5064,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5064| 
	.dwpsn	file "../Source/prod.c",line 5065,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5065| 
        ; branch occurs ; [] |5065| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5060,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5060| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5060| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5060| 
        MOV       AL,#0                 ; [CPU_] |5060| 
        MOV       AH,#17096             ; [CPU_] |5060| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5060| 
        ; call occurs [#FS$$DIV] ; [] |5060| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5060| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5126,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5126| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5127,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5127| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5127| 
        CMPL      ACC,XAR6              ; [CPU_] |5127| 
        B         $C$L209,NEQ           ; [CPU_] |5127| 
        ; branchcc occurs ; [] |5127| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5128,column 7,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_update_units")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5128| 
        ; call occurs [#_update_units] ; [] |5128| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5130,column 7,is_stmt,isa 0
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5130| 
        ; call occurs [#_ad7738_setcal] ; [] |5130| 
        MOVL      XAR0,#78              ; [CPU_] |5130| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5130| 
	.dwpsn	file "../Source/prod.c",line 5131,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5131| 
        MOVL      XAR4,ACC              ; [CPU_] |5131| 
        MOVL      XAR0,#88              ; [CPU_] |5131| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5131| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5131| 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5131| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5131| 
        MOVL      XAR0,#88              ; [CPU_] |5131| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5131| 
	.dwpsn	file "../Source/prod.c",line 5132,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5132| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5132| 
        ; call occurs [#_ad7738_resetvall] ; [] |5132| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5126,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5126| 
        ADDB      XAR1,#10              ; [CPU_] |5126| 
        MOV       AL,*-SP[58]           ; [CPU_] |5126| 
        CMPB      AL,#4                 ; [CPU_] |5126| 
        B         $C$L208,LO            ; [CPU_] |5126| 
        ; branchcc occurs ; [] |5126| 
        B         $C$L304,UNC           ; [CPU_] |5126| 
        ; branch occurs ; [] |5126| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5013,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5013| 
        B         $C$L320,LO            ; [CPU_] |5013| 
        ; branchcc occurs ; [] |5013| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5013| 
        MOVL      XAR0,#66              ; [CPU_] |5013| 
        MOVL      ACC,XAR7              ; [CPU_] |5013| 
        ADDB      ACC,#2                ; [CPU_] |5013| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5013| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5013| 
        B         $C$L320,LT            ; [CPU_] |5013| 
        ; branchcc occurs ; [] |5013| 
        ADDB      XAR4,#2               ; [CPU_] |5013| 
        MOVL      XAR0,#66              ; [CPU_] |5013| 
        CMPB      AL,#20                ; [CPU_] |5013| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5013| 
        B         $C$L320,GEQ           ; [CPU_] |5013| 
        ; branchcc occurs ; [] |5013| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5013| 
        MOVB      AH,#4                 ; [CPU_] |5013| 
        ADD       AH,AR6                ; [CPU_] |5013| 
        CMP       AH,*-SP[59]           ; [CPU_] |5013| 
        B         $C$L320,HI            ; [CPU_] |5013| 
        ; branchcc occurs ; [] |5013| 
	.dwpsn	file "../Source/prod.c",line 5018,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5018| 
	.dwpsn	file "../Source/prod.c",line 5019,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5019| 
        MOVL      XAR0,#66              ; [CPU_] |5019| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |5019| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5019| 
        MOV       AL,*-SP[57]           ; [CPU_] |5019| 
        MOV       @_buff$1+2,AL         ; [CPU_] |5019| 
        MOV       AL,AR6                ; [CPU_] |5019| 
	.dwpsn	file "../Source/prod.c",line 5021,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5021| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |5021| 
        B         $C$L211,HIS           ; [CPU_] |5021| 
        ; branchcc occurs ; [] |5021| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5021| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 5023,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5023| 
        MOVB      XAR5,#0               ; [CPU_] |5023| 
	.dwpsn	file "../Source/prod.c",line 5023,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |5023| 
        ; branchcc occurs ; [] |5023| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 5024,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5023,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |5023| 
	.dwpsn	file "../Source/prod.c",line 5024,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5023,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5023| 
	.dwpsn	file "../Source/prod.c",line 5024,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5023,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |5023| 
        B         $C$L212,HI            ; [CPU_] |5023| 
        ; branchcc occurs ; [] |5023| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 5026,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5026| 
        MOVB      AL,#152               ; [CPU_] |5026| 
        MOV       T,*-SP[57]            ; [CPU_] |5026| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5026| 
        MPYU      P,T,AL                ; [CPU_] |5026| 
        MOVL      ACC,P                 ; [CPU_] |5026| 
        ADD       ACC,AR5               ; [CPU_] |5026| 
        ADDL      ACC,XAR6              ; [CPU_] |5026| 
        MOVL      XAR4,ACC              ; [CPU_] |5026| 
        MOVB      XAR0,#98              ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5030,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5030| 
	.dwpsn	file "../Source/prod.c",line 5026,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5030,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |5030| 
        MOVL      XAR4,ACC              ; [CPU_] |5030| 
        MOVL      XAR1,ACC              ; [CPU_] |5030| 
        ADDB      XAR4,#98              ; [CPU_] |5030| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_strlen")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |5030| 
        ; call occurs [#_strlen] ; [] |5030| 
	.dwpsn	file "../Source/prod.c",line 5031,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5031| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5031| 
	.dwpsn	file "../Source/prod.c",line 5032,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5032| 
	.dwpsn	file "../Source/prod.c",line 5031,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |5031| 
	.dwpsn	file "../Source/prod.c",line 5032,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5032,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5032| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5033,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5032,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5032| 
	.dwpsn	file "../Source/prod.c",line 5033,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |5033| 
        INC       *-SP[61]              ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5032,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5032| 
        B         $C$L214,HI            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        B         $C$L304,UNC           ; [CPU_] |5032| 
        ; branch occurs ; [] |5032| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5571,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5571| 
        B         $C$L320,LO            ; [CPU_] |5571| 
        ; branchcc occurs ; [] |5571| 
	.dwpsn	file "../Source/prod.c",line 5576,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5576| 
	.dwpsn	file "../Source/prod.c",line 5577,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5577| 
	.dwpsn	file "../Source/prod.c",line 5576,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5576| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5576| 
        MOV       *-SP[57],AL           ; [CPU_] |5576| 
	.dwpsn	file "../Source/prod.c",line 5577,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5577| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5577| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5577| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5579| 
        SUBB      XAR5,#24              ; [CPU_U] |5579| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5579| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5581,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5581| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5581| 
	.dwpsn	file "../Source/prod.c",line 5582,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5582| 
        MOV       *XAR1++,AL            ; [CPU_] |5582| 
	.dwpsn	file "../Source/prod.c",line 5583,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5583| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5583| 
        MOV       *XAR5++,AL            ; [CPU_] |5583| 
	.dwpsn	file "../Source/prod.c",line 5584,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5584| 
        MOV       *XAR1++,AL            ; [CPU_] |5584| 
	.dwpsn	file "../Source/prod.c",line 5580,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5580| 
        ; branchcc occurs ; [] |5580| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5588,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5588| 
        B         $C$L320,HIS           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
        MOVL      XAR0,#40              ; [CPU_] |5588| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5588| 
        MOVB      AL,#12                ; [CPU_] |5588| 
        MOV       T,*-SP[57]            ; [CPU_] |5588| 
        MPYU      ACC,T,AL              ; [CPU_] |5588| 
        ADDL      ACC,XAR6              ; [CPU_] |5588| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5588| 
        MOVL      XAR4,ACC              ; [CPU_] |5588| 
        MOVL      XAR0,#88              ; [CPU_] |5588| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5588| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5588| 
        CMPB      AL,#7                 ; [CPU_] |5588| 
        B         $C$L320,NEQ           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5588| 
        MOV       *-SP[47],#0           ; [CPU_] |5588| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5588| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5588| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5588| 
        ; call occurs [#FS$$CMP] ; [] |5588| 
        CMPB      AL,#0                 ; [CPU_] |5588| 
        B         $C$L217,GEQ           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
        MOV       *-SP[47],#1           ; [CPU_] |5588| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
        MOV       AL,#0                 ; [CPU_] |5588| 
        MOV       AH,#16672             ; [CPU_] |5588| 
        MOV       *-SP[47],#0           ; [CPU_] |5588| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5588| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5588| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5588| 
        ; call occurs [#FS$$CMP] ; [] |5588| 
        CMPB      AL,#0                 ; [CPU_] |5588| 
        B         $C$L218,LEQ           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
        MOV       *-SP[47],#1           ; [CPU_] |5588| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
	.dwpsn	file "../Source/prod.c",line 5595,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5595| 
        MOV       AH,#0                 ; [CPU_] |5595| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5595| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5595| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5595| 
        ; call occurs [#FS$$CMP] ; [] |5595| 
        CMPB      AL,#0                 ; [CPU_] |5595| 
        B         $C$L219,GEQ           ; [CPU_] |5595| 
        ; branchcc occurs ; [] |5595| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5595| 
        MOVL      XAR0,#88              ; [CPU_] |5595| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5595| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5595| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5595| 
        B         $C$L220,UNC           ; [CPU_] |5595| 
        ; branch occurs ; [] |5595| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5595| 
        MOVL      XAR0,#88              ; [CPU_] |5595| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5595| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5595| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5595| 
$C$L220:    
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5595| 
        ; call occurs [#FS$$MPY] ; [] |5595| 
        MOVL      XAR0,#88              ; [CPU_] |5595| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5595| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5595| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5595| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5595| 
        ; call occurs [#FS$$ADD] ; [] |5595| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5595| 
        ; call occurs [#FS$$TOLL] ; [] |5595| 
	.dwpsn	file "../Source/prod.c",line 5602,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5602| 
	.dwpsn	file "../Source/prod.c",line 5595,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5595| 
	.dwpsn	file "../Source/prod.c",line 5583,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5583| 
	.dwpsn	file "../Source/prod.c",line 5595,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5595| 
	.dwpsn	file "../Source/prod.c",line 5602,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5602| 
        CMP64     ACC:P                 ; [CPU_] |5602| 
        B         $C$L222,LEQ           ; [CPU_] |5602| 
        ; branchcc occurs ; [] |5602| 
	.dwpsn	file "../Source/prod.c",line 5604,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5604| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5604| 
        MOV       *-SP[2],#0            ; [CPU_] |5604| 
        MOV       *-SP[1],#0            ; [CPU_] |5604| 
        MOVL      P,*-SP[32]            ; [CPU_] |5604| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5604| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$722, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5604| 
        ; call occurs [#LL$$CMP] ; [] |5604| 
        CMPB      AL,#0                 ; [CPU_] |5604| 
        B         $C$L221,GEQ           ; [CPU_] |5604| 
        ; branchcc occurs ; [] |5604| 
	.dwpsn	file "../Source/prod.c",line 5607,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5607| 
        MOV       *-SP[35],AL           ; [CPU_] |5607| 
        B         $C$L223,UNC           ; [CPU_] |5607| 
        ; branch occurs ; [] |5607| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5605,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5605| 
	.dwpsn	file "../Source/prod.c",line 5606,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5606| 
        ; branch occurs ; [] |5606| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5603,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5603| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5610,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5610| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5610| 
        ; call occurs [#_mcbsp_xmit] ; [] |5610| 
	.dwpsn	file "../Source/prod.c",line 5611,column 5,is_stmt,isa 0
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_latch_dac")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5611| 
        ; call occurs [#_latch_dac] ; [] |5611| 
	.dwpsn	file "../Source/prod.c",line 5614,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5614| 
        ANDB      AL,#0xff              ; [CPU_] |5614| 
        MOV       *XAR1++,AL            ; [CPU_] |5614| 
	.dwpsn	file "../Source/prod.c",line 5615,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5615| 
        LSR       AL,8                  ; [CPU_] |5615| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5615| 
	.dwpsn	file "../Source/prod.c",line 5618,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5618| 
        ; branch occurs ; [] |5618| 
$C$L224:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5507,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5507| 
        B         $C$L320,LO            ; [CPU_] |5507| 
        ; branchcc occurs ; [] |5507| 
	.dwpsn	file "../Source/prod.c",line 5512,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5512| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5512| 
$C$L226:    
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5512| 
        ; call occurs [#_ad7738_resetvall] ; [] |5512| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5515,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5515| 
        MOVL      XAR0,#66              ; [CPU_] |5515| 
        ADDB      ACC,#2                ; [CPU_] |5515| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5515| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5515| 
        ANDB      AL,#0x0f              ; [CPU_] |5515| 
	.dwpsn	file "../Source/prod.c",line 5517,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5517| 
        ; branch occurs ; [] |5517| 
$C$L228:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5493,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5493| 
        B         $C$L320,LO            ; [CPU_] |5493| 
        ; branchcc occurs ; [] |5493| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5498| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5498| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5498| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5498| 
	.dwpsn	file "../Source/prod.c",line 5503,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5503| 
        ; branch occurs ; [] |5503| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5557,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5557| 
        B         $C$L320,LO            ; [CPU_] |5557| 
        ; branchcc occurs ; [] |5557| 
	.dwpsn	file "../Source/prod.c",line 5562,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5562| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5562| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5562| 
        ; call occurs [#_shunt_switch] ; [] |5562| 
	.dwpsn	file "../Source/prod.c",line 5567,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5567| 
        ; branch occurs ; [] |5567| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5541,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5541| 
        B         $C$L320,LO            ; [CPU_] |5541| 
        ; branchcc occurs ; [] |5541| 
	.dwpsn	file "../Source/prod.c",line 5546,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5546| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5546| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5546| 
        ; call occurs [#_ad7738_resettare] ; [] |5546| 
	.dwpsn	file "../Source/prod.c",line 5547,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5547| 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5547| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5547| 
	.dwpsn	file "../Source/prod.c",line 5548,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5548| 
	.dwpsn	file "../Source/prod.c",line 5553,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5553| 
        ; branch occurs ; [] |5553| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5521,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5521| 
        B         $C$L320,LO            ; [CPU_] |5521| 
        ; branchcc occurs ; [] |5521| 
	.dwpsn	file "../Source/prod.c",line 5526,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5526| 
	.dwpsn	file "../Source/prod.c",line 5527,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5527| 
$C$L232:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5528,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5528| 
        B         $C$L233,EQ            ; [CPU_] |5528| 
        ; branchcc occurs ; [] |5528| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5529,column 7,is_stmt,isa 0
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5529| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5529| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5527,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5527| 
	.dwpsn	file "../Source/prod.c",line 5531,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5531| 
        MOV       *-SP[47],AL           ; [CPU_] |5531| 
	.dwpsn	file "../Source/prod.c",line 5527,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5527| 
        CMPB      AL,#4                 ; [CPU_] |5527| 
        B         $C$L232,LT            ; [CPU_] |5527| 
        ; branchcc occurs ; [] |5527| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5535,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5535| 
        ANDB      AL,#0x0f              ; [CPU_] |5535| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5535| 
        MOVL      XAR0,#66              ; [CPU_] |5535| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5535| 
	.dwpsn	file "../Source/prod.c",line 5537,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5537| 
        ; branch occurs ; [] |5537| 
$C$L235:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5478,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5478| 
        B         $C$L320,LO            ; [CPU_] |5478| 
        ; branchcc occurs ; [] |5478| 
	.dwpsn	file "../Source/prod.c",line 5483,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5483| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5483| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5483| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5483| 
	.dwpsn	file "../Source/prod.c",line 5489,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5489| 
        ; branch occurs ; [] |5489| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5455,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5455| 
        B         $C$L239,LO            ; [CPU_] |5455| 
        ; branchcc occurs ; [] |5455| 
	.dwpsn	file "../Source/prod.c",line 5467,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5467| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5467| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5467| 
        ; call occurs [#_ad7738_resettare] ; [] |5467| 
	.dwpsn	file "../Source/prod.c",line 5468,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5468| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5468| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5468| 
	.dwpsn	file "../Source/prod.c",line 5469,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5469| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5469| 
        ; call occurs [#_ad7738_resetvall] ; [] |5469| 
	.dwpsn	file "../Source/prod.c",line 5472,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5472| 
        MOVL      ACC,XAR1              ; [CPU_] |5472| 
        ADDB      ACC,#2                ; [CPU_] |5472| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5472| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5472| 
        ANDB      AL,#0xff              ; [CPU_] |5472| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5472| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5472| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5470,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5470| 
	.dwpsn	file "../Source/prod.c",line 5474,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5474| 
        ; branch occurs ; [] |5474| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5457,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5457| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5457| 
        ; call occurs [#_ad7738_resettare] ; [] |5457| 
	.dwpsn	file "../Source/prod.c",line 5458,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5458| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5458| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5458| 
	.dwpsn	file "../Source/prod.c",line 5459,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5459| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5459| 
        ; call occurs [#_ad7738_resetvall] ; [] |5459| 
	.dwpsn	file "../Source/prod.c",line 5462,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5462| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5462| 
	.dwpsn	file "../Source/prod.c",line 5464,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5464| 
        ; branch occurs ; [] |5464| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5630,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5630| 
        MOV       *-SP[47],#0           ; [CPU_] |5630| 
	.dwpsn	file "../Source/prod.c",line 5631,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5631| 
        ; branchcc occurs ; [] |5631| 
	.dwpsn	file "../Source/prod.c",line 5633,column 6,is_stmt,isa 0
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5633| 
        ; call occurs [#_lcd_clear] ; [] |5633| 
	.dwpsn	file "../Source/prod.c",line 5634,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5634| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5634| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5634| 
        ; call occurs [#_lcd_puts] ; [] |5634| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5637,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5637| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_delay_us")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5637| 
        ; call occurs [#_delay_us] ; [] |5637| 
	.dwpsn	file "../Source/prod.c",line 5636,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5636| 
        ; branchcc occurs ; [] |5636| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5641,column 6,is_stmt,isa 0
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_conf_write")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5641| 
        ; call occurs [#_conf_write] ; [] |5641| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5644,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5644| 
        B         $C$L242,NEQ           ; [CPU_] |5644| 
        ; branchcc occurs ; [] |5644| 
	.dwpsn	file "../Source/prod.c",line 5645,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5645| 
        MOVB      AL,#16                ; [CPU_] |5645| 
        SPM       #0                    ; [CPU_] 
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5645| 
        ; call occurs [#_lcd_puts] ; [] |5645| 
	.dwpsn	file "../Source/prod.c",line 5646,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5646| 
	.dwpsn	file "../Source/prod.c",line 5647,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5647| 
        ; branch occurs ; [] |5647| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5648,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5648| 
        MOVB      AL,#16                ; [CPU_] |5648| 
        SPM       #0                    ; [CPU_] 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5648| 
        ; call occurs [#_lcd_puts] ; [] |5648| 
	.dwpsn	file "../Source/prod.c",line 5649,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5649| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5653,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5653| 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_delay_us")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5653| 
        ; call occurs [#_delay_us] ; [] |5653| 
	.dwpsn	file "../Source/prod.c",line 5652,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5652| 
        ; branchcc occurs ; [] |5652| 
        B         $C$L316,UNC           ; [CPU_] |5652| 
        ; branch occurs ; [] |5652| 
$C$L245:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4400,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4400| 
        B         $C$L320,LO            ; [CPU_] |4400| 
        ; branchcc occurs ; [] |4400| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4400| 
        MOVL      XAR0,#66              ; [CPU_] |4400| 
        MOVL      ACC,XAR7              ; [CPU_] |4400| 
        ADDB      ACC,#2                ; [CPU_] |4400| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4400| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4400| 
        B         $C$L320,LT            ; [CPU_] |4400| 
        ; branchcc occurs ; [] |4400| 
        ADDB      XAR4,#2               ; [CPU_] |4400| 
        MOVL      XAR0,#66              ; [CPU_] |4400| 
        CMPB      AL,#4                 ; [CPU_] |4400| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4400| 
        B         $C$L320,GEQ           ; [CPU_] |4400| 
        ; branchcc occurs ; [] |4400| 
	.dwpsn	file "../Source/prod.c",line 4405,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4405| 
	.dwpsn	file "../Source/prod.c",line 4406,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4406| 
	.dwpsn	file "../Source/prod.c",line 4409,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4409| 
	.dwpsn	file "../Source/prod.c",line 4406,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4406| 
	.dwpsn	file "../Source/prod.c",line 4409,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4409| 
        ADDB      ACC,#2                ; [CPU_] |4409| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4409| 
        MOVL      XAR0,#40              ; [CPU_] |4409| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4409| 
        MOV       T,*-SP[58]            ; [CPU_] |4409| 
        MOVB      AL,#10                ; [CPU_] |4409| 
        MPYU      ACC,T,AL              ; [CPU_] |4409| 
        ADDL      ACC,XAR6              ; [CPU_] |4409| 
        ADDB      ACC,#46               ; [CPU_] |4409| 
        MOVL      XAR4,ACC              ; [CPU_] |4409| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4411,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4411| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4411| 
        ADDB      XAR7,#1               ; [CPU_] |4411| 
	.dwpsn	file "../Source/prod.c",line 4412,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4412| 
        ADD       *XAR4++,AL            ; [CPU_] |4412| 
	.dwpsn	file "../Source/prod.c",line 4410,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4410| 
        ; branchcc occurs ; [] |4410| 
	.dwpsn	file "../Source/prod.c",line 4415,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4415| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4415| 
        MOVB      AL,#10                ; [CPU_] |4415| 
        MPYU      ACC,T,AL              ; [CPU_] |4415| 
        ADDL      ACC,XAR6              ; [CPU_] |4415| 
        MOVL      XAR5,ACC              ; [CPU_] |4415| 
        ADDB      ACC,#48               ; [CPU_] |4415| 
        MOVL      XAR4,ACC              ; [CPU_] |4415| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4415| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4417,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4417| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4417| 
        ADDB      XAR7,#1               ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4418,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4418| 
        ADD       *XAR4++,AL            ; [CPU_] |4418| 
	.dwpsn	file "../Source/prod.c",line 4416,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4416| 
        ; branchcc occurs ; [] |4416| 
	.dwpsn	file "../Source/prod.c",line 4421,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4421| 
        ADDB      ACC,#50               ; [CPU_] |4421| 
        MOVL      XAR4,ACC              ; [CPU_] |4421| 
        MOVL      P,ACC                 ; [CPU_] |4421| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4423,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4423| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4423| 
        ADDB      XAR7,#1               ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4424,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4424| 
        ADD       *XAR4++,AL            ; [CPU_] |4424| 
	.dwpsn	file "../Source/prod.c",line 4422,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4422| 
        ; branchcc occurs ; [] |4422| 
	.dwpsn	file "../Source/prod.c",line 4428,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4428| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4428| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4428| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4430,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4430| 
        ANDB      AL,#0xff              ; [CPU_] |4430| 
        MOV       *XAR4++,AL            ; [CPU_] |4430| 
	.dwpsn	file "../Source/prod.c",line 4431,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4431| 
        LSR       AL,8                  ; [CPU_] |4431| 
        MOV       *XAR4++,AL            ; [CPU_] |4431| 
	.dwpsn	file "../Source/prod.c",line 4429,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4429| 
        ; branchcc occurs ; [] |4429| 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4434| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4436,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4436| 
        ANDB      AL,#0xff              ; [CPU_] |4436| 
        MOV       *XAR4++,AL            ; [CPU_] |4436| 
	.dwpsn	file "../Source/prod.c",line 4437,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4437| 
        LSR       AL,8                  ; [CPU_] |4437| 
        MOV       *XAR4++,AL            ; [CPU_] |4437| 
	.dwpsn	file "../Source/prod.c",line 4435,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4435| 
        ; branchcc occurs ; [] |4435| 
	.dwpsn	file "../Source/prod.c",line 4440,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4440| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4442,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4442| 
        ANDB      AL,#0xff              ; [CPU_] |4442| 
        MOV       *XAR4++,AL            ; [CPU_] |4442| 
	.dwpsn	file "../Source/prod.c",line 4443,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4443| 
        LSR       AL,8                  ; [CPU_] |4443| 
        MOV       *XAR4++,AL            ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4441,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4441| 
        ; branchcc occurs ; [] |4441| 
	.dwpsn	file "../Source/prod.c",line 4431,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4431| 
	.dwpsn	file "../Source/prod.c",line 4448,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4448| 
        ; branch occurs ; [] |4448| 
$C$L252:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4358,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4358| 
        B         $C$L320,LO            ; [CPU_] |4358| 
        ; branchcc occurs ; [] |4358| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4358| 
        MOVL      XAR0,#66              ; [CPU_] |4358| 
        MOVL      ACC,XAR5              ; [CPU_] |4358| 
        ADDB      ACC,#2                ; [CPU_] |4358| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4358| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4358| 
        B         $C$L320,LT            ; [CPU_] |4358| 
        ; branchcc occurs ; [] |4358| 
        ADDB      XAR4,#2               ; [CPU_] |4358| 
        MOVL      XAR0,#66              ; [CPU_] |4358| 
        CMPB      AL,#4                 ; [CPU_] |4358| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4358| 
        B         $C$L320,GEQ           ; [CPU_] |4358| 
        ; branchcc occurs ; [] |4358| 
	.dwpsn	file "../Source/prod.c",line 4363,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4363| 
	.dwpsn	file "../Source/prod.c",line 4364,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4364| 
	.dwpsn	file "../Source/prod.c",line 4366,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4366| 
        MOVL      XAR0,#66              ; [CPU_] |4366| 
	.dwpsn	file "../Source/prod.c",line 4364,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4364| 
	.dwpsn	file "../Source/prod.c",line 4366,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4366| 
        MOVL      XAR0,#40              ; [CPU_] |4366| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4366| 
        MOVB      AL,#10                ; [CPU_] |4366| 
        MOV       T,*-SP[58]            ; [CPU_] |4366| 
        MPYU      ACC,T,AL              ; [CPU_] |4366| 
        ADDL      ACC,XAR6              ; [CPU_] |4366| 
        ADDB      ACC,#46               ; [CPU_] |4366| 
        MOVL      XAR5,ACC              ; [CPU_] |4366| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4368| 
        ANDB      AL,#0xff              ; [CPU_] |4368| 
        MOV       *XAR4++,AL            ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4369,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4369| 
        LSR       AL,8                  ; [CPU_] |4369| 
        MOV       *XAR4++,AL            ; [CPU_] |4369| 
	.dwpsn	file "../Source/prod.c",line 4367,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4367| 
        ; branchcc occurs ; [] |4367| 
	.dwpsn	file "../Source/prod.c",line 4372,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4372| 
        MPYU      ACC,T,AL              ; [CPU_] |4372| 
        ADDL      ACC,XAR6              ; [CPU_] |4372| 
        MOVL      XAR5,ACC              ; [CPU_] |4372| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4372| 
        ADDB      XAR5,#48              ; [CPU_] |4372| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4374,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4374| 
        ANDB      AL,#0xff              ; [CPU_] |4374| 
        MOV       *XAR4++,AL            ; [CPU_] |4374| 
	.dwpsn	file "../Source/prod.c",line 4375,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4375| 
        LSR       AL,8                  ; [CPU_] |4375| 
        MOV       *XAR4++,AL            ; [CPU_] |4375| 
	.dwpsn	file "../Source/prod.c",line 4373,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4373| 
        ; branchcc occurs ; [] |4373| 
	.dwpsn	file "../Source/prod.c",line 4378,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4378| 
	.dwpsn	file "../Source/prod.c",line 4369,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4369| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4378,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4378| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4380,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4380| 
        ANDB      AL,#0xff              ; [CPU_] |4380| 
        MOV       *XAR4++,AL            ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4381,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4381| 
        LSR       AL,8                  ; [CPU_] |4381| 
        MOV       *XAR4++,AL            ; [CPU_] |4381| 
	.dwpsn	file "../Source/prod.c",line 4379,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4379| 
        ; branchcc occurs ; [] |4379| 
        B         $C$L743,UNC           ; [CPU_] |4379| 
        ; branch occurs ; [] |4379| 
$C$L256:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4000,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4000| 
        B         $C$L320,LO            ; [CPU_] |4000| 
        ; branchcc occurs ; [] |4000| 
        MOVL      ACC,XAR4              ; [CPU_] |4000| 
        MOVL      XAR0,#66              ; [CPU_] |4000| 
        ADDB      ACC,#2                ; [CPU_] |4000| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4000| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4000| 
        B         $C$L320,LT            ; [CPU_] |4000| 
        ; branchcc occurs ; [] |4000| 
        MOVL      XAR5,XAR4             ; [CPU_] |4000| 
        MOVL      XAR0,#66              ; [CPU_] |4000| 
        CMPB      AL,#20                ; [CPU_] |4000| 
        ADDB      XAR5,#2               ; [CPU_] |4000| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4000| 
        B         $C$L320,GEQ           ; [CPU_] |4000| 
        ; branchcc occurs ; [] |4000| 
	.dwpsn	file "../Source/prod.c",line 4004,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4004| 
	.dwpsn	file "../Source/prod.c",line 4005,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |4005| 
	.dwpsn	file "../Source/prod.c",line 4008,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4008| 
        MOVL      XAR0,#66              ; [CPU_] |4008| 
	.dwpsn	file "../Source/prod.c",line 4005,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |4005| 
	.dwpsn	file "../Source/prod.c",line 4008,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4008| 
        MOVL      XAR0,#40              ; [CPU_] |4008| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4008| 
        MOVB      AL,#152               ; [CPU_] |4008| 
        MOV       T,*-SP[57]            ; [CPU_] |4008| 
        MPYU      ACC,T,AL              ; [CPU_] |4008| 
        ADDL      ACC,XAR6              ; [CPU_] |4008| 
        ADDB      ACC,#82               ; [CPU_] |4008| 
        MOVL      XAR4,ACC              ; [CPU_] |4008| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_strlen")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4008| 
        ; call occurs [#_strlen] ; [] |4008| 
        MOVZ      AR6,AL                ; [CPU_] |4008| 
	.dwpsn	file "../Source/prod.c",line 4009,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |4009| 
	.dwpsn	file "../Source/prod.c",line 4010,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4009,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4009| 
	.dwpsn	file "../Source/prod.c",line 4010,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |4010| 
        ; branchcc occurs ; [] |4010| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4010,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4010| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 4011,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4010,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4011,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4010,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4011,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4010,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4010| 
        B         $C$L257,HI            ; [CPU_] |4010| 
        ; branchcc occurs ; [] |4010| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4015| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4015| 
        MOVB      AL,#152               ; [CPU_] |4015| 
        MOV       T,*-SP[57]            ; [CPU_] |4015| 
        MPYU      ACC,T,AL              ; [CPU_] |4015| 
        ADDL      ACC,XAR6              ; [CPU_] |4015| 
        MOVL      XAR4,ACC              ; [CPU_] |4015| 
        MOVL      XAR1,ACC              ; [CPU_] |4015| 
        ADDB      XAR4,#98              ; [CPU_] |4015| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_strlen")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4015| 
        ; call occurs [#_strlen] ; [] |4015| 
        MOVL      XAR0,#44              ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4016,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |4016| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |4015| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4016,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |4016| 
        MOVL      XAR4,ACC              ; [CPU_] |4016| 
        MOV       AL,AR7                ; [CPU_] |4016| 
        ADDB      AL,#1                 ; [CPU_] |4016| 
        MOV       *XAR4++,AR6           ; [CPU_] |4016| 
        MOV       *-SP[61],AL           ; [CPU_] |4016| 
        MOV       AL,AR6                ; [CPU_] |4016| 
	.dwpsn	file "../Source/prod.c",line 4017,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |4017| 
        ; branchcc occurs ; [] |4017| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4017,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4017| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 4018,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4017,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4018,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4017,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4018,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4017,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4017| 
        B         $C$L259,HI            ; [CPU_] |4017| 
        ; branchcc occurs ; [] |4017| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 4022,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4022| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |4022| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 4024,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4024| 
        ANDB      AL,#0xff              ; [CPU_] |4024| 
        MOV       *XAR4++,AL            ; [CPU_] |4024| 
	.dwpsn	file "../Source/prod.c",line 4025,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4025| 
        LSR       AL,8                  ; [CPU_] |4025| 
        MOV       *XAR4++,AL            ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4023,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |4023| 
        ; branchcc occurs ; [] |4023| 
	.dwpsn	file "../Source/prod.c",line 4030,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4030| 
	.dwpsn	file "../Source/prod.c",line 4033,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4033| 
	.dwpsn	file "../Source/prod.c",line 4030,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4030| 
        MOV       *XAR4++,AL            ; [CPU_] |4030| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4033,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4033| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4035,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4035| 
        ANDB      AL,#0xff              ; [CPU_] |4035| 
        MOV       *XAR4++,AL            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4036,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4036| 
        LSR       AL,8                  ; [CPU_] |4036| 
        MOV       *XAR4++,AL            ; [CPU_] |4036| 
	.dwpsn	file "../Source/prod.c",line 4034,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4034| 
        ; branchcc occurs ; [] |4034| 
	.dwpsn	file "../Source/prod.c",line 4041,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4041| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4041| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4043,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4043| 
        ANDB      AL,#0xff              ; [CPU_] |4043| 
        MOV       *XAR4++,AL            ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4044,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4044| 
        LSR       AL,8                  ; [CPU_] |4044| 
        MOV       *XAR4++,AL            ; [CPU_] |4044| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4042| 
        ; branchcc occurs ; [] |4042| 
	.dwpsn	file "../Source/prod.c",line 4049,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4049| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4055,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4055| 
	.dwpsn	file "../Source/prod.c",line 4049,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4052,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4052| 
	.dwpsn	file "../Source/prod.c",line 4049,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4052,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4052| 
	.dwpsn	file "../Source/prod.c",line 4055,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4055| 
	.dwpsn	file "../Source/prod.c",line 4052,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4052| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4052| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4057,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4057| 
        ANDB      AL,#0xff              ; [CPU_] |4057| 
        MOV       *XAR4++,AL            ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4058,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4058| 
        LSR       AL,8                  ; [CPU_] |4058| 
        MOV       *XAR4++,AL            ; [CPU_] |4058| 
	.dwpsn	file "../Source/prod.c",line 4056,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4056| 
        ; branchcc occurs ; [] |4056| 
	.dwpsn	file "../Source/prod.c",line 4025,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4063,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4063| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4063| 
        CMPB      AL,#2                 ; [CPU_] |4063| 
        B         $C$L267,EQ            ; [CPU_] |4063| 
        ; branchcc occurs ; [] |4063| 
	.dwpsn	file "../Source/prod.c",line 4101,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4101| 
        ADDB      ACC,#178              ; [CPU_] |4101| 
        MOVL      XAR5,ACC              ; [CPU_] |4101| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4099,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4099| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4103,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4103| 
        ANDB      AL,#0xff              ; [CPU_] |4103| 
        MOV       *XAR4++,AL            ; [CPU_] |4103| 
	.dwpsn	file "../Source/prod.c",line 4104,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4104| 
        LSR       AL,8                  ; [CPU_] |4104| 
        MOV       *XAR4++,AL            ; [CPU_] |4104| 
	.dwpsn	file "../Source/prod.c",line 4102,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4102| 
        ; branchcc occurs ; [] |4102| 
	.dwpsn	file "../Source/prod.c",line 4108,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4108| 
        ADDB      ACC,#200              ; [CPU_] |4108| 
        MOVL      XAR5,ACC              ; [CPU_] |4108| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4099,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4099| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4110,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4110| 
        ANDB      AL,#0xff              ; [CPU_] |4110| 
        MOV       *XAR4++,AL            ; [CPU_] |4110| 
	.dwpsn	file "../Source/prod.c",line 4111,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4111| 
        LSR       AL,8                  ; [CPU_] |4111| 
        MOV       *XAR4++,AL            ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4109,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4109| 
        ; branchcc occurs ; [] |4109| 
        B         $C$L276,UNC           ; [CPU_] |4109| 
        ; branch occurs ; [] |4109| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4064,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4064| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4064| 
	.dwpsn	file "../Source/prod.c",line 4065,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4065| 
	.dwpsn	file "../Source/prod.c",line 4064,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4064| 
        INC       *-SP[61]              ; [CPU_] |4064| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4065,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |4065| 
        ; branch occurs ; [] |4065| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4067,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4067| 
        MOVL      XAR0,#40              ; [CPU_] |4067| 
        MOV       T,*-SP[57]            ; [CPU_] |4067| 
        MOVL      XAR6,ACC              ; [CPU_] |4067| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4067| 
        MOVB      AL,#76                ; [CPU_] |4067| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4067| 
        ADDL      ACC,XAR6              ; [CPU_] |4067| 
        LSL       ACC,1                 ; [CPU_] |4067| 
        ADDL      ACC,XAR7              ; [CPU_] |4067| 
        ADDB      ACC,#130              ; [CPU_] |4067| 
        MOVL      XAR7,ACC              ; [CPU_] |4067| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4069,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4069| 
        ANDB      AL,#0xff              ; [CPU_] |4069| 
        MOV       *XAR4++,AL            ; [CPU_] |4069| 
	.dwpsn	file "../Source/prod.c",line 4070,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4070| 
        LSR       AL,8                  ; [CPU_] |4070| 
        MOV       *XAR4++,AL            ; [CPU_] |4070| 
	.dwpsn	file "../Source/prod.c",line 4068,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |4068| 
        ; branchcc occurs ; [] |4068| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4076,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4076| 
        ANDB      AL,#0xff              ; [CPU_] |4076| 
        MOV       *XAR4++,AL            ; [CPU_] |4076| 
	.dwpsn	file "../Source/prod.c",line 4077,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4077| 
        LSR       AL,8                  ; [CPU_] |4077| 
        MOV       *XAR4++,AL            ; [CPU_] |4077| 
	.dwpsn	file "../Source/prod.c",line 4075,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4075| 
        ; branchcc occurs ; [] |4075| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4070,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4070| 
	.dwpsn	file "../Source/prod.c",line 4065,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4065| 
        MOV       PL,AL                 ; [CPU_] |4065| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4065,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4065| 
        MOV       AL,PL                 ; [CPU_] |4065| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4065| 
        B         $C$L268,LT            ; [CPU_] |4065| 
        ; branchcc occurs ; [] |4065| 
	.dwpsn	file "../Source/prod.c",line 4082,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4082| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4082| 
        ; branch occurs ; [] |4082| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4084,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4084| 
        MOVL      XAR0,#40              ; [CPU_] |4084| 
        MOV       T,*-SP[57]            ; [CPU_] |4084| 
        MOVL      P,ACC                 ; [CPU_] |4084| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4084| 
        MOVB      AL,#76                ; [CPU_] |4084| 
        MPYU      ACC,T,AL              ; [CPU_] |4084| 
        ADDL      ACC,P                 ; [CPU_] |4084| 
        LSL       ACC,1                 ; [CPU_] |4084| 
        ADDL      ACC,XAR6              ; [CPU_] |4084| 
        ADDB      ACC,#178              ; [CPU_] |4084| 
        MOVL      XAR7,ACC              ; [CPU_] |4084| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4086,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4086| 
        ANDB      AL,#0xff              ; [CPU_] |4086| 
        MOV       *XAR4++,AL            ; [CPU_] |4086| 
	.dwpsn	file "../Source/prod.c",line 4087,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4087| 
        LSR       AL,8                  ; [CPU_] |4087| 
        MOV       *XAR4++,AL            ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4085,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4085| 
        ; branchcc occurs ; [] |4085| 
	.dwpsn	file "../Source/prod.c",line 4091,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4091| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4093,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4093| 
        ANDB      AL,#0xff              ; [CPU_] |4093| 
        MOV       *XAR4++,AL            ; [CPU_] |4093| 
	.dwpsn	file "../Source/prod.c",line 4094,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4094| 
        LSR       AL,8                  ; [CPU_] |4094| 
        MOV       *XAR4++,AL            ; [CPU_] |4094| 
	.dwpsn	file "../Source/prod.c",line 4092,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4092| 
        ; branchcc occurs ; [] |4092| 
	.dwpsn	file "../Source/prod.c",line 4082,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4082| 
	.dwpsn	file "../Source/prod.c",line 4087,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4087| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4098,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4098| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4098| 
        ADDB      AL,#-1                ; [CPU_] |4098| 
        CMP       AL,AR5                ; [CPU_] |4098| 
        B         $C$L272,GT            ; [CPU_] |4098| 
        ; branchcc occurs ; [] |4098| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4117,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4117| 
        ADDB      ACC,#222              ; [CPU_] |4117| 
        MOVL      XAR5,ACC              ; [CPU_] |4117| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4119,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4119| 
        ANDB      AL,#0xff              ; [CPU_] |4119| 
        MOV       *XAR4++,AL            ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4120,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4120| 
        LSR       AL,8                  ; [CPU_] |4120| 
        MOV       *XAR4++,AL            ; [CPU_] |4120| 
	.dwpsn	file "../Source/prod.c",line 4118,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4118| 
        ; branchcc occurs ; [] |4118| 
	.dwpsn	file "../Source/prod.c",line 4125,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4125| 
        ADDB      ACC,#224              ; [CPU_] |4125| 
        MOVL      XAR5,ACC              ; [CPU_] |4125| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4127,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4127| 
        ANDB      AL,#0xff              ; [CPU_] |4127| 
        MOV       *XAR4++,AL            ; [CPU_] |4127| 
	.dwpsn	file "../Source/prod.c",line 4128,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4128| 
        LSR       AL,8                  ; [CPU_] |4128| 
        MOV       *XAR4++,AL            ; [CPU_] |4128| 
	.dwpsn	file "../Source/prod.c",line 4126,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4126| 
        ; branchcc occurs ; [] |4126| 
	.dwpsn	file "../Source/prod.c",line 4133,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4133| 
        ADDB      ACC,#228              ; [CPU_] |4133| 
        MOVL      XAR5,ACC              ; [CPU_] |4133| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4135,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4135| 
        ANDB      AL,#0xff              ; [CPU_] |4135| 
        MOV       *XAR4++,AL            ; [CPU_] |4135| 
	.dwpsn	file "../Source/prod.c",line 4136,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4136| 
        LSR       AL,8                  ; [CPU_] |4136| 
        MOV       *XAR4++,AL            ; [CPU_] |4136| 
	.dwpsn	file "../Source/prod.c",line 4134,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4134| 
        ; branchcc occurs ; [] |4134| 
	.dwpsn	file "../Source/prod.c",line 4141,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4141| 
        ADDB      ACC,#230              ; [CPU_] |4141| 
        MOVL      XAR5,ACC              ; [CPU_] |4141| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4143,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4143| 
        ANDB      AL,#0xff              ; [CPU_] |4143| 
        MOV       *XAR4++,AL            ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4144,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4144| 
        LSR       AL,8                  ; [CPU_] |4144| 
        MOV       *XAR4++,AL            ; [CPU_] |4144| 
	.dwpsn	file "../Source/prod.c",line 4142,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4142| 
        ; branchcc occurs ; [] |4142| 
	.dwpsn	file "../Source/prod.c",line 4149,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4149| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4149| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4149| 
	.dwpsn	file "../Source/prod.c",line 4120,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4120| 
	.dwpsn	file "../Source/prod.c",line 4152,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4152| 
        ; branch occurs ; [] |4152| 
$C$L281:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3942,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3942| 
        B         $C$L320,LO            ; [CPU_] |3942| 
        ; branchcc occurs ; [] |3942| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3942| 
        MOVL      XAR0,#66              ; [CPU_] |3942| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3942| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3942| 
        B         $C$L320,LT            ; [CPU_] |3942| 
        ; branchcc occurs ; [] |3942| 
        CMPB      AL,#4                 ; [CPU_] |3942| 
        B         $C$L320,GEQ           ; [CPU_] |3942| 
        ; branchcc occurs ; [] |3942| 
	.dwpsn	file "../Source/prod.c",line 3946,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3946| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3946| 
	.dwpsn	file "../Source/prod.c",line 3948,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3948| 
        MOVL      XAR0,#40              ; [CPU_] |3948| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3948| 
        MPYB      ACC,T,#10             ; [CPU_] |3948| 
        ADDL      ACC,XAR6              ; [CPU_] |3948| 
        MOVL      XAR4,ACC              ; [CPU_] |3948| 
        MOVL      XAR7,ACC              ; [CPU_] |3948| 
        MOVB      XAR0,#42              ; [CPU_] |3948| 
        MOVL      P,ACC                 ; [CPU_] |3948| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3948| 
	.dwpsn	file "../Source/prod.c",line 3955,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3955| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3955| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3948,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3948| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3952,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3952| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3958,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3958| 
        ANDB      AL,#0xff              ; [CPU_] |3958| 
        MOV       *XAR4++,AL            ; [CPU_] |3958| 
	.dwpsn	file "../Source/prod.c",line 3959,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3959| 
        LSR       AL,8                  ; [CPU_] |3959| 
        MOV       *XAR4++,AL            ; [CPU_] |3959| 
	.dwpsn	file "../Source/prod.c",line 3956,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3956| 
        ; branchcc occurs ; [] |3956| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3966,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3966| 
        ANDB      AL,#0xff              ; [CPU_] |3966| 
        MOV       *XAR4++,AL            ; [CPU_] |3966| 
	.dwpsn	file "../Source/prod.c",line 3967,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3967| 
        LSR       AL,8                  ; [CPU_] |3967| 
        MOV       *XAR4++,AL            ; [CPU_] |3967| 
	.dwpsn	file "../Source/prod.c",line 3964,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3964| 
        ; branchcc occurs ; [] |3964| 
	.dwpsn	file "../Source/prod.c",line 3971,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3971| 
        ADDB      XAR5,#46              ; [CPU_] |3971| 
        MOVL      XAR7,XAR5             ; [CPU_] |3971| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3974,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3974| 
        ANDB      AL,#0xff              ; [CPU_] |3974| 
        MOV       *XAR4++,AL            ; [CPU_] |3974| 
	.dwpsn	file "../Source/prod.c",line 3975,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3975| 
        LSR       AL,8                  ; [CPU_] |3975| 
        MOV       *XAR4++,AL            ; [CPU_] |3975| 
	.dwpsn	file "../Source/prod.c",line 3972,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3972| 
        ; branchcc occurs ; [] |3972| 
	.dwpsn	file "../Source/prod.c",line 3979,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3979| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3982,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3982| 
        ANDB      AL,#0xff              ; [CPU_] |3982| 
        MOV       *XAR4++,AL            ; [CPU_] |3982| 
	.dwpsn	file "../Source/prod.c",line 3983,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3983| 
        LSR       AL,8                  ; [CPU_] |3983| 
        MOV       *XAR4++,AL            ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3980,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3980| 
        ; branchcc occurs ; [] |3980| 
	.dwpsn	file "../Source/prod.c",line 3952,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3952| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3990,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3990| 
        ANDB      AL,#0xff              ; [CPU_] |3990| 
        MOV       *XAR4++,AL            ; [CPU_] |3990| 
	.dwpsn	file "../Source/prod.c",line 3991,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3991| 
        LSR       AL,8                  ; [CPU_] |3991| 
        MOV       *XAR4++,AL            ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3988,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3988| 
        ; branchcc occurs ; [] |3988| 
        B         $C$L743,UNC           ; [CPU_] |3988| 
        ; branch occurs ; [] |3988| 
$C$L287:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3896,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3896| 
        B         $C$L320,LO            ; [CPU_] |3896| 
        ; branchcc occurs ; [] |3896| 
	.dwpsn	file "../Source/prod.c",line 3900,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3900| 
        B         $C$L288,EQ            ; [CPU_] |3900| 
        ; branchcc occurs ; [] |3900| 
        CMPB      AL,#1                 ; [CPU_] |3900| 
        B         $C$L288,EQ            ; [CPU_] |3900| 
        ; branchcc occurs ; [] |3900| 
        CMPB      AL,#2                 ; [CPU_] |3900| 
        B         $C$L288,EQ            ; [CPU_] |3900| 
        ; branchcc occurs ; [] |3900| 
        ADDB      XAR4,#2               ; [CPU_] |3900| 
        MOVL      XAR0,#66              ; [CPU_] |3900| 
        CMPB      AL,#3                 ; [CPU_] |3900| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3900| 
        B         $C$L320,NEQ           ; [CPU_] |3900| 
        ; branchcc occurs ; [] |3900| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3906,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3906| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3906| 
        MOVL      XAR4,XAR5             ; [CPU_] |3906| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3906| 
        ADDB      XAR5,#2               ; [CPU_] |3906| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3906| 
        ADDB      XAR4,#6               ; [CPU_] |3906| 
        B         $C$L293,NEQ           ; [CPU_] |3906| 
        ; branchcc occurs ; [] |3906| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3907,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3907| 
        B         $C$L320,LO            ; [CPU_] |3907| 
        ; branchcc occurs ; [] |3907| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3912,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3912| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3914,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3914| 
        ADDL      ACC,XT                ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3915,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3915| 
	.dwpsn	file "../Source/prod.c",line 3913,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3913| 
        ; branchcc occurs ; [] |3913| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3918,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3918| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3919,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3919| 
        B         $C$L291,EQ            ; [CPU_] |3919| 
        ; branchcc occurs ; [] |3919| 
	.dwpsn	file "../Source/prod.c",line 3918,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3918| 
        ADDB      XAR4,#1               ; [CPU_] |3918| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3918| 
        ; branchcc occurs ; [] |3918| 
        B         $C$L292,UNC           ; [CPU_] |3918| 
        ; branch occurs ; [] |3918| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3920,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3920| 
        MOVB      XAR0,#35              ; [CPU_] |3920| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3920| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3924,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3924| 
        B         $C$L320,EQ            ; [CPU_] |3924| 
        ; branchcc occurs ; [] |3924| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3930,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3930| 
        MOVL      XAR0,#66              ; [CPU_] |3930| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3930| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3930| 
        ADDB      ACC,#2                ; [CPU_] |3930| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3930| 
        MOVB      XAR0,#34              ; [CPU_] |3930| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3930| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3930| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3930| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3930| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3933,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3933| 
        MOV       *XAR4++,AL            ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3932,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3932| 
        MOV       AL,*-SP[59]           ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3933,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3932,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3932| 
        B         $C$L294,HI            ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
        B         $C$L304,UNC           ; [CPU_] |3932| 
        ; branch occurs ; [] |3932| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3880,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3880| 
        MOVB      XAR0,#34              ; [CPU_] |3880| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3880| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3882,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3882| 
	.dwpsn	file "../Source/prod.c",line 3880,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3880| 
        MOV       *-SP[61],#3           ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3882,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3882| 
        CMPB      AL,#1                 ; [CPU_] |3882| 
        B         $C$L296,EQ            ; [CPU_] |3882| 
        ; branchcc occurs ; [] |3882| 
        MOVB      XAR1,#34              ; [CPU_] |3882| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3882| 
        B         $C$L743,NEQ           ; [CPU_] |3882| 
        ; branchcc occurs ; [] |3882| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3884,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3884| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3884| 
        MOVL      XAR0,#74              ; [CPU_] |3884| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3884| 
        MOVL      XAR0,#44              ; [CPU_] |3884| 
        ADDL      ACC,XAR6              ; [CPU_] |3884| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3884| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3884| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3887,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3887| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3887| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3886,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3886| 
        ANDB      AL,#0xff              ; [CPU_] |3886| 
        MOV       *XAR4++,AL            ; [CPU_] |3886| 
	.dwpsn	file "../Source/prod.c",line 3887,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3887| 
        LSR       AL,8                  ; [CPU_] |3887| 
        MOV       *XAR4++,AL            ; [CPU_] |3887| 
	.dwpsn	file "../Source/prod.c",line 3885,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3885| 
        ; branchcc occurs ; [] |3885| 
        B         $C$L743,UNC           ; [CPU_] |3885| 
        ; branch occurs ; [] |3885| 
$C$L298:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3859,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3859| 
        B         $C$L320,LO            ; [CPU_] |3859| 
        ; branchcc occurs ; [] |3859| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3859| 
        MOVL      XAR0,#66              ; [CPU_] |3859| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3859| 
        ADDB      AL,#3                 ; [CPU_] |3859| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3859| 
        CMP       AL,*-SP[59]           ; [CPU_] |3859| 
        B         $C$L320,HI            ; [CPU_] |3859| 
        ; branchcc occurs ; [] |3859| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3864,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3864| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3864| 
        ; branch occurs ; [] |3864| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3865,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3865| 
        ADD       PL,AL                 ; [CPU_] |3865| 
        MOVL      ACC,XAR7              ; [CPU_] |3865| 
        ADD       ACC,PL                ; [CPU_] |3865| 
        MOVL      XAR7,ACC              ; [CPU_] |3865| 
	.dwpsn	file "../Source/prod.c",line 3864,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3864| 
	.dwpsn	file "../Source/prod.c",line 3865,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3865| 
        MOV       *XAR4++,AL            ; [CPU_] |3865| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3864,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3864| 
        MOVL      XAR0,#66              ; [CPU_] |3864| 
        MOVL      ACC,XAR7              ; [CPU_] |3864| 
        ADDB      ACC,#2                ; [CPU_] |3864| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3864| 
        MOV       AL,AR6                ; [CPU_] |3864| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3864| 
        B         $C$L299,LT            ; [CPU_] |3864| 
        ; branchcc occurs ; [] |3864| 
	.dwpsn	file "../Source/prod.c",line 3867,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3867| 
        MOVL      XAR0,#76              ; [CPU_] |3867| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3867| 
	.dwpsn	file "../Source/prod.c",line 3870,column 5,is_stmt,isa 0
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_strlen")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3870| 
        ; call occurs [#_strlen] ; [] |3870| 
	.dwpsn	file "../Source/prod.c",line 3871,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3871| 
	.dwpsn	file "../Source/prod.c",line 3872,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3872| 
	.dwpsn	file "../Source/prod.c",line 3871,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3871| 
        MOV       *-SP[61],#3           ; [CPU_] |3871| 
	.dwpsn	file "../Source/prod.c",line 3872,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3872| 
        ; branchcc occurs ; [] |3872| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3872,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3872| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3873,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3873| 
	.dwpsn	file "../Source/prod.c",line 3872,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3872| 
	.dwpsn	file "../Source/prod.c",line 3873,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3873| 
        INC       *-SP[61]              ; [CPU_] |3873| 
	.dwpsn	file "../Source/prod.c",line 3872,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3872| 
        B         $C$L301,HI            ; [CPU_] |3872| 
        ; branchcc occurs ; [] |3872| 
	.dwpsn	file "../Source/prod.c",line 3876,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3876| 
        ; branch occurs ; [] |3876| 
$C$L302:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3839,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3839| 
        B         $C$L320,LO            ; [CPU_] |3839| 
        ; branchcc occurs ; [] |3839| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3844,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3844| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3844| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3846,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3846| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3847,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3847| 
        MOV       *XAR5++,AL            ; [CPU_] |3847| 
	.dwpsn	file "../Source/prod.c",line 3848,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3848| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3848| 
        MOV       *XAR4++,AL            ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3849,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3849| 
        MOV       *XAR5++,AL            ; [CPU_] |3849| 
	.dwpsn	file "../Source/prod.c",line 3845,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
	.dwpsn	file "../Source/prod.c",line 3849,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3849| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3852,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3852| 
	.dwpsn	file "../Source/prod.c",line 3855,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3855| 
        ; branch occurs ; [] |3855| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5764,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5764 | cmd_mode = SCI_MODE_ASCII;                                             
; 5765 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5766 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5767 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5764| 
	.dwpsn	file "../Source/prod.c",line 5770,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5770 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_update_units")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5770| 
        ; call occurs [#_update_units] ; [] |5770| 
	.dwpsn	file "../Source/prod.c",line 5763,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5763| 
	.dwpsn	file "../Source/prod.c",line 5771,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5771 | break;                                                                 
; 5773 | default:                                                               
; 5775 | // send back NACK?                                                     
; 5777 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5771| 
        ; branch occurs ; [] |5771| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5757,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5757| 
	.dwpsn	file "../Source/prod.c",line 5759,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5759| 
        ; branch occurs ; [] |5759| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4394,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4394| 
	.dwpsn	file "../Source/prod.c",line 4395,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4395| 
        ; branch occurs ; [] |4395| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4390,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4390| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4390| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_ssr_set")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4390| 
        ; call occurs [#_ssr_set] ; [] |4390| 
	.dwpsn	file "../Source/prod.c",line 4391,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4391| 
        ; branch occurs ; [] |4391| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5698,column 5,is_stmt,isa 0
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_conf_read")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5698| 
        ; call occurs [#_conf_read] ; [] |5698| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5701,column 5,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5701| 
        ; call occurs [#_ad7738_setcal] ; [] |5701| 
	.dwpsn	file "../Source/prod.c",line 5702,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5702| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5702| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5702| 
	.dwpsn	file "../Source/prod.c",line 5703,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5703| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5703| 
        ; call occurs [#_ad7738_resetvall] ; [] |5703| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5707,column 5,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_update_units")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5707| 
        ; call occurs [#_update_units] ; [] |5707| 
	.dwpsn	file "../Source/prod.c",line 5706,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5706| 
	.dwpsn	file "../Source/prod.c",line 5709,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5709| 
        ; branch occurs ; [] |5709| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5662,column 5,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_conf_default")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5662| 
        ; call occurs [#_conf_default] ; [] |5662| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5665| 
        ; call occurs [#_lcd_clear] ; [] |5665| 
	.dwpsn	file "../Source/prod.c",line 5666,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5666| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5666| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5666| 
        ; call occurs [#_lcd_puts] ; [] |5666| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5669,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5669| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_delay_us")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5669| 
        ; call occurs [#_delay_us] ; [] |5669| 
	.dwpsn	file "../Source/prod.c",line 5668,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5668| 
        ; branchcc occurs ; [] |5668| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5673,column 5,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_conf_write")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5673| 
        ; call occurs [#_conf_write] ; [] |5673| 
        MOVZ      AR1,AL                ; [CPU_] |5673| 
	.dwpsn	file "../Source/prod.c",line 5674,column 5,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5674| 
        ; call occurs [#_ad7738_setcal] ; [] |5674| 
	.dwpsn	file "../Source/prod.c",line 5675,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5675| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5675| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5675| 
	.dwpsn	file "../Source/prod.c",line 5676,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5676| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5676| 
        ; call occurs [#_ad7738_resetvall] ; [] |5676| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5679,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5679| 
        ; branchcc occurs ; [] |5679| 
	.dwpsn	file "../Source/prod.c",line 5680,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5680| 
        MOVB      AL,#31                ; [CPU_] |5680| 
        SPM       #0                    ; [CPU_] 
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5680| 
        ; call occurs [#_lcd_puts] ; [] |5680| 
	.dwpsn	file "../Source/prod.c",line 5681,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5681| 
	.dwpsn	file "../Source/prod.c",line 5682,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5682| 
	.dwpsn	file "../Source/prod.c",line 5683,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5683| 
        ; branch occurs ; [] |5683| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5684,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5684| 
        MOVB      AL,#31                ; [CPU_] |5684| 
        SPM       #0                    ; [CPU_] 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5684| 
        ; call occurs [#_lcd_puts] ; [] |5684| 
	.dwpsn	file "../Source/prod.c",line 5685,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5685| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5688,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5688| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_delay_us")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5688| 
        ; call occurs [#_delay_us] ; [] |5688| 
	.dwpsn	file "../Source/prod.c",line 5687,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5687| 
        ; branchcc occurs ; [] |5687| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5690,column 5,is_stmt,isa 0
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5690| 
        ; call occurs [#_lcd_clear] ; [] |5690| 
	.dwpsn	file "../Source/prod.c",line 5691,column 5,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_update_units")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5691| 
        ; call occurs [#_update_units] ; [] |5691| 
$C$L317:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5780,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5780 | switch (bincmdresult) {                                                
; 5781 | case OK_SendResult:                                                    
; 5782 |         scia_send_bin(buff, j);         // send back                   
; 5784 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5785 |                 delay_us(2000);                 // 2ms                 
; 5786 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5788 |         break;                                                         
; 5790 | case Error_UnImpl:                                                     
; 5792 |         buff[1] = CmdUnImpl;                                           
; 5793 |         buff[2] = cmdbuff[1];                                          
; 5794 |         scia_send_bin(buff, 3);         // send back                   
; 5795 |         break;                                                         
; 5797 | case Error_Invalid:                                                    
; 5799 |         buff[1] = CmdInvalid;                                          
; 5800 |         buff[2] = cmdbuff[1];                                          
; 5801 |         scia_send_bin(buff, 3);         // send back                   
; 5802 |         break;                                                         
; 5804 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5780| 
        ; branchcc occurs ; [] |5780| 
        CMPB      AL,#1                 ; [CPU_] |5780| 
        B         $C$L321,EQ            ; [CPU_] |5780| 
        ; branchcc occurs ; [] |5780| 
        CMPB      AL,#2                 ; [CPU_] |5780| 
        B         $C$L320,EQ            ; [CPU_] |5780| 
        ; branchcc occurs ; [] |5780| 
        CMPB      AL,#3                 ; [CPU_] |5780| 
        B         $C$L634,NEQ           ; [CPU_] |5780| 
        ; branchcc occurs ; [] |5780| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5806,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5806 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5806| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5806| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5807,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5807 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5807| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5807| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5807| 
	.dwpsn	file "../Source/prod.c",line 5808,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5808 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5808| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5808| 
        ; call occurs [#_scia_send_bin] ; [] |5808| 
	.dwpsn	file "../Source/prod.c",line 5809,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5809 | break;                                                                 
; 5811 | default:                                                               
; 5813 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5809| 
        ; branch occurs ; [] |5809| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5799,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5799| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5799| 
	.dwpsn	file "../Source/prod.c",line 5802,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5802| 
        ; branch occurs ; [] |5802| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5792,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5792| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5792| 
	.dwpsn	file "../Source/prod.c",line 5795,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5795| 
        ; branch occurs ; [] |5795| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 1022,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1022| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1022| 
        CMPB      AL,#79                ; [CPU_] |1022| 
        B         $C$L324,GT            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#79                ; [CPU_] |1022| 
        B         $C$L443,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#69                ; [CPU_] |1022| 
        B         $C$L323,GT            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#69                ; [CPU_] |1022| 
        B         $C$L507,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#66                ; [CPU_] |1022| 
        B         $C$L591,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#67                ; [CPU_] |1022| 
        B         $C$L530,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#68                ; [CPU_] |1022| 
        B         $C$L514,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        B         $C$L625,UNC           ; [CPU_] |1022| 
        ; branch occurs ; [] |1022| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |1022| 
        B         $C$L498,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#72                ; [CPU_] |1022| 
        B         $C$L630,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#76                ; [CPU_] |1022| 
        B         $C$L466,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        B         $C$L625,UNC           ; [CPU_] |1022| 
        ; branch occurs ; [] |1022| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |1022| 
        B         $C$L325,GT            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#85                ; [CPU_] |1022| 
        B         $C$L326,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#80                ; [CPU_] |1022| 
        B         $C$L429,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#82                ; [CPU_] |1022| 
        B         $C$L414,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#83                ; [CPU_] |1022| 
        B         $C$L351,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        B         $C$L625,UNC           ; [CPU_] |1022| 
        ; branch occurs ; [] |1022| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |1022| 
        B         $C$L628,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        CMPB      AL,#90                ; [CPU_] |1022| 
        B         $C$L626,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        B         $C$L625,UNC           ; [CPU_] |1022| 
        ; branch occurs ; [] |1022| 
$C$L326:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1190,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1190| 
        B         $C$L625,LO            ; [CPU_] |1190| 
        ; branchcc occurs ; [] |1190| 
	.dwpsn	file "../Source/prod.c",line 1193,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1193| 
        CMPB      AL,#73                ; [CPU_] |1193| 
        B         $C$L327,GT            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        CMPB      AL,#73                ; [CPU_] |1193| 
        B         $C$L338,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        CMPB      AL,#66                ; [CPU_] |1193| 
        B         $C$L330,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        CMPB      AL,#67                ; [CPU_] |1193| 
        B         $C$L347,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        CMPB      AL,#70                ; [CPU_] |1193| 
        B         $C$L344,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        B         $C$L625,UNC           ; [CPU_] |1193| 
        ; branch occurs ; [] |1193| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1193| 
        B         $C$L328,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        CMPB      AL,#83                ; [CPU_] |1193| 
        B         $C$L337,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        CMPB      AL,#87                ; [CPU_] |1193| 
        B         $C$L336,EQ            ; [CPU_] |1193| 
        ; branchcc occurs ; [] |1193| 
        B         $C$L625,UNC           ; [CPU_] |1193| 
        ; branch occurs ; [] |1193| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1210,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1210| 
        MOVL      XAR0,#44              ; [CPU_] |1210| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1210| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1210| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1210| 
        MOVL      XAR4,XAR1             ; [CPU_] |1210| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_sprintf")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1210| 
        ; call occurs [#_sprintf] ; [] |1210| 
	.dwpsn	file "../Source/prod.c",line 1211,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1211| 
        MOV       AL,#1024              ; [CPU_] |1211| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1211| 
	.dwpsn	file "../Source/prod.c",line 1210,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1210| 
	.dwpsn	file "../Source/prod.c",line 1211,column 6,is_stmt,isa 0
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1211| 
        ; call occurs [#_scia_getparam] ; [] |1211| 
        CMPB      AL,#31                ; [CPU_] |1211| 
        B         $C$L329,LOS           ; [CPU_] |1211| 
        ; branchcc occurs ; [] |1211| 
	.dwpsn	file "../Source/prod.c",line 1215,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1215| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1215| 
	.dwpsn	file "../Source/prod.c",line 1214,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1214| 
	.dwpsn	file "../Source/prod.c",line 1215,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1215| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1215| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1218,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1218| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1218| 
        MOVL      XAR0,#86              ; [CPU_] |1218| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1218| 
        MOVB      AH,#1                 ; [CPU_] |1218| 
        ADD       AH,AL                 ; [CPU_] |1218| 
        MOVU      ACC,AH                ; [CPU_] |1218| 
        MOVL      XAR5,XAR1             ; [CPU_] |1218| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_memcpy")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1218| 
        ; call occurs [#_memcpy] ; [] |1218| 
        MOVL      XAR4,XAR1             ; [CPU_] |1218| 
	.dwpsn	file "../Source/prod.c",line 1222,column 6,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_puts")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1222| 
        ; call occurs [#_scia_puts] ; [] |1222| 
	.dwpsn	file "../Source/prod.c",line 1223,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1223| 
	.dwpsn	file "../Source/prod.c",line 1225,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1225| 
        ; branch occurs ; [] |1225| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1315| 
        MOVB      XAR0,#34              ; [CPU_] |1315| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1315| 
        CMPB      AL,#3                 ; [CPU_] |1315| 
        B         $C$L335,EQ            ; [CPU_] |1315| 
        ; branchcc occurs ; [] |1315| 
        MOVB      XAR1,#34              ; [CPU_] |1315| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1315| 
        CMPB      AL,#2                 ; [CPU_] |1315| 
        B         $C$L335,EQ            ; [CPU_] |1315| 
        ; branchcc occurs ; [] |1315| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1322,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1322| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1322| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1323,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1323| 
        MOVL      XAR0,#44              ; [CPU_] |1323| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1323| 
        MOV       *-SP[3],AL            ; [CPU_] |1323| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1323| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1323| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1323| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_sprintf")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1323| 
        ; call occurs [#_sprintf] ; [] |1323| 
        MOVL      XAR0,#44              ; [CPU_] |1323| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1323| 
	.dwpsn	file "../Source/prod.c",line 1324,column 7,is_stmt,isa 0
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_puts")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1324| 
        ; call occurs [#_scia_puts] ; [] |1324| 
        MOV       AL,*-SP[47]           ; [CPU_] |1324| 
	.dwpsn	file "../Source/prod.c",line 1325,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1325| 
        B         $C$L332,GEQ           ; [CPU_] |1325| 
        ; branchcc occurs ; [] |1325| 
	.dwpsn	file "../Source/prod.c",line 1326,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1326| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_scia_puts")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1326| 
        ; call occurs [#_scia_puts] ; [] |1326| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1322,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1322| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1322| 
        B         $C$L331,LT            ; [CPU_] |1322| 
        ; branchcc occurs ; [] |1322| 
	.dwpsn	file "../Source/prod.c",line 1329,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1329| 
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1329| 
        ; call occurs [#_scia_puts] ; [] |1329| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1330,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1330| 
        MOVB      XAR0,#35              ; [CPU_] |1330| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1330| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1330| 
        MOV       *-SP[3],AL            ; [CPU_] |1330| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1330| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1330| 
        MOVL      XAR0,#74              ; [CPU_] |1330| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1330| 
        ADDL      ACC,XAR6              ; [CPU_] |1330| 
        MOVL      XAR4,ACC              ; [CPU_] |1330| 
        MOVL      XAR0,#44              ; [CPU_] |1330| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1330| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1330| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1330| 
        MOVL      XAR4,XAR1             ; [CPU_] |1330| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_sprintf")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1330| 
        ; call occurs [#_sprintf] ; [] |1330| 
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1330,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1330| 
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1330,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1330| 
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1333| 
        MOVL      XAR5,XAR1             ; [CPU_] |1333| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1333| 
        ; call occurs [#_scia_getparam] ; [] |1333| 
        MOVL      XAR4,XAR1             ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1334,column 6,is_stmt,isa 0
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_scia_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1334| 
        ; call occurs [#_scia_puts] ; [] |1334| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1335| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_puts")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1335| 
        ; call occurs [#_scia_puts] ; [] |1335| 
        MOV       AL,*-SP[47]           ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1336,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1336| 
        ; branchcc occurs ; [] |1336| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1341,column 6,is_stmt,isa 0
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_atoi")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1341| 
        ; call occurs [#_atoi] ; [] |1341| 
        CMPB      AL,#7                 ; [CPU_] |1341| 
        B         $C$L333,HI            ; [CPU_] |1341| 
        ; branchcc occurs ; [] |1341| 
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1347| 
        MOVB      XAR1,#35              ; [CPU_] |1347| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1347| 
	.dwpsn	file "../Source/prod.c",line 1348,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1348| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1348| 
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1347| 
	.dwpsn	file "../Source/prod.c",line 1348,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1348| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1348| 
        MOVL      XAR0,#74              ; [CPU_] |1348| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1348| 
	.dwpsn	file "../Source/prod.c",line 1355,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1355| 
        ; branch occurs ; [] |1355| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1343,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1343| 
	.dwpsn	file "../Source/prod.c",line 1345,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1345| 
        ; branch occurs ; [] |1345| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1337,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1337| 
	.dwpsn	file "../Source/prod.c",line 1339,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1339| 
        ; branch occurs ; [] |1339| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1317,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1317| 
	.dwpsn	file "../Source/prod.c",line 1319,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1319| 
        ; branch occurs ; [] |1319| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1388,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1388| 
        MOVB      XAR0,#40              ; [CPU_] |1388| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1388| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1388| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1388| 
        MOVL      XAR0,#44              ; [CPU_] |1388| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1388| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1388| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_sprintf")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1388| 
        ; call occurs [#_sprintf] ; [] |1388| 
        MOVL      XAR0,#44              ; [CPU_] |1388| 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1390| 
	.dwpsn	file "../Source/prod.c",line 1388,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1388| 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1390| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1390| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1390| 
        ; call occurs [#_scia_getparam] ; [] |1390| 
        MOVL      XAR0,#86              ; [CPU_] |1390| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1390| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_strtod")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1391,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1391| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1391| 
        MOVB      XAR1,#40              ; [CPU_] |1391| 
        MOVL      XAR0,#86              ; [CPU_] |1391| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1391| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1391| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1392| 
        ; call occurs [#_scia_puts] ; [] |1392| 
	.dwpsn	file "../Source/prod.c",line 1393,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1393| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1393| 
        ; call occurs [#_scia_puts] ; [] |1393| 
	.dwpsn	file "../Source/prod.c",line 1395,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1395| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1395| 
        MOVB      XAR1,#40              ; [CPU_] |1395| 
        MOVL      XAR0,#44              ; [CPU_] |1395| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1395| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1395| 
        MOVL      XAR4,XAR1             ; [CPU_] |1395| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_sprintf")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1395| 
        ; call occurs [#_sprintf] ; [] |1395| 
        MOVL      XAR4,XAR1             ; [CPU_] |1395| 
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_puts")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1397| 
        ; call occurs [#_scia_puts] ; [] |1397| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1401,column 6,is_stmt,isa 0
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1401| 
        ; call occurs [#_ad7738_setcal] ; [] |1401| 
	.dwpsn	file "../Source/prod.c",line 1404,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1404| 
        ; branch occurs ; [] |1404| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1198,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1198| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1198| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1198| 
        MOV       AL,#1024              ; [CPU_] |1198| 
        MOVL      XAR5,XAR1             ; [CPU_] |1198| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1198| 
        ; call occurs [#_scia_getparam] ; [] |1198| 
        MOVL      XAR4,XAR1             ; [CPU_] |1198| 
	.dwpsn	file "../Source/prod.c",line 1200,column 6,is_stmt,isa 0
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_atol")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1200| 
        ; call occurs [#_atol] ; [] |1200| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1200| 
	.dwpsn	file "../Source/prod.c",line 1202,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1202| 
	.dwpsn	file "../Source/prod.c",line 1200,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1202,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1202| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1202| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1202| 
	.dwpsn	file "../Source/prod.c",line 1205,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1205| 
        ; branch occurs ; [] |1205| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1280,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1280| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1280| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1281,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1281| 
        MOVL      XAR0,#44              ; [CPU_] |1281| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1281| 
        MOV       *-SP[3],AL            ; [CPU_] |1281| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1281| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1281| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1281| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_sprintf")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1281| 
        ; call occurs [#_sprintf] ; [] |1281| 
        MOVL      XAR0,#44              ; [CPU_] |1281| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1281| 
	.dwpsn	file "../Source/prod.c",line 1282,column 7,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_scia_puts")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1282| 
        ; call occurs [#_scia_puts] ; [] |1282| 
        MOV       AL,*-SP[47]           ; [CPU_] |1282| 
	.dwpsn	file "../Source/prod.c",line 1283,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1283| 
        B         $C$L340,GEQ           ; [CPU_] |1283| 
        ; branchcc occurs ; [] |1283| 
	.dwpsn	file "../Source/prod.c",line 1284,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1284| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_puts")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1284| 
        ; call occurs [#_scia_puts] ; [] |1284| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1280,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1280| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1280| 
        B         $C$L339,LT            ; [CPU_] |1280| 
        ; branchcc occurs ; [] |1280| 
	.dwpsn	file "../Source/prod.c",line 1287,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1287| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_puts")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1287| 
        ; call occurs [#_scia_puts] ; [] |1287| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1288,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1288| 
        MOVB      XAR0,#34              ; [CPU_] |1288| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1288| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1288| 
        MOV       *-SP[3],AL            ; [CPU_] |1288| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1288| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1288| 
        MOVL      XAR0,#72              ; [CPU_] |1288| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1288| 
        ADDL      ACC,XAR6              ; [CPU_] |1288| 
        MOVL      XAR4,ACC              ; [CPU_] |1288| 
        MOVL      XAR0,#44              ; [CPU_] |1288| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1288| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1288| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1288| 
        MOVL      XAR4,XAR1             ; [CPU_] |1288| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_sprintf")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1288| 
        ; call occurs [#_sprintf] ; [] |1288| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1290| 
	.dwpsn	file "../Source/prod.c",line 1288,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1288| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1290| 
        MOV       AL,#1024              ; [CPU_] |1290| 
        MOVL      XAR5,XAR1             ; [CPU_] |1290| 
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1290| 
        ; call occurs [#_scia_getparam] ; [] |1290| 
        MOV       *-SP[47],AL           ; [CPU_] |1290| 
        MOVL      XAR4,XAR1             ; [CPU_] |1290| 
	.dwpsn	file "../Source/prod.c",line 1291,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1291| 
        ; call occurs [#_scia_puts] ; [] |1291| 
	.dwpsn	file "../Source/prod.c",line 1292,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1292| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1292| 
        ; call occurs [#_scia_puts] ; [] |1292| 
        MOV       AL,*-SP[47]           ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1293| 
        ; branchcc occurs ; [] |1293| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1297,column 6,is_stmt,isa 0
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_atoi")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1297| 
        ; call occurs [#_atoi] ; [] |1297| 
        CMPB      AL,#3                 ; [CPU_] |1297| 
        B         $C$L342,HI            ; [CPU_] |1297| 
        ; branchcc occurs ; [] |1297| 
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1303| 
        MOVB      XAR1,#34              ; [CPU_] |1303| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1303| 
	.dwpsn	file "../Source/prod.c",line 1304,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1304| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1304| 
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1303| 
	.dwpsn	file "../Source/prod.c",line 1304,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1304| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1304| 
        MOVL      XAR0,#72              ; [CPU_] |1304| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1304| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1304| 
        MOVL      XAR4,ACC              ; [CPU_] |1304| 
        MOVL      XAR0,#44              ; [CPU_] |1304| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1304| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1304| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1304| 
        MOVL      XAR4,XAR1             ; [CPU_] |1304| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_sprintf")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1304| 
        ; call occurs [#_sprintf] ; [] |1304| 
        MOVL      XAR4,XAR1             ; [CPU_] |1304| 
	.dwpsn	file "../Source/prod.c",line 1307,column 6,is_stmt,isa 0
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_puts")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1307| 
        ; call occurs [#_scia_puts] ; [] |1307| 
	.dwpsn	file "../Source/prod.c",line 1308,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1308| 
	.dwpsn	file "../Source/prod.c",line 1311,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1311| 
        ; branch occurs ; [] |1311| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1299,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1299| 
	.dwpsn	file "../Source/prod.c",line 1301,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1301| 
        ; branch occurs ; [] |1301| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1294,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1294| 
	.dwpsn	file "../Source/prod.c",line 1295,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1295| 
        ; branch occurs ; [] |1295| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1361,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1361| 
        MOVL      XAR0,#44              ; [CPU_] |1361| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1361| 
        MOV       *-SP[3],#4096         ; [CPU_] |1361| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1361| 
        MOVL      XAR4,XAR1             ; [CPU_] |1361| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_sprintf")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1361| 
        ; call occurs [#_sprintf] ; [] |1361| 
	.dwpsn	file "../Source/prod.c",line 1363,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1363| 
	.dwpsn	file "../Source/prod.c",line 1361,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1361| 
	.dwpsn	file "../Source/prod.c",line 1363,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1363| 
        MOV       AL,#1024              ; [CPU_] |1363| 
        MOVL      XAR5,XAR1             ; [CPU_] |1363| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1363| 
        ; call occurs [#_scia_getparam] ; [] |1363| 
	.dwpsn	file "../Source/prod.c",line 1364,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1364| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_atoi")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1364| 
        ; call occurs [#_atoi] ; [] |1364| 
        MOV       *-SP[47],AL           ; [CPU_] |1364| 
	.dwpsn	file "../Source/prod.c",line 1365,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1365| 
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1365| 
        ; call occurs [#_scia_puts] ; [] |1365| 
        MOV       AL,*-SP[47]           ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1367,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1367| 
        ; branchcc occurs ; [] |1367| 
        CMP       AL,#4096              ; [CPU_] |1367| 
        B         $C$L346,GT            ; [CPU_] |1367| 
        ; branchcc occurs ; [] |1367| 
	.dwpsn	file "../Source/prod.c",line 1372,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1372| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1372| 
        ; call occurs [#_scia_puts] ; [] |1372| 
	.dwpsn	file "../Source/prod.c",line 1374,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1374| 
        MOVL      XAR0,#44              ; [CPU_] |1374| 
        MOV       AL,*-SP[47]           ; [CPU_] |1374| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1374| 
        MOV       *-SP[3],AL            ; [CPU_] |1374| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1374| 
        MOVL      XAR4,XAR1             ; [CPU_] |1374| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_sprintf")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1374| 
        ; call occurs [#_sprintf] ; [] |1374| 
        MOVL      XAR4,XAR1             ; [CPU_] |1374| 
	.dwpsn	file "../Source/prod.c",line 1376,column 6,is_stmt,isa 0
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1376| 
        ; call occurs [#_scia_puts] ; [] |1376| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1381,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1381| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1381| 
        MOV       AL,*-SP[47]           ; [CPU_] |1381| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1381| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1382,column 6,is_stmt,isa 0
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_maf_rst")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1382| 
        ; call occurs [#_maf_rst] ; [] |1382| 
	.dwpsn	file "../Source/prod.c",line 1384,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1384| 
        ; branch occurs ; [] |1384| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1369,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1369| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1369| 
        ; call occurs [#_scia_puts] ; [] |1369| 
	.dwpsn	file "../Source/prod.c",line 1360,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1360| 
        ; branch occurs ; [] |1360| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1232,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1232| 
        MOVL      XAR0,#44              ; [CPU_] |1232| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1232| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1232| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1232| 
        MOVL      XAR4,XAR1             ; [CPU_] |1232| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_sprintf")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1232| 
        ; call occurs [#_sprintf] ; [] |1232| 
	.dwpsn	file "../Source/prod.c",line 1233,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1233| 
	.dwpsn	file "../Source/prod.c",line 1232,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1232| 
	.dwpsn	file "../Source/prod.c",line 1233,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1233| 
        MOV       AL,#1024              ; [CPU_] |1233| 
        MOVL      XAR5,XAR1             ; [CPU_] |1233| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1233| 
        ; call occurs [#_scia_getparam] ; [] |1233| 
	.dwpsn	file "../Source/prod.c",line 1234,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1234| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_atoi")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1234| 
        ; call occurs [#_atoi] ; [] |1234| 
        MOV       *-SP[58],AL           ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1235| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_puts")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1235| 
        ; call occurs [#_scia_puts] ; [] |1235| 
        MOV       AL,*-SP[58]           ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1237,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1237| 
        CMPB      AL,#4                 ; [CPU_] |1237| 
        B         $C$L350,HIS           ; [CPU_] |1237| 
        ; branchcc occurs ; [] |1237| 
	.dwpsn	file "../Source/prod.c",line 1241,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1241| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_puts")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1241| 
        ; call occurs [#_scia_puts] ; [] |1241| 
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1242| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1247| 
        MOVL      XAR0,#44              ; [CPU_] |1247| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1247| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1247| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1247| 
        MOVL      XAR4,XAR1             ; [CPU_] |1247| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_sprintf")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1247| 
        ; call occurs [#_sprintf] ; [] |1247| 
	.dwpsn	file "../Source/prod.c",line 1248,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1248| 
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1247| 
	.dwpsn	file "../Source/prod.c",line 1248,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1248| 
        MOV       AL,#1024              ; [CPU_] |1248| 
        MOVL      XAR5,XAR1             ; [CPU_] |1248| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1248| 
        ; call occurs [#_scia_getparam] ; [] |1248| 
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_atoi")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1249| 
        ; call occurs [#_atoi] ; [] |1249| 
        MOV       *-SP[57],AL           ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1250| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1250| 
        ; call occurs [#_scia_puts] ; [] |1250| 
        MOV       AL,*-SP[57]           ; [CPU_] |1250| 
	.dwpsn	file "../Source/prod.c",line 1254,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1254| 
        CMPB      AL,#20                ; [CPU_] |1254| 
        B         $C$L349,HIS           ; [CPU_] |1254| 
        ; branchcc occurs ; [] |1254| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1258| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_scia_puts")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1258| 
        ; call occurs [#_scia_puts] ; [] |1258| 
	.dwpsn	file "../Source/prod.c",line 1261,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1261| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1261| 
        MOVL      XAR0,#44              ; [CPU_] |1261| 
        MOV       AH,*-SP[57]           ; [CPU_] |1261| 
        ADD       AL,*-SP[58]           ; [CPU_] |1261| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1261| 
        MOV       *-SP[3],AL            ; [CPU_] |1261| 
        MOV       *-SP[4],AH            ; [CPU_] |1261| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1261| 
        DEC       *-SP[57]              ; [CPU_] |1261| 
        MOVL      XAR4,XAR1             ; [CPU_] |1261| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_sprintf")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1261| 
        ; call occurs [#_sprintf] ; [] |1261| 
        MOVL      XAR4,XAR1             ; [CPU_] |1261| 
	.dwpsn	file "../Source/prod.c",line 1263,column 6,is_stmt,isa 0
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1263| 
        ; call occurs [#_scia_puts] ; [] |1263| 
        MOV       AL,*-SP[57]           ; [CPU_] |1263| 
	.dwpsn	file "../Source/prod.c",line 1264,column 6,is_stmt,isa 0
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_print_sensor")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1264| 
        ; call occurs [#_print_sensor] ; [] |1264| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1268,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1268| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1268| 
        MOVB      AL,#10                ; [CPU_] |1268| 
        MOV       T,*-SP[58]            ; [CPU_] |1268| 
        MPYU      ACC,T,AL              ; [CPU_] |1268| 
        ADDL      ACC,XAR6              ; [CPU_] |1268| 
        MOVL      XAR4,ACC              ; [CPU_] |1268| 
        MOVB      XAR0,#42              ; [CPU_] |1268| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1268| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1268| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1269| 
        ; call occurs [#_ad7738_setcal] ; [] |1269| 
        MOVL      XAR0,#78              ; [CPU_] |1269| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1271,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1271| 
        MOVL      XAR1,ACC              ; [CPU_] |1271| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1271| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1271| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1271| 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1272| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1272| 
        ; call occurs [#_ad7738_resetvall] ; [] |1272| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1276,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1276| 
        ; branch occurs ; [] |1276| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1256,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1256| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1256| 
        ; call occurs [#_scia_puts] ; [] |1256| 
	.dwpsn	file "../Source/prod.c",line 1246,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1246| 
        ; branch occurs ; [] |1246| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1239,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1239| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_puts")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1239| 
        ; call occurs [#_scia_puts] ; [] |1239| 
	.dwpsn	file "../Source/prod.c",line 1231,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1231| 
        ; branch occurs ; [] |1231| 
$C$L351:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2092,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2092| 
        B         $C$L625,LO            ; [CPU_] |2092| 
        ; branchcc occurs ; [] |2092| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2097| 
        CMPB      AL,#78                ; [CPU_] |2097| 
        B         $C$L352,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#85                ; [CPU_] |2097| 
        B         $C$L352,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#66                ; [CPU_] |2097| 
        B         $C$L352,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#68                ; [CPU_] |2097| 
        B         $C$L625,NEQ           ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2100,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2100| 
	.dwpsn	file "../Source/prod.c",line 2121,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2121| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2123,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2123| 
        MOVL      XAR0,#44              ; [CPU_] |2123| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2123| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2123| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2123| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_sprintf")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2123| 
        ; call occurs [#_sprintf] ; [] |2123| 
        MOVL      XAR0,#44              ; [CPU_] |2123| 
	.dwpsn	file "../Source/prod.c",line 2124,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2124| 
	.dwpsn	file "../Source/prod.c",line 2123,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2123| 
	.dwpsn	file "../Source/prod.c",line 2124,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2124| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2124| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2124| 
        ; call occurs [#_scia_getparam] ; [] |2124| 
        MOVL      XAR0,#86              ; [CPU_] |2124| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2124| 
	.dwpsn	file "../Source/prod.c",line 2125,column 6,is_stmt,isa 0
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_atoi")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2125| 
        ; call occurs [#_atoi] ; [] |2125| 
        MOVL      XAR0,#86              ; [CPU_] |2125| 
        MOV       *-SP[57],AL           ; [CPU_] |2125| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2125| 
	.dwpsn	file "../Source/prod.c",line 2126,column 6,is_stmt,isa 0
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2126| 
        ; call occurs [#_scia_puts] ; [] |2126| 
        MOV       AL,*-SP[57]           ; [CPU_] |2126| 
	.dwpsn	file "../Source/prod.c",line 2130,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2130| 
        CMPB      AL,#20                ; [CPU_] |2130| 
        B         $C$L413,HIS           ; [CPU_] |2130| 
        ; branchcc occurs ; [] |2130| 
	.dwpsn	file "../Source/prod.c",line 2134,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2134| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2134| 
        ; call occurs [#_scia_puts] ; [] |2134| 
	.dwpsn	file "../Source/prod.c",line 2135,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2135| 
	.dwpsn	file "../Source/prod.c",line 2137,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2137| 
        CMPB      AL,#66                ; [CPU_] |2137| 
        B         $C$L408,EQ            ; [CPU_] |2137| 
        ; branchcc occurs ; [] |2137| 
        CMPB      AL,#68                ; [CPU_] |2137| 
        B         $C$L407,EQ            ; [CPU_] |2137| 
        ; branchcc occurs ; [] |2137| 
        CMPB      AL,#78                ; [CPU_] |2137| 
        B         $C$L403,EQ            ; [CPU_] |2137| 
        ; branchcc occurs ; [] |2137| 
        CMPB      AL,#85                ; [CPU_] |2137| 
        B         $C$L625,NEQ           ; [CPU_] |2137| 
        ; branchcc occurs ; [] |2137| 
	.dwpsn	file "../Source/prod.c",line 2166,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2166| 
	.dwpsn	file "../Source/prod.c",line 2164,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2164| 
        MOV       AH,#0                 ; [CPU_] |2164| 
	.dwpsn	file "../Source/prod.c",line 2166,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2166| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2166| 
	.dwpsn	file "../Source/prod.c",line 2164,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2164| 
	.dwpsn	file "../Source/prod.c",line 2166,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2166| 
        MPYU      ACC,T,AL              ; [CPU_] |2166| 
        ADDL      ACC,XAR6              ; [CPU_] |2166| 
        ADDB      ACC,#124              ; [CPU_] |2166| 
        MOVL      XAR1,ACC              ; [CPU_] |2166| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2166| 
        CMPB      AL,#35                ; [CPU_] |2166| 
        B         $C$L354,GT            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#35                ; [CPU_] |2166| 
        B         $C$L370,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#16                ; [CPU_] |2166| 
        B         $C$L390,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#17                ; [CPU_] |2166| 
        B         $C$L386,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#34                ; [CPU_] |2166| 
        B         $C$L377,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        B         $C$L394,UNC           ; [CPU_] |2166| 
        ; branch occurs ; [] |2166| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2166| 
        B         $C$L363,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#53                ; [CPU_] |2166| 
        B         $C$L359,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#70                ; [CPU_] |2166| 
        B         $C$L394,NEQ           ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2355,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2355| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2355| 
        MOV       AL,#1024              ; [CPU_] |2355| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2355| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2355| 
        ; call occurs [#_scia_getparam] ; [] |2355| 
        MOVL      XAR0,#86              ; [CPU_] |2355| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2355| 
	.dwpsn	file "../Source/prod.c",line 2357,column 8,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_atoi")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2357| 
        ; call occurs [#_atoi] ; [] |2357| 
        MOVL      XAR0,#86              ; [CPU_] |2357| 
        MOV       *-SP[47],AL           ; [CPU_] |2357| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2357| 
	.dwpsn	file "../Source/prod.c",line 2358,column 8,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2358| 
        ; call occurs [#_scia_puts] ; [] |2358| 
        MOV       AL,*-SP[47]           ; [CPU_] |2358| 
	.dwpsn	file "../Source/prod.c",line 2359,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2359| 
        B         $C$L356,EQ            ; [CPU_] |2359| 
        ; branchcc occurs ; [] |2359| 
        CMPB      AL,#7                 ; [CPU_] |2359| 
        B         $C$L357,EQ            ; [CPU_] |2359| 
        ; branchcc occurs ; [] |2359| 
	.dwpsn	file "../Source/prod.c",line 2360,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2360| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_puts")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2360| 
        ; call occurs [#_scia_puts] ; [] |2360| 
$C$L356:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2362,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2362| 
        B         $C$L357,EQ            ; [CPU_] |2362| 
        ; branchcc occurs ; [] |2362| 
        CMPB      AL,#7                 ; [CPU_] |2362| 
        B         $C$L355,NEQ           ; [CPU_] |2362| 
        ; branchcc occurs ; [] |2362| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2363,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2363| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2363| 
        ; call occurs [#_scia_puts] ; [] |2363| 
        MOV       AL,*-SP[47]           ; [CPU_] |2363| 
	.dwpsn	file "../Source/prod.c",line 2365,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2365| 
        B         $C$L358,EQ            ; [CPU_] |2365| 
        ; branchcc occurs ; [] |2365| 
        CMPB      AL,#7                 ; [CPU_] |2365| 
        B         $C$L393,EQ            ; [CPU_] |2365| 
        ; branchcc occurs ; [] |2365| 
        B         $C$L394,UNC           ; [CPU_] |2365| 
        ; branch occurs ; [] |2365| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2367,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2367| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2367| 
        MOV       AL,*-SP[47]           ; [CPU_] |2367| 
	.dwpsn	file "../Source/prod.c",line 2368,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2368| 
	.dwpsn	file "../Source/prod.c",line 2369,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2369| 
        ; branch occurs ; [] |2369| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2330,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2330| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2330| 
        MOV       AL,#1024              ; [CPU_] |2330| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2330| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2330| 
        ; call occurs [#_scia_getparam] ; [] |2330| 
        MOVL      XAR0,#86              ; [CPU_] |2330| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2330| 
	.dwpsn	file "../Source/prod.c",line 2332,column 8,is_stmt,isa 0
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_atoi")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2332| 
        ; call occurs [#_atoi] ; [] |2332| 
        MOVL      XAR0,#86              ; [CPU_] |2332| 
        MOV       *-SP[47],AL           ; [CPU_] |2332| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2332| 
	.dwpsn	file "../Source/prod.c",line 2333,column 8,is_stmt,isa 0
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_puts")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2333| 
        ; call occurs [#_scia_puts] ; [] |2333| 
        MOV       AL,*-SP[47]           ; [CPU_] |2333| 
	.dwpsn	file "../Source/prod.c",line 2334,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2334| 
        B         $C$L360,EQ            ; [CPU_] |2334| 
        ; branchcc occurs ; [] |2334| 
        CMPB      AL,#7                 ; [CPU_] |2334| 
        B         $C$L361,EQ            ; [CPU_] |2334| 
        ; branchcc occurs ; [] |2334| 
	.dwpsn	file "../Source/prod.c",line 2335,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2335| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_puts")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2335| 
        ; call occurs [#_scia_puts] ; [] |2335| 
$C$L360:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2337,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2337| 
        B         $C$L361,EQ            ; [CPU_] |2337| 
        ; branchcc occurs ; [] |2337| 
        CMPB      AL,#7                 ; [CPU_] |2337| 
        B         $C$L359,NEQ           ; [CPU_] |2337| 
        ; branchcc occurs ; [] |2337| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2338,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2338| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_puts")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2338| 
        ; call occurs [#_scia_puts] ; [] |2338| 
        MOV       AL,*-SP[47]           ; [CPU_] |2338| 
	.dwpsn	file "../Source/prod.c",line 2340,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2340| 
        B         $C$L362,EQ            ; [CPU_] |2340| 
        ; branchcc occurs ; [] |2340| 
        CMPB      AL,#7                 ; [CPU_] |2340| 
        B         $C$L393,EQ            ; [CPU_] |2340| 
        ; branchcc occurs ; [] |2340| 
        B         $C$L394,UNC           ; [CPU_] |2340| 
        ; branch occurs ; [] |2340| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2342,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2342| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2342| 
        MOV       AL,*-SP[47]           ; [CPU_] |2342| 
	.dwpsn	file "../Source/prod.c",line 2343,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2343| 
	.dwpsn	file "../Source/prod.c",line 2344,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2344| 
        ; branch occurs ; [] |2344| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2296,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2296| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2296| 
        MOV       AL,#1024              ; [CPU_] |2296| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2296| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2296| 
        ; call occurs [#_scia_getparam] ; [] |2296| 
        MOVL      XAR0,#86              ; [CPU_] |2296| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2296| 
	.dwpsn	file "../Source/prod.c",line 2299,column 8,is_stmt,isa 0
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_atoi")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2299| 
        ; call occurs [#_atoi] ; [] |2299| 
        MOVL      XAR0,#86              ; [CPU_] |2299| 
        MOV       *-SP[47],AL           ; [CPU_] |2299| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2299| 
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2300| 
        ; call occurs [#_scia_puts] ; [] |2300| 
        MOV       AL,*-SP[47]           ; [CPU_] |2300| 
	.dwpsn	file "../Source/prod.c",line 2301,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2301| 
        B         $C$L364,EQ            ; [CPU_] |2301| 
        ; branchcc occurs ; [] |2301| 
        CMPB      AL,#3                 ; [CPU_] |2301| 
        B         $C$L365,EQ            ; [CPU_] |2301| 
        ; branchcc occurs ; [] |2301| 
        CMPB      AL,#4                 ; [CPU_] |2301| 
        B         $C$L366,EQ            ; [CPU_] |2301| 
        ; branchcc occurs ; [] |2301| 
        CMPB      AL,#7                 ; [CPU_] |2301| 
        B         $C$L367,EQ            ; [CPU_] |2301| 
        ; branchcc occurs ; [] |2301| 
	.dwpsn	file "../Source/prod.c",line 2302,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2302| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_puts")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2302| 
        ; call occurs [#_scia_puts] ; [] |2302| 
$C$L364:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2304,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2304| 
        B         $C$L367,EQ            ; [CPU_] |2304| 
        ; branchcc occurs ; [] |2304| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2304| 
        B         $C$L367,EQ            ; [CPU_] |2304| 
        ; branchcc occurs ; [] |2304| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2304| 
        B         $C$L367,EQ            ; [CPU_] |2304| 
        ; branchcc occurs ; [] |2304| 
        CMPB      AL,#7                 ; [CPU_] |2304| 
        B         $C$L363,NEQ           ; [CPU_] |2304| 
        ; branchcc occurs ; [] |2304| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2305,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2305| 
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_puts")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2305| 
        ; call occurs [#_scia_puts] ; [] |2305| 
        MOV       AL,*-SP[47]           ; [CPU_] |2305| 
	.dwpsn	file "../Source/prod.c",line 2307,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2307| 
        B         $C$L369,EQ            ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
        CMPB      AL,#3                 ; [CPU_] |2307| 
        B         $C$L368,EQ            ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
        CMPB      AL,#4                 ; [CPU_] |2307| 
        B         $C$L385,EQ            ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
        CMPB      AL,#7                 ; [CPU_] |2307| 
        B         $C$L393,EQ            ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
        B         $C$L394,UNC           ; [CPU_] |2307| 
        ; branch occurs ; [] |2307| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2313,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2313| 
        MOV       AH,#15820             ; [CPU_] |2313| 
	.dwpsn	file "../Source/prod.c",line 2315,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2315| 
        ; branch occurs ; [] |2315| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2309,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2309| 
        MOV       AH,#15649             ; [CPU_] |2309| 
	.dwpsn	file "../Source/prod.c",line 2311,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2311| 
        ; branch occurs ; [] |2311| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2262,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2262| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2262| 
        MOV       AL,#1024              ; [CPU_] |2262| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2262| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2262| 
        ; call occurs [#_scia_getparam] ; [] |2262| 
        MOVL      XAR0,#86              ; [CPU_] |2262| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2262| 
	.dwpsn	file "../Source/prod.c",line 2265,column 8,is_stmt,isa 0
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_atoi")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2265| 
        ; call occurs [#_atoi] ; [] |2265| 
        MOVL      XAR0,#86              ; [CPU_] |2265| 
        MOV       *-SP[47],AL           ; [CPU_] |2265| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2265| 
	.dwpsn	file "../Source/prod.c",line 2266,column 8,is_stmt,isa 0
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2266| 
        ; call occurs [#_scia_puts] ; [] |2266| 
        MOV       AL,*-SP[47]           ; [CPU_] |2266| 
	.dwpsn	file "../Source/prod.c",line 2267,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2267| 
        B         $C$L371,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
        CMPB      AL,#3                 ; [CPU_] |2267| 
        B         $C$L372,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
        CMPB      AL,#4                 ; [CPU_] |2267| 
        B         $C$L373,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
        CMPB      AL,#7                 ; [CPU_] |2267| 
        B         $C$L374,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
	.dwpsn	file "../Source/prod.c",line 2268,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2268| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_puts")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2268| 
        ; call occurs [#_scia_puts] ; [] |2268| 
$C$L371:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2270,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2270| 
        B         $C$L374,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2270| 
        B         $C$L374,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2270| 
        B         $C$L374,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
        CMPB      AL,#7                 ; [CPU_] |2270| 
        B         $C$L370,NEQ           ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2271,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2271| 
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2271| 
        ; call occurs [#_scia_puts] ; [] |2271| 
        MOV       AL,*-SP[47]           ; [CPU_] |2271| 
	.dwpsn	file "../Source/prod.c",line 2273,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2273| 
        B         $C$L376,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        CMPB      AL,#3                 ; [CPU_] |2273| 
        B         $C$L385,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        CMPB      AL,#4                 ; [CPU_] |2273| 
        B         $C$L375,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        CMPB      AL,#7                 ; [CPU_] |2273| 
        B         $C$L393,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        B         $C$L394,UNC           ; [CPU_] |2273| 
        ; branch occurs ; [] |2273| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2283,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2283| 
        MOV       AH,#16672             ; [CPU_] |2283| 
	.dwpsn	file "../Source/prod.c",line 2285,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2285| 
        ; branch occurs ; [] |2285| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2275,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2275| 
        MOV       AH,#16073             ; [CPU_] |2275| 
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2277| 
        ; branch occurs ; [] |2277| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2228,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2228| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2228| 
        MOV       AL,#1024              ; [CPU_] |2228| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2228| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2228| 
        ; call occurs [#_scia_getparam] ; [] |2228| 
        MOVL      XAR0,#86              ; [CPU_] |2228| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2228| 
	.dwpsn	file "../Source/prod.c",line 2231,column 8,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_atoi")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2231| 
        ; call occurs [#_atoi] ; [] |2231| 
        MOVL      XAR0,#86              ; [CPU_] |2231| 
        MOV       *-SP[47],AL           ; [CPU_] |2231| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2232,column 8,is_stmt,isa 0
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2232| 
        ; call occurs [#_scia_puts] ; [] |2232| 
        MOV       AL,*-SP[47]           ; [CPU_] |2232| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2233| 
        B         $C$L378,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#3                 ; [CPU_] |2233| 
        B         $C$L379,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#4                 ; [CPU_] |2233| 
        B         $C$L380,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#7                 ; [CPU_] |2233| 
        B         $C$L381,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
	.dwpsn	file "../Source/prod.c",line 2234,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2234| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2234| 
        ; call occurs [#_scia_puts] ; [] |2234| 
$C$L378:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2236,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2236| 
        B         $C$L381,EQ            ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2236| 
        B         $C$L381,EQ            ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2236| 
        B         $C$L381,EQ            ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
        CMPB      AL,#7                 ; [CPU_] |2236| 
        B         $C$L377,NEQ           ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2237,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2237| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2237| 
        ; call occurs [#_scia_puts] ; [] |2237| 
        MOV       AL,*-SP[47]           ; [CPU_] |2237| 
	.dwpsn	file "../Source/prod.c",line 2239,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2239| 
        B         $C$L385,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        CMPB      AL,#3                 ; [CPU_] |2239| 
        B         $C$L384,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        CMPB      AL,#4                 ; [CPU_] |2239| 
        B         $C$L382,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        CMPB      AL,#7                 ; [CPU_] |2239| 
        B         $C$L393,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        B         $C$L394,UNC           ; [CPU_] |2239| 
        ; branch occurs ; [] |2239| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2249,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2249| 
        MOV       AH,#16843             ; [CPU_] |2249| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2249| 
        MOV       AL,*-SP[47]           ; [CPU_] |2249| 
	.dwpsn	file "../Source/prod.c",line 2250,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2250| 
	.dwpsn	file "../Source/prod.c",line 2251,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2251| 
        ; branch occurs ; [] |2251| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2245,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2245| 
        MOV       AH,#16418             ; [CPU_] |2245| 
	.dwpsn	file "../Source/prod.c",line 2247,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2247| 
        ; branch occurs ; [] |2247| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2241,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2241| 
	.dwpsn	file "../Source/prod.c",line 2243,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2243| 
        ; branch occurs ; [] |2243| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2199| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2199| 
        MOV       AL,#1024              ; [CPU_] |2199| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2199| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2199| 
        ; call occurs [#_scia_getparam] ; [] |2199| 
        MOVL      XAR0,#86              ; [CPU_] |2199| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2199| 
	.dwpsn	file "../Source/prod.c",line 2201,column 8,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_atoi")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2201| 
        ; call occurs [#_atoi] ; [] |2201| 
        MOVL      XAR0,#86              ; [CPU_] |2201| 
        MOV       *-SP[47],AL           ; [CPU_] |2201| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2201| 
	.dwpsn	file "../Source/prod.c",line 2202,column 8,is_stmt,isa 0
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_puts")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2202| 
        ; call occurs [#_scia_puts] ; [] |2202| 
        MOV       AL,*-SP[47]           ; [CPU_] |2202| 
	.dwpsn	file "../Source/prod.c",line 2203,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2203| 
        B         $C$L388,EQ            ; [CPU_] |2203| 
        ; branchcc occurs ; [] |2203| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2203| 
        B         $C$L387,EQ            ; [CPU_] |2203| 
        ; branchcc occurs ; [] |2203| 
	.dwpsn	file "../Source/prod.c",line 2204,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2204| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2204| 
        ; call occurs [#_scia_puts] ; [] |2204| 
$C$L387:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2206,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2206| 
        B         $C$L388,EQ            ; [CPU_] |2206| 
        ; branchcc occurs ; [] |2206| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2206| 
        B         $C$L386,NEQ           ; [CPU_] |2206| 
        ; branchcc occurs ; [] |2206| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2207,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2207| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2207| 
        ; call occurs [#_scia_puts] ; [] |2207| 
        MOV       AL,*-SP[47]           ; [CPU_] |2207| 
	.dwpsn	file "../Source/prod.c",line 2209,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2209| 
        ; branchcc occurs ; [] |2209| 
        CMPB      AL,#1                 ; [CPU_] |2209| 
        B         $C$L396,EQ            ; [CPU_] |2209| 
        ; branchcc occurs ; [] |2209| 
        CMPB      AL,#7                 ; [CPU_] |2209| 
        B         $C$L393,EQ            ; [CPU_] |2209| 
        ; branchcc occurs ; [] |2209| 
        B         $C$L394,UNC           ; [CPU_] |2209| 
        ; branch occurs ; [] |2209| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2211,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2211| 
        MOV       AH,#16397             ; [CPU_] |2211| 
	.dwpsn	file "../Source/prod.c",line 2213,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2213| 
        ; branch occurs ; [] |2213| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2170,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2170| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2170| 
        MOV       AL,#1024              ; [CPU_] |2170| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2170| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2170| 
        ; call occurs [#_scia_getparam] ; [] |2170| 
        MOVL      XAR0,#86              ; [CPU_] |2170| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2170| 
	.dwpsn	file "../Source/prod.c",line 2172,column 8,is_stmt,isa 0
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_atoi")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2172| 
        ; call occurs [#_atoi] ; [] |2172| 
        MOVL      XAR0,#86              ; [CPU_] |2172| 
        MOV       *-SP[47],AL           ; [CPU_] |2172| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2172| 
	.dwpsn	file "../Source/prod.c",line 2173,column 8,is_stmt,isa 0
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_puts")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2173| 
        ; call occurs [#_scia_puts] ; [] |2173| 
        MOV       AL,*-SP[47]           ; [CPU_] |2173| 
	.dwpsn	file "../Source/prod.c",line 2174,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2174| 
        B         $C$L392,EQ            ; [CPU_] |2174| 
        ; branchcc occurs ; [] |2174| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2174| 
        B         $C$L391,EQ            ; [CPU_] |2174| 
        ; branchcc occurs ; [] |2174| 
	.dwpsn	file "../Source/prod.c",line 2175,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2175| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2175| 
        ; call occurs [#_scia_puts] ; [] |2175| 
$C$L391:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2177,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2177| 
        B         $C$L392,EQ            ; [CPU_] |2177| 
        ; branchcc occurs ; [] |2177| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2177| 
        B         $C$L390,NEQ           ; [CPU_] |2177| 
        ; branchcc occurs ; [] |2177| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2178,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2178| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_puts")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2178| 
        ; call occurs [#_scia_puts] ; [] |2178| 
        MOV       AL,*-SP[47]           ; [CPU_] |2178| 
	.dwpsn	file "../Source/prod.c",line 2180,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2180| 
        ; branchcc occurs ; [] |2180| 
        CMPB      AL,#1                 ; [CPU_] |2180| 
        B         $C$L395,EQ            ; [CPU_] |2180| 
        ; branchcc occurs ; [] |2180| 
        CMPB      AL,#7                 ; [CPU_] |2180| 
        B         $C$L394,NEQ           ; [CPU_] |2180| 
        ; branchcc occurs ; [] |2180| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2190,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2190| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2190| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2190| 
        MOV       AL,#0                 ; [CPU_] |2190| 
        MOV       AH,#17096             ; [CPU_] |2190| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2190| 
        ; call occurs [#FS$$DIV] ; [] |2190| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2190| 
        MOV       AL,*-SP[47]           ; [CPU_] |2190| 
	.dwpsn	file "../Source/prod.c",line 2191,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2191| 
        MOV       *-SP[47],AL           ; [CPU_] |2191| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2381,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2381| 
        MOV       AH,#0                 ; [CPU_] |2381| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2381| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2381| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2381| 
        ; call occurs [#FS$$CMP] ; [] |2381| 
        CMPB      AL,#0                 ; [CPU_] |2381| 
        B         $C$L399,NEQ           ; [CPU_] |2381| 
        ; branchcc occurs ; [] |2381| 
	.dwpsn	file "../Source/prod.c",line 2382,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2382| 
	.dwpsn	file "../Source/prod.c",line 2383,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2383| 
        ; branch occurs ; [] |2383| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2186,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2186| 
        MOV       AH,#16104             ; [CPU_] |2186| 
	.dwpsn	file "../Source/prod.c",line 2188,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2188| 
        ; branch occurs ; [] |2188| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2182,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2182| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2182| 
        MOV       AL,*-SP[47]           ; [CPU_] |2182| 
	.dwpsn	file "../Source/prod.c",line 2183,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2183| 
$C$L398:    
        MOV       *-SP[47],AL           ; [CPU_] |2183| 
$C$L399:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2386,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2386| 
        B         $C$L402,EQ            ; [CPU_] |2386| 
        ; branchcc occurs ; [] |2386| 
	.dwpsn	file "../Source/prod.c",line 2392,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2392| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2396| 
	.dwpsn	file "../Source/prod.c",line 2393,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2393| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2396| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2393,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2393| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2396| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2396| 
        ADD       AL,*-SP[57]           ; [CPU_] |2396| 
        MOV       *-SP[3],AL            ; [CPU_] |2396| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2396| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2396| 
        ANDB      AL,#0x0f              ; [CPU_] |2396| 
        MOV       ACC,AL << 1           ; [CPU_] |2396| 
        ADDL      ACC,XAR6              ; [CPU_] |2396| 
        MOVL      XAR4,ACC              ; [CPU_] |2396| 
        MOVL      XAR0,#44              ; [CPU_] |2396| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2396| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2396| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2396| 
        MOVL      XAR4,XAR1             ; [CPU_] |2396| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_sprintf")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2396| 
        ; call occurs [#_sprintf] ; [] |2396| 
        MOVL      XAR4,XAR1             ; [CPU_] |2396| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2398| 
        ; call occurs [#_scia_puts] ; [] |2398| 
        MOVL      XAR0,#40              ; [CPU_] |2398| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2398| 
	.dwpsn	file "../Source/prod.c",line 2400,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2400| 
	.dwpsn	file "../Source/prod.c",line 2394,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2394| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2401,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2401| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2401| 
        CMPL      ACC,XAR6              ; [CPU_] |2401| 
        B         $C$L401,NEQ           ; [CPU_] |2401| 
        ; branchcc occurs ; [] |2401| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2402,column 8,is_stmt,isa 0
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_update_units")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2402| 
        ; call occurs [#_update_units] ; [] |2402| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2404,column 8,is_stmt,isa 0
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2404| 
        ; call occurs [#_ad7738_setcal] ; [] |2404| 
        MOVL      XAR0,#78              ; [CPU_] |2404| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2404| 
	.dwpsn	file "../Source/prod.c",line 2405,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2405| 
        MOVL      XAR4,ACC              ; [CPU_] |2405| 
        MOVL      XAR0,#88              ; [CPU_] |2405| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2405| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2405| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2405| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2405| 
        MOVL      XAR0,#88              ; [CPU_] |2405| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2405| 
	.dwpsn	file "../Source/prod.c",line 2406,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2406| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2406| 
        ; call occurs [#_ad7738_resetvall] ; [] |2406| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2400,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2400| 
        ADDB      XAR1,#10              ; [CPU_] |2400| 
        MOV       AL,*-SP[58]           ; [CPU_] |2400| 
        CMPB      AL,#4                 ; [CPU_] |2400| 
        B         $C$L400,LO            ; [CPU_] |2400| 
        ; branchcc occurs ; [] |2400| 
        B         $C$L632,UNC           ; [CPU_] |2400| 
        ; branch occurs ; [] |2400| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2387,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2387| 
	.dwpsn	file "../Source/prod.c",line 2389,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2389| 
        ; branch occurs ; [] |2389| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2143,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2143| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2143| 
        MOVL      XAR0,#44              ; [CPU_] |2143| 
        ADD       AL,*-SP[57]           ; [CPU_] |2143| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2143| 
        MOV       *-SP[3],AL            ; [CPU_] |2143| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2143| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2143| 
        MOV       *-SP[47],AL           ; [CPU_] |2143| 
        MOVL      XAR4,XAR1             ; [CPU_] |2143| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_sprintf")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2143| 
        ; call occurs [#_sprintf] ; [] |2143| 
	.dwpsn	file "../Source/prod.c",line 2145,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2145| 
        MOV       AL,#1024              ; [CPU_] |2145| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2145| 
	.dwpsn	file "../Source/prod.c",line 2143,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2143| 
	.dwpsn	file "../Source/prod.c",line 2145,column 6,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2145| 
        ; call occurs [#_scia_getparam] ; [] |2145| 
        MOVZ      AR6,AL                ; [CPU_] |2145| 
        CMPB      AL,#15                ; [CPU_] |2145| 
        B         $C$L404,LOS           ; [CPU_] |2145| 
        ; branchcc occurs ; [] |2145| 
	.dwpsn	file "../Source/prod.c",line 2149,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2149| 
        MOVB      XAR0,#15              ; [CPU_] |2149| 
	.dwpsn	file "../Source/prod.c",line 2148,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2148| 
	.dwpsn	file "../Source/prod.c",line 2149,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2149| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2151,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2151| 
        MOVB      AL,#152               ; [CPU_] |2151| 
        MOV       T,*-SP[57]            ; [CPU_] |2151| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2151| 
        MOVL      XAR0,#86              ; [CPU_] |2151| 
        MPYU      ACC,T,AL              ; [CPU_] |2151| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2151| 
        ADDL      ACC,XAR7              ; [CPU_] |2151| 
        ADDB      ACC,#98               ; [CPU_] |2151| 
        MOVL      XAR1,ACC              ; [CPU_] |2151| 
        MOVL      XAR4,ACC              ; [CPU_] |2151| 
        MOVB      AH,#1                 ; [CPU_] |2151| 
        ADD       AH,AR6                ; [CPU_] |2151| 
        MOVU      ACC,AH                ; [CPU_] |2151| 
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_memcpy")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2151| 
        ; call occurs [#_memcpy] ; [] |2151| 
        MOVL      XAR0,#86              ; [CPU_] |2151| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2151| 
	.dwpsn	file "../Source/prod.c",line 2153,column 6,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2153| 
        ; call occurs [#_scia_puts] ; [] |2153| 
	.dwpsn	file "../Source/prod.c",line 2154,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2154| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2154| 
        ; call occurs [#_scia_puts] ; [] |2154| 
	.dwpsn	file "../Source/prod.c",line 2157,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2157| 
        MOV       AL,*-SP[47]           ; [CPU_] |2157| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2157| 
        MOV       *-SP[3],AL            ; [CPU_] |2157| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2157| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2157| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2157| 
        MOVL      XAR4,XAR1             ; [CPU_] |2157| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_sprintf")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2157| 
        ; call occurs [#_sprintf] ; [] |2157| 
        MOVL      XAR4,XAR1             ; [CPU_] |2157| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2159,column 6,is_stmt,isa 0
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_scia_puts")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2159| 
        ; call occurs [#_scia_puts] ; [] |2159| 
	.dwpsn	file "../Source/prod.c",line 2160,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2160| 
        ; branch occurs ; [] |2160| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2454,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2454| 
        MOVB      AL,#152               ; [CPU_] |2454| 
        MOV       T,*-SP[57]            ; [CPU_] |2454| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2454| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2454| 
        MPYU      ACC,T,AL              ; [CPU_] |2454| 
        MOVB      XAR0,#124             ; [CPU_] |2454| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2454| 
        ADDL      ACC,XAR6              ; [CPU_] |2454| 
        MOVL      XAR1,ACC              ; [CPU_] |2454| 
        MOVB      AL,#1                 ; [CPU_] |2454| 
        ADD       AL,*-SP[57]           ; [CPU_] |2454| 
        MOV       *-SP[47],AL           ; [CPU_] |2454| 
        MOV       *-SP[3],AL            ; [CPU_] |2454| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2454| 
        MOVL      XAR0,#70              ; [CPU_] |2454| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2454| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2454| 
        MOV       ACC,AL << 1           ; [CPU_] |2454| 
        ADDL      ACC,XAR6              ; [CPU_] |2454| 
        MOVL      XAR4,ACC              ; [CPU_] |2454| 
        MOVL      XAR0,#44              ; [CPU_] |2454| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2454| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2454| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2454| 
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_sprintf")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2454| 
        ; call occurs [#_sprintf] ; [] |2454| 
        MOVL      XAR0,#44              ; [CPU_] |2454| 
	.dwpsn	file "../Source/prod.c",line 2456,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2456| 
	.dwpsn	file "../Source/prod.c",line 2454,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2454| 
	.dwpsn	file "../Source/prod.c",line 2456,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2456| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2456| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2456| 
        ; call occurs [#_scia_getparam] ; [] |2456| 
        MOVL      XAR0,#86              ; [CPU_] |2456| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2456,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2456| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_strtod")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2457,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2457| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2457| 
        MOVL      XAR0,#86              ; [CPU_] |2457| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2457| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2458| 
        ; call occurs [#_scia_puts] ; [] |2458| 
	.dwpsn	file "../Source/prod.c",line 2459,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2459| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_scia_puts")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2459| 
        ; call occurs [#_scia_puts] ; [] |2459| 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2461| 
        MOVL      XAR0,#44              ; [CPU_] |2461| 
        MOV       AL,*-SP[47]           ; [CPU_] |2461| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2461| 
        MOV       *-SP[3],AL            ; [CPU_] |2461| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2461| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_sprintf")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2461| 
        ; call occurs [#_sprintf] ; [] |2461| 
        MOVL      XAR0,#44              ; [CPU_] |2461| 
	.dwpsn	file "../Source/prod.c",line 2462,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2462| 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2461| 
	.dwpsn	file "../Source/prod.c",line 2462,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2462| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2462| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2462| 
        ; call occurs [#_scia_getparam] ; [] |2462| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_strtod")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2463| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2463| 
        MOVL      XAR0,#86              ; [CPU_] |2463| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2463| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_puts")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2464| 
        ; call occurs [#_scia_puts] ; [] |2464| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2465| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_scia_puts")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2465| 
        ; call occurs [#_scia_puts] ; [] |2465| 
	.dwpsn	file "../Source/prod.c",line 2468,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2468| 
        MOVB      XAR0,#228             ; [CPU_] |2468| 
        MOV       AL,*-SP[47]           ; [CPU_] |2468| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2468| 
        MOV       *-SP[3],AL            ; [CPU_] |2468| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2468| 
        MOVB      XAR0,#230             ; [CPU_] |2468| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2468| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2468| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2468| 
	.dwpsn	file "../Source/prod.c",line 2477,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2477| 
        ; branch occurs ; [] |2477| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2417,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2417| 
        MOV       AL,*-SP[47]           ; [CPU_] |2417| 
        MOVL      XAR0,#44              ; [CPU_] |2417| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2417| 
        MOV       *-SP[3],AL            ; [CPU_] |2417| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2417| 
        MOVL      XAR4,XAR1             ; [CPU_] |2417| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_sprintf")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2417| 
        ; call occurs [#_sprintf] ; [] |2417| 
	.dwpsn	file "../Source/prod.c",line 2418,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2418| 
	.dwpsn	file "../Source/prod.c",line 2417,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2417| 
	.dwpsn	file "../Source/prod.c",line 2418,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2418| 
        MOV       AL,#1024              ; [CPU_] |2418| 
        MOVL      XAR5,XAR1             ; [CPU_] |2418| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2418| 
        ; call occurs [#_scia_getparam] ; [] |2418| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_strtod")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2420,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2420| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2420| 
        ; call occurs [#_scia_puts] ; [] |2420| 
	.dwpsn	file "../Source/prod.c",line 2422,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2422| 
        MOV       AH,#0                 ; [CPU_] |2422| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2422| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2422| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2422| 
        ; call occurs [#FS$$CMP] ; [] |2422| 
        CMPB      AL,#0                 ; [CPU_] |2422| 
        B         $C$L412,EQ            ; [CPU_] |2422| 
        ; branchcc occurs ; [] |2422| 
	.dwpsn	file "../Source/prod.c",line 2426,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2426| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_puts")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2426| 
        ; call occurs [#_scia_puts] ; [] |2426| 
	.dwpsn	file "../Source/prod.c",line 2427,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2427| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2427| 
        MOVB      AL,#152               ; [CPU_] |2427| 
        MOV       T,*-SP[57]            ; [CPU_] |2427| 
        MPYU      ACC,T,AL              ; [CPU_] |2427| 
        ADDL      ACC,XAR6              ; [CPU_] |2427| 
        MOVL      XAR1,ACC              ; [CPU_] |2427| 
        MOVB      XAR0,#224             ; [CPU_] |2427| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2430| 
	.dwpsn	file "../Source/prod.c",line 2427,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2427| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2427| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2430| 
        MOV       AL,*-SP[47]           ; [CPU_] |2430| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2430| 
        MOV       *-SP[3],AL            ; [CPU_] |2430| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2430| 
        MOVL      XAR0,#44              ; [CPU_] |2430| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2430| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2430| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_sprintf")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2430| 
        ; call occurs [#_sprintf] ; [] |2430| 
        MOVL      XAR0,#44              ; [CPU_] |2430| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2430| 
	.dwpsn	file "../Source/prod.c",line 2432,column 6,is_stmt,isa 0
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2432| 
        ; call occurs [#_scia_puts] ; [] |2432| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2428| 
	.dwpsn	file "../Source/prod.c",line 2434,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2434| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2434| 
        CMPB      AL,#247               ; [CPU_] |2434| 
        B         $C$L632,NEQ           ; [CPU_] |2434| 
        ; branchcc occurs ; [] |2434| 
	.dwpsn	file "../Source/prod.c",line 2436,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2436| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2436| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2436| 
        MOV       AL,#0                 ; [CPU_] |2436| 
        MOV       AH,#17096             ; [CPU_] |2436| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2436| 
        ; call occurs [#FS$$DIV] ; [] |2436| 
        MOVB      XAR0,#126             ; [CPU_] |2436| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2436| 
        MOVL      XAR0,#40              ; [CPU_] |2436| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2436| 
	.dwpsn	file "../Source/prod.c",line 2439,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2439| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2440,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2440| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2440| 
        CMPL      ACC,XAR6              ; [CPU_] |2440| 
        B         $C$L411,NEQ           ; [CPU_] |2440| 
        ; branchcc occurs ; [] |2440| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2443,column 9,is_stmt,isa 0
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2443| 
        ; call occurs [#_ad7738_setcal] ; [] |2443| 
        MOVL      XAR0,#78              ; [CPU_] |2443| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2443| 
	.dwpsn	file "../Source/prod.c",line 2444,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2444| 
        MOVL      XAR4,ACC              ; [CPU_] |2444| 
        MOVL      XAR0,#88              ; [CPU_] |2444| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2444| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2444| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2444| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2444| 
        MOVL      XAR0,#88              ; [CPU_] |2444| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2444| 
	.dwpsn	file "../Source/prod.c",line 2445,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2445| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2445| 
        ; call occurs [#_ad7738_resetvall] ; [] |2445| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2439,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2439| 
        ADDB      XAR1,#10              ; [CPU_] |2439| 
        MOV       AL,*-SP[58]           ; [CPU_] |2439| 
        CMPB      AL,#4                 ; [CPU_] |2439| 
        B         $C$L410,LO            ; [CPU_] |2439| 
        ; branchcc occurs ; [] |2439| 
        B         $C$L632,UNC           ; [CPU_] |2439| 
        ; branch occurs ; [] |2439| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2424,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2424| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2424| 
        ; call occurs [#_scia_puts] ; [] |2424| 
	.dwpsn	file "../Source/prod.c",line 2416,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2416| 
        ; branch occurs ; [] |2416| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2132,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2132| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_scia_puts")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2132| 
        ; call occurs [#_scia_puts] ; [] |2132| 
	.dwpsn	file "../Source/prod.c",line 2122,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2122| 
        ; branch occurs ; [] |2122| 
$C$L414:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3094,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3094| 
        B         $C$L625,LO            ; [CPU_] |3094| 
        ; branchcc occurs ; [] |3094| 
	.dwpsn	file "../Source/prod.c",line 3097,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3097| 
        CMPB      AL,#83                ; [CPU_] |3097| 
        B         $C$L415,GT            ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        CMPB      AL,#83                ; [CPU_] |3097| 
        B         $C$L419,EQ            ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        CMPB      AL,#73                ; [CPU_] |3097| 
        B         $C$L424,EQ            ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        CMPB      AL,#76                ; [CPU_] |3097| 
        B         $C$L428,EQ            ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        CMPB      AL,#80                ; [CPU_] |3097| 
        B         $C$L421,EQ            ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        B         $C$L625,UNC           ; [CPU_] |3097| 
        ; branch occurs ; [] |3097| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3097| 
        B         $C$L417,EQ            ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        CMPB      AL,#86                ; [CPU_] |3097| 
        B         $C$L625,NEQ           ; [CPU_] |3097| 
        ; branchcc occurs ; [] |3097| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3125,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3125| 
        B         $C$L416,LOS           ; [CPU_] |3125| 
        ; branchcc occurs ; [] |3125| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3125,column 6,is_stmt,isa 0
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_atoi")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3125| 
        ; call occurs [#_atoi] ; [] |3125| 
        CMPB      AL,#4                 ; [CPU_] |3125| 
        B         $C$L416,GT            ; [CPU_] |3125| 
        ; branchcc occurs ; [] |3125| 
        CMPB      AL,#0                 ; [CPU_] |3125| 
        B         $C$L416,LEQ           ; [CPU_] |3125| 
        ; branchcc occurs ; [] |3125| 
	.dwpsn	file "../Source/prod.c",line 3127,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3127| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3127| 
        ADD       ACC,AR5               ; [CPU_] |3127| 
        MOVL      XAR4,ACC              ; [CPU_] |3127| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3127| 
	.dwpsn	file "../Source/prod.c",line 3128,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3128| 
        ; branch occurs ; [] |3128| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3129,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3129| 
        B         $C$L426,UNC           ; [CPU_] |3129| 
        ; branch occurs ; [] |3129| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3101,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3101| 
        B         $C$L418,LOS           ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3101,column 6,is_stmt,isa 0
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_atoi")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3101| 
        ; call occurs [#_atoi] ; [] |3101| 
        CMPB      AL,#4                 ; [CPU_] |3101| 
        MOVZ      AR4,AL                ; [CPU_] |3101| 
        B         $C$L418,GT            ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
        CMPB      AL,#0                 ; [CPU_] |3101| 
        B         $C$L418,LEQ           ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3103,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3103| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3103| 
	.dwpsn	file "../Source/prod.c",line 3106,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3106| 
        ; branch occurs ; [] |3106| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3107,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3107| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3107| 
        ; call occurs [#_ad7738_resettare] ; [] |3107| 
	.dwpsn	file "../Source/prod.c",line 3108,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3108| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3108| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3108| 
	.dwpsn	file "../Source/prod.c",line 3109,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3109| 
        B         $C$L426,UNC           ; [CPU_] |3109| 
        ; branch occurs ; [] |3109| 
$C$L419:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3135,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3135| 
        B         $C$L420,LOS           ; [CPU_] |3135| 
        ; branchcc occurs ; [] |3135| 
        MOVL      ACC,XAR4              ; [CPU_] |3135| 
        MOVL      XAR0,#66              ; [CPU_] |3135| 
        ADDB      ACC,#2                ; [CPU_] |3135| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3135| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3135| 
        CMPB      AL,#67                ; [CPU_] |3135| 
        B         $C$L420,NEQ           ; [CPU_] |3135| 
        ; branchcc occurs ; [] |3135| 
	.dwpsn	file "../Source/prod.c",line 3136,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3136| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3136| 
        ; call occurs [#_shunt_switch] ; [] |3136| 
	.dwpsn	file "../Source/prod.c",line 3137,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3137| 
	.dwpsn	file "../Source/prod.c",line 3138,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3138| 
        ; branch occurs ; [] |3138| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3139,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3139| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3139| 
        ; call occurs [#_shunt_switch] ; [] |3139| 
	.dwpsn	file "../Source/prod.c",line 3140,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3140| 
        B         $C$L631,UNC           ; [CPU_] |3140| 
        ; branch occurs ; [] |3140| 
$C$L421:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3115,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3115| 
        B         $C$L423,LOS           ; [CPU_] |3115| 
        ; branchcc occurs ; [] |3115| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3115,column 6,is_stmt,isa 0
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_atoi")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3115| 
        ; call occurs [#_atoi] ; [] |3115| 
        CMPB      AL,#4                 ; [CPU_] |3115| 
        B         $C$L423,GT            ; [CPU_] |3115| 
        ; branchcc occurs ; [] |3115| 
        CMPB      AL,#0                 ; [CPU_] |3115| 
        B         $C$L423,LEQ           ; [CPU_] |3115| 
        ; branchcc occurs ; [] |3115| 
	.dwpsn	file "../Source/prod.c",line 3117,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3117| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3117| 
        ADD       ACC,AR5               ; [CPU_] |3117| 
        MOVL      XAR4,ACC              ; [CPU_] |3117| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3117| 
$C$L422:    
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3117| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3117| 
	.dwpsn	file "../Source/prod.c",line 3118,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3118| 
        ; branch occurs ; [] |3118| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3119,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3119| 
        B         $C$L422,UNC           ; [CPU_] |3119| 
        ; branch occurs ; [] |3119| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3154,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3154| 
        B         $C$L427,LOS           ; [CPU_] |3154| 
        ; branchcc occurs ; [] |3154| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3154,column 6,is_stmt,isa 0
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_atoi")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3154| 
        ; call occurs [#_atoi] ; [] |3154| 
        CMPB      AL,#2                 ; [CPU_] |3154| 
        B         $C$L427,GT            ; [CPU_] |3154| 
        ; branchcc occurs ; [] |3154| 
        CMPB      AL,#0                 ; [CPU_] |3154| 
        B         $C$L427,LEQ           ; [CPU_] |3154| 
        ; branchcc occurs ; [] |3154| 
	.dwpsn	file "../Source/prod.c",line 3156,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3156| 
        ADD       AR6,AL                ; [CPU_] |3156| 
        MOVL      XAR0,#78              ; [CPU_] |3156| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3156| 
        ADD       ACC,AR6               ; [CPU_] |3156| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3156| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3156| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3156| 
        ; call occurs [#_ad7738_resettare] ; [] |3156| 
	.dwpsn	file "../Source/prod.c",line 3157,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3157| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3157| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3157| 
	.dwpsn	file "../Source/prod.c",line 3158,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3158| 
$C$L426:    
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3158| 
        ; call occurs [#_ad7738_resetvall] ; [] |3158| 
	.dwpsn	file "../Source/prod.c",line 3159,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3159| 
        ; branch occurs ; [] |3159| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3160,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3160| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3160| 
        ; call occurs [#_ad7738_resettare] ; [] |3160| 
	.dwpsn	file "../Source/prod.c",line 3161,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3161| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3161| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3161| 
	.dwpsn	file "../Source/prod.c",line 3162,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3162| 
        B         $C$L426,UNC           ; [CPU_] |3162| 
        ; branch occurs ; [] |3162| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3146,column 6,is_stmt,isa 0
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_atoi")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3146| 
        ; call occurs [#_atoi] ; [] |3146| 
	.dwpsn	file "../Source/prod.c",line 3149,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3149| 
        MOV       *-SP[58],AL           ; [CPU_] |3149| 
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3149| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3149| 
	.dwpsn	file "../Source/prod.c",line 3150,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3150| 
        ; branch occurs ; [] |3150| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1097,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1097| 
        CMPB      AL,#76                ; [CPU_] |1097| 
        B         $C$L430,GT            ; [CPU_] |1097| 
        ; branchcc occurs ; [] |1097| 
        CMPB      AL,#76                ; [CPU_] |1097| 
        B         $C$L438,EQ            ; [CPU_] |1097| 
        ; branchcc occurs ; [] |1097| 
        CMPB      AL,#65                ; [CPU_] |1097| 
        B         $C$L431,EQ            ; [CPU_] |1097| 
        ; branchcc occurs ; [] |1097| 
        CMPB      AL,#68                ; [CPU_] |1097| 
        B         $C$L442,EQ            ; [CPU_] |1097| 
        ; branchcc occurs ; [] |1097| 
        B         $C$L625,UNC           ; [CPU_] |1097| 
        ; branch occurs ; [] |1097| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1097| 
        B         $C$L441,EQ            ; [CPU_] |1097| 
        ; branchcc occurs ; [] |1097| 
        CMPB      AL,#83                ; [CPU_] |1097| 
        B         $C$L439,EQ            ; [CPU_] |1097| 
        ; branchcc occurs ; [] |1097| 
        B         $C$L625,UNC           ; [CPU_] |1097| 
        ; branch occurs ; [] |1097| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1102,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1102| 
	.dwpsn	file "../Source/prod.c",line 1103,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1103| 
	.dwpsn	file "../Source/prod.c",line 1102,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1102| 
	.dwpsn	file "../Source/prod.c",line 1103,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1103| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1103| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1103| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1103| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1103| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1103| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1103| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1103| 
        MOVL      XAR4,XAR1             ; [CPU_] |1103| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_sprintf")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1103| 
        ; call occurs [#_sprintf] ; [] |1103| 
	.dwpsn	file "../Source/prod.c",line 1105,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1105| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_scia_puts")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1105| 
        ; call occurs [#_scia_puts] ; [] |1105| 
	.dwpsn	file "../Source/prod.c",line 1106,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1106| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1106| 
        LSR       AL,8                  ; [CPU_] |1106| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1106| 
        MOV       *-SP[3],AL            ; [CPU_] |1106| 
        IN        AL,*(04004H)          ; [CPU_] |1106| 
        MOVL      XAR4,XAR1             ; [CPU_] |1106| 
        ANDB      AL,#0xff              ; [CPU_] |1106| 
        MOV       *-SP[4],AL            ; [CPU_] |1106| 
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_sprintf")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1106| 
        ; call occurs [#_sprintf] ; [] |1106| 
	.dwpsn	file "../Source/prod.c",line 1108,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1108| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_scia_puts")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1108| 
        ; call occurs [#_scia_puts] ; [] |1108| 
	.dwpsn	file "../Source/prod.c",line 1109,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1109| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1109| 
        MOVL      XAR0,#44              ; [CPU_] |1109| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1109| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1109| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1109| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1109| 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_sprintf")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1109| 
        ; call occurs [#_sprintf] ; [] |1109| 
        MOVL      XAR0,#44              ; [CPU_] |1109| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1109| 
	.dwpsn	file "../Source/prod.c",line 1110,column 6,is_stmt,isa 0
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_scia_puts")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1110| 
        ; call occurs [#_scia_puts] ; [] |1110| 
	.dwpsn	file "../Source/prod.c",line 1111,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1111| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1111| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1111| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1111| 
        MOVL      XAR0,#44              ; [CPU_] |1111| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1111| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_sprintf")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1111| 
        ; call occurs [#_sprintf] ; [] |1111| 
        MOVL      XAR0,#44              ; [CPU_] |1111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1111| 
	.dwpsn	file "../Source/prod.c",line 1113,column 6,is_stmt,isa 0
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_scia_puts")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1113| 
        ; call occurs [#_scia_puts] ; [] |1113| 
	.dwpsn	file "../Source/prod.c",line 1115,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1115| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1115| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1115| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1115| 
        MOVL      XAR0,#72              ; [CPU_] |1115| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1115| 
        ADDL      ACC,XAR6              ; [CPU_] |1115| 
        MOVL      XAR4,ACC              ; [CPU_] |1115| 
        MOVL      XAR0,#44              ; [CPU_] |1115| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1115| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1115| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1115| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_sprintf")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1115| 
        ; call occurs [#_sprintf] ; [] |1115| 
        MOVL      XAR0,#44              ; [CPU_] |1115| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1115| 
	.dwpsn	file "../Source/prod.c",line 1117,column 6,is_stmt,isa 0
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_scia_puts")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1117| 
        ; call occurs [#_scia_puts] ; [] |1117| 
	.dwpsn	file "../Source/prod.c",line 1118,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1118| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1118| 
        B         $C$L432,EQ            ; [CPU_] |1118| 
        ; branchcc occurs ; [] |1118| 
        MOVB      XAR0,#34              ; [CPU_] |1118| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1118| 
        CMPB      AL,#1                 ; [CPU_] |1118| 
        B         $C$L433,NEQ           ; [CPU_] |1118| 
        ; branchcc occurs ; [] |1118| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1120,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1120| 
        MOVL      XAR0,#74              ; [CPU_] |1120| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1120| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1120| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1120| 
        ADDL      ACC,XAR6              ; [CPU_] |1120| 
        MOVL      XAR4,ACC              ; [CPU_] |1120| 
        MOVL      XAR0,#44              ; [CPU_] |1120| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1120| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1120| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1120| 
        MOVL      XAR4,XAR1             ; [CPU_] |1120| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_sprintf")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1120| 
        ; call occurs [#_sprintf] ; [] |1120| 
        MOVL      XAR4,XAR1             ; [CPU_] |1120| 
	.dwpsn	file "../Source/prod.c",line 1122,column 7,is_stmt,isa 0
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_scia_puts")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1122| 
        ; call occurs [#_scia_puts] ; [] |1122| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1124,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1124| 
        B         $C$L434,NEQ           ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1124| 
        B         $C$L435,UNC           ; [CPU_] |1124| 
        ; branch occurs ; [] |1124| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1124| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1124| 
        MOVL      XAR0,#44              ; [CPU_] |1124| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1124| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1124| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1124| 
        MOVL      XAR4,XAR1             ; [CPU_] |1124| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_sprintf")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1124| 
        ; call occurs [#_sprintf] ; [] |1124| 
        MOVL      XAR4,XAR1             ; [CPU_] |1124| 
	.dwpsn	file "../Source/prod.c",line 1126,column 6,is_stmt,isa 0
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_scia_puts")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1126| 
        ; call occurs [#_scia_puts] ; [] |1126| 
	.dwpsn	file "../Source/prod.c",line 1128,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1128| 
        MOVB      XAR0,#38              ; [CPU_] |1128| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1128| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1128| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1128| 
        MOVL      XAR0,#44              ; [CPU_] |1128| 
        MOV       *-SP[3],AL            ; [CPU_] |1128| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1128| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_sprintf")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1128| 
        ; call occurs [#_sprintf] ; [] |1128| 
        MOVL      XAR0,#44              ; [CPU_] |1128| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1128| 
	.dwpsn	file "../Source/prod.c",line 1130,column 6,is_stmt,isa 0
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_scia_puts")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1130| 
        ; call occurs [#_scia_puts] ; [] |1130| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1132,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1132| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1133,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1133| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_puts")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1133| 
        ; call occurs [#_scia_puts] ; [] |1133| 
        MOV       AL,*-SP[58]           ; [CPU_] |1133| 
	.dwpsn	file "../Source/prod.c",line 1134,column 7,is_stmt,isa 0
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_print_channel")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1134| 
        ; call occurs [#_print_channel] ; [] |1134| 
	.dwpsn	file "../Source/prod.c",line 1135,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1135| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_print_sensor")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1135| 
        ; call occurs [#_print_sensor] ; [] |1135| 
	.dwpsn	file "../Source/prod.c",line 1132,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1132| 
        INC       *-SP[58]              ; [CPU_] |1132| 
        MOV       AL,*-SP[58]           ; [CPU_] |1132| 
        CMPB      AL,#4                 ; [CPU_] |1132| 
        B         $C$L436,LO            ; [CPU_] |1132| 
        ; branchcc occurs ; [] |1132| 
	.dwpsn	file "../Source/prod.c",line 1138,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1138| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_scia_puts")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1138| 
        ; call occurs [#_scia_puts] ; [] |1138| 
	.dwpsn	file "../Source/prod.c",line 1139,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1139| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1139| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1139| 
        MOVL      ACC,XAR4              ; [CPU_] |1139| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1139| 
        MOVL      XAR4,ACC              ; [CPU_] |1139| 
        MOVL      XAR0,#44              ; [CPU_] |1139| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1139| 
        MOV       *-SP[3],AL            ; [CPU_] |1139| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1139| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_sprintf")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1139| 
        ; call occurs [#_sprintf] ; [] |1139| 
        MOVL      XAR0,#44              ; [CPU_] |1139| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1139| 
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_scia_puts")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1141| 
        ; call occurs [#_scia_puts] ; [] |1141| 
        MOVL      XAR0,#40              ; [CPU_] |1141| 
	.dwpsn	file "../Source/prod.c",line 1142,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1142| 
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1141| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1143,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1143| 
        MOVB      AL,#65                ; [CPU_] |1143| 
        MOVL      XAR0,#44              ; [CPU_] |1143| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1143| 
        ADD       AL,*-SP[47]           ; [CPU_] |1143| 
        MOV       *-SP[3],AL            ; [CPU_] |1143| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1143| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1143| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1143| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_sprintf")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1143| 
        ; call occurs [#_sprintf] ; [] |1143| 
        MOVL      XAR0,#44              ; [CPU_] |1143| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1143| 
	.dwpsn	file "../Source/prod.c",line 1145,column 7,is_stmt,isa 0
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_scia_puts")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1145| 
        ; call occurs [#_scia_puts] ; [] |1145| 
	.dwpsn	file "../Source/prod.c",line 1142,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1142| 
	.dwpsn	file "../Source/prod.c",line 1145,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1145| 
	.dwpsn	file "../Source/prod.c",line 1142,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1142| 
        B         $C$L437,LT            ; [CPU_] |1142| 
        ; branchcc occurs ; [] |1142| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_print_vfd")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1147| 
        ; call occurs [#_print_vfd] ; [] |1147| 
	.dwpsn	file "../Source/prod.c",line 1148,column 6,is_stmt,isa 0
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_print_dac")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1148| 
        ; call occurs [#_print_dac] ; [] |1148| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1149,column 6,is_stmt,isa 0
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_print_limits")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1149| 
        ; call occurs [#_print_limits] ; [] |1149| 
	.dwpsn	file "../Source/prod.c",line 1150,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1150| 
        ; branch occurs ; [] |1150| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1154,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1154| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_puts")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1154| 
        ; call occurs [#_scia_puts] ; [] |1154| 
	.dwpsn	file "../Source/prod.c",line 1156,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1156| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1157,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1157| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1157| 
        MOVL      XAR0,#44              ; [CPU_] |1157| 
        ADD       AL,*-SP[57]           ; [CPU_] |1157| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1157| 
        MOVZ      AR1,AL                ; [CPU_] |1157| 
        MOV       *-SP[3],AL            ; [CPU_] |1157| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1157| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_sprintf")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1157| 
        ; call occurs [#_sprintf] ; [] |1157| 
        MOVL      XAR0,#44              ; [CPU_] |1157| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1157| 
	.dwpsn	file "../Source/prod.c",line 1158,column 7,is_stmt,isa 0
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1158| 
        ; call occurs [#_scia_puts] ; [] |1158| 
        MOV       AL,*-SP[57]           ; [CPU_] |1158| 
	.dwpsn	file "../Source/prod.c",line 1159,column 7,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_print_sensor")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1159| 
        ; call occurs [#_print_sensor] ; [] |1159| 
	.dwpsn	file "../Source/prod.c",line 1156,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1156| 
        MOV       *-SP[57],AR1          ; [CPU_] |1156| 
        CMPB      AL,#20                ; [CPU_] |1156| 
        B         $C$L440,LO            ; [CPU_] |1156| 
        ; branchcc occurs ; [] |1156| 
        B         $C$L632,UNC           ; [CPU_] |1156| 
        ; branch occurs ; [] |1156| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_print_dac")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1170| 
        ; call occurs [#_print_dac] ; [] |1170| 
	.dwpsn	file "../Source/prod.c",line 1171,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1171| 
        ; branch occurs ; [] |1171| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1165,column 6,is_stmt,isa 0
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_print_vfd")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1165| 
        ; call occurs [#_print_vfd] ; [] |1165| 
	.dwpsn	file "../Source/prod.c",line 1166,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1166| 
        ; branch occurs ; [] |1166| 
$C$L443:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2714,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2714| 
        B         $C$L625,LO            ; [CPU_] |2714| 
        ; branchcc occurs ; [] |2714| 
	.dwpsn	file "../Source/prod.c",line 2717,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2717| 
        CMPB      AL,#68                ; [CPU_] |2717| 
        B         $C$L444,EQ            ; [CPU_] |2717| 
        ; branchcc occurs ; [] |2717| 
        CMPB      AL,#83                ; [CPU_] |2717| 
        B         $C$L450,EQ            ; [CPU_] |2717| 
        ; branchcc occurs ; [] |2717| 
        B         $C$L625,UNC           ; [CPU_] |2717| 
        ; branch occurs ; [] |2717| 
$C$L444:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2835,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2835| 
        B         $C$L625,LO            ; [CPU_] |2835| 
        ; branchcc occurs ; [] |2835| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2839,column 6,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_atoi")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2839| 
        ; call occurs [#_atoi] ; [] |2839| 
        MOV       *-SP[57],AL           ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2841,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2841| 
        CMPB      AL,#4                 ; [CPU_] |2841| 
        B         $C$L625,HIS           ; [CPU_] |2841| 
        ; branchcc occurs ; [] |2841| 
	.dwpsn	file "../Source/prod.c",line 2847,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2847| 
        MOV       *-SP[57],AL           ; [CPU_] |2847| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2847| 
        MOV       T,AL                  ; [CPU_] |2847| 
        MOVB      AL,#12                ; [CPU_] |2847| 
        MPYU      ACC,T,AL              ; [CPU_] |2847| 
        ADDL      ACC,XAR6              ; [CPU_] |2847| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2847| 
        MOVL      XAR1,ACC              ; [CPU_] |2847| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2847| 
        CMPB      AL,#7                 ; [CPU_] |2847| 
        B         $C$L625,NEQ           ; [CPU_] |2847| 
        ; branchcc occurs ; [] |2847| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_strtod")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2851,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2851| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2853,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2853| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2853| 
        MOVL      ACC,XAR6              ; [CPU_] |2853| 
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2853| 
        ; call occurs [#FS$$CMP] ; [] |2853| 
        CMPB      AL,#0                 ; [CPU_] |2853| 
        B         $C$L625,LT            ; [CPU_] |2853| 
        ; branchcc occurs ; [] |2853| 
        MOV       AL,#0                 ; [CPU_] |2853| 
        MOV       AH,#16672             ; [CPU_] |2853| 
        MOVL      XAR0,#88              ; [CPU_] |2853| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2853| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2853| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2853| 
        ; call occurs [#FS$$CMP] ; [] |2853| 
        CMPB      AL,#0                 ; [CPU_] |2853| 
        B         $C$L625,GT            ; [CPU_] |2853| 
        ; branchcc occurs ; [] |2853| 
	.dwpsn	file "../Source/prod.c",line 2859,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2859| 
        MOV       AH,#0                 ; [CPU_] |2859| 
        MOVL      XAR0,#88              ; [CPU_] |2859| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2859| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2859| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2859| 
        ; call occurs [#FS$$CMP] ; [] |2859| 
        CMPB      AL,#0                 ; [CPU_] |2859| 
        B         $C$L445,GEQ           ; [CPU_] |2859| 
        ; branchcc occurs ; [] |2859| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2859| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2859| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2859| 
        B         $C$L446,UNC           ; [CPU_] |2859| 
        ; branch occurs ; [] |2859| 
$C$L445:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2859| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2859| 
$C$L446:    
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2859| 
        ; call occurs [#FS$$MPY] ; [] |2859| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2859| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2859| 
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2859| 
        ; call occurs [#FS$$ADD] ; [] |2859| 
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2859| 
        ; call occurs [#FS$$TOLL] ; [] |2859| 
	.dwpsn	file "../Source/prod.c",line 2866,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2866| 
	.dwpsn	file "../Source/prod.c",line 2859,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2859| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2859| 
	.dwpsn	file "../Source/prod.c",line 2866,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2866| 
        CMP64     ACC:P                 ; [CPU_] |2866| 
        B         $C$L448,LEQ           ; [CPU_] |2866| 
        ; branchcc occurs ; [] |2866| 
	.dwpsn	file "../Source/prod.c",line 2868,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2868| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2868| 
        MOV       *-SP[2],#0            ; [CPU_] |2868| 
        MOV       *-SP[1],#0            ; [CPU_] |2868| 
        MOVL      P,*-SP[32]            ; [CPU_] |2868| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2868| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$966, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2868| 
        ; call occurs [#LL$$CMP] ; [] |2868| 
        CMPB      AL,#0                 ; [CPU_] |2868| 
        B         $C$L447,GEQ           ; [CPU_] |2868| 
        ; branchcc occurs ; [] |2868| 
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2871| 
        MOV       *-SP[35],AL           ; [CPU_] |2871| 
        B         $C$L449,UNC           ; [CPU_] |2871| 
        ; branch occurs ; [] |2871| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2869,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2869| 
	.dwpsn	file "../Source/prod.c",line 2870,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2870| 
        ; branch occurs ; [] |2870| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2867,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2867| 
$C$L449:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2874,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2874| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2874| 
        ; call occurs [#_mcbsp_xmit] ; [] |2874| 
	.dwpsn	file "../Source/prod.c",line 2875,column 6,is_stmt,isa 0
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_latch_dac")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2875| 
        ; call occurs [#_latch_dac] ; [] |2875| 
	.dwpsn	file "../Source/prod.c",line 2877,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2877| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2877| 
        MOVL      XAR0,#44              ; [CPU_] |2877| 
        ADD       AL,*-SP[57]           ; [CPU_] |2877| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2877| 
        MOV       *-SP[3],AL            ; [CPU_] |2877| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2877| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2877| 
        MOV       AL,*-SP[35]           ; [CPU_] |2877| 
        MOV       *-SP[7],AL            ; [CPU_] |2877| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2877| 
        MOVL      XAR4,XAR1             ; [CPU_] |2877| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_sprintf")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2877| 
        ; call occurs [#_sprintf] ; [] |2877| 
        MOVL      XAR4,XAR1             ; [CPU_] |2877| 
	.dwpsn	file "../Source/prod.c",line 2881,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2881| 
        ; branch occurs ; [] |2881| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2724,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2724| 
        MOVL      XAR0,#44              ; [CPU_] |2724| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2724| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2724| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2724| 
        MOVL      XAR4,XAR1             ; [CPU_] |2724| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_sprintf")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2724| 
        ; call occurs [#_sprintf] ; [] |2724| 
	.dwpsn	file "../Source/prod.c",line 2725,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2725| 
	.dwpsn	file "../Source/prod.c",line 2724,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2724| 
	.dwpsn	file "../Source/prod.c",line 2725,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2725| 
        MOV       AL,#1024              ; [CPU_] |2725| 
        MOVL      XAR5,XAR1             ; [CPU_] |2725| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2725| 
        ; call occurs [#_scia_getparam] ; [] |2725| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2726| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_atoi")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2726| 
        ; call occurs [#_atoi] ; [] |2726| 
        MOV       *-SP[57],AL           ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2727,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2727| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2727| 
        ; call occurs [#_scia_puts] ; [] |2727| 
        MOV       AL,*-SP[57]           ; [CPU_] |2727| 
	.dwpsn	file "../Source/prod.c",line 2729,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2729| 
        CMPB      AL,#4                 ; [CPU_] |2729| 
        B         $C$L465,HIS           ; [CPU_] |2729| 
        ; branchcc occurs ; [] |2729| 
	.dwpsn	file "../Source/prod.c",line 2733,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2733| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_scia_puts")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2733| 
        ; call occurs [#_scia_puts] ; [] |2733| 
        MOVL      XAR0,#62              ; [CPU_] |2733| 
	.dwpsn	file "../Source/prod.c",line 2737,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2733,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2733| 
	.dwpsn	file "../Source/prod.c",line 2737,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2737| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2738,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2738| 
        MOVL      XAR0,#44              ; [CPU_] |2738| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2738| 
        MOV       *-SP[3],AL            ; [CPU_] |2738| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2738| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2738| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_sprintf")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2738| 
        ; call occurs [#_sprintf] ; [] |2738| 
        MOVL      XAR0,#44              ; [CPU_] |2738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2738| 
	.dwpsn	file "../Source/prod.c",line 2739,column 7,is_stmt,isa 0
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_scia_puts")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2739| 
        ; call occurs [#_scia_puts] ; [] |2739| 
	.dwpsn	file "../Source/prod.c",line 2740,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2740| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2740| 
        ; call occurs [#_scia_puts] ; [] |2740| 
	.dwpsn	file "../Source/prod.c",line 2737,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2740,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2737,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2737| 
        B         $C$L451,LT            ; [CPU_] |2737| 
        ; branchcc occurs ; [] |2737| 
	.dwpsn	file "../Source/prod.c",line 2743,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2743| 
        MOVB      XAR0,#14              ; [CPU_] |2743| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2743| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2743| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2743| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2743| 
        MOVL      XAR0,#44              ; [CPU_] |2743| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2743| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2743| 
        MOVL      XAR4,XAR1             ; [CPU_] |2743| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_sprintf")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2743| 
        ; call occurs [#_sprintf] ; [] |2743| 
	.dwpsn	file "../Source/prod.c",line 2744,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2744| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_puts")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2744| 
        ; call occurs [#_scia_puts] ; [] |2744| 
	.dwpsn	file "../Source/prod.c",line 2745,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2745| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2745| 
        ; call occurs [#_scia_puts] ; [] |2745| 
	.dwpsn	file "../Source/prod.c",line 2746,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2746| 
	.dwpsn	file "../Source/prod.c",line 2745,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2745| 
	.dwpsn	file "../Source/prod.c",line 2746,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2746| 
        DEC       *-SP[57]              ; [CPU_] |2746| 
        MOV       *-SP[47],AH           ; [CPU_] |2746| 
        MOV       *-SP[3],AH            ; [CPU_] |2746| 
        MOVL      XAR4,XAR1             ; [CPU_] |2746| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_sprintf")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2746| 
        ; call occurs [#_sprintf] ; [] |2746| 
	.dwpsn	file "../Source/prod.c",line 2748,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2748| 
        MOVL      XAR4,XAR1             ; [CPU_] |2748| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2748| 
        MOV       AL,#1024              ; [CPU_] |2748| 
        MOVL      XAR5,XAR1             ; [CPU_] |2748| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2748| 
        ; call occurs [#_scia_getparam] ; [] |2748| 
        MOVL      XAR4,XAR1             ; [CPU_] |2748| 
	.dwpsn	file "../Source/prod.c",line 2749,column 6,is_stmt,isa 0
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_atoi")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2749| 
        ; call occurs [#_atoi] ; [] |2749| 
	.dwpsn	file "../Source/prod.c",line 2742,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2742| 
	.dwpsn	file "../Source/prod.c",line 2749,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2749| 
	.dwpsn	file "../Source/prod.c",line 2750,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2750| 
        B         $C$L452,LO            ; [CPU_] |2750| 
        ; branchcc occurs ; [] |2750| 
        CMPB      AL,#7                 ; [CPU_] |2750| 
        B         $C$L452,EQ            ; [CPU_] |2750| 
        ; branchcc occurs ; [] |2750| 
	.dwpsn	file "../Source/prod.c",line 2752,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2752| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2752| 
        ; call occurs [#_scia_puts] ; [] |2752| 
	.dwpsn	file "../Source/prod.c",line 2751,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2751| 
$C$L452:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2755,column 6,is_stmt,isa 0
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2755| 
        ; call occurs [#_scia_puts] ; [] |2755| 
	.dwpsn	file "../Source/prod.c",line 2756,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2756| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_puts")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2756| 
        ; call occurs [#_scia_puts] ; [] |2756| 
	.dwpsn	file "../Source/prod.c",line 2757,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2757| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2757| 
        MOVB      AL,#12                ; [CPU_] |2757| 
        MOV       T,*-SP[57]            ; [CPU_] |2757| 
        MPYU      ACC,T,AL              ; [CPU_] |2757| 
        ADDL      ACC,XAR6              ; [CPU_] |2757| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2757| 
        MOVL      XAR1,ACC              ; [CPU_] |2757| 
        MOV       AL,*-SP[59]           ; [CPU_] |2757| 
	.dwpsn	file "../Source/prod.c",line 2759,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2759| 
	.dwpsn	file "../Source/prod.c",line 2757,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2757| 
	.dwpsn	file "../Source/prod.c",line 2759,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2759| 
        ; branchcc occurs ; [] |2759| 
	.dwpsn	file "../Source/prod.c",line 2761,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2761| 
        B         $C$L454,EQ            ; [CPU_] |2761| 
        ; branchcc occurs ; [] |2761| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2761| 
        B         $C$L454,EQ            ; [CPU_] |2761| 
        ; branchcc occurs ; [] |2761| 
	.dwpsn	file "../Source/prod.c",line 2764,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2764| 
        B         $C$L453,EQ            ; [CPU_] |2764| 
        ; branchcc occurs ; [] |2764| 
        CMPB      AL,#4                 ; [CPU_] |2764| 
        B         $C$L455,NEQ           ; [CPU_] |2764| 
        ; branchcc occurs ; [] |2764| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2765,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2765| 
        B         $C$L455,UNC           ; [CPU_] |2765| 
        ; branch occurs ; [] |2765| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2763,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2763| 
$C$L455:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2770,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2770| 
        MOV       AL,*-SP[60]           ; [CPU_] |2770| 
        MOVL      XAR0,#44              ; [CPU_] |2770| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2770| 
        MOV       *-SP[3],AL            ; [CPU_] |2770| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2770| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_sprintf")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2770| 
        ; call occurs [#_sprintf] ; [] |2770| 
        MOVL      XAR0,#44              ; [CPU_] |2770| 
	.dwpsn	file "../Source/prod.c",line 2771,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2771| 
	.dwpsn	file "../Source/prod.c",line 2770,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2770| 
	.dwpsn	file "../Source/prod.c",line 2771,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2771| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2771| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2771| 
        ; call occurs [#_scia_getparam] ; [] |2771| 
        MOVL      XAR0,#86              ; [CPU_] |2771| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2771| 
	.dwpsn	file "../Source/prod.c",line 2772,column 8,is_stmt,isa 0
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_atoi")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2772| 
        ; call occurs [#_atoi] ; [] |2772| 
        MOVL      XAR0,#86              ; [CPU_] |2772| 
        MOV       *-SP[58],AL           ; [CPU_] |2772| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2772| 
	.dwpsn	file "../Source/prod.c",line 2773,column 8,is_stmt,isa 0
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_scia_puts")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2773| 
        ; call occurs [#_scia_puts] ; [] |2773| 
        MOV       AL,*-SP[58]           ; [CPU_] |2773| 
	.dwpsn	file "../Source/prod.c",line 2775,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2775| 
        ; branchcc occurs ; [] |2775| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2775| 
        B         $C$L464,LO            ; [CPU_] |2775| 
        ; branchcc occurs ; [] |2775| 
	.dwpsn	file "../Source/prod.c",line 2779,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2779| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_scia_puts")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2779| 
        ; call occurs [#_scia_puts] ; [] |2779| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2781| 
	.dwpsn	file "../Source/prod.c",line 2779,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2779| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2781| 
        MOV       AL,*-SP[59]           ; [CPU_] |2781| 
	.dwpsn	file "../Source/prod.c",line 2784,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2784| 
        B         $C$L457,EQ            ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
        CMPB      AL,#4                 ; [CPU_] |2784| 
        B         $C$L459,NEQ           ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
	.dwpsn	file "../Source/prod.c",line 2789,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2789| 
        B         $C$L458,UNC           ; [CPU_] |2789| 
        ; branch occurs ; [] |2789| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2787,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2787| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2787| 
        MOVL      XAR0,#44              ; [CPU_] |2787| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2787| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_sprintf")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2787| 
        ; call occurs [#_sprintf] ; [] |2787| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2791,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2791| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2791| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2791| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2791| 
        ; call occurs [#_scia_getparam] ; [] |2791| 
        MOVL      XAR0,#86              ; [CPU_] |2791| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2791,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2791| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_strtod")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2792,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2792| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2792| 
        MOVL      XAR0,#86              ; [CPU_] |2792| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2792| 
	.dwpsn	file "../Source/prod.c",line 2793,column 8,is_stmt,isa 0
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2793| 
        ; call occurs [#_scia_puts] ; [] |2793| 
	.dwpsn	file "../Source/prod.c",line 2794,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2794| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_scia_puts")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2794| 
        ; call occurs [#_scia_puts] ; [] |2794| 
	.dwpsn	file "../Source/prod.c",line 2797,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2797| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2797| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2797| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2797| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_sprintf")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2797| 
        ; call occurs [#_sprintf] ; [] |2797| 
        MOVL      XAR0,#44              ; [CPU_] |2797| 
	.dwpsn	file "../Source/prod.c",line 2798,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2798| 
	.dwpsn	file "../Source/prod.c",line 2797,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2797| 
	.dwpsn	file "../Source/prod.c",line 2798,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2798| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2798| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2798| 
        ; call occurs [#_scia_getparam] ; [] |2798| 
        MOVL      XAR0,#86              ; [CPU_] |2798| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2798,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2798| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_strtod")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2799,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2799| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2799| 
        MOVL      XAR0,#86              ; [CPU_] |2799| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2799| 
	.dwpsn	file "../Source/prod.c",line 2800,column 8,is_stmt,isa 0
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2800| 
        ; call occurs [#_scia_puts] ; [] |2800| 
	.dwpsn	file "../Source/prod.c",line 2801,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2801| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2801| 
        ; call occurs [#_scia_puts] ; [] |2801| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2808,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2808| 
        MOV       AL,*-SP[47]           ; [CPU_] |2808| 
        MOVL      XAR0,#62              ; [CPU_] |2808| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2808| 
        MOV       *-SP[3],AL            ; [CPU_] |2808| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2808| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2808| 
        MOV       ACC,AL << 1           ; [CPU_] |2808| 
        ADDL      ACC,XAR6              ; [CPU_] |2808| 
        MOVL      XAR4,ACC              ; [CPU_] |2808| 
        MOVL      XAR0,#44              ; [CPU_] |2808| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2808| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2808| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2808| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_sprintf")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2808| 
        ; call occurs [#_sprintf] ; [] |2808| 
        MOVL      XAR0,#44              ; [CPU_] |2808| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2808| 
	.dwpsn	file "../Source/prod.c",line 2810,column 6,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2810| 
        ; call occurs [#_scia_puts] ; [] |2810| 
	.dwpsn	file "../Source/prod.c",line 2805,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2805| 
        MOV       AL,*-SP[59]           ; [CPU_] |2805| 
	.dwpsn	file "../Source/prod.c",line 2812,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2812| 
        B         $C$L461,EQ            ; [CPU_] |2812| 
        ; branchcc occurs ; [] |2812| 
	.dwpsn	file "../Source/prod.c",line 2815,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2815| 
        MOVB      AL,#1                 ; [CPU_] |2815| 
        MOVL      XAR0,#44              ; [CPU_] |2815| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2815| 
        ADD       AL,*-SP[58]           ; [CPU_] |2815| 
        MOV       *-SP[3],AL            ; [CPU_] |2815| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2815| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_sprintf")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2815| 
        ; call occurs [#_sprintf] ; [] |2815| 
        MOVL      XAR0,#44              ; [CPU_] |2815| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2815| 
	.dwpsn	file "../Source/prod.c",line 2816,column 7,is_stmt,isa 0
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2816| 
        ; call occurs [#_scia_puts] ; [] |2816| 
        MOV       AL,*-SP[59]           ; [CPU_] |2816| 
	.dwpsn	file "../Source/prod.c",line 2818,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2818| 
        B         $C$L460,EQ            ; [CPU_] |2818| 
        ; branchcc occurs ; [] |2818| 
        CMPB      AL,#4                 ; [CPU_] |2818| 
        B         $C$L463,NEQ           ; [CPU_] |2818| 
        ; branchcc occurs ; [] |2818| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2819,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2819| 
        MOVB      XAR0,#8               ; [CPU_] |2819| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2819| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2819| 
        MOVB      XAR0,#10              ; [CPU_] |2819| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2819| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2819| 
        MOVL      XAR0,#44              ; [CPU_] |2819| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2819| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2819| 
        MOVL      XAR4,XAR1             ; [CPU_] |2819| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_sprintf")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2819| 
        ; call occurs [#_sprintf] ; [] |2819| 
        MOVL      XAR4,XAR1             ; [CPU_] |2819| 
	.dwpsn	file "../Source/prod.c",line 2822,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2822| 
        ; branch occurs ; [] |2822| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2813,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2813| 
$C$L462:    
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2813| 
        ; call occurs [#_scia_puts] ; [] |2813| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2827,column 6,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2827| 
        ; call occurs [#_ad7738_setcal] ; [] |2827| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2829,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2829| 
        ; branch occurs ; [] |2829| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2777,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2777| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2777| 
        ; call occurs [#_scia_puts] ; [] |2777| 
	.dwpsn	file "../Source/prod.c",line 2769,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2769| 
        ; branch occurs ; [] |2769| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2731,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2731| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2731| 
        ; call occurs [#_scia_puts] ; [] |2731| 
	.dwpsn	file "../Source/prod.c",line 2723,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2723| 
        ; branch occurs ; [] |2723| 
$C$L466:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2895,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2895| 
        B         $C$L625,LO            ; [CPU_] |2895| 
        ; branchcc occurs ; [] |2895| 
	.dwpsn	file "../Source/prod.c",line 2898,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2898| 
        CMPB      AL,#83                ; [CPU_] |2898| 
        B         $C$L625,NEQ           ; [CPU_] |2898| 
        ; branchcc occurs ; [] |2898| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2905,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2905| 
        MOVL      XAR0,#44              ; [CPU_] |2905| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2905| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2905| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2905| 
        MOVL      XAR4,XAR1             ; [CPU_] |2905| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_sprintf")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2905| 
        ; call occurs [#_sprintf] ; [] |2905| 
	.dwpsn	file "../Source/prod.c",line 2906,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2906| 
	.dwpsn	file "../Source/prod.c",line 2905,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2905| 
	.dwpsn	file "../Source/prod.c",line 2906,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2906| 
        MOV       AL,#1024              ; [CPU_] |2906| 
        MOVL      XAR5,XAR1             ; [CPU_] |2906| 
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2906| 
        ; call occurs [#_scia_getparam] ; [] |2906| 
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2907| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_atoi")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2907| 
        ; call occurs [#_atoi] ; [] |2907| 
        MOV       *-SP[57],AL           ; [CPU_] |2907| 
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2908| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2908| 
        ; call occurs [#_scia_puts] ; [] |2908| 
        MOV       AL,*-SP[57]           ; [CPU_] |2908| 
	.dwpsn	file "../Source/prod.c",line 2910,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2910| 
        CMPB      AL,#4                 ; [CPU_] |2910| 
        B         $C$L497,HIS           ; [CPU_] |2910| 
        ; branchcc occurs ; [] |2910| 
	.dwpsn	file "../Source/prod.c",line 2914,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2914| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2914| 
        ; call occurs [#_scia_puts] ; [] |2914| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2914| 
	.dwpsn	file "../Source/prod.c",line 2917,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2917| 
        MOVL      XAR0,#44              ; [CPU_] |2917| 
        DEC       *-SP[57]              ; [CPU_] |2917| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2917| 
        MOV       *-SP[47],AR1          ; [CPU_] |2917| 
        MOV       *-SP[3],AR1           ; [CPU_] |2917| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2917| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_sprintf")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2917| 
        ; call occurs [#_sprintf] ; [] |2917| 
        MOVL      XAR0,#44              ; [CPU_] |2917| 
	.dwpsn	file "../Source/prod.c",line 2918,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2918| 
	.dwpsn	file "../Source/prod.c",line 2917,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2917| 
	.dwpsn	file "../Source/prod.c",line 2918,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2918| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2918| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2918| 
        ; call occurs [#_scia_getparam] ; [] |2918| 
        MOVL      XAR0,#86              ; [CPU_] |2918| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2918| 
	.dwpsn	file "../Source/prod.c",line 2919,column 6,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2919| 
        ; call occurs [#_scia_puts] ; [] |2919| 
	.dwpsn	file "../Source/prod.c",line 2920,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2920| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2920| 
        ; call occurs [#_scia_puts] ; [] |2920| 
        MOVL      XAR0,#86              ; [CPU_] |2920| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2920| 
	.dwpsn	file "../Source/prod.c",line 2922,column 6,is_stmt,isa 0
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_atoi")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2922| 
        ; call occurs [#_atoi] ; [] |2922| 
        CMPB      AL,#1                 ; [CPU_] |2922| 
        B         $C$L468,EQ            ; [CPU_] |2922| 
        ; branchcc occurs ; [] |2922| 
	.dwpsn	file "../Source/prod.c",line 3071,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3071| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3071| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3071| 
        ADDL      ACC,XAR6              ; [CPU_] |3071| 
        ADD       ACC,#199 << 4         ; [CPU_] |3071| 
        MOVL      XAR4,ACC              ; [CPU_] |3071| 
	.dwpsn	file "../Source/prod.c",line 3072,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3072| 
	.dwpsn	file "../Source/prod.c",line 3071,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3071| 
	.dwpsn	file "../Source/prod.c",line 3072,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3072| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3072| 
        MOV       *-SP[3],AR1           ; [CPU_] |3072| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3072| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_sprintf")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3072| 
        ; call occurs [#_sprintf] ; [] |3072| 
        B         $C$L493,UNC           ; [CPU_] |3072| 
        ; branch occurs ; [] |3072| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2925,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2925| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2925| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2925| 
        ADDL      ACC,XAR6              ; [CPU_] |2925| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2925| 
        MOVL      XAR1,ACC              ; [CPU_] |2925| 
        MOVL      XAR0,#62              ; [CPU_] |2925| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2925| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2925| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2928,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2928| 
        MOV       *-SP[60],AL           ; [CPU_] |2928| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2929,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2929| 
        MOVL      XAR0,#88              ; [CPU_] |2929| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2929| 
        MOV       *-SP[3],AL            ; [CPU_] |2929| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2929| 
        MOVL      XAR0,#88              ; [CPU_] |2929| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2929| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2929| 
        MOVL      XAR0,#44              ; [CPU_] |2929| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2929| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2929| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_sprintf")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2929| 
        ; call occurs [#_sprintf] ; [] |2929| 
        MOVL      XAR0,#44              ; [CPU_] |2929| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2929| 
	.dwpsn	file "../Source/prod.c",line 2930,column 8,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2930| 
        ; call occurs [#_scia_puts] ; [] |2930| 
        MOV       AL,*-SP[60]           ; [CPU_] |2930| 
	.dwpsn	file "../Source/prod.c",line 2931,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2931| 
        B         $C$L470,GEQ           ; [CPU_] |2931| 
        ; branchcc occurs ; [] |2931| 
	.dwpsn	file "../Source/prod.c",line 2932,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2932| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2932| 
        ; call occurs [#_scia_puts] ; [] |2932| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2928,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2928| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2928| 
        B         $C$L469,LT            ; [CPU_] |2928| 
        ; branchcc occurs ; [] |2928| 
	.dwpsn	file "../Source/prod.c",line 2935,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2935| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2935| 
        ; call occurs [#_scia_puts] ; [] |2935| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2936| 
        MOVL      XAR0,#44              ; [CPU_] |2936| 
        MOV       AL,*-SP[47]           ; [CPU_] |2936| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2936| 
        MOV       *-SP[3],AL            ; [CPU_] |2936| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2936| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_sprintf")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2936| 
        ; call occurs [#_sprintf] ; [] |2936| 
        MOVL      XAR0,#44              ; [CPU_] |2936| 
	.dwpsn	file "../Source/prod.c",line 2939,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2939| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2936| 
	.dwpsn	file "../Source/prod.c",line 2939,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2939| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2939| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2939| 
        ; call occurs [#_scia_getparam] ; [] |2939| 
        MOVL      XAR0,#86              ; [CPU_] |2939| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2939| 
	.dwpsn	file "../Source/prod.c",line 2940,column 7,is_stmt,isa 0
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_atoi")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2940| 
        ; call occurs [#_atoi] ; [] |2940| 
        MOV       *-SP[59],AL           ; [CPU_] |2940| 
        CMPB      AL,#5                 ; [CPU_] |2940| 
        B         $C$L471,LO            ; [CPU_] |2940| 
        ; branchcc occurs ; [] |2940| 
	.dwpsn	file "../Source/prod.c",line 2943,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2943| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2943| 
        ; call occurs [#_scia_puts] ; [] |2943| 
	.dwpsn	file "../Source/prod.c",line 2942,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2942| 
$C$L471:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2946,column 7,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2946| 
        ; call occurs [#_scia_puts] ; [] |2946| 
	.dwpsn	file "../Source/prod.c",line 2947,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2947| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2947| 
        ; call occurs [#_scia_puts] ; [] |2947| 
        MOV       AL,*-SP[59]           ; [CPU_] |2947| 
	.dwpsn	file "../Source/prod.c",line 2948,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2948| 
	.dwpsn	file "../Source/prod.c",line 2950,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2950| 
        B         $C$L473,EQ            ; [CPU_] |2950| 
        ; branchcc occurs ; [] |2950| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2950| 
        B         $C$L473,EQ            ; [CPU_] |2950| 
        ; branchcc occurs ; [] |2950| 
	.dwpsn	file "../Source/prod.c",line 2953,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2953| 
        B         $C$L472,EQ            ; [CPU_] |2953| 
        ; branchcc occurs ; [] |2953| 
        CMPB      AL,#4                 ; [CPU_] |2953| 
        B         $C$L474,NEQ           ; [CPU_] |2953| 
        ; branchcc occurs ; [] |2953| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2954,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2954| 
        B         $C$L474,UNC           ; [CPU_] |2954| 
        ; branch occurs ; [] |2954| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2952,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2952| 
$C$L474:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2959,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2959| 
        MOV       AL,*-SP[60]           ; [CPU_] |2959| 
        MOVL      XAR0,#44              ; [CPU_] |2959| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2959| 
        MOV       *-SP[3],AL            ; [CPU_] |2959| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2959| 
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_sprintf")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2959| 
        ; call occurs [#_sprintf] ; [] |2959| 
        MOVL      XAR0,#44              ; [CPU_] |2959| 
	.dwpsn	file "../Source/prod.c",line 2960,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2960| 
	.dwpsn	file "../Source/prod.c",line 2959,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2959| 
	.dwpsn	file "../Source/prod.c",line 2960,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2960| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2960| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2960| 
        ; call occurs [#_scia_getparam] ; [] |2960| 
        MOVL      XAR0,#86              ; [CPU_] |2960| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2960| 
	.dwpsn	file "../Source/prod.c",line 2961,column 8,is_stmt,isa 0
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_atoi")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2961| 
        ; call occurs [#_atoi] ; [] |2961| 
        MOVL      XAR0,#86              ; [CPU_] |2961| 
        MOV       *-SP[58],AL           ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2962| 
        ; call occurs [#_scia_puts] ; [] |2962| 
        MOV       AL,*-SP[58]           ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2964,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2964| 
        ; branchcc occurs ; [] |2964| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2964| 
        B         $C$L496,LO            ; [CPU_] |2964| 
        ; branchcc occurs ; [] |2964| 
	.dwpsn	file "../Source/prod.c",line 2968,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2968| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2968| 
        ; call occurs [#_scia_puts] ; [] |2968| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2970| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2973| 
	.dwpsn	file "../Source/prod.c",line 2968,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2968| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2973| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2970| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2973| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2973| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2973| 
        ; call occurs [#_scia_getparam] ; [] |2973| 
        MOVL      XAR0,#86              ; [CPU_] |2973| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2973| 
	.dwpsn	file "../Source/prod.c",line 2976,column 7,is_stmt,isa 0
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2976| 
        ; call occurs [#_scia_puts] ; [] |2976| 
	.dwpsn	file "../Source/prod.c",line 2977,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2977| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2977| 
        ; call occurs [#_scia_puts] ; [] |2977| 
        MOVL      XAR0,#86              ; [CPU_] |2977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2977| 
	.dwpsn	file "../Source/prod.c",line 2979,column 7,is_stmt,isa 0
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_atoi")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2979| 
        ; call occurs [#_atoi] ; [] |2979| 
        CMPB      AL,#1                 ; [CPU_] |2979| 
        B         $C$L476,EQ            ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
	.dwpsn	file "../Source/prod.c",line 2983,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2983| 
        B         $C$L477,UNC           ; [CPU_] |2983| 
        ; branch occurs ; [] |2983| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2981,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2981| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2986,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2986| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2986| 
        MOV       AL,#1024              ; [CPU_] |2986| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2986| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2986| 
        ; call occurs [#_scia_getparam] ; [] |2986| 
        MOVL      XAR0,#86              ; [CPU_] |2986| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2986| 
	.dwpsn	file "../Source/prod.c",line 2989,column 7,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2989| 
        ; call occurs [#_scia_puts] ; [] |2989| 
	.dwpsn	file "../Source/prod.c",line 2990,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2990| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2990| 
        ; call occurs [#_scia_puts] ; [] |2990| 
        MOVL      XAR0,#86              ; [CPU_] |2990| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2990| 
	.dwpsn	file "../Source/prod.c",line 2992,column 7,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_atoi")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2992| 
        ; call occurs [#_atoi] ; [] |2992| 
        CMPB      AL,#1                 ; [CPU_] |2992| 
        B         $C$L478,EQ            ; [CPU_] |2992| 
        ; branchcc occurs ; [] |2992| 
	.dwpsn	file "../Source/prod.c",line 2996,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2996| 
        B         $C$L479,UNC           ; [CPU_] |2996| 
        ; branch occurs ; [] |2996| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2994,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2994| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2999,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2999| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2999| 
        MOV       AL,#1024              ; [CPU_] |2999| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2999| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2999| 
        ; call occurs [#_scia_getparam] ; [] |2999| 
        MOVL      XAR0,#86              ; [CPU_] |2999| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2999| 
	.dwpsn	file "../Source/prod.c",line 3002,column 7,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3002| 
        ; call occurs [#_scia_puts] ; [] |3002| 
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3003| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3003| 
        ; call occurs [#_scia_puts] ; [] |3003| 
        MOVL      XAR0,#86              ; [CPU_] |3003| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3003| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_atoi")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3005| 
        ; call occurs [#_atoi] ; [] |3005| 
        CMPB      AL,#1                 ; [CPU_] |3005| 
        B         $C$L480,EQ            ; [CPU_] |3005| 
        ; branchcc occurs ; [] |3005| 
	.dwpsn	file "../Source/prod.c",line 3009,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |3009| 
        B         $C$L481,UNC           ; [CPU_] |3009| 
        ; branch occurs ; [] |3009| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 3007,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |3007| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 3013,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3013| 
        CMPB      AL,#2                 ; [CPU_] |3013| 
        B         $C$L483,LOS           ; [CPU_] |3013| 
        ; branchcc occurs ; [] |3013| 
        CMPB      AL,#3                 ; [CPU_] |3013| 
        B         $C$L482,EQ            ; [CPU_] |3013| 
        ; branchcc occurs ; [] |3013| 
        CMPB      AL,#4                 ; [CPU_] |3013| 
        B         $C$L485,NEQ           ; [CPU_] |3013| 
        ; branchcc occurs ; [] |3013| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3025,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |3025| 
	.dwpsn	file "../Source/prod.c",line 3026,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |3026| 
        ; branch occurs ; [] |3026| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3022,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |3022| 
	.dwpsn	file "../Source/prod.c",line 3023,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |3023| 
        ; branch occurs ; [] |3023| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 3017,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3017| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3017| 
        MOV       T,#10                 ; [CPU_] |3017| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |3017| 
        ADDL      ACC,XAR6              ; [CPU_] |3017| 
        MOVL      XAR4,ACC              ; [CPU_] |3017| 
        MOVB      XAR0,#42              ; [CPU_] |3017| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |3017| 
        MPYB      ACC,T,#152            ; [CPU_] |3017| 
        ADDL      ACC,XAR6              ; [CPU_] |3017| 
        MOVL      XAR4,ACC              ; [CPU_] |3017| 
        MOVB      XAR0,#125             ; [CPU_] |3017| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3017| 
        MOVL      XAR0,#70              ; [CPU_] |3017| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3017| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |3017| 
        MOV       ACC,AL << 1           ; [CPU_] |3017| 
        ADDL      ACC,XAR6              ; [CPU_] |3017| 
        MOVL      XAR4,ACC              ; [CPU_] |3017| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3017| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |3017| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3017| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |3030| 
        MOVL      XAR0,#48              ; [CPU_] |3030| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3030| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3030| 
        MOVL      XAR0,#44              ; [CPU_] |3030| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3030| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3030| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_sprintf")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3030| 
        ; call occurs [#_sprintf] ; [] |3030| 
        MOVL      XAR0,#44              ; [CPU_] |3030| 
	.dwpsn	file "../Source/prod.c",line 3031,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3031| 
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3030| 
	.dwpsn	file "../Source/prod.c",line 3031,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3031| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3031| 
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3031| 
        ; call occurs [#_scia_getparam] ; [] |3031| 
        MOVL      XAR0,#86              ; [CPU_] |3031| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3031| 
	.dwpsn	file "../Source/prod.c",line 3032,column 7,is_stmt,isa 0
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3032| 
        ; call occurs [#_scia_puts] ; [] |3032| 
	.dwpsn	file "../Source/prod.c",line 3033,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3033| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3033| 
        ; call occurs [#_scia_puts] ; [] |3033| 
        MOVL      XAR0,#86              ; [CPU_] |3033| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3033,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3033| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_strtod")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3039| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3039| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3035| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3039| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3039| 
        MOVL      XAR0,#44              ; [CPU_] |3039| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3039| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3039| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_sprintf")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3039| 
        ; call occurs [#_sprintf] ; [] |3039| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3040| 
        MOVL      XAR0,#86              ; [CPU_] |3040| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3040| 
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3040| 
        ; call occurs [#_scia_getparam] ; [] |3040| 
        MOVL      XAR0,#86              ; [CPU_] |3040| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3040| 
	.dwpsn	file "../Source/prod.c",line 3041,column 7,is_stmt,isa 0
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3041| 
        ; call occurs [#_scia_puts] ; [] |3041| 
	.dwpsn	file "../Source/prod.c",line 3042,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3042| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3042| 
        ; call occurs [#_scia_puts] ; [] |3042| 
        MOVL      XAR0,#86              ; [CPU_] |3042| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3042,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3042| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_strtod")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3050,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3050| 
        MOVL      XAR0,#62              ; [CPU_] |3050| 
	.dwpsn	file "../Source/prod.c",line 3044,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3044| 
	.dwpsn	file "../Source/prod.c",line 3050,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3050| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3050| 
        MOV       *-SP[3],AL            ; [CPU_] |3050| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3050| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |3050| 
        MOV       ACC,AL << 1           ; [CPU_] |3050| 
        ADDL      ACC,XAR6              ; [CPU_] |3050| 
        MOVL      XAR4,ACC              ; [CPU_] |3050| 
        MOVL      XAR0,#44              ; [CPU_] |3050| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3050| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3050| 
        MOVB      AL,#1                 ; [CPU_] |3050| 
        ADD       AL,*-SP[58]           ; [CPU_] |3050| 
        MOV       *-SP[7],AL            ; [CPU_] |3050| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3050| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_sprintf")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3050| 
        ; call occurs [#_sprintf] ; [] |3050| 
        MOVL      XAR0,#44              ; [CPU_] |3050| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3050| 
	.dwpsn	file "../Source/prod.c",line 3053,column 7,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3053| 
        ; call occurs [#_scia_puts] ; [] |3053| 
	.dwpsn	file "../Source/prod.c",line 3055,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3055| 
        B         $C$L486,TC            ; [CPU_] |3055| 
        ; branchcc occurs ; [] |3055| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3055| 
        B         $C$L487,UNC           ; [CPU_] |3055| 
        ; branch occurs ; [] |3055| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3055| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3055| 
        B         $C$L488,TC            ; [CPU_] |3055| 
        ; branchcc occurs ; [] |3055| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3055| 
        B         $C$L489,UNC           ; [CPU_] |3055| 
        ; branch occurs ; [] |3055| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3055| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3055| 
        B         $C$L490,TC            ; [CPU_] |3055| 
        ; branchcc occurs ; [] |3055| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3055| 
        B         $C$L491,UNC           ; [CPU_] |3055| 
        ; branch occurs ; [] |3055| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3055| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3055| 
        MOVL      XAR0,#44              ; [CPU_] |3055| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3055| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3055| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3055| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3055| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3055| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_sprintf")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3055| 
        ; call occurs [#_sprintf] ; [] |3055| 
        MOVL      XAR0,#44              ; [CPU_] |3055| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3055| 
	.dwpsn	file "../Source/prod.c",line 3062,column 7,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3062| 
        ; call occurs [#_scia_puts] ; [] |3062| 
	.dwpsn	file "../Source/prod.c",line 3063,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3063| 
        MOVL      XAR0,#48              ; [CPU_] |3063| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3063| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3063| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3063| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3063| 
        MOVL      XAR0,#48              ; [CPU_] |3063| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3063| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3063| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3063| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3063| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3063| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |3063| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |3063| 
        MOVL      XAR4,XAR1             ; [CPU_] |3063| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_sprintf")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3063| 
        ; call occurs [#_sprintf] ; [] |3063| 
        MOVL      XAR4,XAR1             ; [CPU_] |3063| 
	.dwpsn	file "../Source/prod.c",line 3067,column 7,is_stmt,isa 0
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3067| 
        ; call occurs [#_scia_puts] ; [] |3067| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3078,column 6,is_stmt,isa 0
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3078| 
        ; call occurs [#_ad7738_setcal] ; [] |3078| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3075,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3075| 
	.dwpsn	file "../Source/prod.c",line 3080,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3080| 
        ; branch occurs ; [] |3080| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2966,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2966| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2966| 
        ; call occurs [#_scia_puts] ; [] |2966| 
	.dwpsn	file "../Source/prod.c",line 2958,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2958| 
        ; branch occurs ; [] |2958| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2912,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2912| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2912| 
        ; call occurs [#_scia_puts] ; [] |2912| 
	.dwpsn	file "../Source/prod.c",line 2904,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2904| 
        ; branch occurs ; [] |2904| 
$C$L498:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3384,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3384| 
        B         $C$L625,LO            ; [CPU_] |3384| 
        ; branchcc occurs ; [] |3384| 
	.dwpsn	file "../Source/prod.c",line 3387,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3387| 
        CMPB      AL,#68                ; [CPU_] |3387| 
        B         $C$L502,EQ            ; [CPU_] |3387| 
        ; branchcc occurs ; [] |3387| 
        CMPB      AL,#82                ; [CPU_] |3387| 
        B         $C$L501,EQ            ; [CPU_] |3387| 
        ; branchcc occurs ; [] |3387| 
        CMPB      AL,#87                ; [CPU_] |3387| 
        B         $C$L625,NEQ           ; [CPU_] |3387| 
        ; branchcc occurs ; [] |3387| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3391,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3391| 
        ; branchcc occurs ; [] |3391| 
	.dwpsn	file "../Source/prod.c",line 3415,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3415| 
	.dwpsn	file "../Source/prod.c",line 3417,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3417| 
        ; branch occurs ; [] |3417| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3393,column 7,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3393| 
        ; call occurs [#_lcd_clear] ; [] |3393| 
	.dwpsn	file "../Source/prod.c",line 3394,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3394| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3394| 
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3394| 
        ; call occurs [#_lcd_puts] ; [] |3394| 
	.dwpsn	file "../Source/prod.c",line 3395,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3395| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3395| 
        ; call occurs [#_scia_puts] ; [] |3395| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3398,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3398| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_delay_us")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3398| 
        ; call occurs [#_delay_us] ; [] |3398| 
	.dwpsn	file "../Source/prod.c",line 3397,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3397| 
        ; branchcc occurs ; [] |3397| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3402,column 7,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_conf_write")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3402| 
        ; call occurs [#_conf_write] ; [] |3402| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3405,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3405| 
        B         $C$L505,NEQ           ; [CPU_] |3405| 
        ; branchcc occurs ; [] |3405| 
	.dwpsn	file "../Source/prod.c",line 3406,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3406| 
	.dwpsn	file "../Source/prod.c",line 3408,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3408| 
        ; branch occurs ; [] |3408| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3422,column 6,is_stmt,isa 0
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_conf_read")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3422| 
        ; call occurs [#_conf_read] ; [] |3422| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3425,column 6,is_stmt,isa 0
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3425| 
        ; call occurs [#_ad7738_setcal] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3426,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3426| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3426| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3427,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3427| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3427| 
        ; call occurs [#_ad7738_resetvall] ; [] |3427| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3430,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3430| 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3433,column 6,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_update_units")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3433| 
        ; call occurs [#_update_units] ; [] |3433| 
	.dwpsn	file "../Source/prod.c",line 3431,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3431| 
	.dwpsn	file "../Source/prod.c",line 3435,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3435| 
        ; branch occurs ; [] |3435| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3439,column 6,is_stmt,isa 0
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_conf_default")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3439| 
        ; call occurs [#_conf_default] ; [] |3439| 
	.dwpsn	file "../Source/prod.c",line 3442,column 6,is_stmt,isa 0
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3442| 
        ; call occurs [#_lcd_clear] ; [] |3442| 
	.dwpsn	file "../Source/prod.c",line 3443,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3443| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3443| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3443| 
        ; call occurs [#_lcd_puts] ; [] |3443| 
	.dwpsn	file "../Source/prod.c",line 3444,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3444| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3444| 
        ; call occurs [#_scia_puts] ; [] |3444| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3447,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3447| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_delay_us")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3447| 
        ; call occurs [#_delay_us] ; [] |3447| 
	.dwpsn	file "../Source/prod.c",line 3446,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3446| 
        ; branchcc occurs ; [] |3446| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3451,column 6,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_conf_write")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3451| 
        ; call occurs [#_conf_write] ; [] |3451| 
        MOVZ      AR1,AL                ; [CPU_] |3451| 
	.dwpsn	file "../Source/prod.c",line 3452,column 6,is_stmt,isa 0
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3452| 
        ; call occurs [#_ad7738_setcal] ; [] |3452| 
	.dwpsn	file "../Source/prod.c",line 3453,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3453| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3453| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3454,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3454| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3454| 
        ; call occurs [#_ad7738_resetvall] ; [] |3454| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3457,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3457| 
        ; branchcc occurs ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3458| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3458| 
        ; call occurs [#_scia_puts] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3460,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3460| 
	.dwpsn	file "../Source/prod.c",line 3461,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3461| 
        ; branch occurs ; [] |3461| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3462,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3462| 
        SPM       #0                    ; [CPU_] 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3464,column 6,is_stmt,isa 0
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3464| 
        ; call occurs [#_lcd_clear] ; [] |3464| 
	.dwpsn	file "../Source/prod.c",line 3465,column 6,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_update_units")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3465| 
        ; call occurs [#_update_units] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3466,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3466| 
        ; branch occurs ; [] |3466| 
$C$L507:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2491,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2491| 
        B         $C$L625,LO            ; [CPU_] |2491| 
        ; branchcc occurs ; [] |2491| 
	.dwpsn	file "../Source/prod.c",line 2494,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2494| 
        CMPB      AL,#70                ; [CPU_] |2494| 
        B         $C$L512,EQ            ; [CPU_] |2494| 
        ; branchcc occurs ; [] |2494| 
        CMPB      AL,#80                ; [CPU_] |2494| 
        B         $C$L632,NEQ           ; [CPU_] |2494| 
        ; branchcc occurs ; [] |2494| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2531,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2531| 
        MOVL      XAR0,#44              ; [CPU_] |2531| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2531| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2531| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2531| 
        MOVL      XAR4,XAR1             ; [CPU_] |2531| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_sprintf")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2531| 
        ; call occurs [#_sprintf] ; [] |2531| 
	.dwpsn	file "../Source/prod.c",line 2532,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2532| 
	.dwpsn	file "../Source/prod.c",line 2531,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2531| 
	.dwpsn	file "../Source/prod.c",line 2532,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2532| 
        MOV       AL,#1024              ; [CPU_] |2532| 
        MOVL      XAR5,XAR1             ; [CPU_] |2532| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2532| 
        ; call occurs [#_scia_getparam] ; [] |2532| 
	.dwpsn	file "../Source/prod.c",line 2533,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2533| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_atoi")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2533| 
        ; call occurs [#_atoi] ; [] |2533| 
        MOV       *-SP[57],AL           ; [CPU_] |2533| 
	.dwpsn	file "../Source/prod.c",line 2534,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2534| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2534| 
        ; call occurs [#_scia_puts] ; [] |2534| 
        MOV       AL,*-SP[57]           ; [CPU_] |2534| 
	.dwpsn	file "../Source/prod.c",line 2536,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2536| 
        CMPB      AL,#2                 ; [CPU_] |2536| 
        B         $C$L511,HIS           ; [CPU_] |2536| 
        ; branchcc occurs ; [] |2536| 
	.dwpsn	file "../Source/prod.c",line 2540,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2540| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2540| 
        ; call occurs [#_scia_puts] ; [] |2540| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2540| 
	.dwpsn	file "../Source/prod.c",line 2543,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2543| 
        MOVL      XAR0,#44              ; [CPU_] |2543| 
        DEC       *-SP[57]              ; [CPU_] |2543| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2543| 
        MOV       *-SP[3],AR1           ; [CPU_] |2543| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2543| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_sprintf")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2543| 
        ; call occurs [#_sprintf] ; [] |2543| 
        MOVL      XAR0,#44              ; [CPU_] |2543| 
	.dwpsn	file "../Source/prod.c",line 2544,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2544| 
	.dwpsn	file "../Source/prod.c",line 2543,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2543| 
	.dwpsn	file "../Source/prod.c",line 2544,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2544| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2544| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2544| 
        ; call occurs [#_scia_getparam] ; [] |2544| 
        MOVL      XAR0,#86              ; [CPU_] |2544| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2544| 
	.dwpsn	file "../Source/prod.c",line 2545,column 6,is_stmt,isa 0
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_atol")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2545| 
        ; call occurs [#_atol] ; [] |2545| 
        MOVL      XAR0,#86              ; [CPU_] |2545| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2545| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2545| 
	.dwpsn	file "../Source/prod.c",line 2546,column 6,is_stmt,isa 0
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2546| 
        ; call occurs [#_scia_puts] ; [] |2546| 
	.dwpsn	file "../Source/prod.c",line 2547,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2547| 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2547| 
        ; call occurs [#_scia_puts] ; [] |2547| 
	.dwpsn	file "../Source/prod.c",line 2548,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2548| 
        B         $C$L509,NEQ           ; [CPU_] |2548| 
        ; branchcc occurs ; [] |2548| 
	.dwpsn	file "../Source/prod.c",line 2549,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2549| 
	.dwpsn	file "../Source/prod.c",line 2550,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2550| 
        ; branch occurs ; [] |2550| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2552,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2552| 
        MOVL      XAR0,#44              ; [CPU_] |2552| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2552| 
        MOV       *-SP[3],AR1           ; [CPU_] |2552| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2552| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2552| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2552| 
        MOVL      XAR4,XAR1             ; [CPU_] |2552| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_sprintf")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2552| 
        ; call occurs [#_sprintf] ; [] |2552| 
        MOVL      XAR4,XAR1             ; [CPU_] |2552| 
	.dwpsn	file "../Source/prod.c",line 2554,column 6,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2554| 
        ; call occurs [#_scia_puts] ; [] |2554| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2559,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2559| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2559| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2559| 
        ADDL      ACC,XAR6              ; [CPU_] |2559| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2559| 
        ADD       ACC,#201 << 4         ; [CPU_] |2559| 
        MOVL      XAR4,ACC              ; [CPU_] |2559| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2559| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2560,column 6,is_stmt,isa 0
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2560| 
        ; call occurs [#_ad7738_setcal] ; [] |2560| 
	.dwpsn	file "../Source/prod.c",line 2561,column 6,is_stmt,isa 0
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2561| 
        ; call occurs [#_velf_rst] ; [] |2561| 
	.dwpsn	file "../Source/prod.c",line 2563,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2563| 
        ; branch occurs ; [] |2563| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2538,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2538| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2538| 
        ; call occurs [#_scia_puts] ; [] |2538| 
	.dwpsn	file "../Source/prod.c",line 2530,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2530| 
        ; branch occurs ; [] |2530| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2501,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2501| 
        MOVL      XAR0,#44              ; [CPU_] |2501| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2501| 
        MOV       *-SP[3],#4096         ; [CPU_] |2501| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2501| 
        MOVL      XAR4,XAR1             ; [CPU_] |2501| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_sprintf")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2501| 
        ; call occurs [#_sprintf] ; [] |2501| 
	.dwpsn	file "../Source/prod.c",line 2503,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2503| 
	.dwpsn	file "../Source/prod.c",line 2501,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2501| 
	.dwpsn	file "../Source/prod.c",line 2503,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2503| 
        MOV       AL,#1024              ; [CPU_] |2503| 
        MOVL      XAR5,XAR1             ; [CPU_] |2503| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2503| 
        ; call occurs [#_scia_getparam] ; [] |2503| 
	.dwpsn	file "../Source/prod.c",line 2504,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2504| 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_atoi")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2504| 
        ; call occurs [#_atoi] ; [] |2504| 
        MOV       *-SP[47],AL           ; [CPU_] |2504| 
	.dwpsn	file "../Source/prod.c",line 2505,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2505| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2505| 
        ; call occurs [#_scia_puts] ; [] |2505| 
        MOV       AL,*-SP[47]           ; [CPU_] |2505| 
	.dwpsn	file "../Source/prod.c",line 2507,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2507| 
        ; branchcc occurs ; [] |2507| 
        CMP       AL,#4096              ; [CPU_] |2507| 
        B         $C$L513,GT            ; [CPU_] |2507| 
        ; branchcc occurs ; [] |2507| 
	.dwpsn	file "../Source/prod.c",line 2511,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2511| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2511| 
        ; call occurs [#_scia_puts] ; [] |2511| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2513| 
        MOVL      XAR0,#44              ; [CPU_] |2513| 
        MOV       AL,*-SP[47]           ; [CPU_] |2513| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2513| 
        MOV       *-SP[3],AL            ; [CPU_] |2513| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2513| 
        MOVL      XAR4,XAR1             ; [CPU_] |2513| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_sprintf")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2513| 
        ; call occurs [#_sprintf] ; [] |2513| 
        MOVL      XAR4,XAR1             ; [CPU_] |2513| 
	.dwpsn	file "../Source/prod.c",line 2515,column 6,is_stmt,isa 0
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2515| 
        ; call occurs [#_scia_puts] ; [] |2515| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2520,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2520| 
        MOVL      ACC,XAR4              ; [CPU_] |2520| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2520| 
        MOVL      XAR4,ACC              ; [CPU_] |2520| 
        MOV       AL,*-SP[47]           ; [CPU_] |2520| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2520| 
	.dwpsn	file "../Source/prod.c",line 2524,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2524| 
        ; branch occurs ; [] |2524| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2509,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2509| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2509| 
        ; call occurs [#_scia_puts] ; [] |2509| 
	.dwpsn	file "../Source/prod.c",line 2500,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2500| 
        ; branch occurs ; [] |2500| 
$C$L514:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2573,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2573| 
        B         $C$L625,LO            ; [CPU_] |2573| 
        ; branchcc occurs ; [] |2573| 
	.dwpsn	file "../Source/prod.c",line 2576,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2576| 
        CMPB      AL,#83                ; [CPU_] |2576| 
        B         $C$L625,NEQ           ; [CPU_] |2576| 
        ; branchcc occurs ; [] |2576| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2583,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2583| 
        MOVL      XAR0,#44              ; [CPU_] |2583| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2583| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2583| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2583| 
        MOVL      XAR4,XAR1             ; [CPU_] |2583| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_sprintf")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2583| 
        ; call occurs [#_sprintf] ; [] |2583| 
	.dwpsn	file "../Source/prod.c",line 2584,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2584| 
	.dwpsn	file "../Source/prod.c",line 2583,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2583| 
	.dwpsn	file "../Source/prod.c",line 2584,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2584| 
        MOV       AL,#1024              ; [CPU_] |2584| 
        MOVL      XAR5,XAR1             ; [CPU_] |2584| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2584| 
        ; call occurs [#_scia_getparam] ; [] |2584| 
	.dwpsn	file "../Source/prod.c",line 2585,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2585| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_atoi")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2585| 
        ; call occurs [#_atoi] ; [] |2585| 
        MOV       *-SP[57],AL           ; [CPU_] |2585| 
	.dwpsn	file "../Source/prod.c",line 2586,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2586| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2586| 
        ; call occurs [#_scia_puts] ; [] |2586| 
        MOV       AL,*-SP[57]           ; [CPU_] |2586| 
	.dwpsn	file "../Source/prod.c",line 2588,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2588| 
        CMPB      AL,#4                 ; [CPU_] |2588| 
        B         $C$L529,HIS           ; [CPU_] |2588| 
        ; branchcc occurs ; [] |2588| 
	.dwpsn	file "../Source/prod.c",line 2592,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2592| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2592| 
        ; call occurs [#_scia_puts] ; [] |2592| 
        MOVL      XAR0,#62              ; [CPU_] |2592| 
	.dwpsn	file "../Source/prod.c",line 2596,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2596| 
	.dwpsn	file "../Source/prod.c",line 2592,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2592| 
	.dwpsn	file "../Source/prod.c",line 2596,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2596| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2597,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2597| 
        MOVL      XAR0,#44              ; [CPU_] |2597| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2597| 
        MOV       *-SP[3],AL            ; [CPU_] |2597| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2597| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2597| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2597| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_sprintf")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2597| 
        ; call occurs [#_sprintf] ; [] |2597| 
        MOVL      XAR0,#44              ; [CPU_] |2597| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2597| 
	.dwpsn	file "../Source/prod.c",line 2598,column 7,is_stmt,isa 0
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2598| 
        ; call occurs [#_scia_puts] ; [] |2598| 
        MOV       AL,*-SP[47]           ; [CPU_] |2598| 
	.dwpsn	file "../Source/prod.c",line 2599,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2599| 
        B         $C$L517,GEQ           ; [CPU_] |2599| 
        ; branchcc occurs ; [] |2599| 
	.dwpsn	file "../Source/prod.c",line 2600,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2600| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2600| 
        ; call occurs [#_scia_puts] ; [] |2600| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2596,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2596| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2596| 
        B         $C$L516,LT            ; [CPU_] |2596| 
        ; branchcc occurs ; [] |2596| 
	.dwpsn	file "../Source/prod.c",line 2603,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2603| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2603| 
        ; call occurs [#_scia_puts] ; [] |2603| 
	.dwpsn	file "../Source/prod.c",line 2604,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2604| 
        MOVL      XAR0,#44              ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2603,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2604,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2604| 
        MOV       *-SP[3],AH            ; [CPU_] |2604| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2604| 
        DEC       *-SP[57]              ; [CPU_] |2604| 
        MOV       *-SP[47],AH           ; [CPU_] |2604| 
        MOVL      XAR4,XAR1             ; [CPU_] |2604| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_sprintf")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2604| 
        ; call occurs [#_sprintf] ; [] |2604| 
	.dwpsn	file "../Source/prod.c",line 2606,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2604,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2606,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2606| 
        MOV       AL,#1024              ; [CPU_] |2606| 
        MOVL      XAR5,XAR1             ; [CPU_] |2606| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2606| 
        ; call occurs [#_scia_getparam] ; [] |2606| 
        MOVL      XAR4,XAR1             ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2607,column 6,is_stmt,isa 0
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_atoi")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2607| 
        ; call occurs [#_atoi] ; [] |2607| 
        MOVZ      AR1,AL                ; [CPU_] |2607| 
        CMPB      AL,#7                 ; [CPU_] |2607| 
        B         $C$L518,LO            ; [CPU_] |2607| 
        ; branchcc occurs ; [] |2607| 
	.dwpsn	file "../Source/prod.c",line 2610,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2610| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2610| 
        ; call occurs [#_scia_puts] ; [] |2610| 
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2609| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2613,column 6,is_stmt,isa 0
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2613| 
        ; call occurs [#_scia_puts] ; [] |2613| 
	.dwpsn	file "../Source/prod.c",line 2614,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2614| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2614| 
        ; call occurs [#_scia_puts] ; [] |2614| 
	.dwpsn	file "../Source/prod.c",line 2615,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2615| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2615| 
        MOVB      AL,#3                 ; [CPU_] |2615| 
        MOV       T,*-SP[57]            ; [CPU_] |2615| 
        MPYU      ACC,T,AL              ; [CPU_] |2615| 
        ADDL      ACC,XAR6              ; [CPU_] |2615| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2615| 
        MOVL      XAR4,ACC              ; [CPU_] |2615| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2615| 
	.dwpsn	file "../Source/prod.c",line 2617,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2617| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2617| 
        CMPB      AL,#2                 ; [CPU_] |2617| 
        B         $C$L522,LOS           ; [CPU_] |2617| 
        ; branchcc occurs ; [] |2617| 
        MOV       AH,AL                 ; [CPU_] |2617| 
        ADDB      AH,#-3                ; [CPU_] |2617| 
        CMPB      AH,#1                 ; [CPU_] |2617| 
        B         $C$L521,LOS           ; [CPU_] |2617| 
        ; branchcc occurs ; [] |2617| 
        CMPB      AL,#5                 ; [CPU_] |2617| 
        B         $C$L519,EQ            ; [CPU_] |2617| 
        ; branchcc occurs ; [] |2617| 
        CMPB      AL,#6                 ; [CPU_] |2617| 
        B         $C$L584,NEQ           ; [CPU_] |2617| 
        ; branchcc occurs ; [] |2617| 
	.dwpsn	file "../Source/prod.c",line 2691,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2691| 
        MOV       AL,*-SP[47]           ; [CPU_] |2691| 
        MOVL      XAR0,#62              ; [CPU_] |2691| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2691| 
        MOV       *-SP[3],AL            ; [CPU_] |2691| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2691| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2691| 
        ADDL      ACC,XAR6              ; [CPU_] |2691| 
        MOVL      XAR4,ACC              ; [CPU_] |2691| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2691| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2691| 
	.dwpsn	file "../Source/prod.c",line 2694,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2694| 
        ; branch occurs ; [] |2694| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2672,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2672| 
        MOVL      XAR0,#44              ; [CPU_] |2672| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2672| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2672| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2672| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_sprintf")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2672| 
        ; call occurs [#_sprintf] ; [] |2672| 
        MOVL      XAR0,#44              ; [CPU_] |2672| 
	.dwpsn	file "../Source/prod.c",line 2673,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2672,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2672| 
	.dwpsn	file "../Source/prod.c",line 2673,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2673| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2673| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2673| 
        ; call occurs [#_scia_getparam] ; [] |2673| 
        MOVL      XAR0,#86              ; [CPU_] |2673| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2674,column 8,is_stmt,isa 0
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_atoi")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2674| 
        ; call occurs [#_atoi] ; [] |2674| 
        MOVL      XAR0,#86              ; [CPU_] |2674| 
        MOV       *-SP[58],AL           ; [CPU_] |2674| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2674| 
	.dwpsn	file "../Source/prod.c",line 2675,column 8,is_stmt,isa 0
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2675| 
        ; call occurs [#_scia_puts] ; [] |2675| 
        MOV       AL,*-SP[58]           ; [CPU_] |2675| 
	.dwpsn	file "../Source/prod.c",line 2677,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2677| 
        CMPB      AL,#4                 ; [CPU_] |2677| 
        B         $C$L520,HIS           ; [CPU_] |2677| 
        ; branchcc occurs ; [] |2677| 
	.dwpsn	file "../Source/prod.c",line 2681,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2681| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2681| 
        ; call occurs [#_scia_puts] ; [] |2681| 
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2683| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2685| 
        MOVL      XAR0,#62              ; [CPU_] |2685| 
	.dwpsn	file "../Source/prod.c",line 2681,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2681| 
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2683| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2685| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2685| 
        MOV       *-SP[3],AL            ; [CPU_] |2685| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2685| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2685| 
        ADDL      ACC,XAR6              ; [CPU_] |2685| 
        MOVL      XAR4,ACC              ; [CPU_] |2685| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2685| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2685| 
        MOVB      AL,#1                 ; [CPU_] |2685| 
        ADD       AL,*-SP[58]           ; [CPU_] |2685| 
        MOV       *-SP[7],AL            ; [CPU_] |2685| 
	.dwpsn	file "../Source/prod.c",line 2688,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2688| 
        ; branch occurs ; [] |2688| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2679,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2679| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2679| 
        ; call occurs [#_scia_puts] ; [] |2679| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2671| 
        ; branch occurs ; [] |2671| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2629,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2629| 
        B         $C$L523,UNC           ; [CPU_] |2629| 
        ; branch occurs ; [] |2629| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2623,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2623| 
$C$L523:    
        MOV       *-SP[59],AL           ; [CPU_] |2623| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2634,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2634| 
        MOV       AL,*-SP[59]           ; [CPU_] |2634| 
        MOVL      XAR0,#44              ; [CPU_] |2634| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2634| 
        MOV       *-SP[3],AL            ; [CPU_] |2634| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2634| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2634| 
        ; call occurs [#_sprintf] ; [] |2634| 
        MOVL      XAR0,#44              ; [CPU_] |2634| 
	.dwpsn	file "../Source/prod.c",line 2635,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2635| 
	.dwpsn	file "../Source/prod.c",line 2634,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2634| 
	.dwpsn	file "../Source/prod.c",line 2635,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2635| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2635| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2635| 
        ; call occurs [#_scia_getparam] ; [] |2635| 
        MOVL      XAR0,#86              ; [CPU_] |2635| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2635| 
	.dwpsn	file "../Source/prod.c",line 2636,column 8,is_stmt,isa 0
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_atoi")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2636| 
        ; call occurs [#_atoi] ; [] |2636| 
        MOVL      XAR0,#86              ; [CPU_] |2636| 
        MOV       *-SP[58],AL           ; [CPU_] |2636| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2637,column 8,is_stmt,isa 0
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2637| 
        ; call occurs [#_scia_puts] ; [] |2637| 
        MOV       AL,*-SP[58]           ; [CPU_] |2637| 
	.dwpsn	file "../Source/prod.c",line 2639,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2639| 
        ; branchcc occurs ; [] |2639| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2639| 
        B         $C$L528,LO            ; [CPU_] |2639| 
        ; branchcc occurs ; [] |2639| 
	.dwpsn	file "../Source/prod.c",line 2643,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2643| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2643| 
        ; call occurs [#_scia_puts] ; [] |2643| 
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2645| 
	.dwpsn	file "../Source/prod.c",line 2643,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2643| 
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2645| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2650,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2650| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2650| 
        MOV       AL,#1024              ; [CPU_] |2650| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2650| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2650| 
        ; call occurs [#_scia_getparam] ; [] |2650| 
        MOVL      XAR0,#86              ; [CPU_] |2650| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2650| 
	.dwpsn	file "../Source/prod.c",line 2652,column 8,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_atoi")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2652| 
        ; call occurs [#_atoi] ; [] |2652| 
        MOV       *-SP[48],AL           ; [CPU_] |2652| 
        CMPB      AL,#0                 ; [CPU_] |2652| 
        B         $C$L527,LT            ; [CPU_] |2652| 
        ; branchcc occurs ; [] |2652| 
        CMPB      AL,#6                 ; [CPU_] |2652| 
        B         $C$L527,GEQ           ; [CPU_] |2652| 
        ; branchcc occurs ; [] |2652| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2658,column 7,is_stmt,isa 0
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2658| 
        ; call occurs [#_scia_puts] ; [] |2658| 
	.dwpsn	file "../Source/prod.c",line 2659,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2659| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2659| 
        ; call occurs [#_scia_puts] ; [] |2659| 
        MOV       AL,*-SP[48]           ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2662| 
        MOVL      XAR0,#62              ; [CPU_] |2662| 
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2660| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2662| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2662| 
        MOV       *-SP[3],AL            ; [CPU_] |2662| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2662| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2662| 
        ADDL      ACC,XAR6              ; [CPU_] |2662| 
        MOVL      XAR4,ACC              ; [CPU_] |2662| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2662| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2662| 
        MOVB      AL,#1                 ; [CPU_] |2662| 
        ADD       AL,*-SP[58]           ; [CPU_] |2662| 
        MOV       *-SP[7],AL            ; [CPU_] |2662| 
        MOV       AL,*-SP[48]           ; [CPU_] |2662| 
        MOV       *-SP[8],AL            ; [CPU_] |2662| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2662| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2662| 
        MOVL      XAR4,XAR1             ; [CPU_] |2662| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_sprintf")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2662| 
        ; call occurs [#_sprintf] ; [] |2662| 
        MOVL      XAR4,XAR1             ; [CPU_] |2662| 
	.dwpsn	file "../Source/prod.c",line 2665,column 7,is_stmt,isa 0
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2665| 
        ; call occurs [#_scia_puts] ; [] |2665| 
	.dwpsn	file "../Source/prod.c",line 2700,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2700| 
        ; branch occurs ; [] |2700| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2656,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2656| 
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2656| 
        ; call occurs [#_scia_puts] ; [] |2656| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2649| 
        ; branch occurs ; [] |2649| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2641,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2641| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2641| 
        ; call occurs [#_scia_puts] ; [] |2641| 
	.dwpsn	file "../Source/prod.c",line 2633,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2633| 
        ; branch occurs ; [] |2633| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2590,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2590| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2590| 
        ; call occurs [#_scia_puts] ; [] |2590| 
	.dwpsn	file "../Source/prod.c",line 2582,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2582| 
        ; branch occurs ; [] |2582| 
$C$L530:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1680| 
        B         $C$L625,LO            ; [CPU_] |1680| 
        ; branchcc occurs ; [] |1680| 
	.dwpsn	file "../Source/prod.c",line 1685,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1685| 
        CMPB      AL,#86                ; [CPU_] |1685| 
        B         $C$L531,EQ            ; [CPU_] |1685| 
        ; branchcc occurs ; [] |1685| 
        CMPB      AL,#77                ; [CPU_] |1685| 
        B         $C$L531,EQ            ; [CPU_] |1685| 
        ; branchcc occurs ; [] |1685| 
        CMPB      AL,#83                ; [CPU_] |1685| 
        B         $C$L625,NEQ           ; [CPU_] |1685| 
        ; branchcc occurs ; [] |1685| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1688,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1688| 
        MOV       *-SP[47],AL           ; [CPU_] |1688| 
	.dwpsn	file "../Source/prod.c",line 1690,column 5,is_stmt,isa 0
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1690| 
        ; call occurs [#_lcd_clear] ; [] |1690| 
	.dwpsn	file "../Source/prod.c",line 1691,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1691| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1691| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1691| 
        ; call occurs [#_lcd_puts] ; [] |1691| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1697,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1697| 
        MOVL      XAR0,#44              ; [CPU_] |1697| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1697| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1697| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1697| 
        MOVL      XAR4,XAR1             ; [CPU_] |1697| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_sprintf")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1697| 
        ; call occurs [#_sprintf] ; [] |1697| 
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1698| 
	.dwpsn	file "../Source/prod.c",line 1697,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1697| 
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1698| 
        MOV       AL,#1024              ; [CPU_] |1698| 
        MOVL      XAR5,XAR1             ; [CPU_] |1698| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1698| 
        ; call occurs [#_scia_getparam] ; [] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1699| 
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_atoi")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1699| 
        ; call occurs [#_atoi] ; [] |1699| 
        MOV       *-SP[58],AL           ; [CPU_] |1699| 
	.dwpsn	file "../Source/prod.c",line 1700,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1700| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1700| 
        ; call occurs [#_scia_puts] ; [] |1700| 
        MOV       AL,*-SP[58]           ; [CPU_] |1700| 
	.dwpsn	file "../Source/prod.c",line 1702,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1702| 
        CMPB      AL,#4                 ; [CPU_] |1702| 
        B         $C$L590,HIS           ; [CPU_] |1702| 
        ; branchcc occurs ; [] |1702| 
	.dwpsn	file "../Source/prod.c",line 1706,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1706| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1706| 
        ; call occurs [#_scia_puts] ; [] |1706| 
	.dwpsn	file "../Source/prod.c",line 1707,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1707| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1712,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1712| 
        MOVL      XAR0,#44              ; [CPU_] |1712| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1712| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1712| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1712| 
        MOVL      XAR4,XAR1             ; [CPU_] |1712| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_sprintf")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1712| 
        ; call occurs [#_sprintf] ; [] |1712| 
	.dwpsn	file "../Source/prod.c",line 1713,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1713| 
	.dwpsn	file "../Source/prod.c",line 1712,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1712| 
	.dwpsn	file "../Source/prod.c",line 1713,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1713| 
        MOV       AL,#1024              ; [CPU_] |1713| 
        MOVL      XAR5,XAR1             ; [CPU_] |1713| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1713| 
        ; call occurs [#_scia_getparam] ; [] |1713| 
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1714| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_atoi")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1714| 
        ; call occurs [#_atoi] ; [] |1714| 
        MOV       *-SP[57],AL           ; [CPU_] |1714| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1715| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1715| 
        ; call occurs [#_scia_puts] ; [] |1715| 
        MOV       AL,*-SP[57]           ; [CPU_] |1715| 
	.dwpsn	file "../Source/prod.c",line 1719,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1719| 
        CMPB      AL,#20                ; [CPU_] |1719| 
        B         $C$L589,HIS           ; [CPU_] |1719| 
        ; branchcc occurs ; [] |1719| 
	.dwpsn	file "../Source/prod.c",line 1723,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1723| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1723| 
        ; call occurs [#_scia_puts] ; [] |1723| 
	.dwpsn	file "../Source/prod.c",line 1727,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1727| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1727| 
        MOVL      XAR0,#44              ; [CPU_] |1727| 
	.dwpsn	file "../Source/prod.c",line 1723,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1723| 
	.dwpsn	file "../Source/prod.c",line 1727,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1727| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1727| 
        MOV       *-SP[3],AL            ; [CPU_] |1727| 
        MOV       *-SP[4],AH            ; [CPU_] |1727| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1727| 
        DEC       *-SP[57]              ; [CPU_] |1727| 
        MOV       *-SP[59],AH           ; [CPU_] |1727| 
        MOV       *-SP[60],AL           ; [CPU_] |1727| 
        MOVL      XAR4,XAR1             ; [CPU_] |1727| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_sprintf")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1727| 
        ; call occurs [#_sprintf] ; [] |1727| 
	.dwpsn	file "../Source/prod.c",line 1728,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1728| 
        MOVL      XAR4,XAR1             ; [CPU_] |1728| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1728| 
        ; call occurs [#_lcd_puts] ; [] |1728| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1732| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1732| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1732| 
        MOVL      XAR4,XAR1             ; [CPU_] |1732| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_sprintf")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1732| 
        ; call occurs [#_sprintf] ; [] |1732| 
	.dwpsn	file "../Source/prod.c",line 1733,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1733| 
        MOV       AL,#1024              ; [CPU_] |1733| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1733| 
        MOVL      XAR4,XAR1             ; [CPU_] |1733| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1733| 
        ; call occurs [#_scia_getparam] ; [] |1733| 
        CMPB      AL,#15                ; [CPU_] |1733| 
        B         $C$L534,LOS           ; [CPU_] |1733| 
        ; branchcc occurs ; [] |1733| 
	.dwpsn	file "../Source/prod.c",line 1737,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1737| 
        MOVB      XAR0,#15              ; [CPU_] |1737| 
	.dwpsn	file "../Source/prod.c",line 1736,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1736| 
	.dwpsn	file "../Source/prod.c",line 1737,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1737| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1739,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1739| 
        MOVL      XAR0,#86              ; [CPU_] |1739| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1739| 
        MOVB      AH,#1                 ; [CPU_] |1739| 
        ADD       AH,AL                 ; [CPU_] |1739| 
        MOVU      ACC,AH                ; [CPU_] |1739| 
        MOVL      XAR5,XAR1             ; [CPU_] |1739| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_memcpy")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1739| 
        ; call occurs [#_memcpy] ; [] |1739| 
        MOVL      XAR4,XAR1             ; [CPU_] |1739| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1740| 
        ; call occurs [#_scia_puts] ; [] |1740| 
	.dwpsn	file "../Source/prod.c",line 1741,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1741| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1741| 
        ; call occurs [#_scia_puts] ; [] |1741| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1745| 
        MOVL      XAR0,#44              ; [CPU_] |1745| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1745| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1745| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1745| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_sprintf")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1745| 
        ; call occurs [#_sprintf] ; [] |1745| 
        MOVL      XAR0,#44              ; [CPU_] |1745| 
	.dwpsn	file "../Source/prod.c",line 1746,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1746| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1745| 
	.dwpsn	file "../Source/prod.c",line 1746,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1746| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1746| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1746| 
        ; call occurs [#_scia_getparam] ; [] |1746| 
        CMPB      AL,#15                ; [CPU_] |1746| 
        B         $C$L535,LOS           ; [CPU_] |1746| 
        ; branchcc occurs ; [] |1746| 
	.dwpsn	file "../Source/prod.c",line 1750,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1750| 
        MOVB      XAR0,#15              ; [CPU_] |1750| 
	.dwpsn	file "../Source/prod.c",line 1749,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1749| 
	.dwpsn	file "../Source/prod.c",line 1750,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1750| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1752,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1752| 
        MOVL      XAR0,#60              ; [CPU_] |1752| 
        MOVL      XAR5,XAR1             ; [CPU_] |1752| 
        ADD       AH,AL                 ; [CPU_] |1752| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1752| 
        MOVU      ACC,AH                ; [CPU_] |1752| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_memcpy")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1752| 
        ; call occurs [#_memcpy] ; [] |1752| 
        MOVL      XAR4,XAR1             ; [CPU_] |1752| 
	.dwpsn	file "../Source/prod.c",line 1753,column 5,is_stmt,isa 0
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1753| 
        ; call occurs [#_scia_puts] ; [] |1753| 
	.dwpsn	file "../Source/prod.c",line 1754,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1754| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1754| 
        ; call occurs [#_scia_puts] ; [] |1754| 
        MOVL      XAR0,#70              ; [CPU_] |1754| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1754| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1757,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1757| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1757| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1758,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1758| 
        MOVL      XAR0,#88              ; [CPU_] |1758| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1758| 
        MOV       *-SP[3],AL            ; [CPU_] |1758| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1758| 
        MOVL      XAR0,#88              ; [CPU_] |1758| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1758| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1758| 
        MOVL      XAR4,XAR1             ; [CPU_] |1758| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1758| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_sprintf")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1758| 
        ; call occurs [#_sprintf] ; [] |1758| 
	.dwpsn	file "../Source/prod.c",line 1757,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1757| 
        INC       *-SP[61]              ; [CPU_] |1757| 
        MOV       AL,*-SP[61]           ; [CPU_] |1757| 
        CMPB      AL,#7                 ; [CPU_] |1757| 
        B         $C$L536,LT            ; [CPU_] |1757| 
        ; branchcc occurs ; [] |1757| 
	.dwpsn	file "../Source/prod.c",line 1760,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1760| 
        MOVB      XAR1,#54              ; [CPU_] |1760| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1760| 
	.dwpsn	file "../Source/prod.c",line 1761,column 5,is_stmt,isa 0
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1761| 
        ; call occurs [#_scia_puts] ; [] |1761| 
	.dwpsn	file "../Source/prod.c",line 1762,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1762| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1762| 
        MOV       AL,#1024              ; [CPU_] |1762| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1762| 
        MOVL      XAR5,XAR1             ; [CPU_] |1762| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1762| 
        ; call occurs [#_scia_getparam] ; [] |1762| 
        MOVL      XAR4,XAR1             ; [CPU_] |1762| 
	.dwpsn	file "../Source/prod.c",line 1764,column 5,is_stmt,isa 0
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_atoi")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1764| 
        ; call occurs [#_atoi] ; [] |1764| 
        MOVB      XAR0,#42              ; [CPU_] |1764| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1764| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1764| 
	.dwpsn	file "../Source/prod.c",line 1766,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1766| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1766| 
        CMPB      AL,#6                 ; [CPU_] |1766| 
        B         $C$L537,GT            ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        CMPB      AL,#6                 ; [CPU_] |1766| 
        B         $C$L540,EQ            ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        CMPB      AL,#1                 ; [CPU_] |1766| 
        B         $C$L543,LOS           ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        MOV       AH,AL                 ; [CPU_] |1766| 
        ADDB      AH,#-2                ; [CPU_] |1766| 
        CMPB      AH,#2                 ; [CPU_] |1766| 
        B         $C$L542,LOS           ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        CMPB      AL,#5                 ; [CPU_] |1766| 
        B         $C$L541,EQ            ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        B         $C$L538,UNC           ; [CPU_] |1766| 
        ; branch occurs ; [] |1766| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1766| 
        ADDB      AH,#-7                ; [CPU_] |1766| 
        CMPB      AH,#1                 ; [CPU_] |1766| 
        B         $C$L539,LOS           ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        CMPB      AL,#15                ; [CPU_] |1766| 
        B         $C$L539,EQ            ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1788,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1788| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1788| 
	.dwpsn	file "../Source/prod.c",line 1789,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1789| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1789| 
        ; call occurs [#_scia_puts] ; [] |1789| 
	.dwpsn	file "../Source/prod.c",line 1790,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1790| 
        ; branch occurs ; [] |1790| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1785,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1785| 
	.dwpsn	file "../Source/prod.c",line 1786,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1786| 
        ; branch occurs ; [] |1786| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1780| 
	.dwpsn	file "../Source/prod.c",line 1781,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1781| 
        ; branch occurs ; [] |1781| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1778| 
        ; branch occurs ; [] |1778| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1774,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1774| 
	.dwpsn	file "../Source/prod.c",line 1775,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1775| 
        ; branch occurs ; [] |1775| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1769| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1792,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1792| 
        MOVL      XAR4,XAR7             ; [CPU_] |1792| 
        MOVB      XAR0,#43              ; [CPU_] |1792| 
        ADDB      XAR7,#42              ; [CPU_] |1792| 
        MOV       AL,*XAR7              ; [CPU_] |1792| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1792| 
	.dwpsn	file "../Source/prod.c",line 1793,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1793| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1793| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1793| 
        MOVL      XAR0,#86              ; [CPU_] |1793| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1793| 
	.dwpsn	file "../Source/prod.c",line 1795,column 5,is_stmt,isa 0
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1795| 
        ; call occurs [#_scia_puts] ; [] |1795| 
	.dwpsn	file "../Source/prod.c",line 1796,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1796| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1796| 
        ; call occurs [#_scia_puts] ; [] |1796| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1801| 
        MOVL      XAR5,XAR1             ; [CPU_] |1801| 
        MOV       AL,#1024              ; [CPU_] |1801| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1801| 
        ; call occurs [#_scia_getparam] ; [] |1801| 
        MOVL      XAR4,XAR1             ; [CPU_] |1801| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_strtod")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1802| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1802| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1802| 
	.dwpsn	file "../Source/prod.c",line 1804,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1804| 
        MOV       AH,#0                 ; [CPU_] |1804| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1804| 
        MOVL      ACC,XAR3              ; [CPU_] |1804| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1804| 
        ; call occurs [#FS$$CMP] ; [] |1804| 
        CMPB      AL,#0                 ; [CPU_] |1804| 
        B         $C$L588,EQ            ; [CPU_] |1804| 
        ; branchcc occurs ; [] |1804| 
	.dwpsn	file "../Source/prod.c",line 1808,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1808| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1808| 
        MOVB      XAR1,#142             ; [CPU_] |1808| 
        MOVL      XAR0,#86              ; [CPU_] |1808| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1808| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1808| 
	.dwpsn	file "../Source/prod.c",line 1809,column 5,is_stmt,isa 0
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1809| 
        ; call occurs [#_scia_puts] ; [] |1809| 
	.dwpsn	file "../Source/prod.c",line 1810,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1810| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1810| 
        ; call occurs [#_scia_puts] ; [] |1810| 
        MOV       AL,*-SP[58]           ; [CPU_] |1810| 
	.dwpsn	file "../Source/prod.c",line 1812,column 5,is_stmt,isa 0
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_tagid")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1812| 
        ; call occurs [#_tagid] ; [] |1812| 
        MOVL      XAR0,#36              ; [CPU_] |1812| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1812| 
        MOVL      XAR4,XAR5             ; [CPU_] |1812| 
        ADDB      XAR4,#32              ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1812,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1812| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1814| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1814| 
        MOV       *-SP[2],#0            ; [CPU_] |1814| 
        MOV       *-SP[1],#0            ; [CPU_] |1814| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1814| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1814| 
        MOVL      P,XAR4                ; [CPU_] |1814| 
        MOVL      ACC,XAR5              ; [CPU_] |1814| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1187, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1814| 
        ; call occurs [#ULL$$CMP] ; [] |1814| 
        CMPB      AL,#0                 ; [CPU_] |1814| 
        B         $C$L546,NEQ           ; [CPU_] |1814| 
        ; branchcc occurs ; [] |1814| 
	.dwpsn	file "../Source/prod.c",line 1815,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1815| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1815| 
	.dwpsn	file "../Source/prod.c",line 1816,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1816| 
        ; branch occurs ; [] |1816| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1817| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1817| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1817| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1817| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1817| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1817| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_sprintf")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1817| 
        ; call occurs [#_sprintf] ; [] |1817| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1819,column 5,is_stmt,isa 0
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1819| 
        ; call occurs [#_scia_puts] ; [] |1819| 
        MOV       AL,*-SP[47]           ; [CPU_] |1819| 
	.dwpsn	file "../Source/prod.c",line 1821,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1821| 
        B         $C$L561,EQ            ; [CPU_] |1821| 
        ; branchcc occurs ; [] |1821| 
        CMPB      AL,#83                ; [CPU_] |1821| 
        B         $C$L552,EQ            ; [CPU_] |1821| 
        ; branchcc occurs ; [] |1821| 
        CMPB      AL,#86                ; [CPU_] |1821| 
        B         $C$L618,NEQ           ; [CPU_] |1821| 
        ; branchcc occurs ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1826,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1826| 
        MOVB      AL,#40                ; [CPU_] |1826| 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1826| 
        ; call occurs [#_lcd_puts] ; [] |1826| 
	.dwpsn	file "../Source/prod.c",line 1828,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1828| 
        MOVB      XAR0,#36              ; [CPU_] |1828| 
	.dwpsn	file "../Source/prod.c",line 1831,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1831| 
	.dwpsn	file "../Source/prod.c",line 1828,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1828| 
	.dwpsn	file "../Source/prod.c",line 1829,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1829| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1829| 
	.dwpsn	file "../Source/prod.c",line 1831,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1831| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1831| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1831| 
        MOVL      XAR0,#70              ; [CPU_] |1831| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1831| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1831| 
        MOV       ACC,AL << 1           ; [CPU_] |1831| 
        ADDL      ACC,XAR6              ; [CPU_] |1831| 
        MOVL      XAR4,ACC              ; [CPU_] |1831| 
        MOVL      XAR0,#44              ; [CPU_] |1831| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1831| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1831| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1831| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_sprintf")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1831| 
        ; call occurs [#_sprintf] ; [] |1831| 
        MOVL      XAR0,#44              ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1833| 
	.dwpsn	file "../Source/prod.c",line 1831,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1833| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1833| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1833| 
        ; call occurs [#_scia_getparam] ; [] |1833| 
        MOVL      XAR0,#86              ; [CPU_] |1833| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1833| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_strtod")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1834| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1834| 
	.dwpsn	file "../Source/prod.c",line 1835,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1835| 
        MOV       AH,#0                 ; [CPU_] |1835| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1835| 
        MOVL      ACC,XAR6              ; [CPU_] |1835| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1835| 
        ; call occurs [#FS$$CMP] ; [] |1835| 
        CMPB      AL,#0                 ; [CPU_] |1835| 
        B         $C$L548,NEQ           ; [CPU_] |1835| 
        ; branchcc occurs ; [] |1835| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1836| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1836| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1836| 
$C$L548:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1838,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1838| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1838| 
        ; call occurs [#_scia_puts] ; [] |1838| 
	.dwpsn	file "../Source/prod.c",line 1839,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1839| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1839| 
        ; call occurs [#_scia_puts] ; [] |1839| 
	.dwpsn	file "../Source/prod.c",line 1841,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1841| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1841| 
        MOVL      XAR5,XAR1             ; [CPU_] |1841| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1841| 
        ; call occurs [#_scia_getparam] ; [] |1841| 
	.dwpsn	file "../Source/prod.c",line 1844,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1844| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1844| 
        ; call occurs [#_scia_puts] ; [] |1844| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1847| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1848| 
        MOVB      ACC,#0                ; [CPU_] |1848| 
        SUBB      ACC,#1                ; [CPU_] |1848| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1848| 
        B         $C$L551,EQ            ; [CPU_] |1848| 
        ; branchcc occurs ; [] |1848| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1849,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1849| 
        ; branch occurs ; [] |1849| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1850,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1850| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_delay_us")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1850| 
        ; call occurs [#_delay_us] ; [] |1850| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1849,column 14,is_stmt,isa 0
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1849| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1849| 
        CMPB      AL,#0                 ; [CPU_] |1849| 
        B         $C$L549,EQ            ; [CPU_] |1849| 
        ; branchcc occurs ; [] |1849| 
	.dwpsn	file "../Source/prod.c",line 1853,column 7,is_stmt,isa 0
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1853| 
        ; call occurs [#_ad7738_getraw] ; [] |1853| 
	.dwpsn	file "../Source/prod.c",line 1854,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1854| 
        ADDL      XAR4,ACC              ; [CPU_] |1854| 
        MOVL      XAR0,#20              ; [CPU_] |1854| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1854| 
        MOVL      XAR0,#20              ; [CPU_] |1854| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1854| 
        ASR64     ACC:P,16              ; [CPU_] |1854| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1854| 
        MOVL      XAR0,#20              ; [CPU_] |1854| 
        ASR64     ACC:P,16              ; [CPU_] |1854| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1854| 
        MOVL      XAR0,#20              ; [CPU_] |1854| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1854| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1854| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1854| 
        MOVL      *-SP[32],P            ; [CPU_] |1854| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1854| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1848| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1848| 
        MOVB      ACC,#0                ; [CPU_] |1848| 
        SUBB      ACC,#1                ; [CPU_] |1848| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1848| 
        B         $C$L550,NEQ           ; [CPU_] |1848| 
        ; branchcc occurs ; [] |1848| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1856,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1856| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1856| 
        ; call occurs [#_scia_puts] ; [] |1856| 
	.dwpsn	file "../Source/prod.c",line 1858,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1858| 
        MOVL      XAR0,#52              ; [CPU_] |1858| 
        MOVL      ACC,XAR1              ; [CPU_] |1858| 
        ADDB      ACC,#96               ; [CPU_] |1858| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1858| 
        MOVL      XAR0,#40              ; [CPU_] |1858| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1858| 
        MOV       T,*-SP[58]            ; [CPU_] |1858| 
        MOVB      AL,#10                ; [CPU_] |1858| 
        MPYU      ACC,T,AL              ; [CPU_] |1858| 
        ADDL      ACC,XAR6              ; [CPU_] |1858| 
        ADDB      ACC,#42               ; [CPU_] |1858| 
        MOVL      XAR4,ACC              ; [CPU_] |1858| 
        MOVL      XAR0,#42              ; [CPU_] |1858| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 6,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1860| 
        ; branch occurs ; [] |1860| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1943,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1943| 
        MOVB      AL,#40                ; [CPU_] |1943| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1943| 
        ; call occurs [#_lcd_puts] ; [] |1943| 
	.dwpsn	file "../Source/prod.c",line 1945,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1945| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1945| 
	.dwpsn	file "../Source/prod.c",line 1948,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1948| 
	.dwpsn	file "../Source/prod.c",line 1945,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1945| 
	.dwpsn	file "../Source/prod.c",line 1946,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1946| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1946| 
	.dwpsn	file "../Source/prod.c",line 1948,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1948| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1948| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1948| 
        MOVL      XAR0,#70              ; [CPU_] |1948| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1948| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1948| 
        MOV       ACC,AL << 1           ; [CPU_] |1948| 
        ADDL      ACC,XAR6              ; [CPU_] |1948| 
        MOVL      XAR4,ACC              ; [CPU_] |1948| 
        MOVL      XAR0,#44              ; [CPU_] |1948| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1948| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1948| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1948| 
        MOVL      XAR4,XAR1             ; [CPU_] |1948| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_sprintf")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1948| 
        ; call occurs [#_sprintf] ; [] |1948| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1951| 
	.dwpsn	file "../Source/prod.c",line 1948,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1948| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1951| 
        MOV       AL,#1024              ; [CPU_] |1951| 
        MOVL      XAR5,XAR1             ; [CPU_] |1951| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1951| 
        ; call occurs [#_scia_getparam] ; [] |1951| 
	.dwpsn	file "../Source/prod.c",line 1952,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1952| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1952| 
        ; call occurs [#_scia_puts] ; [] |1952| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_strtod")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1954,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1954| 
        MOV       AH,#0                 ; [CPU_] |1954| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1954| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1954| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1954| 
        ; call occurs [#FS$$CMP] ; [] |1954| 
        CMPB      AL,#0                 ; [CPU_] |1954| 
        B         $C$L553,NEQ           ; [CPU_] |1954| 
        ; branchcc occurs ; [] |1954| 
	.dwpsn	file "../Source/prod.c",line 1955,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1955| 
        MOV       AH,#16314             ; [CPU_] |1955| 
	.dwpsn	file "../Source/prod.c",line 1956,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1956| 
	.dwpsn	file "../Source/prod.c",line 1955,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1955| 
	.dwpsn	file "../Source/prod.c",line 1956,column 7,is_stmt,isa 0
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1956| 
        ; call occurs [#_scia_puts] ; [] |1956| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1958,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1958| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1958| 
        ; call occurs [#_scia_puts] ; [] |1958| 
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1960| 
        MOV       AL,#1024              ; [CPU_] |1960| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1960| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1960| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1960| 
        ; call occurs [#_scia_getparam] ; [] |1960| 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1963| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1963| 
        ; call occurs [#_scia_puts] ; [] |1963| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1965,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1965| 
        MOV       *-SP[48],AL           ; [CPU_] |1965| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1966,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1966| 
        B         $C$L556,LEQ           ; [CPU_] |1966| 
        ; branchcc occurs ; [] |1966| 
	.dwpsn	file "../Source/prod.c",line 1968,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1968| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1968| 
        ; call occurs [#_shunt_switch] ; [] |1968| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1970,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1970| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_delay_us")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1970| 
        ; call occurs [#_delay_us] ; [] |1970| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1970| 
	.dwpsn	file "../Source/prod.c",line 1969,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1969| 
        MOVZ      AR0,AR6               ; [CPU_] |1969| 
        MOV       *-SP[47],AR6          ; [CPU_] |1969| 
        CMP       AR0,#-1               ; [CPU_] |1969| 
        B         $C$L555,NEQ           ; [CPU_] |1969| 
        ; branchcc occurs ; [] |1969| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1973,column 8,is_stmt,isa 0
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1973| 
        ; call occurs [#_maf_rst] ; [] |1973| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1975,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1975| 
        SPM       #0                    ; [CPU_] 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_delay_us")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1975| 
        ; call occurs [#_delay_us] ; [] |1975| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1978,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1978| 
	.dwpsn	file "../Source/prod.c",line 1979,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1979| 
	.dwpsn	file "../Source/prod.c",line 1978,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1978| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1978| 
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1980| 
	.dwpsn	file "../Source/prod.c",line 1979,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1979| 
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1980| 
        MOVB      ACC,#0                ; [CPU_] |1980| 
        SUBB      ACC,#1                ; [CPU_] |1980| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1980| 
        B         $C$L558,EQ            ; [CPU_] |1980| 
        ; branchcc occurs ; [] |1980| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1981,column 15,is_stmt,isa 0
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1981| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1981| 
        CMPB      AL,#0                 ; [CPU_] |1981| 
        B         $C$L560,EQ            ; [CPU_] |1981| 
        ; branchcc occurs ; [] |1981| 
	.dwpsn	file "../Source/prod.c",line 1985,column 8,is_stmt,isa 0
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1985| 
        ; call occurs [#_ad7738_getraw] ; [] |1985| 
	.dwpsn	file "../Source/prod.c",line 1986,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1986| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1986| 
        ADDL      XAR4,ACC              ; [CPU_] |1986| 
        MOVL      XAR0,#18              ; [CPU_] |1986| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1986| 
        MOVL      XAR0,#18              ; [CPU_] |1986| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1986| 
        ASR64     ACC:P,16              ; [CPU_] |1986| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1986| 
        MOVL      XAR0,#18              ; [CPU_] |1986| 
        ASR64     ACC:P,16              ; [CPU_] |1986| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1986| 
        MOVL      XAR0,#18              ; [CPU_] |1986| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1986| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1986| 
        MOVL      XAR0,#18              ; [CPU_] |1986| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1986| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1986| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1986| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1986| 
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1980| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1980| 
        MOVB      ACC,#0                ; [CPU_] |1980| 
        SUBB      ACC,#1                ; [CPU_] |1980| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1980| 
        B         $C$L557,NEQ           ; [CPU_] |1980| 
        ; branchcc occurs ; [] |1980| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1965,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1965| 
        ADDB      XAR1,#4               ; [CPU_] |1965| 
        MOV       AL,*-SP[48]           ; [CPU_] |1965| 
        CMPB      AL,#2                 ; [CPU_] |1965| 
        B         $C$L554,LT            ; [CPU_] |1965| 
        ; branchcc occurs ; [] |1965| 
	.dwpsn	file "../Source/prod.c",line 1990,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1990| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1990| 
        ; call occurs [#_shunt_switch] ; [] |1990| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1992,column 6,is_stmt,isa 0
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1992| 
        ; call occurs [#_maf_rst] ; [] |1992| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1995,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1995| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1995| 
        ; call occurs [#_scia_puts] ; [] |1995| 
	.dwpsn	file "../Source/prod.c",line 1997,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1997| 
        MOVB      AL,#10                ; [CPU_] |1997| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1997| 
        MOV       T,*-SP[58]            ; [CPU_] |1997| 
        MPYU      ACC,T,AL              ; [CPU_] |1997| 
        MOVL      XAR0,#88              ; [CPU_] |1997| 
        ADDL      ACC,XAR6              ; [CPU_] |1997| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1997| 
        MOV       AL,#16384             ; [CPU_] |1997| 
        MOV       AH,#17948             ; [CPU_] |1997| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1997| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1997| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1997| 
        ; call occurs [#FS$$MPY] ; [] |1997| 
        MOVL      XAR3,ACC              ; [CPU_] |1997| 
        MOVL      P,*-SP[28]            ; [CPU_] |1997| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1997| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1997| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1997| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1997| 
        ; call occurs [#LL$$TOFS] ; [] |1997| 
        MOVL      XAR0,#88              ; [CPU_] |1997| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1997| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1997| 
        MOVB      XAR1,#44              ; [CPU_] |1997| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1997| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1997| 
        ; call occurs [#FS$$MPY] ; [] |1997| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1997| 
        MOVL      ACC,XAR3              ; [CPU_] |1997| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1997| 
        ; call occurs [#FS$$DIV] ; [] |1997| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1997| 
        MOVB      XAR0,#96              ; [CPU_] |1997| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1997| 
	.dwpsn	file "../Source/prod.c",line 1999,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1999| 
        MOVL      ACC,XAR1              ; [CPU_] |1999| 
        ADDB      ACC,#96               ; [CPU_] |1999| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1999| 
        MOVL      XAR0,#88              ; [CPU_] |1999| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1999| 
        MOVL      XAR0,#42              ; [CPU_] |1999| 
        ADDB      XAR4,#42              ; [CPU_] |1999| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1999| 
$C$L559:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1999| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1999| 
        ; call occurs [#FS$$NEG] ; [] |1999| 
        MOVB      XAR0,#96              ; [CPU_] |1999| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1999| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1999| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1999| 
        ; call occurs [#FS$$MPY] ; [] |1999| 
        MOVL      XAR0,#88              ; [CPU_] |1999| 
        MOVL      P,*-SP[32]            ; [CPU_] |1999| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1999| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1999| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1999| 
        ; call occurs [#LL$$TOFS] ; [] |1999| 
        MOVL      XAR0,#88              ; [CPU_] |1999| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1999| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1999| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1999| 
        ; call occurs [#FS$$MPY] ; [] |1999| 
        MOVL      XAR6,ACC              ; [CPU_] |1999| 
        MOV       AL,#16384             ; [CPU_] |1999| 
        MOV       AH,#17948             ; [CPU_] |1999| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1999| 
        MOVL      ACC,XAR6              ; [CPU_] |1999| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1999| 
        ; call occurs [#FS$$DIV] ; [] |1999| 
        MOVB      XAR0,#118             ; [CPU_] |1999| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1999| 
	.dwpsn	file "../Source/prod.c",line 2001,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |2001| 
        ; branch occurs ; [] |2001| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1982,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1982| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_delay_us")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1982| 
        ; call occurs [#_delay_us] ; [] |1982| 
	.dwpsn	file "../Source/prod.c",line 1981,column 15,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |1981| 
        ; branch occurs ; [] |1981| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1864,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1864| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1869,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1869| 
        MOVL      XAR0,#44              ; [CPU_] |1869| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1869| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1869| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1869| 
        MOVL      XAR4,XAR1             ; [CPU_] |1869| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_sprintf")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1869| 
        ; call occurs [#_sprintf] ; [] |1869| 
	.dwpsn	file "../Source/prod.c",line 1870,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1870| 
	.dwpsn	file "../Source/prod.c",line 1869,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1869| 
	.dwpsn	file "../Source/prod.c",line 1870,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1870| 
        MOV       AL,#1024              ; [CPU_] |1870| 
        MOVL      XAR5,XAR1             ; [CPU_] |1870| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1870| 
        ; call occurs [#_scia_getparam] ; [] |1870| 
        MOVL      XAR4,XAR1             ; [CPU_] |1870| 
	.dwpsn	file "../Source/prod.c",line 1871,column 7,is_stmt,isa 0
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_atoi")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1871| 
        ; call occurs [#_atoi] ; [] |1871| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1871| 
        MOVB      XAR0,#46              ; [CPU_] |1871| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1871| 
        MOVL      XAR0,#86              ; [CPU_] |1871| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1871| 
	.dwpsn	file "../Source/prod.c",line 1872,column 7,is_stmt,isa 0
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1872| 
        ; call occurs [#_scia_puts] ; [] |1872| 
	.dwpsn	file "../Source/prod.c",line 1874,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1874| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1874| 
        CMPB      AL,#2                 ; [CPU_] |1874| 
        B         $C$L587,LT            ; [CPU_] |1874| 
        ; branchcc occurs ; [] |1874| 
        CMPB      AL,#12                ; [CPU_] |1874| 
        B         $C$L587,GT            ; [CPU_] |1874| 
        ; branchcc occurs ; [] |1874| 
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1879| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1879| 
        ; call occurs [#_scia_puts] ; [] |1879| 
	.dwpsn	file "../Source/prod.c",line 1881,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1881| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1881| 
        MOVL      XAR0,#44              ; [CPU_] |1881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1881| 
        ADDB      XAR7,#46              ; [CPU_] |1881| 
        MOV       AL,*XAR7              ; [CPU_] |1881| 
        MOV       *-SP[3],AL            ; [CPU_] |1881| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1881| 
        MOVL      XAR4,XAR1             ; [CPU_] |1881| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_sprintf")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1881| 
        ; call occurs [#_sprintf] ; [] |1881| 
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1882| 
	.dwpsn	file "../Source/prod.c",line 1881,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1881| 
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1882| 
        ; call occurs [#_lcd_puts] ; [] |1882| 
	.dwpsn	file "../Source/prod.c",line 1885,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1885| 
	.dwpsn	file "../Source/prod.c",line 1885,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1885| 
	.dwpsn	file "../Source/prod.c",line 1885,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1885| 
        ; branch occurs ; [] |1885| 
$C$L563:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1886| 
        SUB       AL,*-SP[47]           ; [CPU_] |1886| 
        ADDB      AL,#1                 ; [CPU_] |1886| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1886| 
        ; call occurs [#I$$TOFS] ; [] |1886| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1886| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1886| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1886| 
        ; call occurs [#FS$$MPY] ; [] |1886| 
        MOVL      XAR0,#88              ; [CPU_] |1886| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1886| 
        MOV       AL,*-SP[47]           ; [CPU_] |1886| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1886| 
        ; call occurs [#I$$TOFS] ; [] |1886| 
        MOVL      XAR0,#88              ; [CPU_] |1886| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1886| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1886| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1886| 
        ; call occurs [#FS$$DIV] ; [] |1886| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1886| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1886| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1886| 
        ADDL      ACC,XAR1              ; [CPU_] |1886| 
        MOVL      XAR4,ACC              ; [CPU_] |1886| 
        MOVB      XAR0,#48              ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1885,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1885| 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1885,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1885| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1885,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1885| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1885| 
        MOV       *-SP[47],AL           ; [CPU_] |1885| 
        CMP       AL,*-SP[48]           ; [CPU_] |1885| 
        B         $C$L563,GT            ; [CPU_] |1885| 
        ; branchcc occurs ; [] |1885| 
	.dwpsn	file "../Source/prod.c",line 1891,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1891| 
        B         $C$L567,UNC           ; [CPU_] |1891| 
        ; branch occurs ; [] |1891| 
$C$L565:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1892,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1892| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1892| 
        MOVL      XAR0,#44              ; [CPU_] |1892| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1892| 
        ADDL      ACC,XAR1              ; [CPU_] |1892| 
        ADDB      ACC,#48               ; [CPU_] |1892| 
        MOVL      XAR1,ACC              ; [CPU_] |1892| 
        MOVB      AL,#1                 ; [CPU_] |1892| 
        ADD       AL,AR6                ; [CPU_] |1892| 
        MOV       *-SP[3],AL            ; [CPU_] |1892| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1892| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1892| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1892| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_sprintf")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1892| 
        ; call occurs [#_sprintf] ; [] |1892| 
        MOVL      XAR0,#44              ; [CPU_] |1892| 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1892,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1892| 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1894| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1894| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1894| 
        ; call occurs [#_scia_getparam] ; [] |1894| 
        CMPB      AL,#0                 ; [CPU_] |1894| 
        B         $C$L566,EQ            ; [CPU_] |1894| 
        ; branchcc occurs ; [] |1894| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_strtod")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1898,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1898| 
$C$L566:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1900| 
        ; call occurs [#_scia_puts] ; [] |1900| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1901| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1901| 
        ; call occurs [#_scia_puts] ; [] |1901| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1891,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1891| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1891,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1891| 
        B         $C$L565,GT            ; [CPU_] |1891| 
        ; branchcc occurs ; [] |1891| 
	.dwpsn	file "../Source/prod.c",line 1907,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1907| 
        B         $C$L572,UNC           ; [CPU_] |1907| 
        ; branch occurs ; [] |1907| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1908,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1908| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1908| 
        ADDL      ACC,XAR1              ; [CPU_] |1908| 
        ADDB      ACC,#48               ; [CPU_] |1908| 
        MOVL      XAR1,ACC              ; [CPU_] |1908| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1908| 
        MOVL      XAR0,#70              ; [CPU_] |1908| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1908| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1908| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1908| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1908| 
        ANDB      AL,#0x0f              ; [CPU_] |1908| 
        MOV       ACC,AL << 1           ; [CPU_] |1908| 
        ADDL      ACC,XAR7              ; [CPU_] |1908| 
        MOVL      XAR4,ACC              ; [CPU_] |1908| 
        MOVL      XAR0,#44              ; [CPU_] |1908| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1908| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1908| 
        MOVB      AL,#1                 ; [CPU_] |1908| 
        ADD       AL,AR6                ; [CPU_] |1908| 
        MOV       *-SP[7],AL            ; [CPU_] |1908| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1908| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_sprintf")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1908| 
        ; call occurs [#_sprintf] ; [] |1908| 
        MOVL      XAR0,#44              ; [CPU_] |1908| 
	.dwpsn	file "../Source/prod.c",line 1912,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1912| 
	.dwpsn	file "../Source/prod.c",line 1908,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1908| 
	.dwpsn	file "../Source/prod.c",line 1912,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1912| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1912| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1912| 
        ; call occurs [#_scia_getparam] ; [] |1912| 
	.dwpsn	file "../Source/prod.c",line 1913,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1913| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1913| 
        ; call occurs [#_scia_puts] ; [] |1913| 
	.dwpsn	file "../Source/prod.c",line 1915,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1915| 
	.dwpsn	file "../Source/prod.c",line 1916,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1916| 
	.dwpsn	file "../Source/prod.c",line 1915,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1915| 
	.dwpsn	file "../Source/prod.c",line 1916,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1916| 
	.dwpsn	file "../Source/prod.c",line 1915,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1915| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1915,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1915| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1917| 
        MOVB      ACC,#0                ; [CPU_] |1917| 
        SUBB      ACC,#1                ; [CPU_] |1917| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1917| 
        B         $C$L571,EQ            ; [CPU_] |1917| 
        ; branchcc occurs ; [] |1917| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1918,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1918| 
        ; branch occurs ; [] |1918| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1919,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1919| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_delay_us")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1919| 
        ; call occurs [#_delay_us] ; [] |1919| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1918,column 15,is_stmt,isa 0
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1918| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1918| 
        CMPB      AL,#0                 ; [CPU_] |1918| 
        B         $C$L569,EQ            ; [CPU_] |1918| 
        ; branchcc occurs ; [] |1918| 
	.dwpsn	file "../Source/prod.c",line 1922,column 8,is_stmt,isa 0
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1922| 
        ; call occurs [#_ad7738_getraw] ; [] |1922| 
	.dwpsn	file "../Source/prod.c",line 1923,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1923| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1923| 
        ADDL      XAR4,ACC              ; [CPU_] |1923| 
        MOVL      XAR0,#16              ; [CPU_] |1923| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1923| 
        MOVL      XAR0,#16              ; [CPU_] |1923| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1923| 
        ASR64     ACC:P,16              ; [CPU_] |1923| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1923| 
        MOVL      XAR0,#16              ; [CPU_] |1923| 
        ASR64     ACC:P,16              ; [CPU_] |1923| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1923| 
        MOVL      XAR0,#16              ; [CPU_] |1923| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1923| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1923| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1923| 
        MOVL      *-SP[32],P            ; [CPU_] |1923| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1923| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1917| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1917| 
        MOVB      ACC,#0                ; [CPU_] |1917| 
        SUBB      ACC,#1                ; [CPU_] |1917| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1917| 
        B         $C$L570,NEQ           ; [CPU_] |1917| 
        ; branchcc occurs ; [] |1917| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1925,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1925| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1925| 
        ; call occurs [#_scia_puts] ; [] |1925| 
	.dwpsn	file "../Source/prod.c",line 1926,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1926| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1926| 
        MOV       *-SP[2],#0            ; [CPU_] |1926| 
        MOV       *-SP[1],#0            ; [CPU_] |1926| 
        MOVL      P,*-SP[32]            ; [CPU_] |1926| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1926| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1926| 
        ; call occurs [#LL$$DIV] ; [] |1926| 
        ADDB      XAR1,#24              ; [CPU_] |1926| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1926| 
	.dwpsn	file "../Source/prod.c",line 1907,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1907| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1907,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1907| 
        B         $C$L568,GT            ; [CPU_] |1907| 
        ; branchcc occurs ; [] |1907| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1930,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1930| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1930| 
        ; branch occurs ; [] |1930| 
$C$L573:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1931,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1931| 
        ADDL      XAR1,ACC              ; [CPU_] |1931| 
        MOVB      XAR0,#48              ; [CPU_] |1931| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1931| 
        MOVB      XAR0,#50              ; [CPU_] |1931| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1931| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1931| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1931| 
        ; call occurs [#FS$$SUB] ; [] |1931| 
        MOVL      XAR0,#88              ; [CPU_] |1931| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1931| 
        MOVB      XAR0,#74              ; [CPU_] |1931| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1931| 
        MOVB      XAR0,#72              ; [CPU_] |1931| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1931| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1931| 
        ; call occurs [#L$$TOFS] ; [] |1931| 
        MOVL      XAR0,#88              ; [CPU_] |1931| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1931| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1931| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1931| 
        ; call occurs [#FS$$DIV] ; [] |1931| 
        MOVL      XAR0,#42              ; [CPU_] |1931| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1931| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1931| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1931| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1931| 
        ; call occurs [#FS$$DIV] ; [] |1931| 
        MOVB      XAR0,#96              ; [CPU_] |1931| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1931| 
	.dwpsn	file "../Source/prod.c",line 1935,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1935| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1935| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1935| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1935| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1935| 
        ; call occurs [#FS$$MPY] ; [] |1935| 
        MOVL      XAR0,#88              ; [CPU_] |1935| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1935| 
        MOVB      XAR0,#72              ; [CPU_] |1935| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1935| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1935| 
        ; call occurs [#L$$TOFS] ; [] |1935| 
        MOVL      XAR0,#88              ; [CPU_] |1935| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1935| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1935| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1935| 
        ; call occurs [#FS$$MPY] ; [] |1935| 
        MOVB      XAR0,#48              ; [CPU_] |1935| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1935| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1935| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1935| 
        ; call occurs [#FS$$SUB] ; [] |1935| 
        MOVB      XAR0,#118             ; [CPU_] |1935| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1935| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1930,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1930| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1939,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1939| 
        CMP       AL,*-SP[48]           ; [CPU_] |1939| 
        B         $C$L573,GT            ; [CPU_] |1939| 
        ; branchcc occurs ; [] |1939| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 2010,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2010| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |2010| 
        MOV       AL,#1024              ; [CPU_] |2010| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2010| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2010| 
        ; call occurs [#_scia_getparam] ; [] |2010| 
	.dwpsn	file "../Source/prod.c",line 2013,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |2013| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2013| 
        ; call occurs [#_scia_puts] ; [] |2013| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2015,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2015| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |2015| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 2016,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2016| 
        B         $C$L578,LEQ           ; [CPU_] |2016| 
        ; branchcc occurs ; [] |2016| 
	.dwpsn	file "../Source/prod.c",line 2018,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2018| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2018| 
        ; call occurs [#_shunt_switch] ; [] |2018| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 2020,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2020| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_delay_us")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2020| 
        ; call occurs [#_delay_us] ; [] |2020| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2020| 
	.dwpsn	file "../Source/prod.c",line 2019,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2019| 
        MOVZ      AR0,AR6               ; [CPU_] |2019| 
        MOV       *-SP[47],AR6          ; [CPU_] |2019| 
        CMP       AR0,#-1               ; [CPU_] |2019| 
        B         $C$L577,NEQ           ; [CPU_] |2019| 
        ; branchcc occurs ; [] |2019| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2023,column 7,is_stmt,isa 0
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2023| 
        ; call occurs [#_maf_rst] ; [] |2023| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2025,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2025| 
        SPM       #0                    ; [CPU_] 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_delay_us")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2025| 
        ; call occurs [#_delay_us] ; [] |2025| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 2028,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |2028| 
	.dwpsn	file "../Source/prod.c",line 2029,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2029| 
	.dwpsn	file "../Source/prod.c",line 2028,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2028| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2028| 
	.dwpsn	file "../Source/prod.c",line 2030,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2030| 
	.dwpsn	file "../Source/prod.c",line 2029,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2029| 
	.dwpsn	file "../Source/prod.c",line 2030,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2030| 
        MOVB      ACC,#0                ; [CPU_] |2030| 
        SUBB      ACC,#1                ; [CPU_] |2030| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2030| 
        B         $C$L580,EQ            ; [CPU_] |2030| 
        ; branchcc occurs ; [] |2030| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 2031,column 14,is_stmt,isa 0
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2031| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2031| 
        CMPB      AL,#0                 ; [CPU_] |2031| 
        B         $C$L586,EQ            ; [CPU_] |2031| 
        ; branchcc occurs ; [] |2031| 
	.dwpsn	file "../Source/prod.c",line 2035,column 7,is_stmt,isa 0
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2035| 
        ; call occurs [#_ad7738_getraw] ; [] |2035| 
	.dwpsn	file "../Source/prod.c",line 2036,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2036| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2036| 
        ADDL      XAR4,ACC              ; [CPU_] |2036| 
        MOVL      XAR0,#14              ; [CPU_] |2036| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2036| 
        MOVL      XAR0,#14              ; [CPU_] |2036| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2036| 
        ASR64     ACC:P,16              ; [CPU_] |2036| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2036| 
        MOVL      XAR0,#14              ; [CPU_] |2036| 
        ASR64     ACC:P,16              ; [CPU_] |2036| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2036| 
        MOVL      XAR0,#14              ; [CPU_] |2036| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2036| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2036| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2036| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2036| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2036| 
	.dwpsn	file "../Source/prod.c",line 2030,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2030| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2030| 
        MOVB      ACC,#0                ; [CPU_] |2030| 
        SUBB      ACC,#1                ; [CPU_] |2030| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2030| 
        B         $C$L579,NEQ           ; [CPU_] |2030| 
        ; branchcc occurs ; [] |2030| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2038,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2038| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2038| 
        MOV       *-SP[2],#0            ; [CPU_] |2038| 
        MOV       *-SP[1],#0            ; [CPU_] |2038| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2038| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2038| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2038| 
        ; call occurs [#LL$$DIV] ; [] |2038| 
	.dwpsn	file "../Source/prod.c",line 2041,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2041| 
        MOVB      XAR0,#46              ; [CPU_] |2041| 
	.dwpsn	file "../Source/prod.c",line 2038,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2038| 
	.dwpsn	file "../Source/prod.c",line 2040,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2040| 
	.dwpsn	file "../Source/prod.c",line 2038,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2038| 
	.dwpsn	file "../Source/prod.c",line 2041,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2041| 
        CMPB      AL,#2                 ; [CPU_] |2041| 
        B         $C$L583,LEQ           ; [CPU_] |2041| 
        ; branchcc occurs ; [] |2041| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2042,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2042| 
        ; branch occurs ; [] |2042| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2043,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2043| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2042,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2042| 
        B         $C$L583,HIS           ; [CPU_] |2042| 
        ; branchcc occurs ; [] |2042| 
        MOVB      AL,#1                 ; [CPU_] |2042| 
        ADD       AL,AR4                ; [CPU_] |2042| 
        MOVZ      AR5,AL                ; [CPU_] |2042| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2042| 
        ADDL      ACC,XAR1              ; [CPU_] |2042| 
        MOVL      XAR6,ACC              ; [CPU_] |2042| 
        MOVB      XAR0,#72              ; [CPU_] |2042| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2042| 
        MOVL      XAR0,#12              ; [CPU_] |2042| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2042| 
        MOVL      XAR0,#12              ; [CPU_] |2042| 
        ASR64     ACC:P,16              ; [CPU_] |2042| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2042| 
        MOVL      XAR0,#12              ; [CPU_] |2042| 
        ASR64     ACC:P,16              ; [CPU_] |2042| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2042| 
        MOVL      *-SP[4],P             ; [CPU_] |2042| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2042| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2042| 
        MOVL      P,*-SP[32]            ; [CPU_] |2042| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1273, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2042| 
        ; call occurs [#LL$$CMP] ; [] |2042| 
        CMPB      AL,#0                 ; [CPU_] |2042| 
        B         $C$L581,GT            ; [CPU_] |2042| 
        ; branchcc occurs ; [] |2042| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2046| 
        ADDL      ACC,XAR1              ; [CPU_] |2046| 
        MOVL      XAR4,ACC              ; [CPU_] |2046| 
        MOVL      XAR0,#88              ; [CPU_] |2046| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2046| 
        MOVB      XAR0,#96              ; [CPU_] |2046| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2046| 
        MOVL      XAR0,#42              ; [CPU_] |2046| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2046| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2046| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2046| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2046| 
        ; call occurs [#FS$$MPY] ; [] |2046| 
        MOVL      XAR0,#36              ; [CPU_] |2046| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2046| 
        MOVL      P,*XAR3++             ; [CPU_] |2046| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2046| 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2046| 
        ; call occurs [#LL$$TOFS] ; [] |2046| 
        MOVL      XAR0,#36              ; [CPU_] |2046| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2046| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2046| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2046| 
        ; call occurs [#FS$$MPY] ; [] |2046| 
        MOVL      XAR0,#88              ; [CPU_] |2046| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2046| 
        MOVB      XAR1,#118             ; [CPU_] |2046| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2046| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2046| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2046| 
        ; call occurs [#FS$$ADD] ; [] |2046| 
        MOVL      XAR0,#38              ; [CPU_] |2046| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2046| 
        MOVL      XAR0,#38              ; [CPU_] |2046| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2015,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |2015| 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2046| 
        MOV       AL,*-SP[48]           ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2015,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2015| 
        B         $C$L576,LT            ; [CPU_] |2015| 
        ; branchcc occurs ; [] |2015| 
	.dwpsn	file "../Source/prod.c",line 2050,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2050| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2050| 
        ; call occurs [#_shunt_switch] ; [] |2050| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2052,column 5,is_stmt,isa 0
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2052| 
        ; call occurs [#_maf_rst] ; [] |2052| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2055,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2055| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2055| 
        ; call occurs [#_scia_puts] ; [] |2055| 
	.dwpsn	file "../Source/prod.c",line 2057,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2057| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2057| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2057| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2057| 
        ; call occurs [#FS$$SUB] ; [] |2057| 
        MOVL      XAR0,#36              ; [CPU_] |2057| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2057| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2057| 
        MOVB      XAR0,#140             ; [CPU_] |2057| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2057| 
	.dwpsn	file "../Source/prod.c",line 2060,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2060| 
        MOV       AL,#0                 ; [CPU_] |2060| 
        MOV       AH,#0                 ; [CPU_] |2060| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2060| 
	.dwpsn	file "../Source/prod.c",line 2061,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2061| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2061| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2061| 
	.dwpsn	file "../Source/prod.c",line 2062,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2062| 
        MOV       AL,#0                 ; [CPU_] |2062| 
        MOV       AH,#0                 ; [CPU_] |2062| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2062| 
	.dwpsn	file "../Source/prod.c",line 2063,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2063| 
        MOV       AL,*-SP[58]           ; [CPU_] |2063| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2063| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2066,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2066| 
        MOVB      AL,#152               ; [CPU_] |2066| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2066| 
        MOV       T,*-SP[57]            ; [CPU_] |2066| 
        MOVL      XAR7,XAR4             ; [CPU_] |2066| 
        MPYU      ACC,T,AL              ; [CPU_] |2066| 
        ADDL      ACC,XAR6              ; [CPU_] |2066| 
        ADDB      ACC,#82               ; [CPU_] |2066| 
        MOVL      XAR5,ACC              ; [CPU_] |2066| 
        MOVL      XAR0,#42              ; [CPU_] |2066| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2066| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2066| 
        MOV       AL,*-SP[57]           ; [CPU_] |2066| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2069,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2069| 
	.dwpsn	file "../Source/prod.c",line 2071,column 5,is_stmt,isa 0
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2071| 
        ; call occurs [#_ad7738_setcal] ; [] |2071| 
        MOVL      XAR0,#78              ; [CPU_] |2071| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2071| 
	.dwpsn	file "../Source/prod.c",line 2072,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2072| 
        MOVL      XAR1,ACC              ; [CPU_] |2072| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2072| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2072| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2072| 
	.dwpsn	file "../Source/prod.c",line 2073,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2073| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2073| 
        ; call occurs [#_ad7738_resetvall] ; [] |2073| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2076,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2076| 
        MOV       AL,*-SP[60]           ; [CPU_] |2076| 
        MOVL      XAR0,#44              ; [CPU_] |2076| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2076| 
        MOV       *-SP[3],AL            ; [CPU_] |2076| 
        MOV       AL,*-SP[59]           ; [CPU_] |2076| 
        MOV       *-SP[4],AL            ; [CPU_] |2076| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2076| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2076| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_sprintf")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2076| 
        ; call occurs [#_sprintf] ; [] |2076| 
        MOVL      XAR4,XAR1             ; [CPU_] |2076| 
	.dwpsn	file "../Source/prod.c",line 2078,column 5,is_stmt,isa 0
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2078| 
        ; call occurs [#_scia_puts] ; [] |2078| 
        MOV       AL,*-SP[57]           ; [CPU_] |2078| 
	.dwpsn	file "../Source/prod.c",line 2079,column 5,is_stmt,isa 0
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2079| 
        ; call occurs [#_print_sensor] ; [] |2079| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2082,column 5,is_stmt,isa 0
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2082| 
        ; call occurs [#_lcd_clear] ; [] |2082| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2083,column 5,is_stmt,isa 0
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_update_units")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2083| 
        ; call occurs [#_update_units] ; [] |2083| 
	.dwpsn	file "../Source/prod.c",line 2084,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2084| 
        ; branch occurs ; [] |2084| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 2032,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2032| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_delay_us")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2032| 
        ; call occurs [#_delay_us] ; [] |2032| 
	.dwpsn	file "../Source/prod.c",line 2031,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |2031| 
        ; branch occurs ; [] |2031| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1876,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1876| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1876| 
        ; call occurs [#_scia_puts] ; [] |1876| 
	.dwpsn	file "../Source/prod.c",line 1868,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1868| 
        ; branch occurs ; [] |1868| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1806,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1806| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1806| 
        ; call occurs [#_scia_puts] ; [] |1806| 
	.dwpsn	file "../Source/prod.c",line 1800,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1800| 
        ; branch occurs ; [] |1800| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1721,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1721| 
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1721| 
        ; call occurs [#_scia_puts] ; [] |1721| 
	.dwpsn	file "../Source/prod.c",line 1711,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1711| 
        ; branch occurs ; [] |1711| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1704,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1704| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1704| 
        ; call occurs [#_scia_puts] ; [] |1704| 
	.dwpsn	file "../Source/prod.c",line 1696,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1696| 
        ; branch occurs ; [] |1696| 
$C$L591:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1418,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1418| 
        B         $C$L625,LO            ; [CPU_] |1418| 
        ; branchcc occurs ; [] |1418| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1422,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1422| 
        CMPB      AL,#67                ; [CPU_] |1422| 
        B         $C$L592,EQ            ; [CPU_] |1422| 
        ; branchcc occurs ; [] |1422| 
        CMPB      AL,#68                ; [CPU_] |1422| 
        B         $C$L625,NEQ           ; [CPU_] |1422| 
        ; branchcc occurs ; [] |1422| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1427,column 5,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_atoi")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1427| 
        ; call occurs [#_atoi] ; [] |1427| 
        MOV       *-SP[58],AL           ; [CPU_] |1427| 
	.dwpsn	file "../Source/prod.c",line 1429,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1429| 
        CMPB      AL,#4                 ; [CPU_] |1429| 
        B         $C$L625,HIS           ; [CPU_] |1429| 
        ; branchcc occurs ; [] |1429| 
	.dwpsn	file "../Source/prod.c",line 1434,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1434| 
        MOV       AH,#0                 ; [CPU_] |1434| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1434| 
	.dwpsn	file "../Source/prod.c",line 1435,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1435| 
        MOV       AH,#0                 ; [CPU_] |1435| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1435| 
        MOV       AL,*-SP[59]           ; [CPU_] |1435| 
	.dwpsn	file "../Source/prod.c",line 1436,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1436| 
        B         $C$L596,LOS           ; [CPU_] |1436| 
        ; branchcc occurs ; [] |1436| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1436,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1436| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1437,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1437| 
        CMPB      AL,#88                ; [CPU_] |1437| 
        B         $C$L594,NEQ           ; [CPU_] |1437| 
        ; branchcc occurs ; [] |1437| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_strtod")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1439,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1439| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1442,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1442| 
        B         $C$L595,NEQ           ; [CPU_] |1442| 
        ; branchcc occurs ; [] |1442| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_strtod")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1444,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1444| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1436,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1436| 
        MOV       AL,*-SP[59]           ; [CPU_] |1436| 
        ADDB      XAR1,#1               ; [CPU_] |1436| 
        CMP       AL,*-SP[47]           ; [CPU_] |1436| 
        B         $C$L593,HI            ; [CPU_] |1436| 
        ; branchcc occurs ; [] |1436| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1449,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1449| 
	.dwpsn	file "../Source/prod.c",line 1432,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1432| 
	.dwpsn	file "../Source/prod.c",line 1449,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1449| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1449| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1449| 
        ; call occurs [#FS$$CMP] ; [] |1449| 
        CMPB      AL,#0                 ; [CPU_] |1449| 
        B         $C$L625,EQ            ; [CPU_] |1449| 
        ; branchcc occurs ; [] |1449| 
	.dwpsn	file "../Source/prod.c",line 1453,column 5,is_stmt,isa 0
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1453| 
        ; call occurs [#_lcd_clear] ; [] |1453| 
	.dwpsn	file "../Source/prod.c",line 1454,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1454| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1454| 
        MOVL      XAR0,#44              ; [CPU_] |1454| 
        ADD       AL,*-SP[58]           ; [CPU_] |1454| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1454| 
        MOVZ      AR1,AL                ; [CPU_] |1454| 
        MOV       *-SP[59],AL           ; [CPU_] |1454| 
        MOV       *-SP[3],AL            ; [CPU_] |1454| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1454| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_sprintf")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1454| 
        ; call occurs [#_sprintf] ; [] |1454| 
        MOVL      XAR0,#44              ; [CPU_] |1454| 
	.dwpsn	file "../Source/prod.c",line 1455,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1454,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1454| 
	.dwpsn	file "../Source/prod.c",line 1455,column 5,is_stmt,isa 0
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1455| 
        ; call occurs [#_lcd_puts] ; [] |1455| 
	.dwpsn	file "../Source/prod.c",line 1456,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1456| 
        MOVL      XAR0,#44              ; [CPU_] |1456| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1456| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1456| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1456| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1456| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_sprintf")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1456| 
        ; call occurs [#_sprintf] ; [] |1456| 
        MOVL      XAR0,#44              ; [CPU_] |1456| 
	.dwpsn	file "../Source/prod.c",line 1457,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1457| 
	.dwpsn	file "../Source/prod.c",line 1456,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1456| 
	.dwpsn	file "../Source/prod.c",line 1457,column 5,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1457| 
        ; call occurs [#_lcd_puts] ; [] |1457| 
	.dwpsn	file "../Source/prod.c",line 1458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1458| 
        MOVL      XAR0,#44              ; [CPU_] |1458| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1458| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1458| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1458| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1458| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_sprintf")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1458| 
        ; call occurs [#_sprintf] ; [] |1458| 
        MOVL      XAR0,#44              ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1459,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1459| 
	.dwpsn	file "../Source/prod.c",line 1458,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1459,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1459| 
        ; call occurs [#_lcd_puts] ; [] |1459| 
	.dwpsn	file "../Source/prod.c",line 1461,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1461| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1461| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1461| 
        MOVL      XAR0,#38              ; [CPU_] |1461| 
        ADDB      ACC,#1                ; [CPU_] |1461| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1461| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1461| 
        CMPB      AL,#67                ; [CPU_] |1461| 
        B         $C$L619,EQ            ; [CPU_] |1461| 
        ; branchcc occurs ; [] |1461| 
        CMPB      AL,#68                ; [CPU_] |1461| 
        B         $C$L625,NEQ           ; [CPU_] |1461| 
        ; branchcc occurs ; [] |1461| 
	.dwpsn	file "../Source/prod.c",line 1514,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1514| 
        MOV       AH,#16672             ; [CPU_] |1514| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1514| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1514| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1514| 
        ; call occurs [#FS$$CMP] ; [] |1514| 
        CMPB      AL,#0                 ; [CPU_] |1514| 
        B         $C$L618,GT            ; [CPU_] |1514| 
        ; branchcc occurs ; [] |1514| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1514| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1514| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1514| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1514| 
        ; call occurs [#FS$$CMP] ; [] |1514| 
        CMPB      AL,#0                 ; [CPU_] |1514| 
        B         $C$L618,LT            ; [CPU_] |1514| 
        ; branchcc occurs ; [] |1514| 
        MOV       AL,#0                 ; [CPU_] |1514| 
        MOV       AH,#16672             ; [CPU_] |1514| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1514| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1514| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1514| 
        ; call occurs [#FS$$CMP] ; [] |1514| 
        CMPB      AL,#0                 ; [CPU_] |1514| 
        B         $C$L618,GT            ; [CPU_] |1514| 
        ; branchcc occurs ; [] |1514| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1514| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1514| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1514| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1514| 
        ; call occurs [#FS$$CMP] ; [] |1514| 
        CMPB      AL,#0                 ; [CPU_] |1514| 
        B         $C$L618,LT            ; [CPU_] |1514| 
        ; branchcc occurs ; [] |1514| 
	.dwpsn	file "../Source/prod.c",line 1522,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1522| 
        MOVB      AL,#0                 ; [CPU_] |1522| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1522| 
        ; call occurs [#_lcd_puts] ; [] |1522| 
	.dwpsn	file "../Source/prod.c",line 1524,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1524| 
        MOVL      XAR0,#44              ; [CPU_] |1524| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1524| 
        MOV       *-SP[3],AR1           ; [CPU_] |1524| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1524| 
        MOVL      XAR4,XAR1             ; [CPU_] |1524| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_sprintf")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1524| 
        ; call occurs [#_sprintf] ; [] |1524| 
        MOVL      XAR4,XAR1             ; [CPU_] |1524| 
	.dwpsn	file "../Source/prod.c",line 1527,column 6,is_stmt,isa 0
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1527| 
        ; call occurs [#_scia_puts] ; [] |1527| 
	.dwpsn	file "../Source/prod.c",line 1528,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1528| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1528| 
        ; call occurs [#_scia_puts] ; [] |1528| 
	.dwpsn	file "../Source/prod.c",line 1529,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1529| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1529| 
        ; call occurs [#_dac_setmode] ; [] |1529| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1532,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1532| 
	.dwpsn	file "../Source/prod.c",line 1533,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1533| 
        MOV       AH,#0                 ; [CPU_] |1533| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1533| 
        MOVL      ACC,XAR1              ; [CPU_] |1533| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1533| 
        ; call occurs [#FS$$CMP] ; [] |1533| 
        CMPB      AL,#0                 ; [CPU_] |1533| 
        B         $C$L598,GEQ           ; [CPU_] |1533| 
        ; branchcc occurs ; [] |1533| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1533| 
        MOVL      XAR0,#88              ; [CPU_] |1533| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1533| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1533| 
        B         $C$L599,UNC           ; [CPU_] |1533| 
        ; branch occurs ; [] |1533| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1533| 
        MOVL      XAR0,#88              ; [CPU_] |1533| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1533| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1533| 
$C$L599:    
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1533| 
        ; call occurs [#FS$$MPY] ; [] |1533| 
        MOVL      XAR0,#88              ; [CPU_] |1533| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1533| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1533| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1533| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1533| 
        ; call occurs [#FS$$ADD] ; [] |1533| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1533| 
        ; call occurs [#FS$$TOLL] ; [] |1533| 
	.dwpsn	file "../Source/prod.c",line 1539,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1539| 
	.dwpsn	file "../Source/prod.c",line 1533,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1533| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1539,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1539| 
        CMP64     ACC:P                 ; [CPU_] |1539| 
        B         $C$L601,LEQ           ; [CPU_] |1539| 
        ; branchcc occurs ; [] |1539| 
	.dwpsn	file "../Source/prod.c",line 1541,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1541| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1541| 
        MOV       *-SP[2],#0            ; [CPU_] |1541| 
        MOV       *-SP[1],#0            ; [CPU_] |1541| 
        MOVL      P,*-SP[32]            ; [CPU_] |1541| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1541| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1319, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1541| 
        ; call occurs [#LL$$CMP] ; [] |1541| 
        CMPB      AL,#0                 ; [CPU_] |1541| 
        B         $C$L600,GEQ           ; [CPU_] |1541| 
        ; branchcc occurs ; [] |1541| 
	.dwpsn	file "../Source/prod.c",line 1544,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1544| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1544| 
        MOV       AL,*-SP[32]           ; [CPU_] |1544| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1544| 
        B         $C$L602,UNC           ; [CPU_] |1544| 
        ; branch occurs ; [] |1544| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1542,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1542| 
	.dwpsn	file "../Source/prod.c",line 1543,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1543| 
        ; branch occurs ; [] |1543| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1540,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1540| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1547,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1547| 
        MOVL      XAR0,#44              ; [CPU_] |1547| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1547| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1547| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1547| 
        MOVL      XAR4,XAR1             ; [CPU_] |1547| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_sprintf")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1547| 
        ; call occurs [#_sprintf] ; [] |1547| 
        MOVL      XAR4,XAR1             ; [CPU_] |1547| 
	.dwpsn	file "../Source/prod.c",line 1548,column 7,is_stmt,isa 0
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1548| 
        ; call occurs [#_scia_puts] ; [] |1548| 
	.dwpsn	file "../Source/prod.c",line 1549,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1549| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1549| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1552,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1552| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1552| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1552| 
        ; call occurs [#_mcbsp_xmit] ; [] |1552| 
	.dwpsn	file "../Source/prod.c",line 1553,column 8,is_stmt,isa 0
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1553| 
        ; call occurs [#_latch_dac] ; [] |1553| 
	.dwpsn	file "../Source/prod.c",line 1556,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1556| 
        MOVL      XAR4,XAR1             ; [CPU_] |1556| 
        MOVL      XAR5,XAR1             ; [CPU_] |1556| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1556| 
        ; call occurs [#_scia_getparam] ; [] |1556| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1558,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1558| 
        CMPB      AL,#45                ; [CPU_] |1558| 
        B         $C$L604,EQ            ; [CPU_] |1558| 
        ; branchcc occurs ; [] |1558| 
        CMPB      AL,#83                ; [CPU_] |1558| 
        B         $C$L609,EQ            ; [CPU_] |1558| 
        ; branchcc occurs ; [] |1558| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1565,column 8,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_atoi")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1565| 
        ; call occurs [#_atoi] ; [] |1565| 
        CMPB      AL,#0                 ; [CPU_] |1565| 
	.dwpsn	file "../Source/prod.c",line 1567,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1567| 
	.dwpsn	file "../Source/prod.c",line 1570,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1570| 
        CMPB      AH,#43                ; [CPU_] |1570| 
        B         $C$L605,EQ            ; [CPU_] |1570| 
        ; branchcc occurs ; [] |1570| 
	.dwpsn	file "../Source/prod.c",line 1577,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1577| 
        B         $C$L608,NEQ           ; [CPU_] |1577| 
        ; branchcc occurs ; [] |1577| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1579,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1579| 
        B         $C$L606,HI            ; [CPU_] |1579| 
        ; branchcc occurs ; [] |1579| 
	.dwpsn	file "../Source/prod.c",line 1580,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1580| 
	.dwpsn	file "../Source/prod.c",line 1581,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1581| 
        ; branch occurs ; [] |1581| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1572,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1572| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1572| 
        MOV       AH,#65535             ; [CPU_] |1572| 
        SUB       AH,AL                 ; [CPU_] |1572| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1572| 
        B         $C$L607,HIS           ; [CPU_] |1572| 
        ; branchcc occurs ; [] |1572| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1575,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1575| 
        B         $C$L608,UNC           ; [CPU_] |1575| 
        ; branch occurs ; [] |1575| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1573,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1573| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1551,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1551| 
        B         $C$L603,NEQ           ; [CPU_] |1551| 
        ; branchcc occurs ; [] |1551| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1587,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1587| 
        MOVL      XAR0,#86              ; [CPU_] |1587| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1587| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1587| 
        MOVL      XAR0,#86              ; [CPU_] |1587| 
        MOV       AL,*XAR7              ; [CPU_] |1587| 
        MOV       *-SP[3],AL            ; [CPU_] |1587| 
        ADDB      XAR7,#1               ; [CPU_] |1587| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1587| 
        MOVL      XAR0,#44              ; [CPU_] |1587| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1587| 
        MOVL      XAR4,XAR1             ; [CPU_] |1587| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_sprintf")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1587| 
        ; call occurs [#_sprintf] ; [] |1587| 
        MOVL      XAR4,XAR1             ; [CPU_] |1587| 
	.dwpsn	file "../Source/prod.c",line 1588,column 7,is_stmt,isa 0
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1588| 
        ; call occurs [#_scia_puts] ; [] |1588| 
	.dwpsn	file "../Source/prod.c",line 1531,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1531| 
	.dwpsn	file "../Source/prod.c",line 1588,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1588| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1588| 
	.dwpsn	file "../Source/prod.c",line 1531,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1531| 
        SUBB      XAR6,#1               ; [CPU_U] |1531| 
        ADDB      ACC,#2                ; [CPU_] |1531| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1531| 
        MOVZ      AR0,AR6               ; [CPU_] |1531| 
        MOV       *-SP[47],AR6          ; [CPU_] |1531| 
        CMP       AR0,#-1               ; [CPU_] |1531| 
        B         $C$L597,NEQ           ; [CPU_] |1531| 
        ; branchcc occurs ; [] |1531| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1591,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1591| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1591| 
        ; call occurs [#FS$$TOU] ; [] |1591| 
        MOV       *-SP[33],AL           ; [CPU_] |1591| 
	.dwpsn	file "../Source/prod.c",line 1593,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1593| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1593| 
        ; call occurs [#_scia_puts] ; [] |1593| 
	.dwpsn	file "../Source/prod.c",line 1594,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1594| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1594| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1594| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1594| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1597,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1597| 
        MOV       AH,*-SP[48]           ; [CPU_] |1597| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1597| 
        ; call occurs [#_mcbsp_xmit] ; [] |1597| 
	.dwpsn	file "../Source/prod.c",line 1598,column 7,is_stmt,isa 0
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1598| 
        ; call occurs [#_latch_dac] ; [] |1598| 
        MOVL      XAR0,#86              ; [CPU_] |1598| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1598| 
	.dwpsn	file "../Source/prod.c",line 1601,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1601| 
        MOVL      XAR4,XAR5             ; [CPU_] |1601| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1601| 
        ; call occurs [#_scia_getparam] ; [] |1601| 
	.dwpsn	file "../Source/prod.c",line 1606,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1606| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1606| 
        CMPB      AL,#83                ; [CPU_] |1606| 
        B         $C$L615,EQ            ; [CPU_] |1606| 
        ; branchcc occurs ; [] |1606| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1609,column 7,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_atoi")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1609| 
        ; call occurs [#_atoi] ; [] |1609| 
        CMPB      AL,#0                 ; [CPU_] |1609| 
	.dwpsn	file "../Source/prod.c",line 1614,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1614| 
	.dwpsn	file "../Source/prod.c",line 1611,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1611| 
	.dwpsn	file "../Source/prod.c",line 1614,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1614| 
        CMPB      AH,#43                ; [CPU_] |1614| 
        B         $C$L611,EQ            ; [CPU_] |1614| 
        ; branchcc occurs ; [] |1614| 
	.dwpsn	file "../Source/prod.c",line 1621,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1621| 
        B         $C$L614,NEQ           ; [CPU_] |1621| 
        ; branchcc occurs ; [] |1621| 
	.dwpsn	file "../Source/prod.c",line 1623,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1623| 
        B         $C$L612,HI            ; [CPU_] |1623| 
        ; branchcc occurs ; [] |1623| 
	.dwpsn	file "../Source/prod.c",line 1624,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1624| 
	.dwpsn	file "../Source/prod.c",line 1625,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1625| 
        ; branch occurs ; [] |1625| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1616,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1616| 
        SUB       AH,AL                 ; [CPU_] |1616| 
        CMP       AH,*-SP[33]           ; [CPU_] |1616| 
        B         $C$L613,HIS           ; [CPU_] |1616| 
        ; branchcc occurs ; [] |1616| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1619,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1619| 
        B         $C$L614,UNC           ; [CPU_] |1619| 
        ; branch occurs ; [] |1619| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1617,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1617| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1596,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1596| 
        B         $C$L610,NEQ           ; [CPU_] |1596| 
        ; branchcc occurs ; [] |1596| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1631,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1631| 
        MOV       AL,*-SP[33]           ; [CPU_] |1631| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1631| 
        MOV       *-SP[3],AL            ; [CPU_] |1631| 
        MOVL      XAR4,XAR1             ; [CPU_] |1631| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_sprintf")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1631| 
        ; call occurs [#_sprintf] ; [] |1631| 
        MOVL      XAR4,XAR1             ; [CPU_] |1631| 
	.dwpsn	file "../Source/prod.c",line 1632,column 6,is_stmt,isa 0
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1632| 
        ; call occurs [#_scia_puts] ; [] |1632| 
	.dwpsn	file "../Source/prod.c",line 1635,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1635| 
        MOV       AH,#0                 ; [CPU_] |1635| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1635| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1635| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1635| 
        ; call occurs [#FS$$CMP] ; [] |1635| 
        CMPB      AL,#0                 ; [CPU_] |1635| 
        B         $C$L616,LT            ; [CPU_] |1635| 
        ; branchcc occurs ; [] |1635| 
	.dwpsn	file "../Source/prod.c",line 1641,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1641| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1641| 
        ; call occurs [#U$$TOFS] ; [] |1641| 
        MOVL      XAR1,ACC              ; [CPU_] |1641| 
        MOV       AL,*-SP[35]           ; [CPU_] |1641| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1641| 
        ; call occurs [#U$$TOFS] ; [] |1641| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1641| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1641| 
        ; call occurs [#FS$$SUB] ; [] |1641| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1641| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1641| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1641| 
        ; call occurs [#FS$$DIV] ; [] |1641| 
        MOVL      XAR0,#88              ; [CPU_] |1641| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1641| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1641| 
	.dwpsn	file "../Source/prod.c",line 1643,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1643| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1643| 
        ; call occurs [#U$$TOFS] ; [] |1643| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1643| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1643| 
        ; call occurs [#FS$$SUB] ; [] |1643| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1643| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1643| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1643| 
        ; call occurs [#FS$$DIV] ; [] |1643| 
        MOVL      XAR0,#88              ; [CPU_] |1643| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1643| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1643| 
        B         $C$L617,UNC           ; [CPU_] |1643| 
        ; branch occurs ; [] |1643| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1636,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1636| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1636| 
        ; call occurs [#U$$TOFS] ; [] |1636| 
        MOVL      XAR1,ACC              ; [CPU_] |1636| 
        MOV       AL,*-SP[35]           ; [CPU_] |1636| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1636| 
        ; call occurs [#U$$TOFS] ; [] |1636| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1636| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1636| 
        ; call occurs [#FS$$SUB] ; [] |1636| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1636| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1636| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1636| 
        ; call occurs [#FS$$DIV] ; [] |1636| 
        MOVL      XAR0,#88              ; [CPU_] |1636| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1636| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1636| 
	.dwpsn	file "../Source/prod.c",line 1638,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1638| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1638| 
        ; call occurs [#U$$TOFS] ; [] |1638| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1638| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1638| 
        ; call occurs [#FS$$SUB] ; [] |1638| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1638| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1638| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1638| 
        ; call occurs [#FS$$DIV] ; [] |1638| 
        MOVL      XAR0,#88              ; [CPU_] |1638| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1638| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1638| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1646,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1646| 
	.dwpsn	file "../Source/prod.c",line 1648,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1648| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1648| 
        ; call occurs [#_dac_setmode] ; [] |1648| 
	.dwpsn	file "../Source/prod.c",line 1650,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1650| 
        MOVL      XAR0,#88              ; [CPU_] |1650| 
        MOV       AL,*-SP[59]           ; [CPU_] |1650| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1650| 
        MOV       *-SP[3],AL            ; [CPU_] |1650| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1650| 
        MOVL      XAR0,#44              ; [CPU_] |1650| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1650| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1650| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1650| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1650| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1650| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1650| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1650| 
        MOVL      XAR4,XAR1             ; [CPU_] |1650| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_sprintf")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1650| 
        ; call occurs [#_sprintf] ; [] |1650| 
        MOVL      XAR4,XAR1             ; [CPU_] |1650| 
	.dwpsn	file "../Source/prod.c",line 1654,column 6,is_stmt,isa 0
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1654| 
        ; call occurs [#_scia_puts] ; [] |1654| 
	.dwpsn	file "../Source/prod.c",line 1656,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1656| 
	.dwpsn	file "../Source/prod.c",line 1657,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1657| 
        ; branch occurs ; [] |1657| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1516,column 7,is_stmt,isa 0
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1516| 
        ; call occurs [#_lcd_clear] ; [] |1516| 
	.dwpsn	file "../Source/prod.c",line 1517,column 7,is_stmt,isa 0
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_update_units")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1517| 
        ; call occurs [#_update_units] ; [] |1517| 
	.dwpsn	file "../Source/prod.c",line 1518,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1518| 
        ; branch occurs ; [] |1518| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1466,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1466| 
        MOVB      AL,#0                 ; [CPU_] |1466| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1466| 
        ; call occurs [#_lcd_puts] ; [] |1466| 
	.dwpsn	file "../Source/prod.c",line 1468,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1468| 
        MOVL      XAR0,#44              ; [CPU_] |1468| 
        MOV       AL,*-SP[59]           ; [CPU_] |1468| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1468| 
        MOV       *-SP[3],AL            ; [CPU_] |1468| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1468| 
        MOVL      XAR4,XAR1             ; [CPU_] |1468| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_sprintf")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1468| 
        ; call occurs [#_sprintf] ; [] |1468| 
        MOVL      XAR4,XAR1             ; [CPU_] |1468| 
	.dwpsn	file "../Source/prod.c",line 1471,column 6,is_stmt,isa 0
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1471| 
        ; call occurs [#_scia_puts] ; [] |1471| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1484,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1484| 
        MOVL      XAR0,#42              ; [CPU_] |1484| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1484| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1484| 
        MOVL      XAR0,#44              ; [CPU_] |1484| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1484| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1484| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1484| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_sprintf")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1484| 
        ; call occurs [#_sprintf] ; [] |1484| 
        MOVL      XAR0,#44              ; [CPU_] |1484| 
	.dwpsn	file "../Source/prod.c",line 1487,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1487| 
	.dwpsn	file "../Source/prod.c",line 1484,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1484| 
	.dwpsn	file "../Source/prod.c",line 1487,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1487| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1487| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1487| 
        ; call occurs [#_scia_getparam] ; [] |1487| 
	.dwpsn	file "../Source/prod.c",line 1488,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1488| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1488| 
        ; call occurs [#_scia_puts] ; [] |1488| 
	.dwpsn	file "../Source/prod.c",line 1491,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1491| 
	.dwpsn	file "../Source/prod.c",line 1490,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1490| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1490| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1490| 
	.dwpsn	file "../Source/prod.c",line 1492,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1492| 
	.dwpsn	file "../Source/prod.c",line 1491,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1491| 
	.dwpsn	file "../Source/prod.c",line 1492,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1492| 
        MOVB      ACC,#0                ; [CPU_] |1492| 
        SUBB      ACC,#1                ; [CPU_] |1492| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1492| 
        B         $C$L622,EQ            ; [CPU_] |1492| 
        ; branchcc occurs ; [] |1492| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1493,column 15,is_stmt,isa 0
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1493| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1493| 
        CMPB      AL,#0                 ; [CPU_] |1493| 
        B         $C$L624,EQ            ; [CPU_] |1493| 
        ; branchcc occurs ; [] |1493| 
	.dwpsn	file "../Source/prod.c",line 1496,column 8,is_stmt,isa 0
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1496| 
        ; call occurs [#_ad7738_getraw] ; [] |1496| 
	.dwpsn	file "../Source/prod.c",line 1497,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1497| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1497| 
        ADDL      XAR4,ACC              ; [CPU_] |1497| 
        MOVL      XAR0,#10              ; [CPU_] |1497| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1497| 
        MOVL      XAR0,#10              ; [CPU_] |1497| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1497| 
        ASR64     ACC:P,16              ; [CPU_] |1497| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1497| 
        MOVL      XAR0,#10              ; [CPU_] |1497| 
        ASR64     ACC:P,16              ; [CPU_] |1497| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1497| 
        MOVL      XAR0,#10              ; [CPU_] |1497| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1497| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1497| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1497| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1497| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1497| 
	.dwpsn	file "../Source/prod.c",line 1492,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1492| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1492| 
        MOVB      ACC,#0                ; [CPU_] |1492| 
        SUBB      ACC,#1                ; [CPU_] |1492| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1492| 
        B         $C$L621,NEQ           ; [CPU_] |1492| 
        ; branchcc occurs ; [] |1492| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1500,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1500| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1500| 
        ; call occurs [#_scia_puts] ; [] |1500| 
	.dwpsn	file "../Source/prod.c",line 1483,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1483| 
        MOVL      XAR0,#42              ; [CPU_] |1483| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1483| 
        MOVL      XAR0,#42              ; [CPU_] |1483| 
        SUBB      XAR6,#1               ; [CPU_U] |1483| 
        ADDB      ACC,#2                ; [CPU_] |1483| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1483| 
        MOVZ      AR0,AR6               ; [CPU_] |1483| 
        MOV       *-SP[47],AR6          ; [CPU_] |1483| 
        ADDB      XAR1,#4               ; [CPU_] |1483| 
        CMP       AR0,#-1               ; [CPU_] |1483| 
        B         $C$L620,NEQ           ; [CPU_] |1483| 
        ; branchcc occurs ; [] |1483| 
	.dwpsn	file "../Source/prod.c",line 1503,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1503| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1503| 
        MOVB      AL,#10                ; [CPU_] |1503| 
        MOV       T,*-SP[58]            ; [CPU_] |1503| 
        MPYU      ACC,T,AL              ; [CPU_] |1503| 
        ADDL      ACC,XAR6              ; [CPU_] |1503| 
        MOVL      XAR1,ACC              ; [CPU_] |1503| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1503| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1503| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1503| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1503| 
        ; call occurs [#FS$$SUB] ; [] |1503| 
        MOVL      XAR6,ACC              ; [CPU_] |1503| 
        MOV       AL,#16384             ; [CPU_] |1503| 
        MOV       AH,#17948             ; [CPU_] |1503| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1503| 
        MOVL      ACC,XAR6              ; [CPU_] |1503| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1503| 
        ; call occurs [#FS$$MPY] ; [] |1503| 
        MOVL      XAR0,#88              ; [CPU_] |1503| 
        MOVL      P,*-SP[28]            ; [CPU_] |1503| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1503| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1503| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1503| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1503| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1503| 
        ; call occurs [#LL$$TOFS] ; [] |1503| 
        MOVL      XAR0,#88              ; [CPU_] |1503| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1503| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1503| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1503| 
        ; call occurs [#FS$$DIV] ; [] |1503| 
        MOVB      XAR0,#44              ; [CPU_] |1503| 
	.dwpsn	file "../Source/prod.c",line 1506,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1506| 
	.dwpsn	file "../Source/prod.c",line 1503,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1503| 
	.dwpsn	file "../Source/prod.c",line 1506,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1506| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1506| 
        MOV       AL,*-SP[59]           ; [CPU_] |1506| 
        MOV       *-SP[3],AL            ; [CPU_] |1506| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1506| 
        MOVL      XAR0,#44              ; [CPU_] |1506| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1506| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1506| 
        MOVL      XAR4,XAR1             ; [CPU_] |1506| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_sprintf")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1506| 
        ; call occurs [#_sprintf] ; [] |1506| 
        MOVL      XAR4,XAR1             ; [CPU_] |1506| 
	.dwpsn	file "../Source/prod.c",line 1508,column 6,is_stmt,isa 0
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1508| 
        ; call occurs [#_scia_puts] ; [] |1508| 
	.dwpsn	file "../Source/prod.c",line 1509,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1509| 
$C$L623:    
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1509| 
        ; call occurs [#_scia_puts] ; [] |1509| 
	.dwpsn	file "../Source/prod.c",line 1664,column 5,is_stmt,isa 0
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1664| 
        ; call occurs [#_lcd_clear] ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1665,column 5,is_stmt,isa 0
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_update_units")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1665| 
        ; call occurs [#_update_units] ; [] |1665| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1668,column 5,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1668| 
        ; call occurs [#_ad7738_setcal] ; [] |1668| 
        MOVL      XAR0,#78              ; [CPU_] |1668| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1668| 
	.dwpsn	file "../Source/prod.c",line 1669,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1669| 
        MOVL      XAR1,ACC              ; [CPU_] |1669| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1669| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1669| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1669| 
	.dwpsn	file "../Source/prod.c",line 1670,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1670| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1670| 
        ; call occurs [#_ad7738_resetvall] ; [] |1670| 
	.dwpsn	file "../Source/prod.c",line 1672,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1672| 
        ; branch occurs ; [] |1672| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1494,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1494| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_delay_us")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1494| 
        ; call occurs [#_delay_us] ; [] |1494| 
	.dwpsn	file "../Source/prod.c",line 1493,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1493| 
        ; branch occurs ; [] |1493| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3623,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3623| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3623| 
        ; call occurs [#_scia_puts] ; [] |3623| 
        MOVL      XAR0,#86              ; [CPU_] |3623| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3623| 
	.dwpsn	file "../Source/prod.c",line 3624,column 5,is_stmt,isa 0
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3624| 
        ; call occurs [#_scia_puts] ; [] |3624| 
	.dwpsn	file "../Source/prod.c",line 3625,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3625| 
	.dwpsn	file "../Source/prod.c",line 3626,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3626| 
        ; branch occurs ; [] |3626| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3584,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3584| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3584| 
        ; call occurs [#_scia_puts] ; [] |3584| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3588,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3588| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_delay_us")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3588| 
        ; call occurs [#_delay_us] ; [] |3588| 
	.dwpsn	file "../Source/prod.c",line 3586,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3586| 
        ; branchcc occurs ; [] |3586| 
	.dwpsn	file "../Source/prod.c",line 3591,column 5,is_stmt,isa 0
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_reboot")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3591| 
        ; call occurs [#_reboot] ; [] |3591| 
	.dwpsn	file "../Source/prod.c",line 3592,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3592| 
        ; branch occurs ; [] |3592| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3568,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3568| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3568| 
        ; call occurs [#_scia_puts] ; [] |3568| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3572,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3572| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_delay_us")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3572| 
        ; call occurs [#_delay_us] ; [] |3572| 
	.dwpsn	file "../Source/prod.c",line 3570,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3570| 
        ; branchcc occurs ; [] |3570| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3576,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3576| 
	.dwpsn	file "../Source/prod.c",line 3575,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3575| 
	.dwpsn	file "../Source/prod.c",line 3576,column 5,is_stmt,isa 0
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3576| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3576| 
	.dwpsn	file "../Source/prod.c",line 3580,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3580| 
        ; branch occurs ; [] |3580| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3479,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3479| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3481,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3481| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3481| 
        ; call occurs [#_scia_puts] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3482,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3482| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3482| 
        ; call occurs [#_scia_puts] ; [] |3482| 
	.dwpsn	file "../Source/prod.c",line 3484,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3484| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3484| 
        ; call occurs [#_scia_puts] ; [] |3484| 
	.dwpsn	file "../Source/prod.c",line 3485,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3485| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3485| 
        ; call occurs [#_scia_puts] ; [] |3485| 
	.dwpsn	file "../Source/prod.c",line 3486,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3486| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3486| 
        ; call occurs [#_scia_puts] ; [] |3486| 
	.dwpsn	file "../Source/prod.c",line 3487,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3487| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3487| 
        ; call occurs [#_scia_puts] ; [] |3487| 
	.dwpsn	file "../Source/prod.c",line 3489,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3489| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3489| 
        ; call occurs [#_scia_puts] ; [] |3489| 
	.dwpsn	file "../Source/prod.c",line 3490,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3490| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3490| 
        ; call occurs [#_scia_puts] ; [] |3490| 
	.dwpsn	file "../Source/prod.c",line 3491,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3491| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3491| 
        ; call occurs [#_scia_puts] ; [] |3491| 
	.dwpsn	file "../Source/prod.c",line 3492,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3492| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3492| 
        ; call occurs [#_scia_puts] ; [] |3492| 
	.dwpsn	file "../Source/prod.c",line 3493,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3493| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3493| 
        ; call occurs [#_scia_puts] ; [] |3493| 
	.dwpsn	file "../Source/prod.c",line 3494,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3494| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3495,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3495| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3495| 
        ; call occurs [#_scia_puts] ; [] |3495| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3497| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3497| 
        ; call occurs [#_scia_puts] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3499| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3499| 
        ; call occurs [#_scia_puts] ; [] |3499| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3501| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3501| 
        ; call occurs [#_scia_puts] ; [] |3501| 
	.dwpsn	file "../Source/prod.c",line 3503,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3503| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3503| 
        ; call occurs [#_scia_puts] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3504,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3504| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3504| 
        ; call occurs [#_scia_puts] ; [] |3504| 
	.dwpsn	file "../Source/prod.c",line 3505,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3505| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3505| 
        ; call occurs [#_scia_puts] ; [] |3505| 
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3506| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3506| 
        ; call occurs [#_scia_puts] ; [] |3506| 
	.dwpsn	file "../Source/prod.c",line 3508,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3508| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3508| 
        ; call occurs [#_scia_puts] ; [] |3508| 
	.dwpsn	file "../Source/prod.c",line 3509,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3509| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3509| 
        ; call occurs [#_scia_puts] ; [] |3509| 
	.dwpsn	file "../Source/prod.c",line 3510,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3510| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3510| 
        ; call occurs [#_scia_puts] ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3511,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3511| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3511| 
        ; call occurs [#_scia_puts] ; [] |3511| 
	.dwpsn	file "../Source/prod.c",line 3512,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3512| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3512| 
        ; call occurs [#_scia_puts] ; [] |3512| 
	.dwpsn	file "../Source/prod.c",line 3514,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3514| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3514| 
        ; call occurs [#_scia_puts] ; [] |3514| 
	.dwpsn	file "../Source/prod.c",line 3515,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3515| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3515| 
        ; call occurs [#_scia_puts] ; [] |3515| 
	.dwpsn	file "../Source/prod.c",line 3517,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3517| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3517| 
        ; call occurs [#_scia_puts] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3519,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3519| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3519| 
        ; call occurs [#_scia_puts] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3520,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3520| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3520| 
        ; call occurs [#_scia_puts] ; [] |3520| 
	.dwpsn	file "../Source/prod.c",line 3522,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3522| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3522| 
        ; call occurs [#_scia_puts] ; [] |3522| 
	.dwpsn	file "../Source/prod.c",line 3524,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3524| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3524| 
        ; call occurs [#_scia_puts] ; [] |3524| 
	.dwpsn	file "../Source/prod.c",line 3526,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3526| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3526| 
        ; call occurs [#_scia_puts] ; [] |3526| 
	.dwpsn	file "../Source/prod.c",line 3528,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3528| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3528| 
        ; call occurs [#_scia_puts] ; [] |3528| 
	.dwpsn	file "../Source/prod.c",line 3529,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3529| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3529| 
        ; call occurs [#_scia_puts] ; [] |3529| 
	.dwpsn	file "../Source/prod.c",line 3531,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3531| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3531| 
        ; call occurs [#_scia_puts] ; [] |3531| 
	.dwpsn	file "../Source/prod.c",line 3532,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3532| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3532| 
        ; call occurs [#_scia_puts] ; [] |3532| 
	.dwpsn	file "../Source/prod.c",line 3533,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3533| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3533| 
        ; call occurs [#_scia_puts] ; [] |3533| 
	.dwpsn	file "../Source/prod.c",line 3534,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3534| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3534| 
        ; call occurs [#_scia_puts] ; [] |3534| 
	.dwpsn	file "../Source/prod.c",line 3535,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3535| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3535| 
        ; call occurs [#_scia_puts] ; [] |3535| 
	.dwpsn	file "../Source/prod.c",line 3536,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3536| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3536| 
        ; call occurs [#_scia_puts] ; [] |3536| 
	.dwpsn	file "../Source/prod.c",line 3537,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3537| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3537| 
        ; call occurs [#_scia_puts] ; [] |3537| 
	.dwpsn	file "../Source/prod.c",line 3538,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3538| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3538| 
        ; call occurs [#_scia_puts] ; [] |3538| 
	.dwpsn	file "../Source/prod.c",line 3549,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3549| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3549| 
        ; call occurs [#_scia_puts] ; [] |3549| 
	.dwpsn	file "../Source/prod.c",line 3551,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3551| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3551| 
        ; call occurs [#_scia_puts] ; [] |3551| 
	.dwpsn	file "../Source/prod.c",line 3553,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3553| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3553| 
        ; call occurs [#_scia_puts] ; [] |3553| 
	.dwpsn	file "../Source/prod.c",line 3555,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3555| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3555| 
        ; call occurs [#_scia_puts] ; [] |3555| 
	.dwpsn	file "../Source/prod.c",line 3557,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3557| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3557| 
        ; call occurs [#_scia_puts] ; [] |3557| 
	.dwpsn	file "../Source/prod.c",line 3562,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3562| 
$C$L631:    
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3562| 
        ; call occurs [#_scia_puts] ; [] |3562| 
$C$L632:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3630,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3630| 
        ; branchcc occurs ; [] |3630| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3631,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3631| 
        SPM       #0                    ; [CPU_] 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3631| 
        ; call occurs [#_scia_puts] ; [] |3631| 
$C$L634:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 643,column 3,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_SPICANRoutine")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_SPICANRoutine       ; [CPU_] |643| 
        ; call occurs [#_SPICANRoutine] ; [] |643| 
	.dwpsn	file "../Source/prod.c",line 673,column 3,is_stmt,isa 0
        MOVB      AL,#45                ; [CPU_] |673| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |673| 
        ; call occurs [#_SPICANRead] ; [] |673| 
        MOV       *-SP[40],AL           ; [CPU_] |673| 
	.dwpsn	file "../Source/prod.c",line 676,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |676| 
        TBIT      AL,#4                 ; [CPU_] |676| 
        B         $C$L635,TC            ; [CPU_] |676| 
        ; branchcc occurs ; [] |676| 
	.dwpsn	file "../Source/prod.c",line 678,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |678| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |678| 
        ; call occurs [#_ad7738_resettare] ; [] |678| 
	.dwpsn	file "../Source/prod.c",line 679,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |679| 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |679| 
        ; call occurs [#_ad7738_resetpeak] ; [] |679| 
	.dwpsn	file "../Source/prod.c",line 680,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |680| 
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |680| 
        ; call occurs [#_ad7738_resetvall] ; [] |680| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 758,column 3,is_stmt,isa 0
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |758| 
        ; call occurs [#_ad7738_monrdy] ; [] |758| 
        CMPB      AL,#0                 ; [CPU_] |758| 
        B         $C$L661,EQ            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
	.dwpsn	file "../Source/prod.c",line 760,column 4,is_stmt,isa 0
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |760| 
        ; call occurs [#_ad7738_monclr] ; [] |760| 
        MOVL      XAR0,#84              ; [CPU_] |760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |760| 
	.dwpsn	file "../Source/prod.c",line 763,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |763| 
        CMPB      AL,#3                 ; [CPU_] |763| 
        B         $C$L636,GT            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        CMPB      AL,#3                 ; [CPU_] |763| 
        B         $C$L642,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        CMPB      AL,#0                 ; [CPU_] |763| 
        B         $C$L646,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        CMPB      AL,#1                 ; [CPU_] |763| 
        B         $C$L645,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        CMPB      AL,#2                 ; [CPU_] |763| 
        B         $C$L644,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        B         $C$L658,UNC           ; [CPU_] |763| 
        ; branch occurs ; [] |763| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |763| 
        B         $C$L641,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        CMPB      AL,#5                 ; [CPU_] |763| 
        B         $C$L637,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
        CMPB      AL,#6                 ; [CPU_] |763| 
        B         $C$L658,NEQ           ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
	.dwpsn	file "../Source/prod.c",line 818,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |818| 
        MOVL      XAR0,#46              ; [CPU_] |818| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |818| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |818| 
	.dwpsn	file "../Source/prod.c",line 819,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |819| 
        ; branch occurs ; [] |819| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 813,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |813| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |813| 
        ; call occurs [#_ad7738_getlimitst] ; [] |813| 
	.dwpsn	file "../Source/prod.c",line 814,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |814| 
        B         $C$L639,NTC           ; [CPU_] |814| 
        ; branchcc occurs ; [] |814| 
        TBIT      AL,#0                 ; [CPU_] |814| 
        B         $C$L638,NTC           ; [CPU_] |814| 
        ; branchcc occurs ; [] |814| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |814| 
        B         $C$L640,UNC           ; [CPU_] |814| 
        ; branch occurs ; [] |814| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |814| 
        B         $C$L640,UNC           ; [CPU_] |814| 
        ; branch occurs ; [] |814| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |814| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |814| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |814| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |814| 
	.dwpsn	file "../Source/prod.c",line 816,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |816| 
        ; branch occurs ; [] |816| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 785,column 5,is_stmt,isa 0
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |785| 
        ; call occurs [#_ad7738_getmon] ; [] |785| 
        MOVL      XAR0,#84              ; [CPU_] |785| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |785| 
	.dwpsn	file "../Source/prod.c",line 787,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |787| 
        B         $C$L643,UNC           ; [CPU_] |787| 
        ; branch occurs ; [] |787| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 780,column 5,is_stmt,isa 0
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |780| 
        ; call occurs [#_ad7738_getmon] ; [] |780| 
        MOVL      XAR0,#84              ; [CPU_] |780| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |780| 
	.dwpsn	file "../Source/prod.c",line 781,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |781| 
$C$L643:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |781| 
        ADDL      XAR4,ACC              ; [CPU_] |781| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |781| 
	.dwpsn	file "../Source/prod.c",line 782,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |782| 
        ; branch occurs ; [] |782| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 775,column 5,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |775| 
        ; call occurs [#_ad7738_getvall] ; [] |775| 
	.dwpsn	file "../Source/prod.c",line 777,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |777| 
        ; branch occurs ; [] |777| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 770,column 5,is_stmt,isa 0
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |770| 
        ; call occurs [#_ad7738_getpeak] ; [] |770| 
	.dwpsn	file "../Source/prod.c",line 772,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |772| 
        ; branch occurs ; [] |772| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 765,column 5,is_stmt,isa 0
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |765| 
        ; call occurs [#_ad7738_getmon] ; [] |765| 
$C$L647:    
        MOVL      XAR0,#84              ; [CPU_] |765| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |765| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 766,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |766| 
        ADDL      XAR4,ACC              ; [CPU_] |766| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |766| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |766| 
	.dwpsn	file "../Source/prod.c",line 790,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |790| 
        CMPB      AL,#3                 ; [CPU_] |790| 
        B         $C$L649,GT            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#3                 ; [CPU_] |790| 
        B         $C$L651,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#0                 ; [CPU_] |790| 
        B         $C$L654,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#1                 ; [CPU_] |790| 
        B         $C$L653,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#2                 ; [CPU_] |790| 
        B         $C$L652,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        B         $C$L658,UNC           ; [CPU_] |790| 
        ; branch occurs ; [] |790| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |790| 
        B         $C$L650,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#5                 ; [CPU_] |790| 
        B         $C$L658,NEQ           ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
	.dwpsn	file "../Source/prod.c",line 807,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |807| 
	.dwpsn	file "../Source/prod.c",line 808,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |808| 
        ; branch occurs ; [] |808| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 804,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |804| 
	.dwpsn	file "../Source/prod.c",line 805,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |805| 
        ; branch occurs ; [] |805| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 801,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |801| 
	.dwpsn	file "../Source/prod.c",line 802,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |802| 
        ; branch occurs ; [] |802| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 798,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |798| 
	.dwpsn	file "../Source/prod.c",line 799,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |799| 
        ; branch occurs ; [] |799| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 795,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |795| 
	.dwpsn	file "../Source/prod.c",line 796,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |796| 
        ; branch occurs ; [] |796| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 792,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |792| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |792| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |792| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |792| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |792| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |792| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_sprintf")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |792| 
        ; call occurs [#_sprintf] ; [] |792| 
$C$L658:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 823,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |823| 
        MPYB      ACC,T,#20             ; [CPU_] |823| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |823| 
        ADDB      AL,#7                 ; [CPU_] |823| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |823| 
        ; call occurs [#_lcd_puts] ; [] |823| 
	.dwpsn	file "../Source/prod.c",line 826,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |826| 
	.dwpsn	file "../Source/prod.c",line 823,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |823| 
	.dwpsn	file "../Source/prod.c",line 826,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |826| 
        B         $C$L659,HIS           ; [CPU_] |826| 
        ; branchcc occurs ; [] |826| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |826| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 827,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |827| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 836,column 3,is_stmt,isa 0
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |836| 
        ; call occurs [#_ad7738_tempstart] ; [] |836| 
        CMPB      AL,#0                 ; [CPU_] |836| 
        B         $C$L662,NEQ           ; [CPU_] |836| 
        ; branchcc occurs ; [] |836| 
	.dwpsn	file "../Source/prod.c",line 841,column 8,is_stmt,isa 0
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |841| 
        ; call occurs [#_ad7738_tempread] ; [] |841| 
        CMPB      AL,#0                 ; [CPU_] |841| 
        B         $C$L663,EQ            ; [CPU_] |841| 
        ; branchcc occurs ; [] |841| 
	.dwpsn	file "../Source/prod.c",line 842,column 4,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |842| 
        ; call occurs [#_ds1820read] ; [] |842| 
        MOVL      XAR0,#46              ; [CPU_] |842| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |842| 
	.dwpsn	file "../Source/prod.c",line 843,column 4,is_stmt,isa 0
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |843| 
        ; call occurs [#_ad7738_settemp] ; [] |843| 
        B         $C$L663,UNC           ; [CPU_] |843| 
        ; branch occurs ; [] |843| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 837,column 4,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |837| 
        ; call occurs [#_ds1820start] ; [] |837| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 850,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |850| 
        MOVB      XAR0,#36              ; [CPU_] |850| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |850| 
        B         $C$L668,EQ            ; [CPU_] |850| 
        ; branchcc occurs ; [] |850| 
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |850| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |850| 
        CMPB      AL,#0                 ; [CPU_] |850| 
        B         $C$L668,EQ            ; [CPU_] |850| 
        ; branchcc occurs ; [] |850| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 851,column 4,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |851| 
        ; call occurs [#_tagdetect] ; [] |851| 
        CMPB      AL,#0                 ; [CPU_] |851| 
        B         $C$L664,NEQ           ; [CPU_] |851| 
        ; branchcc occurs ; [] |851| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 874,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |874| 
        MOV       *+XAR4[0],#0          ; [CPU_] |874| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |874| 
	.dwpsn	file "../Source/prod.c",line 876,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |876| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |876| 
        MOVL      XAR4,ACC              ; [CPU_] |876| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |876| 
        B         $C$L666,EQ            ; [CPU_] |876| 
        ; branchcc occurs ; [] |876| 
	.dwpsn	file "../Source/prod.c",line 877,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |877| 
	.dwpsn	file "../Source/prod.c",line 878,column 6,is_stmt,isa 0
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |878| 
        ; call occurs [#_lcd_clear] ; [] |878| 
	.dwpsn	file "../Source/prod.c",line 879,column 6,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_update_units")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |879| 
        ; call occurs [#_update_units] ; [] |879| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 880,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |880| 
        B         $C$L666,UNC           ; [CPU_] |880| 
        ; branch occurs ; [] |880| 
$C$L664:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 853,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |853| 
        B         $C$L665,NEQ           ; [CPU_] |853| 
        ; branchcc occurs ; [] |853| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 856,column 6,is_stmt,isa 0
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_matchTag")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |856| 
        ; call occurs [#_matchTag] ; [] |856| 
        MOVL      XAR0,#80              ; [CPU_] |856| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |856| 
        MOVL      XAR0,#9               ; [CPU_] |856| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |856| 
	.dwpsn	file "../Source/prod.c",line 857,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |857| 
        B         $C$L665,EQ            ; [CPU_] |857| 
        ; branchcc occurs ; [] |857| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 860,column 7,is_stmt,isa 0
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |860| 
        ; call occurs [#_maf_rst] ; [] |860| 
	.dwpsn	file "../Source/prod.c",line 861,column 7,is_stmt,isa 0
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |861| 
        ; call occurs [#_ad7738_setcal] ; [] |861| 
        MOVL      XAR0,#78              ; [CPU_] |861| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |861| 
	.dwpsn	file "../Source/prod.c",line 862,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |862| 
        MOVL      XAR1,ACC              ; [CPU_] |862| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |862| 
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |862| 
        ; call occurs [#_ad7738_resetpeak] ; [] |862| 
	.dwpsn	file "../Source/prod.c",line 863,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |863| 
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |863| 
        ; call occurs [#_ad7738_resetvall] ; [] |863| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 866,column 7,is_stmt,isa 0
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |866| 
        ; call occurs [#_lcd_clear] ; [] |866| 
	.dwpsn	file "../Source/prod.c",line 867,column 7,is_stmt,isa 0
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_update_units")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |867| 
        ; call occurs [#_update_units] ; [] |867| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 868,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |868| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 871,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |871| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 885,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |885| 
        ADDB      AL,#1                 ; [CPU_] |885| 
        MOV       *+FP[AR0],AL          ; [CPU_] |885| 
        CMPB      AL,#4                 ; [CPU_] |885| 
        B         $C$L667,HIS           ; [CPU_] |885| 
        ; branchcc occurs ; [] |885| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |885| 
        ADDB      ACC,#1                ; [CPU_] |885| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |885| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 886,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |886| 
        MOV       *+FP[AR0],#0          ; [CPU_] |886| 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 894,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |894| 
        CMPB      AL,#1                 ; [CPU_] |894| 
        B         $C$L686,NEQ           ; [CPU_] |894| 
        ; branchcc occurs ; [] |894| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |894| 
        ; branchcc occurs ; [] |894| 
	.dwpsn	file "../Source/prod.c",line 897,column 4,is_stmt,isa 0
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |897| 
        ; call occurs [#_prod_getavail] ; [] |897| 
        MOVL      XAR6,ACC              ; [CPU_] |897| 
        MOV       T,*-SP[51]            ; [CPU_] |897| 
        MPY       P,T,*-SP[52]          ; [CPU_] |897| 
        MOVU      ACC,PL                ; [CPU_] |897| 
        CMPL      ACC,XAR6              ; [CPU_] |897| 
        B         $C$L671,LOS           ; [CPU_] |897| 
        ; branchcc occurs ; [] |897| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |897| 
        ; branchcc occurs ; [] |897| 
	.dwpsn	file "../Source/prod.c",line 967,column 11,is_stmt,isa 0
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |967| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |967| 
        CMPB      AL,#0                 ; [CPU_] |967| 
        B         $C$L669,NEQ           ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 975,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |975| 
        B         $C$L686,EQ            ; [CPU_] |975| 
        ; branchcc occurs ; [] |975| 
	.dwpsn	file "../Source/prod.c",line 976,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |976| 
	.dwpsn	file "../Source/prod.c",line 979,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |979| 
	.dwpsn	file "../Source/prod.c",line 981,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |981| 
        MOVB      XAR0,#36              ; [CPU_] |981| 
	.dwpsn	file "../Source/prod.c",line 979,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |979| 
	.dwpsn	file "../Source/prod.c",line 980,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |980| 
	.dwpsn	file "../Source/prod.c",line 981,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |981| 
        MOVL      XAR0,#80              ; [CPU_] |981| 
        MOV       *+XAR4[2],AL          ; [CPU_] |981| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |981| 
	.dwpsn	file "../Source/prod.c",line 985,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |985| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 983,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |983| 
	.dwpsn	file "../Source/prod.c",line 985,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |985| 
        ; branch occurs ; [] |985| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 969,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |969| 
        MOV       *+XAR4[0],#0          ; [CPU_] |969| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 971,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |971| 
	.dwpsn	file "../Source/prod.c",line 970,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |970| 
	.dwpsn	file "../Source/prod.c",line 971,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |971| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 972,column 6,is_stmt,isa 0
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |972| 
        ; call occurs [#_ad7738_getlimitst] ; [] |972| 
        MOV       *XAR1++,AL            ; [CPU_] |972| 
	.dwpsn	file "../Source/prod.c",line 971,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |971| 
	.dwpsn	file "../Source/prod.c",line 972,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |972| 
	.dwpsn	file "../Source/prod.c",line 971,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |971| 
        B         $C$L670,LT            ; [CPU_] |971| 
        ; branchcc occurs ; [] |971| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 974,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |974| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 975,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |975| 
        ; branch occurs ; [] |975| 
$C$L671:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 904,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |904| 
        MOVL      XAR0,#88              ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 902,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |902| 
	.dwpsn	file "../Source/prod.c",line 904,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |904| 
        MOV       *+XAR4[0],#0          ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 910,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |910| 
	.dwpsn	file "../Source/prod.c",line 905,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |905| 
        MOV       AL,*-SP[52]           ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 906,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |906| 
        MOV       AL,*-SP[59]           ; [CPU_] |906| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |907| 
        MOV       *+XAR4[3],AL          ; [CPU_] |907| 
        MOV       AL,*-SP[59]           ; [CPU_] |907| 
	.dwpsn	file "../Source/prod.c",line 908,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |908| 
        MOV       *+XAR4[4],AL          ; [CPU_] |908| 
        MOV       AL,*-SP[50]           ; [CPU_] |908| 
	.dwpsn	file "../Source/prod.c",line 909,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |909| 
        MOV       AH,*-SP[49]           ; [CPU_] |909| 
	.dwpsn	file "../Source/prod.c",line 910,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |910| 
        MOV       *+XAR4[6],AL          ; [CPU_] |910| 
        MOV       AL,AH                 ; [CPU_] |910| 
        ADDB      AL,#1                 ; [CPU_] |910| 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |901| 
	.dwpsn	file "../Source/prod.c",line 910,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |910| 
	.dwpsn	file "../Source/prod.c",line 912,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |912| 
        ; branch occurs ; [] |912| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 913,column 6,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |913| 
        ; call occurs [#_prod_getnext] ; [] |913| 
	.dwpsn	file "../Source/prod.c",line 915,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |915| 
        B         $C$L682,NEQ           ; [CPU_] |915| 
        ; branchcc occurs ; [] |915| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 917,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |917| 
	.dwpsn	file "../Source/prod.c",line 921,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |921| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 920,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |920| 
        MOV       *-SP[58],AL           ; [CPU_] |920| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 922,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |922| 
        B         $C$L675,EQ            ; [CPU_] |922| 
        ; branchcc occurs ; [] |922| 
	.dwpsn	file "../Source/prod.c",line 923,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |923| 
        MOVL      XAR0,#88              ; [CPU_] |923| 
        ADDL      ACC,XAR4              ; [CPU_] |923| 
        MOVL      XAR3,ACC              ; [CPU_] |923| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |923| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 926,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |926| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 924,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |924| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 925,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |925| 
        ANDB      AL,#0xff              ; [CPU_] |925| 
        MOV       *XAR5++,AL            ; [CPU_] |925| 
	.dwpsn	file "../Source/prod.c",line 926,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |926| 
        LSR       AL,8                  ; [CPU_] |926| 
        MOV       *XAR5++,AL            ; [CPU_] |926| 
	.dwpsn	file "../Source/prod.c",line 924,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR0--         ; [CPU_] |924| 
        ; branchcc occurs ; [] |924| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 921,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |921| 
        ADDB      XAR7,#1               ; [CPU_] |921| 
	.dwpsn	file "../Source/prod.c",line 930,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |930| 
        MOV       *-SP[58],AL           ; [CPU_] |930| 
	.dwpsn	file "../Source/prod.c",line 921,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR6--         ; [CPU_] |921| 
        ; branchcc occurs ; [] |921| 
	.dwpsn	file "../Source/prod.c",line 933,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |933| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 934,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |934| 
        B         $C$L678,EQ            ; [CPU_] |934| 
        ; branchcc occurs ; [] |934| 
	.dwpsn	file "../Source/prod.c",line 935,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |935| 
        MOVL      XAR0,#88              ; [CPU_] |935| 
        ADDL      ACC,XAR4              ; [CPU_] |935| 
        ADDB      ACC,#8                ; [CPU_] |935| 
        MOVL      XAR3,ACC              ; [CPU_] |935| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |935| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 938,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |938| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 936,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |936| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 937,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |937| 
        ANDB      AL,#0xff              ; [CPU_] |937| 
        MOV       *XAR5++,AL            ; [CPU_] |937| 
	.dwpsn	file "../Source/prod.c",line 938,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |938| 
        LSR       AL,8                  ; [CPU_] |938| 
        MOV       *XAR5++,AL            ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 936,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR0--         ; [CPU_] |936| 
        ; branchcc occurs ; [] |936| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 933,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |933| 
        ADDB      XAR7,#1               ; [CPU_] |933| 
	.dwpsn	file "../Source/prod.c",line 942,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |942| 
        MOV       *-SP[58],AL           ; [CPU_] |942| 
	.dwpsn	file "../Source/prod.c",line 933,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR6--         ; [CPU_] |933| 
        ; branchcc occurs ; [] |933| 
	.dwpsn	file "../Source/prod.c",line 918,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |918| 
	.dwpsn	file "../Source/prod.c",line 945,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |945| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 946,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |946| 
        B         $C$L681,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
	.dwpsn	file "../Source/prod.c",line 947,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |947| 
        MOVL      XAR0,#88              ; [CPU_] |947| 
        ADDL      ACC,XAR4              ; [CPU_] |947| 
        ADDB      ACC,#12               ; [CPU_] |947| 
        MOVL      XAR6,ACC              ; [CPU_] |947| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |947| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 950,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |950| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 948,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |948| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 949,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |949| 
        ANDB      AL,#0xff              ; [CPU_] |949| 
        MOV       *XAR5++,AL            ; [CPU_] |949| 
	.dwpsn	file "../Source/prod.c",line 950,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |950| 
        LSR       AL,8                  ; [CPU_] |950| 
        MOV       *XAR5++,AL            ; [CPU_] |950| 
	.dwpsn	file "../Source/prod.c",line 948,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR0--         ; [CPU_] |948| 
        ; branchcc occurs ; [] |948| 
$C$L681:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 945,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |945| 
	.dwpsn	file "../Source/prod.c",line 954,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |954| 
        MOV       *-SP[58],AL           ; [CPU_] |954| 
	.dwpsn	file "../Source/prod.c",line 945,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |945| 
        CMPB      AL,#2                 ; [CPU_] |945| 
        B         $C$L679,LT            ; [CPU_] |945| 
        ; branchcc occurs ; [] |945| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 912,column 12,is_stmt,isa 0
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |912| 
        ; call occurs [#_prod_getavail] ; [] |912| 
        TEST      ACC                   ; [CPU_] |912| 
        B         $C$L683,EQ            ; [CPU_] |912| 
        ; branchcc occurs ; [] |912| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |912| 
        B         $C$L672,HI            ; [CPU_] |912| 
        ; branchcc occurs ; [] |912| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 958,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |958| 
        MOV       AL,*-SP[47]           ; [CPU_] |958| 
        MOV       *+XAR4[2],AL          ; [CPU_] |958| 
        MOV       AL,*-SP[53]           ; [CPU_] |958| 
	.dwpsn	file "../Source/prod.c",line 960,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |960| 
        ; branchcc occurs ; [] |960| 
	.dwpsn	file "../Source/prod.c",line 961,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |961| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 964,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |964| 
$C$L685:    
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |964| 
        ; call occurs [#_scia_send_bin] ; [] |964| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 999,column 4,is_stmt,isa 0
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |999| 
        ; call occurs [#_scia_rx_getcmds] ; [] |999| 
        CMPB      AL,#0                 ; [CPU_] |999| 
        B         $C$L634,EQ            ; [CPU_] |999| 
        ; branchcc occurs ; [] |999| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1005,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1005| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |1005| 
        ; call occurs [#_scia_rx_getcmd] ; [] |1005| 
        MOV       *-SP[59],AL           ; [CPU_] |1005| 
        CMPB      AL,#0                 ; [CPU_] |1005| 
        B         $C$L634,EQ            ; [CPU_] |1005| 
        ; branchcc occurs ; [] |1005| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1022,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |1022| 
        B         $C$L322,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
	.dwpsn	file "../Source/prod.c",line 3635,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3635| 
        B         $C$L634,NEQ           ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3635| 
        B         $C$L634,LO            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3669,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3669| 
	.dwpsn	file "../Source/prod.c",line 3662,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3662| 
	.dwpsn	file "../Source/prod.c",line 3658,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3658| 
	.dwpsn	file "../Source/prod.c",line 3662,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3662| 
	.dwpsn	file "../Source/prod.c",line 3661,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3661| 
	.dwpsn	file "../Source/prod.c",line 3669,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3669| 
	.dwpsn	file "../Source/prod.c",line 3662,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3662| 
	.dwpsn	file "../Source/prod.c",line 3669,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3669| 
        CMPB      AL,#146               ; [CPU_] |3669| 
        B         $C$L694,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#146               ; [CPU_] |3669| 
        B         $C$L231,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#54                ; [CPU_] |3669| 
        B         $C$L690,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#54                ; [CPU_] |3669| 
        B         $C$L725,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#36                ; [CPU_] |3669| 
        B         $C$L688,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#36                ; [CPU_] |3669| 
        B         $C$L287,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#33                ; [CPU_] |3669| 
        B         $C$L687,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#33                ; [CPU_] |3669| 
        B         $C$L302,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#16                ; [CPU_] |3669| 
        B         $C$L741,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        MOV       AH,AL                 ; [CPU_] |3669| 
        ADDB      AH,#-17               ; [CPU_] |3669| 
        CMPB      AH,#1                 ; [CPU_] |3669| 
        B         $C$L740,LOS           ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#32                ; [CPU_] |3669| 
        B         $C$L736,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3669| 
        B         $C$L298,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#35                ; [CPU_] |3669| 
        B         $C$L295,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3669| 
        B         $C$L689,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#51                ; [CPU_] |3669| 
        B         $C$L730,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#48                ; [CPU_] |3669| 
        B         $C$L281,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#49                ; [CPU_] |3669| 
        B         $C$L256,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#50                ; [CPU_] |3669| 
        B         $C$L732,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3669| 
        B         $C$L728,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#53                ; [CPU_] |3669| 
        B         $C$L727,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3669| 
        B         $C$L692,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#71                ; [CPU_] |3669| 
        B         $C$L252,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#68                ; [CPU_] |3669| 
        B         $C$L691,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#65                ; [CPU_] |3669| 
        B         $C$L710,GEQ           ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#55                ; [CPU_] |3669| 
        B         $C$L718,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#56                ; [CPU_] |3669| 
        B         $C$L714,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#57                ; [CPU_] |3669| 
        B         $C$L712,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3669| 
        B         $C$L709,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#70                ; [CPU_] |3669| 
        B         $C$L702,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3669| 
        B         $C$L693,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#132               ; [CPU_] |3669| 
        B         $C$L310,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#72                ; [CPU_] |3669| 
        B         $C$L245,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#130               ; [CPU_] |3669| 
        B         $C$L240,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#131               ; [CPU_] |3669| 
        B         $C$L311,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3669| 
        B         $C$L236,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#145               ; [CPU_] |3669| 
        B         $C$L235,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3669| 
        B         $C$L698,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#169               ; [CPU_] |3669| 
        B         $C$L168,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#161               ; [CPU_] |3669| 
        B         $C$L696,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#161               ; [CPU_] |3669| 
        B         $C$L194,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#150               ; [CPU_] |3669| 
        B         $C$L695,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#150               ; [CPU_] |3669| 
        B         $C$L224,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#147               ; [CPU_] |3669| 
        B         $C$L230,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#148               ; [CPU_] |3669| 
        B         $C$L229,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#149               ; [CPU_] |3669| 
        B         $C$L228,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3669| 
        B         $C$L215,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#160               ; [CPU_] |3669| 
        B         $C$L210,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3669| 
        B         $C$L697,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#166               ; [CPU_] |3669| 
        B         $C$L182,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#162               ; [CPU_] |3669| 
        B         $C$L189,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#163               ; [CPU_] |3669| 
        B         $C$L185,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#165               ; [CPU_] |3669| 
        B         $C$L184,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3669| 
        B         $C$L179,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#168               ; [CPU_] |3669| 
        B         $C$L177,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3669| 
        B         $C$L700,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#195               ; [CPU_] |3669| 
        B         $C$L143,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#192               ; [CPU_] |3669| 
        B         $C$L699,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#192               ; [CPU_] |3669| 
        B         $C$L160,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#170               ; [CPU_] |3669| 
        B         $C$L164,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#186               ; [CPU_] |3669| 
        B         $C$L308,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#187               ; [CPU_] |3669| 
        B         $C$L307,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3669| 
        B         $C$L153,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#194               ; [CPU_] |3669| 
        B         $C$L150,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3669| 
        B         $C$L701,GT            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#210               ; [CPU_] |3669| 
        B         $C$L79,EQ             ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#196               ; [CPU_] |3669| 
        B         $C$L115,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#197               ; [CPU_] |3669| 
        B         $C$L91,EQ             ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#198               ; [CPU_] |3669| 
        B         $C$L80,EQ             ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3669| 
        B         $C$L306,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        CMPB      AL,#240               ; [CPU_] |3669| 
        B         $C$L305,EQ            ; [CPU_] |3669| 
        ; branchcc occurs ; [] |3669| 
        B         $C$L317,UNC           ; [CPU_] |3669| 
        ; branch occurs ; [] |3669| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4333,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4333| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4333| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4335,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4335| 
        ANDB      AL,#0xff              ; [CPU_] |4335| 
        MOV       *XAR1++,AL            ; [CPU_] |4335| 
	.dwpsn	file "../Source/prod.c",line 4336,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4336| 
        LSR       AL,8                  ; [CPU_] |4336| 
        MOV       *XAR1++,AL            ; [CPU_] |4336| 
	.dwpsn	file "../Source/prod.c",line 4334,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4334| 
        ; branchcc occurs ; [] |4334| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4336,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4336| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4342,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4342| 
        MOV       AH,#0                 ; [CPU_] |4342| 
        MOVL      XAR0,#88              ; [CPU_] |4342| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4342| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4342| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4342| 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4342| 
        ; call occurs [#FS$$CMP] ; [] |4342| 
        CMPB      AL,#0                 ; [CPU_] |4342| 
        B         $C$L705,NEQ           ; [CPU_] |4342| 
        ; branchcc occurs ; [] |4342| 
	.dwpsn	file "../Source/prod.c",line 4341,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4341| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4343,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4343| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4345,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4345| 
        MOV       AH,#0                 ; [CPU_] |4345| 
        MOVL      XAR0,#88              ; [CPU_] |4345| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4345| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4345| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4345| 
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4345| 
        ; call occurs [#FS$$CMP] ; [] |4345| 
        CMPB      AL,#0                 ; [CPU_] |4345| 
        B         $C$L707,EQ            ; [CPU_] |4345| 
        ; branchcc occurs ; [] |4345| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4346,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4346| 
        MOV       *-SP[59],AL           ; [CPU_] |4346| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4348,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4348| 
        MOVL      XAR0,#88              ; [CPU_] |4348| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4348| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4348| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4348| 
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4348| 
        ; call occurs [#FS$$CMP] ; [] |4348| 
        CMPB      AL,#0                 ; [CPU_] |4348| 
        B         $C$L708,EQ            ; [CPU_] |4348| 
        ; branchcc occurs ; [] |4348| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4349,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4349| 
        MOV       *-SP[59],AL           ; [CPU_] |4349| 
$C$L708:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4351,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4351| 
        MOV       *XAR1++,AL            ; [CPU_] |4351| 
	.dwpsn	file "../Source/prod.c",line 4340,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4351,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4351| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4351| 
	.dwpsn	file "../Source/prod.c",line 4340,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4340| 
        SUBB      XAR6,#1               ; [CPU_U] |4340| 
        ADDB      ACC,#10               ; [CPU_] |4340| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4340| 
        MOVZ      AR0,AR6               ; [CPU_] |4340| 
        MOV       *-SP[47],AR6          ; [CPU_] |4340| 
        CMP       AR0,#-1               ; [CPU_] |4340| 
        B         $C$L704,NEQ           ; [CPU_] |4340| 
        ; branchcc occurs ; [] |4340| 
        B         $C$L743,UNC           ; [CPU_] |4340| 
        ; branch occurs ; [] |4340| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4326| 
        MOV       AH,#16672             ; [CPU_] |4326| 
        MOVL      XAR0,#46              ; [CPU_] |4326| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4326| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4326| 
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4326| 
        ; call occurs [#FS$$MPY] ; [] |4326| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4326| 
        ; call occurs [#FS$$TOU] ; [] |4326| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4326| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4326| 
	.dwpsn	file "../Source/prod.c",line 4327,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4327,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4327| 
        MOV       *-SP[61],#4           ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4329| 
        ; branch occurs ; [] |4329| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4308,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4308| 
        MOV       AH,#16672             ; [CPU_] |4308| 
        MOVL      XAR0,#46              ; [CPU_] |4308| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4308| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4308| 
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4308| 
        ; call occurs [#FS$$MPY] ; [] |4308| 
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4308| 
        ; call occurs [#FS$$TOU] ; [] |4308| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4308| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4308| 
	.dwpsn	file "../Source/prod.c",line 4309,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4309| 
	.dwpsn	file "../Source/prod.c",line 4308,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4308| 
	.dwpsn	file "../Source/prod.c",line 4309,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4309| 
	.dwpsn	file "../Source/prod.c",line 4311,column 5,is_stmt,isa 0
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4311| 
        ; call occurs [#_ad7738_getmon] ; [] |4311| 
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4312| 
        MOV       AH,#18371             ; [CPU_] |4312| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4312| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4312| 
        ADDL      ACC,XAR4              ; [CPU_] |4312| 
        SUBB      ACC,#130              ; [CPU_] |4312| 
        MOVL      XAR4,ACC              ; [CPU_] |4312| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4312| 
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4312| 
        ; call occurs [#FS$$MPY] ; [] |4312| 
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4312| 
        ; call occurs [#FS$$TOL] ; [] |4312| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4313| 
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4312| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4313| 
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4313| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4316,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4316| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4315,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4315| 
        ANDB      AL,#0xff              ; [CPU_] |4315| 
        MOV       *XAR4++,AL            ; [CPU_] |4315| 
	.dwpsn	file "../Source/prod.c",line 4316,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4316| 
        LSR       AL,8                  ; [CPU_] |4316| 
        MOV       *XAR4++,AL            ; [CPU_] |4316| 
	.dwpsn	file "../Source/prod.c",line 4314,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4314| 
        ; branchcc occurs ; [] |4314| 
        B         $C$L743,UNC           ; [CPU_] |4314| 
        ; branch occurs ; [] |4314| 
$C$L712:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4295,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4295| 
        MOV       *-SP[61],AL           ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4294,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4294| 
        MOV       *-SP[47],AL           ; [CPU_] |4294| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4295,column 6,is_stmt,isa 0
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4295| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4295| 
        MOV       *XAR1++,AL            ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4294,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4294| 
	.dwpsn	file "../Source/prod.c",line 4295,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4294,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4294| 
        B         $C$L713,LT            ; [CPU_] |4294| 
        ; branchcc occurs ; [] |4294| 
        B         $C$L743,UNC           ; [CPU_] |4294| 
        ; branch occurs ; [] |4294| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4272,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4272| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4272| 
        MOVL      XAR6,ACC              ; [CPU_] |4272| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4272| 
        MOV       *XAR4++,AL            ; [CPU_] |4272| 
	.dwpsn	file "../Source/prod.c",line 4273,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4273| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4273| 
        MOVL      XAR6,ACC              ; [CPU_] |4273| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4273| 
        MOV       *XAR4++,AL            ; [CPU_] |4273| 
	.dwpsn	file "../Source/prod.c",line 4274,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4274| 
        ADD       ACC,#199 << 4         ; [CPU_] |4274| 
        MOVL      XAR6,ACC              ; [CPU_] |4274| 
	.dwpsn	file "../Source/prod.c",line 4276,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4276| 
	.dwpsn	file "../Source/prod.c",line 4274,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4274| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4274| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4278,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4278| 
        ANDB      AL,#0xff              ; [CPU_] |4278| 
        MOV       *XAR4++,AL            ; [CPU_] |4278| 
	.dwpsn	file "../Source/prod.c",line 4279,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4279| 
        LSR       AL,8                  ; [CPU_] |4279| 
        MOV       *XAR4++,AL            ; [CPU_] |4279| 
	.dwpsn	file "../Source/prod.c",line 4277,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4277| 
        ; branchcc occurs ; [] |4277| 
	.dwpsn	file "../Source/prod.c",line 4282,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4282| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4284,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4284| 
        ANDB      AL,#0xff              ; [CPU_] |4284| 
        MOV       *XAR4++,AL            ; [CPU_] |4284| 
	.dwpsn	file "../Source/prod.c",line 4285,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4285| 
        LSR       AL,8                  ; [CPU_] |4285| 
        MOV       *XAR4++,AL            ; [CPU_] |4285| 
	.dwpsn	file "../Source/prod.c",line 4283,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4283| 
        ; branchcc occurs ; [] |4283| 
	.dwpsn	file "../Source/prod.c",line 4273,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4273| 
        ADD       *-SP[61],#11          ; [CPU_] |4273| 
	.dwpsn	file "../Source/prod.c",line 4271,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4271| 
        ADDB      XAR0,#8               ; [CPU_] |4271| 
        ADDB      XAR7,#8               ; [CPU_] |4271| 
        SUBB      XAR6,#1               ; [CPU_U] |4271| 
        MOVZ      AR3,AR6               ; [CPU_] |4271| 
        CMP       AR6,#-1               ; [CPU_] |4271| 
        B         $C$L715,NEQ           ; [CPU_] |4271| 
        ; branchcc occurs ; [] |4271| 
        B         $C$L743,UNC           ; [CPU_] |4271| 
        ; branch occurs ; [] |4271| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4218,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4218| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4218| 
        MOVL      XAR6,ACC              ; [CPU_] |4218| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4218| 
        MOV       *XAR4++,AL            ; [CPU_] |4218| 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4219| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4219| 
        MOVL      XAR6,ACC              ; [CPU_] |4219| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4223,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4223| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4219| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4230,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4230| 
        ANDB      AL,#0xff              ; [CPU_] |4230| 
        MOV       *XAR4++,AL            ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4231,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4231| 
        LSR       AL,8                  ; [CPU_] |4231| 
        MOV       *XAR4++,AL            ; [CPU_] |4231| 
	.dwpsn	file "../Source/prod.c",line 4229,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR0--         ; [CPU_] |4229| 
        ; branchcc occurs ; [] |4229| 
	.dwpsn	file "../Source/prod.c",line 4236,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4236| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4243,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4243| 
        ANDB      AL,#0xff              ; [CPU_] |4243| 
        MOV       *XAR4++,AL            ; [CPU_] |4243| 
	.dwpsn	file "../Source/prod.c",line 4244,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4244| 
        LSR       AL,8                  ; [CPU_] |4244| 
        MOV       *XAR4++,AL            ; [CPU_] |4244| 
	.dwpsn	file "../Source/prod.c",line 4242,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4242| 
        ; branchcc occurs ; [] |4242| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4249,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4249| 
        ANDB      AL,#0xff              ; [CPU_] |4249| 
        MOV       *XAR4++,AL            ; [CPU_] |4249| 
	.dwpsn	file "../Source/prod.c",line 4250,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4250| 
        LSR       AL,8                  ; [CPU_] |4250| 
        MOV       *XAR4++,AL            ; [CPU_] |4250| 
	.dwpsn	file "../Source/prod.c",line 4248,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4248| 
        ; branchcc occurs ; [] |4248| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4255,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4255| 
        ANDB      AL,#0xff              ; [CPU_] |4255| 
        MOV       *XAR4++,AL            ; [CPU_] |4255| 
	.dwpsn	file "../Source/prod.c",line 4256,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4256| 
        LSR       AL,8                  ; [CPU_] |4256| 
        MOV       *XAR4++,AL            ; [CPU_] |4256| 
	.dwpsn	file "../Source/prod.c",line 4254,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4254| 
        ; branchcc occurs ; [] |4254| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4261,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4261| 
        ANDB      AL,#0xff              ; [CPU_] |4261| 
        MOV       *XAR4++,AL            ; [CPU_] |4261| 
	.dwpsn	file "../Source/prod.c",line 4262,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4262| 
        LSR       AL,8                  ; [CPU_] |4262| 
        MOV       *XAR4++,AL            ; [CPU_] |4262| 
	.dwpsn	file "../Source/prod.c",line 4260,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4260| 
        ; branchcc occurs ; [] |4260| 
	.dwpsn	file "../Source/prod.c",line 4217,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4217| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4217| 
        MOVL      XAR0,#88              ; [CPU_] |4217| 
        ADDB      ACC,#12               ; [CPU_] |4217| 
        ADDB      XAR1,#12              ; [CPU_] |4217| 
        ADDB      XAR7,#12              ; [CPU_] |4217| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4217,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4217,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4217| 
        SUBB      XAR0,#1               ; [CPU_U] |4217| 
        ADDB      ACC,#12               ; [CPU_] |4217| 
        MOVL      XT,ACC                ; [CPU_] |4217| 
        MOV       *-SP[47],AR0          ; [CPU_] |4217| 
        MOVL      ACC,P                 ; [CPU_] |4217| 
        ADDB      ACC,#12               ; [CPU_] |4217| 
        MOVL      P,ACC                 ; [CPU_] |4217| 
        CMP       AR0,#-1               ; [CPU_] |4217| 
        B         $C$L719,NEQ           ; [CPU_] |4217| 
        ; branchcc occurs ; [] |4217| 
        B         $C$L743,UNC           ; [CPU_] |4217| 
        ; branch occurs ; [] |4217| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4210,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4210| 
        MOV       *-SP[61],AL           ; [CPU_] |4210| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4208,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4208| 
        MOV       *XAR4++,AL            ; [CPU_] |4208| 
	.dwpsn	file "../Source/prod.c",line 4209,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4209| 
        MOV       *XAR4++,AL            ; [CPU_] |4209| 
	.dwpsn	file "../Source/prod.c",line 4210,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4210| 
	.dwpsn	file "../Source/prod.c",line 4207,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4207| 
	.dwpsn	file "../Source/prod.c",line 4210,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4210| 
	.dwpsn	file "../Source/prod.c",line 4207,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4207| 
        ; branchcc occurs ; [] |4207| 
        B         $C$L743,UNC           ; [CPU_] |4207| 
        ; branch occurs ; [] |4207| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4198,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4198| 
        MOVB      XAR0,#36              ; [CPU_] |4198| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4198| 
        MOVL      XAR0,#80              ; [CPU_] |4198| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4198| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4198| 
	.dwpsn	file "../Source/prod.c",line 4200,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4198,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4198| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4200,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4199,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4199| 
        ; branch occurs ; [] |4199| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4184,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4184| 
        MOVB      XAR0,#38              ; [CPU_] |4184| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4184| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4184| 
	.dwpsn	file "../Source/prod.c",line 4185,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4184,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4184| 
	.dwpsn	file "../Source/prod.c",line 4185,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4184,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4184| 
	.dwpsn	file "../Source/prod.c",line 4185,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4185| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4190,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4190| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4189,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4189| 
        ANDB      AL,#0xff              ; [CPU_] |4189| 
        MOV       *XAR4++,AL            ; [CPU_] |4189| 
	.dwpsn	file "../Source/prod.c",line 4190,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4190| 
        LSR       AL,8                  ; [CPU_] |4190| 
        MOV       *XAR4++,AL            ; [CPU_] |4190| 
	.dwpsn	file "../Source/prod.c",line 4188,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4188| 
        ; branchcc occurs ; [] |4188| 
        B         $C$L743,UNC           ; [CPU_] |4188| 
        ; branch occurs ; [] |4188| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4174,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4174| 
        MOV       *-SP[61],AL           ; [CPU_] |4174| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4174| 
	.dwpsn	file "../Source/prod.c",line 4173,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4173| 
	.dwpsn	file "../Source/prod.c",line 4174,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4174| 
	.dwpsn	file "../Source/prod.c",line 4173,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4173| 
        ; branchcc occurs ; [] |4173| 
        B         $C$L743,UNC           ; [CPU_] |4173| 
        ; branch occurs ; [] |4173| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4157,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4157| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4159,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4159| 
        ANDB      AL,#0xff              ; [CPU_] |4159| 
        MOV       *XAR4++,AL            ; [CPU_] |4159| 
	.dwpsn	file "../Source/prod.c",line 4160,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4160| 
        LSR       AL,8                  ; [CPU_] |4160| 
        MOV       *XAR4++,AL            ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4158,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4158| 
        ; branchcc occurs ; [] |4158| 
	.dwpsn	file "../Source/prod.c",line 4156,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4156| 
	.dwpsn	file "../Source/prod.c",line 4160,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4156,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4156| 
        ; branchcc occurs ; [] |4156| 
	.dwpsn	file "../Source/prod.c",line 4165,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4165| 
        MOVL      ACC,XAR5              ; [CPU_] |4165| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4165| 
        MOVL      XAR6,ACC              ; [CPU_] |4165| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4165| 
        ANDB      AL,#0xff              ; [CPU_] |4165| 
        MOV       *XAR4++,AL            ; [CPU_] |4165| 
	.dwpsn	file "../Source/prod.c",line 4166,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4166| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4166| 
        MOVL      XAR5,ACC              ; [CPU_] |4166| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4166| 
        LSR       AL,8                  ; [CPU_] |4166| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4166| 
$C$L735:    
        ADD       *-SP[61],#2           ; [CPU_] |4166| 
	.dwpsn	file "../Source/prod.c",line 4169,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4169| 
        ; branch occurs ; [] |4169| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3811,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3811| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3811| 
        MOVZ      AR4,AR4               ; [CPU_] |3811| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3813,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3813| 
        ANDB      AL,#0xff              ; [CPU_] |3813| 
        MOV       *XAR1++,AL            ; [CPU_] |3813| 
	.dwpsn	file "../Source/prod.c",line 3814,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3814| 
        LSR       AL,8                  ; [CPU_] |3814| 
        MOV       *XAR1++,AL            ; [CPU_] |3814| 
	.dwpsn	file "../Source/prod.c",line 3812,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3812| 
        ; branchcc occurs ; [] |3812| 
	.dwpsn	file "../Source/prod.c",line 3818,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3818| 
        ANDB      AL,#0xff              ; [CPU_] |3818| 
	.dwpsn	file "../Source/prod.c",line 3819,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3819| 
	.dwpsn	file "../Source/prod.c",line 3818,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3818| 
	.dwpsn	file "../Source/prod.c",line 3819,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3819| 
        LSR       AL,8                  ; [CPU_] |3819| 
        MOV       *XAR1++,AL            ; [CPU_] |3819| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3819| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3823,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3823| 
        ANDB      AL,#0xff              ; [CPU_] |3823| 
        MOV       *XAR1++,AL            ; [CPU_] |3823| 
	.dwpsn	file "../Source/prod.c",line 3824,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3824| 
        LSR       AL,8                  ; [CPU_] |3824| 
        MOV       *XAR1++,AL            ; [CPU_] |3824| 
	.dwpsn	file "../Source/prod.c",line 3822,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3822| 
        ; branchcc occurs ; [] |3822| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3828,column 5,is_stmt,isa 0
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_strlen")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3828| 
        ; call occurs [#_strlen] ; [] |3828| 
	.dwpsn	file "../Source/prod.c",line 3829,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3829| 
	.dwpsn	file "../Source/prod.c",line 3814,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3814| 
	.dwpsn	file "../Source/prod.c",line 3830,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3830| 
        B         $C$L743,EQ            ; [CPU_] |3830| 
        ; branchcc occurs ; [] |3830| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3829,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3829| 
	.dwpsn	file "../Source/prod.c",line 3830,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3830| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3830,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3830| 
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3831| 
        INC       *-SP[61]              ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3830,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3830| 
        B         $C$L739,HI            ; [CPU_] |3830| 
        ; branchcc occurs ; [] |3830| 
        B         $C$L743,UNC           ; [CPU_] |3830| 
        ; branch occurs ; [] |3830| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3797,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3797| 
        MOVL      XAR0,#66              ; [CPU_] |3797| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3797| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3797| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3797| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3800,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3800| 
        ; branch occurs ; [] |3800| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3791,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3791| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3791| 
$C$L742:    
        MOV       *-SP[61],#3           ; [CPU_] |3791| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5782,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5782| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5782| 
        ; call occurs [#_scia_send_bin] ; [] |5782| 
	.dwpsn	file "../Source/prod.c",line 5784,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5784| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5784| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5784| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5784| 
        CMPB      AL,#240               ; [CPU_] |5784| 
        B         $C$L634,NEQ           ; [CPU_] |5784| 
        ; branchcc occurs ; [] |5784| 
	.dwpsn	file "../Source/prod.c",line 5785,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5785| 
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("_delay_us")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5785| 
        ; call occurs [#_delay_us] ; [] |5785| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5786,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5786| 
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5786| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5786| 
        B         $C$L634,UNC           ; [CPU_] |5786| 
        ; branch occurs ; [] |5786| 
	.dwattr $C$DW$279, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$279, DW_AT_TI_end_line(0x16b9)
	.dwattr $C$DW$279, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$279

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1491	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1491, DW_AT_name("get_fattime")
	.dwattr $C$DW$1491, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1491, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1491, DW_AT_external
	.dwattr $C$DW$1491, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1491, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1491, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1491, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1491, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1491, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1491, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1491, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1491

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 19 2019",0
	.align	2
$C$FSL62:	.string	"09:54:57",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_ad7738_resettare
	.global	_ad7738_monclr
	.global	_ad7738_resetpeak
	.global	_ad7738_settemp
	.global	_mcbsp_xmit
	.global	_ad7738_resetlimit
	.global	_ad7738_setcal
	.global	_SPICANRoutine
	.global	_conf_default
	.global	_SPICANReadSetT0Message
	.global	_SPICANWaitForTXBuf
	.global	_velf_rst
	.global	_dac_setmode
	.global	_ad7738_init
	.global	_maf_rst
	.global	_SPICANInit
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_latch_dac
	.global	_extio_init
	.global	_gpio_init
	.global	_ssr_set
	.global	_uart_set_dir
	.global	_lcd_init
	.global	_lcd_clear
	.global	_led_init
	.global	_led_set
	.global	_InitPieVectTable
	.global	_delay_us
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_sys_init
	.global	_lcd_dputs
	.global	_lcd_puts
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_SPICANRead
	.global	_SPICANReadStat
	.global	_scia_puts
	.global	_sprintf
	.global	_scia_send_bin
	.global	_scia_getparam
	.global	_port4004
	.global	_secureRamFuncs_runstart
	.global	_atoi
	.global	_port400e
	.global	_Flash28_API_LoadEnd
	.global	_Flash28_API_LoadStart
	.global	_secureRamFuncs_loadstart
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadend
	.global	_ad7738_tempstart
	.global	_conf_write
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_getlimitchgd
	.global	_ad7738_getlimitst
	.global	_conf_read
	.global	_tagdetect
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_strtod
	.global	_atol
	.global	_ad7738_getmon
	.global	_ds1820read
	.global	_prod_getnext
	.global	_Flash_CPUScaleFactor
	.global	_Flash_CallbackPtr
	.global	_ad7738_getvall
	.global	_ad7738_getpeak
	.global	_strlen
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1493	.dwtag  DW_TAG_member
	.dwattr $C$DW$1493, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1493, DW_AT_name("fs_type")
	.dwattr $C$DW$1493, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1493, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1493, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1494, DW_AT_name("drv")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1495, DW_AT_name("csize")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1496, DW_AT_name("n_fats")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("wflag")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1499, DW_AT_name("id")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1500, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1501, DW_AT_name("last_clust")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1502, DW_AT_name("free_clust")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1503, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1504, DW_AT_name("cdir")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1505, DW_AT_name("n_fatent")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1506, DW_AT_name("fsize")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1507, DW_AT_name("fatbase")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1508, DW_AT_name("dirbase")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1509, DW_AT_name("database")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1510, DW_AT_name("winsect")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1511, DW_AT_name("win")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1512, DW_AT_name("fs")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1513, DW_AT_name("id")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1514, DW_AT_name("flag")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1515, DW_AT_name("pad1")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1516, DW_AT_name("fptr")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1517, DW_AT_name("fsize")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1518, DW_AT_name("org_clust")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1519, DW_AT_name("curr_clust")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1520, DW_AT_name("dsect")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1521, DW_AT_name("dir_sect")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1522, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1523, DW_AT_name("cltbl")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1524, DW_AT_name("buf")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1525, DW_AT_name("year")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1526, DW_AT_name("month")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1527, DW_AT_name("mday")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1528, DW_AT_name("wday")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1529, DW_AT_name("hour")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1530, DW_AT_name("min")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1531, DW_AT_name("sec")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1532, DW_AT_name("adc")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1533, DW_AT_name("adw")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1534, DW_AT_name("pos")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1535, DW_AT_name("vel")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1536, DW_AT_name("ci")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1537, DW_AT_name("bslope")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1538, DW_AT_name("tcx")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1539, DW_AT_name("tcy")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1540, DW_AT_name("tcz")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1541	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1541, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1542, DW_AT_name("what")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1543, DW_AT_name("ch")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1544, DW_AT_name("dslopep")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1545, DW_AT_name("dslopen")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1546, DW_AT_name("dint")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1547, DW_AT_name("gain")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1548, DW_AT_name("offset")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1549	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1549, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1550, DW_AT_name("what")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("ch")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("adec")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1553	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1553, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1554, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1554, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1556, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1556, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1557, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1557, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1557, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("all")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1571, DW_AT_name("bit")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1574, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1574, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1575, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1575, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1575, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("all")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1589, DW_AT_name("bit")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("all")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1607, DW_AT_name("bit")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("all")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1625, DW_AT_name("bit")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("all")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1643, DW_AT_name("bit")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("all")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1661, DW_AT_name("bit")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("all")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1679, DW_AT_name("bit")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("all")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1697, DW_AT_name("bit")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("rsvd1")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("rsvd2")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("all")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1705, DW_AT_name("bit")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("rsvd1")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1708, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1708, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("rsvd2")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("all")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1713, DW_AT_name("bit")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("rsvd1")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("rsvd2")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("all")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1721, DW_AT_name("bit")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("rsvd1")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("rsvd2")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("all")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1729, DW_AT_name("bit")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("rsvd1")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("all")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1735, DW_AT_name("bit")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("rsvd1")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("all")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1741, DW_AT_name("bit")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("rsvd1")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("all")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1747, DW_AT_name("bit")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("rsvd1")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("all")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1753, DW_AT_name("bit")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("all")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1771, DW_AT_name("bit")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("all")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1789, DW_AT_name("bit")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("all")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1807, DW_AT_name("bit")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("all")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1825, DW_AT_name("bit")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("rsvd1")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("rsvd2")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("all")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1831, DW_AT_name("bit")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("rsvd1")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("rsvd2")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("all")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1837, DW_AT_name("bit")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("rsvd1")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1840, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1840, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("rsvd2")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1841, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1841, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("all")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1843, DW_AT_name("bit")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("rsvd1")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1844, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1844, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1846, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1846, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("rsvd2")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1847, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1847, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("all")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1849, DW_AT_name("bit")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1850, DW_AT_name("GPADAT")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1851, DW_AT_name("GPASET")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1852, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1853, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1854, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1855, DW_AT_name("GPBSET")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1856, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1857, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1858, DW_AT_name("rsvd1")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1859, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1860, DW_AT_name("GPDSET")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1861, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1862, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1863, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1864, DW_AT_name("GPESET")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1865, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1866, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1867, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1868, DW_AT_name("GPFSET")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1869, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1870, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1871, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1872, DW_AT_name("GPGSET")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1873, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1874, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1875, DW_AT_name("rsvd2")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1876	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1876)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1877, DW_AT_name("what")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1878, DW_AT_name("ch")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1879, DW_AT_name("limit")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1880, DW_AT_name("limits")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1881, DW_AT_name("limitr")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1882	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1882, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1883, DW_AT_name("usn")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1884, DW_AT_name("uname")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1885, DW_AT_name("rxdir")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1886, DW_AT_name("baud")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1887, DW_AT_name("tagiden")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1888, DW_AT_name("tarepersist")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1889, DW_AT_name("filter")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1890, DW_AT_name("diffwin")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1891, DW_AT_name("ch")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1892, DW_AT_name("sensor")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1893, DW_AT_name("vfd")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1894, DW_AT_name("dac")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1895, DW_AT_name("lim")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1896, DW_AT_name("velfilter")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1897, DW_AT_name("cntperin")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1898, DW_AT_name("magic")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1899	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1899)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1900, DW_AT_name("ssn")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1901, DW_AT_name("slbl")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1902, DW_AT_name("tagid")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1903, DW_AT_name("method")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1904, DW_AT_name("date")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1905, DW_AT_name("range")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1906, DW_AT_name("unit")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1907, DW_AT_name("ounit")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1908, DW_AT_name("ufactor")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1909, DW_AT_name("points")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1910, DW_AT_name("mass")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1911, DW_AT_name("adc")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1912, DW_AT_name("slope")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1913, DW_AT_name("intercept")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1914, DW_AT_name("shunt")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1915, DW_AT_name("base")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1916, DW_AT_name("tare")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1917, DW_AT_name("dacgain")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1918, DW_AT_name("dacoff")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1919, DW_AT_name("ch")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1920	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1920, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1921	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1921)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1922	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1922, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1923	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$6)

$C$DW$T$175	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$1923)


$C$DW$T$176	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_byte_size(0x101)
$C$DW$1924	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1924, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$176

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1925	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$10)

$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$1925)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1926	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1926, DW_AT_type(*$C$DW$T$36)

$C$DW$1927	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$1926)

$C$DW$T$298	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1927)

$C$DW$1928	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1928, DW_AT_type(*$C$DW$T$36)

$C$DW$T$299	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$1928)


$C$DW$T$300	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$300, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$T$300, DW_AT_language(DW_LANG_C)
$C$DW$1929	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$300


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1930	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1930, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87

$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)


$C$DW$T$307	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$307, DW_AT_byte_size(0x03)
$C$DW$1931	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1931, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$307


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x08)
$C$DW$1932	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1932, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$308

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1933	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1933, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1934	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1934, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1935	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1935, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1936	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1936, DW_AT_type(*$C$DW$T$12)

$C$DW$T$335	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$335, DW_AT_type(*$C$DW$1936)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1937	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1937, DW_AT_type(*$C$DW$T$90)

$C$DW$T$338	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$338, DW_AT_type(*$C$DW$1937)


$C$DW$T$339	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$339, DW_AT_type(*$C$DW$T$338)
	.dwattr $C$DW$T$339, DW_AT_language(DW_LANG_C)
$C$DW$1938	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$339

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$354	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$354, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$354, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$354, DW_AT_byte_size(0x08)
$C$DW$1939	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1939, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$354

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1940	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1940, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1941	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1941, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1942	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1942, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1943	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1943, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x06)
$C$DW$1944	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1944, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$373

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1945	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1945, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1946	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1946, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$359	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$359, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$359, DW_AT_address_class(0x20)

$C$DW$1947	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1947, DW_AT_type(*$C$DW$T$5)

$C$DW$T$179	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$1947)

$C$DW$T$180	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_address_class(0x20)


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
$C$DW$1948	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$374


$C$DW$T$375	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$375, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$375, DW_AT_byte_size(0x400)
$C$DW$1949	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1949, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$375


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x08)
$C$DW$1950	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1950, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$380


$C$DW$T$381	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$381, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$381, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$381, DW_AT_byte_size(0x64)
$C$DW$1951	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1951, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$381


$C$DW$T$382	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$382, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$382, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$382, DW_AT_byte_size(0x40)
$C$DW$1952	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1952, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$382

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("AL")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg0]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("AH")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg1]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("PL")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_reg2]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("PH")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_reg3]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("SP")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg20]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("XT")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg21]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("T")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg22]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("ST0")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_reg23]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("ST1")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_reg24]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("PC")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_reg25]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("RPC")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_reg26]

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("FP")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_reg28]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("DP")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_reg29]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("SXM")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_reg30]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("PM")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_reg31]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("OVM")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("PAGE0")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("AMODE")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("INTM")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("IFR")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("IER")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("V")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("VOL")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("AR0")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_reg4]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("XAR0")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_reg5]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("AR1")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_reg6]

$C$DW$1980	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1980, DW_AT_name("XAR1")
	.dwattr $C$DW$1980, DW_AT_location[DW_OP_reg7]

$C$DW$1981	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1981, DW_AT_name("AR2")
	.dwattr $C$DW$1981, DW_AT_location[DW_OP_reg8]

$C$DW$1982	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1982, DW_AT_name("XAR2")
	.dwattr $C$DW$1982, DW_AT_location[DW_OP_reg9]

$C$DW$1983	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1983, DW_AT_name("AR3")
	.dwattr $C$DW$1983, DW_AT_location[DW_OP_reg10]

$C$DW$1984	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1984, DW_AT_name("XAR3")
	.dwattr $C$DW$1984, DW_AT_location[DW_OP_reg11]

$C$DW$1985	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1985, DW_AT_name("AR4")
	.dwattr $C$DW$1985, DW_AT_location[DW_OP_reg12]

$C$DW$1986	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1986, DW_AT_name("XAR4")
	.dwattr $C$DW$1986, DW_AT_location[DW_OP_reg13]

$C$DW$1987	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1987, DW_AT_name("AR5")
	.dwattr $C$DW$1987, DW_AT_location[DW_OP_reg14]

$C$DW$1988	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1988, DW_AT_name("XAR5")
	.dwattr $C$DW$1988, DW_AT_location[DW_OP_reg15]

$C$DW$1989	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1989, DW_AT_name("AR6")
	.dwattr $C$DW$1989, DW_AT_location[DW_OP_reg16]

$C$DW$1990	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1990, DW_AT_name("XAR6")
	.dwattr $C$DW$1990, DW_AT_location[DW_OP_reg17]

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("AR7")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg18]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("XAR7")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

