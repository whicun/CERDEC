;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.7.LTS *
;* Date/Time created: Wed Feb 12 09:43:23 2020                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.7.LTS Copyright (c) 1996-2017 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL1,32		; _POS_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL2,32		; _VEL_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwendtag $C$DW$5


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$6


$C$DW$8	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$8, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$8


$C$DW$10	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$10, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_declaration
	.dwattr $C$DW$10, DW_AT_external
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$11)

$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$10


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwendtag $C$DW$15


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("SPICANCheckInts")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_SPICANCheckInts")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$16


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("conf_default")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwendtag $C$DW$18


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$36)

$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$19


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("SPICANWaitForTXBuf")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$23


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("velf_rst")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("dac_setmode")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$26


$C$DW$28	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$28, DW_AT_name("ad7738_init")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwendtag $C$DW$28


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("maf_rst")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29


$C$DW$30	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$30, DW_AT_name("SPICANInit")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwendtag $C$DW$30

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("UNITS")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("METHOD")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("BAUD")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$342)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external

$C$DW$34	.dwtag  DW_TAG_variable
	.dwattr $C$DW$34, DW_AT_name("BITMAP")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$300)
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("LPV")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external

$C$DW$36	.dwtag  DW_TAG_variable
	.dwattr $C$DW$36, DW_AT_name("INTERFACE")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("ds1820start")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("configCAN")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("latch_dac")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("led_set")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$36)

$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$40


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("lcd_init")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwendtag $C$DW$43


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("gpio_init")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwendtag $C$DW$44


$C$DW$45	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$45, DW_AT_name("led_init")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwendtag $C$DW$45


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("InitECan")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("lcd_clear")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwendtag $C$DW$47


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwendtag $C$DW$49


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("shunt_switch")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$50


$C$DW$52	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$52, DW_AT_name("ssr_set")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$36)

$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$52


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("sys_init")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwendtag $C$DW$55


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("flash_init")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwendtag $C$DW$56


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("delay_us")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$57


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("extio_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$60


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("reboot")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
	.dwendtag $C$DW$62


$C$DW$63	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$63, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$163)

$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$63


$C$DW$66	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$66, DW_AT_name("lcd_puts")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$163)

$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$66


$C$DW$69	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$69, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$69, DW_AT_declaration
	.dwattr $C$DW$69, DW_AT_external
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$69


$C$DW$71	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$71, DW_AT_name("scia_init")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$71, DW_AT_declaration
	.dwattr $C$DW$71, DW_AT_external
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$71


$C$DW$73	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$73, DW_AT_name("getShelfErrors")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_getShelfErrors")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$73


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("getShelfAlarms")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_getShelfAlarms")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$75


$C$DW$77	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$77, DW_AT_name("getModVoltage")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_getModVoltage")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$36)

$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$77


$C$DW$80	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$80, DW_AT_name("atoi")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$80

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$82	.dwtag  DW_TAG_variable
	.dwattr $C$DW$82, DW_AT_name("autoidchanged")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$82, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$82, DW_AT_external

$C$DW$83	.dwtag  DW_TAG_variable
	.dwattr $C$DW$83, DW_AT_name("port400e")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external


$C$DW$84	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$84, DW_AT_name("getShelfMinTemp")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("_getShelfMinTemp")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$84


$C$DW$86	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$86, DW_AT_name("getShelfMinTempID")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_getShelfMinTempID")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$86


$C$DW$88	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$88, DW_AT_name("getShelfMaxTempID")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("_getShelfMaxTempID")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$88


$C$DW$90	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$90, DW_AT_name("getShelfAvgTemp")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_getShelfAvgTemp")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
$C$DW$91	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$90


$C$DW$92	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$92, DW_AT_name("getShelfMaxTemp")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_getShelfMaxTemp")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external
$C$DW$93	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$92

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$94	.dwtag  DW_TAG_variable
	.dwattr $C$DW$94, DW_AT_name("cmd_mode")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$94, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_external

$C$DW$95	.dwtag  DW_TAG_variable
	.dwattr $C$DW$95, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external

$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external


$C$DW$97	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$97, DW_AT_name("sprintf")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
$C$DW$98	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$163)

$C$DW$99	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$180)

$C$DW$100	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$97

$C$DW$101	.dwtag  DW_TAG_variable
	.dwattr $C$DW$101, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external

$C$DW$102	.dwtag  DW_TAG_variable
	.dwattr $C$DW$102, DW_AT_name("port4004")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("canVarInit")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_canVarInit")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103

$C$DW$104	.dwtag  DW_TAG_variable
	.dwattr $C$DW$104, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external

$C$DW$105	.dwtag  DW_TAG_variable
	.dwattr $C$DW$105, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("conf_write")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
	.dwendtag $C$DW$106


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwendtag $C$DW$107


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
	.dwendtag $C$DW$108


$C$DW$109	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$109, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$109


$C$DW$111	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$111, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_declaration
	.dwattr $C$DW$111, DW_AT_external
	.dwendtag $C$DW$111


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("conf_read")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
	.dwendtag $C$DW$112


$C$DW$113	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$113, DW_AT_name("SPICANRead")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$113, DW_AT_declaration
	.dwattr $C$DW$113, DW_AT_external
$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$113


$C$DW$115	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$115, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$163)

$C$DW$117	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$115


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("scia_getparam")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
$C$DW$119	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$163)

$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$163)

$C$DW$121	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$118


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
$C$DW$123	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$163)

$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$122


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
	.dwendtag $C$DW$125


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
	.dwendtag $C$DW$126


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("scia_puts")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
$C$DW$128	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$127


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("getSystemCapVoltage")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_getSystemCapVoltage")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
	.dwendtag $C$DW$129


$C$DW$130	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$130, DW_AT_name("tagdetect")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external
$C$DW$131	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$130


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132

$C$DW$133	.dwtag  DW_TAG_variable
	.dwattr $C$DW$133, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
	.dwendtag $C$DW$134


$C$DW$135	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$135, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external
	.dwendtag $C$DW$135


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("getShelfVoltage")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_getShelfVoltage")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
$C$DW$137	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$136


$C$DW$138	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$138, DW_AT_name("strtod")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external
$C$DW$139	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$180)

$C$DW$140	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$364)

	.dwendtag $C$DW$138


$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("getSystemCapVoltageF")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_getSystemCapVoltageF")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
	.dwendtag $C$DW$141

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("POS_U")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$142, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$142, DW_AT_external

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("VEL_U")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$143, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$143, DW_AT_external


$C$DW$144	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$144, DW_AT_name("memcpy")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external
$C$DW$145	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$3)

$C$DW$146	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$148)

$C$DW$147	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$144


$C$DW$148	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$148, DW_AT_name("getSystemOutCurrentF")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_getSystemOutCurrentF")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external
	.dwendtag $C$DW$148


$C$DW$149	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$149, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external
$C$DW$150	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$149


$C$DW$151	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$151, DW_AT_name("atol")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$151, DW_AT_declaration
	.dwattr $C$DW$151, DW_AT_external
$C$DW$152	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$151

$C$DW$153	.dwtag  DW_TAG_variable
	.dwattr $C$DW$153, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$153, DW_AT_declaration
	.dwattr $C$DW$153, DW_AT_external

$C$DW$154	.dwtag  DW_TAG_variable
	.dwattr $C$DW$154, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$154, DW_AT_declaration
	.dwattr $C$DW$154, DW_AT_external


$C$DW$155	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$155, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$155, DW_AT_declaration
	.dwattr $C$DW$155, DW_AT_external
	.dwendtag $C$DW$155


$C$DW$156	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$156, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$156, DW_AT_declaration
	.dwattr $C$DW$156, DW_AT_external
	.dwendtag $C$DW$156


$C$DW$157	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$157, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$157, DW_AT_declaration
	.dwattr $C$DW$157, DW_AT_external
	.dwendtag $C$DW$157


$C$DW$158	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$158, DW_AT_name("prod_getavail")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$158, DW_AT_declaration
	.dwattr $C$DW$158, DW_AT_external
	.dwendtag $C$DW$158


$C$DW$159	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$159, DW_AT_name("strlen")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$159, DW_AT_declaration
	.dwattr $C$DW$159, DW_AT_external
$C$DW$160	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$159


$C$DW$161	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$161, DW_AT_name("ds1820read")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$161, DW_AT_declaration
	.dwattr $C$DW$161, DW_AT_external
	.dwendtag $C$DW$161


$C$DW$162	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$162, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$162, DW_AT_declaration
	.dwattr $C$DW$162, DW_AT_external
	.dwendtag $C$DW$162

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$163	.dwtag  DW_TAG_variable
	.dwattr $C$DW$163, DW_AT_name("autoid")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$163, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$163, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("tagwasthere")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$164, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$164, DW_AT_external


$C$DW$165	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$165, DW_AT_name("tagid")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$165, DW_AT_declaration
	.dwattr $C$DW$165, DW_AT_external
$C$DW$166	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$165

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$167	.dwtag  DW_TAG_variable
	.dwattr $C$DW$167, DW_AT_name("rtc")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$167, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$167, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$168	.dwtag  DW_TAG_variable
	.dwattr $C$DW$168, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$168, DW_AT_declaration
	.dwattr $C$DW$168, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$4:	.usect	".ebss",100,1,0
_buff$3:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$169	.dwtag  DW_TAG_variable
	.dwattr $C$DW$169, DW_AT_name("tsensor")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$169, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$169, DW_AT_external

$C$DW$170	.dwtag  DW_TAG_variable
	.dwattr $C$DW$170, DW_AT_name("_ctypes_")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$170, DW_AT_declaration
	.dwattr $C$DW$170, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$171	.dwtag  DW_TAG_variable
	.dwattr $C$DW$171, DW_AT_name("fileOb")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$171, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$171, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$172	.dwtag  DW_TAG_variable
	.dwattr $C$DW$172, DW_AT_name("Fatfs")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$172, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$172, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$173	.dwtag  DW_TAG_variable
	.dwattr $C$DW$173, DW_AT_name("conf_data")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$173, DW_AT_declaration
	.dwattr $C$DW$173, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\{3220A409-C75C-4FB1-AC68-2CC6BD187F71} C:\\Users\\ebenton\\AppData\\Local\\Temp\\{25A0BC20-7E67-419B-8EC6-4B869306D2C7} 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\{8A87F0D8-377A-4832-A567-0C3F0E03E043} 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$174	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$174, DW_AT_name("update_units")
	.dwattr $C$DW$174, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$174, DW_AT_high_pc(0x00)
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$174, DW_AT_external
	.dwattr $C$DW$174, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$174, DW_AT_TI_begin_line(0x180c)
	.dwattr $C$DW$174, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$174, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6156,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("buff")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$383)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6156 | void update_units(void) {                                              
; 6158 | int l;                                                                 
; 6159 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6161,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6161 | lcd_clear();                                                           
; 6162 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$176, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6161| 
        ; call occurs [#_lcd_clear] ; [] |6161| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6163,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6163 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6163| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6163| 
        ADDL      XAR4,ACC              ; [CPU_] |6163| 
        MOV       AL,AR1                ; [CPU_] |6163| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6163| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$177, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6163| 
        ; call occurs [#_lcd_puts] ; [] |6163| 
	.dwpsn	file "../Source/prod.c",line 6164,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6164 | switch (conf_data.vfd[l].what) {                                       
; 6165 | case VFD_LOAD:                                                         
; 6166 | case VFD_PEAK:                                                         
; 6167 | case VFD_VALL:                                                         
; 6168 | case VFD_POSI:                                                         
; 6169 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6164| 
        CMPB      AL,#4                 ; [CPU_] |6164| 
        B         $C$L2,LOS             ; [CPU_] |6164| 
        ; branchcc occurs ; [] |6164| 
        CMPB      AL,#5                 ; [CPU_] |6164| 
        B         $C$L8,EQ              ; [CPU_] |6164| 
        ; branchcc occurs ; [] |6164| 
        CMPB      AL,#6                 ; [CPU_] |6164| 
        B         $C$L7,EQ              ; [CPU_] |6164| 
        ; branchcc occurs ; [] |6164| 
        B         $C$L10,UNC            ; [CPU_] |6164| 
        ; branch occurs ; [] |6164| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6170,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6170 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6170| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6170| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6170| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6170| 
        ADDB      AL,#1                 ; [CPU_] |6170| 
        MOVL      XAR4,XAR3             ; [CPU_] |6170| 
        MOV       *-SP[3],AL            ; [CPU_] |6170| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_sprintf")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6170| 
        ; call occurs [#_sprintf] ; [] |6170| 
	.dwpsn	file "../Source/prod.c",line 6171,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6171 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6171| 
        ADD       AL,AR1                ; [CPU_] |6171| 
        MOVL      XAR4,XAR3             ; [CPU_] |6171| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6171| 
        ; call occurs [#_lcd_puts] ; [] |6171| 
	.dwpsn	file "../Source/prod.c",line 6172,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6172 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6172| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6172| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6172| 
        B         $C$L3,EQ              ; [CPU_] |6172| 
        ; branchcc occurs ; [] |6172| 
	.dwpsn	file "../Source/prod.c",line 6173,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6173 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6173| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6173| 
        ADD       AL,AR1                ; [CPU_] |6173| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6173| 
        ; call occurs [#_lcd_puts] ; [] |6173| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6176,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6176 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6177 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6176| 
        CMPB      AL,#3                 ; [CPU_] |6176| 
        B         $C$L6,EQ              ; [CPU_] |6176| 
        ; branchcc occurs ; [] |6176| 
	.dwpsn	file "../Source/prod.c",line 6178,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6178 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6179 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6180 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6178| 
        CMPB      AL,#4                 ; [CPU_] |6178| 
        B         $C$L5,EQ              ; [CPU_] |6178| 
        ; branchcc occurs ; [] |6178| 
	.dwpsn	file "../Source/prod.c",line 6181,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6181 | lcd_puts(                                                              
; 6182 |                 (char*) UNITS[0x0f                                     
; 6183 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6184 |                 18 + 20 * l);                                          
; 6186 | break;                                                                 
; 6187 | case VFD_LIMIT:                                                        
; 6188 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6189 | lcd_puts(buff, 5 + 20 * l);                                            
; 6190 | break;                                                                 
; 6191 | case VFD_TEMP:                                                         
; 6192 | #if(VFD==1)                                                            
; 6193 | buff[0] = 0xb0;                                                        
; 6194 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6181| 
        MOV       T,#10                 ; [CPU_] |6181| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6181| 
        ADDL      ACC,XAR6              ; [CPU_] |6181| 
        MOVL      XAR4,ACC              ; [CPU_] |6181| 
        MOVB      XAR0,#42              ; [CPU_] |6181| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6181| 
        MPYB      ACC,T,#152            ; [CPU_] |6181| 
        ADDL      ACC,XAR6              ; [CPU_] |6181| 
        MOVL      XAR4,ACC              ; [CPU_] |6181| 
        MOVB      XAR0,#125             ; [CPU_] |6181| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6181| 
        ANDB      AL,#0x0f              ; [CPU_] |6181| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6181| 
        MOV       ACC,AL << 1           ; [CPU_] |6181| 
        ADDL      XAR4,ACC              ; [CPU_] |6181| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6181| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6181| 
        B         $C$L9,UNC             ; [CPU_] |6181| 
        ; branch occurs ; [] |6181| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6179,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6179| 
        MOVL      XAR4,#$C$FSL2         ; [CPU_U] |6179| 
	.dwpsn	file "../Source/prod.c",line 6180,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6180| 
        ; branch occurs ; [] |6180| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6177,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6177| 
	.dwpsn	file "../Source/prod.c",line 6178,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6178| 
        ; branch occurs ; [] |6178| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6195,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6195 | buff[0] = 0xdf;                                                        
; 6196 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6195| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6195| 
	.dwpsn	file "../Source/prod.c",line 6197,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6197 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6197| 
	.dwpsn	file "../Source/prod.c",line 6198,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6198 | buff[2] = '\0';                                                        
; 6199 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6198| 
	.dwpsn	file "../Source/prod.c",line 6200,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6200 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6200| 
        ; branch occurs ; [] |6200| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6188,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6188| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6188| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6188| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6188| 
        ADDB      AL,#1                 ; [CPU_] |6188| 
        MOVL      XAR4,XAR3             ; [CPU_] |6188| 
        MOV       *-SP[3],AL            ; [CPU_] |6188| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_sprintf")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6188| 
        ; call occurs [#_sprintf] ; [] |6188| 
	.dwpsn	file "../Source/prod.c",line 6189,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6189| 
        MOVL      XAR4,XAR3             ; [CPU_] |6189| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6189| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6189| 
        ; call occurs [#_lcd_puts] ; [] |6189| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6162,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6162| 
        SUBB      XAR6,#1               ; [CPU_U] |6162| 
        MOVZ      AR0,AR6               ; [CPU_] |6162| 
        ADDB      XAR2,#3               ; [CPU_] |6162| 
        ADDB      XAR1,#20              ; [CPU_] |6162| 
        MOV       *-SP[4],AR6           ; [CPU_] |6162| 
        CMP       AR0,#-1               ; [CPU_] |6162| 
        B         $C$L1,NEQ             ; [CPU_] |6162| 
        ; branchcc occurs ; [] |6162| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$174, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$174, DW_AT_TI_end_line(0x183b)
	.dwattr $C$DW$174, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$174

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$184	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$184, DW_AT_name("print_vfd")
	.dwattr $C$DW$184, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$184, DW_AT_high_pc(0x00)
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$184, DW_AT_external
	.dwattr $C$DW$184, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$184, DW_AT_TI_begin_line(0x1797)
	.dwattr $C$DW$184, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$184, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6039,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$185	.dwtag  DW_TAG_variable
	.dwattr $C$DW$185, DW_AT_name("buff")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$385)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 6039 | void print_vfd(void) {                                                 
; 6040 | int l;                                                                 
; 6041 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$186	.dwtag  DW_TAG_variable
	.dwattr $C$DW$186, DW_AT_name("l")
	.dwattr $C$DW$186, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$186, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$186, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6043,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6043 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |6043| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6043| 
        ; call occurs [#_scia_puts] ; [] |6043| 
	.dwpsn	file "../Source/prod.c",line 6044,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6044 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6044| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 6045,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6045 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |6045| 
        MOVB      AL,#1                 ; [CPU_] |6045| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6045| 
        ADD       AL,AR1                ; [CPU_] |6045| 
        MOV       *-SP[3],AL            ; [CPU_] |6045| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6045| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6045| 
        ADDL      XAR4,ACC              ; [CPU_] |6045| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6045| 
        MOVL      XAR4,XAR3             ; [CPU_] |6045| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6045| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6045| 
        ; call occurs [#_sprintf] ; [] |6045| 
	.dwpsn	file "../Source/prod.c",line 6046,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6046 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6046| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6046| 
        ; call occurs [#_scia_puts] ; [] |6046| 
	.dwpsn	file "../Source/prod.c",line 6048,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6048 | switch (conf_data.vfd[l].what) {                                       
; 6049 | case VFD_LOAD:                                                         
; 6050 | case VFD_PEAK:                                                         
; 6051 | case VFD_VALL:                                                         
; 6052 | case VFD_POSI:                                                         
; 6053 | case VFD_VELO:                                                         
; 6054 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 6055 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 6056 |         scia_puts(buff);                                               
; 6057 |         break;                                                         
; 6058 | case VFD_LIMIT:                                                        
; 6059 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 6060 |         scia_puts(buff);                                               
; 6061 |         break;                                                         
; 6062 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6048| 
        CMPB      AL,#4                 ; [CPU_] |6048| 
        B         $C$L13,LOS            ; [CPU_] |6048| 
        ; branchcc occurs ; [] |6048| 
        CMPB      AL,#5                 ; [CPU_] |6048| 
        B         $C$L12,EQ             ; [CPU_] |6048| 
        ; branchcc occurs ; [] |6048| 
        CMPB      AL,#6                 ; [CPU_] |6048| 
        B         $C$L16,NEQ            ; [CPU_] |6048| 
        ; branchcc occurs ; [] |6048| 
	.dwpsn	file "../Source/prod.c",line 6063,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6063 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |6063| 
	.dwpsn	file "../Source/prod.c",line 6064,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6064 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |6064| 
        ; branch occurs ; [] |6064| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 6059,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |6059| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6059| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6059| 
        ADDB      AL,#1                 ; [CPU_] |6059| 
        MOV       *-SP[3],AL            ; [CPU_] |6059| 
	.dwpsn	file "../Source/prod.c",line 6061,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |6061| 
        ; branch occurs ; [] |6061| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 6054,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |6054| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6054| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6054| 
        ADDB      AL,#1                 ; [CPU_] |6054| 
        MOV       *-SP[3],AL            ; [CPU_] |6054| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |6054| 
        MOV       *-SP[4],AL            ; [CPU_] |6054| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |6054| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6054| 
        ; call occurs [#_sprintf] ; [] |6054| 
	.dwpsn	file "../Source/prod.c",line 6056,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6056| 
$C$L15:    
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6056| 
        ; call occurs [#_scia_puts] ; [] |6056| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 6066,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6066 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6066| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6066| 
        ; call occurs [#_scia_puts] ; [] |6066| 
	.dwpsn	file "../Source/prod.c",line 6044,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6044| 
        ADDB      XAR2,#3               ; [CPU_] |6044| 
        MOV       AL,AR1                ; [CPU_] |6044| 
        CMPB      AL,#4                 ; [CPU_] |6044| 
        B         $C$L11,LT             ; [CPU_] |6044| 
        ; branchcc occurs ; [] |6044| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$184, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$184, DW_AT_TI_end_line(0x17b4)
	.dwattr $C$DW$184, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$184

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$194	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$194, DW_AT_name("print_sensor")
	.dwattr $C$DW$194, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$194, DW_AT_high_pc(0x00)
	.dwattr $C$DW$194, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$194, DW_AT_external
	.dwattr $C$DW$194, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$194, DW_AT_TI_begin_line(0x1740)
	.dwattr $C$DW$194, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$194, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5952,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$195	.dwtag  DW_TAG_variable
	.dwattr $C$DW$195, DW_AT_name("buff")
	.dwattr $C$DW$195, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$195, DW_AT_type(*$C$DW$T$384)
	.dwattr $C$DW$195, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$196	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$196, DW_AT_name("ss")
	.dwattr $C$DW$196, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$196, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$196, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$197	.dwtag  DW_TAG_variable
	.dwattr $C$DW$197, DW_AT_name("ss")
	.dwattr $C$DW$197, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$197, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$197, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$198	.dwtag  DW_TAG_variable
	.dwattr $C$DW$198, DW_AT_name("j")
	.dwattr $C$DW$198, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$198, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$198, DW_AT_location[DW_OP_reg0]

$C$DW$199	.dwtag  DW_TAG_variable
	.dwattr $C$DW$199, DW_AT_name("j")
	.dwattr $C$DW$199, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$199, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$199, DW_AT_location[DW_OP_breg20 -7]

$C$DW$200	.dwtag  DW_TAG_variable
	.dwattr $C$DW$200, DW_AT_name("j")
	.dwattr $C$DW$200, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$200, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$200, DW_AT_location[DW_OP_breg20 -7]

$C$DW$201	.dwtag  DW_TAG_variable
	.dwattr $C$DW$201, DW_AT_name("j")
	.dwattr $C$DW$201, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$201, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$201, DW_AT_location[DW_OP_breg20 -7]

$C$DW$202	.dwtag  DW_TAG_variable
	.dwattr $C$DW$202, DW_AT_name("j")
	.dwattr $C$DW$202, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$202, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$202, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5952 | void print_sensor(int ss) {                                            
; 5953 | int j;                                                                 
; 5954 | static char buff[100];                                                 
; 5956 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5952| 
	.dwpsn	file "../Source/prod.c",line 5957,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5957 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5958 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5959 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5957| 
        MPYB      P,T,#152              ; [CPU_] |5957| 
        MOVL      ACC,XAR3              ; [CPU_] |5957| 
        ADDL      ACC,P                 ; [CPU_] |5957| 
        MOVL      XAR2,ACC              ; [CPU_] |5957| 
        MOVB      XAR0,#118             ; [CPU_] |5957| 
        MOVL      *-SP[12],P            ; [CPU_] |5957| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5957| 
        B         $C$L28,EQ             ; [CPU_] |5957| 
        ; branchcc occurs ; [] |5957| 
	.dwpsn	file "../Source/prod.c",line 5960,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5960 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5960| 
        MOVL      ACC,XAR2              ; [CPU_] |5960| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5960| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5960| 
        ADDB      ACC,#82               ; [CPU_] |5960| 
        MOVL      XAR4,XAR1             ; [CPU_] |5960| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5960| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_sprintf")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5960| 
        ; call occurs [#_sprintf] ; [] |5960| 
	.dwpsn	file "../Source/prod.c",line 5961,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5961 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5961| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5961| 
        ; call occurs [#_scia_puts] ; [] |5961| 
	.dwpsn	file "../Source/prod.c",line 5962,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5962 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5962| 
        MOVL      ACC,XAR2              ; [CPU_] |5962| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5962| 
        ADDB      ACC,#98               ; [CPU_] |5962| 
        MOVL      XAR4,XAR1             ; [CPU_] |5962| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5962| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5962| 
        ; call occurs [#_sprintf] ; [] |5962| 
	.dwpsn	file "../Source/prod.c",line 5963,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5963 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5963| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5963| 
        ; call occurs [#_scia_puts] ; [] |5963| 
	.dwpsn	file "../Source/prod.c",line 5964,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5964 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5965 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5964| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5964| 
        MOVL      XAR4,XAR2             ; [CPU_] |5964| 
        ADDB      XAR4,#114             ; [CPU_] |5964| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5964| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5964| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5964| 
        MOVL      XAR4,XAR1             ; [CPU_] |5964| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5964| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_sprintf")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5964| 
        ; call occurs [#_sprintf] ; [] |5964| 
	.dwpsn	file "../Source/prod.c",line 5966,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5966 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5966| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5966| 
        ; call occurs [#_scia_puts] ; [] |5966| 
	.dwpsn	file "../Source/prod.c",line 5967,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5967 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5968 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5967| 
        MOVB      XAR0,#118             ; [CPU_] |5967| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5967| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5967| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5967| 
        ADDL      XAR4,ACC              ; [CPU_] |5967| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5967| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5967| 
        MOVL      XAR4,XAR1             ; [CPU_] |5967| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_sprintf")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5967| 
        ; call occurs [#_sprintf] ; [] |5967| 
	.dwpsn	file "../Source/prod.c",line 5969,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5969 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5969| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5969| 
        ; call occurs [#_scia_puts] ; [] |5969| 
	.dwpsn	file "../Source/prod.c",line 5970,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5970 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5971 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5970| 
        MOVB      XAR0,#124             ; [CPU_] |5970| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5970| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5970| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5970| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5970| 
        ANDB      AL,#0x0f              ; [CPU_] |5970| 
        MOV       ACC,AL << 1           ; [CPU_] |5970| 
        ADDL      XAR4,ACC              ; [CPU_] |5970| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5970| 
        MOVL      XAR4,XAR1             ; [CPU_] |5970| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5970| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_sprintf")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5970| 
        ; call occurs [#_sprintf] ; [] |5970| 
	.dwpsn	file "../Source/prod.c",line 5972,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5972 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5972| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5972| 
        ; call occurs [#_scia_puts] ; [] |5972| 
	.dwpsn	file "../Source/prod.c",line 5973,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5973 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5974 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5973| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5973| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5973| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5973| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5973| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5973| 
        MOV       ACC,AL << 1           ; [CPU_] |5973| 
        ADDL      ACC,XAR6              ; [CPU_] |5973| 
        MOVL      XAR4,ACC              ; [CPU_] |5973| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5973| 
        MOVL      XAR4,XAR1             ; [CPU_] |5973| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5973| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_sprintf")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5973| 
        ; call occurs [#_sprintf] ; [] |5973| 
	.dwpsn	file "../Source/prod.c",line 5975,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5975 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5975| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5975| 
        ; call occurs [#_scia_puts] ; [] |5975| 
	.dwpsn	file "../Source/prod.c",line 5976,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5976 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5977 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5976| 
        MOVB      XAR0,#126             ; [CPU_] |5976| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5976| 
        MOVL      XAR4,XAR1             ; [CPU_] |5976| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5976| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5976| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_sprintf")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5976| 
        ; call occurs [#_sprintf] ; [] |5976| 
	.dwpsn	file "../Source/prod.c",line 5978,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5978 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5978| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5978| 
        ; call occurs [#_scia_puts] ; [] |5978| 
	.dwpsn	file "../Source/prod.c",line 5979,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5980 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5979| 
        MOVB      XAR0,#122             ; [CPU_] |5979| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5979| 
        MOVL      XAR4,XAR1             ; [CPU_] |5979| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5979| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5979| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_sprintf")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5979| 
        ; call occurs [#_sprintf] ; [] |5979| 
	.dwpsn	file "../Source/prod.c",line 5981,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5981 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5981| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5981| 
        ; call occurs [#_scia_puts] ; [] |5981| 
	.dwpsn	file "../Source/prod.c",line 5982,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5982 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5983 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5982| 
        MOVB      XAR0,#222             ; [CPU_] |5982| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5982| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5982| 
        MOVL      XAR4,XAR1             ; [CPU_] |5982| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5982| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_sprintf")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5982| 
        ; call occurs [#_sprintf] ; [] |5982| 
	.dwpsn	file "../Source/prod.c",line 5984,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5984 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5984| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5984| 
        ; call occurs [#_scia_puts] ; [] |5984| 
	.dwpsn	file "../Source/prod.c",line 5985,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5985 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5986 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5985| 
        MOVB      XAR0,#224             ; [CPU_] |5985| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5985| 
        MOVL      XAR4,XAR1             ; [CPU_] |5985| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5985| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5985| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_sprintf")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5985| 
        ; call occurs [#_sprintf] ; [] |5985| 
	.dwpsn	file "../Source/prod.c",line 5987,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5987 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5987| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5987| 
        ; call occurs [#_scia_puts] ; [] |5987| 
	.dwpsn	file "../Source/prod.c",line 5988,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5988 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5989 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5988| 
        MOVB      XAR0,#228             ; [CPU_] |5988| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5988| 
        MOVL      XAR4,XAR1             ; [CPU_] |5988| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5988| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5988| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_sprintf")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5988| 
        ; call occurs [#_sprintf] ; [] |5988| 
	.dwpsn	file "../Source/prod.c",line 5990,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5990 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5990| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5990| 
        ; call occurs [#_scia_puts] ; [] |5990| 
	.dwpsn	file "../Source/prod.c",line 5991,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5991 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5992 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5991| 
        MOVB      XAR0,#230             ; [CPU_] |5991| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5991| 
        MOVL      XAR4,XAR1             ; [CPU_] |5991| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5991| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5991| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_sprintf")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5991| 
        ; call occurs [#_sprintf] ; [] |5991| 
	.dwpsn	file "../Source/prod.c",line 5993,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5993| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_scia_puts")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5993| 
        ; call occurs [#_scia_puts] ; [] |5993| 
	.dwpsn	file "../Source/prod.c",line 5995,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5995 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5996 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5997 |                         conf_data.sensor[ss].points);                  
; 5998 |         scia_puts(buff);                                               
; 6000 |         scia_puts("  Point:");                                         
; 6001 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 6002 |                 sprintf(buff, "%6i    ", j + 1);                       
; 6003 |                 scia_puts(buff);                                       
; 6005 |         scia_puts("\r\n  Mass: ");                                     
; 6006 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 6007 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 6008 |                 scia_puts(buff);                                       
; 6010 |         scia_puts("\r\n  Count:");                                     
; 6011 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 6012 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 6013 |                 scia_puts(buff);                                       
; 6015 |         scia_puts("\r\n  Slope:    ");                                 
; 6016 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 6017 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 6018 |                 scia_puts(buff);                                       
; 6020 |         scia_puts("\r\n  Intercept:");                                 
; 6021 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 6022 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 6023 |                 scia_puts(buff);                                       
; 6025 |         scia_puts("\r\n");                                             
; 6026 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5995| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5995| 
        CMPB      AL,#2                 ; [CPU_] |5995| 
        B         $C$L17,EQ             ; [CPU_] |5995| 
        ; branchcc occurs ; [] |5995| 
	.dwpsn	file "../Source/prod.c",line 6027,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | sprintf(buff, "  Slope:            %-10.5f",                           
; 6028 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |6027| 
        MOVB      XAR0,#178             ; [CPU_] |6027| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6027| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6027| 
        MOVL      XAR4,XAR1             ; [CPU_] |6027| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6027| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_sprintf")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6027| 
        ; call occurs [#_sprintf] ; [] |6027| 
	.dwpsn	file "../Source/prod.c",line 6029,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6029 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |6029| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_scia_puts")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6029| 
        ; call occurs [#_scia_puts] ; [] |6029| 
	.dwpsn	file "../Source/prod.c",line 6030,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6030 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 6031 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |6030| 
        MOVB      XAR0,#200             ; [CPU_] |6030| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6030| 
        MOVL      XAR4,XAR1             ; [CPU_] |6030| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6030| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6030| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_sprintf")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6030| 
        ; call occurs [#_sprintf] ; [] |6030| 
	.dwpsn	file "../Source/prod.c",line 6032,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6032 | scia_puts(buff);                                                       
; 6035 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |6032| 
        B         $C$L29,UNC            ; [CPU_] |6032| 
        ; branch occurs ; [] |6032| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5996,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5996| 
        MOVB      XAR0,#128             ; [CPU_] |5996| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5996| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5996| 
        MOVL      XAR4,XAR1             ; [CPU_] |5996| 
        MOV       *-SP[3],AL            ; [CPU_] |5996| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_sprintf")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5996| 
        ; call occurs [#_sprintf] ; [] |5996| 
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5998| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_scia_puts")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5998| 
        ; call occurs [#_scia_puts] ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 6000,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |6000| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6000| 
        ; call occurs [#_scia_puts] ; [] |6000| 
	.dwpsn	file "../Source/prod.c",line 6001,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |6001| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 6001,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |6001| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |6001| 
        B         $C$L27,LT             ; [CPU_] |6001| 
        ; branchcc occurs ; [] |6001| 
	.dwpsn	file "../Source/prod.c",line 6005,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |6005| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6005| 
        ; call occurs [#_scia_puts] ; [] |6005| 
	.dwpsn	file "../Source/prod.c",line 6006,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |6006| 
        MOV       *-SP[7],AL            ; [CPU_] |6006| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 6006,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |6006| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |6006| 
        B         $C$L26,LT             ; [CPU_] |6006| 
        ; branchcc occurs ; [] |6006| 
	.dwpsn	file "../Source/prod.c",line 6010,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |6010| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6010| 
        ; call occurs [#_scia_puts] ; [] |6010| 
	.dwpsn	file "../Source/prod.c",line 6011,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |6011| 
        MOV       *-SP[7],AL            ; [CPU_] |6011| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 6011,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |6011| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |6011| 
        B         $C$L25,LT             ; [CPU_] |6011| 
        ; branchcc occurs ; [] |6011| 
	.dwpsn	file "../Source/prod.c",line 6015,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |6015| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6015| 
        ; call occurs [#_scia_puts] ; [] |6015| 
	.dwpsn	file "../Source/prod.c",line 6016,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |6016| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 6016,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |6016| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |6016| 
        ADDB      AL,#-1                ; [CPU_] |6016| 
        CMP       AL,*-SP[7]            ; [CPU_] |6016| 
        B         $C$L24,GT             ; [CPU_] |6016| 
        ; branchcc occurs ; [] |6016| 
	.dwpsn	file "../Source/prod.c",line 6020,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |6020| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6020| 
        ; call occurs [#_scia_puts] ; [] |6020| 
	.dwpsn	file "../Source/prod.c",line 6021,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |6021| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 6021,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |6021| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |6021| 
        ADDB      AL,#-1                ; [CPU_] |6021| 
        CMP       AL,*-SP[7]            ; [CPU_] |6021| 
        B         $C$L23,GT             ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
	.dwpsn	file "../Source/prod.c",line 6025,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6025| 
	.dwpsn	file "../Source/prod.c",line 6026,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |6026| 
        ; branch occurs ; [] |6026| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 6022,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |6022| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6022| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6022| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |6022| 
        MOV       ACC,AL << 1           ; [CPU_] |6022| 
        ADDL      ACC,XAR6              ; [CPU_] |6022| 
        ADDL      ACC,XAR3              ; [CPU_] |6022| 
        MOVL      XAR4,ACC              ; [CPU_] |6022| 
        MOVB      XAR0,#200             ; [CPU_] |6022| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |6022| 
        MOVL      XAR4,XAR1             ; [CPU_] |6022| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6022| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6022| 
        ; call occurs [#_sprintf] ; [] |6022| 
	.dwpsn	file "../Source/prod.c",line 6023,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |6023| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6023| 
        ; call occurs [#_scia_puts] ; [] |6023| 
	.dwpsn	file "../Source/prod.c",line 6021,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |6021| 
        B         $C$L22,UNC            ; [CPU_] |6021| 
        ; branch occurs ; [] |6021| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 6017,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |6017| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6017| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6017| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |6017| 
        MOV       ACC,AL << 1           ; [CPU_] |6017| 
        ADDL      ACC,XAR6              ; [CPU_] |6017| 
        ADDL      ACC,XAR3              ; [CPU_] |6017| 
        MOVL      XAR4,ACC              ; [CPU_] |6017| 
        MOVB      XAR0,#178             ; [CPU_] |6017| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |6017| 
        MOVL      XAR4,XAR1             ; [CPU_] |6017| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6017| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_sprintf")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6017| 
        ; call occurs [#_sprintf] ; [] |6017| 
	.dwpsn	file "../Source/prod.c",line 6018,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |6018| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6018| 
        ; call occurs [#_scia_puts] ; [] |6018| 
	.dwpsn	file "../Source/prod.c",line 6016,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |6016| 
        B         $C$L21,UNC            ; [CPU_] |6016| 
        ; branch occurs ; [] |6016| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 6012,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |6012| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6012| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6012| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |6012| 
        ADDL      ACC,XAR6              ; [CPU_] |6012| 
        ADDL      ACC,XAR3              ; [CPU_] |6012| 
        MOVL      XAR4,ACC              ; [CPU_] |6012| 
        MOVB      XAR0,#154             ; [CPU_] |6012| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |6012| 
        MOVL      XAR4,XAR1             ; [CPU_] |6012| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6012| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_sprintf")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6012| 
        ; call occurs [#_sprintf] ; [] |6012| 
	.dwpsn	file "../Source/prod.c",line 6013,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |6013| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6013| 
        ; call occurs [#_scia_puts] ; [] |6013| 
	.dwpsn	file "../Source/prod.c",line 6011,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |6011| 
	.dwpsn	file "../Source/prod.c",line 6013,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |6013| 
	.dwpsn	file "../Source/prod.c",line 6011,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |6011| 
        ; branch occurs ; [] |6011| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 6007,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |6007| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6007| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6007| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |6007| 
        ADDL      ACC,XAR6              ; [CPU_] |6007| 
        ADDL      ACC,XAR3              ; [CPU_] |6007| 
        MOVL      XAR4,ACC              ; [CPU_] |6007| 
        MOVB      XAR0,#130             ; [CPU_] |6007| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |6007| 
        MOVL      XAR4,XAR1             ; [CPU_] |6007| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6007| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_sprintf")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6007| 
        ; call occurs [#_sprintf] ; [] |6007| 
	.dwpsn	file "../Source/prod.c",line 6008,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |6008| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6008| 
        ; call occurs [#_scia_puts] ; [] |6008| 
	.dwpsn	file "../Source/prod.c",line 6006,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |6006| 
	.dwpsn	file "../Source/prod.c",line 6008,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |6008| 
	.dwpsn	file "../Source/prod.c",line 6006,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |6006| 
        ; branch occurs ; [] |6006| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 6002,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |6002| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |6002| 
        ADD       AH,AL                 ; [CPU_] |6002| 
        MOV       *-SP[7],AH            ; [CPU_] |6002| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6002| 
        MOVL      XAR4,XAR1             ; [CPU_] |6002| 
        MOV       *-SP[3],AH            ; [CPU_] |6002| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_sprintf")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6002| 
        ; call occurs [#_sprintf] ; [] |6002| 
	.dwpsn	file "../Source/prod.c",line 6003,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |6003| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_scia_puts")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6003| 
        ; call occurs [#_scia_puts] ; [] |6003| 
        MOV       AL,*-SP[7]            ; [CPU_] |6003| 
	.dwpsn	file "../Source/prod.c",line 6001,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |6001| 
        ; branch occurs ; [] |6001| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5958,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5958| 
$C$L29:    
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5958| 
        ; call occurs [#_scia_puts] ; [] |5958| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$194, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$194, DW_AT_TI_end_line(0x1794)
	.dwattr $C$DW$194, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$194

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$249	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$249, DW_AT_name("print_limits")
	.dwattr $C$DW$249, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$249, DW_AT_high_pc(0x00)
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$249, DW_AT_external
	.dwattr $C$DW$249, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$249, DW_AT_TI_begin_line(0x17db)
	.dwattr $C$DW$249, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$249, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6107,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$250	.dwtag  DW_TAG_variable
	.dwattr $C$DW$250, DW_AT_name("buff")
	.dwattr $C$DW$250, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$250, DW_AT_type(*$C$DW$T$385)
	.dwattr $C$DW$250, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6107 | void print_limits(void) {                                              
; 6108 | int ii;                                                                
; 6109 | static char buff[64];                                                  
; 6110 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$251	.dwtag  DW_TAG_variable
	.dwattr $C$DW$251, DW_AT_name("ii")
	.dwattr $C$DW$251, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$251, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$251, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$252	.dwtag  DW_TAG_variable
	.dwattr $C$DW$252, DW_AT_name("up")
	.dwattr $C$DW$252, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$252, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$252, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6112,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6112 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6112| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6112| 
        ; call occurs [#_scia_puts] ; [] |6112| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6114,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6114 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6114| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6115,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6115 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6115| 
        MOVB      AL,#1                 ; [CPU_] |6115| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6115| 
        ADD       AL,*-SP[9]            ; [CPU_] |6115| 
        MOVL      XAR4,XAR2             ; [CPU_] |6115| 
        MOV       *-SP[3],AL            ; [CPU_] |6115| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_sprintf")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6115| 
        ; call occurs [#_sprintf] ; [] |6115| 
	.dwpsn	file "../Source/prod.c",line 6116,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6116 | scia_puts(buff);                                                       
; 6118 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6116| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6116| 
        ; call occurs [#_scia_puts] ; [] |6116| 
	.dwpsn	file "../Source/prod.c",line 6120,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6120 | switch (conf_data.lim[ii].what) {                                      
; 6121 | case VFD_LOAD:                                                         
; 6122 | case VFD_PEAK:                                                         
; 6123 | case VFD_VALL:                                                         
; 6124 |         up =                                                           
; 6125 |                         UNITS[0x0f                                     
; 6126 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6127 |         break;                                                         
; 6128 | case VFD_POSI:                                                         
; 6129 |         up = POS_U;                                                    
; 6130 |         break;                                                         
; 6131 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6120| 
        B         $C$L40,NTC            ; [CPU_] |6120| 
        ; branchcc occurs ; [] |6120| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6120| 
        CMPB      AL,#2                 ; [CPU_] |6120| 
        B         $C$L32,LOS            ; [CPU_] |6120| 
        ; branchcc occurs ; [] |6120| 
        CMPB      AL,#3                 ; [CPU_] |6120| 
        B         $C$L31,EQ             ; [CPU_] |6120| 
        ; branchcc occurs ; [] |6120| 
        CMPB      AL,#4                 ; [CPU_] |6120| 
        B         $C$L33,NEQ            ; [CPU_] |6120| 
        ; branchcc occurs ; [] |6120| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6132,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6132 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6132| 
	.dwpsn	file "../Source/prod.c",line 6133,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6133 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6133| 
        ; branch occurs ; [] |6133| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6129,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6129| 
	.dwpsn	file "../Source/prod.c",line 6130,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6130| 
        ; branch occurs ; [] |6130| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6124,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6124| 
        MOV       T,#10                 ; [CPU_] |6124| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6124| 
        ADDL      ACC,XAR6              ; [CPU_] |6124| 
        MOVL      XAR4,ACC              ; [CPU_] |6124| 
        MOVB      XAR0,#42              ; [CPU_] |6124| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6124| 
        MPYB      ACC,T,#152            ; [CPU_] |6124| 
        ADDL      ACC,XAR6              ; [CPU_] |6124| 
        MOVL      XAR4,ACC              ; [CPU_] |6124| 
        MOVB      XAR0,#125             ; [CPU_] |6124| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6124| 
        ANDB      AL,#0x0f              ; [CPU_] |6124| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6124| 
        MOV       ACC,AL << 1           ; [CPU_] |6124| 
        ADDL      XAR4,ACC              ; [CPU_] |6124| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6124| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6136,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6136 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6137 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6136| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6136| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6136| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6136| 
        ADDL      XAR4,ACC              ; [CPU_] |6136| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6136| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6136| 
        MOVL      XAR4,XAR2             ; [CPU_] |6136| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6136| 
        ADDB      AL,#1                 ; [CPU_] |6136| 
        MOV       *-SP[5],AL            ; [CPU_] |6136| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_sprintf")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6136| 
        ; call occurs [#_sprintf] ; [] |6136| 
	.dwpsn	file "../Source/prod.c",line 6138,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6138 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6138| 
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_scia_puts")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6138| 
        ; call occurs [#_scia_puts] ; [] |6138| 
	.dwpsn	file "../Source/prod.c",line 6139,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6139 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6140 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6141 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6142 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6139| 
        B         $C$L34,TC             ; [CPU_] |6139| 
        ; branchcc occurs ; [] |6139| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6139| 
        B         $C$L35,UNC            ; [CPU_] |6139| 
        ; branch occurs ; [] |6139| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6139| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6139| 
        B         $C$L36,TC             ; [CPU_] |6139| 
        ; branchcc occurs ; [] |6139| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6139| 
        B         $C$L37,UNC            ; [CPU_] |6139| 
        ; branch occurs ; [] |6139| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6139| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6139| 
        B         $C$L38,TC             ; [CPU_] |6139| 
        ; branchcc occurs ; [] |6139| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6139| 
        B         $C$L39,UNC            ; [CPU_] |6139| 
        ; branch occurs ; [] |6139| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6139| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6139| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6139| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6139| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6139| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6139| 
        MOVL      XAR4,XAR2             ; [CPU_] |6139| 
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_name("_sprintf")
	.dwattr $C$DW$258, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6139| 
        ; call occurs [#_sprintf] ; [] |6139| 
	.dwpsn	file "../Source/prod.c",line 6143,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6143 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6143| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("_scia_puts")
	.dwattr $C$DW$259, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6143| 
        ; call occurs [#_scia_puts] ; [] |6143| 
	.dwpsn	file "../Source/prod.c",line 6144,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6144 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6145 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6144| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6144| 
        MOVL      XAR4,XAR2             ; [CPU_] |6144| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6144| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6144| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6144| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("_sprintf")
	.dwattr $C$DW$260, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6144| 
        ; call occurs [#_sprintf] ; [] |6144| 
	.dwpsn	file "../Source/prod.c",line 6146,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6146 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6146| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_scia_puts")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6146| 
        ; call occurs [#_scia_puts] ; [] |6146| 
	.dwpsn	file "../Source/prod.c",line 6147,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6147 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6148 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6147| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6147| 
        MOVL      XAR4,XAR2             ; [CPU_] |6147| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6147| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6147| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6147| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_sprintf")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6147| 
        ; call occurs [#_sprintf] ; [] |6147| 
	.dwpsn	file "../Source/prod.c",line 6149,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6149 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6149| 
	.dwpsn	file "../Source/prod.c",line 6150,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6150 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6150| 
        ; branch occurs ; [] |6150| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6151,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6151 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6151| 
$C$L41:    
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6151| 
        ; call occurs [#_scia_puts] ; [] |6151| 
	.dwpsn	file "../Source/prod.c",line 6114,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6114| 
        INC       *-SP[9]               ; [CPU_] |6114| 
        MOV       AL,*-SP[9]            ; [CPU_] |6114| 
        CMPB      AL,#4                 ; [CPU_] |6114| 
        B         $C$L30,LT             ; [CPU_] |6114| 
        ; branchcc occurs ; [] |6114| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$249, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$249, DW_AT_TI_end_line(0x180a)
	.dwattr $C$DW$249, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$249

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$265	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$265, DW_AT_name("print_dac")
	.dwattr $C$DW$265, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$265, DW_AT_high_pc(0x00)
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$265, DW_AT_external
	.dwattr $C$DW$265, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$265, DW_AT_TI_begin_line(0x17b7)
	.dwattr $C$DW$265, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$265, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 6071,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$266	.dwtag  DW_TAG_variable
	.dwattr $C$DW$266, DW_AT_name("buff")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$385)
	.dwattr $C$DW$266, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 6071 | void print_dac(void) {                                                 
; 6072 | int l;                                                                 
; 6073 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$267	.dwtag  DW_TAG_variable
	.dwattr $C$DW$267, DW_AT_name("l")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$267, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 6075,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6075 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |6075| 
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_name("_scia_puts")
	.dwattr $C$DW$268, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6075| 
        ; call occurs [#_scia_puts] ; [] |6075| 
	.dwpsn	file "../Source/prod.c",line 6077,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6077 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6077| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 6078,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6078 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |6078| 
        MOVB      AL,#1                 ; [CPU_] |6078| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6078| 
        ADD       AL,AR1                ; [CPU_] |6078| 
        MOV       *-SP[3],AL            ; [CPU_] |6078| 
        MOVL      XAR4,XAR3             ; [CPU_] |6078| 
$C$DW$269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$269, DW_AT_name("_sprintf")
	.dwattr $C$DW$269, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6078| 
        ; call occurs [#_sprintf] ; [] |6078| 
	.dwpsn	file "../Source/prod.c",line 6079,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6079 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6079| 
$C$DW$270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$270, DW_AT_name("_scia_puts")
	.dwattr $C$DW$270, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6079| 
        ; call occurs [#_scia_puts] ; [] |6079| 
	.dwpsn	file "../Source/prod.c",line 6081,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6081 | sprintf(buff,                                                          
; 6082 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 6083 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 6084 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |6081| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6081| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6081| 
        MOVL      XAR4,XAR3             ; [CPU_] |6081| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6081| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6081| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6081| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |6081| 
        MOVL      *-SP[8],ACC           ; [CPU_] |6081| 
$C$DW$271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$271, DW_AT_name("_sprintf")
	.dwattr $C$DW$271, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6081| 
        ; call occurs [#_sprintf] ; [] |6081| 
	.dwpsn	file "../Source/prod.c",line 6085,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6085 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6085| 
$C$DW$272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$272, DW_AT_name("_scia_puts")
	.dwattr $C$DW$272, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6085| 
        ; call occurs [#_scia_puts] ; [] |6085| 
	.dwpsn	file "../Source/prod.c",line 6087,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6087 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |6087| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6087| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6087| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6087| 
        ADDL      XAR4,ACC              ; [CPU_] |6087| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6087| 
        MOVL      XAR4,XAR3             ; [CPU_] |6087| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6087| 
$C$DW$273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$273, DW_AT_name("_sprintf")
	.dwattr $C$DW$273, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6087| 
        ; call occurs [#_sprintf] ; [] |6087| 
	.dwpsn	file "../Source/prod.c",line 6088,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6088 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6088| 
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("_scia_puts")
	.dwattr $C$DW$274, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6088| 
        ; call occurs [#_scia_puts] ; [] |6088| 
	.dwpsn	file "../Source/prod.c",line 6090,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6090 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6090| 
        CMPB      AL,#7                 ; [CPU_] |6090| 
        B         $C$L43,EQ             ; [CPU_] |6090| 
        ; branchcc occurs ; [] |6090| 
	.dwpsn	file "../Source/prod.c",line 6091,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6091 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |6091| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6091| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6091| 
        ADDB      AL,#1                 ; [CPU_] |6091| 
        MOVL      XAR4,XAR3             ; [CPU_] |6091| 
        MOV       *-SP[3],AL            ; [CPU_] |6091| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("_sprintf")
	.dwattr $C$DW$275, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6091| 
        ; call occurs [#_sprintf] ; [] |6091| 
	.dwpsn	file "../Source/prod.c",line 6092,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6092 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6092| 
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("_scia_puts")
	.dwattr $C$DW$276, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6092| 
        ; call occurs [#_scia_puts] ; [] |6092| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 6095,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6095 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 6096 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 6097 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 6098 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6099 |         scia_puts(buff);                                               
; 6100 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6095| 
        CMPB      AL,#3                 ; [CPU_] |6095| 
        B         $C$L44,EQ             ; [CPU_] |6095| 
        ; branchcc occurs ; [] |6095| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |6095| 
        CMPB      AL,#4                 ; [CPU_] |6095| 
        B         $C$L44,EQ             ; [CPU_] |6095| 
        ; branchcc occurs ; [] |6095| 
	.dwpsn	file "../Source/prod.c",line 6101,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6101 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6101| 
        B         $C$L45,UNC            ; [CPU_] |6101| 
        ; branch occurs ; [] |6101| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 6097,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |6097| 
        MOVB      XAR0,#8               ; [CPU_] |6097| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6097| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6097| 
        MOVB      XAR0,#10              ; [CPU_] |6097| 
        MOVL      XAR4,XAR3             ; [CPU_] |6097| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6097| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6097| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6097| 
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("_sprintf")
	.dwattr $C$DW$277, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6097| 
        ; call occurs [#_sprintf] ; [] |6097| 
	.dwpsn	file "../Source/prod.c",line 6099,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6099| 
$C$L45:    
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_name("_scia_puts")
	.dwattr $C$DW$278, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6099| 
        ; call occurs [#_scia_puts] ; [] |6099| 
	.dwpsn	file "../Source/prod.c",line 6077,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6077| 
        ADDB      XAR2,#12              ; [CPU_] |6077| 
        MOV       AL,AR1                ; [CPU_] |6077| 
        CMPB      AL,#4                 ; [CPU_] |6077| 
        B         $C$L42,LT             ; [CPU_] |6077| 
        ; branchcc occurs ; [] |6077| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$279, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$265, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$265, DW_AT_TI_end_line(0x17d8)
	.dwattr $C$DW$265, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$265

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$280	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$280, DW_AT_name("print_channel")
	.dwattr $C$DW$280, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$280, DW_AT_high_pc(0x00)
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$280, DW_AT_external
	.dwattr $C$DW$280, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$280, DW_AT_TI_begin_line(0x1725)
	.dwattr $C$DW$280, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$280, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5925,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("buff")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$384)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$282	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$282, DW_AT_name("ch")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("ch")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5925 | void print_channel(Uint16 ch) {                                        
; 5926 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5925| 
	.dwpsn	file "../Source/prod.c",line 5928,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5928| 
        MOVZ      AR1,AR2               ; [CPU_] |5928| 
        MOVB      AH,#1                 ; [CPU_] |5928| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5928| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5928| 
        ADD       AH,AR1                ; [CPU_] |5928| 
        MOVL      XAR4,XAR3             ; [CPU_] |5928| 
        MOV       *-SP[3],AH            ; [CPU_] |5928| 
$C$DW$284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$284, DW_AT_name("_sprintf")
	.dwattr $C$DW$284, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5928| 
        ; call occurs [#_sprintf] ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5929,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5929 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5929| 
$C$DW$285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$285, DW_AT_name("_scia_puts")
	.dwattr $C$DW$285, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5929| 
        ; call occurs [#_scia_puts] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5931,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5931 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5931| 
        MOV       T,AR1                 ; [CPU_] |5931| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5931| 
        MPYU      ACC,T,AL              ; [CPU_] |5931| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5931| 
        ADDL      XAR1,ACC              ; [CPU_] |5931| 
        MOVB      XAR0,#44              ; [CPU_] |5931| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5931| 
        MOVL      XAR4,XAR3             ; [CPU_] |5931| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5931| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5931| 
$C$DW$286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$286, DW_AT_name("_sprintf")
	.dwattr $C$DW$286, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5931| 
        ; call occurs [#_sprintf] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5932,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5932 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5932| 
$C$DW$287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$287, DW_AT_name("_scia_puts")
	.dwattr $C$DW$287, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5932| 
        ; call occurs [#_scia_puts] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5942,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5942| 
        MOVB      XAR0,#42              ; [CPU_] |5942| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5942| 
        MOVL      XAR4,XAR3             ; [CPU_] |5942| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5942| 
        ADDB      AL,#1                 ; [CPU_] |5942| 
        MOV       *-SP[3],AL            ; [CPU_] |5942| 
$C$DW$288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$288, DW_AT_name("_sprintf")
	.dwattr $C$DW$288, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5942| 
        ; call occurs [#_sprintf] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5943,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5943 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5943| 
$C$DW$289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$289, DW_AT_name("_scia_puts")
	.dwattr $C$DW$289, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5945,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5945| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5945| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5945| 
        B         $C$L46,EQ             ; [CPU_] |5945| 
        ; branchcc occurs ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5946,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5946 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5946| 
$C$DW$290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$290, DW_AT_name("_scia_puts")
	.dwattr $C$DW$290, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5946| 
        ; call occurs [#_scia_puts] ; [] |5946| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$291, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$280, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$280, DW_AT_TI_end_line(0x173c)
	.dwattr $C$DW$280, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$280

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$292	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$292, DW_AT_name("matchTag")
	.dwattr $C$DW$292, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$292, DW_AT_high_pc(0x00)
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$292, DW_AT_external
	.dwattr $C$DW$292, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$292, DW_AT_TI_begin_line(0x1701)
	.dwattr $C$DW$292, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$292, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5889,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$293	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$293, DW_AT_name("ch")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5889 | void matchTag(Uint16 ch) {                                             
; 5890 | Uint16 sns;                                                            
; 5891 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("ch")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("sns")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("tag")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5893,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5893 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5893| 
	.dwpsn	file "../Source/prod.c",line 5889,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5889| 
	.dwpsn	file "../Source/prod.c",line 5893,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5893| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5893| 
        MOVL      XAR1,ACC              ; [CPU_] |5893| 
	.dwpsn	file "../Source/prod.c",line 5895,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5895 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5895| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5895| 
	.dwpsn	file "../Source/prod.c",line 5893,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5893| 
	.dwpsn	file "../Source/prod.c",line 5895,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5895| 
        B         $C$L50,EQ             ; [CPU_] |5895| 
        ; branchcc occurs ; [] |5895| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5895| 
        B         $C$L50,HIS            ; [CPU_] |5895| 
        ; branchcc occurs ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5899,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5899 | tag = tagid(ch);                                                       
; 5900 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5901 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$297, DW_AT_name("_tagid")
	.dwattr $C$DW$297, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5899| 
        ; call occurs [#_tagid] ; [] |5899| 
        MOVB      XAR6,#0               ; [CPU_] |5899| 
        MOVL      XAR3,ACC              ; [CPU_] |5899| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5899| 
        MOV       *-SP[2],#0            ; [CPU_] |5899| 
        MOV       *-SP[1],#0            ; [CPU_] |5899| 
$C$DW$298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$298, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$298, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5899| 
        ; call occurs [#ULL$$CMP] ; [] |5899| 
        CMPB      AL,#0                 ; [CPU_] |5899| 
        B         $C$L50,EQ             ; [CPU_] |5899| 
        ; branchcc occurs ; [] |5899| 
        MOVB      ACC,#0                ; [CPU_] |5899| 
        SUBB      ACC,#1                ; [CPU_] |5899| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5899| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5899| 
        MOVL      ACC,XAR3              ; [CPU_] |5899| 
$C$DW$299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$299, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$299, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5899| 
        ; call occurs [#ULL$$CMP] ; [] |5899| 
        CMPB      AL,#0                 ; [CPU_] |5899| 
        B         $C$L50,EQ             ; [CPU_] |5899| 
        ; branchcc occurs ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5902,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5902 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5902| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5902| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5902| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5904,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5904 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5906 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5904| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5907,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | continue;                       // not calibrated                      
; 5910 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5907| 
        B         $C$L48,EQ             ; [CPU_] |5907| 
        ; branchcc occurs ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5911,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5911 | continue;                       // doesn't match, skip                 
; 5914 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5911| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5911| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5911| 
        MOVL      ACC,XAR3              ; [CPU_] |5911| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5911| 
$C$DW$300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$300, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$300, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5911| 
        ; call occurs [#ULL$$CMP] ; [] |5911| 
        CMPB      AL,#0                 ; [CPU_] |5911| 
        B         $C$L49,EQ             ; [CPU_] |5911| 
        ; branchcc occurs ; [] |5911| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5904,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5904| 
        MOVL      XAR0,ACC              ; [CPU_] |5904| 
        ADDB      XAR4,#1               ; [CPU_] |5904| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5904| 
        ; branchcc occurs ; [] |5904| 
        B         $C$L50,UNC            ; [CPU_] |5904| 
        ; branch occurs ; [] |5904| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5915,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5915 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5915| 
	.dwpsn	file "../Source/prod.c",line 5916,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5916 | conf_data.ch[ch].ci = sns;                                             
; 5918 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5916| 
        MOV       T,*-SP[5]             ; [CPU_] |5916| 
        MPYU      ACC,T,AL              ; [CPU_] |5916| 
        ADDL      ACC,XAR2              ; [CPU_] |5916| 
        MOVL      XAR5,ACC              ; [CPU_] |5916| 
        MOVB      XAR0,#42              ; [CPU_] |5916| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5916| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$301, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$292, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$292, DW_AT_TI_end_line(0x1721)
	.dwattr $C$DW$292, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$292

	.sect	".text"
	.clink
	.global	_main

$C$DW$302	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$302, DW_AT_name("main")
	.dwattr $C$DW$302, DW_AT_low_pc(_main)
	.dwattr $C$DW$302, DW_AT_high_pc(0x00)
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$302, DW_AT_external
	.dwattr $C$DW$302, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$302, DW_AT_TI_begin_line(0x7f)
	.dwattr $C$DW$302, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$302, DW_AT_TI_max_frame_size(-150)
	.dwpsn	file "../Source/prod.c",line 127,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("buff")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$378)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("cmdbuff")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$378)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 127 | void main(void) {                                                      
; 128 | int i, j, k;                            // general purpose indics      
; 130 | double version;                 // for firmware version print          
; 132 | static char buff[1024];         // output buffer                       
; 134 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 135 | Uint16 cmdlen;                  // the length of the command           
; 137 | adccnt_t* cntp;                 // point to ad7738 count data          
; 138 | adcwt_t* wtp;                           // point to ad7738 load data   
; 140 | Uint16 ch;                              // channel number              
; 141 | Uint16 ss;                              // sensor number               
; 142 | Uint16 pt;                              // point number                
; 144 | Uint16 tagch = 0;                       // channel number for autoid   
; 146 | char unsaved = 0;                       // change to setup not saved   
; 148 | Uint16 slen;                            // string lenght               
; 150 | double scale;                           // input float value           
; 152 | Uint16 flash_ret;                       // return value of flash access
; 153 | double tempvalue;                       // temperature value in F      
; 155 | double volt[3];                 // input value in mv/v                 
; 156 | long long dsum[2];                      // read count for input value  
; 157 | Uint16 dacc[3];                 // dac out count                       
; 158 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 160 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 162 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 164 | Uint16 line;                            // vfd diplay line             
; 166 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 168 | int ds_en = 0;                  // enabled for data streamming         
; 169 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 170 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 172 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 173 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 174 | Uint16 ds_sn = 0;                       // data packet serial number   
; 175 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 177 | Uint32 temp32;                                                         
; 178 | float ftemp;                                                           
; 179 | long templg;                                                           
; 180 | Uint16 temp16;                                                         
; 181 | int tempint;                                                           
; 182 | double tempft;                                                         
; 184 | Uint16 *intp;                                                          
; 186 | const char *ccp;                                                       
; 188 | #ifdef SDHCCARD                                                        
; 189 | FATFS *fs;                              // pointer to fatfs            
; 191 | FRESULT res;// Fatfs reseult code                                      
; 192 | FIL *fp;// pointer to file object                                      
; 194 | Uint32 fsize;                                                          
; 196 | char sd_write;// should write to SD card                               
; 197 | char sd_close;// file need to be closed                                
; 198 | Uint32 sd_cnt;                                                         
; 200 | FILINFO Finfo;                                                         
; 201 | DIR dir;// Directory object                                            
; 202 | long p1;                                                               
; 203 | UINT s1, s2;                                                           
; 205 | rtc.year = 2010;                                                       
; 206 | rtc.month = 8;                                                         
; 207 | rtc.mday = 27;                                                         
; 208 | rtc.hour = 12;                                                         
; 209 | rtc.min = 0;                                                           
; 210 | rtc.sec = 0;                                                           
; 211 | #endif                                                                 
; 213 | // KS - 2014-02-11                                                     
; 214 | //DownloadFlag = 0;     // removed for release                         
; 216 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 148           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 131 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR1   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U144
;* AR1   assigned to $O$U333
;* AR1   assigned to $O$U362
;* AR1   assigned to $O$U575
;* AR1   assigned to $O$U703
;* AR1   assigned to $O$U802
;* AR1   assigned to $O$U839
;* AR5   assigned to $O$U855
;* AL    assigned to $O$U1012
;* AR1   assigned to $O$U990
;* AR1   assigned to $O$U1081
;* AR1   assigned to $O$U980
;* AR6   assigned to $O$U1295
;* AR1   assigned to $O$U1323
;* AR7   assigned to $O$U1554
;* XT    assigned to $O$U1581
;* PL    assigned to $O$U1582
;* AR5   assigned to $O$U1606
;* PL    assigned to $O$U1611
;* PL    assigned to $O$U1618
;* AR7   assigned to $O$U1620
;* AR5   assigned to $O$U1621
;* AR5   assigned to $O$U1636
;* XT    assigned to $O$U1678
;* PL    assigned to $O$U1679
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L37
;* AR3   assigned to $O$L49
;* AR3   assigned to $O$L52
;* AR3   assigned to $O$L106
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("ccp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_breg20 -104]

$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("tempft")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_breg20 -12]

$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("templg")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_breg20 -14]

$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("ds_dec")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_breg20 -49]

$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("ds_dn")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_breg20 -50]

$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("ds_stop")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_breg20 -51]

$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("ds_en")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_breg20 -52]

$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("bincmdresult")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_breg20 -47]

$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("line")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_breg20 -53]

$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("daccbm")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_breg20 -54]

$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("tempvalue")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_breg20 -106]

$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("scale")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_breg20 -16]

$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("unsaved")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_breg20 -48]

$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("tagch")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_breg20 -141]

$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("ss")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_breg20 -55]

$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("ch")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_breg20 -56]

$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("version")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U36
;* AR7   assigned to $O$U36
;* AR4   assigned to $O$U36
;* AR7   assigned to $O$U36
;* AR5   assigned to $O$U40
;* AR5   assigned to $O$U40
;* AR1   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR5   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR5   assigned to $O$K117
;* AR7   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR7   assigned to $O$K117
;* AR7   assigned to $O$K117
;* AR5   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR7   assigned to $O$K117
;* AR1   assigned to $O$K117
;* AR1   assigned to $O$K117
;* AR1   assigned to $O$K117
;* AR1   assigned to $O$K117
;* AR1   assigned to $O$K117
;* AR1   assigned to $O$K117
;* AR7   assigned to $O$K117
;* AR5   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR4   assigned to $O$K117
;* AR7   assigned to $O$K117
;* AR5   assigned to $O$U259
;* AR1   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR7   assigned to $O$U259
;* AR7   assigned to $O$U259
;* AR7   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR5   assigned to $O$U259
;* AR5   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR1   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR5   assigned to $O$U259
;* AR1   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR1   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR4   assigned to $O$U259
;* AR1   assigned to $O$U259
;* AR5   assigned to $O$K30
;* AR1   assigned to $O$K30
;* AR1   assigned to $O$K30
;* AR1   assigned to $O$K30
;* AR1   assigned to $O$U431
;* AR1   assigned to $O$U431
;* AR1   assigned to $O$U431
;* AR1   assigned to $O$U409
;* AR1   assigned to $O$U409
;* AR1   assigned to $O$U409
;* AR1   assigned to $O$U409
;* AR1   assigned to $O$U409
;* AR5   assigned to $O$U409
;* AR7   assigned to $O$U409
;* AR1   assigned to $O$U402
;* AR1   assigned to $O$U598
;* AR1   assigned to $O$U598
;* AR1   assigned to $O$U643
;* AR1   assigned to $O$U643
;* AR4   assigned to $O$K830
;* AR4   assigned to $O$K830
;* AR1   assigned to $O$K830
;* AR4   assigned to $O$K830
;* AR1   assigned to $O$K830
;* AR1   assigned to $O$K830
;* AR3   assigned to $O$K830
;* AR3   assigned to $O$K830
;* AR5   assigned to $O$K830
;* AR5   assigned to $O$K830
;* AR1   assigned to $O$K830
;* AR1   assigned to $O$U884
;* AR1   assigned to $O$U884
;* AR1   assigned to $O$U906
;* AR1   assigned to $O$U906
;* AR1   assigned to $O$U906
;* AR6   assigned to $O$U864
;* AL    assigned to $O$U864
;* AR1   assigned to $O$U932
;* AR1   assigned to $O$U932
;* AR1   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR5   assigned to $O$U1011
;* AR5   assigned to $O$U1011
;* AR5   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR4   assigned to $O$U1011
;* AR4   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR7   assigned to $O$U1011
;* AR1   assigned to $O$K316
;* AR7   assigned to $O$U1156
;* AR7   assigned to $O$U1156
;* AR7   assigned to $O$U1156
;* AR7   assigned to $O$U1156
;* AR4   assigned to $O$U1158
;* AR4   assigned to $O$U1158
;* AR4   assigned to $O$U1158
;* AR4   assigned to $O$U1158
;* AR1   assigned to $O$U1191
;* AR1   assigned to $O$U1191
;* AR1   assigned to $O$U1191
;* AR1   assigned to $O$U1197
;* AR4   assigned to $O$U1212
;* AR4   assigned to $O$U1209
;* AR7   assigned to $O$U1209
;* PL    assigned to $O$U1209
;* AR7   assigned to $O$U1209
;* AR4   assigned to $O$U1209
;* AR5   assigned to $O$U1271
;* AR4   assigned to $O$U1271
;* AR5   assigned to $O$U1351
;* AR5   assigned to $O$U1351
;* AR4   assigned to $O$U1347
;* AR4   assigned to $O$U1347
;* AR5   assigned to $O$U1405
;* AR5   assigned to $O$U1405
;* PL    assigned to $O$U1411
;* AR7   assigned to $O$U1411
;* AR6   assigned to $O$U1412
;* AR6   assigned to $O$U1412
;* AR5   assigned to $O$U1448
;* AR5   assigned to $O$U1448
;* PL    assigned to $O$U1451
;* AR1   assigned to $O$U1451
;* AR6   assigned to $O$U1452
;* AR7   assigned to $O$U1452
;* AR5   assigned to $O$U1490
;* AR5   assigned to $O$U1490
;* AR0   assigned to $O$U1523
;* AR5   assigned to $O$U1523
;* AR4   assigned to $O$U1557
;* AR1   assigned to $O$U1557
;* AR5   assigned to $O$U1557
;* AR5   assigned to $O$U1557
;* AR4   assigned to $O$U1647
;* AR5   assigned to $O$U1647
;* AR4   assigned to $O$U1647
;* AR5   assigned to $O$U1656
;* AL    assigned to _gui_temp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("gui_temp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("gui_temp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("gui_temp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("gui_temp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("gui_temp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("gui_temp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("gui_temp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _gui_temp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("gui_temp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_gui_temp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg0]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg12]

;* AR1   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("intp")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("intp")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("intp")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("intp")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("intp")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("intp")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("intp")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("intp")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("intp")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("intp")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("intp")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("intp")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("intp")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("intp")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("intp")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("intp")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("intp")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("intp")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("intp")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("intp")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("intp")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("intp")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("intp")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("intp")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("intp")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("tempint")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("tempint")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("temp16")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg10]

$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("temp16")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_breg20 -57]

$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("temp32")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_breg20 -62]

;* AL    assigned to _temp32
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("temp32")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("cmethod")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg6]

$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("cmethod")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("flash_ret")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("flash_ret")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("flash_ret")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("flash_ret")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("slen")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("slen")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("slen")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("slen")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("slen")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("slen")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("pt")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("pt")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_reg0]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("pt")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -57]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("pt")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -57]

;* AL    assigned to _pt
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("pt")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("pt")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("pt")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_reg12]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("pt")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("pt")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("wtp")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("wtp")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("wtp")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_reg12]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("cmdlen")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -57]

;* AL    assigned to _cmdlen
$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("cmdlen")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_reg0]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("cmdlen")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -47]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("cmdlen")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("cmdlen")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("cmdlen")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("cmdlen")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_reg0]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("k")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -58]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("k")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -58]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("k")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("k")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_reg16]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("k")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -57]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("k")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("k")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_reg2]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("k")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("k")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("k")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("j")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_reg10]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("j")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -47]

$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("j")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_breg20 -47]

$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("j")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_breg20 -47]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("j")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -47]

$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("j")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_breg20 -47]

$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("j")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_breg20 -47]

$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("j")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_breg20 -47]

$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("j")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_breg20 -58]

$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("j")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_breg20 -58]

$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("j")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_breg20 -47]

$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("j")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_breg20 -57]

$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("j")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_breg20 -59]

$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("j")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_breg20 -48]

$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("j")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_breg20 -48]

$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("j")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_breg20 -48]

$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("j")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_breg20 -48]

$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("j")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_breg20 -48]

$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("j")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_breg20 -48]

$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("j")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_breg20 -47]

$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("j")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_breg20 -59]

;* AR1   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg0]

$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_breg20 -47]

$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg0]

$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_breg20 -47]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("i")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -47]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("i")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("i")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("i")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("i")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$474	.dwtag  DW_TAG_variable
	.dwattr $C$DW$474, DW_AT_name("i")
	.dwattr $C$DW$474, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$474, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$474, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$475	.dwtag  DW_TAG_variable
	.dwattr $C$DW$475, DW_AT_name("i")
	.dwattr $C$DW$475, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$475, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$475, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$476	.dwtag  DW_TAG_variable
	.dwattr $C$DW$476, DW_AT_name("i")
	.dwattr $C$DW$476, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$476, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$476, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$477	.dwtag  DW_TAG_variable
	.dwattr $C$DW$477, DW_AT_name("i")
	.dwattr $C$DW$477, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$477, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$477, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$478	.dwtag  DW_TAG_variable
	.dwattr $C$DW$478, DW_AT_name("i")
	.dwattr $C$DW$478, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$478, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$478, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$479	.dwtag  DW_TAG_variable
	.dwattr $C$DW$479, DW_AT_name("i")
	.dwattr $C$DW$479, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$479, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$479, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$480	.dwtag  DW_TAG_variable
	.dwattr $C$DW$480, DW_AT_name("i")
	.dwattr $C$DW$480, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$480, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$480, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$481	.dwtag  DW_TAG_variable
	.dwattr $C$DW$481, DW_AT_name("i")
	.dwattr $C$DW$481, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$481, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$481, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$482	.dwtag  DW_TAG_variable
	.dwattr $C$DW$482, DW_AT_name("i")
	.dwattr $C$DW$482, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$482, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$482, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$483	.dwtag  DW_TAG_variable
	.dwattr $C$DW$483, DW_AT_name("i")
	.dwattr $C$DW$483, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$483, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$483, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$484	.dwtag  DW_TAG_variable
	.dwattr $C$DW$484, DW_AT_name("i")
	.dwattr $C$DW$484, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$484, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$484, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$485	.dwtag  DW_TAG_variable
	.dwattr $C$DW$485, DW_AT_name("i")
	.dwattr $C$DW$485, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$485, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$485, DW_AT_location[DW_OP_reg16]

$C$DW$486	.dwtag  DW_TAG_variable
	.dwattr $C$DW$486, DW_AT_name("i")
	.dwattr $C$DW$486, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$486, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$486, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$487	.dwtag  DW_TAG_variable
	.dwattr $C$DW$487, DW_AT_name("i")
	.dwattr $C$DW$487, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$487, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$487, DW_AT_location[DW_OP_reg16]

$C$DW$488	.dwtag  DW_TAG_variable
	.dwattr $C$DW$488, DW_AT_name("volt")
	.dwattr $C$DW$488, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$488, DW_AT_type(*$C$DW$T$376)
	.dwattr $C$DW$488, DW_AT_location[DW_OP_breg20 -24]

$C$DW$489	.dwtag  DW_TAG_variable
	.dwattr $C$DW$489, DW_AT_name("dsum")
	.dwattr $C$DW$489, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$489, DW_AT_type(*$C$DW$T$357)
	.dwattr $C$DW$489, DW_AT_location[DW_OP_breg20 -32]

$C$DW$490	.dwtag  DW_TAG_variable
	.dwattr $C$DW$490, DW_AT_name("dacc")
	.dwattr $C$DW$490, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$490, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$490, DW_AT_location[DW_OP_breg20 -35]

$C$DW$491	.dwtag  DW_TAG_variable
	.dwattr $C$DW$491, DW_AT_name("sampcnt")
	.dwattr $C$DW$491, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$491, DW_AT_type(*$C$DW$T$338)
	.dwattr $C$DW$491, DW_AT_location[DW_OP_breg20 -38]

$C$DW$492	.dwtag  DW_TAG_variable
	.dwattr $C$DW$492, DW_AT_name("data")
	.dwattr $C$DW$492, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$492, DW_AT_type(*$C$DW$T$309)
	.dwattr $C$DW$492, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#142               ; [CPU_] 
	.dwcfi	cfa_offset, -150
	.dwpsn	file "../Source/prod.c",line 217,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 217 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_sys_init")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |217| 
        ; call occurs [#_sys_init] ; [] |217| 
	.dwpsn	file "../Source/prod.c",line 219,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 219 | delay_us(30000);                        // delay for 30 ms             
; 221 | // Clear all interrupts and initialize PIE vector table:               
; 222 | // Disable CPU interrupts                                              
; 223 | DINT;                                                                  
; 224 | // Initialize PIE control registers to their default state.            
; 225 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 226 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |219| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_delay_us")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |219| 
        ; call occurs [#_delay_us] ; [] |219| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 227,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 227 | InitPieCtrl();                                                         
; 228 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |227| 
        ; call occurs [#_InitPieCtrl] ; [] |227| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 230,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 230 | IFR = 0x0000;                                                          
; 231 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 232 | // Service Routines (ISR).                                             
; 233 | // This will populate the entire table, even if the interrupt          
; 234 | // is not used in this example.  This is useful for debug purposes.    
; 235 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 236 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |230| 
	.dwpsn	file "../Source/prod.c",line 237,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 237 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |237| 
        ; call occurs [#_InitPieVectTable] ; [] |237| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_gpio_init")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |239| 
        ; call occurs [#_gpio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_extio_init")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |240| 
        ; call occurs [#_extio_init] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_InitECan")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |241| 
        ; call occurs [#_InitECan] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 242,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 242 | configCAN();                                                           
;----------------------------------------------------------------------
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_configCAN")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |242| 
        ; call occurs [#_configCAN] ; [] |242| 
	.dwpsn	file "../Source/prod.c",line 243,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 243 | canVarInit();                                                          
; 245 | // Set SD select output as appropriate (Usually high)                  
; 246 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 259 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_canVarInit")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_canVarInit          ; [CPU_] |243| 
        ; call occurs [#_canVarInit] ; [] |243| 
	.dwpsn	file "../Source/prod.c",line 260,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 260 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 261 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 263 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |260| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |260| 
        MOVL      ACC,XAR5              ; [CPU_] |260| 
        SUBL      XAR4,ACC              ; [CPU_] |260| 
        MOVL      ACC,XAR4              ; [CPU_] |260| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |260| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_memcpy")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |260| 
        ; call occurs [#_memcpy] ; [] |260| 
	.dwpsn	file "../Source/prod.c",line 264,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 264 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 265 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |264| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |264| 
        MOVL      ACC,XAR5              ; [CPU_] |264| 
        SUBL      XAR4,ACC              ; [CPU_] |264| 
        MOVL      ACC,XAR4              ; [CPU_] |264| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |264| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_memcpy")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |264| 
        ; call occurs [#_memcpy] ; [] |264| 
	.dwpsn	file "../Source/prod.c",line 282,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 282 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |282| 
        MOV       AH,#479               ; [CPU_] |282| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |282| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 292,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 292 | Flash_CallbackPtr = NULL;                                              
; 294 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |292| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |292| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_flash_init")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |295| 
        ; call occurs [#_flash_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 297,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 297 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_led_init")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |297| 
        ; call occurs [#_led_init] ; [] |297| 
	.dwpsn	file "../Source/prod.c",line 298,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 298 | lcd_init();                             // lcd/vfd display             
; 300 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_lcd_init")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |298| 
        ; call occurs [#_lcd_init] ; [] |298| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(0, 1);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |302| 
        MOVB      AH,#1                 ; [CPU_] |302| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_ssr_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_ssr_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 304,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 304 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |304| 
        MOVB      AH,#0                 ; [CPU_] |304| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_ssr_set")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |304| 
        ; call occurs [#_ssr_set] ; [] |304| 
	.dwpsn	file "../Source/prod.c",line 305,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 305 | ssr_set(3, 0);                  // indicate gui not connected          
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |305| 
        MOVB      AH,#0                 ; [CPU_] |305| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_ssr_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |305| 
        ; call occurs [#_ssr_set] ; [] |305| 
        MOVW      DP,#_GpioDataRegs     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 308,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 308 | GpioDataRegs.GPADAT.bit.GPIOA0 = 0;                     // Error Reset 
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xfffe ; [CPU_] |308| 
	.dwpsn	file "../Source/prod.c",line 309,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 309 | GpioDataRegs.GPADAT.bit.GPIOA1 = 1;                     // Master Sleep
;----------------------------------------------------------------------
        OR        @_GpioDataRegs,#0x0002 ; [CPU_] |309| 
	.dwpsn	file "../Source/prod.c",line 310,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 310 | GpioDataRegs.GPADAT.bit.GPIOA2 = 0;                     // Alarm Reset 
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xfffb ; [CPU_] |310| 
	.dwpsn	file "../Source/prod.c",line 311,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 311 | GpioDataRegs.GPADAT.bit.GPIOA3 = 0;                     // Disable Mod
;     | Sleep                                                                  
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xfff7 ; [CPU_] |311| 
	.dwpsn	file "../Source/prod.c",line 312,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 312 | GpioDataRegs.GPADAT.bit.GPIOA4 = 0;                     // Disable Bal 
; 315 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xffef ; [CPU_] |312| 
	.dwpsn	file "../Source/prod.c",line 328,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 328 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_conf_read")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |328| 
        ; call occurs [#_conf_read] ; [] |328| 
	.dwpsn	file "../Source/prod.c",line 329,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 329 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |329| 
        MOV       AH,#21930             ; [CPU_] |329| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |329| 
        B         $C$L51,EQ             ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_conf_default")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |330| 
        ; call occurs [#_conf_default] ; [] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_conf_write")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |331| 
        ; call occurs [#_conf_write] ; [] |331| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 334,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 334 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |334| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |334| 
        ; call occurs [#_shunt_switch] ; [] |334| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 336 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |336| 
        ; call occurs [#_ad7738_init] ; [] |336| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | ad7738_setcal();                                                       
; 339 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |337| 
        ; call occurs [#_ad7738_setcal] ; [] |337| 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 340,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | tagwasthere[i] = 0;                                                    
; 343 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |341| 
	.dwpsn	file "../Source/prod.c",line 339,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |339| 
        ; branchcc occurs ; [] |339| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_delay_us")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |345| 
        ; call occurs [#_delay_us] ; [] |345| 
	.dwpsn	file "../Source/prod.c",line 347,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 347 | lcd_clear();                                                           
; 348 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |347| 
        ; call occurs [#_lcd_clear] ; [] |347| 
	.dwpsn	file "../Source/prod.c",line 349,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |349| 
	.dwpsn	file "../Source/prod.c",line 348,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |349| 
        MOVL      XAR0,#84              ; [CPU_] |349| 
	.dwpsn	file "../Source/prod.c",line 348,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |349| 
        MOVL      *-SP[4],ACC           ; [CPU_] |349| 
        MOVL      XAR4,XAR1             ; [CPU_] |349| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |349| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_sprintf")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |349| 
        ; call occurs [#_sprintf] ; [] |349| 
	.dwpsn	file "../Source/prod.c",line 350,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 350 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |350| 
        MOVL      XAR4,XAR1             ; [CPU_] |350| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |350| 
        ; call occurs [#_lcd_dputs] ; [] |350| 
	.dwpsn	file "../Source/prod.c",line 351,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 351 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |351| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |351| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |351| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |351| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |351| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |351| 
        MOVL      XAR4,XAR1             ; [CPU_] |351| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_sprintf")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |351| 
        ; call occurs [#_sprintf] ; [] |351| 
	.dwpsn	file "../Source/prod.c",line 352,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |352| 
        MOVL      XAR4,XAR1             ; [CPU_] |352| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |352| 
        ; call occurs [#_lcd_dputs] ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 353,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 353 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |353| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |353| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |353| 
        ; call occurs [#_lcd_dputs] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 355,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 355 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |355| 
	.dwpsn	file "../Source/prod.c",line 356,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |356| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 358,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 358 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |358| 
        TBIT      AL,#4                 ; [CPU_] |358| 
        B         $C$L54,TC             ; [CPU_] |358| 
        ; branchcc occurs ; [] |358| 
	.dwpsn	file "../Source/prod.c",line 359,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |359| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 362,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | if (1 & i) {                                                           
; 363 |         led_set( LED1, LED_RED);                                       
; 364 |         led_set( LED2, LED_RED);                                       
; 365 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |362| 
        B         $C$L55,TC             ; [CPU_] |362| 
        ; branchcc occurs ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 366,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |366| 
        MOVB      AH,#2                 ; [CPU_] |366| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_led_set")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |366| 
        ; call occurs [#_led_set] ; [] |366| 
	.dwpsn	file "../Source/prod.c",line 367,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 367 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |367| 
        B         $C$L56,UNC            ; [CPU_] |367| 
        ; branch occurs ; [] |367| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 363,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |363| 
        MOVB      AH,#1                 ; [CPU_] |363| 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_led_set")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
	.dwpsn	file "../Source/prod.c",line 364,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |364| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |364| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_led_set")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |364| 
        ; call occurs [#_led_set] ; [] |364| 
	.dwpsn	file "../Source/prod.c",line 369,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |369| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_delay_us")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |369| 
        ; call occurs [#_delay_us] ; [] |369| 
	.dwpsn	file "../Source/prod.c",line 356,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |356| 
        MOV       AL,AR1                ; [CPU_] |356| 
        CMPB      AL,#100               ; [CPU_] |356| 
        B         $C$L53,LT             ; [CPU_] |356| 
        ; branchcc occurs ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 372,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |372| 
        MOVB      AH,#0                 ; [CPU_] |372| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_led_set")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |372| 
        ; call occurs [#_led_set] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 373,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 373 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |373| 
        MOVB      AH,#0                 ; [CPU_] |373| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_led_set")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |373| 
        ; call occurs [#_led_set] ; [] |373| 
        MOV       AL,AR1                ; [CPU_] |373| 
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 375 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |375| 
        CMPB      AL,#20                ; [CPU_] |375| 
        B         $C$L58,GEQ            ; [CPU_] |375| 
        ; branchcc occurs ; [] |375| 
	.dwpsn	file "../Source/prod.c",line 376,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 376 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |376| 
        MOVL      XAR4,XAR5             ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 378,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 378 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |378| 
	.dwpsn	file "../Source/prod.c",line 376,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |376| 
        INC       *+XAR4[0]             ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 378,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |378| 
        CMPB      AL,#4                 ; [CPU_] |378| 
        B         $C$L57,LT             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
	.dwpsn	file "../Source/prod.c",line 379,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |379| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 382 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |382| 
        MOVB      AL,#40                ; [CPU_] |382| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |382| 
        ; call occurs [#_lcd_dputs] ; [] |382| 
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 384 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_conf_write")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |384| 
        ; call occurs [#_conf_write] ; [] |384| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 387,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 387 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |387| 
        MOVL      XAR0,#72              ; [CPU_] |387| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |387| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |387| 
        MOVB      XAR0,#35              ; [CPU_] |387| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |387| 
        ADDL      XAR4,ACC              ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 144,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |144| 
	.dwpsn	file "../Source/prod.c",line 387,column 2,is_stmt,isa 0
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 146,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |146| 
	.dwpsn	file "../Source/prod.c",line 158,column 13,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |158| 
	.dwpsn	file "../Source/prod.c",line 168,column 12,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 169,column 14,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |169| 
	.dwpsn	file "../Source/prod.c",line 171,column 15,is_stmt,isa 0
        MOV       *-SP[50],#60          ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 16,is_stmt,isa 0
        MOV       *-SP[49],#1           ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 144,column 15,is_stmt,isa 0
        MOV       *+FP[AR0],#0          ; [CPU_] |144| 
	.dwpsn	file "../Source/prod.c",line 387,column 2,is_stmt,isa 0
        MOVL      *-SP[62],ACC          ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 389,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 389 | switch (conf_data.rxdir) {                                             
; 390 | case SDIR_RS232:                        // RS232, 0                    
; 391 |         led_set( LED1, LED_RED);                                       
; 392 |         led_set( LED2, LED_RED);                                       
; 393 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 394 |         scia_init(temp32);                                             
; 395 |         break;                                                         
; 396 | case SDIR_RS485:                        // RS485, 1                    
; 397 |         led_set( LED1, LED_GREEN);                                     
; 398 |         led_set( LED2, LED_RED);                                       
; 399 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 400 |         scia_init(temp32);                                             
; 401 |         break;                                                         
; 402 | case SDIR_ENET:                 // Ethernet, 2                         
; 403 |         led_set( LED1, LED_RED);                                       
; 404 |         led_set( LED2, LED_GREEN);                                     
; 405 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 406 |         scia_init(921600L);                                            
; 407 |         //scia_init( 460800L );                                        
; 408 |         break;                                                         
; 409 | case SDIR_USB:                  // USB, 3                              
; 410 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 411 |         led_set( LED1, LED_GREEN);                                     
; 412 |         led_set( LED2, LED_GREEN);                                     
; 413 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 414 |         // the USB chip can't handle 921600bps without dropping bytes  
; 415 |         // it seems 460800bps is fine so far.                          
; 416 |         // the client (PC Host) side can use any baudrate.             
; 417 |         scia_init(460800L);                                            
; 418 |         break;                                                         
; 419 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |389| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |389| 
        B         $C$L64,EQ             ; [CPU_] |389| 
        ; branchcc occurs ; [] |389| 
        CMPB      AL,#1                 ; [CPU_] |389| 
        B         $C$L63,EQ             ; [CPU_] |389| 
        ; branchcc occurs ; [] |389| 
        CMPB      AL,#2                 ; [CPU_] |389| 
        B         $C$L60,EQ             ; [CPU_] |389| 
        ; branchcc occurs ; [] |389| 
        CMPB      AL,#3                 ; [CPU_] |389| 
        B         $C$L59,EQ             ; [CPU_] |389| 
        ; branchcc occurs ; [] |389| 
	.dwpsn	file "../Source/prod.c",line 420,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |420| 
	.dwpsn	file "../Source/prod.c",line 421,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |421| 
        MOVB      AH,#1                 ; [CPU_] |421| 
	.dwpsn	file "../Source/prod.c",line 420,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |420| 
	.dwpsn	file "../Source/prod.c",line 421,column 3,is_stmt,isa 0
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_led_set")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |421| 
        ; call occurs [#_led_set] ; [] |421| 
	.dwpsn	file "../Source/prod.c",line 422,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 422 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |422| 
        MOVB      AH,#2                 ; [CPU_] |422| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_led_set")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |422| 
        ; call occurs [#_led_set] ; [] |422| 
	.dwpsn	file "../Source/prod.c",line 423,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 423 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 424 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |423| 
        MOVL      XAR0,#70              ; [CPU_] |423| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |423| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |423| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |423| 
        MOVB      XAR0,#34              ; [CPU_] |423| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |423| 
	.dwpsn	file "../Source/prod.c",line 425,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 425 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |425| 
        ; branch occurs ; [] |425| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#2                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_led_set")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_led_set")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |413| 
        MOVL      XAR0,#70              ; [CPU_] |413| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        ADDL      XAR4,ACC              ; [CPU_] |413| 
        MOVL      XAR0,#84              ; [CPU_] |413| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |413| 
        MOVL      *-SP[4],ACC           ; [CPU_] |413| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |413| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_sprintf")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |413| 
        ; call occurs [#_sprintf] ; [] |413| 
	.dwpsn	file "../Source/prod.c",line 417,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |418| 
        ; branch occurs ; [] |418| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |403| 
        MOVB      AH,#1                 ; [CPU_] |403| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_led_set")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |403| 
        ; call occurs [#_led_set] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 404,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |404| 
        MOVB      AH,#2                 ; [CPU_] |404| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_led_set")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |404| 
        ; call occurs [#_led_set] ; [] |404| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 405,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |405| 
        MOVL      XAR0,#70              ; [CPU_] |405| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |405| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |405| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |405| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |405| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |405| 
        MOVL      XAR0,#84              ; [CPU_] |405| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |405| 
        MOVL      *-SP[4],ACC           ; [CPU_] |405| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |405| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_sprintf")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |405| 
        ; call occurs [#_sprintf] ; [] |405| 
	.dwpsn	file "../Source/prod.c",line 406,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |406| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |406| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 397,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |397| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |401| 
        ; branch occurs ; [] |401| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |391| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |391| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_led_set")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |391| 
        ; call occurs [#_led_set] ; [] |391| 
	.dwpsn	file "../Source/prod.c",line 392,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |392| 
        MOVB      AH,#1                 ; [CPU_] |392| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_led_set")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |392| 
        ; call occurs [#_led_set] ; [] |392| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |393| 
        MOVL      XAR0,#70              ; [CPU_] |393| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |393| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |393| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |393| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |393| 
        ADDL      XAR4,ACC              ; [CPU_] |393| 
        MOVL      XAR1,*-SP[62]         ; [CPU_] |393| 
        MOVL      XAR0,#84              ; [CPU_] |393| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |393| 
        MOVL      *-SP[4],ACC           ; [CPU_] |393| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |393| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |393| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_sprintf")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |393| 
        ; call occurs [#_sprintf] ; [] |393| 
        MOVL      ACC,XAR1              ; [CPU_] |393| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_init")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |394| 
        ; call occurs [#_scia_init] ; [] |394| 
	.dwpsn	file "../Source/prod.c",line 427,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 427 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |427| 
        ; call occurs [#_lcd_clear] ; [] |427| 
        MOVL      XAR0,#84              ; [CPU_] |427| 
	.dwpsn	file "../Source/prod.c",line 428,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 428 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |428| 
	.dwpsn	file "../Source/prod.c",line 427,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |427| 
	.dwpsn	file "../Source/prod.c",line 428,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 430 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |428| 
        ; call occurs [#_lcd_dputs] ; [] |428| 
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | uart_set_dir(conf_data.rxdir);                                         
; 433 | // initalize hardware and SFCLIB buffers                               
; 434 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 436 | // Enable global Interrupts and higher priority real-time debug events:
; 437 | EINT;                                                                  
; 438 | // Enable Global interrupt INTM                                        
; 439 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |431| 
        MOVL      XAR0,#40              ; [CPU_] |431| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |431| 
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |431| 
        ; call occurs [#_uart_set_dir] ; [] |431| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 441,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 443 |         for (i = 0; i < 50; i++)                // 1s                  
; 445 |                 delay_us(20000);                // delay for 20ms      
; 447 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |441| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |441| 
        CMPB      AL,#3                 ; [CPU_] |441| 
        B         $C$L76,NEQ            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 449,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |449| 
        MOVL      *-SP[62],XAR4         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 451,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 451 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 453 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |451| 
        ; branch occurs ; [] |451| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 454,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |454| 
        ; call occurs [#_scia_rx_getcmds] ; [] |454| 
        CMPB      AL,#0                 ; [CPU_] |454| 
        B         $C$L70,EQ             ; [CPU_] |454| 
        ; branchcc occurs ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 453,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |453| 
$C$L68:    
        MOVL      XAR1,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 455,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |455| 
        MOVL      XAR4,XAR1             ; [CPU_] |455| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |455| 
        ; call occurs [#_scia_rx_getcmd] ; [] |455| 
        MOV       T,*-SP[47]            ; [CPU_] |455| 
	.dwpsn	file "../Source/prod.c",line 456,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 456 | lcd_puts(cmdbuff, 20 * j);                                             
; 457 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |456| 
        MOVL      XAR4,XAR1             ; [CPU_] |456| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |456| 
        ; call occurs [#_lcd_puts] ; [] |456| 
	.dwpsn	file "../Source/prod.c",line 458,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |456| 
	.dwpsn	file "../Source/prod.c",line 458,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |458| 
        B         $C$L69,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 459,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 459 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |459| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 454,column 4,is_stmt,isa 0
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |454| 
        ; call occurs [#_scia_rx_getcmds] ; [] |454| 
        CMPB      AL,#0                 ; [CPU_] |454| 
        B         $C$L68,NEQ            ; [CPU_] |454| 
        ; branchcc occurs ; [] |454| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 451,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |451| 
        TBIT      AL,#5                 ; [CPU_] |451| 
        B         $C$L67,NTC            ; [CPU_] |451| 
        ; branchcc occurs ; [] |451| 
	.dwpsn	file "../Source/prod.c",line 463,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |463| 
        SPM       #0                    ; [CPU_] 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_scia_puts")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |463| 
        ; call occurs [#_scia_puts] ; [] |463| 
	.dwpsn	file "../Source/prod.c",line 464,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 464 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |464| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_delay_us")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |464| 
        ; call occurs [#_delay_us] ; [] |464| 
	.dwpsn	file "../Source/prod.c",line 465,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | scia_puts("E\r");                                                      
; 466 | j = 0;                                                                 
; 467 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |465| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_scia_puts")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |465| 
        ; call occurs [#_scia_puts] ; [] |465| 
	.dwpsn	file "../Source/prod.c",line 468,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | for (i = 0; i < WTT; i++)               // 10s                         
; 470 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 466,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |466| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 471,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 471 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |471| 
        ; call occurs [#_scia_rx_getcmds] ; [] |471| 
        CMPB      AL,#0                 ; [CPU_] |471| 
        B         $C$L72,EQ             ; [CPU_] |471| 
        ; branchcc occurs ; [] |471| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 472,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 472 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |472| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |472| 
        ; call occurs [#_scia_rx_getcmd] ; [] |472| 
	.dwpsn	file "../Source/prod.c",line 473,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 473 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |473| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 475,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_delay_us")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
        MOV       AL,*-SP[47]           ; [CPU_] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |476| 
        B         $C$L73,LT             ; [CPU_] |476| 
        ; branchcc occurs ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 478,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | i = WTT - 10;                                                          
; 483 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |479| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 468,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |468| 
        CMP       AR1,#500              ; [CPU_] |468| 
        B         $C$L71,LT             ; [CPU_] |468| 
        ; branchcc occurs ; [] |468| 
	.dwpsn	file "../Source/prod.c",line 484,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 484 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |484| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_scia_puts")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |484| 
        ; call occurs [#_scia_puts] ; [] |484| 
	.dwpsn	file "../Source/prod.c",line 485,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 485 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |485| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_delay_us")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |485| 
        ; call occurs [#_delay_us] ; [] |485| 
	.dwpsn	file "../Source/prod.c",line 486,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |486| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_scia_puts")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |486| 
        ; call occurs [#_scia_puts] ; [] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |487| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_delay_us")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |487| 
        ; call occurs [#_delay_us] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |488| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_scia_puts")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |488| 
        ; call occurs [#_scia_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |489| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_delay_us")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |489| 
        ; call occurs [#_delay_us] ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |490| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_scia_puts")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |490| 
        ; call occurs [#_scia_puts] ; [] |490| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 492,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 492 | j = 0;                                                                 
; 493 | for (i = 0; i < 100; i++)               // 2s                          
; 495 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |492| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 496,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |496| 
        ; call occurs [#_scia_rx_getcmds] ; [] |496| 
        CMPB      AL,#0                 ; [CPU_] |496| 
        B         $C$L75,EQ             ; [CPU_] |496| 
        ; branchcc occurs ; [] |496| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 497,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 497 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |497| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |497| 
        ; call occurs [#_scia_rx_getcmd] ; [] |497| 
        MOV       T,*-SP[47]            ; [CPU_] |497| 
	.dwpsn	file "../Source/prod.c",line 498,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 498 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR4,*-SP[62]         ; [CPU_] |498| 
        MPYB      ACC,T,#20             ; [CPU_] |498| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |498| 
        ; call occurs [#_lcd_puts] ; [] |498| 
	.dwpsn	file "../Source/prod.c",line 499,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |499| 
	.dwpsn	file "../Source/prod.c",line 498,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |498| 
	.dwpsn	file "../Source/prod.c",line 499,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |499| 
        B         $C$L75,LT             ; [CPU_] |499| 
        ; branchcc occurs ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 500,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 500 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |500| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 503,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 503 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |503| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_delay_us")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |503| 
        ; call occurs [#_delay_us] ; [] |503| 
	.dwpsn	file "../Source/prod.c",line 493,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |493| 
        ; branchcc occurs ; [] |493| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 506,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 506 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |506| 
        B         $C$L78,UNC            ; [CPU_] |506| 
        ; branch occurs ; [] |506| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 445,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |445| 
        SPM       #0                    ; [CPU_] 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_delay_us")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |445| 
        ; call occurs [#_delay_us] ; [] |445| 
	.dwpsn	file "../Source/prod.c",line 443,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |443| 
        ; branchcc occurs ; [] |443| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 509,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 509 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 511 | #ifdef SDHCCARD                                                        
; 513 | // check SD card                                                       
; 514 | lcd_puts( "SD Card Testing...", 0 );                                   
; 515 | sd_write = 0;                                                          
; 516 | sd_close = 0;                                                          
; 517 | sd_cnt = 0;                                                            
; 518 | fp = NULL;                                                             
; 520 | f_mount( 0, &Fatfs );                                                  
; 522 | res = f_getfree( "0:", &fsize, &fs );                                  
; 524 | sprintf( buff, "%02X", res );                                          
; 525 | lcd_puts( buff, 18 );                                                  
; 527 | if( !res )                                                             
; 529 |         switch( fs->fs_type & 3 )                                      
; 531 |                 case 1:                                                
; 532 |                 lcd_puts( "FAT12", 20 );                               
; 533 |                 break;                                                 
; 534 |                 case 2:                                                
; 535 |                 lcd_puts( "FAT16", 20 );                               
; 536 |                 break;                                                 
; 537 |                 case 3:                                                
; 538 |                 lcd_puts( "FAT32", 20 );                               
; 539 |                 break;                                                 
; 542 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 543 |         lcd_puts( buff, 40 );                                          
; 545 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 546 |         lcd_puts( buff, 60 );                                          
; 548 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 550 |                 switch( res )                                          
; 552 |                         case CT_MMC:                                   
; 553 |                         lcd_puts( "on MMC", 26 );                      
; 554 |                         break;                                         
; 555 |                         case CT_SD1:                                   
; 556 |                         lcd_puts( "on SDV1", 26 );                     
; 557 |                         break;                                         
; 558 |                         case CT_SD2:                                   
; 559 |                         lcd_puts( "on SDV2", 26 );                     
; 560 |                         break;                                         
; 561 |                         case CT_SD2|CT_BLOCK:                          
; 562 |                         lcd_puts( "on SDHC", 26 );                     
; 563 |                         break;                                         
; 564 |                         default:                                       
; 565 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 566 |                         break;                                         
; 571 | else                                                                   
; 573 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 589 | for( i = 0; i < 100; i++ )                      // 2s                  
; 591 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 593 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |509| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |509| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |509| 
	.dwpsn	file "../Source/prod.c",line 595,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 595 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |595| 
        MOVB      AH,#2                 ; [CPU_] |595| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_led_set")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |595| 
        ; call occurs [#_led_set] ; [] |595| 
	.dwpsn	file "../Source/prod.c",line 596,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 596 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |596| 
        MOVB      AH,#0                 ; [CPU_] |596| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_led_set")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |596| 
        ; call occurs [#_led_set] ; [] |596| 
	.dwpsn	file "../Source/prod.c",line 598,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 598 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_update_units")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |598| 
        ; call occurs [#_update_units] ; [] |598| 
	.dwpsn	file "../Source/prod.c",line 600,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 600 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |600| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |600| 
        ; call occurs [#_ad7738_resetpeak] ; [] |600| 
	.dwpsn	file "../Source/prod.c",line 601,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 601 | ad7738_resetvall( BM_ALL);              // reset valley                
; 602 | line = 0;                                                              
; 604 | //=====================================================================
;     | =====//                                                                
; 605 | // main loop                                                           
; 606 | //=====================================================================
;     | =====//                                                                
; 608 | Uint16 data[8];                                                        
; 609 | Uint16 data2[8];                                                       
; 610 | Uint16 data3[8];                                                       
; 611 | int n;                                                                 
; 612 | Uint16 res_1;                                                          
; 613 | volatile Uint16 res_2;                                                 
; 614 | res_1 = 0;                                                             
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |601| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |601| 
        ; call occurs [#_ad7738_resetvall] ; [] |601| 
	.dwpsn	file "../Source/prod.c",line 615,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 615 | SPICANCheckInts(604);                                                  
;----------------------------------------------------------------------
        MOV       AL,#604               ; [CPU_] |615| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |615| 
        ; call occurs [#_SPICANCheckInts] ; [] |615| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | SPICANInit();                                                          
;----------------------------------------------------------------------
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |616| 
        ; call occurs [#_SPICANInit] ; [] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 617 | SPICANCheckInts(606);                                                  
; 618 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
        MOV       AL,#606               ; [CPU_] |617| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |617| 
        ; call occurs [#_SPICANCheckInts] ; [] |617| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 620,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 620 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |620| 
	.dwpsn	file "../Source/prod.c",line 623,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 623 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |623| 
        ; call occurs [#_SPICANReadStat] ; [] |623| 
        MOV       *-SP[46],AL           ; [CPU_] |623| 
	.dwpsn	file "../Source/prod.c",line 624,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 624 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |624| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |624| 
        ; call occurs [#_SPICANRead] ; [] |624| 
        MOV       *-SP[45],AL           ; [CPU_] |624| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 625 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |625| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |625| 
        ; call occurs [#_SPICANRead] ; [] |625| 
        MOV       *-SP[44],AL           ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 626,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 626 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |626| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |626| 
        ; call occurs [#_SPICANRead] ; [] |626| 
        MOV       *-SP[43],AL           ; [CPU_] |626| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 627 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |627| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |627| 
        ; call occurs [#_SPICANRead] ; [] |627| 
        MOV       *-SP[42],AL           ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 628 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |628| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |628| 
        ; call occurs [#_SPICANRead] ; [] |628| 
        MOV       *-SP[41],AL           ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 629 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |629| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |629| 
        ; call occurs [#_SPICANRead] ; [] |629| 
        MOV       *-SP[40],AL           ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 630 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |630| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |630| 
        ; call occurs [#_SPICANRead] ; [] |630| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |630| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |632| 
        MOVB      AL,#161               ; [CPU_] |632| 
        SUBB      XAR4,#46              ; [CPU_U] |632| 
        MOVZ      AR4,AR4               ; [CPU_] |632| 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |632| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |632| 
	.dwpsn	file "../Source/prod.c",line 633,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 633 | SPICANWaitForTXBuf(0);                                                 
; 634 | //      SPICAN_T0_RTS();                                               
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |633| 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |633| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |633| 
	.dwpsn	file "../Source/prod.c",line 636,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 636 | data[0] = res_1;                                                       
; 637 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        MOVB      *-SP[46],#1,UNC       ; [CPU_] |636| 
	.dwpsn	file "../Source/prod.c",line 638,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 638 | data[1] = data[1] + 1;                                                 
; 639 | data[2] = data[2] + 1;                                                 
; 640 | data[3] = data[3] + 1;                                                 
; 641 | data[4] = data[4] + 1;                                                 
; 642 | data[5] = data[5] + 1;                                                 
; 643 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |638| 
	.dwpsn	file "../Source/prod.c",line 645,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 645 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |645| 
	.dwpsn	file "../Source/prod.c",line 639,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |639| 
	.dwpsn	file "../Source/prod.c",line 640,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |640| 
	.dwpsn	file "../Source/prod.c",line 641,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |641| 
	.dwpsn	file "../Source/prod.c",line 642,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |642| 
	.dwpsn	file "../Source/prod.c",line 643,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |643| 
	.dwpsn	file "../Source/prod.c",line 645,column 2,is_stmt,isa 0
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |645| 
        ; call occurs [#_SPICANRead] ; [] |645| 
        MOV       *-SP[46],AL           ; [CPU_] |645| 
	.dwpsn	file "../Source/prod.c",line 646,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 646 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |646| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |646| 
        ; call occurs [#_SPICANRead] ; [] |646| 
        MOV       *-SP[45],AL           ; [CPU_] |646| 
	.dwpsn	file "../Source/prod.c",line 647,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 647 | data[2] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |647| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |647| 
        ; call occurs [#_SPICANRead] ; [] |647| 
        MOV       *-SP[44],AL           ; [CPU_] |647| 
	.dwpsn	file "../Source/prod.c",line 648,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 648 | data[3] = SPICANRead(0x2C);                                            
;----------------------------------------------------------------------
        MOVB      AL,#44                ; [CPU_] |648| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |648| 
        ; call occurs [#_SPICANRead] ; [] |648| 
        MOV       *-SP[43],AL           ; [CPU_] |648| 
	.dwpsn	file "../Source/prod.c",line 649,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 649 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |649| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |649| 
        ; call occurs [#_SPICANRead] ; [] |649| 
        MOV       *-SP[42],AL           ; [CPU_] |649| 
	.dwpsn	file "../Source/prod.c",line 650,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 650 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |650| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |650| 
        ; call occurs [#_SPICANRead] ; [] |650| 
        MOV       *-SP[41],AL           ; [CPU_] |650| 
	.dwpsn	file "../Source/prod.c",line 651,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 651 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 653 | volatile Uint16 interrupts;                                            
; 654 | char buff_ints[80];                                                    
; 656 | for (;;) {                                                             
; 658 | //              Uint16 should_send;                                    
; 659 | //              // Check interrupts for what all happened              
; 660 | //              interrupts = SPICANRead(0x2C);                         
; 661 | //              delay_us(10);                                          
; 663 | //              // TX Interrupts                                       
; 664 | //              buff_ints[0] = interrupts;                             
; 665 | //              // RX Interrupts                                       
; 666 | //              if(interrupts > 0x00 && interrupts != 0xFF)            
; 667 | //              {                                                      
; 668 | //                      sprintf(buff_ints, "There were interrupts %d",
;     | interrupts);                                                           
; 669 | // //                   printf("%s", buff_ints);                       
; 670 | //              }                                                      
; 671 | //              SPICANRoutine();                                       
; 672 |         // data[7] = SPICANReadBufs(data2, data3);                     
; 673 | //              should_send = SPICANReadBufs(data2, data3);            
; 675 | //              res_1 = SPICANRead(0x2C);                              
; 676 | //              delay_us(10);                                          
; 677 | //              res_2 = (res_1 & 0xFC);                                
; 678 | //              SPICANBitModify(0x2C, 0x03, 0x00);                     
; 679 | //              // delay_us(10);                                       
; 680 | //              res_2 = SPICANReadInts();                              
; 681 | //              // SPICANWrite(0x2C, res_2);                           
; 682 | // //           res_2 = SPICANRead(0x2C);                              
; 683 | // //           res_2 = 0x00;                                          
; 684 | //              if((res_2 & 0x01) == 0x01)                             
; 685 | //              {                                                      
; 686 | //                      SPICANWaitForTXBuf(0);                         
; 687 | //                      SPICANReadSetT0Message(0xA2, 8, data2);        
; 688 | //                      SPICANWaitForTXBuf(0);                         
; 689 | //                      SPICAN_T0_RTS();                               
; 690 | //                      res_2 = SPICANRead(0x2C);                      
; 691 | //              }                                                      
; 692 | //              else if((res_2 & 0x02) == 0x02)                        
; 693 | //              {                                                      
; 694 | //                      SPICANWaitForTXBuf(0);                         
; 695 | //                      SPICANReadSetT0Message(0xA3, 8, data3);        
; 696 | //                      SPICANWaitForTXBuf(0);                         
; 697 | //                      SPICAN_T0_RTS();                               
; 698 | //              }                                                      
; 700 |         // Check for any errors                                        
; 701 | //              data[6] = SPICANRead(0x2D);                            
; 703 |         // check SW2 for reset command                                 
; 704 |         if (!(0x0010 & INBTTN)) {                                      
; 706 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 707 |                 ad7738_resetpeak(0x0f);                                
; 708 |                 ad7738_resetvall(0x0f);                                
; 710 | #if(0)                                                                 
; 711 |                 // DEBUG: tagid                                        
; 712 |                 lcd_clear();                                           
; 713 |                 for( i = 0; i < 4; i++ )                               
; 715 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 716 |                         lcd_puts( buff, i * 20 );                      
; 718 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 720 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 722 |                 // DEBUG: tagid                                        
; 723 |                 update_units();                                        
; 724 | #endif                                                                 
; 728 | #ifdef SDHCCARD                                                        
; 729 |         // write to SD card file if flag set                           
; 730 |         if( sd_write && fp )                                           
; 732 |                 if( prod_getavail() > 31 || sd_close )                 
; 734 |                         led_set( LED2, LED_RED );                      
; 736 |                         k = 32;                                        
; 738 |                         while( prod_getavail() && k-- )                
; 740 |                                 wtp = prod_getnext();                  
; 742 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 744 |                                         intp = (Uint16*)&wtp->adw[i];  
; 746 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 748 |                                         for( j = 0; j < 2; j++ )       
; 750 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 751 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 752 |                                                 intp++;                
; 755 |                                 sd_cnt++;                              
; 758 |                         if( sd_close )                                 
; 760 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 761 |                                 if( res )                              
; 763 |                                         sprintf( buff, "%02X ", res ); 
; 764 |                                         scia_puts( buff );             
; 767 |                                 res = f_close( fp );                   
; 768 |                                 fp = NULL;                             
; 770 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 771 |                                 scia_puts( buff );                     
; 773 |                                 sd_write = 0;                          
; 774 |                                 sd_close = 0;                          
; 777 |                         led_set( LED2, LED_OFF );                      
; 780 | #endif                                                                 
; 782 |         //=============================================================
;     | =====================//                                                
; 783 |         // update the vfd
;     |                          //                                            
; 784 |         //=============================================================
;     | =====================//                                                
; 785 |         // if there is new "monitor data" ready                        
; 786 |         if (ad7738_monrdy()) {                                         
; 787 |                 // clear the ready flag                                
; 788 |                 ad7738_monclr();                                       
; 790 |                 // display the appropriate data                        
; 791 |                 switch (conf_data.vfd[line].what) {                    
; 792 |                 case VFD_LOAD:                                         
; 793 |                         wtp = ad7738_getmon();                         
; 794 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 795 |                         goto VFD_LINE_BUFF;                            
; 797 |                 case VFD_PEAK:                                         
; 798 |                         wtp = ad7738_getpeak();                        
; 799 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 800 |                         goto VFD_LINE_BUFF;                            
; 802 |                 case VFD_VALL:                                         
; 803 |                         wtp = ad7738_getvall();                        
; 804 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 805 |                         goto VFD_LINE_BUFF;                            
; 807 |                 case VFD_POSI:                                         
; 808 |                         wtp = ad7738_getmon();                         
; 809 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 810 |                         goto VFD_LINE_BUFF;                            
; 812 |                 case VFD_VELO:                                         
; 813 |                         wtp = ad7738_getmon();                         
; 814 |                         //wtp = ad7738_getpeak();                      
; 815 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 817 |                         // display appropriate decimal points          
; 818 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 819 |                         case 0:                                        
; 820 |                                 sprintf(buff, "%10.0f", tempft);       
; 821 |                                 break;                                 
; 822 |                         case 1:                                        
; 823 |                                 sprintf(buff, "%10.1f", tempft);       
; 824 |                                 break;                                 
; 825 |                         case 2:                                        
; 826 |                                 sprintf(buff, "%10.2f", tempft);       
; 827 |                                 break;                                 
; 828 |                         case 3:                                        
; 829 |                                 sprintf(buff, "%10.3f", tempft);       
; 830 |                                 break;                                 
; 831 |                         case 4:                                        
; 832 |                                 sprintf(buff, "%10.4f", tempft);       
; 833 |                                 break;                                 
; 834 |                         case 5:                                        
; 835 |                                 sprintf(buff, "%10.5f", tempft);       
; 836 |                                 break;                                 
; 838 |                         break;                                         
; 840 |                 case VFD_LIMIT:                                        
; 841 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 842 |                         sprintf(buff, "  %s",                          
; 843 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 844 |                         break;                                         
; 845 |                 case VFD_TEMP:                                         
; 846 |                         sprintf(buff, "%10.1f", tempvalue);            
; 847 |                         break;                                         
; 850 |                 // print to LCD                                        
; 851 |                 lcd_puts(buff, 7 + 20 * line);                         
; 853 |                 line++;                                                
; 854 |                 if (line >= VFD_MAX) {                                 
; 855 |                         line = 0;                                      
; 859 |         //=============================================================
;     | =====================//                                                
; 860 |         // temperature sensor reading
;     |                  //                                                    
; 861 |         //=============================================================
;     | =====================//                                                
; 863 |         // if its time to start a temp conversion...                   
; 864 |         if (ad7738_tempstart()) {                                      
; 865 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 868 |         // if its time to start a temp reading...                      
; 869 |         else if (ad7738_tempread()) {                                  
; 870 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 871 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 874 |         //=============================================================
;     | =====================//                                                
; 875 |         // Auto ID detection
;     |                  //                                                    
; 876 |         //=============================================================
;     | =====================//                                                
; 877 |         // check for changes in the load cells connected by "TAG ID"   
; 878 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 879 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 881 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 883 |                                 // new loadcell just plugged in        
; 884 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 885 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 887 |                                         DINT;                          
; 888 |                                         maf_rst();                     
; 889 |                                         ad7738_setcal();               
; 890 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 891 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 892 |                                         EINT;                          
; 894 |                                         lcd_clear();                   
; 895 |                                         update_units();                
; 896 |                                         autoidchanged = 1;             
; 899 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 900 |                 } else {                                               
; 902 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 904 |                         if (autoid[tagch]) {                           
; 905 |                                 autoid[tagch] = 0;                     
; 906 |                                 lcd_clear();                           
; 907 |                                 update_units();                        
; 908 |                                 autoidchanged = 1;                     
; 912 |                 tagch++;                                               
; 913 |                 if (tagch >= CHS_MAX) {                                
; 914 |                         tagch = 0;                                     
; 918 |         //=============================================================
;     | =====================//                                                
; 919 |         // Data streamming - Erik
;     |                      //                                                
; 920 |         //=============================================================
;     | =====================//                                                
; 921 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 922 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 923 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 924 |                 //      taking into account decimation, etc.           
; 925 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 927 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 928 |                         int gui_temp; // Storing ints to be sent to GUI
; 930 |                         ds_ct = 0;                                     
; 931 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 932 |                         j = 0;                                         
; 933 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 934 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 935 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 937 |                         gui_temp = getShelfVoltage(1);                 
; 938 |                         buff[j++] = 0xff & gui_temp;                   
; 939 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 941 |                         gui_temp = getShelfAvgTemp(1);                 
; 942 |                         buff[j++] = 0xff & gui_temp;                   
; 943 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 945 |                         gui_temp = getShelfMaxTemp(1);                 
; 946 |                         buff[j++] = 0xff & gui_temp;                   
; 947 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 949 |                         gui_temp = getShelfMinTemp(1);                 
; 950 |                         buff[j++] = 0xff & gui_temp;                   
; 951 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 953 |                         gui_temp = getShelfMaxTempID(1);               
; 954 |                         buff[j++] = 0xff & gui_temp;                   
; 955 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 957 |                         gui_temp = getShelfMinTempID(1);               
; 958 |                         buff[j++] = 0xff & gui_temp;                   
; 959 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 961 |                         gui_temp = getShelfAlarms(1);                  
; 962 |                         buff[j++] = 0xff & gui_temp;                   
; 963 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 965 |                         gui_temp = getShelfErrors(1);                  
; 966 |                         buff[j++] = 0xff & gui_temp;                   
; 967 |                         buff[j++] = 0xff & (gui_temp >> 8);            
; 1022 |                         if (ds_stop) {                                 
; 1023 |                                 ds_en = 0;                             
; 1026 |                         scia_send_bin(buff, j);         // send data   
; 1028 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 1029 |                 } else if (ad7738_getlimitchgd()) {                    
; 1030 |                         j = 0;                                         
; 1031 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 1032 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 1033 |                         for (i = 0; i < LIM_MAX; i++) {                
; 1034 |                                 buff[j++] = ad7738_getlimitst(i);      
; 1036 |                         scia_send_bin(buff, j);         // send data   
; 1037 |                 } else if (autoidchanged) {                            
; 1038 |                         autoidchanged = 0;                             
; 1040 |                         j = 0;                                         
; 1041 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 1042 |                         buff[j++] = GetAutoId;                  // 1,  
; 1043 |                         buff[j++] = conf_data.tagiden;                 
; 1044 |                         for (i = 0; i < CHS_MAX; i++) {                
; 1045 |                                 buff[j++] = autoid[i];                 
; 1047 |                         scia_send_bin(buff, j);         // send data   
; 1053 |         //=============================================================
;     | =====================//                                                
; 1054 |         // serial command processing
;     |                  //                                                    
; 1055 |         //=============================================================
;     | =====================//                                                
; 1057 |         //=============================================================
;     | =====================//                                                
; 1058 |         // Check for available command in the command buffer
;     |                  //                                                    
; 1059 |         //=============================================================
;     | =====================//                                                
; 1060 |         if (0 == scia_rx_getcmds()) {                                  
; 1061 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 1064 |         //=============================================================
;     | =====================//                                                
; 1065 |         // Read one command from command buffer
;     |                  //                                                    
; 1066 |         //=============================================================
;     | =====================//                                                
; 1067 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 1069 |         //=============================================================
;     | =====================//                                                
; 1070 |         // Empty command
;     |                          //                                            
; 1071 |         //=============================================================
;     | =====================//                                                
; 1072 |         if (0 == cmdlen) {                                             
; 1073 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 1074 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 1075 |                 continue;                                              
; 1078 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 1080 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1081 |                 // ASCII command mode processing
;     |                                  //                                    
; 1082 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1084 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 1087 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1088 |                 // Current configuration print out
;     |                          //                                            
; 1089 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1091 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1093 |                 case 'A':                                              
; 1095 |                         sprintf(buff, "\r\nVoltage:            %.2f %.2
;     | f\r\n",  getSystemCapVoltageF(), (float)getSystemCapVoltage()/10.0);   
; 1096 |                         scia_puts(buff);                               
; 1097 |                         sprintf(buff, "ShelfV :            %.2f %.2f\r\
;     | n",      (float)getModVoltage(1,1)/10.0,(float)getModVoltage(1,2)/10.0)
;     | ;                                                                      
; 1098 |                         scia_puts(buff);                               
; 1099 |                         sprintf(buff, "ShelfT :            %.2f (%d) %.
;     | 2f (%d)\r\n",    (float)getShelfMaxTemp(1)/10.0,getShelfMaxTempID(1),(f
;     | loat)getShelfMinTemp(1)/10.0,getShelfMinTempID(1));                    
; 1100 |                         scia_puts(buff);                               
; 1103 |                         sprintf(buff, "Current:            %.2f\r\n",
;     |  getSystemOutCurrentF());                                              
; 1104 |                         scia_puts(buff);                               
; 1107 |                         break;                                         
; 1160 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1162 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1164 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1167 |                         case 'A':                               // all 
; 1169 |                                 version = VERSION;                     
; 1170 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1171 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1172 |                                 scia_puts(buff);                       
; 1173 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1174 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1175 |                                 scia_puts(buff);                       
; 1176 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1177 |                                 scia_puts(buff);                       
; 1178 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1179 |                                                 conf_data.uname);      
; 1180 |                                 scia_puts(buff);                       
; 1182 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1183 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1184 |                                 scia_puts(buff);                       
; 1185 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1186 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1187 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1188 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1189 |                                         scia_puts(buff);               
; 1191 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1192 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1193 |                                 scia_puts(buff);                       
; 1195 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1196 |                                                 conf_data.filter);     
; 1197 |                                 scia_puts(buff);                       
; 1199 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1200 |                                         scia_puts("\r\n");             
; 1201 |                                         print_channel(ch);
;     |          // channel info                                               
; 1202 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1205 |                                 scia_puts("\r\n");                     
; 1206 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1207 |                                                 conf_data.velfilter);  
; 1208 |                                 scia_puts(buff);                       
; 1209 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1210 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1211 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1212 |                                         scia_puts(buff);               
; 1214 |                                 print_vfd();                           
; 1215 |                                 print_dac();                           
; 1216 |                                 print_limits();                        
; 1217 |                                 break;                                 
; 1219 |                         case 'S':
;     |  // sensor list                                                        
; 1221 |                                 scia_puts("\r\n");                     
; 1223 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1224 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1225 |                                         scia_puts(buff);               
; 1226 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1228 |                                 break;                                 
; 1230 |                         case 'D':
;     |  // Display settings                                                   
; 1232 |                                 print_vfd();                           
; 1233 |                                 break;                                 
; 1235 |                         case 'O':
;     |  // DAC settings                                                       
; 1237 |                                 print_dac();                           
; 1238 |                                 break;                                 
; 1240 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1242 |                                 print_limits();                        
; 1243 |                                 break;                                 
; 1245 |                         default:                                       
; 1246 |                                 goto INVALIDCMD;                       
; 1249 |                         break;                                         
; 1251 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1252 |                         // Unit config commands
;     |                                  //                                    
; 1253 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1254 |                 case 'U':                                       // Unit
; 1256 |                         if (cmdlen < 2) {                              
; 1257 |                                 goto INVALIDCMD;                       
; 1260 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1263 |                         case 'S':
;     |  // unit serial number                                                 
; 1265 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1266 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1267 |                                 conf_data.usn = atol(cmdbuff);         
; 1269 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1270 |                                 scia_puts(buff);                       
; 1271 |                                 unsaved = 1;                           
; 1272 |                                 break;                                 
; 1274 |                         case 'N':
;     |  // unit name                                                          
; 1276 |                                 j = sizeof(conf_data.uname) - 1;       
; 1277 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1278 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1279 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1281 |                                         cmdlen = j;                    
; 1282 |                                         cmdbuff[j] = '\0';             
; 1284 |                                 // also copy the null terminater       
; 1285 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1286 |                                                 cmdlen + 1);           
; 1287 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1289 |                                 scia_puts(cmdbuff);                    
; 1290 |                                 scia_puts("\r\n");                     
; 1291 |                                 unsaved = 1;                           
; 1292 |                                 break;                                 
; 1294 |                         case 'C':
;     |  // current sensor                                                     
; 1296 |                                 // channel number                      
; 1297 |                                 j = CHS_MAX;                           
; 1298 |                                 do {                                   
; 1299 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1300 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1301 |                                         ch = atoi(cmdbuff);            
; 1302 |                                         scia_puts(cmdbuff);            
; 1303 |                                         if (ch > 0 && ch <= j) {       
; 1304 |                                                 break;
;     |          // valid input channel number                                 
; 1306 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1307 |                                 } while (j);                           
; 1308 |                                 scia_puts("\r\n");                     
; 1309 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1311 |                                 // sensor number                       
; 1312 |                                 j = SENSPCH;                           
; 1313 |                                 do {                                   
; 1314 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1315 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1316 |                                         ss = atoi(cmdbuff);            
; 1317 |                                         scia_puts(cmdbuff);            
; 1318 |                                         if (ss > 0 && ss <= j) {       
; 1319 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1321 |                                                 break;                 
; 1323 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1324 |                                 } while (j);                           
; 1325 |                                 scia_puts("\r\n");                     
; 1326 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1328 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1329 |                                                 ch + 1, ss + 1);       
; 1330 |                                 scia_puts(buff);                       
; 1331 |                                 print_sensor(ss);                      
; 1332 |                                 unsaved = 1;                           
; 1334 |                                 DINT;                                  
; 1335 |                                 conf_data.ch[ch].ci = ss;              
; 1336 |                                 ad7738_setcal();                       
; 1338 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1339 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1340 |                                 EINT;                                  
; 1342 |                                 update_units();                        
; 1343 |                                 break;                                 
; 1345 |                         case 'I':
;     |  // interface                                                          
; 1347 |                                 for (j = 0; j < 4; j++) {              
; 1348 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1349 |                                         scia_puts(buff);               
; 1350 |                                         if (j < 3) {                   
; 1351 |                                                 scia_puts(", ");       
; 1354 |                                 scia_puts("\r\n");                     
; 1355 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1356 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1357 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1358 |                                 scia_puts(cmdbuff);                    
; 1359 |                                 scia_puts("\r\n");                     
; 1360 |                                 if (cmdlen == 0) {                     
; 1361 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1362 |                                         break;                         
; 1364 |                                 pt = atoi(cmdbuff);                    
; 1365 |                                 if (pt > 3) {                          
; 1366 |                                         scia_puts(                     
; 1367 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1368 |                                         break;                         
; 1370 |                                 conf_data.rxdir = pt;                  
; 1371 |                                 sprintf(buff,                          
; 1372 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1373 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1374 |                                 scia_puts(buff);                       
; 1375 |                                 scia_puts(                             
; 1376 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1377 |                                 unsaved = 1;                           
; 1378 |                                 break;                                 
; 1380 |                         case 'B':
;     |  // baudrate                                                           
; 1382 |                                 if (conf_data.rxdir == SDIR_USB        
; 1383 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1384 |                                         scia_puts(                     
; 1385 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1386 |                                         break;                         
; 1389 |                                 for (j = 0; j < 8; j++) {              
; 1390 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1391 |                                         scia_puts(buff);               
; 1392 |                                         if (j < 7) {                   
; 1393 |                                                 scia_puts(", ");       
; 1396 |                                 scia_puts("\r\n");                     
; 1397 |                                 cmdlen = sprintf(buff,                 
; 1398 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1399 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1400 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1401 |                                 scia_puts(cmdbuff);                    
; 1402 |                                 scia_puts("\r\n");                     
; 1403 |                                 if (cmdlen == 0) {                     
; 1404 |                                         scia_puts(                     
; 1405 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1406 |                                         break;                         
; 1408 |                                 pt = atoi(cmdbuff);                    
; 1409 |                                 if (pt > 7) {                          
; 1410 |                                         scia_puts(                     
; 1411 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1412 |                                         break;                         
; 1414 |                                 conf_data.baud = pt;                   
; 1415 |                                 sprintf(buff,                          
; 1416 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1417 |                                                 BAUD[conf_data.baud]); 
; 1418 |                                 scia_puts(buff);                       
; 1419 |                                 scia_puts(                             
; 1420 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1421 |                                 unsaved = 1;                           
; 1422 |                                 break;                                 
; 1424 |                         case 'F':
;     |  // averaging filter size                                              
; 1426 |                                 j = MAF_MAX;                           
; 1427 |                                 do {                                   
; 1428 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1429 |                                                         j);            
; 1430 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1431 |                                         i = atoi(cmdbuff);             
; 1432 |                                         scia_puts(cmdbuff);            
; 1433 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1434 |                                                 break;
;     |          // valid number input                                         
; 1436 |                                         scia_puts(                     
; 1437 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1438 |                                 } while (j);                           
; 1439 |                                 scia_puts("\r\n");                     
; 1441 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1442 |                                                 i);                    
; 1443 |                                 scia_puts(buff);                       
; 1444 |                                 unsaved = 1;                           
; 1446 |                                 // update new value                    
; 1447 |                                 DINT;                                  
; 1448 |                                 conf_data.filter = i;                  
; 1449 |                                 maf_rst();                             
; 1450 |                                 EINT;                                  
; 1451 |                                 break;                                 
; 1453 |                         case 'W':
;     |  // diff window ratio                                                  
; 1455 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1456 |                                                 conf_data.diffwin);    
; 1457 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1458 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1459 |                                 scia_puts(cmdbuff);                    
; 1460 |                                 scia_puts("\r\n");                     
; 1462 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1463 |                                                 conf_data.diffwin);    
; 1464 |                                 scia_puts(buff);                       
; 1465 |                                 unsaved = 1;                           
; 1467 |                                 DINT;                                  
; 1468 |                                 ad7738_setcal();                       
; 1469 |                                 maf_rst();                             
; 1470 |                                 EINT;                                  
; 1471 |                                 break;                                 
; 1473 |                         default:                                       
; 1474 |                                 goto INVALIDCMD;                       
; 1477 |                         break;                                         
; 1479 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1480 |                         // Board calibration
;     |                                  //                                    
; 1481 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1482 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1484 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1485 |                                 goto INVALIDCMD;                       
; 1488 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1489 |                                 goto INVALIDCMD;                       
; 1490 |                                 // invalid calibration method          
; 1493 |                         // channel index                               
; 1494 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1495 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1496 |                                 goto INVALIDCMD;                       
; 1497 |                                 // invalid channel number              
; 1499 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1501 |                         volt[0] = 0;                                   
; 1502 |                         volt[1] = 0;                                   
; 1503 |                         for (j = 3; j < cmdlen; j++) {                 
; 1504 |                                 if (cmdbuff[j] == 'X') {               
; 1505 |                                         j++;                           
; 1506 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1509 |                                 if (cmdbuff[j] == 'Y') {               
; 1510 |                                         j++;                           
; 1511 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1515 |                         if (volt[0] == volt[1]) {                      
; 1516 |                                 goto INVALIDCMD;                       
; 1517 |                                 // invalid parameters                  
; 1520 |                         lcd_clear();                                   
; 1521 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1522 |                         lcd_puts(buff, 20);                            
; 1523 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1524 |                         lcd_puts(buff, 40);                            
; 1525 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1526 |                         lcd_puts(buff, 60);                            
; 1528 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1531 |                         case 'C':
;     |  // board ADC calibration                                              
; 1533 |                                 lcd_puts("Board Calibration...", 0);   
; 1535 |                                 sprintf(buff,                          
; 1536 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1537 |                                                 ch + 1);               
; 1538 |                                 scia_puts(buff);                       
; 1550 |                                 for (j = 0; j < 2; j++) {              
; 1551 |                                         sprintf(buff,                  
; 1552 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1553 |                                                         volt[j]);      
; 1554 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1555 |                                         scia_puts("Reading ... ");     
; 1557 |                                         dsum[j] = 0;                   
; 1558 |                                         sampcnt = CAL_SAMPLES;         
; 1559 |                                         while (sampcnt--) {            
; 1560 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1561 |                                                         delay_us(1);
;     |                  // wait                                               
; 1563 |                                                 cntp = ad7738_getraw();
; 1564 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1567 |                                         scia_puts("done\r\n");         
; 1570 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1571 |                                                 / (dsum[1] - dsum[0]); 
; 1573 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1574 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1575 |                                 scia_puts(buff);                       
; 1576 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1577 |                                 break;                                 
; 1579 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1581 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1582 |                                                 || volt[1] < -10) {    
; 1583 |                                         lcd_clear();                   
; 1584 |                                         update_units();                
; 1585 |                                         goto INVALIDCMD;               
; 1586 |                                         // invalid parameters          
; 1589 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1591 |                                 sprintf(buff,                          
; 1592 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1593 |                                                 ch + 1);               
; 1594 |                                 scia_puts(buff);                       
; 1595 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1596 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1598 |                                 for (j = 0; j < 2; j++) {              
; 1599 |                                         if (volt[j] < 0) {             
; 1600 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1601 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1602 |                                         } else {                       
; 1603 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1604 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1606 |                                         if (dsum[0] <= 0) {            
; 1607 |                                                 dacc[j] = 0;           
; 1608 |                                         } else if (dsum[0] >= 0xffff) {
; 1609 |                                                 dacc[j] = 0xffff;      
; 1610 |                                         } else {                       
; 1611 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1614 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1615 |                                         scia_puts(buff);               
; 1616 |                                         cmdbuff[0] = '\0';             
; 1618 |                                         do {                           
; 1619 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1620 |                                                 latch_dac();           
; 1622 |                                                 do {                   
; 1623 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1624 | 
;     |  sizeof(cmdbuff));                                                     
; 1625 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1626 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1628 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1629 |                                                         break;
;     |                  // done                                               
; 1632 |                                                 i = atoi(cmdbuff + 1); 
; 1633 |                                                 if (i == 0) {          
; 1634 |                                                         i = 1;         
; 1637 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1639 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1640 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1641 |                                                         } else {       
; 1642 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1644 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1646 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1647 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1648 |                                                         } else {       
; 1649 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1652 |                                         } while (i);                   
; 1654 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1655 |                                         scia_puts(buff);               
; 1658 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1660 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1661 |                                 cmdbuff[0] = '\0';                     
; 1663 |                                 do {                                   
; 1664 |                                         mcbsp_xmit(dacc[2], ch);       
; 1665 |                                         latch_dac();                   
; 1667 |                                         do {                           
; 1668 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1669 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1670 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1672 |                                         if ('S' == cmdbuff[0]) {       
; 1673 |                                                 break;
;     |          // done                                                       
; 1676 |                                         i = atoi(cmdbuff + 1);         
; 1677 |                                         if (i == 0) {                  
; 1678 |                                                 i = 1;                 
; 1681 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1683 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1684 |                                                         dacc[2] += i;  
; 1685 |                                                 } else {               
; 1686 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1688 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1690 |                                                 if (dacc[2] >= i) {    
; 1691 |                                                         dacc[2] -= i;  
; 1692 |                                                 } else {               
; 1693 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1696 |                                 } while (i);                           
; 1698 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1699 |                                 scia_puts(buff);                       
; 1701 |                                 // do the calculations                 
; 1702 |                                 if (volt[0] < 0) {                     
; 1703 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1704 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1705 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1706 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1707 |                                 } else {                               
; 1708 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1709 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1710 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1711 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1713 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1715 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1717 |                                 sprintf(buff,                          
; 1718 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1719 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1720 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1721 |                                 scia_puts(buff);                       
; 1723 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1724 |                                 break;                                 
; 1726 |                         default:                                       
; 1727 |                                 goto INVALIDCMD;                       
; 1730 |                         unsaved = 1;                                   
; 1731 |                         lcd_clear();                                   
; 1732 |                         update_units();                                
; 1734 |                         DINT;                                          
; 1735 |                         ad7738_setcal();                               
; 1736 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1737 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1738 |                         EINT;                                          
; 1739 |                         break;                                         
; 1741 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1742 |                         // Channel sensor calibration
;     |                                  //                                    
; 1743 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1744 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1746 |                         if (cmdlen < 2) {                              
; 1747 |                                 goto INVALIDCMD;                       
; 1750 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1751 |                                         && 'S' != cmdbuff[1]) {        
; 1752 |                                 goto INVALIDCMD;                       
; 1753 |                                 // invalid calibration method          
; 1755 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1757 |                         lcd_clear();                                   
; 1758 |                         lcd_puts("Sensor Calibration..", 0);           
; 1760 |                         // === read informations ====                  
; 1761 |                         // channel number                              
; 1762 |                         j = CHS_MAX;                                   
; 1763 |                         do {                                           
; 1764 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1765 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1766 |                                 ch = atoi(cmdbuff);                    
; 1767 |                                 scia_puts(cmdbuff);                    
; 1768 |                                 if (ch > 0 && ch <= j) {               
; 1769 |                                         break;
;     |  // valid input channel number                                         
; 1771 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1772 |                         } while (j);                                   
; 1773 |                         scia_puts("\r\n");                             
; 1774 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1776 |                         // sensor number                               
; 1777 |                         j = SENSPCH;                                   
; 1778 |                         do {                                           
; 1779 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1780 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1781 |                                 ss = atoi(cmdbuff);                    
; 1782 |                                 scia_puts(cmdbuff);                    
; 1783 |                                 if (ss > 0 && ss <= j) {               
; 1784 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1786 |                                         break;                         
; 1788 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1789 |                         } while (j);                                   
; 1790 |                         scia_puts("\r\n");                             
; 1791 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1793 |                         // put on the vfd                              
; 1794 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1795 |                         lcd_puts(buff, 20);                            
; 1797 |                         // sensor serial number                        
; 1798 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1799 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1800 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1801 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1803 |                                 cmdlen = j;                            
; 1804 |                                 cmdbuff[j] = '\0';                     
; 1806 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1807 |                         scia_puts(cmdbuff);                            
; 1808 |                         scia_puts("\r\n");                             
; 1810 |                         // sensor label                                
; 1811 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1812 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1813 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1814 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1816 |                                 cmdlen = j;                            
; 1817 |                                 cmdbuff[j] = '\0';                     
; 1819 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1820 |                         scia_puts(cmdbuff);                            
; 1821 |                         scia_puts("\r\n");                             
; 1823 |                         // unit                                        
; 1824 |                         for (j = 0; j < 7; j++) {                      
; 1825 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1827 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1828 |                         scia_puts(buff);                               
; 1829 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1830 |                                         sizeof(cmdbuff));              
; 1831 |                         tsensor.unit = atoi(cmdbuff);                  
; 1833 |                         switch (tsensor.unit) {                        
; 1834 |                         case 0:                                 // lb  
; 1835 |                         case 1:                                 // kg  
; 1836 |                                 tsensor.unit |= 0x10;                  
; 1837 |                                 break;                                 
; 1838 |                         case 2:                                 // in  
; 1839 |                         case 3:                                 // cm  
; 1840 |                         case 4:                                 // mm  
; 1841 |                                 tsensor.unit |= 0x20;                  
; 1842 |                                 break;                                 
; 1843 |                         case 5:                                 // ps  
; 1844 |                                 tsensor.unit |= 0x30;                  
; 1845 |                                 break;                                 
; 1846 |                         case 6:                                 // nm  
; 1847 |                                 tsensor.unit |= 0x40;                  
; 1848 |                                 break;                                 
; 1849 |                         case 7:                                        
; 1850 |                         case 8:                                        
; 1851 |                         case 15:                                       
; 1852 |                                 tsensor.unit |= 0xf0;                  
; 1853 |                                 break;                                 
; 1854 |                         default:                                       
; 1855 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1856 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1857 |                                 break;                                 
; 1859 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1860 |                         tsensor.ufactor = 1;                    // 1:1 
; 1862 |                         scia_puts(cmdbuff);                            
; 1863 |                         scia_puts("\r\n");                             
; 1865 |                         // range                                       
; 1866 |                         j = 1;                                         
; 1867 |                         do {                                           
; 1868 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1869 |                                 tsensor.range = atof(cmdbuff);         
; 1870 |                                 if (tsensor.range != 0) {              
; 1871 |                                         break;                         
; 1873 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1874 |                         } while (j);                                   
; 1875 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1876 |                         scia_puts(cmdbuff);                            
; 1877 |                         scia_puts("\r\n");                             
; 1879 |                         tsensor.tagid = tagid(ch);                     
; 1881 |                         if (tsensor.tagid == 0) {                      
; 1882 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1883 |                         } else {                                       
; 1884 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1886 |                         scia_puts(buff);                               
; 1888 |                         switch (cmethod)
;     |  // on method code                                                     
; 1891 |                         case 'V':
;     |  // mv/v cal                                                           
; 1893 |                                 lcd_puts("Method: mv/v", 40);          
; 1895 |                                 tsensor.method = MD_RUN_MVV;           
; 1896 |                                 tsensor.points = 1;                    
; 1898 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1899 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1900 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1901 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1902 |                                 if (tsensor.slope[0] == 0) {           
; 1903 |                                         tsensor.slope[0] = 1;          
; 1905 |                                 scia_puts(cmdbuff);                    
; 1906 |                                 scia_puts("\r\n");                     
; 1908 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1909 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1911 |                                 scia_puts("Reading ... ");             
; 1913 |                                 dsum[0] = 0;                           
; 1914 |                                 sampcnt = CAL_SAMPLES;                 
; 1915 |                                 while (sampcnt--) {                    
; 1916 |                                         while (0 == ad7738_rawrdy()) { 
; 1917 |                                                 delay_us(1);
;     |          // wait                                                       
; 1920 |                                         cntp = ad7738_getraw();        
; 1921 |                                         dsum[0] += cntp->adc[ch];      
; 1923 |                                 scia_puts("done\r\n");                 
; 1925 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1926 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1927 |                                 break;                                 
; 1929 |                         case 'M':
;     |  // mass cal                                                           
; 1931 |                                 tsensor.method = MD_RUN_MAS;           
; 1933 |                                 // calibration points for mass cal only
; 1934 |                                 j = PNT_MAX;                           
; 1935 |                                 do {                                   
; 1936 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1937 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1938 |                                         tsensor.points = atoi(cmdbuff);
; 1939 |                                         scia_puts(cmdbuff);            
; 1940 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1941 |                                                 break;                 
; 1943 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1945 |                                 } while (j);                           
; 1946 |                                 scia_puts("\r\n");                     
; 1948 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1949 |                                 lcd_puts(buff, 40);                    
; 1951 |                                 // calculate the default point values  
; 1952 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1953 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1954 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1957 |                                 // read in value with default provided 
; 1958 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1959 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1960 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1961 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1963 |                                         // zero length response set the
;     |  default                                                               
; 1964 |                                         if (cmdlen > 0) {              
; 1965 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1967 |                                         scia_puts(cmdbuff);            
; 1968 |                                         scia_puts("\r\n");             
; 1971 |                                 // TODO: sort the list of points       
; 1973 |                                 // read adc count for each point       
; 1974 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1975 |                                         sprintf(buff,                  
; 1976 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1977 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1978 |                                                         j + 1);        
; 1979 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1980 |                                         scia_puts("Reading ... ");     
; 1982 |                                         dsum[0] = 0;                   
; 1983 |                                         sampcnt = CAL_SAMPLES;         
; 1984 |                                         while (sampcnt--) {            
; 1985 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1986 |                                                         delay_us(1);
;     |                  // wait                                               
; 1989 |                                                 cntp = ad7738_getraw();
; 1990 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1992 |                                         scia_puts("done\r\n");         
; 1993 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1996 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1997 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1998 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1999 |                                                         - tsensor.mass[
;     | j])                                                                    
; 2000 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 2001 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 2002 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 2003 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 2004 | 
;     |  * tsensor.adc[j];                                                     
; 2006 |                                 break;                                 
; 2008 |                         case 'S':
;     |  // shunt cal                                                          
; 2010 |                                 lcd_puts("Method: shunt", 40);         
; 2012 |                                 tsensor.method = MD_RUN_SHT;           
; 2013 |                                 tsensor.points = 1;                    
; 2015 |                                 sprintf(buff,                          
; 2016 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 2017 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 2018 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2019 |                                 scia_puts(cmdbuff);                    
; 2020 |                                 scale = atof(cmdbuff);                 
; 2021 |                                 if (scale == 0) {                      
; 2022 |                                         scale = 1.46;                  
; 2023 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 2025 |                                 scia_puts("\r\n");                     
; 2027 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 2028 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 2030 |                                 scia_puts("Reading ... ");             
; 2032 |                                 for (j = 0; j < 2; j++) {              
; 2033 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 2035 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 2036 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 2037 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 2039 |                                                 DINT;                  
; 2040 |                                                 maf_rst();             
; 2041 |                                                 EINT;                  
; 2042 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 2045 |                                         dsum[j] = 0;                   
; 2046 |                                         sampcnt = CAL_SAMPLES;         
; 2047 |                                         while (sampcnt--) {            
; 2048 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 2049 |                                                         delay_us(1);
;     |                  // wait                                               
; 2052 |                                                 cntp = ad7738_getraw();
; 2053 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 2057 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 2058 |                                 DINT;                                  
; 2059 |                                 maf_rst();                             
; 2060 |                                 EINT;                                  
; 2062 |                                 scia_puts("done\r\n");                 
; 2064 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 2065 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 2066 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 2067 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 2068 |                                 break;                                 
; 2070 |                         default:                                       
; 2071 |                                 lcd_clear();                           
; 2072 |                                 update_units();                        
; 2073 |                                 goto INVALIDCMD;                       
; 2076 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 2077 |                         scia_getparam(                                 
; 2078 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 2079 |                                         cmdbuff, sizeof(cmdbuff));     
; 2080 |                         scia_puts("Reading ... ");                     
; 2082 |                         for (j = 0; j < 2; j++) {                      
; 2083 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 2085 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 2086 |                                         for (i = 0; i < 50; i++) {     
; 2087 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 2089 |                                         DINT;                          
; 2090 |                                         maf_rst();                     
; 2091 |                                         EINT;                          
; 2092 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 2095 |                                 dsum[j] = 0;                           
; 2096 |                                 sampcnt = CAL_SAMPLES;                 
; 2097 |                                 while (sampcnt--) {                    
; 2098 |                                         while (0 == ad7738_rawrdy()) { 
; 2099 |                                                 delay_us(1);
;     |          // wait                                                       
; 2102 |                                         cntp = ad7738_getraw();        
; 2103 |                                         dsum[j] += cntp->adc[ch];      
; 2105 |                                 dsum[j] /= CAL_SAMPLES;                
; 2107 |                                 pt = 0;                                
; 2108 |                                 if (tsensor.points > 2) {              
; 2109 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2110 |                                                 pt++;                  
; 2113 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2114 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2117 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2118 |                         DINT;                                          
; 2119 |                         maf_rst();                                     
; 2120 |                         EINT;                                          
; 2122 |                         scia_puts("done\r\n");                         
; 2124 |                         tsensor.shunt = volt[1] - volt[0];             
; 2126 |                         // setup some other members of the structure   
; 2127 |                         tsensor.tare = 0;                              
; 2128 |                         tsensor.dacgain = 1;                           
; 2129 |                         tsensor.dacoff = 0;                            
; 2130 |                         tsensor.ch = ch;                               
; 2132 |                         DINT;                                          
; 2133 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2134 |                                         sizeof(sconf_t));              
; 2136 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2138 |                         ad7738_setcal();                               
; 2139 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2140 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2141 |                         EINT;                                          
; 2143 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2144 |                                         ch + 1, ss + 1);               
; 2145 |                         scia_puts(buff);                               
; 2146 |                         print_sensor(ss);                              
; 2148 |                         unsaved = 1;                                   
; 2149 |                         lcd_clear();                                   
; 2150 |                         update_units();                                
; 2151 |                         break;                                         
; 2153 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2154 |                         // sensor config commands
;     |                                          //                            
; 2155 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2156 |                 case 'S':                               // sensor      
; 2158 |                         if (cmdlen < 2) {                              
; 2159 |                                 goto INVALIDCMD;                       
; 2162 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2163 |                                         && 'D' != cmdbuff[1]) {        
; 2164 |                                 goto INVALIDCMD;                       
; 2165 |                                 // invalid command                     
; 2167 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2187 |                         // sensor number                               
; 2188 |                         j = SENSPCH;                                   
; 2189 |                         do {                                           
; 2190 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2191 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2192 |                                 ss = atoi(cmdbuff);                    
; 2193 |                                 scia_puts(cmdbuff);                    
; 2194 |                                 if (ss > 0 && ss <= j) {               
; 2195 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2197 |                                         break;                         
; 2199 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2200 |                         } while (j);                                   
; 2201 |                         scia_puts("\r\n");                             
; 2202 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2204 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2207 |                         case 'N':
;     |  // change sensor label                                                
; 2209 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2210 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2211 |                                                 ss + 1, j);            
; 2212 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2213 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2215 |                                         cmdlen = j;                    
; 2216 |                                         cmdbuff[j] = '\0';             
; 2218 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2219 |                                                 cmdlen + 1);           
; 2220 |                                 scia_puts(cmdbuff);                    
; 2221 |                                 scia_puts("\r\n");                     
; 2222 |                                 unsaved = 1;                           
; 2224 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2225 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2226 |                                 scia_puts(buff);                       
; 2227 |                                 break;                                 
; 2229 |                         case 'U':
;     |  // change the output unit                                             
; 2231 |                                 scale = 0;                             
; 2233 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2234 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2236 |                                         do {                           
; 2237 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2238 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2239 |                                                 j = atoi(cmdbuff);     
; 2240 |                                                 scia_puts(cmdbuff);    
; 2241 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2242 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2244 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2245 |                                         scia_puts("\r\n");             
; 2247 |                                         switch (j) {                   
; 2248 |                                         case 0:                        
; 2249 |                                                 scale = 1;             
; 2250 |                                                 j |= 0x10;             
; 2251 |                                                 break;                 
; 2252 |                                         case 1:                        
; 2253 |                                                 scale = LB_TO_KG;      
; 2254 |                                                 j |= 0x10;             
; 2255 |                                                 break;                 
; 2256 |                                         case 7:                        
; 2257 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2258 |                                                 j |= 0xf0;             
; 2259 |                                                 break;                 
; 2261 |                                         break;                         
; 2263 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2265 |                                         do {                           
; 2266 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2267 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2268 |                                                 j = atoi(cmdbuff);     
; 2269 |                                                 scia_puts(cmdbuff);    
; 2270 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2271 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2273 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2274 |                                         scia_puts("\r\n");             
; 2276 |                                         switch (j) {                   
; 2277 |                                         case 0:                        
; 2278 |                                                 scale = 1.0 / LB_TO_KG;
; 2279 |                                                 j |= 0x10;             
; 2280 |                                                 break;                 
; 2281 |                                         case 1:                        
; 2282 |                                                 scale = 1;             
; 2283 |                                                 j |= 0x10;             
; 2284 |                                                 break;                 
; 2285 |                                         case 7:                        
; 2286 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2287 |                                                 j |= 0xf0;             
; 2288 |                                                 break;                 
; 2290 |                                         break;                         
; 2292 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2294 |                                         do {                           
; 2295 |                                                 scia_getparam(         
; 2296 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2297 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2298 |                                                 j = atoi(cmdbuff);     
; 2299 |                                                 scia_puts(cmdbuff);    
; 2300 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2301 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2303 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2304 |                                         scia_puts("\r\n");             
; 2306 |                                         switch (j) {                   
; 2307 |                                         case 2:                        
; 2308 |                                                 scale = 1;             
; 2309 |                                                 j |= 0x20;             
; 2310 |                                                 break;                 
; 2311 |                                         case 3:                        
; 2312 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2313 |                                                 j |= 0x20;             
; 2314 |                                                 break;                 
; 2315 |                                         case 4:                        
; 2316 |                                                 scale = IN_TO_MM;      
; 2317 |                                                 j |= 0x20;             
; 2318 |                                                 break;                 
; 2319 |                                         case 7:                        
; 2320 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2321 |                                                 j |= 0xf0;             
; 2322 |                                                 break;                 
; 2324 |                                         break;                         
; 2326 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2328 |                                         do {                           
; 2329 |                                                 scia_getparam(         
; 2330 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2331 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2332 |                                                 j = atoi(cmdbuff);     
; 2333 |                                                 scia_puts(cmdbuff);    
; 2334 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2335 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2337 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2338 |                                         scia_puts("\r\n");             
; 2340 |                                         switch (j) {                   
; 2341 |                                         case 2:                        
; 2342 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2343 |                                                 j |= 0x20;             
; 2344 |                                                 break;                 
; 2345 |                                         case 3:                        
; 2346 |                                                 scale = 1;             
; 2347 |                                                 j |= 0x20;             
; 2348 |                                                 break;                 
; 2349 |                                         case 4:                        
; 2350 |                                                 scale = 10;            
; 2351 |                                                 j |= 0x20;             
; 2352 |                                                 break;                 
; 2353 |                                         case 7:                        
; 2354 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2355 |                                                 j |= 0xf0;             
; 2356 |                                                 break;                 
; 2358 |                                         break;                         
; 2360 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2362 |                                         do {                           
; 2363 |                                                 scia_getparam(         
; 2364 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2365 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2366 |                                                 j = atoi(cmdbuff);     
; 2367 |                                                 scia_puts(cmdbuff);    
; 2368 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2369 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2371 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2372 |                                         scia_puts("\r\n");             
; 2374 |                                         switch (j) {                   
; 2375 |                                         case 2:                        
; 2376 |                                                 scale = 1.0 / IN_TO_MM;
; 2377 |                                                 j |= 0x20;             
; 2378 |                                                 break;                 
; 2379 |                                         case 3:                        
; 2380 |                                                 scale = 0.1;           
; 2381 |                                                 j |= 0x20;             
; 2382 |                                                 break;                 
; 2383 |                                         case 4:                        
; 2384 |                                                 scale = 1;             
; 2385 |                                                 j |= 0x20;             
; 2386 |                                                 break;                 
; 2387 |                                         case 7:                        
; 2388 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2389 |                                                 j |= 0xf0;             
; 2390 |                                                 break;                 
; 2392 |                                         break;                         
; 2394 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2396 |                                         do {                           
; 2397 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2398 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2399 |                                                 j = atoi(cmdbuff);     
; 2400 |                                                 scia_puts(cmdbuff);    
; 2401 |                                                 if (j != 5 && j != 7) {
; 2402 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2404 |                                         } while (j != 5 && j != 7);    
; 2405 |                                         scia_puts("\r\n");             
; 2407 |                                         switch (j) {                   
; 2408 |                                         case 5:                        
; 2409 |                                                 scale = 1;             
; 2410 |                                                 j |= 0x30;             
; 2411 |                                                 break;                 
; 2412 |                                         case 7:                        
; 2413 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2414 |                                                 j |= 0xf0;             
; 2415 |                                                 break;                 
; 2417 |                                         break;                         
; 2419 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2421 |                                         do {                           
; 2422 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2423 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2424 |                                                 j = atoi(cmdbuff);     
; 2425 |                                                 scia_puts(cmdbuff);    
; 2426 |                                                 if (j != 6 && j != 7) {
; 2427 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2429 |                                         } while (j != 6 && j != 7);    
; 2430 |                                         scia_puts("\r\n");             
; 2432 |                                         switch (j) {                   
; 2433 |                                         case 6:                        
; 2434 |                                                 scale = 1;             
; 2435 |                                                 j |= 0x40;             
; 2436 |                                                 break;                 
; 2437 |                                         case 7:                        
; 2438 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2439 |                                                 j |= 0xf0;             
; 2440 |                                                 break;                 
; 2442 |                                         break;                         
; 2444 |                                 default:                               
; 2445 |                                         break;                         
; 2448 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2449 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2450 |                                         break;                         
; 2453 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2454 |                                         scia_puts(                     
; 2455 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2456 |                                         break;                         
; 2459 |                                 conf_data.sensor[ss].ounit = j;        
; 2460 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2461 |                                 unsaved = 1;                           
; 2463 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2464 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2465 |                                 scia_puts(buff);                       
; 2467 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2468 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2469 |                                                 update_units();        
; 2470 |                                                 DINT;                  
; 2471 |                                                 ad7738_setcal();       
; 2472 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2473 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2474 |                                                 EINT;                  
; 2477 |                                 break;                                 
; 2479 |                         case 'B':
;     |  // change percent base                                                
; 2481 |                                 // base                                
; 2482 |                                 j = 1;                                 
; 2483 |                                 do {                                   
; 2484 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2485 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2486 |                                         scale = atof(cmdbuff);         
; 2487 |                                         scia_puts(cmdbuff);            
; 2488 |                                         if (scale != 0) {              
; 2489 |                                                 break;                 
; 2491 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2492 |                                 } while (j);                           
; 2493 |                                 scia_puts("\r\n");                     
; 2494 |                                 conf_data.sensor[ss].base = scale;     
; 2495 |                                 unsaved = 1;                           
; 2497 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2498 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2499 |                                 scia_puts(buff);                       
; 2501 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2502 |                                         // output unit is percent      
; 2503 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2504 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2506 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2507 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2508 |                                                         // changed is f
;     | or the current sensor                                                  
; 2509 |                                                         DINT;          
; 2510 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2511 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2512 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2513 |                                                         EINT;          
; 2517 |                                 break;                                 
; 2519 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2521 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2522 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2523 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2524 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2525 |                                 scia_puts(cmdbuff);                    
; 2526 |                                 scia_puts("\r\n");                     
; 2528 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2529 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2530 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2531 |                                 scia_puts(cmdbuff);                    
; 2532 |                                 scia_puts("\r\n");                     
; 2533 |                                 unsaved = 1;                           
; 2535 |                                 sprintf(buff,                          
; 2536 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2537 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2538 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2539 |                                 scia_puts(buff);                       
; 2541 |                                 DINT;                                  
; 2542 |                                 ad7738_setcal();                       
; 2543 |                                 EINT;                                  
; 2544 |                                 break;                                 
; 2546 |                         default:                                       
; 2547 |                                 goto INVALIDCMD;                       
; 2550 |                         break;                                         
; 2552 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2553 |                         // Encoder config commands
;     |                                  //                                    
; 2554 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2555 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2557 |                         if (cmdlen < 2) {                              
; 2558 |                                 goto INVALIDCMD;                       
; 2561 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2564 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2566 |                                 j = MAF_MAX;                           
; 2567 |                                 do {                                   
; 2568 |                                         sprintf(buff,                  
; 2569 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2570 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2571 |                                         i = atoi(cmdbuff);             
; 2572 |                                         scia_puts(cmdbuff);            
; 2573 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2574 |                                                 break;
;     |          // valid number input                                         
; 2576 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2577 |                                 } while (j);                           
; 2578 |                                 scia_puts("\r\n");                     
; 2580 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2581 |                                                 i);                    
; 2582 |                                 scia_puts(buff);                       
; 2583 |                                 unsaved = 1;                           
; 2585 |                                 // update new value                    
; 2586 |                                 DINT;                                  
; 2587 |                                 conf_data.velfilter = i;               
; 2588 |                                 ad7738_setcal();                       
; 2589 |                                 velf_rst();                            
; 2590 |                                 EINT;                                  
; 2591 |                                 break;                                 
; 2593 |                         case 'P':
;     |  // count per inch                                                     
; 2595 |                                 // channel number                      
; 2596 |                                 j = ENC_MAX;                           
; 2597 |                                 do {                                   
; 2598 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2599 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2600 |                                         ss = atoi(cmdbuff);            
; 2601 |                                         scia_puts(cmdbuff);            
; 2602 |                                         if (ss > 0 && ss <= j) {       
; 2603 |                                                 break;
;     |          // valid input line number                                    
; 2605 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2606 |                                 } while (j);                           
; 2607 |                                 scia_puts("\r\n");                     
; 2608 |                                 ss--;
;     |  // line number, convert to index                                      
; 2610 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2611 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2612 |                                 templg = atol(cmdbuff);                
; 2613 |                                 scia_puts(cmdbuff);                    
; 2614 |                                 scia_puts("\r\n");                     
; 2615 |                                 if (templg == 0) {                     
; 2616 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2617 |                                         break;                         
; 2619 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2620 |                                                 ss + 1, templg);       
; 2621 |                                 scia_puts(buff);                       
; 2622 |                                 unsaved = 1;                           
; 2624 |                                 // update new value                    
; 2625 |                                 DINT;                                  
; 2626 |                                 conf_data.cntperin[ss] = templg;       
; 2627 |                                 ad7738_setcal();                       
; 2628 |                                 velf_rst();                            
; 2629 |                                 EINT;                                  
; 2630 |                                 break;                                 
; 2632 |                         break;                                         
; 2634 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2635 |                         // Display command
;     |                                  //                                    
; 2636 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2637 |                 case 'D':                                              
; 2639 |                         if (cmdlen < 2) {                              
; 2640 |                                 goto INVALIDCMD;                       
; 2643 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2645 |                         case 'S':
;     |  // selection                                                          
; 2647 |                                 // line number                         
; 2648 |                                 j = VFD_MAX;                           
; 2649 |                                 do {                                   
; 2650 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2651 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2652 |                                         ss = atoi(cmdbuff);            
; 2653 |                                         scia_puts(cmdbuff);            
; 2654 |                                         if (ss > 0 && ss <= j) {       
; 2655 |                                                 break;
;     |          // valid input line number                                    
; 2657 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2658 |                                 } while (j);                           
; 2659 |                                 scia_puts("\r\n");                     
; 2660 |                                 ss--;
;     |  // line number, convert to index                                      
; 2662 |                                 // what                                
; 2663 |                                 for (j = 0; j < 7; j++) {              
; 2664 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2665 |                                         scia_puts(buff);               
; 2666 |                                         if (j < 6) {                   
; 2667 |                                                 scia_puts(", ");       
; 2670 |                                 scia_puts("\r\n");                     
; 2671 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2672 |                                                 ss + 1);               
; 2673 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2674 |                                 pt = atoi(cmdbuff);                    
; 2675 |                                 if (pt >= 7) {                         
; 2676 |                                         pt = 0;                        
; 2677 |                                         scia_puts(                     
; 2678 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2680 |                                 scia_puts(cmdbuff);                    
; 2681 |                                 scia_puts("\r\n");                     
; 2682 |                                 conf_data.vfd[ss].what = pt;           
; 2684 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2686 |                                 case VFD_LOAD:                         
; 2687 |                                 case VFD_PEAK:                         
; 2688 |                                 case VFD_VALL:                         
; 2690 |                                         j = CHS_MAX;                   
; 2691 |                                         goto VFD_CHANNEL;              
; 2693 |                                 case VFD_POSI:                         
; 2694 |                                 case VFD_VELO:                         
; 2696 |                                         j = ENC_MAX;                   
; 2698 |                                         VFD_CHANNEL:                   
; 2699 |                                         // channel number              
; 2700 |                                         do {                           
; 2701 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2702 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2703 |                                                 ch = atoi(cmdbuff);    
; 2704 |                                                 scia_puts(cmdbuff);    
; 2705 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2706 |                                                         break;
;     |          // valid input channel number                                 
; 2708 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2709 |                                         } while (j);                   
; 2710 |                                         scia_puts("\r\n");             
; 2711 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2712 |                                         conf_data.vfd[ss].ch = ch;     
; 2714 |                                         // digits after decimal point  
; 2715 |                                         j = 1;                         
; 2716 |                                         do {                           
; 2717 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2718 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2719 |                                                 i = atoi(cmdbuff);     
; 2720 |                                                 if (i >= 0 && i <= 5) {
; 2721 |                                                         break;         
; 2723 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2724 |                                         } while (j);                   
; 2725 |                                         scia_puts(cmdbuff);            
; 2726 |                                         scia_puts("\r\n");             
; 2727 |                                         conf_data.vfd[ss].adec = i;    
; 2729 |                                         sprintf(buff,                  
; 2730 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2731 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2732 |                                         scia_puts(buff);               
; 2733 |                                         break;                         
; 2735 |                                 case VFD_LIMIT:                        
; 2736 |                                         // channel number              
; 2737 |                                         j = CHS_MAX;                   
; 2738 |                                         do {                           
; 2739 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2740 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2741 |                                                 ch = atoi(cmdbuff);    
; 2742 |                                                 scia_puts(cmdbuff);    
; 2743 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2744 |                                                         break;
;     |          // valid input channel number                                 
; 2746 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2747 |                                         } while (j);                   
; 2748 |                                         scia_puts("\r\n");             
; 2749 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2750 |                                         conf_data.vfd[ss].ch = ch;     
; 2752 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2753 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2754 |                                         scia_puts(buff);               
; 2755 |                                         break;                         
; 2756 |                                 case VFD_TEMP:                         
; 2757 |                                         // no more info                
; 2758 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2759 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2760 |                                         scia_puts(buff);               
; 2761 |                                         break;                         
; 2764 |                                 lcd_clear();                           
; 2765 |                                 update_units();                        
; 2766 |                                 unsaved = 1;                           
; 2767 |                                 break;                                 
; 2769 |                         default:                                       
; 2770 |                                 goto INVALIDCMD;                       
; 2773 |                         break;                                         
; 2775 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2776 |                         // DAC out command
;     |                                  //                                    
; 2777 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2778 |                 case 'O':                                              
; 2780 |                         if (cmdlen < 2) {                              
; 2781 |                                 goto INVALIDCMD;                       
; 2784 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2786 |                         case 'S':
;     |  // selection                                                          
; 2788 |                                 // DAC channel number                  
; 2789 |                                 j = DAC_MAX;                           
; 2790 |                                 do {                                   
; 2791 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2792 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2793 |                                         ss = atoi(cmdbuff);            
; 2794 |                                         scia_puts(cmdbuff);            
; 2795 |                                         if (ss > 0 && ss <= j) {       
; 2796 |                                                 break;
;     |          // valid input channel number                                 
; 2798 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2799 |                                 } while (j);                           
; 2800 |                                 scia_puts("\r\n");                     
; 2801 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2803 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2804 |                                 for (j = 0; j < 5; j++) {              
; 2805 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2806 |                                         scia_puts(buff);               
; 2807 |                                         scia_puts(", ");               
; 2809 |                                 j = 7;                                 
; 2810 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2811 |                                 scia_puts(buff);                       
; 2812 |                                 scia_puts("\r\n");                     
; 2813 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2814 |                                                 ss + 1);               
; 2815 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2816 |                                 pt = atoi(cmdbuff);                    
; 2817 |                                 if (pt >= 5 && pt != 7) {              
; 2818 |                                         pt = 0;                        
; 2819 |                                         scia_puts(                     
; 2820 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2822 |                                 scia_puts(cmdbuff);                    
; 2823 |                                 scia_puts("\r\n");                     
; 2824 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2826 |                                 if ( VFD_VOLT != pt) {                 
; 2828 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2829 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2830 |                                                 j = CHS_MAX;           
; 2831 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2832 |                                                 j = ENC_MAX;           
; 2835 |                                         // linked load/... channel numb
;     | er                                                                     
; 2836 |                                         do {                           
; 2837 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2838 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2839 |                                                 ch = atoi(cmdbuff);    
; 2840 |                                                 scia_puts(cmdbuff);    
; 2841 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2842 |                                                         break;
;     |          // valid input channel number                                 
; 2844 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2845 |                                         } while (j);                   
; 2846 |                                         scia_puts("\r\n");             
; 2847 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2848 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2850 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2851 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2852 |                                                 // gain                
; 2853 |                                                 if ( VFD_POSI == pt) { 
; 2854 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2855 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2856 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2858 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2859 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2860 |                                                 scia_puts(cmdbuff);    
; 2861 |                                                 scia_puts("\r\n");     
; 2863 |                                                 // offset              
; 2864 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2865 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2866 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2867 |                                                 scia_puts(cmdbuff);    
; 2868 |                                                 scia_puts("\r\n");     
; 2872 |                                 unsaved = 1;                           
; 2874 |                                 // print result                        
; 2875 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2876 |                                                 LPV[pt]);              
; 2877 |                                 scia_puts(buff);                       
; 2879 |                                 if ( VFD_VOLT == pt) {                 
; 2880 |                                         scia_puts("\r\n");             
; 2881 |                                 } else {                               
; 2882 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2883 |                                         scia_puts(buff);               
; 2885 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2886 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2887 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2888 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2889 |                                                 scia_puts(buff);       
; 2893 |                                 DINT;                                  
; 2894 |                                 ad7738_setcal();                       
; 2895 |                                 EINT;                                  
; 2896 |                                 break;                                 
; 2898 |                         case 'D':
;     |  // direct voltage output                                              
; 2900 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2901 |                                                 || 'V' != cmdbuff[3]) {
; 2902 |                                         goto INVALIDCMD;               
; 2905 |                                 // channel index                       
; 2906 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2907 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2908 |                                         goto INVALIDCMD;               
; 2909 |                                         // invalid channel number      
; 2911 |                                 ss--;
;     |  // change to zero based index                                         
; 2913 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2914 |                                         goto INVALIDCMD;               
; 2915 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2918 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2919 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2920 |                                         goto INVALIDCMD;               
; 2921 |                                         // invalid voltage             
; 2924 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2925 |                                 if (volt[0] < 0) {                     
; 2926 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2927 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2928 |                                 } else {                               
; 2929 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2930 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2933 |                                 if (dsum[0] <= 0) {                    
; 2934 |                                         dacc[0] = 0;                   
; 2935 |                                 } else if (dsum[0] >= 0xffff) {        
; 2936 |                                         dacc[0] = 0xffff;              
; 2937 |                                 } else {                               
; 2938 |                                         dacc[0] = (Uint16) dsum[0];    
; 2941 |                                 mcbsp_xmit(dacc[0], ss);               
; 2942 |                                 latch_dac();                           
; 2944 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2945 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2946 |                                 scia_puts(buff);                       
; 2948 |                                 break;                                 
; 2950 |                         default:                                       
; 2951 |                                 goto INVALIDCMD;                       
; 2954 |                         break;                                         
; 2956 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2957 |                         // LIMIT command
;     |                                          //                            
; 2958 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2959 |                 case 'L':                                              
; 2961 |                         if (cmdlen < 2) {                              
; 2962 |                                 goto INVALIDCMD;                       
; 2965 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2967 |                         case 'S':
;     |  // selection                                                          
; 2969 |                                 // LIMIT channel number                
; 2970 |                                 j = LIM_MAX;                           
; 2971 |                                 do {                                   
; 2972 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2973 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2974 |                                         ss = atoi(cmdbuff);            
; 2975 |                                         scia_puts(cmdbuff);            
; 2976 |                                         if (ss > 0 && ss <= j) {       
; 2977 |                                                 break;
;     |          // valid input channel number                                 
; 2979 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2980 |                                 } while (j);                           
; 2981 |                                 scia_puts("\r\n");                     
; 2982 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2984 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2985 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2986 |                                 scia_puts(cmdbuff);                    
; 2987 |                                 scia_puts("\r\n");                     
; 2989 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2991 |                                         // set on flag                 
; 2992 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2994 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2995 |                                         for (j = 0; j < 5; j++) {      
; 2996 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2997 |                                                 scia_puts(buff);       
; 2998 |                                                 if (j < 4) {           
; 2999 |                                                         scia_puts(", ")
;     | ;                                                                      
; 3002 |                                         scia_puts("\r\n");             
; 3003 |                                         sprintf(buff,                  
; 3004 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 3005 |                                                         ss + 1);       
; 3006 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3007 |                                         pt = atoi(cmdbuff);            
; 3008 |                                         if (pt >= 5) {                 
; 3009 |                                                 pt = 0;                
; 3010 |                                                 scia_puts(             
; 3011 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 3013 |                                         scia_puts(cmdbuff);            
; 3014 |                                         scia_puts("\r\n");             
; 3015 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 3017 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 3018 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 3019 |                                                 j = CHS_MAX;           
; 3020 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 3021 |                                                 j = ENC_MAX;           
; 3024 |                                         // linked load/... channel numb
;     | er                                                                     
; 3025 |                                         do {                           
; 3026 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 3027 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 3028 |                                                 ch = atoi(cmdbuff);    
; 3029 |                                                 scia_puts(cmdbuff);    
; 3030 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 3031 |                                                         break;
;     |          // valid input channel number                                 
; 3033 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 3034 |                                         } while (j);                   
; 3035 |                                         scia_puts("\r\n");             
; 3036 |                                         ch--;
;     |  // channel number, convert to index                                   
; 3037 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 3039 |                                         // NO/NC                       
; 3040 |                                         scia_getparam(                 
; 3041 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 3042 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3043 |                                         scia_puts(cmdbuff);            
; 3044 |                                         scia_puts("\r\n");             
; 3046 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 3048 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 3049 |                                         } else {                       
; 3050 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 3053 |                                         scia_getparam(                 
; 3054 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 3055 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3056 |                                         scia_puts(cmdbuff);            
; 3057 |                                         scia_puts("\r\n");             
; 3059 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 3061 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 3062 |                                         } else {                       
; 3063 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 3066 |                                         scia_getparam(                 
; 3067 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 3068 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3069 |                                         scia_puts(cmdbuff);            
; 3070 |                                         scia_puts("\r\n");             
; 3072 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 3074 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 3075 |                                         } else {                       
; 3076 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 3079 |                                         // unit (output)               
; 3080 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 3081 |                                         case VFD_LOAD:                 
; 3082 |                                         case VFD_PEAK:                 
; 3083 |                                         case VFD_VALL:                 
; 3084 |                                                 ccp =                  
; 3085 |                                                                 UNITS[0
;     | x0f                                                                    
; 3086 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 3087 |                                                 break;                 
; 3088 |                                         case VFD_POSI:                 
; 3089 |                                                 ccp = POS_U;           
; 3090 |                                                 break;                 
; 3091 |                                         case VFD_VELO:                 
; 3092 |                                                 ccp = VEL_U;           
; 3093 |                                                 break;                 
; 3096 |                                         // set value                   
; 3097 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 3098 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3099 |                                         scia_puts(cmdbuff);            
; 3100 |                                         scia_puts("\r\n");             
; 3102 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3103 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3104 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3106 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3107 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3108 |                                         scia_puts(cmdbuff);            
; 3109 |                                         scia_puts("\r\n");             
; 3111 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3112 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3113 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3114 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3116 |                                         // print result                
; 3117 |                                         sprintf(buff,                  
; 3118 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3119 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3120 |                                         scia_puts(buff);               
; 3122 |                                         sprintf(buff,                  
; 3123 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3124 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3125 | 
;     |  "NC" : "NO",                                                          
; 3126 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3127 | 
;     |  "ON" : "OFF",                                                         
; 3128 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3129 |                                         scia_puts(buff);               
; 3130 |                                         sprintf(buff,                  
; 3131 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3132 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3133 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3134 |                                         scia_puts(buff);               
; 3136 |                                 } else
;     |  // turn off                                                           
; 3138 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3139 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3142 |                                 unsaved = 1;                           
; 3144 |                                 DINT;                                  
; 3145 |                                 ad7738_setcal();                       
; 3146 |                                 EINT;                                  
; 3147 |                                 break;                                 
; 3149 |                         default:                                       
; 3150 |                                 goto INVALIDCMD;                       
; 3153 |                         break;                                         
; 3155 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3156 |                         // reset commands
;     |                                          //                            
; 3157 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3158 |                 case 'R':                                              
; 3160 |                         if (cmdlen < 2) {                              
; 3161 |                                 goto INVALIDCMD;                       
; 3164 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3166 |                         case 'T':
;     |  // tare                                                               
; 3168 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3169 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3170 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3171 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3172 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3173 |                                 } else {                               
; 3174 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3175 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3176 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3178 |                                 break;                                 
; 3180 |                         case 'P':
;     |  // peak                                                               
; 3182 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3183 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3184 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3185 |                                 } else {                               
; 3186 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3188 |                                 break;                                 
; 3190 |                         case 'V':
;     |  // valley                                                             
; 3192 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3193 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3194 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3195 |                                 } else {                               
; 3196 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3198 |                                 break;                                 
; 3200 |                         case 'S':
;     |  // shunt switch                                                       
; 3202 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3203 |                                         shunt_switch(1);               
; 3204 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3205 |                                 } else {                               
; 3206 |                                         shunt_switch(0);               
; 3207 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3209 |                                 break;                                 
; 3211 |                         case 'L':
;     |  // limit                                                              
; 3213 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3214 |                                 ch--;                                  
; 3216 |                                 ad7738_resetlimit(ch);                 
; 3217 |                                 break;                                 
; 3219 |                         case 'I':
;     |  // posItion                                                           
; 3221 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3222 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3223 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3224 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3225 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3226 |                                 } else {                               
; 3227 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3228 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3229 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3231 |                                 break;                                 
; 3233 |                         default:                                       
; 3234 |                                 goto INVALIDCMD;                       
; 3236 |                         break;                                         
; 3238 | #ifdef SDHCCARD                                                        
; 3240 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3241 |                         // Stream to SD Card
;     |                                  //                                    
; 3242 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3243 |                         case 'W':// Write control                      
; 3245 |                         if( cmdlen < 2 )                               
; 3247 |                                 goto INVALIDCMD;                       
; 3250 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3252 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3254 |                                 if( cmdlen < 3 )                       
; 3256 |                                         goto INVALIDCMD;               
; 3259 |                                 if( sd_write )                         
; 3261 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3262 |                                         break;                         
; 3265 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3266 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3268 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3270 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3271 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3273 |                                 if( !res )                             
; 3275 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3276 |                                         if( res || cmdlen != temp16 )  
; 3278 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3279 |                                                 scia_puts( buff );     
; 3280 |                                                 f_close( fp );         
; 3281 |                                                 fp = NULL;             
; 3282 |                                                 break;                 
; 3299 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3301 |                                         if( res )                      
; 3303 |                                                 f_close( fp );         
; 3304 |                                                 fp = NULL;             
; 3305 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3306 |                                                 break;                 
; 3309 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3310 |                                         scia_puts( buff );             
; 3312 |                                         prod_init();                   
; 3313 |                                         sd_write = 1;                  
; 3314 |                                         sd_cnt = 0;                    
; 3315 |                                         break;                         
; 3318 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3319 |                                 scia_puts( buff );                     
; 3320 |                                 break;                                 
; 3322 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3324 |                                 if( sd_write )                         
; 3326 |                                         sd_close = 1;                  
; 3327 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3328 |                                         break;                         
; 3330 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3331 |                                 break;                                 
; 3333 |                                 case 'L':
;     |          // list files                                                 
; 3335 |                                 if( sd_write )                         
; 3337 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3338 |                                         break;                         
; 3341 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3342 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3344 |                                 res = f_opendir(&dir, "0:");           
; 3345 |                                 if (res)                               
; 3347 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3348 |                                         scia_puts( buff );             
; 3349 |                                         break;                         
; 3352 |                                 p1 = s1 = s2 = 0;                      
; 3353 |                                 for(;;)                                
; 3355 |                                         res = f_readdir(&dir, &Finfo); 
; 3356 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3357 |                                         break;                         
; 3358 |                                         if (Finfo.fattrib & AM_DIR)    
; 3360 |                                                 s2++;                  
; 3362 |                                         else                           
; 3364 |                                                 s1++;                  
; 3365 |                                                 p1 += Finfo.fsize;     
; 3367 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3368 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3369 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3370 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3371 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3372 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3373 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3374 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3375 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3376 |                                         scia_puts( buff );             
; 3378 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3379 |                                 scia_puts( buff );                     
; 3380 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3382 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3383 |                                         scia_puts( buff );             
; 3385 |                                 break;                                 
; 3387 |                                 case 'G':
;     |          // get a file                                                 
; 3389 |                                 if( sd_write )                         
; 3391 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3392 |                                         break;                         
; 3395 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3396 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3398 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3400 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3401 |                                 res = f_open( fp, buff, FA_READ );     
; 3402 |                                 if (res)                               
; 3404 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3405 |                                         scia_puts( buff );             
; 3406 |                                         break;                         
; 3409 |                                 do                                     
; 3411 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3412 |                                         scia_send( buff, temp16 );     
; 3413 |                                 }while( !res && temp16 == 512 );       
; 3415 |                                 f_close( fp );                         
; 3416 |                                 fp = NULL;                             
; 3417 |                                 break;                                 
; 3419 |                                 case 'R':
;     |          // remove a file                                              
; 3421 |                                 if( sd_write )                         
; 3423 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3424 |                                         break;                         
; 3427 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3428 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3430 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3432 |                                 res = f_unlink( buff );                
; 3434 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3435 |                                 scia_puts( buff );                     
; 3436 |                                 break;                                 
; 3438 |                                 default:                               
; 3439 |                                 goto INVALIDCMD;                       
; 3442 |                         break;                                         
; 3443 | #endif                                                                 
; 3445 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3446 |                         // Flash memory access commands
;     |                                    //                                  
; 3447 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3448 |                 case 'F':                                       // flas
;     | h access                                                               
; 3450 |                         if (cmdlen < 2) {                              
; 3451 |                                 goto INVALIDCMD;                       
; 3454 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3456 |                         case 'W':
;     |  // write flash                                                        
; 3458 |                                 if (unsaved) {                         
; 3459 |                                         // flash writing               
; 3460 |                                         lcd_clear();                   
; 3461 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3462 |                                         scia_puts("Flash writing..."); 
; 3464 |                                         for (i = 0; i < 50; i++) {     
; 3465 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3468 |                                         DINT;                          
; 3469 |                                         flash_ret = conf_write();      
; 3470 |                                         EINT;                          
; 3472 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3473 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3474 |                                                 unsaved = 0;           
; 3475 |                                         } else {                       
; 3476 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3478 |                                         lcd_clear();                   
; 3479 |                                         update_units();                
; 3480 |                                         break;                         
; 3482 |                                 scia_puts(                             
; 3483 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3484 |                                 break;                                 
; 3486 |                         case 'R':
;     |  // read flash                                                         
; 3488 |                                 // flash reading                       
; 3489 |                                 conf_read();                           
; 3491 |                                 DINT;                                  
; 3492 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3493 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3494 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3495 |                                 EINT;                                  
; 3497 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3498 |                                 unsaved = 0;                           
; 3500 |                                 update_units();                        
; 3502 |                                 break;                                 
; 3504 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3506 |                                 conf_default();                        
; 3508 |                                 // flash writing                       
; 3509 |                                 lcd_clear();                           
; 3510 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3511 |                                 scia_puts("Flash write...");           
; 3513 |                                 for (i = 0; i < 50; i++) {             
; 3514 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3517 |                                 DINT;                                  
; 3518 |                                 flash_ret = conf_write();              
; 3519 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3520 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3521 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3522 |                                 EINT;                                  
; 3524 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3525 |                                         scia_puts(                     
; 3526 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3527 |                                         unsaved = 0;                   
; 3528 |                                 } else {                               
; 3529 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3531 |                                 lcd_clear();                           
; 3532 |                                 update_units();                        
; 3533 |                                 break;                                 
; 3535 |                         default:                                       
; 3536 |                                 goto INVALIDCMD;                       
; 3539 |                         break;                                         
; 3541 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3542 |                         // Help manu
;     |                                  //                                    
; 3543 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3544 |                 case 'H':                               // help menu   
; 3546 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3548 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3549 |                         scia_puts(                                     
; 3550 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3551 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3552 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3553 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3554 |                         scia_puts("\r\n");                             
; 3556 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3557 |                         scia_puts("UN          Set unit name.\r\n");   
; 3558 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3559 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3560 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3561 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3562 |                         scia_puts("\r\n");                             
; 3564 |                         scia_puts(                                     
; 3565 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3566 |                         scia_puts(                                     
; 3567 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3568 |                         scia_puts("\r\n");                             
; 3570 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3571 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3572 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3573 |                         scia_puts("\r\n");                             
; 3575 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3576 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3577 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3578 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3579 |                         scia_puts("\r\n");                             
; 3581 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3582 |                         scia_puts(                                     
; 3583 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3584 |                         scia_puts("\r\n");                             
; 3586 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3587 |                         scia_puts("\r\n");                             
; 3589 |                         scia_puts(                                     
; 3590 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3591 |                         scia_puts(                                     
; 3592 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3593 |                         scia_puts("\r\n");                             
; 3595 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3596 |                         scia_puts("\r\n");                             
; 3598 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3599 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3600 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3601 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3602 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3603 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3604 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3605 |                         scia_puts("\r\n");                             
; 3607 | #ifdef SDHCCARD                                                        
; 3608 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3609 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3610 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3611 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3612 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3613 |                         scia_puts( "\r\n" );                           
; 3614 | #endif                                                                 
; 3616 |                         scia_puts(                                     
; 3617 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3618 |                         scia_puts(                                     
; 3619 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3620 |                         scia_puts(                                     
; 3621 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3622 |                         scia_puts("\r\n");                             
; 3624 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3626 |                         // not implemented                             
; 3627 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3629 |                         scia_puts("\r\n");                             
; 3631 |                         break;                                         
; 3633 |                 case 'X':                                              
; 3635 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3637 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3639 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3642 |                         cmd_mode = SCI_MODE_BIN;                       
; 3643 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3645 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3647 |                         break;                                         
; 3649 |                 case 'Z':                                              
; 3651 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3653 |                         for (i = 0; i < 100; i++)       // 2s          
; 3655 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3658 |                         reboot();                                      
; 3659 |                         break;                                         
; 3683 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3684 |                         // Invalid commands
;     |                                  //                                    
; 3685 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3686 |                 default:                                               
; 3688 |                         INVALIDCMD:                                    
; 3690 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3691 |                         scia_puts(cmdbuff);                            
; 3692 |                         scia_puts("\", ignored.\r\n");                 
; 3693 |                         break;                                         
; 3695 |                 } // switch on 1st byte                                
; 3697 |                 if (unsaved) {                                         
; 3698 |                         scia_puts(                                     
; 3699 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3702 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3703 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3704 |                 // BIN command mode processing
;     |                          //                                            
; 3705 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3707 |                 // ------------------------------------------------    
; 3708 |                 // DEBUG: put received command on LCD                  
; 3717 |                 // ------------------------------------------------    
; 3718 |                 if (cmdlen < 2) {                                      
; 3719 |                         // INVALID COMMAND, less than 2 byte           
; 3720 |                         // may need to send NACK back                  
; 3721 |                         continue;                                      
; 3724 |                 for (i = 0; i < 2; i++) {                              
; 3725 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3728 |                 j = 2;                                  // buff length 
; 3729 |                 bincmdresult = Error_UnImpl;                           
; 3731 |                 // DEBUG, sending the command back                     
; 3732 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3734 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3736 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3739 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3854 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3856 |                 case CheckAddress:                                     
; 3858 |                         buff[j++] = 0;                                 
; 3859 |                         bincmdresult = OK_SendResult;                  
; 3860 |                         break;                                         
; 3862 |                 case SetAddress:                                       
; 3864 |                         buff[j] = cmdbuff[j];                          
; 3865 |                         j++;                                           
; 3866 |                         bincmdresult = OK_SendResult;                  
; 3867 |                         break;                                         
; 3869 |                 case RemoveAddress:                                    
; 3871 |                         buff[j] = cmdbuff[j];                          
; 3872 |                         j++;                                           
; 3873 |                         bincmdresult = OK_SendResult;                  
; 3874 |                         break;                                         
; 3876 |                 case GetUnitInfo:                                      
; 3878 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3879 |                         for (i = 0; i < 2; i++) {                      
; 3880 |                                 buff[j++] = 0xff & *intp;              
; 3881 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3882 |                                 intp++;                                
; 3885 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3886 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3888 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3889 |                         for (i = 0; i < 2; i++) {                      
; 3890 |                                 buff[j++] = 0xff & *intp;              
; 3891 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3892 |                                 intp++;                                
; 3895 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3896 |                         buff[j++] = slen;                              
; 3897 |                         for (i = 0; i < slen; i++) {                   
; 3898 |                                 buff[j++] = conf_data.uname[i]; // name
; 3900 |                         bincmdresult = OK_SendResult;                  
; 3902 |                         break;                                         
; 3904 |                 case SetUnitSN:                                        
; 3906 |                         if (cmdlen < 6) {                              
; 3907 |                                 bincmdresult = Error_Invalid;          
; 3908 |                                 break;                                 
; 3911 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3912 |                         for (i = 0; i < 2; i++) {                      
; 3913 |                                 *intp = cmdbuff[j];                    
; 3914 |                                 buff[j++] = 0xff & *intp;              
; 3915 |                                 *intp += cmdbuff[j] << 8;              
; 3916 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3917 |                                 intp++;                                
; 3919 |                         unsaved = 1;                                   
; 3921 |                         bincmdresult = OK_SendResult;                  
; 3922 |                         break;                                         
; 3924 |                 case SetUnitName:                                      
; 3926 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3927 |                                 bincmdresult = Error_Invalid;          
; 3928 |                                 break;                                 
; 3931 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3932 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3934 |                         conf_data.uname[i] = '\0';                     
; 3935 |                         unsaved = 1;                                   
; 3937 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3938 |                         buff[j++] = slen;                              
; 3939 |                         for (i = 0; i < slen; i++) {                   
; 3940 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3942 |                         bincmdresult = OK_SendResult;                  
; 3943 |                         break;                                         
; 3945 |                 case GetInterface:                                     
; 3947 |                         buff[j++] = conf_data.rxdir;                   
; 3949 |                         if (conf_data.rxdir == SDIR_RS485              
; 3950 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3951 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3952 |                                 for (i = 0; i < 2; i++) {              
; 3953 |                                         buff[j++] = 0xff & *intp;      
; 3954 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3955 |                                         intp++;                        
; 3958 |                         bincmdresult = OK_SendResult;                  
; 3959 |                         break;                                         
; 3961 |                 case SetInterface:                                     
; 3963 |                         if (cmdlen < 3) {                              
; 3964 |                                 bincmdresult = Error_Invalid;          
; 3965 |                                 break;                                 
; 3967 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3968 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3969 |                                 bincmdresult = Error_Invalid;          
; 3970 |                                 break;                                 
; 3973 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3974 |                                 if (cmdlen < 7) {                      
; 3975 |                                         bincmdresult = Error_Invalid;  
; 3976 |                                         break;                         
; 3979 |                                 temp32 = 0;                            
; 3980 |                                 for (k = 6; k > 2; k--) {              
; 3981 |                                         temp32 += cmdbuff[k];          
; 3982 |                                         temp32 <<= 8;                  
; 3985 |                                 for (i = 0; i < 8; i++) {              
; 3986 |                                         if (temp32 == BAUD[i]) {       
; 3987 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3988 |                                                 break;                 
; 3991 |                                 if (i == 8) {                          
; 3992 |                                         bincmdresult = Error_Invalid;  
; 3993 |                                         break;                         
; 3997 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3999 |                         while (j < cmdlen) {                           
; 4000 |                                 buff[j] = cmdbuff[j];                  
; 4001 |                                 j++;                                   
; 4003 |                         unsaved = 1;                                   
; 4004 |                         bincmdresult = OK_SendResult;                  
; 4005 |                         break;                                         
; 4007 |                 case GetChannel:                                       
; 4009 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4010 |                                 bincmdresult = Error_Invalid;          
; 4011 |                                 break;                                 
; 4013 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 4015 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 4017 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 4019 |                                 buff[j++] = 0;                         
; 4022 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 4023 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 4025 |                                 buff[j++] = 0xff & *intp;              
; 4026 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4027 |                                 intp++;                                
; 4030 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 4031 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 4033 |                                 buff[j++] = 0xff & *intp;              
; 4034 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4035 |                                 intp++;                                
; 4038 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4039 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 4041 |                                 buff[j++] = 0xff & *intp;              
; 4042 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4043 |                                 intp++;                                
; 4046 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4047 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 4049 |                                 buff[j++] = 0xff & *intp;              
; 4050 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4051 |                                 intp++;                                
; 4054 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4055 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 4057 |                                 buff[j++] = 0xff & *intp;              
; 4058 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4059 |                                 intp++;                                
; 4062 |                         bincmdresult = OK_SendResult;                  
; 4063 |                         break;                                         
; 4065 |                 case GetSensor:                                        
; 4067 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4068 |                                 bincmdresult = Error_Invalid;          
; 4069 |                                 break;                                 
; 4071 |                         ss = cmdbuff[2];                               
; 4072 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4074 |                         // sensor serial name                          
; 4075 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 4076 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4077 |                         for (i = 0; i < slen; i++) {                   
; 4078 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 4081 |                         // sensor name/label                           
; 4082 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4083 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4084 |                         for (i = 0; i < slen; i++) {                   
; 4085 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4088 |                         // TAGID                                       
; 4089 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 4090 |                         for (i = 0; i < 4; i++) {                      
; 4091 |                                 buff[j++] = 0xff & *intp;              
; 4092 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4093 |                                 intp++;                                
; 4096 |                         // Method                                      
; 4097 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4099 |                         // Date                                        
; 4100 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4101 |                         for (i = 0; i < 2; i++) {                      
; 4102 |                                 buff[j++] = 0xff & *intp;              
; 4103 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4104 |                                 intp++;                                
; 4107 |                         // Range                                       
; 4108 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4109 |                         for (i = 0; i < 2; i++) {                      
; 4110 |                                 buff[j++] = 0xff & *intp;              
; 4111 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4112 |                                 intp++;                                
; 4115 |                         // Unit                                        
; 4116 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4118 |                         // Output Unit                                 
; 4119 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4121 |                         // Unit Factor                                 
; 4122 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4123 |                         for (i = 0; i < 2; i++) {                      
; 4124 |                                 buff[j++] = 0xff & *intp;              
; 4125 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4126 |                                 intp++;                                
; 4129 |                         // calibration points.                         
; 4130 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4131 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4132 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4133 |                                         // mass point                  
; 4134 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4135 |                                         for (i = 0; i < 2; i++) {      
; 4136 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4137 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4138 |                                                 intp++;                
; 4140 |                                         // adc counts point            
; 4141 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4142 |                                         for (i = 0; i < 2; i++) {      
; 4143 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4144 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4145 |                                                 intp++;                
; 4149 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4150 |                                         // slope point                 
; 4151 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4152 |                                         for (i = 0; i < 2; i++) {      
; 4153 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4154 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4155 |                                                 intp++;                
; 4157 |                                         // intercept point             
; 4158 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4159 |                                         for (i = 0; i < 2; i++) {      
; 4160 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4161 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4162 |                                                 intp++;                
; 4165 |                         } else {                                       
; 4166 |                                 buff[j++] = 0;                         
; 4167 |                                 // slope                               
; 4168 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4169 |                                 for (i = 0; i < 2; i++) {              
; 4170 |                                         buff[j++] = 0xff & *intp;      
; 4171 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4172 |                                         intp++;                        
; 4174 |                                 // intercept                           
; 4175 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4176 |                                 for (i = 0; i < 2; i++) {              
; 4177 |                                         buff[j++] = 0xff & *intp;      
; 4178 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4179 |                                         intp++;                        
; 4183 |                         // shunt                                       
; 4184 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4185 |                         for (i = 0; i < 2; i++) {                      
; 4186 |                                 buff[j++] = 0xff & *intp;              
; 4187 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4188 |                                 intp++;                                
; 4191 |                         // base                                        
; 4192 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4193 |                         for (i = 0; i < 2; i++) {                      
; 4194 |                                 buff[j++] = 0xff & *intp;              
; 4195 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4196 |                                 intp++;                                
; 4199 |                         // DAC calibration gain                        
; 4200 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4201 |                         for (i = 0; i < 2; i++) {                      
; 4202 |                                 buff[j++] = 0xff & *intp;              
; 4203 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4204 |                                 intp++;                                
; 4207 |                         // DAC calibration offset                      
; 4208 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4209 |                         for (i = 0; i < 2; i++) {                      
; 4210 |                                 buff[j++] = 0xff & *intp;              
; 4211 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4212 |                                 intp++;                                
; 4215 |                         // channel calibrated on                       
; 4216 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4218 |                         bincmdresult = OK_SendResult;                  
; 4219 |                         break;                                         
; 4221 |                 case GetQEPChannels:                                   
; 4223 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4224 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4225 |                                 for (i = 0; i < 2; i++) {              
; 4226 |                                         buff[j++] = 0xff & *intp;      
; 4227 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4228 |                                         intp++;                        
; 4232 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4233 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4235 |                         bincmdresult = OK_SendResult;                  
; 4236 |                         break;                                         
; 4238 |                 case GetCurSensor:                                     
; 4240 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4241 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4244 |                         bincmdresult = OK_SendResult;                  
; 4245 |                         break;                                         
; 4247 |                 case GetAFilterSize:                                   
; 4249 |                         // filter size                                 
; 4250 |                         intp = (Uint16*) &conf_data.filter;            
; 4251 |                         buff[j++] = 0xff & *intp;                      
; 4252 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4253 |                         // filter window                               
; 4254 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4255 |                         for (i = 0; i < 2; i++) {                      
; 4256 |                                 buff[j++] = 0xff & *intp;              
; 4257 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4258 |                                 intp++;                                
; 4260 |                         bincmdresult = OK_SendResult;                  
; 4261 |                         break;                                         
; 4263 |                 case GetAutoId:                                        
; 4265 |                         buff[j++] = conf_data.tagiden;                 
; 4266 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4267 |                                 buff[j++] = autoid[i];                 
; 4269 |                         bincmdresult = OK_SendResult;                  
; 4270 |                         break;                                         
; 4272 |                 case GetDisplay:                                       
; 4274 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4275 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4276 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4277 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4279 |                         bincmdresult = OK_SendResult;                  
; 4280 |                         break;                                         
; 4282 |                 case GetDAC:                                           
; 4284 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4285 |                                 buff[j++] = conf_data.dac[i].what;     
; 4286 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4288 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4289 |                                 //{                                    
; 4290 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4291 |                                 //}                                    
; 4292 |                                 //else                                 
; 4293 |                                 //{                                    
; 4294 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4295 |                                 //}                                    
; 4296 |                                 for (k = 0; k < 2; k++) {              
; 4297 |                                         buff[j++] = 0xff & *intp;      
; 4298 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4299 |                                         intp++;                        
; 4301 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4302 |                                 //{                                    
; 4303 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4304 |                                 //}                                    
; 4305 |                                 //else                                 
; 4306 |                                 //{                                    
; 4307 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4308 |                                 //}                                    
; 4309 |                                 for (k = 0; k < 2; k++) {              
; 4310 |                                         buff[j++] = 0xff & *intp;      
; 4311 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4312 |                                         intp++;                        
; 4314 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4315 |                                 for (k = 0; k < 2; k++) {              
; 4316 |                                         buff[j++] = 0xff & *intp;      
; 4317 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4318 |                                         intp++;                        
; 4320 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4321 |                                 for (k = 0; k < 2; k++) {              
; 4322 |                                         buff[j++] = 0xff & *intp;      
; 4323 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4324 |                                         intp++;                        
; 4326 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4327 |                                 for (k = 0; k < 2; k++) {              
; 4328 |                                         buff[j++] = 0xff & *intp;      
; 4329 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4330 |                                         intp++;                        
; 4333 |                         bincmdresult = OK_SendResult;                  
; 4334 |                         break;                                         
; 4336 |                 case GetLIMIT:                                         
; 4338 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4339 |                                 buff[j++] = conf_data.lim[i].what;     
; 4340 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4341 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4343 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4344 |                                 for (k = 0; k < 2; k++) {              
; 4345 |                                         buff[j++] = 0xff & *intp;      
; 4346 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4347 |                                         intp++;                        
; 4349 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4350 |                                 for (k = 0; k < 2; k++) {              
; 4351 |                                         buff[j++] = 0xff & *intp;      
; 4352 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4353 |                                         intp++;                        
; 4356 |                         bincmdresult = OK_SendResult;                  
; 4357 |                         break;                                         
; 4359 |                 case GetLIMITStatus:                                   
; 4361 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4362 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4364 |                         bincmdresult = OK_SendResult;                  
; 4365 |                         break;                                         
; 4367 |                         // Heat Cal commands.                          
; 4368 |                 case GetTCLoadA:                                       
; 4369 |                 case GetTCLoadB:                                       
; 4370 |                 case GetTCLoadC:                                       
; 4371 |                 case GetTCLoadD:                                       
; 4373 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4374 |                         intp = (Uint16*) &temp16;                      
; 4375 |                         buff[j++] = 0xff & *intp;                      
; 4376 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4378 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4379 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4380 |                         intp = (Uint16*) &templg;                      
; 4381 |                         for (i = 0; i < 2; i++) {                      
; 4382 |                                 buff[j++] = 0xff & *intp;              
; 4383 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4384 |                                 intp++;                                
; 4386 |                         bincmdresult = OK_SendResult;                  
; 4387 |                         break;                                         
; 4389 |                 case GetTCTemp:                                        
; 4391 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4392 |                         intp = (Uint16*) &temp16;                      
; 4393 |                         buff[j++] = 0xff & *intp;                      
; 4394 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4395 |                         bincmdresult = OK_SendResult;                  
; 4396 |                         break;                                         
; 4398 |                 case GetTCStatus:                                      
; 4400 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4401 |                         for (i = 0; i < 2; i++) {                      
; 4402 |                                 buff[j++] = 0xff & *intp;              
; 4403 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4404 |                                 intp++;                                
; 4407 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4408 |                                 temp16 = 0x80;                         
; 4409 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4410 |                                         temp16 |= 0x01;                
; 4412 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4413 |                                         temp16 |= 0x02;                
; 4415 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4416 |                                         temp16 |= 0x04;                
; 4418 |                                 buff[j++] = 0xff & temp16;             
; 4420 |                         bincmdresult = OK_SendResult;                  
; 4421 |                         break;                                         
; 4423 |                 case GetTCParam:                                       
; 4425 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4426 |                                 bincmdresult = Error_Invalid;          
; 4427 |                                 break;                                 
; 4430 |                         ch = cmdbuff[2];                               
; 4431 |                         buff[j++] = ch;                                
; 4433 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4434 |                         for (k = 0; k < 2; k++) {                      
; 4435 |                                 buff[j++] = 0xff & *intp;              
; 4436 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4437 |                                 intp++;                                
; 4439 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4440 |                         for (k = 0; k < 2; k++) {                      
; 4441 |                                 buff[j++] = 0xff & *intp;              
; 4442 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4443 |                                 intp++;                                
; 4445 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4446 |                         for (k = 0; k < 2; k++) {                      
; 4447 |                                 buff[j++] = 0xff & *intp;              
; 4448 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4449 |                                 intp++;                                
; 4451 |                         bincmdresult = OK_SendResult;                  
; 4452 |                         break;                                         
; 4454 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4455 | #if 1                                                                  
; 4456 |                 case Open_SSR_IN1:                                     
; 4457 |                         ssr_set(0, SSR_OPEN);                          
; 4458 |                         break;                                         
; 4460 |                 case Close_SSR_IN1:                                    
; 4461 |                         ssr_set(0, SSR_CLOSE);                         
; 4462 |                         break;                                         
; 4463 | #endif                                                                 
; 4465 |                 case SetTCParam:                                       
; 4467 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4468 |                                 bincmdresult = Error_Invalid;          
; 4469 |                                 break;                                 
; 4472 |                         ch = cmdbuff[2];                               
; 4473 |                         buff[j++] = ch;                                
; 4475 |                         k = 3;                                         
; 4476 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4477 |                         for (i = 0; i < 2; i++) {                      
; 4478 |                                 *intp = cmdbuff[k++];                  
; 4479 |                                 *intp += cmdbuff[k++] << 8;            
; 4480 |                                 intp++;                                
; 4482 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4483 |                         for (i = 0; i < 2; i++) {                      
; 4484 |                                 *intp = cmdbuff[k++];                  
; 4485 |                                 *intp += cmdbuff[k++] << 8;            
; 4486 |                                 intp++;                                
; 4488 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4489 |                         for (i = 0; i < 2; i++) {                      
; 4490 |                                 *intp = cmdbuff[k++];                  
; 4491 |                                 *intp += cmdbuff[k++] << 8;            
; 4492 |                                 intp++;                                
; 4495 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4496 |                         for (k = 0; k < 2; k++) {                      
; 4497 |                                 buff[j++] = 0xff & *intp;              
; 4498 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4499 |                                 intp++;                                
; 4501 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4502 |                         for (k = 0; k < 2; k++) {                      
; 4503 |                                 buff[j++] = 0xff & *intp;              
; 4504 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4505 |                                 intp++;                                
; 4507 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4508 |                         for (k = 0; k < 2; k++) {                      
; 4509 |                                 buff[j++] = 0xff & *intp;              
; 4510 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4511 |                                 intp++;                                
; 4513 |                         unsaved = 1;                                   
; 4514 |                         bincmdresult = OK_SendResult;                  
; 4515 |                         break;                                         
; 4517 |                 case SetBCalParam:                                     
; 4519 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4520 |                                         || cmdbuff[3] != 2) {          
; 4521 |                                 bincmdresult = Error_Invalid;          
; 4522 |                                 break;                                 
; 4525 |                         ch = cmdbuff[2];                               
; 4526 |                         buff[j++] = ch;                                
; 4527 |                         buff[j] = cmdbuff[j++];                        
; 4529 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4530 |                                 intp = (Uint16*) &volt[k];             
; 4531 |                                 for (i = 0; i < 2; i++) {              
; 4532 |                                         *intp = cmdbuff[j];            
; 4533 |                                         buff[j++] = 0xff & *intp;      
; 4534 |                                         *intp += cmdbuff[j] << 8;      
; 4535 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4536 |                                         intp++;                        
; 4539 |                         bincmdresult = OK_SendResult;                  
; 4540 |                         break;                                         
; 4542 |                 case StartBCRead:                                      
; 4544 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4545 |                                         || cmdbuff[3] >= 2) {          
; 4546 |                                 bincmdresult = Error_Invalid;          
; 4547 |                                 break;                                 
; 4550 |                         k = cmdbuff[3];                                
; 4551 |                         intp = (Uint16*) &tempft;                      
; 4552 |                         for (i = 0; i < 2; i++) {                      
; 4553 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4554 |                                 intp++;                                
; 4556 |                         if (volt[k] != tempft) {                       
; 4557 |                                 bincmdresult = Error_Invalid;          
; 4558 |                                 break;                                 
; 4560 |                         lcd_clear();                                   
; 4561 |                         lcd_puts("Board Calibration...", 0);           
; 4562 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4563 |                         lcd_puts(buff, 20);                            
; 4564 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4565 |                         lcd_puts(buff, 40);                            
; 4566 |                         lcd_puts("Reading ... ", 60);                  
; 4568 |                         dsum[k] = 0;                                   
; 4569 |                         sampcnt = CAL_SAMPLES;                         
; 4570 |                         while (sampcnt--) {                            
; 4571 |                                 while (0 == ad7738_rawrdy()) {         
; 4572 |                                         delay_us(1);
;     |  // wait                                                               
; 4574 |                                 cntp = ad7738_getraw();                
; 4575 |                                 dsum[k] += cntp->adc[ch];              
; 4577 |                         if (1 == k) {                                  
; 4578 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4579 |                                                 / (dsum[1] - dsum[0]); 
; 4581 |                                 unsaved = 1;                           
; 4582 |                                 DINT;                                  
; 4583 |                                 ad7738_setcal();                       
; 4584 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4585 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4586 |                                 EINT;                                  
; 4588 |                         for (i = 0; i < cmdlen; i++) {                 
; 4589 |                                 buff[i] = cmdbuff[i];                  
; 4591 |                         j = cmdlen;                                    
; 4592 |                         bincmdresult = OK_SendResult;                  
; 4594 |                         lcd_clear();                                   
; 4595 |                         update_units();                                
; 4596 |                         break;                                         
; 4598 |                 case SetDCalParam:                                     
; 4600 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4601 |                                         || (0x07 | daccbm) != 0x07) {  
; 4602 |                                 bincmdresult = Error_Invalid;          
; 4603 |                                 break;                                 
; 4605 |                         ch = cmdbuff[2];                               
; 4606 |                         buff[j++] = ch;                                
; 4608 |                         for (k = 0; k < 3; k++) {                      
; 4609 |                                 intp = (Uint16*) &volt[k];             
; 4610 |                                 for (i = 0; i < 2; i++) {              
; 4611 |                                         *intp = cmdbuff[j];            
; 4612 |                                         buff[j++] = 0xff & *intp;      
; 4613 |                                         *intp += cmdbuff[j] << 8;      
; 4614 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4615 |                                         intp++;                        
; 4619 |                         // order: - o +                                
; 4620 |                         // do the calculations                         
; 4621 |                         conf_data.dac[ch].dslopen =                    
; 4622 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4623 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4624 |                         conf_data.dac[ch].dslopep =                    
; 4625 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4626 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4627 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4628 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4630 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4631 |                         daccbm = 0;                                    
; 4633 |                         unsaved = 1;                                   
; 4635 |                         DINT;                                          
; 4636 |                         ad7738_setcal();                               
; 4637 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4638 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4639 |                         EINT;                                          
; 4641 |                         bincmdresult = OK_SendResult;                  
; 4642 |                         break;                                         
; 4644 |                 case StartDCRead:                                      
; 4646 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4647 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4648 |                                 bincmdresult = Error_Invalid;          
; 4649 |                                 break;                                 
; 4652 |                         if (daccbm == 0) {                             
; 4653 |                                 ch = cmdbuff[2];                       
; 4654 |                         } else {                                       
; 4655 |                                 if (ch != cmdbuff[2]) {                
; 4656 |                                         bincmdresult = Error_Invalid;  
; 4657 |                                         break;                         
; 4660 |                         buff[j++] = ch;                                
; 4661 |                         k = cmdbuff[j];                                
; 4662 |                         buff[j++] = k;                                 
; 4664 |                         intp = (Uint16*) &volt[k];                     
; 4665 |                         for (i = 0; i < 2; i++) {                      
; 4666 |                                 *intp = cmdbuff[j];                    
; 4667 |                                 buff[j++] = 0xff & *intp;              
; 4668 |                                 *intp += cmdbuff[j] << 8;              
; 4669 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4670 |                                 intp++;                                
; 4672 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4673 |                                 bincmdresult = Error_Invalid;          
; 4674 |                                 break;                                 
; 4677 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4678 |                         if (dsum[0] <= 0) {                            
; 4679 |                                 dacc[k] = 0;                           
; 4680 |                         } else if (dsum[0] >= 0xffff) {                
; 4681 |                                 dacc[k] = 0xffff;                      
; 4682 |                         } else {                                       
; 4683 |                                 dacc[k] = (Uint16) dsum[0];            
; 4686 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4688 |                         mcbsp_xmit(dacc[k], ch);                       
; 4689 |                         latch_dac();                                   
; 4691 |                         daccbm |= (0x1 << k);                          
; 4693 |                         bincmdresult = OK_SendResult;                  
; 4694 |                         break;                                         
; 4696 |                 case SetSensorCalPa:                                   
; 4698 |                         if (cmdlen < 20) {                             
; 4699 |                                 bincmdresult = Error_Invalid;          
; 4700 |                                 break;                                 
; 4702 |                         k = 2;                                         
; 4703 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4704 |                         ss = cmdbuff[k++];              // sensor index
; 4705 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4706 |                                 bincmdresult = Error_Invalid;          
; 4707 |                                 break;                                 
; 4710 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4711 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4712 |                                 bincmdresult = Error_Invalid;          
; 4713 |                                 break;                                 
; 4715 |                         for (i = 0; i < tempint; i++) {                
; 4716 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4718 |                         tsensor.ssn[i] = '\0';                         
; 4720 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4721 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4722 |                                 bincmdresult = Error_Invalid;          
; 4723 |                                 break;                                 
; 4725 |                         for (i = 0; i < tempint; i++) {                
; 4726 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4728 |                         tsensor.slbl[i] = '\0';                        
; 4730 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4732 |                         intp = (Uint16*) &tsensor.date; // date        
; 4733 |                         for (i = 0; i < 2; i++) {                      
; 4734 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4735 |                                 k += 2;                                
; 4736 |                                 intp++;                                
; 4739 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4740 |                         for (i = 0; i < 2; i++) {                      
; 4741 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4742 |                                 k += 2;                                
; 4743 |                                 intp++;                                
; 4745 |                         tsensor.base = tsensor.range;                  
; 4747 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4748 |                         switch (tsensor.unit) {                        
; 4749 |                         case 0:                                 // lb  
; 4750 |                         case 1:                                 // kg  
; 4751 |                                 tsensor.unit |= UNIT_WT;               
; 4752 |                                 break;                                 
; 4753 |                         case 2:                                 // in  
; 4754 |                         case 3:                                 // cm  
; 4755 |                         case 4:                                 // mm  
; 4756 |                                 tsensor.unit |= UNIT_LT;               
; 4757 |                                 break;                                 
; 4758 |                         case 5:                                 // ps  
; 4759 |                                 tsensor.unit |= UNIT_PR;               
; 4760 |                                 break;                                 
; 4761 |                         case 6:                                 // nm  
; 4762 |                                 tsensor.unit |= UNIT_TQ;               
; 4763 |                                 break;                                 
; 4764 |                         case 7:                                        
; 4765 |                         case 8:                                        
; 4766 |                         case 15:                                       
; 4767 |                                 tsensor.unit |= 0xf0;                  
; 4768 |                                 break;                                 
; 4769 |                         default:                                       
; 4770 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4771 |                                 break;                                 
; 4773 |                         tsensor.ounit = tsensor.unit;                  
; 4774 |                         tsensor.ufactor = 1;                           
; 4776 |                         switch (tsensor.method) {                      
; 4777 |                         case MD_RUN_MVV:                               
; 4779 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4780 |                                 for (i = 0; i < 2; i++) {              
; 4781 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4782 |                                         k += 2;                        
; 4783 |                                         intp++;                        
; 4785 |                                 if (tsensor.slope[0] == 0) {           
; 4786 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4788 |                                 tsensor.points = 1;                    
; 4789 |                                 break;                                 
; 4791 |                         case MD_RUN_MAS:                               
; 4793 |                                 tsensor.points = cmdbuff[k++];         
; 4794 |                                 if (tsensor.points > PNT_MAX) {        
; 4795 |                                         tsensor.method = MD_UNCALED;   
; 4796 |                                         break;                         
; 4799 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4800 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4801 |                                         for (i = 0; i < 2; i++) {      
; 4802 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4803 |                                                 k += 2;                
; 4804 |                                                 intp++;                
; 4807 |                                 break;                                 
; 4809 |                         case MD_RUN_SHT:                               
; 4811 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4812 |                                 for (i = 0; i < 2; i++) {              
; 4813 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4814 |                                         k += 2;                        
; 4815 |                                         intp++;                        
; 4817 |                                 if (scale == 0) {                      
; 4818 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4820 |                                 tsensor.points = 1;                    
; 4821 |                                 break;                                 
; 4823 |                         default:                                       
; 4825 |                                 tsensor.method = MD_UNCALED;           
; 4826 |                                 break;                                 
; 4829 |                         if (tsensor.method == MD_UNCALED) {            
; 4830 |                                 bincmdresult = Error_Invalid;          
; 4831 |                                 break;                                 
; 4833 |                         tsensor.tare = 0;                              
; 4834 |                         tsensor.dacgain = 1;                           
; 4835 |                         tsensor.dacoff = 0;                            
; 4836 |                         tsensor.ch = ch;                               
; 4838 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4839 |                                 buff[j] = cmdbuff[j++];                
; 4841 |                         bincmdresult = OK_SendResult;                  
; 4842 |                         break;                                         
; 4844 |                 case StartSCRead:                                      
; 4846 |                         if (cmdlen < 5) {                              
; 4847 |                                 bincmdresult = Error_Invalid;          
; 4848 |                                 break;                                 
; 4850 |                         k = 2;                                         
; 4851 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4852 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4853 |                                 bincmdresult = Error_Invalid;          
; 4854 |                                 break;                                 
; 4857 |                         lcd_clear();                                   
; 4858 |                         lcd_puts("Sensor Calibration..", 0);           
; 4859 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4860 |                         lcd_puts(buff, 20);                            
; 4861 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4862 |                         lcd_puts(buff, 40);                            
; 4864 |                         switch (tsensor.method) {                      
; 4866 |                         case MD_RUN_MVV:                               
; 4868 |                                 lcd_puts("Reading zero point...", 60); 
; 4870 |                                 dsum[0] = 0;                           
; 4871 |                                 sampcnt = CAL_SAMPLES;                 
; 4872 |                                 while (sampcnt--) {                    
; 4873 |                                         while (0 == ad7738_rawrdy()) { 
; 4874 |                                                 delay_us(1);
;     |          // wait                                                       
; 4877 |                                         cntp = ad7738_getraw();        
; 4878 |                                         dsum[0] += cntp->adc[ch];      
; 4880 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4881 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4883 |                                 bincmdresult = OK_SendResult;          
; 4884 |                                 break;                                 
; 4886 |                         case MD_RUN_MAS:                               
; 4888 |                                 pt = cmdbuff[k++];                     
; 4889 |                                 intp = (Uint16*) &scale;               
; 4890 |                                 for (i = 0; i < 2; i++) {              
; 4891 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4892 |                                         k += 2;                        
; 4893 |                                         intp++;                        
; 4895 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4896 |                                         bincmdresult = Error_Invalid;  
; 4897 |                                         break;                         
; 4899 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4900 |                                 lcd_puts(buff, 60);                    
; 4902 |                                 dsum[0] = 0;                           
; 4903 |                                 sampcnt = CAL_SAMPLES;                 
; 4904 |                                 while (sampcnt--) {                    
; 4905 |                                         while (0 == ad7738_rawrdy()) { 
; 4906 |                                                 delay_us(1);
;     |          // wait                                                       
; 4909 |                                         cntp = ad7738_getraw();        
; 4910 |                                         dsum[0] += cntp->adc[ch];      
; 4912 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4914 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4916 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4917 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4918 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4919 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4920 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4921 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4922 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4923 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4924 | 
;     |          * tsensor.adc[k];                                             
; 4928 |                                 bincmdresult = OK_SendResult;          
; 4929 |                                 break;                                 
; 4931 |                         case MD_RUN_SHT:                               
; 4933 |                                 lcd_puts("Reading zero point...", 60); 
; 4935 |                                 for (k = 0; k < 2; k++) {              
; 4936 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4938 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4939 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4940 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4942 |                                                 DINT;                  
; 4943 |                                                 maf_rst();             
; 4944 |                                                 EINT;                  
; 4945 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4948 |                                         dsum[k] = 0;                   
; 4949 |                                         sampcnt = CAL_SAMPLES;         
; 4950 |                                         while (sampcnt--) {            
; 4951 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4952 |                                                         delay_us(1);
;     |                  // wait                                               
; 4955 |                                                 cntp = ad7738_getraw();
; 4956 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4960 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4961 |                                 DINT;                                  
; 4962 |                                 maf_rst();                             
; 4963 |                                 EINT;                                  
; 4965 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4966 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4967 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4968 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4970 |                                 bincmdresult = OK_SendResult;          
; 4971 |                                 break;                                 
; 4973 |                         default:                                       
; 4975 |                                 bincmdresult = Error_Invalid;          
; 4976 |                                 break;                                 
; 4978 |                         lcd_clear();                                   
; 4979 |                         update_units();                                
; 4981 |                         if (bincmdresult != OK_SendResult) {           
; 4982 |                                 break;                                 
; 4984 |                         for (i = 0; i < cmdlen; i++) {                 
; 4985 |                                 buff[i] = cmdbuff[i];                  
; 4987 |                         j = cmdlen;                                    
; 4988 |                         break;                                         
; 4990 |                 case StartSCShuntRd:                                   
; 4992 |                         if (cmdlen < 5) {                              
; 4993 |                                 bincmdresult = Error_Invalid;          
; 4994 |                                 break;                                 
; 4996 |                         k = 2;                                         
; 4997 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4998 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4999 |                                 bincmdresult = Error_Invalid;          
; 5000 |                                 break;                                 
; 5003 |                         lcd_clear();                                   
; 5004 |                         lcd_puts("Sensor Calibration..", 0);           
; 5005 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 5006 |                         lcd_puts(buff, 20);                            
; 5007 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 5008 |                         lcd_puts(buff, 40);                            
; 5009 |                         lcd_puts("Reading shunt value...", 60);        
; 5011 |                         for (k = 0; k < 2; k++) {                      
; 5012 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 5014 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 5015 |                                         for (i = 0; i < 50; i++) {     
; 5016 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 5018 |                                         DINT;                          
; 5019 |                                         maf_rst();                     
; 5020 |                                         EINT;                          
; 5021 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 5024 |                                 dsum[k] = 0;                           
; 5025 |                                 sampcnt = CAL_SAMPLES;                 
; 5026 |                                 while (sampcnt--) {                    
; 5027 |                                         while (0 == ad7738_rawrdy()) { 
; 5028 |                                                 delay_us(1);
;     |          // wait                                                       
; 5031 |                                         cntp = ad7738_getraw();        
; 5032 |                                         dsum[k] += cntp->adc[ch];      
; 5034 |                                 dsum[k] /= CAL_SAMPLES;                
; 5036 |                                 pt = 0;                                
; 5037 |                                 if (tsensor.points > 2) {              
; 5038 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 5039 |                                                 pt++;                  
; 5042 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 5043 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 5046 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 5047 |                         DINT;                                          
; 5048 |                         maf_rst();                                     
; 5049 |                         EINT;                                          
; 5051 |                         tsensor.shunt = volt[1] - volt[0];             
; 5053 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 5055 |                         DINT;                                          
; 5056 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 5057 |                                         sizeof(sconf_t));              
; 5059 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 5061 |                         ad7738_setcal();                               
; 5062 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5063 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5064 |                         EINT;                                          
; 5066 |                         unsaved = 1;                                   
; 5068 |                         lcd_clear();                                   
; 5069 |                         update_units();                                
; 5071 |                         for (i = 0; i < cmdlen; i++) {                 
; 5072 |                                 buff[i] = cmdbuff[i];                  
; 5074 |                         j = cmdlen;                                    
; 5075 |                         bincmdresult = OK_SendResult;                  
; 5076 |                         break;                                         
; 5078 |                 case SetSensorName:                                    
; 5080 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 5081 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 5082 |                                 bincmdresult = Error_Invalid;          
; 5083 |                                 break;                                 
; 5085 |                         ss = cmdbuff[2];                               
; 5086 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5088 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 5089 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 5090 |                         for (i = 0; i < slen; i++) {                   
; 5091 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 5093 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 5094 |                         unsaved = 1;                                   
; 5096 |                         // sensor name/label                           
; 5097 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 5098 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5099 |                         for (i = 0; i < slen; i++) {                   
; 5100 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5103 |                         bincmdresult = OK_SendResult;                  
; 5104 |                         break;                                         
; 5106 |                 case SetSensorOUnit:                                   
; 5108 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5109 |                                 bincmdresult = Error_Invalid;          
; 5110 |                                 break;                                 
; 5113 |                         ss = cmdbuff[2];                               
; 5114 |                         pt = cmdbuff[3];                               
; 5116 |                         if (pt != UNIT_PC                              
; 5117 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5118 |                                 bincmdresult = Error_Invalid;          
; 5119 |                                 break;                                 
; 5122 |                         conf_data.sensor[ss].ounit = pt;               
; 5123 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5124 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5126 |                         if (pt == UNIT_PC) {                           
; 5127 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5128 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5129 |                         } else if (conf_data.sensor[ss].ounit          
; 5130 |                                         == conf_data.sensor[ss].unit) {
; 5131 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5132 |                         } else {                                       
; 5133 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5134 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5136 |                                         if (pt == UNIT_KG) {           
; 5137 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5139 |                                         break;                         
; 5141 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5143 |                                         if (pt == UNIT_LB) {           
; 5144 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5146 |                                         break;                         
; 5148 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5150 |                                         switch (pt) {                  
; 5151 |                                         case UNIT_CM:                  
; 5152 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5153 |                                                 break;                 
; 5154 |                                         case UNIT_MM:                  
; 5155 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5156 |                                                 break;                 
; 5158 |                                         break;                         
; 5160 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5162 |                                         switch (pt) {                  
; 5163 |                                         case UNIT_IN:                  
; 5164 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5165 |                                                 break;                 
; 5166 |                                         case UNIT_MM:                  
; 5167 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5168 |                                                 break;                 
; 5170 |                                         break;                         
; 5172 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5174 |                                         switch (pt) {                  
; 5175 |                                         case UNIT_IN:                  
; 5176 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5177 |                                                 break;                 
; 5178 |                                         case UNIT_CM:                  
; 5179 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5180 |                                                 break;                 
; 5182 |                                         break;                         
; 5184 |                                 default:                               
; 5186 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5187 |                                         break;                         
; 5191 |                         unsaved = 1;                                   
; 5193 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5194 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5195 |                                         update_units();                
; 5196 |                                         DINT;                          
; 5197 |                                         ad7738_setcal();               
; 5198 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5199 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5200 |                                         EINT;                          
; 5204 |                         bincmdresult = OK_SendResult;                  
; 5205 |                         break;                                         
; 5207 |                 case SetSensorBase:                                    
; 5209 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5210 |                                 bincmdresult = Error_Invalid;          
; 5211 |                                 break;                                 
; 5213 |                         ss = cmdbuff[2];                               
; 5214 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5216 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5217 |                         for (i = 0; i < 2; i++) {                      
; 5218 |                                 *intp = cmdbuff[j];                    
; 5219 |                                 buff[j++] = 0xff & *intp;              
; 5220 |                                 *intp += cmdbuff[j] << 8;              
; 5221 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5222 |                                 intp++;                                
; 5224 |                         unsaved = 1;                                   
; 5226 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5227 |                                 // output unit is percent              
; 5228 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5229 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5231 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5232 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5233 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5234 |                                                 DINT;                  
; 5235 |                                                 ad7738_setcal();       
; 5236 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5237 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5238 |                                                 EINT;                  
; 5243 |                         bincmdresult = OK_SendResult;                  
; 5244 |                         break;                                         
; 5246 |                 case SetQEPChannels:                                   
; 5248 |                         if (cmdlen < 6) {                              
; 5249 |                                 bincmdresult = Error_Invalid;          
; 5250 |                                 break;                                 
; 5253 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5254 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5255 |                                 for (i = 0; i < 2; i++) {              
; 5256 |                                         *intp = cmdbuff[j];            
; 5257 |                                         buff[j++] = 0xff & *intp;      
; 5258 |                                         *intp += cmdbuff[j] << 8;      
; 5259 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5260 |                                         intp++;                        
; 5264 |                         conf_data.velfilter = cmdbuff[j];              
; 5265 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5266 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5267 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5269 |                         unsaved = 1;                                   
; 5271 |                         DINT;                                          
; 5272 |                         ad7738_setcal();                               
; 5273 |                         velf_rst();                                    
; 5274 |                         EINT;                                          
; 5276 |                         bincmdresult = OK_SendResult;                  
; 5277 |                         break;                                         
; 5279 |                         //case SetEnCntperin: // not needed            
; 5280 |                         //break;                                       
; 5282 |                 case SetCurSensor:                                     
; 5284 |                         if (cmdlen < 4||                               
; 5285 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5286 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5287 |                                 bincmdresult = Error_Invalid;          
; 5288 |                                 break;                                 
; 5291 |                         ch = cmdbuff[2];                               
; 5292 |                         ss = cmdbuff[3];                               
; 5294 |                         if (autoid[ch]) {                              
; 5295 |                                 bincmdresult = Error_Exe;              
; 5296 |                                 break;                                 
; 5299 |                         DINT;                                          
; 5300 |                         conf_data.ch[ch].ci = ss;                      
; 5301 |                         ad7738_setcal();                               
; 5303 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5304 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5305 |                         EINT;                                          
; 5307 |                         update_units();                                
; 5308 |                         unsaved = 1;                                   
; 5310 |                         buff[j++] = ch;                                
; 5311 |                         buff[j++] = ss;                                
; 5312 |                         bincmdresult = OK_SendResult;                  
; 5313 |                         break;                                         
; 5315 |                 case SetAFilterSize:                                   
; 5317 |                         if (cmdlen < 4) {                              
; 5318 |                                 bincmdresult = Error_Invalid;          
; 5319 |                                 break;                                 
; 5322 |                         // filter length                               
; 5323 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5324 |                         if (temp16 > MAF_MAX) {                        
; 5325 |                                 bincmdresult = Error_Invalid;          
; 5326 |                                 break;                                 
; 5329 |                         // filter diff window                          
; 5330 |                         intp = (Uint16*) &tempft;                      
; 5331 |                         for (i = 0; i < 2; i++) {                      
; 5332 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5333 |                                 intp++;                                
; 5336 |                         DINT;                                          
; 5337 |                         conf_data.filter = temp16;                     
; 5338 |                         conf_data.diffwin = tempft;                    
; 5339 |                         maf_rst();                                     
; 5340 |                         EINT;                                          
; 5342 |                         unsaved = 1;                                   
; 5344 |                         buff[j++] = 0xff & temp16;                     
; 5345 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5347 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5348 |                         buff[j++] = 0xff & intp[0];                    
; 5349 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5350 |                         buff[j++] = 0xff & intp[1];                    
; 5351 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5353 |                         bincmdresult = OK_SendResult;                  
; 5354 |                         break;                                         
; 5356 |                 case SetAutoId:                                        
; 5358 |                         if (cmdlen < 3) {                              
; 5359 |                                 bincmdresult = Error_Invalid;          
; 5360 |                                 break;                                 
; 5363 |                         conf_data.tagiden = cmdbuff[2];                
; 5364 |                         if (!conf_data.tagiden) {                      
; 5365 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5366 |                                         tagwasthere[i] = 0;            
; 5367 |                                         autoid[i] = 0;                 
; 5369 |                                 update_units();                        
; 5371 |                         unsaved = 1;                                   
; 5373 |                         buff[j] = cmdbuff[j++];                        
; 5374 |                         bincmdresult = OK_SendResult;                  
; 5375 |                         break;                                         
; 5377 |                 case SetDisplayLine:                                   
; 5379 |                         if (cmdlen < 14) {                             
; 5380 |                                 bincmdresult = Error_Invalid;          
; 5381 |                                 break;                                 
; 5384 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5385 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5386 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5387 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5388 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5389 |                                         || cmdbuff[13] > 5) {          
; 5390 |                                 bincmdresult = Error_Invalid;          
; 5391 |                                 break;                                 
; 5394 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5395 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5396 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5397 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5398 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5399 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5400 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5402 |                         unsaved = 1;                                   
; 5404 |                         lcd_clear();                                   
; 5405 |                         update_units();                                
; 5406 |                         bincmdresult = OK_SendResult;                  
; 5407 |                         break;                                         
; 5409 |                 case SetDACCh:                                         
; 5411 |                         if (cmdlen < 42) {                             
; 5412 |                                 bincmdresult = Error_Invalid;          
; 5413 |                                 break;                                 
; 5416 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5417 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5418 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5419 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5420 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5421 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5422 |                                 bincmdresult = Error_Invalid;          
; 5423 |                                 break;                                 
; 5426 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5427 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5428 |                                 buff[j++] = conf_data.dac[i].what;     
; 5429 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5430 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5432 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5433 |                                 //{                                    
; 5434 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5435 |                                 //}                                    
; 5436 |                                 //else                                 
; 5437 |                                 //{                                    
; 5438 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5439 |                                 //}                                    
; 5440 |                                 for (k = 0; k < 2; k++) {              
; 5441 |                                         *intp = cmdbuff[j];            
; 5442 |                                         buff[j++] = 0xff & *intp;      
; 5443 |                                         *intp += cmdbuff[j] << 8;      
; 5444 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5445 |                                         intp++;                        
; 5448 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5449 |                                 //{                                    
; 5450 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5451 |                                 //}                                    
; 5452 |                                 //else                                 
; 5453 |                                 //{                                    
; 5454 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5455 |                                 //}                                    
; 5456 |                                 for (k = 0; k < 2; k++) {              
; 5457 |                                         *intp = cmdbuff[j];            
; 5458 |                                         buff[j++] = 0xff & *intp;      
; 5459 |                                         *intp += cmdbuff[j] << 8;      
; 5460 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5461 |                                         intp++;                        
; 5464 |                         unsaved = 1;                                   
; 5466 |                         DINT;                                          
; 5467 |                         ad7738_setcal();                               
; 5468 |                         EINT;                                          
; 5469 |                         bincmdresult = OK_SendResult;                  
; 5470 |                         break;                                         
; 5472 |                 case SetLIMITCh:                                       
; 5474 |                         if (cmdlen < 46) {                             
; 5475 |                                 bincmdresult = Error_Invalid;          
; 5476 |                                 break;                                 
; 5479 |                         if (cmdbuff[2]                                 
; 5480 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5481 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5482 |                                 bincmdresult = Error_Invalid;          
; 5483 |                                 break;                                 
; 5486 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5487 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5488 |                                 buff[j++] = conf_data.lim[i].what;     
; 5489 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5490 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5491 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5492 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5494 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5495 |                                 for (k = 0; k < 2; k++) {              
; 5496 |                                         *intp = cmdbuff[j];            
; 5497 |                                         buff[j++] = 0xff & *intp;      
; 5498 |                                         *intp += cmdbuff[j] << 8;      
; 5499 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5500 |                                         intp++;                        
; 5502 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5503 |                                 for (k = 0; k < 2; k++) {              
; 5504 |                                         *intp = cmdbuff[j];            
; 5505 |                                         buff[j++] = 0xff & *intp;      
; 5506 |                                         *intp += cmdbuff[j] << 8;      
; 5507 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5508 |                                         intp++;                        
; 5511 |                         unsaved = 1;                                   
; 5513 |                         DINT;                                          
; 5514 |                         ad7738_setcal();                               
; 5515 |                         EINT;                                          
; 5517 |                         bincmdresult = OK_SendResult;                  
; 5518 |                         break;                                         
; 5520 |                 case Tare:                                             
; 5522 |                         if (cmdlen < 3) {                              
; 5523 |                                 //bincmdresult = Error_Invalid;        
; 5524 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5525 |                                 ad7738_resetpeak(0xff);                
; 5526 |                                 ad7738_resetvall(0xff);                
; 5527 |                                 unsaved = 1;                           
; 5529 |                                 buff[j++] = 0xff;                      
; 5530 |                                 bincmdresult = OK_SendResult;          
; 5531 |                                 break;                                 
; 5534 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5535 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5536 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5537 |                         unsaved = 1;                                   
; 5539 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5540 |                         bincmdresult = OK_SendResult;                  
; 5541 |                         break;                                         
; 5543 |                 case ResetPkVly:                                       
; 5545 |                         if (cmdlen < 3) {                              
; 5546 |                                 bincmdresult = Error_Invalid;          
; 5547 |                                 break;                                 
; 5550 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5551 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5552 |                         unsaved = 1;                                   
; 5554 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5555 |                         bincmdresult = OK_SendResult;                  
; 5556 |                         break;                                         
; 5558 |                 case ResetPk:                                          
; 5560 |                         if (cmdlen < 3) {                              
; 5561 |                                 bincmdresult = Error_Invalid;          
; 5562 |                                 break;                                 
; 5565 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5566 |                         unsaved = 1;                                   
; 5568 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5569 |                         bincmdresult = OK_SendResult;                  
; 5570 |                         break;                                         
; 5572 |                 case ResetVly:                                         
; 5574 |                         if (cmdlen < 3) {                              
; 5575 |                                 bincmdresult = Error_Invalid;          
; 5576 |                                 break;                                 
; 5579 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5580 |                         unsaved = 1;                                   
; 5582 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5583 |                         bincmdresult = OK_SendResult;                  
; 5584 |                         break;                                         
; 5586 |                 case ResetLIMIT:                                       
; 5588 |                         if (cmdlen < 3) {                              
; 5589 |                                 bincmdresult = Error_Invalid;          
; 5590 |                                 break;                                 
; 5593 |                         k = 0x01;                                      
; 5594 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5595 |                                 if (k & cmdbuff[2]) {                  
; 5596 |                                         ad7738_resetlimit(i);          
; 5598 |                                 k <<= 1;                               
; 5600 |                         unsaved = 1;                                   
; 5602 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5603 |                         bincmdresult = OK_SendResult;                  
; 5604 |                         break;                                         
; 5606 |                 case ResetPosition:                                    
; 5608 |                         if (cmdlen < 3) {                              
; 5609 |                                 bincmdresult = Error_Invalid;          
; 5610 |                                 break;                                 
; 5613 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5614 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5615 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5616 |                         unsaved = 1;                                   
; 5618 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5619 |                         bincmdresult = OK_SendResult;                  
; 5620 |                         break;                                         
; 5622 |                 case SetShuntSwitch:                                   
; 5624 |                         if (cmdlen < 3) {                              
; 5625 |                                 bincmdresult = Error_Invalid;          
; 5626 |                                 break;                                 
; 5629 |                         shunt_switch(cmdbuff[2]);                      
; 5630 |                         unsaved = 1;                                   
; 5632 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5633 |                         bincmdresult = OK_SendResult;                  
; 5634 |                         break;                                         
; 5636 |                 case SetDirectVolt:                                    
; 5638 |                         if (cmdlen < 7) {                              
; 5639 |                                 bincmdresult = Error_Invalid;          
; 5640 |                                 break;                                 
; 5643 |                         ss = cmdbuff[j];                               
; 5644 |                         buff[j++] = ss;                                
; 5646 |                         intp = (Uint16*) &volt[0];                     
; 5647 |                         for (k = 0; k < 2; k++) {                      
; 5648 |                                 *intp = cmdbuff[j];                    
; 5649 |                                 buff[j++] = 0xff & *intp;              
; 5650 |                                 *intp += cmdbuff[j] << 8;              
; 5651 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5652 |                                 intp++;                                
; 5655 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5656 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5657 |                                 bincmdresult = Error_Invalid;          
; 5658 |                                 break;                                 
; 5661 |                         if (volt[0] < 0) {                             
; 5662 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5663 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5664 |                         } else {                                       
; 5665 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5666 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5669 |                         if (dsum[0] <= 0) {                            
; 5670 |                                 dacc[0] = 0;                           
; 5671 |                         } else if (dsum[0] >= 0xffff) {                
; 5672 |                                 dacc[0] = 0xffff;                      
; 5673 |                         } else {                                       
; 5674 |                                 dacc[0] = (Uint16) dsum[0];            
; 5677 |                         mcbsp_xmit(dacc[0], ss);                       
; 5678 |                         latch_dac();                                   
; 5680 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5681 |                         buff[j++] = 0xff & dacc[0];                    
; 5682 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5684 |                         bincmdresult = OK_SendResult;                  
; 5685 |                         break;                                         
; 5687 |                 case GetAllFlash:                                      
; 5689 |                         break;                                         
; 5691 |                 case SetAllFlash:                                      
; 5693 |                         break;                                         
; 5695 |                 case FlashMemWrite:                                    
; 5697 |                         bincmdresult = OK_SendResult;                  
; 5698 |                         if (unsaved) {                                 
; 5699 |                                 // flash writing                       
; 5700 |                                 lcd_clear();                           
; 5701 |                                 lcd_puts("Flash writing...", 0);       
; 5703 |                                 for (i = 0; i < 50; i++) {             
; 5704 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5707 |                                 DINT;                                  
; 5708 |                                 flash_ret = conf_write();              
; 5709 |                                 EINT;                                  
; 5711 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5712 |                                         lcd_puts("Done", 16);          
; 5713 |                                         unsaved = 0;                   
; 5714 |                                 } else {                               
; 5715 |                                         lcd_puts("Fail", 16);          
; 5716 |                                         bincmdresult = Error_Exe;      
; 5719 |                                 for (i = 0; i < 50; i++) {             
; 5720 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5722 |                                 lcd_clear();                           
; 5723 |                                 update_units();                        
; 5725 |                         break;                                         
; 5727 |                 case FlashMemDefault:                                  
; 5729 |                         conf_default();                                
; 5731 |                         // flash writing                               
; 5732 |                         lcd_clear();                                   
; 5733 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5735 |                         for (i = 0; i < 50; i++) {                     
; 5736 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5739 |                         DINT;                                          
; 5740 |                         flash_ret = conf_write();                      
; 5741 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5742 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5743 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5744 |                         EINT;                                          
; 5746 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5747 |                                 lcd_puts("Done", 31);                  
; 5748 |                                 unsaved = 0;                           
; 5749 |                                 bincmdresult = OK_SendResult;          
; 5750 |                         } else {                                       
; 5751 |                                 lcd_puts("Fail", 31);                  
; 5752 |                                 bincmdresult = Error_Exe;              
; 5754 |                         for (i = 0; i < 50; i++) {                     
; 5755 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5757 |                         lcd_clear();                                   
; 5758 |                         update_units();                                
; 5760 |                         break;                                         
; 5762 |                 case FlashMemRead:                                     
; 5764 |                         // flash reading                               
; 5765 |                         conf_read();                                   
; 5767 |                         DINT;                                          
; 5768 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5769 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5770 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5771 |                         EINT;                                          
; 5773 |                         unsaved = 0;                                   
; 5774 |                         update_units();                                
; 5775 |                         bincmdresult = OK_SendResult;                  
; 5776 |                         break;                                         
; 5778 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |651| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |651| 
        ; call occurs [#_SPICANRead] ; [] |651| 
        MOVL      XAR0,#40              ; [CPU_] |651| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |651| 
        MOV       *-SP[40],AL           ; [CPU_] |651| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 602,column 2,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |602| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#62              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#48              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L637,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5780,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5780 | if (cmdlen < 6) {                                                      
; 5781 |         bincmdresult = Error_Invalid;                                  
; 5782 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5780| 
        B         $C$L321,LO            ; [CPU_] |5780| 
        ; branchcc occurs ; [] |5780| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5785,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5785 | ds_dn = cmdbuff[2];                                                    
; 5786 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5785| 
        MOVL      ACC,XAR7              ; [CPU_] |5785| 
        ADDB      ACC,#2                ; [CPU_] |5785| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5785| 
	.dwpsn	file "../Source/prod.c",line 5787,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5787 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        MOVL      XAR0,#62              ; [CPU_] |5787| 
	.dwpsn	file "../Source/prod.c",line 5785,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5785| 
        MOV       *-SP[50],AL           ; [CPU_] |5785| 
	.dwpsn	file "../Source/prod.c",line 5787,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5788 | ds_dec += cmdbuff[3];                                                  
; 5789 | ds_bm = cmdbuff[5];                                                    
; 5791 | tempint = 0;                                                           
; 5792 | k = 0x01;                                                              
; 5793 | for (i = 0; i < 8; i++) {                                              
; 5794 |         if (ds_bm & k) {                                               
; 5795 |                 tempint++;                                             
; 5797 |         k <<= 1;                                                       
; 5800 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5801 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5802 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5803 | //                                      ds_en = 0;                     
; 5804 | //                                      bincmdresult = Error_Invalid;  
; 5805 | //                                      break;                         
; 5806 | //                              }                                      
; 5808 | ds_en = 1;                                                             
; 5809 | ds_stop = 0;                                                           
; 5810 | ds_sn = 0;                                                             
; 5812 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5813 | //                              ad7738_setlimitchgd();                 
; 5815 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOVL      ACC,XAR7              ; [CPU_] |5787| 
        ADDB      ACC,#4                ; [CPU_] |5787| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5787| 
        MOVL      XAR0,#84              ; [CPU_] |5787| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5787| 
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5787| 
        ADD       AL,*+XAR7[3]          ; [CPU_] |5787| 
        MOV       *-SP[49],AL           ; [CPU_] |5787| 
        ADDB      XAR4,#2               ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5816,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5816 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5816| 
	.dwpsn	file "../Source/prod.c",line 5808,column 5,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |5808| 
	.dwpsn	file "../Source/prod.c",line 5809,column 5,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |5809| 
	.dwpsn	file "../Source/prod.c",line 5817,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5817 | j++;                                                                   
; 5819 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[59],#6           ; [CPU_] |5817| 
	.dwpsn	file "../Source/prod.c",line 5820,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5820 | break;                                                                 
; 5822 | case StopStream:                                                       
; 5824 | ds_stop = 1;                                                           
; 5825 | bincmdresult = OK_SendResult;                                          
; 5826 | break;                                                                 
; 5828 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5830 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L734,UNC           ; [CPU_] |5820| 
        ; branch occurs ; [] |5820| 
$C$L80:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4992,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4992| 
        B         $C$L321,LO            ; [CPU_] |4992| 
        ; branchcc occurs ; [] |4992| 
	.dwpsn	file "../Source/prod.c",line 4997,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4997| 
        MOVL      ACC,XAR4              ; [CPU_] |4997| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4997| 
        MOVZ      AR6,*-SP[56]          ; [CPU_] |4997| 
        MOVL      XAR0,#64              ; [CPU_] |4997| 
        ADDB      ACC,#2                ; [CPU_] |4997| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4997| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4997| 
        CMPL      ACC,XAR6              ; [CPU_] |4997| 
        B         $C$L321,NEQ           ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        MOVZ      AR6,*-SP[55]          ; [CPU_] |4997| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4997| 
        CMPL      ACC,XAR6              ; [CPU_] |4997| 
        B         $C$L321,NEQ           ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4997| 
        MOVL      XAR0,#62              ; [CPU_] |4997| 
        MOVL      ACC,XAR5              ; [CPU_] |4997| 
        ADDB      ACC,#4                ; [CPU_] |4997| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4997| 
        MOVB      XAR0,#36              ; [CPU_] |4997| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4997| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4997| 
        B         $C$L321,NEQ           ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
	.dwpsn	file "../Source/prod.c",line 5003,column 5,is_stmt,isa 0
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5003| 
        ; call occurs [#_lcd_clear] ; [] |5003| 
	.dwpsn	file "../Source/prod.c",line 5004,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5004| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |5004| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5004| 
        ; call occurs [#_lcd_puts] ; [] |5004| 
	.dwpsn	file "../Source/prod.c",line 5005,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |5005| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |5005| 
        MOVL      XAR0,#84              ; [CPU_] |5005| 
        ADD       AL,*-SP[56]           ; [CPU_] |5005| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5005| 
        MOV       *-SP[3],AL            ; [CPU_] |5005| 
        MOVB      AL,#1                 ; [CPU_] |5005| 
        ADD       AL,*-SP[55]           ; [CPU_] |5005| 
        MOV       *-SP[4],AL            ; [CPU_] |5005| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |5005| 
        MOVL      XAR4,XAR3             ; [CPU_] |5005| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_sprintf")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5005| 
        ; call occurs [#_sprintf] ; [] |5005| 
	.dwpsn	file "../Source/prod.c",line 5006,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |5006| 
        MOVL      XAR4,XAR3             ; [CPU_] |5006| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5006| 
        ; call occurs [#_lcd_puts] ; [] |5006| 
	.dwpsn	file "../Source/prod.c",line 5007,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |5007| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |5007| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5007| 
        MOVL      XAR0,#56              ; [CPU_] |5007| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5007| 
        MOVB      XAR1,#36              ; [CPU_] |5007| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |5007| 
        ADDL      ACC,XAR6              ; [CPU_] |5007| 
        MOVL      XAR4,ACC              ; [CPU_] |5007| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5007| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5007| 
        MOVL      XAR4,XAR3             ; [CPU_] |5007| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_sprintf")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5007| 
        ; call occurs [#_sprintf] ; [] |5007| 
	.dwpsn	file "../Source/prod.c",line 5008,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |5008| 
        MOVL      XAR4,XAR3             ; [CPU_] |5008| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5008| 
        ; call occurs [#_lcd_puts] ; [] |5008| 
	.dwpsn	file "../Source/prod.c",line 5009,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |5009| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |5009| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5009| 
        ; call occurs [#_lcd_puts] ; [] |5009| 
        MOVL      XAR0,#76              ; [CPU_] |5009| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5009| 
        MOVZ      AR0,*-SP[56]          ; [CPU_] |5009| 
        MOV       T,*-SP[56]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[55]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5037,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |5037| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5011,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5011| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[58],AL           ; [CPU_] |5011| 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 5012,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5012| 
        B         $C$L83,LEQ            ; [CPU_] |5012| 
        ; branchcc occurs ; [] |5012| 
	.dwpsn	file "../Source/prod.c",line 5014,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |5014| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5014| 
        ; call occurs [#_shunt_switch] ; [] |5014| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 5016,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |5016| 
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_delay_us")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5016| 
        ; call occurs [#_delay_us] ; [] |5016| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |5016| 
	.dwpsn	file "../Source/prod.c",line 5015,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |5015| 
        MOVZ      AR0,AR6               ; [CPU_] |5015| 
        MOV       *-SP[48],AR6          ; [CPU_] |5015| 
        CMP       AR0,#-1               ; [CPU_] |5015| 
        B         $C$L82,NEQ            ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5019,column 7,is_stmt,isa 0
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_maf_rst")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5019| 
        ; call occurs [#_maf_rst] ; [] |5019| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5021,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |5021| 
        SPM       #0                    ; [CPU_] 
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_delay_us")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5021| 
        ; call occurs [#_delay_us] ; [] |5021| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 5024,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5025,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |5025| 
	.dwpsn	file "../Source/prod.c",line 5024,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |5024| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5025,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |5025| 
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |5026| 
        MOVB      ACC,#0                ; [CPU_] |5026| 
        SUBB      ACC,#1                ; [CPU_] |5026| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |5026| 
        B         $C$L86,EQ             ; [CPU_] |5026| 
        ; branchcc occurs ; [] |5026| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5027,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |5027| 
        ; branch occurs ; [] |5027| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 5028,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |5028| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_delay_us")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5028| 
        ; call occurs [#_delay_us] ; [] |5028| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 5027,column 14,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |5027| 
        ; call occurs [#_ad7738_rawrdy] ; [] |5027| 
        CMPB      AL,#0                 ; [CPU_] |5027| 
        B         $C$L84,EQ             ; [CPU_] |5027| 
        ; branchcc occurs ; [] |5027| 
	.dwpsn	file "../Source/prod.c",line 5031,column 7,is_stmt,isa 0
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |5031| 
        ; call occurs [#_ad7738_getraw] ; [] |5031| 
	.dwpsn	file "../Source/prod.c",line 5032,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |5032| 
        ADDL      XAR4,ACC              ; [CPU_] |5032| 
        MOVL      XAR0,#34              ; [CPU_] |5032| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |5032| 
        MOVL      XAR0,#34              ; [CPU_] |5032| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5032| 
        ASR64     ACC:P,16              ; [CPU_] |5032| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5032| 
        MOVL      XAR0,#34              ; [CPU_] |5032| 
        ASR64     ACC:P,16              ; [CPU_] |5032| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5032| 
        MOVL      XAR0,#34              ; [CPU_] |5032| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |5032| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5032| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |5032| 
        MOVL      *+XAR1[0],P           ; [CPU_] |5032| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5032| 
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |5026| 
        SUBL      *-SP[38],ACC          ; [CPU_] |5026| 
        MOVB      ACC,#0                ; [CPU_] |5026| 
        SUBB      ACC,#1                ; [CPU_] |5026| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |5026| 
        B         $C$L85,NEQ            ; [CPU_] |5026| 
        ; branchcc occurs ; [] |5026| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 5034,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |5034| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5034| 
        MOV       *-SP[2],#0            ; [CPU_] |5034| 
        MOV       *-SP[1],#0            ; [CPU_] |5034| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |5034| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |5034| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |5034| 
        ; call occurs [#LL$$DIV] ; [] |5034| 
	.dwpsn	file "../Source/prod.c",line 5037,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |5037| 
	.dwpsn	file "../Source/prod.c",line 5034,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |5034| 
	.dwpsn	file "../Source/prod.c",line 5036,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |5036| 
	.dwpsn	file "../Source/prod.c",line 5034,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5034| 
	.dwpsn	file "../Source/prod.c",line 5037,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |5037| 
        CMPB      AL,#2                 ; [CPU_] |5037| 
        B         $C$L89,LEQ            ; [CPU_] |5037| 
        ; branchcc occurs ; [] |5037| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5038,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |5038| 
        ; branch occurs ; [] |5038| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 5039,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |5039| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5038,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |5038| 
        B         $C$L89,HIS            ; [CPU_] |5038| 
        ; branchcc occurs ; [] |5038| 
        MOVB      AL,#1                 ; [CPU_] |5038| 
        ADD       AL,AR4                ; [CPU_] |5038| 
        MOVZ      AR5,AL                ; [CPU_] |5038| 
        MOV       ACC,AR5 << 1          ; [CPU_] |5038| 
        ADDL      ACC,XAR3              ; [CPU_] |5038| 
        MOVL      XAR6,ACC              ; [CPU_] |5038| 
        MOVB      XAR0,#72              ; [CPU_] |5038| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |5038| 
        MOVL      XAR0,#32              ; [CPU_] |5038| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |5038| 
        MOVL      XAR0,#32              ; [CPU_] |5038| 
        ASR64     ACC:P,16              ; [CPU_] |5038| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5038| 
        MOVL      XAR0,#32              ; [CPU_] |5038| 
        ASR64     ACC:P,16              ; [CPU_] |5038| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5038| 
        MOVL      *-SP[4],P             ; [CPU_] |5038| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5038| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5038| 
        MOVL      P,*-SP[32]            ; [CPU_] |5038| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$610, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5038| 
        ; call occurs [#LL$$CMP] ; [] |5038| 
        CMPB      AL,#0                 ; [CPU_] |5038| 
        B         $C$L87,GT             ; [CPU_] |5038| 
        ; branchcc occurs ; [] |5038| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5042,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |5042| 
        ADDL      ACC,XAR3              ; [CPU_] |5042| 
        MOVL      XAR4,ACC              ; [CPU_] |5042| 
        MOVB      XAR0,#96              ; [CPU_] |5042| 
        MOVL      *-SP[62],ACC          ; [CPU_] |5042| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5042| 
        MOVL      XAR0,#38              ; [CPU_] |5042| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5042| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5042| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5042| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5042| 
        ; call occurs [#FS$$MPY] ; [] |5042| 
        MOVL      XAR0,#30              ; [CPU_] |5042| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5042| 
        MOVL      P,*XAR1++             ; [CPU_] |5042| 
        MOVL      ACC,*XAR1++           ; [CPU_] |5042| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |5042| 
        ; call occurs [#LL$$TOFS] ; [] |5042| 
        MOVL      XAR0,#30              ; [CPU_] |5042| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5042| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5042| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5042| 
        ; call occurs [#FS$$MPY] ; [] |5042| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |5042| 
        MOVB      XAR0,#118             ; [CPU_] |5042| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |5042| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5042| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5042| 
        ; call occurs [#FS$$ADD] ; [] |5042| 
        MOVL      XAR0,#36              ; [CPU_] |5042| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5042| 
        MOVL      XAR0,#36              ; [CPU_] |5042| 
        MOVL      *XAR4++,ACC           ; [CPU_] |5042| 
	.dwpsn	file "../Source/prod.c",line 5011,column 17,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5011| 
	.dwpsn	file "../Source/prod.c",line 5042,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5042| 
        MOV       AL,*-SP[58]           ; [CPU_] |5042| 
	.dwpsn	file "../Source/prod.c",line 5011,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |5011| 
        B         $C$L81,LT             ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
	.dwpsn	file "../Source/prod.c",line 5046,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5046| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5046| 
        ; call occurs [#_shunt_switch] ; [] |5046| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5048,column 5,is_stmt,isa 0
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_maf_rst")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5048| 
        ; call occurs [#_maf_rst] ; [] |5048| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5051,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |5051| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5051| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |5051| 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |5051| 
        ; call occurs [#FS$$SUB] ; [] |5051| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |5051| 
        MOVL      XAR0,#36              ; [CPU_] |5051| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |5051| 
        MOVB      XAR0,#140             ; [CPU_] |5051| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5051| 
        MOV       AL,*-SP[56]           ; [CPU_] |5051| 
	.dwpsn	file "../Source/prod.c",line 5053,column 5,is_stmt,isa 0
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_tagid")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5053| 
        ; call occurs [#_tagid] ; [] |5053| 
        MOVL      XAR4,XAR1             ; [CPU_] |5053| 
        ADDB      XAR4,#32              ; [CPU_] |5053| 
        MOVL      *+XAR4[0],P           ; [CPU_] |5053| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |5053| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5056,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |5056| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |5056| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5056| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5056| 
        MOV       AL,*-SP[55]           ; [CPU_] |5056| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5059,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |5059| 
	.dwpsn	file "../Source/prod.c",line 5061,column 5,is_stmt,isa 0
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5061| 
        ; call occurs [#_ad7738_setcal] ; [] |5061| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |5061| 
	.dwpsn	file "../Source/prod.c",line 5062,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5062| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5062| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5062| 
        MOV       AL,AR1                ; [CPU_] |5062| 
	.dwpsn	file "../Source/prod.c",line 5063,column 5,is_stmt,isa 0
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5063| 
        ; call occurs [#_ad7738_resetvall] ; [] |5063| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5068,column 5,is_stmt,isa 0
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5068| 
        ; call occurs [#_lcd_clear] ; [] |5068| 
	.dwpsn	file "../Source/prod.c",line 5069,column 5,is_stmt,isa 0
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("_update_units")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5069| 
        ; call occurs [#_update_units] ; [] |5069| 
        MOVL      XAR0,#42              ; [CPU_] |5069| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5069| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5071,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |5071| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 5072,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5072| 
	.dwpsn	file "../Source/prod.c",line 5071,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |5071| 
	.dwpsn	file "../Source/prod.c",line 5072,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5072| 
	.dwpsn	file "../Source/prod.c",line 5071,column 17,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5071| 
	.dwpsn	file "../Source/prod.c",line 5072,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5072| 
	.dwpsn	file "../Source/prod.c",line 5071,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |5071| 
        B         $C$L90,HI             ; [CPU_] |5071| 
        ; branchcc occurs ; [] |5071| 
	.dwpsn	file "../Source/prod.c",line 5074,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |5074| 
	.dwpsn	file "../Source/prod.c",line 5076,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5076| 
        ; branch occurs ; [] |5076| 
$C$L91:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4846,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4846| 
        B         $C$L321,LO            ; [CPU_] |4846| 
        ; branchcc occurs ; [] |4846| 
	.dwpsn	file "../Source/prod.c",line 4851,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4851| 
        MOVL      XAR0,#64              ; [CPU_] |4851| 
        MOVZ      AR6,*-SP[56]          ; [CPU_] |4851| 
        ADDB      ACC,#2                ; [CPU_] |4851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4851| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4851| 
        CMPL      ACC,XAR6              ; [CPU_] |4851| 
        B         $C$L321,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
        MOVZ      AR6,*-SP[55]          ; [CPU_] |4851| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4851| 
        CMPL      ACC,XAR6              ; [CPU_] |4851| 
        B         $C$L321,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4851| 
        MOVL      XAR0,#62              ; [CPU_] |4851| 
        MOVL      ACC,XAR5              ; [CPU_] |4851| 
        ADDB      ACC,#4                ; [CPU_] |4851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4851| 
        MOVB      XAR0,#36              ; [CPU_] |4851| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4851| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4851| 
        B         $C$L321,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
	.dwpsn	file "../Source/prod.c",line 4857,column 5,is_stmt,isa 0
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4857| 
        ; call occurs [#_lcd_clear] ; [] |4857| 
	.dwpsn	file "../Source/prod.c",line 4858,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4858| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4858| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4858| 
        ; call occurs [#_lcd_puts] ; [] |4858| 
	.dwpsn	file "../Source/prod.c",line 4859,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4859| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4859| 
        MOVL      XAR0,#84              ; [CPU_] |4859| 
        ADD       AL,*-SP[56]           ; [CPU_] |4859| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4859| 
        MOV       *-SP[3],AL            ; [CPU_] |4859| 
        MOVB      AL,#1                 ; [CPU_] |4859| 
        ADD       AL,*-SP[55]           ; [CPU_] |4859| 
        MOV       *-SP[4],AL            ; [CPU_] |4859| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4859| 
        MOVL      XAR4,XAR1             ; [CPU_] |4859| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("_sprintf")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4859| 
        ; call occurs [#_sprintf] ; [] |4859| 
	.dwpsn	file "../Source/prod.c",line 4860,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4860| 
	.dwpsn	file "../Source/prod.c",line 4859,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4859| 
	.dwpsn	file "../Source/prod.c",line 4860,column 5,is_stmt,isa 0
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4860| 
        ; call occurs [#_lcd_puts] ; [] |4860| 
	.dwpsn	file "../Source/prod.c",line 4861,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4861| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4861| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4861| 
        MOVL      XAR0,#56              ; [CPU_] |4861| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4861| 
        MOVB      XAR1,#36              ; [CPU_] |4861| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4861| 
        ADDL      ACC,XAR6              ; [CPU_] |4861| 
        MOVL      XAR4,ACC              ; [CPU_] |4861| 
        MOVL      XAR0,#84              ; [CPU_] |4861| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4861| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4861| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4861| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("_sprintf")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4861| 
        ; call occurs [#_sprintf] ; [] |4861| 
        MOVL      XAR0,#84              ; [CPU_] |4861| 
	.dwpsn	file "../Source/prod.c",line 4862,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4862| 
	.dwpsn	file "../Source/prod.c",line 4861,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4861| 
	.dwpsn	file "../Source/prod.c",line 4862,column 5,is_stmt,isa 0
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4862| 
        ; call occurs [#_lcd_puts] ; [] |4862| 
	.dwpsn	file "../Source/prod.c",line 4864,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4864| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4864| 
        MOVB      XAR1,#36              ; [CPU_] |4864| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4864| 
        CMPB      AL,#1                 ; [CPU_] |4864| 
        B         $C$L92,EQ             ; [CPU_] |4864| 
        ; branchcc occurs ; [] |4864| 
        CMPB      AL,#2                 ; [CPU_] |4864| 
        B         $C$L105,EQ            ; [CPU_] |4864| 
        ; branchcc occurs ; [] |4864| 
        CMPB      AL,#3                 ; [CPU_] |4864| 
        B         $C$L96,EQ             ; [CPU_] |4864| 
        ; branchcc occurs ; [] |4864| 
        B         $C$L112,UNC           ; [CPU_] |4864| 
        ; branch occurs ; [] |4864| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4868,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4868| 
        MOVB      AL,#60                ; [CPU_] |4868| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4868| 
        ; call occurs [#_lcd_puts] ; [] |4868| 
	.dwpsn	file "../Source/prod.c",line 4870,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4870| 
	.dwpsn	file "../Source/prod.c",line 4871,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4871| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4870,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4870| 
	.dwpsn	file "../Source/prod.c",line 4872,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4872| 
	.dwpsn	file "../Source/prod.c",line 4871,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4871| 
        MOV       T,*-SP[56]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4870,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4870| 
	.dwpsn	file "../Source/prod.c",line 4872,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4872| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4872| 
	.dwpsn	file "../Source/prod.c",line 4870,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4870| 
	.dwpsn	file "../Source/prod.c",line 4872,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4872| 
        SUBB      ACC,#1                ; [CPU_] |4872| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4872| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4872| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4872| 
        ; branchcc occurs ; [] |4872| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4873,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4873| 
        ; branch occurs ; [] |4873| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4874,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4874| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("_delay_us")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4874| 
        ; call occurs [#_delay_us] ; [] |4874| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4873,column 14,is_stmt,isa 0
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4873| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4873| 
        CMPB      AL,#0                 ; [CPU_] |4873| 
        B         $C$L93,EQ             ; [CPU_] |4873| 
        ; branchcc occurs ; [] |4873| 
	.dwpsn	file "../Source/prod.c",line 4877,column 7,is_stmt,isa 0
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4877| 
        ; call occurs [#_ad7738_getraw] ; [] |4877| 
	.dwpsn	file "../Source/prod.c",line 4878,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4878| 
        ADDL      XAR4,ACC              ; [CPU_] |4878| 
        MOVL      XAR0,#28              ; [CPU_] |4878| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4878| 
        MOVL      XAR0,#28              ; [CPU_] |4878| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4878| 
        ASR64     ACC:P,16              ; [CPU_] |4878| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4878| 
        MOVL      XAR0,#28              ; [CPU_] |4878| 
        ASR64     ACC:P,16              ; [CPU_] |4878| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4878| 
        MOVL      XAR0,#28              ; [CPU_] |4878| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4878| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4878| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4878| 
        MOVL      *-SP[32],P            ; [CPU_] |4878| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4878| 
	.dwpsn	file "../Source/prod.c",line 4872,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4872| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4872| 
        MOVB      ACC,#0                ; [CPU_] |4872| 
        SUBB      ACC,#1                ; [CPU_] |4872| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4872| 
        B         $C$L94,NEQ            ; [CPU_] |4872| 
        ; branchcc occurs ; [] |4872| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4880,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4880| 
	.dwpsn	file "../Source/prod.c",line 4884,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4884| 
        ; branch occurs ; [] |4884| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4933,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4933| 
        MOVB      AL,#60                ; [CPU_] |4933| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4933| 
        ; call occurs [#_lcd_puts] ; [] |4933| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[56]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4935,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4935| 
        MOV       *-SP[58],AL           ; [CPU_] |4935| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4936,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4936| 
        B         $C$L99,LEQ            ; [CPU_] |4936| 
        ; branchcc occurs ; [] |4936| 
	.dwpsn	file "../Source/prod.c",line 4938,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4938| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4938| 
        ; call occurs [#_shunt_switch] ; [] |4938| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4940,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4940| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("_delay_us")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4940| 
        ; call occurs [#_delay_us] ; [] |4940| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4940| 
	.dwpsn	file "../Source/prod.c",line 4939,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4939| 
        MOVZ      AR0,AR6               ; [CPU_] |4939| 
        MOV       *-SP[47],AR6          ; [CPU_] |4939| 
        CMP       AR0,#-1               ; [CPU_] |4939| 
        B         $C$L98,NEQ            ; [CPU_] |4939| 
        ; branchcc occurs ; [] |4939| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4943,column 8,is_stmt,isa 0
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("_maf_rst")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4943| 
        ; call occurs [#_maf_rst] ; [] |4943| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4945,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4945| 
        SPM       #0                    ; [CPU_] 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("_delay_us")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4945| 
        ; call occurs [#_delay_us] ; [] |4945| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4948,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4949,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4949| 
	.dwpsn	file "../Source/prod.c",line 4948,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4948| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4950,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4950,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4950| 
        MOVB      ACC,#0                ; [CPU_] |4950| 
        SUBB      ACC,#1                ; [CPU_] |4950| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4950| 
        B         $C$L101,EQ            ; [CPU_] |4950| 
        ; branchcc occurs ; [] |4950| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4951,column 15,is_stmt,isa 0
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4951| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4951| 
        CMPB      AL,#0                 ; [CPU_] |4951| 
        B         $C$L104,EQ            ; [CPU_] |4951| 
        ; branchcc occurs ; [] |4951| 
	.dwpsn	file "../Source/prod.c",line 4955,column 8,is_stmt,isa 0
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4955| 
        ; call occurs [#_ad7738_getraw] ; [] |4955| 
	.dwpsn	file "../Source/prod.c",line 4956,column 8,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4956| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4956| 
        ADDL      XAR4,ACC              ; [CPU_] |4956| 
        MOVL      XAR0,#26              ; [CPU_] |4956| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4956| 
        MOVL      XAR0,#26              ; [CPU_] |4956| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4956| 
        ASR64     ACC:P,16              ; [CPU_] |4956| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4956| 
        MOVL      XAR0,#26              ; [CPU_] |4956| 
        ASR64     ACC:P,16              ; [CPU_] |4956| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4956| 
        MOVL      XAR0,#26              ; [CPU_] |4956| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4956| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4956| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4956| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4956| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4956| 
	.dwpsn	file "../Source/prod.c",line 4950,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4950| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4950| 
        MOVB      ACC,#0                ; [CPU_] |4950| 
        SUBB      ACC,#1                ; [CPU_] |4950| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4950| 
        B         $C$L100,NEQ           ; [CPU_] |4950| 
        ; branchcc occurs ; [] |4950| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4935,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |4935| 
        ADDB      XAR1,#4               ; [CPU_] |4935| 
        MOV       AL,*-SP[58]           ; [CPU_] |4935| 
        CMPB      AL,#2                 ; [CPU_] |4935| 
        B         $C$L97,LT             ; [CPU_] |4935| 
        ; branchcc occurs ; [] |4935| 
	.dwpsn	file "../Source/prod.c",line 4960,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4960| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4960| 
        ; call occurs [#_shunt_switch] ; [] |4960| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4962,column 6,is_stmt,isa 0
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("_maf_rst")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4962| 
        ; call occurs [#_maf_rst] ; [] |4962| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4965,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4965| 
        MOV       AH,#17948             ; [CPU_] |4965| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4965| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4965| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4965| 
        ; call occurs [#FS$$MPY] ; [] |4965| 
        MOVL      XAR1,ACC              ; [CPU_] |4965| 
        MOVL      P,*-SP[28]            ; [CPU_] |4965| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4965| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4965| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4965| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4965| 
        ; call occurs [#LL$$TOFS] ; [] |4965| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4965| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4965| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4965| 
        ; call occurs [#FS$$MPY] ; [] |4965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4965| 
        MOVL      ACC,XAR1              ; [CPU_] |4965| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4965| 
        ; call occurs [#FS$$DIV] ; [] |4965| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4965| 
        MOVB      XAR0,#96              ; [CPU_] |4965| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4965| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4967,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4967| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4967| 
        MOVL      XAR0,#50              ; [CPU_] |4967| 
        ADDB      ACC,#96               ; [CPU_] |4967| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4967| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4967| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4967| 
        ; call occurs [#FS$$NEG] ; [] |4967| 
        MOVB      XAR0,#96              ; [CPU_] |4967| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4967| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4967| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4967| 
        ; call occurs [#FS$$MPY] ; [] |4967| 
        MOVL      XAR1,ACC              ; [CPU_] |4967| 
        MOVL      P,*-SP[32]            ; [CPU_] |4967| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4967| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4967| 
        ; call occurs [#LL$$TOFS] ; [] |4967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4967| 
        MOVL      ACC,XAR1              ; [CPU_] |4967| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4967| 
        ; call occurs [#FS$$MPY] ; [] |4967| 
        MOVL      XAR6,ACC              ; [CPU_] |4967| 
        MOV       AL,#16384             ; [CPU_] |4967| 
        MOV       AH,#17948             ; [CPU_] |4967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4967| 
        MOVL      ACC,XAR6              ; [CPU_] |4967| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4967| 
        ; call occurs [#FS$$DIV] ; [] |4967| 
        MOVL      XAR0,#36              ; [CPU_] |4967| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4967| 
        MOVB      XAR1,#118             ; [CPU_] |4967| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4967| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4970,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4970| 
	.dwpsn	file "../Source/prod.c",line 4971,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4971| 
        ; branch occurs ; [] |4971| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4952,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4952| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("_delay_us")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4952| 
        ; call occurs [#_delay_us] ; [] |4952| 
	.dwpsn	file "../Source/prod.c",line 4951,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4951| 
        ; branch occurs ; [] |4951| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4888| 
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4888| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4888| 
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4889| 
        MOVZ      AR5,AR5               ; [CPU_] |4889| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4891,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4891| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4891| 
        MOV       *XAR5++,AL            ; [CPU_] |4891| 
	.dwpsn	file "../Source/prod.c",line 4892,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4892| 
	.dwpsn	file "../Source/prod.c",line 4890,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4890| 
        ; branchcc occurs ; [] |4890| 
	.dwpsn	file "../Source/prod.c",line 4895,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4895| 
        MOVB      XAR0,#46              ; [CPU_] |4895| 
        MOV       AL,*-SP[47]           ; [CPU_] |4895| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4895| 
        B         $C$L112,HIS           ; [CPU_] |4895| 
        ; branchcc occurs ; [] |4895| 
        MOVL      XAR0,#36              ; [CPU_] |4895| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4895| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4895| 
        ADDL      ACC,XAR6              ; [CPU_] |4895| 
        ADDB      ACC,#48               ; [CPU_] |4895| 
        MOVL      XAR1,ACC              ; [CPU_] |4895| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4895| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4895| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4895| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4895| 
        ; call occurs [#FS$$CMP] ; [] |4895| 
        CMPB      AL,#0                 ; [CPU_] |4895| 
        B         $C$L112,NEQ           ; [CPU_] |4895| 
        ; branchcc occurs ; [] |4895| 
	.dwpsn	file "../Source/prod.c",line 4899,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4899| 
        MOVB      AL,#1                 ; [CPU_] |4899| 
        MOVL      XAR0,#84              ; [CPU_] |4899| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4899| 
        ADD       AL,*-SP[47]           ; [CPU_] |4899| 
        MOV       *-SP[3],AL            ; [CPU_] |4899| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4899| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("_sprintf")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4899| 
        ; call occurs [#_sprintf] ; [] |4899| 
        MOVL      XAR0,#84              ; [CPU_] |4899| 
	.dwpsn	file "../Source/prod.c",line 4900,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4900| 
	.dwpsn	file "../Source/prod.c",line 4899,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4899| 
	.dwpsn	file "../Source/prod.c",line 4900,column 6,is_stmt,isa 0
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4900| 
        ; call occurs [#_lcd_puts] ; [] |4900| 
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4902| 
	.dwpsn	file "../Source/prod.c",line 4903,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4903| 
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4902| 
	.dwpsn	file "../Source/prod.c",line 4903,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4903| 
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4902| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4904| 
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4902| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4904| 
        MOVB      ACC,#0                ; [CPU_] |4904| 
        SUBB      ACC,#1                ; [CPU_] |4904| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4904| 
        B         $C$L108,EQ            ; [CPU_] |4904| 
        ; branchcc occurs ; [] |4904| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4905,column 14,is_stmt,isa 0
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4905| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4905| 
        CMPB      AL,#0                 ; [CPU_] |4905| 
        B         $C$L111,EQ            ; [CPU_] |4905| 
        ; branchcc occurs ; [] |4905| 
	.dwpsn	file "../Source/prod.c",line 4909,column 7,is_stmt,isa 0
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4909| 
        ; call occurs [#_ad7738_getraw] ; [] |4909| 
	.dwpsn	file "../Source/prod.c",line 4910,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |4910| 
        ADDL      XAR4,ACC              ; [CPU_] |4910| 
        MOVL      XAR0,#24              ; [CPU_] |4910| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4910| 
        MOVL      XAR0,#24              ; [CPU_] |4910| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4910| 
        ASR64     ACC:P,16              ; [CPU_] |4910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4910| 
        MOVL      XAR0,#24              ; [CPU_] |4910| 
        ASR64     ACC:P,16              ; [CPU_] |4910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4910| 
        MOVL      XAR0,#24              ; [CPU_] |4910| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4910| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4910| 
        MOVL      *-SP[32],P            ; [CPU_] |4910| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4910| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4904| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4904| 
        MOVB      ACC,#0                ; [CPU_] |4904| 
        SUBB      ACC,#1                ; [CPU_] |4904| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4904| 
        B         $C$L107,NEQ           ; [CPU_] |4904| 
        ; branchcc occurs ; [] |4904| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4912,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4912| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4912| 
        MOV       *-SP[2],#0            ; [CPU_] |4912| 
        MOV       *-SP[1],#0            ; [CPU_] |4912| 
        MOVL      P,*-SP[32]            ; [CPU_] |4912| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4912| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4912| 
        ; call occurs [#LL$$DIV] ; [] |4912| 
        ADDB      XAR1,#24              ; [CPU_] |4912| 
	.dwpsn	file "../Source/prod.c",line 4914,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4914| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4914| 
	.dwpsn	file "../Source/prod.c",line 4912,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4912| 
	.dwpsn	file "../Source/prod.c",line 4914,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4914| 
        MOV       AL,*-SP[47]           ; [CPU_] |4914| 
        SUB       AL,AR6                ; [CPU_] |4914| 
        MOVZ      AR7,AL                ; [CPU_] |4914| 
        MOVL      XAR4,#65535           ; [CPU_U] |4914| 
        MOVL      ACC,XAR4              ; [CPU_] |4914| 
        CMPL      ACC,XAR7              ; [CPU_] |4914| 
        B         $C$L103,NEQ           ; [CPU_] |4914| 
        ; branchcc occurs ; [] |4914| 
	.dwpsn	file "../Source/prod.c",line 4917,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4917| 
        B         $C$L110,UNC           ; [CPU_] |4917| 
        ; branch occurs ; [] |4917| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4918,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4918| 
        MOVB      AL,#10                ; [CPU_] |4918| 
        MOV       T,*-SP[56]            ; [CPU_] |4918| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4918| 
        SETC      SXM                   ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] |4918| 
        MOVL      XAR0,#36              ; [CPU_] |4918| 
        ADDL      ACC,XAR6              ; [CPU_] |4918| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4918| 
        MOVL      *-SP[62],ACC          ; [CPU_] |4918| 
        MOV       AL,*-SP[47]           ; [CPU_] |4918| 
        MOV       ACC,AL << 1           ; [CPU_] |4918| 
        ADDL      ACC,XAR6              ; [CPU_] |4918| 
        MOVL      XAR1,ACC              ; [CPU_] |4918| 
        MOVB      XAR0,#48              ; [CPU_] |4918| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4918| 
        MOVB      XAR0,#50              ; [CPU_] |4918| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4918| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4918| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4918| 
        ; call occurs [#FS$$SUB] ; [] |4918| 
        MOVL      XAR0,#42              ; [CPU_] |4918| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4918| 
        MOVB      XAR0,#74              ; [CPU_] |4918| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4918| 
        MOVB      XAR0,#72              ; [CPU_] |4918| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |4918| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4918| 
        ; call occurs [#L$$TOFS] ; [] |4918| 
        MOVL      XAR0,#42              ; [CPU_] |4918| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4918| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4918| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4918| 
        ; call occurs [#FS$$DIV] ; [] |4918| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4918| 
        MOVB      XAR0,#44              ; [CPU_] |4918| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4918| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4918| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4918| 
        ; call occurs [#FS$$DIV] ; [] |4918| 
        MOVB      XAR0,#96              ; [CPU_] |4918| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4918| 
	.dwpsn	file "../Source/prod.c",line 4922,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4922| 
        MOVB      XAR0,#44              ; [CPU_] |4922| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4922| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4922| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4922| 
        ; call occurs [#FS$$MPY] ; [] |4922| 
        MOVB      XAR0,#72              ; [CPU_] |4922| 
        MOVL      *-SP[62],ACC          ; [CPU_] |4922| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4922| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4922| 
        ; call occurs [#L$$TOFS] ; [] |4922| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4922| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |4922| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4922| 
        ; call occurs [#FS$$MPY] ; [] |4922| 
        MOVB      XAR0,#48              ; [CPU_] |4922| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4922| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4922| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4922| 
        ; call occurs [#FS$$SUB] ; [] |4922| 
        MOVB      XAR0,#118             ; [CPU_] |4922| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4922| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4917,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4917| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4917,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4917| 
        ADDB      AL,#-1                ; [CPU_] |4917| 
        CMP       AL,*-SP[47]           ; [CPU_] |4917| 
        B         $C$L109,GT            ; [CPU_] |4917| 
        ; branchcc occurs ; [] |4917| 
	.dwpsn	file "../Source/prod.c",line 4929,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4929| 
        ; branch occurs ; [] |4929| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4906,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4906| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("_delay_us")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4906| 
        ; call occurs [#_delay_us] ; [] |4906| 
	.dwpsn	file "../Source/prod.c",line 4905,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4905| 
        ; branch occurs ; [] |4905| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4896,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4896| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4978,column 5,is_stmt,isa 0
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4978| 
        ; call occurs [#_lcd_clear] ; [] |4978| 
	.dwpsn	file "../Source/prod.c",line 4979,column 5,is_stmt,isa 0
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("_update_units")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4979| 
        ; call occurs [#_update_units] ; [] |4979| 
        MOV       AL,*-SP[47]           ; [CPU_] |4979| 
	.dwpsn	file "../Source/prod.c",line 4982,column 6,is_stmt,isa 0
        B         $C$L318,NEQ           ; [CPU_] |4982| 
        ; branchcc occurs ; [] |4982| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4984,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4984| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4985,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4985| 
	.dwpsn	file "../Source/prod.c",line 4984,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4984| 
	.dwpsn	file "../Source/prod.c",line 4985,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4985| 
	.dwpsn	file "../Source/prod.c",line 4984,column 17,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |4984| 
	.dwpsn	file "../Source/prod.c",line 4985,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4985| 
	.dwpsn	file "../Source/prod.c",line 4984,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4984| 
        B         $C$L114,HI            ; [CPU_] |4984| 
        ; branchcc occurs ; [] |4984| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4987| 
	.dwpsn	file "../Source/prod.c",line 4988,column 5,is_stmt,isa 0
        B         $C$L318,UNC           ; [CPU_] |4988| 
        ; branch occurs ; [] |4988| 
$C$L115:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4698,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4698| 
        B         $C$L321,LO            ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
	.dwpsn	file "../Source/prod.c",line 4703,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4703| 
        MOV       *-SP[56],AL           ; [CPU_] |4703| 
	.dwpsn	file "../Source/prod.c",line 4705,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4705| 
	.dwpsn	file "../Source/prod.c",line 4704,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4704| 
        MOV       *-SP[55],AL           ; [CPU_] |4704| 
	.dwpsn	file "../Source/prod.c",line 4705,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4705| 
        MOV       AL,*-SP[56]           ; [CPU_] |4705| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4705| 
        CMPB      AL,#4                 ; [CPU_] |4705| 
        B         $C$L321,HIS           ; [CPU_] |4705| 
        ; branchcc occurs ; [] |4705| 
        MOV       AL,*-SP[55]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4705| 
        B         $C$L321,HIS           ; [CPU_] |4705| 
        ; branchcc occurs ; [] |4705| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4711,column 5,is_stmt,isa 0
        MOVL      XAR0,#62              ; [CPU_] |4711| 
        MOVL      ACC,XAR4              ; [CPU_] |4711| 
        ADDB      ACC,#4                ; [CPU_] |4711| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4711| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4711| 
        CMPB      AL,#16                ; [CPU_] |4711| 
        B         $C$L321,HIS           ; [CPU_] |4711| 
        ; branchcc occurs ; [] |4711| 
	.dwpsn	file "../Source/prod.c",line 4715,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4715| 
        MOVL      XAR0,#62              ; [CPU_] |4715| 
        CMPB      AL,#0                 ; [CPU_] |4715| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4715| 
        B         $C$L116,LEQ           ; [CPU_] |4715| 
        ; branchcc occurs ; [] |4715| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4715| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4715| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4715| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4715| 
        MOVL      XAR0,ACC              ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4716,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4716| 
        ADD       AL,AR4                ; [CPU_] |4716| 
        MOVZ      AR6,AL                ; [CPU_] |4716| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4715,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4715| 
        ; branch occurs ; [] |4715| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4710,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4710| 
	.dwpsn	file "../Source/prod.c",line 4715,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4715| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4718,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4718| 
        MOVL      XAR0,#86              ; [CPU_] |4718| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4718| 
	.dwpsn	file "../Source/prod.c",line 4720,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4720| 
        MOVL      XAR4,ACC              ; [CPU_] |4720| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4720| 
        CMPB      AL,#16                ; [CPU_] |4720| 
        B         $C$L321,HIS           ; [CPU_] |4720| 
        ; branchcc occurs ; [] |4720| 
        ADDB      XAR4,#1               ; [CPU_] |4720| 
	.dwpsn	file "../Source/prod.c",line 4725,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4720,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4720| 
        MOVL      P,XAR4                ; [CPU_] |4720| 
	.dwpsn	file "../Source/prod.c",line 4725,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4725| 
        ; branchcc occurs ; [] |4725| 
        MOVZ      AR5,AL                ; [CPU_] |4725| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4726| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4726| 
        MOV       *XAR4++,AL            ; [CPU_] |4726| 
        ADDB      XAR7,#1               ; [CPU_] |4726| 
        MOVL      P,XAR7                ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4725,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4725| 
        ; branchcc occurs ; [] |4725| 
        B         $C$L120,UNC           ; [CPU_] |4725| 
        ; branch occurs ; [] |4725| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4725,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4725| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4728,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4728| 
        ADD       ACC,AR5               ; [CPU_] |4728| 
        MOVL      XAR4,ACC              ; [CPU_] |4728| 
        MOVB      XAR0,#16              ; [CPU_] |4728| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4728| 
	.dwpsn	file "../Source/prod.c",line 4730,column 5,is_stmt,isa 0
        MOVL      XAR0,#54              ; [CPU_] |4730| 
        MOV       AL,*XAR7              ; [CPU_] |4730| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4730| 
        ADDB      XAR7,#1               ; [CPU_] |4730| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4730| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4730| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4734| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4734| 
        MOV       *XAR5++,AL            ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4735| 
        MOVL      P,XAR7                ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4733,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4733| 
        ; branchcc occurs ; [] |4733| 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4741,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4741| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4741| 
	.dwpsn	file "../Source/prod.c",line 4742,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4742| 
	.dwpsn	file "../Source/prod.c",line 4741,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4741| 
        MOV       *XAR0++,AL            ; [CPU_] |4741| 
	.dwpsn	file "../Source/prod.c",line 4742,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4742| 
        MOVL      P,XAR5                ; [CPU_] |4742| 
	.dwpsn	file "../Source/prod.c",line 4740,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4740| 
        ; branchcc occurs ; [] |4740| 
	.dwpsn	file "../Source/prod.c",line 4745,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4745| 
        MOVB      XAR0,#40              ; [CPU_] |4745| 
	.dwpsn	file "../Source/prod.c",line 4747,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4745,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4745| 
        MOVB      XAR0,#142             ; [CPU_] |4745| 
	.dwpsn	file "../Source/prod.c",line 4747,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4745,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4745| 
	.dwpsn	file "../Source/prod.c",line 4747,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4747| 
        MOV       AL,*XAR7              ; [CPU_] |4747| 
        ADDB      XAR7,#1               ; [CPU_] |4747| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4748,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4747,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4748,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4748| 
        CMPB      AL,#6                 ; [CPU_] |4748| 
        B         $C$L123,GT            ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
        CMPB      AL,#6                 ; [CPU_] |4748| 
        B         $C$L126,EQ            ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
        CMPB      AL,#1                 ; [CPU_] |4748| 
        B         $C$L129,LOS           ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
        MOV       AH,AL                 ; [CPU_] |4748| 
        ADDB      AH,#-2                ; [CPU_] |4748| 
        CMPB      AH,#2                 ; [CPU_] |4748| 
        B         $C$L128,LOS           ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
        CMPB      AL,#5                 ; [CPU_] |4748| 
        B         $C$L127,EQ            ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
        B         $C$L124,UNC           ; [CPU_] |4748| 
        ; branch occurs ; [] |4748| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4748| 
        ADDB      AH,#-7                ; [CPU_] |4748| 
        CMPB      AH,#1                 ; [CPU_] |4748| 
        B         $C$L125,LOS           ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
        CMPB      AL,#15                ; [CPU_] |4748| 
        B         $C$L125,EQ            ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4770,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4770| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4770| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4771| 
        ; branch occurs ; [] |4771| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4768,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4768| 
        ; branch occurs ; [] |4768| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4762,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4762| 
	.dwpsn	file "../Source/prod.c",line 4763,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4763| 
        ; branch occurs ; [] |4763| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4760,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4760| 
        ; branch occurs ; [] |4760| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4757| 
        ; branch occurs ; [] |4757| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4751,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4751| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4773,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4773| 
        MOVB      XAR0,#43              ; [CPU_] |4773| 
        ADDB      XAR7,#42              ; [CPU_] |4773| 
        MOV       AL,*XAR7              ; [CPU_] |4773| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4773| 
	.dwpsn	file "../Source/prod.c",line 4774,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4774| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4774| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4774| 
	.dwpsn	file "../Source/prod.c",line 4776,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4776| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4776| 
        CMPB      AL,#1                 ; [CPU_] |4776| 
        B         $C$L137,EQ            ; [CPU_] |4776| 
        ; branchcc occurs ; [] |4776| 
        CMPB      AL,#2                 ; [CPU_] |4776| 
        B         $C$L131,EQ            ; [CPU_] |4776| 
        ; branchcc occurs ; [] |4776| 
        CMPB      AL,#3                 ; [CPU_] |4776| 
        B         $C$L135,EQ            ; [CPU_] |4776| 
        ; branchcc occurs ; [] |4776| 
        B         $C$L134,UNC           ; [CPU_] |4776| 
        ; branch occurs ; [] |4776| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4793,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4793| 
        MOVB      XAR0,#46              ; [CPU_] |4793| 
        MOV       AL,*XAR7              ; [CPU_] |4793| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4793| 
	.dwpsn	file "../Source/prod.c",line 4794,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4794| 
	.dwpsn	file "../Source/prod.c",line 4793,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4793| 
	.dwpsn	file "../Source/prod.c",line 4794,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4794| 
        CMPB      AL,#12                ; [CPU_] |4794| 
        B         $C$L134,GT            ; [CPU_] |4794| 
        ; branchcc occurs ; [] |4794| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4793,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4793| 
	.dwpsn	file "../Source/prod.c",line 4799,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4799| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4793,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4793| 
        MOVL      P,XAR6                ; [CPU_] |4793| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4807| 
        B         $C$L140,LEQ           ; [CPU_] |4807| 
        ; branchcc occurs ; [] |4807| 
	.dwpsn	file "../Source/prod.c",line 4800,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4800| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4800| 
        ADDB      ACC,#48               ; [CPU_] |4800| 
        MOVL      XAR0,ACC              ; [CPU_] |4800| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4802,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4802| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4802| 
	.dwpsn	file "../Source/prod.c",line 4803,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4802,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4802| 
        MOV       *XAR0++,AL            ; [CPU_] |4802| 
	.dwpsn	file "../Source/prod.c",line 4803,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4803| 
        MOVL      P,XAR5                ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4801,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4801| 
        ; branchcc occurs ; [] |4801| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4799,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4799| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4799| 
        ; branch occurs ; [] |4799| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4825,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4825| 
	.dwpsn	file "../Source/prod.c",line 4826,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4826| 
        ; branch occurs ; [] |4826| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4811,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4811| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4811| 
        MOVZ      AR0,AR5               ; [CPU_] |4811| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4813,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4813| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4814,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4814| 
	.dwpsn	file "../Source/prod.c",line 4813,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4813| 
        MOV       *XAR0++,AL            ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4814,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4814| 
        MOVL      P,XAR5                ; [CPU_] |4814| 
	.dwpsn	file "../Source/prod.c",line 4812,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4812| 
        ; branchcc occurs ; [] |4812| 
	.dwpsn	file "../Source/prod.c",line 4817,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4817| 
        MOV       AH,#0                 ; [CPU_] |4817| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4817| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4817| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4817| 
        ; call occurs [#FS$$CMP] ; [] |4817| 
        CMPB      AL,#0                 ; [CPU_] |4817| 
        B         $C$L139,NEQ           ; [CPU_] |4817| 
        ; branchcc occurs ; [] |4817| 
	.dwpsn	file "../Source/prod.c",line 4818,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4818| 
        MOV       AH,#16314             ; [CPU_] |4818| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4818| 
        B         $C$L139,UNC           ; [CPU_] |4818| 
        ; branch occurs ; [] |4818| 
$C$L137:    
        MOVL      XAR0,#50              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4781,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4781| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4781| 
	.dwpsn	file "../Source/prod.c",line 4782,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4782| 
	.dwpsn	file "../Source/prod.c",line 4781,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4781| 
        MOV       *XAR0++,AL            ; [CPU_] |4781| 
	.dwpsn	file "../Source/prod.c",line 4782,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4782| 
        MOVL      P,XAR5                ; [CPU_] |4782| 
	.dwpsn	file "../Source/prod.c",line 4780,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4780| 
        ; branchcc occurs ; [] |4780| 
	.dwpsn	file "../Source/prod.c",line 4785,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4785| 
        MOVL      XAR0,#50              ; [CPU_] |4785| 
        MOVL      ACC,XAR1              ; [CPU_] |4785| 
        ADDB      ACC,#96               ; [CPU_] |4785| 
        MOVL      *-SP[62],ACC          ; [CPU_] |4785| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4785| 
        MOV       AL,#0                 ; [CPU_] |4785| 
        MOV       AH,#0                 ; [CPU_] |4785| 
        MOVB      XAR0,#96              ; [CPU_] |4785| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4785| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4785| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4785| 
        ; call occurs [#FS$$CMP] ; [] |4785| 
        CMPB      AL,#0                 ; [CPU_] |4785| 
        B         $C$L139,NEQ           ; [CPU_] |4785| 
        ; branchcc occurs ; [] |4785| 
	.dwpsn	file "../Source/prod.c",line 4786,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4786| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4786| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4786| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4788,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4788| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4829,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4829| 
        MOVB      XAR0,#36              ; [CPU_] |4829| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4829| 
        B         $C$L321,EQ            ; [CPU_] |4829| 
        ; branchcc occurs ; [] |4829| 
	.dwpsn	file "../Source/prod.c",line 4833,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4833| 
        MOV       AL,#0                 ; [CPU_] |4833| 
        MOV       AH,#0                 ; [CPU_] |4833| 
	.dwpsn	file "../Source/prod.c",line 4834,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4833,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4833| 
	.dwpsn	file "../Source/prod.c",line 4834,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4834| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4835,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4835| 
        MOV       AL,#0                 ; [CPU_] |4835| 
        MOV       AH,#0                 ; [CPU_] |4835| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4836,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4836| 
        MOV       AL,*-SP[56]           ; [CPU_] |4836| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4836| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4836| 
	.dwpsn	file "../Source/prod.c",line 4838,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4838| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4838| 
        ; branch occurs ; [] |4838| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOV       PL,*-SP[59]           ; [CPU_] |4839| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] |4839| 
        ADD       ACC,PL                ; [CPU_] |4839| 
        MOVL      XAR7,ACC              ; [CPU_] |4839| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4839| 
        ADD       ACC,PL                ; [CPU_] |4839| 
        MOVL      XAR4,ACC              ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4838| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4839| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4839| 
        MOV       AL,PL                 ; [CPU_] |4839| 
        ADDB      AL,#1                 ; [CPU_] |4839| 
        MOV       *-SP[59],AL           ; [CPU_] |4839| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4838,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4838| 
        B         $C$L141,HI            ; [CPU_] |4838| 
        ; branchcc occurs ; [] |4838| 
        B         $C$L734,UNC           ; [CPU_] |4838| 
        ; branch occurs ; [] |4838| 
$C$L143:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4646| 
        B         $C$L321,LO            ; [CPU_] |4646| 
        ; branchcc occurs ; [] |4646| 
        MOVL      ACC,XAR4              ; [CPU_] |4646| 
        MOVL      XAR0,#64              ; [CPU_] |4646| 
        ADDB      ACC,#2                ; [CPU_] |4646| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4646| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4646| 
        B         $C$L321,LT            ; [CPU_] |4646| 
        ; branchcc occurs ; [] |4646| 
        MOVL      XAR5,XAR4             ; [CPU_] |4646| 
        MOVL      XAR0,#64              ; [CPU_] |4646| 
        CMPB      AL,#4                 ; [CPU_] |4646| 
        ADDB      XAR5,#2               ; [CPU_] |4646| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4646| 
        B         $C$L321,GEQ           ; [CPU_] |4646| 
        ; branchcc occurs ; [] |4646| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4646| 
        B         $C$L321,LT            ; [CPU_] |4646| 
        ; branchcc occurs ; [] |4646| 
        CMPB      AH,#2                 ; [CPU_] |4646| 
        B         $C$L321,GT            ; [CPU_] |4646| 
        ; branchcc occurs ; [] |4646| 
        MOV       AH,*-SP[54]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4652,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4652| 
        ; branchcc occurs ; [] |4652| 
	.dwpsn	file "../Source/prod.c",line 4655,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4655| 
        MOVZ      AR6,*-SP[56]          ; [CPU_] |4655| 
        MOVL      XAR0,#64              ; [CPU_] |4655| 
        MOVU      ACC,AL                ; [CPU_] |4655| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4655| 
        CMPL      ACC,XAR6              ; [CPU_] |4655| 
        B         $C$L145,EQ            ; [CPU_] |4655| 
        ; branchcc occurs ; [] |4655| 
        B         $C$L321,UNC           ; [CPU_] |4655| 
        ; branch occurs ; [] |4655| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4653,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4653| 
        MOVL      XAR0,#64              ; [CPU_] |4653| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4653| 
        MOV       *-SP[56],AL           ; [CPU_] |4653| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4653| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4661,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4661| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4660,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4660| 
        MOV       *-SP[47],AL           ; [CPU_] |4660| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4661,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4661| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4664,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4664| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4661,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4664,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4664| 
        MOVZ      AR4,AR4               ; [CPU_] |4664| 
	.dwpsn	file "../Source/prod.c",line 4662,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4662| 
	.dwpsn	file "../Source/prod.c",line 4664,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4664| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4664| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4666,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4666| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4667,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4667| 
        MOV       *XAR7++,AL            ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4668,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4668| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4668| 
        MOV       *XAR4++,AL            ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4669,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4669| 
        MOV       *XAR7++,AL            ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4665,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4665| 
        ; branchcc occurs ; [] |4665| 
	.dwpsn	file "../Source/prod.c",line 4672,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4672| 
        SUBB      XAR4,#24              ; [CPU_U] |4672| 
        MOVZ      AR4,AR4               ; [CPU_] |4672| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4672| 
        ADDL      XAR4,ACC              ; [CPU_] |4672| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4672| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4672| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4672| 
        MOVL      ACC,XAR1              ; [CPU_] |4672| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4672| 
        ; call occurs [#FS$$CMP] ; [] |4672| 
        CMPB      AL,#0                 ; [CPU_] |4672| 
        B         $C$L321,LT            ; [CPU_] |4672| 
        ; branchcc occurs ; [] |4672| 
        MOV       AL,#0                 ; [CPU_] |4672| 
        MOV       AH,#16672             ; [CPU_] |4672| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4672| 
        MOVL      ACC,XAR1              ; [CPU_] |4672| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4672| 
        ; call occurs [#FS$$CMP] ; [] |4672| 
        CMPB      AL,#0                 ; [CPU_] |4672| 
        B         $C$L321,GT            ; [CPU_] |4672| 
        ; branchcc occurs ; [] |4672| 
	.dwpsn	file "../Source/prod.c",line 4677,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4677| 
        MOV       AH,#16672             ; [CPU_] |4677| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4677| 
        MOVL      ACC,XAR1              ; [CPU_] |4677| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4677| 
        ; call occurs [#FS$$ADD] ; [] |4677| 
        MOVL      XAR6,ACC              ; [CPU_] |4677| 
        MOV       AL,#65024             ; [CPU_] |4677| 
        MOV       AH,#18175             ; [CPU_] |4677| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4677| 
        MOVL      ACC,XAR6              ; [CPU_] |4677| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4677| 
        ; call occurs [#FS$$MPY] ; [] |4677| 
        MOVL      XAR6,ACC              ; [CPU_] |4677| 
        MOV       AL,#0                 ; [CPU_] |4677| 
        MOV       AH,#16672             ; [CPU_] |4677| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4677| 
        MOVL      ACC,XAR6              ; [CPU_] |4677| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4677| 
        ; call occurs [#FS$$DIV] ; [] |4677| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4677| 
        ; call occurs [#FS$$TOLL] ; [] |4677| 
	.dwpsn	file "../Source/prod.c",line 4678,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4677,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4677| 
	.dwpsn	file "../Source/prod.c",line 4668,column 6,is_stmt,isa 0
        MOV       *-SP[59],#8           ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4677,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4677| 
	.dwpsn	file "../Source/prod.c",line 4678,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4678| 
        CMP64     ACC:P                 ; [CPU_] |4678| 
        B         $C$L148,LEQ           ; [CPU_] |4678| 
        ; branchcc occurs ; [] |4678| 
	.dwpsn	file "../Source/prod.c",line 4680,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4680| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4680| 
        MOV       *-SP[2],#0            ; [CPU_] |4680| 
        MOV       *-SP[1],#0            ; [CPU_] |4680| 
        MOVL      P,*-SP[32]            ; [CPU_] |4680| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4680| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$678, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4680| 
        ; call occurs [#LL$$CMP] ; [] |4680| 
        CMPB      AL,#0                 ; [CPU_] |4680| 
        B         $C$L147,GEQ           ; [CPU_] |4680| 
        ; branchcc occurs ; [] |4680| 
	.dwpsn	file "../Source/prod.c",line 4683,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4683| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4683| 
        MOVU      ACC,AR4               ; [CPU_] |4683| 
        ADD       ACC,*-SP[57]          ; [CPU_] |4683| 
        MOVL      XAR1,ACC              ; [CPU_] |4683| 
        MOV       AL,*-SP[32]           ; [CPU_] |4683| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4683| 
        B         $C$L149,UNC           ; [CPU_] |4683| 
        ; branch occurs ; [] |4683| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4681,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4681| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4681| 
        MOVU      ACC,AR4               ; [CPU_] |4681| 
        ADD       ACC,*-SP[57]          ; [CPU_] |4681| 
        MOVL      XAR1,ACC              ; [CPU_] |4681| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4682,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4682| 
        ; branch occurs ; [] |4682| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4679,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4679| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4679| 
        MOVU      ACC,AR4               ; [CPU_] |4679| 
        ADD       ACC,*-SP[57]          ; [CPU_] |4679| 
        MOVL      XAR1,ACC              ; [CPU_] |4679| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4679| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4686,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4686| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4686| 
        ; call occurs [#_dac_setmode] ; [] |4686| 
	.dwpsn	file "../Source/prod.c",line 4688,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4688| 
        MOV       AH,*-SP[47]           ; [CPU_] |4688| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4688| 
        ; call occurs [#_mcbsp_xmit] ; [] |4688| 
	.dwpsn	file "../Source/prod.c",line 4689,column 5,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_latch_dac")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4689| 
        ; call occurs [#_latch_dac] ; [] |4689| 
	.dwpsn	file "../Source/prod.c",line 4691,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4691| 
        MOV       T,*-SP[57]            ; [CPU_] |4691| 
        LSL       AL,T                  ; [CPU_] |4691| 
        OR        *-SP[54],AL           ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4694,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |4694| 
        ; branch occurs ; [] |4694| 
$C$L150:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4600,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4600| 
        B         $C$L321,LO            ; [CPU_] |4600| 
        ; branchcc occurs ; [] |4600| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4600| 
        MOVL      XAR0,#64              ; [CPU_] |4600| 
        MOVL      ACC,XAR5              ; [CPU_] |4600| 
        ADDB      ACC,#2                ; [CPU_] |4600| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4600| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4600| 
        MOVZ      AR7,AR6               ; [CPU_] |4600| 
        MOV       AL,*-SP[56]           ; [CPU_] |4600| 
        MOVU      ACC,AL                ; [CPU_] |4600| 
        CMPL      ACC,XAR7              ; [CPU_] |4600| 
        B         $C$L321,NEQ           ; [CPU_] |4600| 
        ; branchcc occurs ; [] |4600| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4600| 
        CMPB      AL,#7                 ; [CPU_] |4600| 
        B         $C$L321,NEQ           ; [CPU_] |4600| 
        ; branchcc occurs ; [] |4600| 
	.dwpsn	file "../Source/prod.c",line 4606,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4606| 
        MOVL      ACC,XAR5              ; [CPU_] |4606| 
        MOVL      XAR0,#64              ; [CPU_] |4606| 
	.dwpsn	file "../Source/prod.c",line 4605,column 5,is_stmt,isa 0
        MOV       *-SP[56],AR6          ; [CPU_] |4605| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4606,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4606| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4606| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4606| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[59],#3           ; [CPU_] |4606| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4609,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4609| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4611,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4611| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4612,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4612| 
        MOV       *XAR7++,AL            ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4613,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4613| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4613| 
        MOV       *XAR0++,AL            ; [CPU_] |4613| 
	.dwpsn	file "../Source/prod.c",line 4614,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4614| 
        MOV       *XAR7++,AL            ; [CPU_] |4614| 
	.dwpsn	file "../Source/prod.c",line 4610,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4610| 
        ; branchcc occurs ; [] |4610| 
	.dwpsn	file "../Source/prod.c",line 4608,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4608| 
	.dwpsn	file "../Source/prod.c",line 4614,column 7,is_stmt,isa 0
        ADD       *-SP[59],#4           ; [CPU_] |4614| 
	.dwpsn	file "../Source/prod.c",line 4608,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4608| 
        ; branchcc occurs ; [] |4608| 
	.dwpsn	file "../Source/prod.c",line 4621,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4621| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4621| 
        ; call occurs [#U$$TOFS] ; [] |4621| 
        MOVL      XAR1,ACC              ; [CPU_] |4621| 
        MOV       AL,*-SP[35]           ; [CPU_] |4621| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4621| 
        ; call occurs [#U$$TOFS] ; [] |4621| 
        MOVL      XAR0,#86              ; [CPU_] |4621| 
        MOV       T,*-SP[56]            ; [CPU_] |4621| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4621| 
        MOVL      XAR0,#40              ; [CPU_] |4621| 
        MOVB      AL,#12                ; [CPU_] |4621| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4621| 
        MPYU      ACC,T,AL              ; [CPU_] |4621| 
        MOVL      XAR0,#86              ; [CPU_] |4621| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4621| 
        ADDL      ACC,XAR6              ; [CPU_] |4621| 
        MOVL      *-SP[62],ACC          ; [CPU_] |4621| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4621| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4621| 
        ; call occurs [#FS$$SUB] ; [] |4621| 
        MOVL      XAR0,#42              ; [CPU_] |4621| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4621| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4621| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4621| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4621| 
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4621| 
        ; call occurs [#FS$$SUB] ; [] |4621| 
        MOVL      XAR0,#42              ; [CPU_] |4621| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4621| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4621| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4621| 
        ; call occurs [#FS$$DIV] ; [] |4621| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4621| 
        MOVL      XAR0,#3138            ; [CPU_] |4621| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4621| 
	.dwpsn	file "../Source/prod.c",line 4624,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4624| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4624| 
        ; call occurs [#U$$TOFS] ; [] |4624| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4624| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4624| 
        ; call occurs [#FS$$SUB] ; [] |4624| 
        MOVL      XAR1,ACC              ; [CPU_] |4624| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4624| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4624| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4624| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4624| 
        ; call occurs [#FS$$SUB] ; [] |4624| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4624| 
        MOVL      ACC,XAR1              ; [CPU_] |4624| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4624| 
        ; call occurs [#FS$$DIV] ; [] |4624| 
        MOVL      XAR1,*-SP[62]         ; [CPU_] |4624| 
        MOVL      XAR0,#3136            ; [CPU_] |4624| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4624| 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOVL      XAR0,#3138            ; [CPU_] |4627| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4627| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4627| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4627| 
        ; call occurs [#FS$$MPY] ; [] |4627| 
        MOVL      XAR0,#86              ; [CPU_] |4627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4627| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4627| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4627| 
        ; call occurs [#FS$$SUB] ; [] |4627| 
        MOVL      XAR0,#3140            ; [CPU_] |4627| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4630,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4630| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4630| 
        ; call occurs [#_dac_setmode] ; [] |4630| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4636,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4636| 
        ; call occurs [#_ad7738_setcal] ; [] |4636| 
        MOVL      XAR0,#76              ; [CPU_] |4636| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4637,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |4637| 
        MOVL      XAR1,ACC              ; [CPU_] |4637| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4637| 
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4637| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4637| 
	.dwpsn	file "../Source/prod.c",line 4638,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4638| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4638| 
        ; call occurs [#_ad7738_resetvall] ; [] |4638| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4631,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |4631| 
	.dwpsn	file "../Source/prod.c",line 4642,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |4642| 
        ; branch occurs ; [] |4642| 
$C$L153:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4544,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4544| 
        B         $C$L321,LO            ; [CPU_] |4544| 
        ; branchcc occurs ; [] |4544| 
        MOVL      ACC,XAR4              ; [CPU_] |4544| 
        MOVL      XAR0,#64              ; [CPU_] |4544| 
        MOVL      *-SP[62],XAR4         ; [CPU_] |4544| 
        ADDB      ACC,#2                ; [CPU_] |4544| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4544| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4544| 
        MOV       AL,*-SP[56]           ; [CPU_] |4544| 
        MOVU      ACC,AL                ; [CPU_] |4544| 
        CMPL      ACC,XAR6              ; [CPU_] |4544| 
        B         $C$L321,NEQ           ; [CPU_] |4544| 
        ; branchcc occurs ; [] |4544| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4544| 
        B         $C$L321,LT            ; [CPU_] |4544| 
        ; branchcc occurs ; [] |4544| 
        CMPB      AL,#2                 ; [CPU_] |4544| 
        B         $C$L321,GEQ           ; [CPU_] |4544| 
        ; branchcc occurs ; [] |4544| 
	.dwpsn	file "../Source/prod.c",line 4551,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4551| 
	.dwpsn	file "../Source/prod.c",line 4550,column 5,is_stmt,isa 0
        MOVL      XAR5,*-SP[62]         ; [CPU_] |4550| 
        MOV       *-SP[47],AL           ; [CPU_] |4550| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4551,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4551| 
        MOVZ      AR7,AR6               ; [CPU_] |4551| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4553,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4553| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4553| 
	.dwpsn	file "../Source/prod.c",line 4552,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4552| 
        ADDB      XAR4,#2               ; [CPU_] |4552| 
	.dwpsn	file "../Source/prod.c",line 4553,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4553| 
	.dwpsn	file "../Source/prod.c",line 4552,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4552| 
        ; branchcc occurs ; [] |4552| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4556| 
        SUBB      XAR4,#24              ; [CPU_U] |4556| 
        MOVZ      AR1,AR4               ; [CPU_] |4556| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4556| 
        ADDL      XAR1,ACC              ; [CPU_] |4556| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4556| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4556| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4556| 
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4556| 
        ; call occurs [#FS$$CMP] ; [] |4556| 
        CMPB      AL,#0                 ; [CPU_] |4556| 
        B         $C$L321,NEQ           ; [CPU_] |4556| 
        ; branchcc occurs ; [] |4556| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4560| 
        ; call occurs [#_lcd_clear] ; [] |4560| 
	.dwpsn	file "../Source/prod.c",line 4561,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4561| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4561| 
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4561| 
        ; call occurs [#_lcd_puts] ; [] |4561| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4562| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4562| 
        MOVL      XAR0,#84              ; [CPU_] |4562| 
        ADD       AL,*-SP[56]           ; [CPU_] |4562| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4562| 
        MOV       *-SP[3],AL            ; [CPU_] |4562| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4562| 
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_sprintf")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4562| 
        ; call occurs [#_sprintf] ; [] |4562| 
        MOVL      XAR0,#84              ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4563| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4563| 
        ; call occurs [#_lcd_puts] ; [] |4563| 
	.dwpsn	file "../Source/prod.c",line 4564,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4564| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4564| 
        MOVL      XAR0,#84              ; [CPU_] |4564| 
        ADD       AL,*-SP[47]           ; [CPU_] |4564| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4564| 
        MOV       *-SP[3],AL            ; [CPU_] |4564| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4564| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4564| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4564| 
        MOVL      XAR4,XAR1             ; [CPU_] |4564| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_sprintf")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4564| 
        ; call occurs [#_sprintf] ; [] |4564| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4565| 
	.dwpsn	file "../Source/prod.c",line 4564,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4564| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4565| 
        ; call occurs [#_lcd_puts] ; [] |4565| 
	.dwpsn	file "../Source/prod.c",line 4566,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4566| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4566| 
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4566| 
        ; call occurs [#_lcd_puts] ; [] |4566| 
	.dwpsn	file "../Source/prod.c",line 4568,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4568| 
        SUBB      XAR4,#32              ; [CPU_U] |4568| 
        MOVZ      AR1,AR4               ; [CPU_] |4568| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4566,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4566| 
	.dwpsn	file "../Source/prod.c",line 4568,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4568| 
        ADDL      XAR1,ACC              ; [CPU_] |4568| 
	.dwpsn	file "../Source/prod.c",line 4569,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4569| 
	.dwpsn	file "../Source/prod.c",line 4568,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4568| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4568| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4568| 
	.dwpsn	file "../Source/prod.c",line 4570,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4570| 
	.dwpsn	file "../Source/prod.c",line 4569,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4570,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4570| 
        MOVB      ACC,#0                ; [CPU_] |4570| 
        SUBB      ACC,#1                ; [CPU_] |4570| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4570| 
        B         $C$L157,EQ            ; [CPU_] |4570| 
        ; branchcc occurs ; [] |4570| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4571,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4571| 
        ; branch occurs ; [] |4571| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4572,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4572| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_delay_us")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4572| 
        ; call occurs [#_delay_us] ; [] |4572| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4571,column 13,is_stmt,isa 0
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4571| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4571| 
        CMPB      AL,#0                 ; [CPU_] |4571| 
        B         $C$L155,EQ            ; [CPU_] |4571| 
        ; branchcc occurs ; [] |4571| 
	.dwpsn	file "../Source/prod.c",line 4574,column 6,is_stmt,isa 0
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4574| 
        ; call occurs [#_ad7738_getraw] ; [] |4574| 
	.dwpsn	file "../Source/prod.c",line 4575,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4575| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4575| 
        ADDL      XAR4,ACC              ; [CPU_] |4575| 
        MOVL      XAR0,#22              ; [CPU_] |4575| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4575| 
        MOVL      XAR0,#22              ; [CPU_] |4575| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4575| 
        ASR64     ACC:P,16              ; [CPU_] |4575| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4575| 
        MOVL      XAR0,#22              ; [CPU_] |4575| 
        ASR64     ACC:P,16              ; [CPU_] |4575| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4575| 
        MOVL      XAR0,#22              ; [CPU_] |4575| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4575| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4575| 
        MOVL      XAR0,#22              ; [CPU_] |4575| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4575| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4575| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4575| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4575| 
	.dwpsn	file "../Source/prod.c",line 4570,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4570| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4570| 
        MOVB      ACC,#0                ; [CPU_] |4570| 
        SUBB      ACC,#1                ; [CPU_] |4570| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4570| 
        B         $C$L156,NEQ           ; [CPU_] |4570| 
        ; branchcc occurs ; [] |4570| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4577| 
        B         $C$L158,NEQ           ; [CPU_] |4577| 
        ; branchcc occurs ; [] |4577| 
	.dwpsn	file "../Source/prod.c",line 4578,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4578| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4578| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4578| 
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4578| 
        ; call occurs [#FS$$SUB] ; [] |4578| 
        MOVL      XAR6,ACC              ; [CPU_] |4578| 
        MOV       AL,#16384             ; [CPU_] |4578| 
        MOV       AH,#17948             ; [CPU_] |4578| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4578| 
        MOVL      ACC,XAR6              ; [CPU_] |4578| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4578| 
        ; call occurs [#FS$$MPY] ; [] |4578| 
        MOVL      XAR1,ACC              ; [CPU_] |4578| 
        MOVL      P,*-SP[28]            ; [CPU_] |4578| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4578| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4578| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4578| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4578| 
        ; call occurs [#LL$$TOFS] ; [] |4578| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4578| 
        MOVL      ACC,XAR1              ; [CPU_] |4578| 
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4578| 
        ; call occurs [#FS$$DIV] ; [] |4578| 
        MOVL      XAR0,#40              ; [CPU_] |4578| 
        MOV       T,*-SP[56]            ; [CPU_] |4578| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4578| 
        MOVL      XAR6,ACC              ; [CPU_] |4578| 
        MOVB      AL,#10                ; [CPU_] |4578| 
        MPYU      ACC,T,AL              ; [CPU_] |4578| 
        ADDL      ACC,XAR7              ; [CPU_] |4578| 
        MOVL      XAR4,ACC              ; [CPU_] |4578| 
        MOVB      XAR0,#44              ; [CPU_] |4578| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4578| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4583,column 6,is_stmt,isa 0
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4583| 
        ; call occurs [#_ad7738_setcal] ; [] |4583| 
        MOVL      XAR0,#76              ; [CPU_] |4583| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4583| 
	.dwpsn	file "../Source/prod.c",line 4584,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |4584| 
        MOVL      XAR1,ACC              ; [CPU_] |4584| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4584| 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4584| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4584| 
	.dwpsn	file "../Source/prod.c",line 4585,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4585| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4585| 
        ; call occurs [#_ad7738_resetvall] ; [] |4585| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4581,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4581| 
$C$L158:    
        MOVL      XAR7,*-SP[62]         ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4588,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4588| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4588,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4588| 
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4588,column 17,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |4588| 
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4588,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4588| 
        B         $C$L159,HI            ; [CPU_] |4588| 
        ; branchcc occurs ; [] |4588| 
	.dwpsn	file "../Source/prod.c",line 4591,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4591| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4594,column 5,is_stmt,isa 0
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4594| 
        ; call occurs [#_lcd_clear] ; [] |4594| 
	.dwpsn	file "../Source/prod.c",line 4595,column 5,is_stmt,isa 0
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_update_units")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4595| 
        ; call occurs [#_update_units] ; [] |4595| 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |4596| 
        ; branch occurs ; [] |4596| 
$C$L160:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4519| 
        B         $C$L321,LO            ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
        MOVL      ACC,XAR4              ; [CPU_] |4519| 
        MOVL      XAR0,#64              ; [CPU_] |4519| 
        ADDB      ACC,#2                ; [CPU_] |4519| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4519| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4519| 
        B         $C$L321,LT            ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
        MOVL      XAR5,XAR4             ; [CPU_] |4519| 
        MOVL      XAR0,#64              ; [CPU_] |4519| 
        CMPB      AL,#4                 ; [CPU_] |4519| 
        ADDB      XAR5,#2               ; [CPU_] |4519| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4519| 
        B         $C$L321,GEQ           ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4519| 
        CMPB      AH,#2                 ; [CPU_] |4519| 
        B         $C$L321,NEQ           ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4526| 
        MOVL      XAR0,#64              ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOV       *-SP[56],AL           ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4529,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4529| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4526| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4526| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4527,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4527| 
        MOV       *-SP[59],#4           ; [CPU_] |4527| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4529,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4529| 
        ; branch occurs ; [] |4529| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4530,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4530| 
        SUBB      XAR4,#24              ; [CPU_U] |4530| 
        MOVZ      AR4,AR4               ; [CPU_] |4530| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4530| 
        MOVL      XAR0,#84              ; [CPU_] |4530| 
        ADDL      XAR4,ACC              ; [CPU_] |4530| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4530| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4532,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4532| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4533,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4533| 
        MOV       *XAR7++,AL            ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4534,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4534| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4534| 
        MOV       *XAR4++,AL            ; [CPU_] |4534| 
	.dwpsn	file "../Source/prod.c",line 4535,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4535| 
        MOV       *XAR7++,AL            ; [CPU_] |4535| 
	.dwpsn	file "../Source/prod.c",line 4531,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4531| 
        ; branchcc occurs ; [] |4531| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4535,column 7,is_stmt,isa 0
        ADD       *-SP[59],#4           ; [CPU_] |4535| 
	.dwpsn	file "../Source/prod.c",line 4529,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4529| 
        MOV       PL,AL                 ; [CPU_] |4529| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4529,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4529| 
        MOV       AL,PL                 ; [CPU_] |4529| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4529| 
        B         $C$L161,LT            ; [CPU_] |4529| 
        ; branchcc occurs ; [] |4529| 
        B         $C$L734,UNC           ; [CPU_] |4529| 
        ; branch occurs ; [] |4529| 
$C$L164:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5474,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5474| 
        B         $C$L321,LO            ; [CPU_] |5474| 
        ; branchcc occurs ; [] |5474| 
	.dwpsn	file "../Source/prod.c",line 5479,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5479| 
        MOVL      XAR0,#64              ; [CPU_] |5479| 
        MOVL      ACC,XAR7              ; [CPU_] |5479| 
        ADDB      ACC,#2                ; [CPU_] |5479| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5479| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GT            ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVB      XAR0,#13              ; [CPU_] |5479| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GT            ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVB      XAR0,#24              ; [CPU_] |5479| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GT            ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVB      XAR0,#35              ; [CPU_] |5479| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GT            ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GEQ           ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVB      XAR0,#14              ; [CPU_] |5479| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GEQ           ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVB      XAR0,#25              ; [CPU_] |5479| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GEQ           ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVB      XAR0,#36              ; [CPU_] |5479| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5479| 
        CMPB      AL,#4                 ; [CPU_] |5479| 
        B         $C$L321,GEQ           ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5487,column 6,is_stmt,isa 0
        MOVL      XAR0,#3182            ; [CPU_] |5487| 
        MOV       AL,*XAR7              ; [CPU_] |5487| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5487| 
        ADDB      XAR7,#1               ; [CPU_] |5487| 
	.dwpsn	file "../Source/prod.c",line 5488,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5488| 
	.dwpsn	file "../Source/prod.c",line 5492,column 6,is_stmt,isa 0
        MOVL      XAR1,P                ; [CPU_] |5492| 
	.dwpsn	file "../Source/prod.c",line 5489,column 6,is_stmt,isa 0
        MOVL      XAR0,#3183            ; [CPU_] |5489| 
	.dwpsn	file "../Source/prod.c",line 5488,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5488| 
	.dwpsn	file "../Source/prod.c",line 5489,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5489| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5489| 
        ADDB      XAR7,#1               ; [CPU_] |5489| 
	.dwpsn	file "../Source/prod.c",line 5490,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5490| 
	.dwpsn	file "../Source/prod.c",line 5491,column 6,is_stmt,isa 0
        MOVL      XAR0,#3184            ; [CPU_] |5491| 
	.dwpsn	file "../Source/prod.c",line 5490,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5490| 
	.dwpsn	file "../Source/prod.c",line 5491,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5491| 
        ANDB      AL,#0xfe              ; [CPU_] |5491| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5491| 
	.dwpsn	file "../Source/prod.c",line 5492,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5492| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5492| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5496,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5496| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5496| 
	.dwpsn	file "../Source/prod.c",line 5497,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5497| 
        MOV       *XAR4++,AL            ; [CPU_] |5497| 
	.dwpsn	file "../Source/prod.c",line 5498,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5498| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5498| 
        MOV       *XAR1++,AL            ; [CPU_] |5498| 
	.dwpsn	file "../Source/prod.c",line 5499,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5499| 
        MOV       *XAR4++,AL            ; [CPU_] |5499| 
	.dwpsn	file "../Source/prod.c",line 5495,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR0--         ; [CPU_] |5495| 
        ; branchcc occurs ; [] |5495| 
	.dwpsn	file "../Source/prod.c",line 5502,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5502| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5504,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5504| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5504| 
	.dwpsn	file "../Source/prod.c",line 5505,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5505| 
        MOV       *XAR4++,AL            ; [CPU_] |5505| 
	.dwpsn	file "../Source/prod.c",line 5506,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5506| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5506| 
        MOV       *XAR1++,AL            ; [CPU_] |5506| 
	.dwpsn	file "../Source/prod.c",line 5507,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5507| 
        MOV       *XAR4++,AL            ; [CPU_] |5507| 
	.dwpsn	file "../Source/prod.c",line 5503,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR0--         ; [CPU_] |5503| 
        ; branchcc occurs ; [] |5503| 
	.dwpsn	file "../Source/prod.c",line 5486,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5486| 
	.dwpsn	file "../Source/prod.c",line 5489,column 6,is_stmt,isa 0
        MOVZ      AR0,AR3               ; [CPU_] |5489| 
        ADD       *-SP[59],#11          ; [CPU_] |5489| 
	.dwpsn	file "../Source/prod.c",line 5486,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5486| 
        ADDB      XAR6,#8               ; [CPU_] |5486| 
        ADDB      ACC,#8                ; [CPU_] |5486| 
        SUBB      XAR0,#1               ; [CPU_U] |5486| 
        MOVZ      AR3,AR0               ; [CPU_] |5486| 
        MOVL      P,ACC                 ; [CPU_] |5486| 
        CMP       AR0,#-1               ; [CPU_] |5486| 
        B         $C$L165,NEQ           ; [CPU_] |5486| 
        ; branchcc occurs ; [] |5486| 
        B         $C$L176,UNC           ; [CPU_] |5486| 
        ; branch occurs ; [] |5486| 
$C$L168:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5411,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5411| 
        B         $C$L321,LO            ; [CPU_] |5411| 
        ; branchcc occurs ; [] |5411| 
	.dwpsn	file "../Source/prod.c",line 5416,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5416| 
        MOVL      XAR0,#64              ; [CPU_] |5416| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5416| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L169,LEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        CMPB      AL,#7                 ; [CPU_] |5416| 
        B         $C$L321,NEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5416| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L170,LEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        CMPB      AL,#7                 ; [CPU_] |5416| 
        B         $C$L321,NEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5416| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L171,LEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        CMPB      AL,#7                 ; [CPU_] |5416| 
        B         $C$L321,NEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5416| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L172,LEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        CMPB      AL,#7                 ; [CPU_] |5416| 
        B         $C$L321,NEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5416| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L321,GEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        MOVB      XAR0,#13              ; [CPU_] |5416| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L321,GEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        MOVB      XAR0,#23              ; [CPU_] |5416| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L321,GEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        MOVB      XAR0,#33              ; [CPU_] |5416| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5416| 
        CMPB      AL,#4                 ; [CPU_] |5416| 
        B         $C$L321,GEQ           ; [CPU_] |5416| 
        ; branchcc occurs ; [] |5416| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5427,column 6,is_stmt,isa 0
        MOVL      XAR0,#3134            ; [CPU_] |5427| 
        MOV       AL,*XAR7              ; [CPU_] |5427| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5427| 
	.dwpsn	file "../Source/prod.c",line 5430,column 6,is_stmt,isa 0
        MOVL      XAR1,P                ; [CPU_] |5430| 
	.dwpsn	file "../Source/prod.c",line 5427,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5427| 
	.dwpsn	file "../Source/prod.c",line 5428,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5428| 
	.dwpsn	file "../Source/prod.c",line 5429,column 6,is_stmt,isa 0
        MOVL      XAR0,#3135            ; [CPU_] |5429| 
	.dwpsn	file "../Source/prod.c",line 5428,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5428| 
	.dwpsn	file "../Source/prod.c",line 5429,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5429| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5429| 
        ADDB      XAR7,#1               ; [CPU_] |5429| 
	.dwpsn	file "../Source/prod.c",line 5430,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5430| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5430| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5441,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5441| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5441| 
	.dwpsn	file "../Source/prod.c",line 5442,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5442| 
        MOV       *XAR4++,AL            ; [CPU_] |5442| 
	.dwpsn	file "../Source/prod.c",line 5443,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5443| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5443| 
        MOV       *XAR1++,AL            ; [CPU_] |5443| 
	.dwpsn	file "../Source/prod.c",line 5444,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5444| 
        MOV       *XAR4++,AL            ; [CPU_] |5444| 
	.dwpsn	file "../Source/prod.c",line 5440,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR0--         ; [CPU_] |5440| 
        ; branchcc occurs ; [] |5440| 
	.dwpsn	file "../Source/prod.c",line 5450,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5450| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5457,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5457| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5457| 
	.dwpsn	file "../Source/prod.c",line 5458,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5458| 
        MOV       *XAR4++,AL            ; [CPU_] |5458| 
	.dwpsn	file "../Source/prod.c",line 5459,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5459| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5459| 
        MOV       *XAR1++,AL            ; [CPU_] |5459| 
	.dwpsn	file "../Source/prod.c",line 5460,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5460| 
        MOV       *XAR4++,AL            ; [CPU_] |5460| 
	.dwpsn	file "../Source/prod.c",line 5456,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR0--         ; [CPU_] |5456| 
        ; branchcc occurs ; [] |5456| 
	.dwpsn	file "../Source/prod.c",line 5426,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5426| 
	.dwpsn	file "../Source/prod.c",line 5429,column 6,is_stmt,isa 0
        MOVZ      AR0,AR3               ; [CPU_] |5429| 
        ADD       *-SP[59],#10          ; [CPU_] |5429| 
	.dwpsn	file "../Source/prod.c",line 5426,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |5426| 
        ADDB      XAR6,#12              ; [CPU_] |5426| 
        ADDB      ACC,#12               ; [CPU_] |5426| 
        SUBB      XAR0,#1               ; [CPU_U] |5426| 
        MOVZ      AR3,AR0               ; [CPU_] |5426| 
        MOVL      P,ACC                 ; [CPU_] |5426| 
        CMP       AR0,#-1               ; [CPU_] |5426| 
        B         $C$L173,NEQ           ; [CPU_] |5426| 
        ; branchcc occurs ; [] |5426| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5467,column 5,is_stmt,isa 0
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5467| 
        ; call occurs [#_ad7738_setcal] ; [] |5467| 
	.dwpsn	file "../Source/prod.c",line 5470,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5470| 
        ; branch occurs ; [] |5470| 
$C$L177:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5379,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5379| 
        B         $C$L321,LO            ; [CPU_] |5379| 
        ; branchcc occurs ; [] |5379| 
	.dwpsn	file "../Source/prod.c",line 5384,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5384| 
        MOVL      XAR0,#64              ; [CPU_] |5384| 
        MOVL      ACC,XAR7              ; [CPU_] |5384| 
        ADDB      ACC,#2                ; [CPU_] |5384| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5384| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GT            ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GT            ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVB      XAR0,#8               ; [CPU_] |5384| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GT            ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVB      XAR0,#11              ; [CPU_] |5384| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GT            ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5384| 
        CMPB      AL,#4                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5384| 
        CMPB      AL,#4                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVB      XAR0,#9               ; [CPU_] |5384| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5384| 
        CMPB      AL,#4                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVB      XAR0,#12              ; [CPU_] |5384| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5384| 
        CMPB      AL,#4                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVL      ACC,XAR7              ; [CPU_] |5384| 
        MOVL      XAR0,#62              ; [CPU_] |5384| 
        ADDB      ACC,#4                ; [CPU_] |5384| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5384| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVB      XAR0,#10              ; [CPU_] |5384| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVB      XAR0,#13              ; [CPU_] |5384| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5384| 
        CMPB      AL,#6                 ; [CPU_] |5384| 
        B         $C$L321,GEQ           ; [CPU_] |5384| 
        ; branchcc occurs ; [] |5384| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5395,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5395| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5395| 
	.dwpsn	file "../Source/prod.c",line 5396,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5396| 
	.dwpsn	file "../Source/prod.c",line 5395,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5395| 
	.dwpsn	file "../Source/prod.c",line 5396,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5396| 
	.dwpsn	file "../Source/prod.c",line 5397,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5397| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5397| 
        ADDB      XAR7,#1               ; [CPU_] |5397| 
	.dwpsn	file "../Source/prod.c",line 5398,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5398| 
        MOV       *XAR4++,AL            ; [CPU_] |5398| 
	.dwpsn	file "../Source/prod.c",line 5399,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5399| 
        ADDB      XAR7,#1               ; [CPU_] |5399| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5399| 
	.dwpsn	file "../Source/prod.c",line 5400,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5400| 
	.dwpsn	file "../Source/prod.c",line 5394,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5400,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5400| 
	.dwpsn	file "../Source/prod.c",line 5394,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5394| 
        ; branchcc occurs ; [] |5394| 
	.dwpsn	file "../Source/prod.c",line 5404,column 5,is_stmt,isa 0
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5404| 
        ; call occurs [#_lcd_clear] ; [] |5404| 
	.dwpsn	file "../Source/prod.c",line 5405,column 5,is_stmt,isa 0
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_update_units")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5405| 
        ; call occurs [#_update_units] ; [] |5405| 
	.dwpsn	file "../Source/prod.c",line 5400,column 6,is_stmt,isa 0
        ADD       *-SP[59],#12          ; [CPU_] |5400| 
	.dwpsn	file "../Source/prod.c",line 5407,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5407| 
        ; branch occurs ; [] |5407| 
$C$L179:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5358,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5358| 
        B         $C$L321,LO            ; [CPU_] |5358| 
        ; branchcc occurs ; [] |5358| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5363,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5363| 
        MOVB      XAR0,#36              ; [CPU_] |5363| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5363| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5364,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5364| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5364| 
        B         $C$L181,NEQ           ; [CPU_] |5364| 
        ; branchcc occurs ; [] |5364| 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5366,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5366| 
	.dwpsn	file "../Source/prod.c",line 5367,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5367| 
	.dwpsn	file "../Source/prod.c",line 5365,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5365| 
        ; branchcc occurs ; [] |5365| 
	.dwpsn	file "../Source/prod.c",line 5369,column 6,is_stmt,isa 0
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_update_units")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5369| 
        ; call occurs [#_update_units] ; [] |5369| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5373,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5373| 
	.dwpsn	file "../Source/prod.c",line 5375,column 5,is_stmt,isa 0
        B         $C$L235,UNC           ; [CPU_] |5375| 
        ; branch occurs ; [] |5375| 
$C$L182:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5317,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L321,LO            ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
	.dwpsn	file "../Source/prod.c",line 5323,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5323| 
        ADDB      XAR4,#2               ; [CPU_] |5323| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5323| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5323| 
        MOVZ      AR3,AL                ; [CPU_] |5323| 
	.dwpsn	file "../Source/prod.c",line 5324,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |5324| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5324| 
        CMP       AR3,#4096             ; [CPU_] |5324| 
        B         $C$L321,HI            ; [CPU_] |5324| 
        ; branchcc occurs ; [] |5324| 
	.dwpsn	file "../Source/prod.c",line 5330,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5330| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5330| 
        MOVZ      AR7,AR6               ; [CPU_] |5330| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5332,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5332| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5332| 
	.dwpsn	file "../Source/prod.c",line 5331,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5331| 
        ADDB      XAR4,#2               ; [CPU_] |5331| 
	.dwpsn	file "../Source/prod.c",line 5332,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5332| 
	.dwpsn	file "../Source/prod.c",line 5331,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5331| 
        ; branchcc occurs ; [] |5331| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5337,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5337| 
        MOVB      XAR1,#38              ; [CPU_] |5337| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5337| 
	.dwpsn	file "../Source/prod.c",line 5338,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5338| 
        MOVB      XAR1,#40              ; [CPU_] |5338| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5338| 
	.dwpsn	file "../Source/prod.c",line 5339,column 5,is_stmt,isa 0
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_maf_rst")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5339| 
        ; call occurs [#_maf_rst] ; [] |5339| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5344,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5344| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5344| 
	.dwpsn	file "../Source/prod.c",line 5348,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5344,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5345,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5345| 
        LSR       AL,8                  ; [CPU_] |5345| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5348,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5348| 
        MOVB      XAR1,#40              ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5349| 
        MOVL      XAR0,#48              ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5348,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5348| 
        ANDB      AL,#0xff              ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5348,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5350,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5349,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5349| 
        LSR       AL,8                  ; [CPU_] |5349| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5350,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5350| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5351,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5351| 
	.dwpsn	file "../Source/prod.c",line 5350,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5351,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5351| 
        MOV       *-SP[59],#8           ; [CPU_] |5351| 
	.dwpsn	file "../Source/prod.c",line 5354,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5354| 
        ; branch occurs ; [] |5354| 
$C$L184:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5284| 
        B         $C$L321,LO            ; [CPU_] |5284| 
        ; branchcc occurs ; [] |5284| 
        MOVL      ACC,XAR4              ; [CPU_] |5284| 
        MOVL      XAR0,#64              ; [CPU_] |5284| 
        ADDB      ACC,#2                ; [CPU_] |5284| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5284| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5284| 
        B         $C$L321,LT            ; [CPU_] |5284| 
        ; branchcc occurs ; [] |5284| 
        MOVL      XAR5,XAR4             ; [CPU_] |5284| 
        MOVL      XAR0,#64              ; [CPU_] |5284| 
        CMPB      AL,#4                 ; [CPU_] |5284| 
        ADDB      XAR5,#2               ; [CPU_] |5284| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5284| 
        B         $C$L321,GEQ           ; [CPU_] |5284| 
        ; branchcc occurs ; [] |5284| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5284| 
        B         $C$L321,LT            ; [CPU_] |5284| 
        ; branchcc occurs ; [] |5284| 
        CMPB      AH,#20                ; [CPU_] |5284| 
        B         $C$L321,GEQ           ; [CPU_] |5284| 
        ; branchcc occurs ; [] |5284| 
	.dwpsn	file "../Source/prod.c",line 5294,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5294| 
        MOVL      XAR0,#64              ; [CPU_] |5294| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5294| 
        MOVL      XAR0,#78              ; [CPU_] |5294| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5294| 
	.dwpsn	file "../Source/prod.c",line 5292,column 5,is_stmt,isa 0
        MOVL      *-SP[56],ACC          ; [CPU_] |5292| 
	.dwpsn	file "../Source/prod.c",line 5294,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[56]          ; [CPU_] |5294| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5294| 
        B         $C$L319,NEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5300,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5300| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5300| 
        MOVB      AL,#10                ; [CPU_] |5300| 
        MOV       T,*-SP[56]            ; [CPU_] |5300| 
        MPYU      ACC,T,AL              ; [CPU_] |5300| 
        ADDL      ACC,XAR6              ; [CPU_] |5300| 
        MOVL      XAR4,ACC              ; [CPU_] |5300| 
        MOVB      XAR0,#42              ; [CPU_] |5300| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[55]           ; [CPU_] |5300| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5301,column 5,is_stmt,isa 0
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5301| 
        ; call occurs [#_ad7738_setcal] ; [] |5301| 
        MOVL      XAR0,#76              ; [CPU_] |5301| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5303,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |5303| 
        MOVL      XAR1,ACC              ; [CPU_] |5303| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5303| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5303| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5303| 
	.dwpsn	file "../Source/prod.c",line 5304,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5304| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5304| 
        ; call occurs [#_ad7738_resetvall] ; [] |5304| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5307,column 5,is_stmt,isa 0
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_update_units")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5307| 
        ; call occurs [#_update_units] ; [] |5307| 
	.dwpsn	file "../Source/prod.c",line 5310,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5310| 
        MOV       AL,*-SP[56]           ; [CPU_] |5310| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5310| 
        MOV       AL,*-SP[55]           ; [CPU_] |5310| 
	.dwpsn	file "../Source/prod.c",line 5311,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5311| 
        MOV       *-SP[59],#4           ; [CPU_] |5311| 
	.dwpsn	file "../Source/prod.c",line 5313,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5313| 
        ; branch occurs ; [] |5313| 
$C$L185:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L321,LO            ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5254,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5254| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5256,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5256| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5256| 
	.dwpsn	file "../Source/prod.c",line 5257,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5257| 
        MOV       *XAR5++,AL            ; [CPU_] |5257| 
	.dwpsn	file "../Source/prod.c",line 5258,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5258| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5258| 
        MOV       *XAR1++,AL            ; [CPU_] |5258| 
	.dwpsn	file "../Source/prod.c",line 5259,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5259| 
        MOV       *XAR5++,AL            ; [CPU_] |5259| 
	.dwpsn	file "../Source/prod.c",line 5255,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5255| 
        ; branchcc occurs ; [] |5255| 
	.dwpsn	file "../Source/prod.c",line 5253,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5253| 
	.dwpsn	file "../Source/prod.c",line 5259,column 7,is_stmt,isa 0
        ADD       *-SP[59],#4           ; [CPU_] |5259| 
	.dwpsn	file "../Source/prod.c",line 5253,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5253| 
        ; branchcc occurs ; [] |5253| 
	.dwpsn	file "../Source/prod.c",line 5264,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5264| 
        MOVL      XAR0,#3214            ; [CPU_] |5264| 
        MOV       AL,*XAR7              ; [CPU_] |5264| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5265,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5265| 
        ANDB      AL,#0xff              ; [CPU_] |5265| 
        MOV       *XAR5++,AL            ; [CPU_] |5265| 
	.dwpsn	file "../Source/prod.c",line 5266,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5266| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5266| 
        MOVL      XAR6,ACC              ; [CPU_] |5266| 
	.dwpsn	file "../Source/prod.c",line 5264,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5266,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5266| 
        ADD       *+XAR6[0],AL          ; [CPU_] |5266| 
	.dwpsn	file "../Source/prod.c",line 5267,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5267| 
        LSR       AL,8                  ; [CPU_] |5267| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5266,column 5,is_stmt,isa 0
        ADD       *-SP[59],#2           ; [CPU_] |5266| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5272,column 5,is_stmt,isa 0
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5272| 
        ; call occurs [#_ad7738_setcal] ; [] |5272| 
	.dwpsn	file "../Source/prod.c",line 5273,column 5,is_stmt,isa 0
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_velf_rst")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5273| 
        ; call occurs [#_velf_rst] ; [] |5273| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5277,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5277| 
        ; branch occurs ; [] |5277| 
$C$L189:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5209,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5209| 
        B         $C$L321,LO            ; [CPU_] |5209| 
        ; branchcc occurs ; [] |5209| 
        MOVL      ACC,XAR4              ; [CPU_] |5209| 
        MOVL      XAR0,#64              ; [CPU_] |5209| 
        ADDB      ACC,#2                ; [CPU_] |5209| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5209| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5209| 
        B         $C$L321,LT            ; [CPU_] |5209| 
        ; branchcc occurs ; [] |5209| 
        MOVL      XAR5,XAR4             ; [CPU_] |5209| 
        MOVL      XAR0,#64              ; [CPU_] |5209| 
        CMPB      AL,#20                ; [CPU_] |5209| 
        ADDB      XAR5,#2               ; [CPU_] |5209| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5209| 
        B         $C$L321,GEQ           ; [CPU_] |5209| 
        ; branchcc occurs ; [] |5209| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        MOV       *-SP[55],AL           ; [CPU_] |5213| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5214| 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |5216| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5214| 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5216| 
        ADDB      ACC,#2                ; [CPU_] |5216| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5216| 
        MOVL      XAR0,#40              ; [CPU_] |5216| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5216| 
        MOV       T,*-SP[55]            ; [CPU_] |5216| 
        MOVB      AL,#152               ; [CPU_] |5216| 
        MPYU      ACC,T,AL              ; [CPU_] |5216| 
        ADDL      ACC,XAR6              ; [CPU_] |5216| 
        ADDB      ACC,#224              ; [CPU_] |5216| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5216| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5218,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5218| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5218| 
	.dwpsn	file "../Source/prod.c",line 5219,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5219| 
        MOV       *XAR5++,AL            ; [CPU_] |5219| 
	.dwpsn	file "../Source/prod.c",line 5220,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5220| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5220| 
        MOV       *XAR7++,AL            ; [CPU_] |5220| 
	.dwpsn	file "../Source/prod.c",line 5221,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5221| 
        MOV       *XAR5++,AL            ; [CPU_] |5221| 
	.dwpsn	file "../Source/prod.c",line 5217,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5217| 
        ; branchcc occurs ; [] |5217| 
	.dwpsn	file "../Source/prod.c",line 5226,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5226| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5226| 
        MOVB      AL,#152               ; [CPU_] |5226| 
        MPYU      ACC,T,AL              ; [CPU_] |5226| 
        ADDL      ACC,XAR6              ; [CPU_] |5226| 
        MOVL      XAR1,ACC              ; [CPU_] |5226| 
        MOVB      XAR0,#125             ; [CPU_] |5226| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5226| 
        CMPB      AL,#247               ; [CPU_] |5226| 
        B         $C$L193,NEQ           ; [CPU_] |5226| 
        ; branchcc occurs ; [] |5226| 
	.dwpsn	file "../Source/prod.c",line 5228,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5228| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5228| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5228| 
        MOV       AL,#0                 ; [CPU_] |5228| 
        MOV       AH,#17096             ; [CPU_] |5228| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5228| 
        ; call occurs [#FS$$DIV] ; [] |5228| 
        MOVB      XAR0,#126             ; [CPU_] |5228| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5228| 
        MOVL      XAR0,#40              ; [CPU_] |5228| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5228| 
	.dwpsn	file "../Source/prod.c",line 5231,column 11,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |5231| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5232,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[55]          ; [CPU_] |5232| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5232| 
        CMPL      ACC,XAR6              ; [CPU_] |5232| 
        B         $C$L192,NEQ           ; [CPU_] |5232| 
        ; branchcc occurs ; [] |5232| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5235,column 8,is_stmt,isa 0
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5235| 
        ; call occurs [#_ad7738_setcal] ; [] |5235| 
        MOVL      XAR0,#76              ; [CPU_] |5235| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5235| 
	.dwpsn	file "../Source/prod.c",line 5236,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |5236| 
        MOVL      XAR4,ACC              ; [CPU_] |5236| 
        MOVL      *-SP[62],ACC          ; [CPU_] |5236| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5236| 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5236| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5236| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |5236| 
	.dwpsn	file "../Source/prod.c",line 5237,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5237| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5237| 
        ; call occurs [#_ad7738_resetvall] ; [] |5237| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5231,column 19,is_stmt,isa 0
        INC       *-SP[56]              ; [CPU_] |5231| 
        ADDB      XAR1,#10              ; [CPU_] |5231| 
        MOV       AL,*-SP[56]           ; [CPU_] |5231| 
        CMPB      AL,#4                 ; [CPU_] |5231| 
        B         $C$L191,LO            ; [CPU_] |5231| 
        ; branchcc occurs ; [] |5231| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5220,column 6,is_stmt,isa 0
        MOV       *-SP[59],#7           ; [CPU_] |5220| 
	.dwpsn	file "../Source/prod.c",line 5244,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5244| 
        ; branch occurs ; [] |5244| 
$C$L194:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5108,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5108| 
        B         $C$L321,LO            ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
        MOVL      ACC,XAR4              ; [CPU_] |5108| 
        MOVL      XAR0,#64              ; [CPU_] |5108| 
        ADDB      ACC,#2                ; [CPU_] |5108| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5108| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5108| 
        B         $C$L321,LT            ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
        MOVL      XAR5,XAR4             ; [CPU_] |5108| 
        MOVL      XAR0,#64              ; [CPU_] |5108| 
        CMPB      AL,#20                ; [CPU_] |5108| 
        ADDB      XAR5,#2               ; [CPU_] |5108| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5108| 
        B         $C$L321,GEQ           ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
	.dwpsn	file "../Source/prod.c",line 5113,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5113| 
        MOVL      XAR0,#64              ; [CPU_] |5113| 
        MOV       *-SP[55],AL           ; [CPU_] |5113| 
        ADDB      XAR5,#2               ; [CPU_] |5113| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5114,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5114| 
        MOV       AL,AR6                ; [CPU_] |5114| 
        CMPB      AL,#247               ; [CPU_] |5114| 
        B         $C$L195,EQ            ; [CPU_] |5114| 
        ; branchcc occurs ; [] |5114| 
	.dwpsn	file "../Source/prod.c",line 5116,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5116| 
        MOVL      XAR0,#64              ; [CPU_] |5116| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5116| 
        MOVL      XAR0,#40              ; [CPU_] |5116| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5116| 
        MOVB      AL,#152               ; [CPU_] |5116| 
        MOV       T,*-SP[55]            ; [CPU_] |5116| 
        MPYU      ACC,T,AL              ; [CPU_] |5116| 
        ADDL      ACC,XAR7              ; [CPU_] |5116| 
        MOVL      XAR4,ACC              ; [CPU_] |5116| 
        MOVB      XAR0,#124             ; [CPU_] |5116| 
        MOV       PH,#0                 ; [CPU_] |5116| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5116| 
        ANDB      AL,#0xf0              ; [CPU_] |5116| 
        MOVU      ACC,AL                ; [CPU_] |5116| 
        MOVL      XAR7,ACC              ; [CPU_] |5116| 
        MOV       AL,AR6                ; [CPU_] |5116| 
        ANDB      AL,#240               ; [CPU_] |5116| 
        MOV       PL,AL                 ; [CPU_] |5116| 
        MOVL      ACC,XAR7              ; [CPU_] |5116| 
        CMPL      ACC,P                 ; [CPU_] |5116| 
        B         $C$L321,NEQ           ; [CPU_] |5116| 
        ; branchcc occurs ; [] |5116| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5122,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5122| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5122| 
        MOVB      AL,#152               ; [CPU_] |5122| 
        MOV       T,*-SP[55]            ; [CPU_] |5122| 
        MPYU      ACC,T,AL              ; [CPU_] |5122| 
        ADDL      ACC,XAR7              ; [CPU_] |5122| 
        MOVL      XAR1,ACC              ; [CPU_] |5122| 
        MOVB      XAR0,#125             ; [CPU_] |5122| 
	.dwpsn	file "../Source/prod.c",line 5123,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5123| 
	.dwpsn	file "../Source/prod.c",line 5122,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5122| 
	.dwpsn	file "../Source/prod.c",line 5123,column 5,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |5123| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5123| 
	.dwpsn	file "../Source/prod.c",line 5124,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5124| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5124| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5124| 
        MOV       AL,AR6                ; [CPU_] |5124| 
        MOV       *-SP[59],#4           ; [CPU_] |5124| 
	.dwpsn	file "../Source/prod.c",line 5126,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5126| 
        B         $C$L205,EQ            ; [CPU_] |5126| 
        ; branchcc occurs ; [] |5126| 
	.dwpsn	file "../Source/prod.c",line 5129,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5129| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5129| 
        B         $C$L204,EQ            ; [CPU_] |5129| 
        ; branchcc occurs ; [] |5129| 
	.dwpsn	file "../Source/prod.c",line 5133,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5133| 
        CMPB      AL,#34                ; [CPU_] |5133| 
        B         $C$L196,GT            ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
        CMPB      AL,#34                ; [CPU_] |5133| 
        B         $C$L200,EQ            ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
        CMPB      AL,#16                ; [CPU_] |5133| 
        B         $C$L203,EQ            ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
        CMPB      AL,#17                ; [CPU_] |5133| 
        B         $C$L202,EQ            ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
        B         $C$L204,UNC           ; [CPU_] |5133| 
        ; branch occurs ; [] |5133| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5133| 
        B         $C$L198,EQ            ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
        CMPB      AL,#36                ; [CPU_] |5133| 
        B         $C$L204,NEQ           ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5174,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5174| 
        B         $C$L197,EQ            ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
        CMPB      AL,#35                ; [CPU_] |5174| 
        B         $C$L207,NEQ           ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
	.dwpsn	file "../Source/prod.c",line 5179,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5179| 
        MOV       AH,#15820             ; [CPU_] |5179| 
	.dwpsn	file "../Source/prod.c",line 5180,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5180| 
        ; branch occurs ; [] |5180| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5176,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5176| 
        MOV       AH,#15649             ; [CPU_] |5176| 
	.dwpsn	file "../Source/prod.c",line 5177,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5177| 
        ; branch occurs ; [] |5177| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5162,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5162| 
        B         $C$L199,EQ            ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
        CMPB      AL,#36                ; [CPU_] |5162| 
        B         $C$L207,NEQ           ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
	.dwpsn	file "../Source/prod.c",line 5167,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5167| 
        MOV       AH,#16672             ; [CPU_] |5167| 
	.dwpsn	file "../Source/prod.c",line 5168,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5168| 
        ; branch occurs ; [] |5168| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5164,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5164| 
        MOV       AH,#16073             ; [CPU_] |5164| 
	.dwpsn	file "../Source/prod.c",line 5165,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5165| 
        ; branch occurs ; [] |5165| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5150,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5150| 
        B         $C$L201,EQ            ; [CPU_] |5150| 
        ; branchcc occurs ; [] |5150| 
        CMPB      AL,#36                ; [CPU_] |5150| 
        B         $C$L207,NEQ           ; [CPU_] |5150| 
        ; branchcc occurs ; [] |5150| 
	.dwpsn	file "../Source/prod.c",line 5155,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5155| 
        MOV       AH,#16843             ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5156,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5156| 
        ; branch occurs ; [] |5156| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5152,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5152| 
        MOV       AH,#16418             ; [CPU_] |5152| 
	.dwpsn	file "../Source/prod.c",line 5153,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5153| 
        ; branch occurs ; [] |5153| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5143,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5143| 
        B         $C$L207,NEQ           ; [CPU_] |5143| 
        ; branchcc occurs ; [] |5143| 
	.dwpsn	file "../Source/prod.c",line 5144,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5144| 
        MOV       AH,#16397             ; [CPU_] |5144| 
        B         $C$L206,UNC           ; [CPU_] |5144| 
        ; branch occurs ; [] |5144| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5136,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5136| 
        B         $C$L207,NEQ           ; [CPU_] |5136| 
        ; branchcc occurs ; [] |5136| 
	.dwpsn	file "../Source/prod.c",line 5137,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5137| 
        MOV       AH,#16104             ; [CPU_] |5137| 
        B         $C$L206,UNC           ; [CPU_] |5137| 
        ; branch occurs ; [] |5137| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5131,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5131| 
	.dwpsn	file "../Source/prod.c",line 5132,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5132| 
        ; branch occurs ; [] |5132| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5127,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5127| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5127| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5127| 
        MOV       AL,#0                 ; [CPU_] |5127| 
        MOV       AH,#17096             ; [CPU_] |5127| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5127| 
        ; call occurs [#FS$$DIV] ; [] |5127| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5127| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5193,column 10,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |5193| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5194,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[55]          ; [CPU_] |5194| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5194| 
        CMPL      ACC,XAR6              ; [CPU_] |5194| 
        B         $C$L209,NEQ           ; [CPU_] |5194| 
        ; branchcc occurs ; [] |5194| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5195,column 7,is_stmt,isa 0
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_update_units")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5195| 
        ; call occurs [#_update_units] ; [] |5195| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5197,column 7,is_stmt,isa 0
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5197| 
        ; call occurs [#_ad7738_setcal] ; [] |5197| 
        MOVL      XAR0,#76              ; [CPU_] |5197| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5197| 
	.dwpsn	file "../Source/prod.c",line 5198,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |5198| 
        MOVL      XAR4,ACC              ; [CPU_] |5198| 
        MOVL      *-SP[62],ACC          ; [CPU_] |5198| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5198| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5198| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5198| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |5198| 
	.dwpsn	file "../Source/prod.c",line 5199,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5199| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5199| 
        ; call occurs [#_ad7738_resetvall] ; [] |5199| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5193,column 18,is_stmt,isa 0
        INC       *-SP[56]              ; [CPU_] |5193| 
        ADDB      XAR1,#10              ; [CPU_] |5193| 
        MOV       AL,*-SP[56]           ; [CPU_] |5193| 
        CMPB      AL,#4                 ; [CPU_] |5193| 
        B         $C$L208,LO            ; [CPU_] |5193| 
        ; branchcc occurs ; [] |5193| 
        B         $C$L305,UNC           ; [CPU_] |5193| 
        ; branch occurs ; [] |5193| 
$C$L210:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5080,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5080| 
        B         $C$L321,LO            ; [CPU_] |5080| 
        ; branchcc occurs ; [] |5080| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5080| 
        MOVL      XAR0,#64              ; [CPU_] |5080| 
        MOVL      ACC,XAR7              ; [CPU_] |5080| 
        ADDB      ACC,#2                ; [CPU_] |5080| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5080| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5080| 
        B         $C$L321,LT            ; [CPU_] |5080| 
        ; branchcc occurs ; [] |5080| 
        ADDB      XAR4,#2               ; [CPU_] |5080| 
        MOVL      XAR0,#64              ; [CPU_] |5080| 
        CMPB      AL,#20                ; [CPU_] |5080| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5080| 
        B         $C$L321,GEQ           ; [CPU_] |5080| 
        ; branchcc occurs ; [] |5080| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5080| 
        MOVB      AH,#4                 ; [CPU_] |5080| 
        ADD       AH,AR6                ; [CPU_] |5080| 
        CMP       AH,*-SP[57]           ; [CPU_] |5080| 
        B         $C$L321,HI            ; [CPU_] |5080| 
        ; branchcc occurs ; [] |5080| 
	.dwpsn	file "../Source/prod.c",line 5085,column 5,is_stmt,isa 0
        MOV       *-SP[55],AL           ; [CPU_] |5085| 
	.dwpsn	file "../Source/prod.c",line 5086,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5086| 
        MOVL      XAR0,#64              ; [CPU_] |5086| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |5086| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5086| 
        MOV       AL,*-SP[55]           ; [CPU_] |5086| 
        MOV       @_buff$1+2,AL         ; [CPU_] |5086| 
        MOV       AL,AR6                ; [CPU_] |5086| 
	.dwpsn	file "../Source/prod.c",line 5088,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5088| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |5088| 
        B         $C$L211,HIS           ; [CPU_] |5088| 
        ; branchcc occurs ; [] |5088| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5088| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 5090,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5090| 
        MOVB      XAR5,#0               ; [CPU_] |5090| 
	.dwpsn	file "../Source/prod.c",line 5090,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |5090| 
        ; branchcc occurs ; [] |5090| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[55]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 5091,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5091| 
	.dwpsn	file "../Source/prod.c",line 5090,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |5090| 
	.dwpsn	file "../Source/prod.c",line 5091,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5091| 
	.dwpsn	file "../Source/prod.c",line 5090,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5090| 
	.dwpsn	file "../Source/prod.c",line 5091,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5091| 
	.dwpsn	file "../Source/prod.c",line 5090,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |5090| 
        B         $C$L212,HI            ; [CPU_] |5090| 
        ; branchcc occurs ; [] |5090| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 5093,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5093| 
        MOVB      AL,#152               ; [CPU_] |5093| 
        MOV       T,*-SP[55]            ; [CPU_] |5093| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5093| 
        MPYU      P,T,AL                ; [CPU_] |5093| 
        MOVL      ACC,P                 ; [CPU_] |5093| 
        ADD       ACC,AR5               ; [CPU_] |5093| 
        ADDL      ACC,XAR6              ; [CPU_] |5093| 
        MOVL      XAR4,ACC              ; [CPU_] |5093| 
        MOVB      XAR0,#98              ; [CPU_] |5093| 
	.dwpsn	file "../Source/prod.c",line 5097,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5097| 
	.dwpsn	file "../Source/prod.c",line 5093,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5093| 
	.dwpsn	file "../Source/prod.c",line 5097,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |5097| 
        MOVL      XAR4,ACC              ; [CPU_] |5097| 
        MOVL      XAR1,ACC              ; [CPU_] |5097| 
        ADDB      XAR4,#98              ; [CPU_] |5097| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_strlen")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |5097| 
        ; call occurs [#_strlen] ; [] |5097| 
	.dwpsn	file "../Source/prod.c",line 5098,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5098| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5098| 
	.dwpsn	file "../Source/prod.c",line 5099,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5099| 
	.dwpsn	file "../Source/prod.c",line 5098,column 5,is_stmt,isa 0
        MOV       *-SP[59],#4           ; [CPU_] |5098| 
	.dwpsn	file "../Source/prod.c",line 5099,column 17,is_stmt,isa 0
        B         $C$L305,EQ            ; [CPU_] |5099| 
        ; branchcc occurs ; [] |5099| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5099,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5099| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5100,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5100| 
	.dwpsn	file "../Source/prod.c",line 5099,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5099| 
	.dwpsn	file "../Source/prod.c",line 5100,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |5100| 
        INC       *-SP[59]              ; [CPU_] |5100| 
	.dwpsn	file "../Source/prod.c",line 5099,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5099| 
        B         $C$L214,HI            ; [CPU_] |5099| 
        ; branchcc occurs ; [] |5099| 
        B         $C$L305,UNC           ; [CPU_] |5099| 
        ; branch occurs ; [] |5099| 
$C$L215:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5638,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5638| 
        B         $C$L321,LO            ; [CPU_] |5638| 
        ; branchcc occurs ; [] |5638| 
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5643| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5643| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5643| 
        MOV       *-SP[55],AL           ; [CPU_] |5643| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5644| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5644| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5646,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5646| 
        SUBB      XAR5,#24              ; [CPU_U] |5646| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5646| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5648,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5648| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5648| 
	.dwpsn	file "../Source/prod.c",line 5649,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5649| 
        MOV       *XAR1++,AL            ; [CPU_] |5649| 
	.dwpsn	file "../Source/prod.c",line 5650,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5650| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5650| 
        MOV       *XAR5++,AL            ; [CPU_] |5650| 
	.dwpsn	file "../Source/prod.c",line 5651,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5651| 
        MOV       *XAR1++,AL            ; [CPU_] |5651| 
	.dwpsn	file "../Source/prod.c",line 5647,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5647| 
        ; branchcc occurs ; [] |5647| 
        MOV       AL,*-SP[55]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5655,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5655| 
        B         $C$L321,HIS           ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
        MOVL      XAR0,#40              ; [CPU_] |5655| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5655| 
        MOVB      AL,#12                ; [CPU_] |5655| 
        MOV       T,*-SP[55]            ; [CPU_] |5655| 
        MPYU      ACC,T,AL              ; [CPU_] |5655| 
        ADDL      ACC,XAR6              ; [CPU_] |5655| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5655| 
        MOVL      XAR4,ACC              ; [CPU_] |5655| 
        MOVL      *-SP[62],ACC          ; [CPU_] |5655| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5655| 
        CMPB      AL,#7                 ; [CPU_] |5655| 
        B         $C$L321,NEQ           ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5655| 
        MOV       *-SP[47],#0           ; [CPU_] |5655| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5655| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5655| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5655| 
        ; call occurs [#FS$$CMP] ; [] |5655| 
        CMPB      AL,#0                 ; [CPU_] |5655| 
        B         $C$L217,GEQ           ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
        MOV       *-SP[47],#1           ; [CPU_] |5655| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L321,NEQ           ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
        MOV       AL,#0                 ; [CPU_] |5655| 
        MOV       AH,#16672             ; [CPU_] |5655| 
        MOV       *-SP[47],#0           ; [CPU_] |5655| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5655| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5655| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5655| 
        ; call occurs [#FS$$CMP] ; [] |5655| 
        CMPB      AL,#0                 ; [CPU_] |5655| 
        B         $C$L218,LEQ           ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
        MOV       *-SP[47],#1           ; [CPU_] |5655| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L321,NEQ           ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
	.dwpsn	file "../Source/prod.c",line 5662,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5662| 
        MOV       AH,#0                 ; [CPU_] |5662| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5662| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5662| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5662| 
        ; call occurs [#FS$$CMP] ; [] |5662| 
        CMPB      AL,#0                 ; [CPU_] |5662| 
        B         $C$L219,GEQ           ; [CPU_] |5662| 
        ; branchcc occurs ; [] |5662| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |5662| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5662| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5662| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5662| 
        B         $C$L220,UNC           ; [CPU_] |5662| 
        ; branch occurs ; [] |5662| 
$C$L219:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] |5662| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5662| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5662| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5662| 
$C$L220:    
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5662| 
        ; call occurs [#FS$$MPY] ; [] |5662| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |5662| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5662| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5662| 
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5662| 
        ; call occurs [#FS$$ADD] ; [] |5662| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5662| 
        ; call occurs [#FS$$TOLL] ; [] |5662| 
	.dwpsn	file "../Source/prod.c",line 5669,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5669| 
	.dwpsn	file "../Source/prod.c",line 5662,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5662| 
	.dwpsn	file "../Source/prod.c",line 5650,column 6,is_stmt,isa 0
        MOV       *-SP[59],#7           ; [CPU_] |5650| 
	.dwpsn	file "../Source/prod.c",line 5662,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5662| 
	.dwpsn	file "../Source/prod.c",line 5669,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5669| 
        CMP64     ACC:P                 ; [CPU_] |5669| 
        B         $C$L222,LEQ           ; [CPU_] |5669| 
        ; branchcc occurs ; [] |5669| 
	.dwpsn	file "../Source/prod.c",line 5671,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5671| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5671| 
        MOV       *-SP[2],#0            ; [CPU_] |5671| 
        MOV       *-SP[1],#0            ; [CPU_] |5671| 
        MOVL      P,*-SP[32]            ; [CPU_] |5671| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5671| 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$744, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5671| 
        ; call occurs [#LL$$CMP] ; [] |5671| 
        CMPB      AL,#0                 ; [CPU_] |5671| 
        B         $C$L221,GEQ           ; [CPU_] |5671| 
        ; branchcc occurs ; [] |5671| 
	.dwpsn	file "../Source/prod.c",line 5674,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5674| 
        MOV       *-SP[35],AL           ; [CPU_] |5674| 
        B         $C$L223,UNC           ; [CPU_] |5674| 
        ; branch occurs ; [] |5674| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5672,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5672| 
	.dwpsn	file "../Source/prod.c",line 5673,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5673| 
        ; branch occurs ; [] |5673| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5670,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5670| 
$C$L223:    
        MOV       AH,*-SP[55]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5677,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5677| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5677| 
        ; call occurs [#_mcbsp_xmit] ; [] |5677| 
	.dwpsn	file "../Source/prod.c",line 5678,column 5,is_stmt,isa 0
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_latch_dac")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5678| 
        ; call occurs [#_latch_dac] ; [] |5678| 
	.dwpsn	file "../Source/prod.c",line 5681,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5681| 
        ANDB      AL,#0xff              ; [CPU_] |5681| 
        MOV       *XAR1++,AL            ; [CPU_] |5681| 
	.dwpsn	file "../Source/prod.c",line 5682,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5682| 
        LSR       AL,8                  ; [CPU_] |5682| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5682| 
$C$L224:    
        ADD       *-SP[59],#2           ; [CPU_] |5682| 
	.dwpsn	file "../Source/prod.c",line 5685,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |5685| 
        ; branch occurs ; [] |5685| 
$C$L225:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5574,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5574| 
        B         $C$L321,LO            ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5579| 
$C$L226:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5579| 
$C$L227:    
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5579| 
        ; call occurs [#_ad7738_resetvall] ; [] |5579| 
$C$L228:    
	.dwpsn	file "../Source/prod.c",line 5582,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5582| 
        MOVL      XAR0,#64              ; [CPU_] |5582| 
        ADDB      ACC,#2                ; [CPU_] |5582| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5582| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5582| 
        ANDB      AL,#0x0f              ; [CPU_] |5582| 
	.dwpsn	file "../Source/prod.c",line 5584,column 5,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5584| 
        ; branch occurs ; [] |5584| 
$C$L229:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5560,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5560| 
        B         $C$L321,LO            ; [CPU_] |5560| 
        ; branchcc occurs ; [] |5560| 
	.dwpsn	file "../Source/prod.c",line 5565,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5565| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5565| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5565| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5565| 
	.dwpsn	file "../Source/prod.c",line 5570,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5570| 
        ; branch occurs ; [] |5570| 
$C$L230:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5624,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5624| 
        B         $C$L321,LO            ; [CPU_] |5624| 
        ; branchcc occurs ; [] |5624| 
	.dwpsn	file "../Source/prod.c",line 5629,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5629| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5629| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5629| 
        ; call occurs [#_shunt_switch] ; [] |5629| 
	.dwpsn	file "../Source/prod.c",line 5634,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5634| 
        ; branch occurs ; [] |5634| 
$C$L231:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5608,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5608| 
        B         $C$L321,LO            ; [CPU_] |5608| 
        ; branchcc occurs ; [] |5608| 
	.dwpsn	file "../Source/prod.c",line 5613,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5613| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5613| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5613| 
        ; call occurs [#_ad7738_resettare] ; [] |5613| 
	.dwpsn	file "../Source/prod.c",line 5614,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5614| 
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5614| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5614| 
	.dwpsn	file "../Source/prod.c",line 5615,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5615| 
	.dwpsn	file "../Source/prod.c",line 5620,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5620| 
        ; branch occurs ; [] |5620| 
$C$L232:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5588,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5588| 
        B         $C$L321,LO            ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
	.dwpsn	file "../Source/prod.c",line 5593,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5593| 
	.dwpsn	file "../Source/prod.c",line 5594,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5594| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5595,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5595| 
        B         $C$L234,EQ            ; [CPU_] |5595| 
        ; branchcc occurs ; [] |5595| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5596,column 7,is_stmt,isa 0
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5596| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5596| 
$C$L234:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5594,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5594| 
	.dwpsn	file "../Source/prod.c",line 5598,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5598| 
        MOV       *-SP[47],AL           ; [CPU_] |5598| 
	.dwpsn	file "../Source/prod.c",line 5594,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5594| 
        CMPB      AL,#4                 ; [CPU_] |5594| 
        B         $C$L233,LT            ; [CPU_] |5594| 
        ; branchcc occurs ; [] |5594| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5602,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5602| 
        ANDB      AL,#0x0f              ; [CPU_] |5602| 
$C$L235:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5602| 
        MOVL      XAR0,#64              ; [CPU_] |5602| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5602| 
	.dwpsn	file "../Source/prod.c",line 5604,column 5,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5604| 
        ; branch occurs ; [] |5604| 
$C$L236:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5545,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5545| 
        B         $C$L321,LO            ; [CPU_] |5545| 
        ; branchcc occurs ; [] |5545| 
	.dwpsn	file "../Source/prod.c",line 5550,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5550| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5550| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5550| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5550| 
	.dwpsn	file "../Source/prod.c",line 5556,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5556| 
        ; branch occurs ; [] |5556| 
$C$L237:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5522,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5522| 
        B         $C$L240,LO            ; [CPU_] |5522| 
        ; branchcc occurs ; [] |5522| 
	.dwpsn	file "../Source/prod.c",line 5534,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5534| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5534| 
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5534| 
        ; call occurs [#_ad7738_resettare] ; [] |5534| 
	.dwpsn	file "../Source/prod.c",line 5535,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5535| 
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5535| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5535| 
	.dwpsn	file "../Source/prod.c",line 5536,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5536| 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5536| 
        ; call occurs [#_ad7738_resetvall] ; [] |5536| 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |5539| 
        MOVL      ACC,XAR1              ; [CPU_] |5539| 
        ADDB      ACC,#2                ; [CPU_] |5539| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5539| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5539| 
        ANDB      AL,#0xff              ; [CPU_] |5539| 
$C$L238:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5539| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5539| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5537,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5537| 
	.dwpsn	file "../Source/prod.c",line 5541,column 5,is_stmt,isa 0
        B         $C$L733,UNC           ; [CPU_] |5541| 
        ; branch occurs ; [] |5541| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5524,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5524| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5524| 
        ; call occurs [#_ad7738_resettare] ; [] |5524| 
	.dwpsn	file "../Source/prod.c",line 5525,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5525| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5525| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5525| 
	.dwpsn	file "../Source/prod.c",line 5526,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5526| 
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5526| 
        ; call occurs [#_ad7738_resetvall] ; [] |5526| 
	.dwpsn	file "../Source/prod.c",line 5529,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5529| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5529| 
	.dwpsn	file "../Source/prod.c",line 5531,column 6,is_stmt,isa 0
        B         $C$L239,UNC           ; [CPU_] |5531| 
        ; branch occurs ; [] |5531| 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5697,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5697| 
        MOV       *-SP[47],#0           ; [CPU_] |5697| 
	.dwpsn	file "../Source/prod.c",line 5698,column 5,is_stmt,isa 0
        B         $C$L318,EQ            ; [CPU_] |5698| 
        ; branchcc occurs ; [] |5698| 
	.dwpsn	file "../Source/prod.c",line 5700,column 6,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5700| 
        ; call occurs [#_lcd_clear] ; [] |5700| 
	.dwpsn	file "../Source/prod.c",line 5701,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5701| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5701| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5701| 
        ; call occurs [#_lcd_puts] ; [] |5701| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5704,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5704| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_delay_us")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5704| 
        ; call occurs [#_delay_us] ; [] |5704| 
	.dwpsn	file "../Source/prod.c",line 5703,column 18,is_stmt,isa 0
        BANZ      $C$L242,AR3--         ; [CPU_] |5703| 
        ; branchcc occurs ; [] |5703| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5708,column 6,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_conf_write")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5708| 
        ; call occurs [#_conf_write] ; [] |5708| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5711,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5711| 
        B         $C$L243,NEQ           ; [CPU_] |5711| 
        ; branchcc occurs ; [] |5711| 
	.dwpsn	file "../Source/prod.c",line 5712,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5712| 
        MOVB      AL,#16                ; [CPU_] |5712| 
        SPM       #0                    ; [CPU_] 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5712| 
        ; call occurs [#_lcd_puts] ; [] |5712| 
	.dwpsn	file "../Source/prod.c",line 5713,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5713| 
	.dwpsn	file "../Source/prod.c",line 5714,column 6,is_stmt,isa 0
        B         $C$L244,UNC           ; [CPU_] |5714| 
        ; branch occurs ; [] |5714| 
$C$L243:    
	.dwpsn	file "../Source/prod.c",line 5715,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5715| 
        MOVB      AL,#16                ; [CPU_] |5715| 
        SPM       #0                    ; [CPU_] 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5715| 
        ; call occurs [#_lcd_puts] ; [] |5715| 
	.dwpsn	file "../Source/prod.c",line 5716,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5716| 
$C$L244:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L245:    
	.dwpsn	file "../Source/prod.c",line 5720,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5720| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_delay_us")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5720| 
        ; call occurs [#_delay_us] ; [] |5720| 
	.dwpsn	file "../Source/prod.c",line 5719,column 18,is_stmt,isa 0
        BANZ      $C$L245,AR3--         ; [CPU_] |5719| 
        ; branchcc occurs ; [] |5719| 
        B         $C$L317,UNC           ; [CPU_] |5719| 
        ; branch occurs ; [] |5719| 
$C$L246:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4467,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4467| 
        B         $C$L321,LO            ; [CPU_] |4467| 
        ; branchcc occurs ; [] |4467| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4467| 
        MOVL      XAR0,#64              ; [CPU_] |4467| 
        MOVL      ACC,XAR7              ; [CPU_] |4467| 
        ADDB      ACC,#2                ; [CPU_] |4467| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4467| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4467| 
        B         $C$L321,LT            ; [CPU_] |4467| 
        ; branchcc occurs ; [] |4467| 
        ADDB      XAR4,#2               ; [CPU_] |4467| 
        MOVL      XAR0,#64              ; [CPU_] |4467| 
        CMPB      AL,#4                 ; [CPU_] |4467| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4467| 
        B         $C$L321,GEQ           ; [CPU_] |4467| 
        ; branchcc occurs ; [] |4467| 
	.dwpsn	file "../Source/prod.c",line 4472,column 5,is_stmt,isa 0
        MOV       *-SP[56],AL           ; [CPU_] |4472| 
	.dwpsn	file "../Source/prod.c",line 4473,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4473| 
	.dwpsn	file "../Source/prod.c",line 4476,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4476| 
	.dwpsn	file "../Source/prod.c",line 4473,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4473| 
	.dwpsn	file "../Source/prod.c",line 4476,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4476| 
        ADDB      ACC,#2                ; [CPU_] |4476| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4476| 
        MOVL      XAR0,#40              ; [CPU_] |4476| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4476| 
        MOV       T,*-SP[56]            ; [CPU_] |4476| 
        MOVB      AL,#10                ; [CPU_] |4476| 
        MPYU      ACC,T,AL              ; [CPU_] |4476| 
        ADDL      ACC,XAR6              ; [CPU_] |4476| 
        ADDB      ACC,#46               ; [CPU_] |4476| 
        MOVL      XAR4,ACC              ; [CPU_] |4476| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4478,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4478| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4478| 
        ADDB      XAR7,#1               ; [CPU_] |4478| 
	.dwpsn	file "../Source/prod.c",line 4479,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4479| 
        ADD       *XAR4++,AL            ; [CPU_] |4479| 
	.dwpsn	file "../Source/prod.c",line 4477,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4477| 
        ; branchcc occurs ; [] |4477| 
	.dwpsn	file "../Source/prod.c",line 4482,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4482| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4482| 
        MOVB      AL,#10                ; [CPU_] |4482| 
        MPYU      ACC,T,AL              ; [CPU_] |4482| 
        ADDL      ACC,XAR6              ; [CPU_] |4482| 
        MOVL      XAR5,ACC              ; [CPU_] |4482| 
        ADDB      ACC,#48               ; [CPU_] |4482| 
        MOVL      XAR4,ACC              ; [CPU_] |4482| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4482| 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4484,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4484| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4484| 
        ADDB      XAR7,#1               ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4485,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4485| 
        ADD       *XAR4++,AL            ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4483,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4483| 
        ; branchcc occurs ; [] |4483| 
	.dwpsn	file "../Source/prod.c",line 4488,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4488| 
        ADDB      ACC,#50               ; [CPU_] |4488| 
        MOVL      XAR4,ACC              ; [CPU_] |4488| 
        MOVL      P,ACC                 ; [CPU_] |4488| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4490,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4490| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4490| 
        ADDB      XAR7,#1               ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4491,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4491| 
        ADD       *XAR4++,AL            ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4489,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4489| 
        ; branchcc occurs ; [] |4489| 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |4495| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4495| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4495| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4497,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4497| 
        ANDB      AL,#0xff              ; [CPU_] |4497| 
        MOV       *XAR4++,AL            ; [CPU_] |4497| 
	.dwpsn	file "../Source/prod.c",line 4498,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4498| 
        LSR       AL,8                  ; [CPU_] |4498| 
        MOV       *XAR4++,AL            ; [CPU_] |4498| 
	.dwpsn	file "../Source/prod.c",line 4496,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4496| 
        ; branchcc occurs ; [] |4496| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4501| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4503,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4503| 
        ANDB      AL,#0xff              ; [CPU_] |4503| 
        MOV       *XAR4++,AL            ; [CPU_] |4503| 
	.dwpsn	file "../Source/prod.c",line 4504,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4504| 
        LSR       AL,8                  ; [CPU_] |4504| 
        MOV       *XAR4++,AL            ; [CPU_] |4504| 
	.dwpsn	file "../Source/prod.c",line 4502,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4502| 
        ; branchcc occurs ; [] |4502| 
	.dwpsn	file "../Source/prod.c",line 4507,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4507| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L252:    
	.dwpsn	file "../Source/prod.c",line 4509,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4509| 
        ANDB      AL,#0xff              ; [CPU_] |4509| 
        MOV       *XAR4++,AL            ; [CPU_] |4509| 
	.dwpsn	file "../Source/prod.c",line 4510,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4510| 
        LSR       AL,8                  ; [CPU_] |4510| 
        MOV       *XAR4++,AL            ; [CPU_] |4510| 
	.dwpsn	file "../Source/prod.c",line 4508,column 17,is_stmt,isa 0
        BANZ      $C$L252,AR6--         ; [CPU_] |4508| 
        ; branchcc occurs ; [] |4508| 
	.dwpsn	file "../Source/prod.c",line 4498,column 6,is_stmt,isa 0
        MOV       *-SP[59],#15          ; [CPU_] |4498| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |4515| 
        ; branch occurs ; [] |4515| 
$C$L253:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4425| 
        B         $C$L321,LO            ; [CPU_] |4425| 
        ; branchcc occurs ; [] |4425| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4425| 
        MOVL      XAR0,#64              ; [CPU_] |4425| 
        MOVL      ACC,XAR5              ; [CPU_] |4425| 
        ADDB      ACC,#2                ; [CPU_] |4425| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4425| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4425| 
        B         $C$L321,LT            ; [CPU_] |4425| 
        ; branchcc occurs ; [] |4425| 
        ADDB      XAR4,#2               ; [CPU_] |4425| 
        MOVL      XAR0,#64              ; [CPU_] |4425| 
        CMPB      AL,#4                 ; [CPU_] |4425| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4425| 
        B         $C$L321,GEQ           ; [CPU_] |4425| 
        ; branchcc occurs ; [] |4425| 
	.dwpsn	file "../Source/prod.c",line 4430,column 5,is_stmt,isa 0
        MOV       *-SP[56],AL           ; [CPU_] |4430| 
	.dwpsn	file "../Source/prod.c",line 4431,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4431| 
	.dwpsn	file "../Source/prod.c",line 4433,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4433| 
        MOVL      XAR0,#64              ; [CPU_] |4433| 
	.dwpsn	file "../Source/prod.c",line 4431,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4431| 
	.dwpsn	file "../Source/prod.c",line 4433,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4433| 
        MOVL      XAR0,#40              ; [CPU_] |4433| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4433| 
        MOVB      AL,#10                ; [CPU_] |4433| 
        MOV       T,*-SP[56]            ; [CPU_] |4433| 
        MPYU      ACC,T,AL              ; [CPU_] |4433| 
        ADDL      ACC,XAR6              ; [CPU_] |4433| 
        ADDB      ACC,#46               ; [CPU_] |4433| 
        MOVL      XAR5,ACC              ; [CPU_] |4433| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4435,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4435| 
        ANDB      AL,#0xff              ; [CPU_] |4435| 
        MOV       *XAR4++,AL            ; [CPU_] |4435| 
	.dwpsn	file "../Source/prod.c",line 4436,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4436| 
        LSR       AL,8                  ; [CPU_] |4436| 
        MOV       *XAR4++,AL            ; [CPU_] |4436| 
	.dwpsn	file "../Source/prod.c",line 4434,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR0--         ; [CPU_] |4434| 
        ; branchcc occurs ; [] |4434| 
	.dwpsn	file "../Source/prod.c",line 4439,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4439| 
        MPYU      ACC,T,AL              ; [CPU_] |4439| 
        ADDL      ACC,XAR6              ; [CPU_] |4439| 
        MOVL      XAR5,ACC              ; [CPU_] |4439| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4439| 
        ADDB      XAR5,#48              ; [CPU_] |4439| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4441,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4441| 
        ANDB      AL,#0xff              ; [CPU_] |4441| 
        MOV       *XAR4++,AL            ; [CPU_] |4441| 
	.dwpsn	file "../Source/prod.c",line 4442,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4442| 
        LSR       AL,8                  ; [CPU_] |4442| 
        MOV       *XAR4++,AL            ; [CPU_] |4442| 
	.dwpsn	file "../Source/prod.c",line 4440,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR6--         ; [CPU_] |4440| 
        ; branchcc occurs ; [] |4440| 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4436,column 6,is_stmt,isa 0
        MOV       *-SP[59],#15          ; [CPU_] |4436| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4445| 
$C$L256:    
	.dwpsn	file "../Source/prod.c",line 4447,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4447| 
        ANDB      AL,#0xff              ; [CPU_] |4447| 
        MOV       *XAR4++,AL            ; [CPU_] |4447| 
	.dwpsn	file "../Source/prod.c",line 4448,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4448| 
        LSR       AL,8                  ; [CPU_] |4448| 
        MOV       *XAR4++,AL            ; [CPU_] |4448| 
	.dwpsn	file "../Source/prod.c",line 4446,column 17,is_stmt,isa 0
        BANZ      $C$L256,AR0--         ; [CPU_] |4446| 
        ; branchcc occurs ; [] |4446| 
        B         $C$L734,UNC           ; [CPU_] |4446| 
        ; branch occurs ; [] |4446| 
$C$L257:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4067,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4067| 
        B         $C$L321,LO            ; [CPU_] |4067| 
        ; branchcc occurs ; [] |4067| 
        MOVL      ACC,XAR4              ; [CPU_] |4067| 
        MOVL      XAR0,#64              ; [CPU_] |4067| 
        ADDB      ACC,#2                ; [CPU_] |4067| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4067| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4067| 
        B         $C$L321,LT            ; [CPU_] |4067| 
        ; branchcc occurs ; [] |4067| 
        MOVL      XAR5,XAR4             ; [CPU_] |4067| 
        MOVL      XAR0,#64              ; [CPU_] |4067| 
        CMPB      AL,#20                ; [CPU_] |4067| 
        ADDB      XAR5,#2               ; [CPU_] |4067| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4067| 
        B         $C$L321,GEQ           ; [CPU_] |4067| 
        ; branchcc occurs ; [] |4067| 
	.dwpsn	file "../Source/prod.c",line 4071,column 5,is_stmt,isa 0
        MOV       *-SP[55],AL           ; [CPU_] |4071| 
	.dwpsn	file "../Source/prod.c",line 4072,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |4072| 
	.dwpsn	file "../Source/prod.c",line 4075,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4075| 
        MOVL      XAR0,#64              ; [CPU_] |4075| 
	.dwpsn	file "../Source/prod.c",line 4072,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4075,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4075| 
        MOVL      XAR0,#40              ; [CPU_] |4075| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4075| 
        MOVB      AL,#152               ; [CPU_] |4075| 
        MOV       T,*-SP[55]            ; [CPU_] |4075| 
        MPYU      ACC,T,AL              ; [CPU_] |4075| 
        ADDL      ACC,XAR6              ; [CPU_] |4075| 
        ADDB      ACC,#82               ; [CPU_] |4075| 
        MOVL      XAR4,ACC              ; [CPU_] |4075| 
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_strlen")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4075| 
        ; call occurs [#_strlen] ; [] |4075| 
        MOVZ      AR6,AL                ; [CPU_] |4075| 
	.dwpsn	file "../Source/prod.c",line 4076,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |4076| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4077| 
	.dwpsn	file "../Source/prod.c",line 4076,column 5,is_stmt,isa 0
        MOV       *-SP[59],#4           ; [CPU_] |4076| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        B         $C$L259,EQ            ; [CPU_] |4077| 
        ; branchcc occurs ; [] |4077| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[55]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4077,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4077| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 4078,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4078| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4077| 
	.dwpsn	file "../Source/prod.c",line 4078,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4078| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4077| 
	.dwpsn	file "../Source/prod.c",line 4078,column 6,is_stmt,isa 0
        INC       *-SP[59]              ; [CPU_] |4078| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4077| 
        B         $C$L258,HI            ; [CPU_] |4077| 
        ; branchcc occurs ; [] |4077| 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 4082,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4082| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4082| 
        MOVB      AL,#152               ; [CPU_] |4082| 
        MOV       T,*-SP[55]            ; [CPU_] |4082| 
        MPYU      ACC,T,AL              ; [CPU_] |4082| 
        ADDL      ACC,XAR6              ; [CPU_] |4082| 
        MOVL      XAR4,ACC              ; [CPU_] |4082| 
        MOVL      XAR1,ACC              ; [CPU_] |4082| 
        ADDB      XAR4,#98              ; [CPU_] |4082| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_strlen")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4082| 
        ; call occurs [#_strlen] ; [] |4082| 
        MOVL      XAR0,#84              ; [CPU_] |4082| 
	.dwpsn	file "../Source/prod.c",line 4083,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[59]          ; [CPU_] |4083| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4082,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |4082| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4082| 
	.dwpsn	file "../Source/prod.c",line 4083,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |4083| 
        MOVL      XAR4,ACC              ; [CPU_] |4083| 
        MOV       AL,AR7                ; [CPU_] |4083| 
        ADDB      AL,#1                 ; [CPU_] |4083| 
        MOV       *XAR4++,AR6           ; [CPU_] |4083| 
        MOV       *-SP[59],AL           ; [CPU_] |4083| 
        MOV       AL,AR6                ; [CPU_] |4083| 
	.dwpsn	file "../Source/prod.c",line 4084,column 17,is_stmt,isa 0
        B         $C$L261,EQ            ; [CPU_] |4084| 
        ; branchcc occurs ; [] |4084| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4084,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4084| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 4085,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4085| 
	.dwpsn	file "../Source/prod.c",line 4084,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4085,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4085| 
	.dwpsn	file "../Source/prod.c",line 4084,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4085,column 6,is_stmt,isa 0
        INC       *-SP[59]              ; [CPU_] |4085| 
	.dwpsn	file "../Source/prod.c",line 4084,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4084| 
        B         $C$L260,HI            ; [CPU_] |4084| 
        ; branchcc occurs ; [] |4084| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 4089,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4089| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |4089| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4091,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4091| 
        ANDB      AL,#0xff              ; [CPU_] |4091| 
        MOV       *XAR4++,AL            ; [CPU_] |4091| 
	.dwpsn	file "../Source/prod.c",line 4092,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4092| 
        LSR       AL,8                  ; [CPU_] |4092| 
        MOV       *XAR4++,AL            ; [CPU_] |4092| 
	.dwpsn	file "../Source/prod.c",line 4090,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4090| 
        ; branchcc occurs ; [] |4090| 
	.dwpsn	file "../Source/prod.c",line 4097,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4097| 
	.dwpsn	file "../Source/prod.c",line 4100,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4100| 
	.dwpsn	file "../Source/prod.c",line 4097,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4097| 
        MOV       *XAR4++,AL            ; [CPU_] |4097| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4100,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4100| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4102,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4102| 
        ANDB      AL,#0xff              ; [CPU_] |4102| 
        MOV       *XAR4++,AL            ; [CPU_] |4102| 
	.dwpsn	file "../Source/prod.c",line 4103,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4103| 
        LSR       AL,8                  ; [CPU_] |4103| 
        MOV       *XAR4++,AL            ; [CPU_] |4103| 
	.dwpsn	file "../Source/prod.c",line 4101,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4101| 
        ; branchcc occurs ; [] |4101| 
	.dwpsn	file "../Source/prod.c",line 4108,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4108| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4108| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4110,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4110| 
        ANDB      AL,#0xff              ; [CPU_] |4110| 
        MOV       *XAR4++,AL            ; [CPU_] |4110| 
	.dwpsn	file "../Source/prod.c",line 4111,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4111| 
        LSR       AL,8                  ; [CPU_] |4111| 
        MOV       *XAR4++,AL            ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4109,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4109| 
        ; branchcc occurs ; [] |4109| 
	.dwpsn	file "../Source/prod.c",line 4116,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4116| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4116| 
	.dwpsn	file "../Source/prod.c",line 4122,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4116,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4116| 
	.dwpsn	file "../Source/prod.c",line 4119,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4116,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4116| 
	.dwpsn	file "../Source/prod.c",line 4119,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4122,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4119,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4119| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4119| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4124,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4124| 
        ANDB      AL,#0xff              ; [CPU_] |4124| 
        MOV       *XAR4++,AL            ; [CPU_] |4124| 
	.dwpsn	file "../Source/prod.c",line 4125,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4125| 
        LSR       AL,8                  ; [CPU_] |4125| 
        MOV       *XAR4++,AL            ; [CPU_] |4125| 
	.dwpsn	file "../Source/prod.c",line 4123,column 17,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4123| 
        ; branchcc occurs ; [] |4123| 
	.dwpsn	file "../Source/prod.c",line 4092,column 6,is_stmt,isa 0
        ADD       *-SP[59],#23          ; [CPU_] |4092| 
	.dwpsn	file "../Source/prod.c",line 4130,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4130| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4130| 
        CMPB      AL,#2                 ; [CPU_] |4130| 
        B         $C$L268,EQ            ; [CPU_] |4130| 
        ; branchcc occurs ; [] |4130| 
	.dwpsn	file "../Source/prod.c",line 4168,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4168| 
        ADDB      ACC,#178              ; [CPU_] |4168| 
        MOVL      XAR5,ACC              ; [CPU_] |4168| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4166,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4166| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4170,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4170| 
        ANDB      AL,#0xff              ; [CPU_] |4170| 
        MOV       *XAR4++,AL            ; [CPU_] |4170| 
	.dwpsn	file "../Source/prod.c",line 4171,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4171| 
        LSR       AL,8                  ; [CPU_] |4171| 
        MOV       *XAR4++,AL            ; [CPU_] |4171| 
	.dwpsn	file "../Source/prod.c",line 4169,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4169| 
        ; branchcc occurs ; [] |4169| 
	.dwpsn	file "../Source/prod.c",line 4175,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4175| 
        ADDB      ACC,#200              ; [CPU_] |4175| 
        MOVL      XAR5,ACC              ; [CPU_] |4175| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4166,column 6,is_stmt,isa 0
        ADD       *-SP[59],#9           ; [CPU_] |4166| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4177,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4177| 
        ANDB      AL,#0xff              ; [CPU_] |4177| 
        MOV       *XAR4++,AL            ; [CPU_] |4177| 
	.dwpsn	file "../Source/prod.c",line 4178,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4178| 
        LSR       AL,8                  ; [CPU_] |4178| 
        MOV       *XAR4++,AL            ; [CPU_] |4178| 
	.dwpsn	file "../Source/prod.c",line 4176,column 18,is_stmt,isa 0
        BANZ      $C$L267,AR0--         ; [CPU_] |4176| 
        ; branchcc occurs ; [] |4176| 
        B         $C$L277,UNC           ; [CPU_] |4176| 
        ; branch occurs ; [] |4176| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4131| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4132,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4132| 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4131| 
        INC       *-SP[59]              ; [CPU_] |4131| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4132,column 11,is_stmt,isa 0
        B         $C$L272,UNC           ; [CPU_] |4132| 
        ; branch occurs ; [] |4132| 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4134,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4134| 
        MOVL      XAR0,#40              ; [CPU_] |4134| 
        MOV       T,*-SP[55]            ; [CPU_] |4134| 
        MOVL      XAR6,ACC              ; [CPU_] |4134| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4134| 
        MOVB      AL,#76                ; [CPU_] |4134| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4134| 
        ADDL      ACC,XAR6              ; [CPU_] |4134| 
        LSL       ACC,1                 ; [CPU_] |4134| 
        ADDL      ACC,XAR7              ; [CPU_] |4134| 
        ADDB      ACC,#130              ; [CPU_] |4134| 
        MOVL      XAR7,ACC              ; [CPU_] |4134| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4136,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4136| 
        ANDB      AL,#0xff              ; [CPU_] |4136| 
        MOV       *XAR4++,AL            ; [CPU_] |4136| 
	.dwpsn	file "../Source/prod.c",line 4137,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4137| 
        LSR       AL,8                  ; [CPU_] |4137| 
        MOV       *XAR4++,AL            ; [CPU_] |4137| 
	.dwpsn	file "../Source/prod.c",line 4135,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR6--         ; [CPU_] |4135| 
        ; branchcc occurs ; [] |4135| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4143,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4143| 
        ANDB      AL,#0xff              ; [CPU_] |4143| 
        MOV       *XAR4++,AL            ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4144,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4144| 
        LSR       AL,8                  ; [CPU_] |4144| 
        MOV       *XAR4++,AL            ; [CPU_] |4144| 
	.dwpsn	file "../Source/prod.c",line 4142,column 19,is_stmt,isa 0
        BANZ      $C$L271,AR0--         ; [CPU_] |4142| 
        ; branchcc occurs ; [] |4142| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4137,column 8,is_stmt,isa 0
        ADD       *-SP[59],#8           ; [CPU_] |4137| 
	.dwpsn	file "../Source/prod.c",line 4132,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4132| 
        MOV       PL,AL                 ; [CPU_] |4132| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4132,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4132| 
        MOV       AL,PL                 ; [CPU_] |4132| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4132| 
        B         $C$L269,LT            ; [CPU_] |4132| 
        ; branchcc occurs ; [] |4132| 
	.dwpsn	file "../Source/prod.c",line 4149,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4149| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L276,UNC           ; [CPU_] |4149| 
        ; branch occurs ; [] |4149| 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4151,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4151| 
        MOVL      XAR0,#40              ; [CPU_] |4151| 
        MOV       T,*-SP[55]            ; [CPU_] |4151| 
        MOVL      P,ACC                 ; [CPU_] |4151| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4151| 
        MOVB      AL,#76                ; [CPU_] |4151| 
        MPYU      ACC,T,AL              ; [CPU_] |4151| 
        ADDL      ACC,P                 ; [CPU_] |4151| 
        LSL       ACC,1                 ; [CPU_] |4151| 
        ADDL      ACC,XAR6              ; [CPU_] |4151| 
        ADDB      ACC,#178              ; [CPU_] |4151| 
        MOVL      XAR7,ACC              ; [CPU_] |4151| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4153,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4153| 
        ANDB      AL,#0xff              ; [CPU_] |4153| 
        MOV       *XAR4++,AL            ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4154,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4154| 
        LSR       AL,8                  ; [CPU_] |4154| 
        MOV       *XAR4++,AL            ; [CPU_] |4154| 
	.dwpsn	file "../Source/prod.c",line 4152,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR6--         ; [CPU_] |4152| 
        ; branchcc occurs ; [] |4152| 
	.dwpsn	file "../Source/prod.c",line 4158,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4158| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4160,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4160| 
        ANDB      AL,#0xff              ; [CPU_] |4160| 
        MOV       *XAR4++,AL            ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4161,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4161| 
        LSR       AL,8                  ; [CPU_] |4161| 
        MOV       *XAR4++,AL            ; [CPU_] |4161| 
	.dwpsn	file "../Source/prod.c",line 4159,column 19,is_stmt,isa 0
        BANZ      $C$L275,AR0--         ; [CPU_] |4159| 
        ; branchcc occurs ; [] |4159| 
	.dwpsn	file "../Source/prod.c",line 4149,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4149| 
	.dwpsn	file "../Source/prod.c",line 4154,column 8,is_stmt,isa 0
        ADD       *-SP[59],#8           ; [CPU_] |4154| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4165,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4165| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4165| 
        ADDB      AL,#-1                ; [CPU_] |4165| 
        CMP       AL,AR5                ; [CPU_] |4165| 
        B         $C$L273,GT            ; [CPU_] |4165| 
        ; branchcc occurs ; [] |4165| 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4184,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4184| 
        ADDB      ACC,#222              ; [CPU_] |4184| 
        MOVL      XAR5,ACC              ; [CPU_] |4184| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4186,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4186| 
        ANDB      AL,#0xff              ; [CPU_] |4186| 
        MOV       *XAR4++,AL            ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4187,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4187| 
        LSR       AL,8                  ; [CPU_] |4187| 
        MOV       *XAR4++,AL            ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4185,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4185| 
        ; branchcc occurs ; [] |4185| 
	.dwpsn	file "../Source/prod.c",line 4192,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4192| 
        ADDB      ACC,#224              ; [CPU_] |4192| 
        MOVL      XAR5,ACC              ; [CPU_] |4192| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4194,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4194| 
        ANDB      AL,#0xff              ; [CPU_] |4194| 
        MOV       *XAR4++,AL            ; [CPU_] |4194| 
	.dwpsn	file "../Source/prod.c",line 4195,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4195| 
        LSR       AL,8                  ; [CPU_] |4195| 
        MOV       *XAR4++,AL            ; [CPU_] |4195| 
	.dwpsn	file "../Source/prod.c",line 4193,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4193| 
        ; branchcc occurs ; [] |4193| 
	.dwpsn	file "../Source/prod.c",line 4200,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4200| 
        ADDB      ACC,#228              ; [CPU_] |4200| 
        MOVL      XAR5,ACC              ; [CPU_] |4200| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4202,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4202| 
        ANDB      AL,#0xff              ; [CPU_] |4202| 
        MOV       *XAR4++,AL            ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4203,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4203| 
        LSR       AL,8                  ; [CPU_] |4203| 
        MOV       *XAR4++,AL            ; [CPU_] |4203| 
	.dwpsn	file "../Source/prod.c",line 4201,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4201| 
        ; branchcc occurs ; [] |4201| 
	.dwpsn	file "../Source/prod.c",line 4208,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4208| 
        ADDB      ACC,#230              ; [CPU_] |4208| 
        MOVL      XAR5,ACC              ; [CPU_] |4208| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L281:    
	.dwpsn	file "../Source/prod.c",line 4210,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4210| 
        ANDB      AL,#0xff              ; [CPU_] |4210| 
        MOV       *XAR4++,AL            ; [CPU_] |4210| 
	.dwpsn	file "../Source/prod.c",line 4211,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4211| 
        LSR       AL,8                  ; [CPU_] |4211| 
        MOV       *XAR4++,AL            ; [CPU_] |4211| 
	.dwpsn	file "../Source/prod.c",line 4209,column 17,is_stmt,isa 0
        BANZ      $C$L281,AR0--         ; [CPU_] |4209| 
        ; branchcc occurs ; [] |4209| 
	.dwpsn	file "../Source/prod.c",line 4216,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4216| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4216| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4187,column 6,is_stmt,isa 0
        ADD       *-SP[59],#17          ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4219,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |4219| 
        ; branch occurs ; [] |4219| 
$C$L282:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4009,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4009| 
        B         $C$L321,LO            ; [CPU_] |4009| 
        ; branchcc occurs ; [] |4009| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4009| 
        MOVL      XAR0,#64              ; [CPU_] |4009| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4009| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4009| 
        B         $C$L321,LT            ; [CPU_] |4009| 
        ; branchcc occurs ; [] |4009| 
        CMPB      AL,#4                 ; [CPU_] |4009| 
        B         $C$L321,GEQ           ; [CPU_] |4009| 
        ; branchcc occurs ; [] |4009| 
	.dwpsn	file "../Source/prod.c",line 4013,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |4013| 
        MOV       *+XAR5[2],AL          ; [CPU_] |4013| 
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |4015| 
        MOVL      XAR0,#40              ; [CPU_] |4015| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4015| 
        MPYB      ACC,T,#10             ; [CPU_] |4015| 
        ADDL      ACC,XAR6              ; [CPU_] |4015| 
        MOVL      XAR4,ACC              ; [CPU_] |4015| 
        MOVL      XAR7,ACC              ; [CPU_] |4015| 
        MOVB      XAR0,#42              ; [CPU_] |4015| 
        MOVL      P,ACC                 ; [CPU_] |4015| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4022,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |4022| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |4022| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |4015| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4019,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |4019| 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 4025,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |4025| 
        ANDB      AL,#0xff              ; [CPU_] |4025| 
        MOV       *XAR4++,AL            ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4026,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |4026| 
        LSR       AL,8                  ; [CPU_] |4026| 
        MOV       *XAR4++,AL            ; [CPU_] |4026| 
	.dwpsn	file "../Source/prod.c",line 4023,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |4023| 
        ; branchcc occurs ; [] |4023| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 4033,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4033| 
        ANDB      AL,#0xff              ; [CPU_] |4033| 
        MOV       *XAR4++,AL            ; [CPU_] |4033| 
	.dwpsn	file "../Source/prod.c",line 4034,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4034| 
        LSR       AL,8                  ; [CPU_] |4034| 
        MOV       *XAR4++,AL            ; [CPU_] |4034| 
	.dwpsn	file "../Source/prod.c",line 4031,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |4031| 
        ; branchcc occurs ; [] |4031| 
	.dwpsn	file "../Source/prod.c",line 4038,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4038| 
        ADDB      XAR5,#46              ; [CPU_] |4038| 
        MOVL      XAR7,XAR5             ; [CPU_] |4038| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 4041,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4041| 
        ANDB      AL,#0xff              ; [CPU_] |4041| 
        MOV       *XAR4++,AL            ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4042,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4042| 
        LSR       AL,8                  ; [CPU_] |4042| 
        MOV       *XAR4++,AL            ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4039,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |4039| 
        ; branchcc occurs ; [] |4039| 
	.dwpsn	file "../Source/prod.c",line 4046,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4046| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 4049,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4049| 
        ANDB      AL,#0xff              ; [CPU_] |4049| 
        MOV       *XAR4++,AL            ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4050| 
        LSR       AL,8                  ; [CPU_] |4050| 
        MOV       *XAR4++,AL            ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4047,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |4047| 
        ; branchcc occurs ; [] |4047| 
	.dwpsn	file "../Source/prod.c",line 4019,column 6,is_stmt,isa 0
        MOV       *-SP[59],#28          ; [CPU_] |4019| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L287:    
	.dwpsn	file "../Source/prod.c",line 4057,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4057| 
        ANDB      AL,#0xff              ; [CPU_] |4057| 
        MOV       *XAR4++,AL            ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4058,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4058| 
        LSR       AL,8                  ; [CPU_] |4058| 
        MOV       *XAR4++,AL            ; [CPU_] |4058| 
	.dwpsn	file "../Source/prod.c",line 4055,column 17,is_stmt,isa 0
        BANZ      $C$L287,AR6--         ; [CPU_] |4055| 
        ; branchcc occurs ; [] |4055| 
        B         $C$L734,UNC           ; [CPU_] |4055| 
        ; branch occurs ; [] |4055| 
$C$L288:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3963,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3963| 
        B         $C$L321,LO            ; [CPU_] |3963| 
        ; branchcc occurs ; [] |3963| 
	.dwpsn	file "../Source/prod.c",line 3967,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3967| 
        B         $C$L289,EQ            ; [CPU_] |3967| 
        ; branchcc occurs ; [] |3967| 
        CMPB      AL,#1                 ; [CPU_] |3967| 
        B         $C$L289,EQ            ; [CPU_] |3967| 
        ; branchcc occurs ; [] |3967| 
        CMPB      AL,#2                 ; [CPU_] |3967| 
        B         $C$L289,EQ            ; [CPU_] |3967| 
        ; branchcc occurs ; [] |3967| 
        ADDB      XAR4,#2               ; [CPU_] |3967| 
        MOVL      XAR0,#64              ; [CPU_] |3967| 
        CMPB      AL,#3                 ; [CPU_] |3967| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3967| 
        B         $C$L321,NEQ           ; [CPU_] |3967| 
        ; branchcc occurs ; [] |3967| 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3973| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] |3973| 
        MOVL      XAR4,XAR5             ; [CPU_] |3973| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3973| 
        ADDB      XAR5,#2               ; [CPU_] |3973| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3973| 
        ADDB      XAR4,#6               ; [CPU_] |3973| 
        B         $C$L294,NEQ           ; [CPU_] |3973| 
        ; branchcc occurs ; [] |3973| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3974,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3974| 
        B         $C$L321,LO            ; [CPU_] |3974| 
        ; branchcc occurs ; [] |3974| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3979,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3979| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3981,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3981| 
        ADDL      ACC,XT                ; [CPU_] |3981| 
	.dwpsn	file "../Source/prod.c",line 3982,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3982| 
	.dwpsn	file "../Source/prod.c",line 3980,column 18,is_stmt,isa 0
        BANZ      $C$L290,AR6--         ; [CPU_] |3980| 
        ; branchcc occurs ; [] |3980| 
        MOVL      XAR0,#72              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3985,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3985| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3986,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3986| 
        B         $C$L292,EQ            ; [CPU_] |3986| 
        ; branchcc occurs ; [] |3986| 
	.dwpsn	file "../Source/prod.c",line 3985,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3985| 
        ADDB      XAR4,#1               ; [CPU_] |3985| 
        BANZ      $C$L291,AR0--         ; [CPU_] |3985| 
        ; branchcc occurs ; [] |3985| 
        B         $C$L293,UNC           ; [CPU_] |3985| 
        ; branch occurs ; [] |3985| 
$C$L292:    
	.dwpsn	file "../Source/prod.c",line 3987,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3987| 
        MOVB      XAR0,#35              ; [CPU_] |3987| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3987| 
$C$L293:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3991,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3991| 
        B         $C$L321,EQ            ; [CPU_] |3991| 
        ; branchcc occurs ; [] |3991| 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3997,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3997| 
        MOVL      XAR0,#64              ; [CPU_] |3997| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3997| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3997| 
        ADDB      ACC,#2                ; [CPU_] |3997| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3997| 
        MOVB      XAR0,#34              ; [CPU_] |3997| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3997| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3997| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] |3997| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3997| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 4000,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4000| 
        MOV       *XAR4++,AL            ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 3999,column 12,is_stmt,isa 0
        INC       *-SP[59]              ; [CPU_] |3999| 
        MOV       AL,*-SP[57]           ; [CPU_] |3999| 
	.dwpsn	file "../Source/prod.c",line 4000,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 3999,column 12,is_stmt,isa 0
        CMP       AL,*-SP[59]           ; [CPU_] |3999| 
        B         $C$L295,HI            ; [CPU_] |3999| 
        ; branchcc occurs ; [] |3999| 
        B         $C$L305,UNC           ; [CPU_] |3999| 
        ; branch occurs ; [] |3999| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3947,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3947| 
        MOVB      XAR0,#34              ; [CPU_] |3947| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3947| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3947| 
	.dwpsn	file "../Source/prod.c",line 3949,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3947,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3947| 
        MOV       *-SP[59],#3           ; [CPU_] |3947| 
	.dwpsn	file "../Source/prod.c",line 3949,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3949| 
        CMPB      AL,#1                 ; [CPU_] |3949| 
        B         $C$L297,EQ            ; [CPU_] |3949| 
        ; branchcc occurs ; [] |3949| 
        MOVB      XAR1,#34              ; [CPU_] |3949| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3949| 
        B         $C$L734,NEQ           ; [CPU_] |3949| 
        ; branchcc occurs ; [] |3949| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3951,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3951| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3951| 
        MOVL      XAR0,#72              ; [CPU_] |3951| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3951| 
        MOVL      XAR0,#84              ; [CPU_] |3951| 
        ADDL      ACC,XAR6              ; [CPU_] |3951| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3951| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3951| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3954,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3954| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[59],AL           ; [CPU_] |3954| 
$C$L298:    
	.dwpsn	file "../Source/prod.c",line 3953,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3953| 
        ANDB      AL,#0xff              ; [CPU_] |3953| 
        MOV       *XAR4++,AL            ; [CPU_] |3953| 
	.dwpsn	file "../Source/prod.c",line 3954,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3954| 
        LSR       AL,8                  ; [CPU_] |3954| 
        MOV       *XAR4++,AL            ; [CPU_] |3954| 
	.dwpsn	file "../Source/prod.c",line 3952,column 18,is_stmt,isa 0
        BANZ      $C$L298,AR6--         ; [CPU_] |3952| 
        ; branchcc occurs ; [] |3952| 
        B         $C$L734,UNC           ; [CPU_] |3952| 
        ; branch occurs ; [] |3952| 
$C$L299:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3926,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3926| 
        B         $C$L321,LO            ; [CPU_] |3926| 
        ; branchcc occurs ; [] |3926| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3926| 
        MOVL      XAR0,#64              ; [CPU_] |3926| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3926| 
        ADDB      AL,#3                 ; [CPU_] |3926| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3926| 
        CMP       AL,*-SP[57]           ; [CPU_] |3926| 
        B         $C$L321,HI            ; [CPU_] |3926| 
        ; branchcc occurs ; [] |3926| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3931,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3931| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L301,UNC           ; [CPU_] |3931| 
        ; branch occurs ; [] |3931| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3932,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3932| 
        ADD       PL,AL                 ; [CPU_] |3932| 
        MOVL      ACC,XAR7              ; [CPU_] |3932| 
        ADD       ACC,PL                ; [CPU_] |3932| 
        MOVL      XAR7,ACC              ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3931,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3932,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3932| 
        MOV       *XAR4++,AL            ; [CPU_] |3932| 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3931,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3931| 
        MOVL      XAR0,#64              ; [CPU_] |3931| 
        MOVL      ACC,XAR7              ; [CPU_] |3931| 
        ADDB      ACC,#2                ; [CPU_] |3931| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3931| 
        MOV       AL,AR6                ; [CPU_] |3931| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3931| 
        B         $C$L300,LT            ; [CPU_] |3931| 
        ; branchcc occurs ; [] |3931| 
	.dwpsn	file "../Source/prod.c",line 3934,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3934| 
        MOVL      XAR0,#74              ; [CPU_] |3934| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3937,column 5,is_stmt,isa 0
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_strlen")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3937| 
        ; call occurs [#_strlen] ; [] |3937| 
	.dwpsn	file "../Source/prod.c",line 3938,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3938| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3938,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3938| 
        MOV       *-SP[59],#3           ; [CPU_] |3938| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        B         $C$L305,EQ            ; [CPU_] |3939| 
        ; branchcc occurs ; [] |3939| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3939,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3939| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L302:    
	.dwpsn	file "../Source/prod.c",line 3940,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3940,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3940| 
        INC       *-SP[59]              ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3939,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3939| 
        B         $C$L302,HI            ; [CPU_] |3939| 
        ; branchcc occurs ; [] |3939| 
	.dwpsn	file "../Source/prod.c",line 3943,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |3943| 
        ; branch occurs ; [] |3943| 
$C$L303:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3906,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3906| 
        B         $C$L321,LO            ; [CPU_] |3906| 
        ; branchcc occurs ; [] |3906| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3911,column 5,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |3911| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3911| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3913,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3913| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3913| 
	.dwpsn	file "../Source/prod.c",line 3914,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3914| 
        MOV       *XAR5++,AL            ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3915,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3915| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3915| 
        MOV       *XAR4++,AL            ; [CPU_] |3915| 
	.dwpsn	file "../Source/prod.c",line 3916,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3916| 
        MOV       *XAR5++,AL            ; [CPU_] |3916| 
	.dwpsn	file "../Source/prod.c",line 3912,column 17,is_stmt,isa 0
        BANZ      $C$L304,AR6--         ; [CPU_] |3912| 
        ; branchcc occurs ; [] |3912| 
	.dwpsn	file "../Source/prod.c",line 3916,column 6,is_stmt,isa 0
        ADD       *-SP[59],#4           ; [CPU_] |3916| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 3919,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3919| 
	.dwpsn	file "../Source/prod.c",line 3922,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |3922| 
        ; branch occurs ; [] |3922| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5831,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5831 | cmd_mode = SCI_MODE_ASCII;                                             
; 5832 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5833 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5834 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5831| 
	.dwpsn	file "../Source/prod.c",line 5837,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5837 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_update_units")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5837| 
        ; call occurs [#_update_units] ; [] |5837| 
	.dwpsn	file "../Source/prod.c",line 5830,column 5,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |5830| 
	.dwpsn	file "../Source/prod.c",line 5838,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5838 | break;                                                                 
; 5840 | default:                                                               
; 5842 | // send back NACK?                                                     
; 5844 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L734,UNC           ; [CPU_] |5838| 
        ; branch occurs ; [] |5838| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 5824,column 5,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |5824| 
	.dwpsn	file "../Source/prod.c",line 5826,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |5826| 
        ; branch occurs ; [] |5826| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4462,column 5,is_stmt,isa 0
        B         $C$L310,UNC           ; [CPU_] |4462| 
        ; branch occurs ; [] |4462| 
$C$L309:    
	.dwpsn	file "../Source/prod.c",line 4457,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4457| 
$C$L310:    
        MOVB      AL,#0                 ; [CPU_] |4457| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_ssr_set")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4457| 
        ; call occurs [#_ssr_set] ; [] |4457| 
	.dwpsn	file "../Source/prod.c",line 4458,column 5,is_stmt,isa 0
        B         $C$L318,UNC           ; [CPU_] |4458| 
        ; branch occurs ; [] |4458| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5765,column 5,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_conf_read")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5765| 
        ; call occurs [#_conf_read] ; [] |5765| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5768,column 5,is_stmt,isa 0
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5768| 
        ; call occurs [#_ad7738_setcal] ; [] |5768| 
	.dwpsn	file "../Source/prod.c",line 5769,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5769| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5769| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5769| 
	.dwpsn	file "../Source/prod.c",line 5770,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5770| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5770| 
        ; call occurs [#_ad7738_resetvall] ; [] |5770| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5774,column 5,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_update_units")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5774| 
        ; call occurs [#_update_units] ; [] |5774| 
	.dwpsn	file "../Source/prod.c",line 5773,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5773| 
	.dwpsn	file "../Source/prod.c",line 5776,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |5776| 
        ; branch occurs ; [] |5776| 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5729,column 5,is_stmt,isa 0
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_conf_default")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5729| 
        ; call occurs [#_conf_default] ; [] |5729| 
	.dwpsn	file "../Source/prod.c",line 5732,column 5,is_stmt,isa 0
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5732| 
        ; call occurs [#_lcd_clear] ; [] |5732| 
	.dwpsn	file "../Source/prod.c",line 5733,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5733| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5733| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5733| 
        ; call occurs [#_lcd_puts] ; [] |5733| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5736,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5736| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_delay_us")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5736| 
        ; call occurs [#_delay_us] ; [] |5736| 
	.dwpsn	file "../Source/prod.c",line 5735,column 17,is_stmt,isa 0
        BANZ      $C$L313,AR3--         ; [CPU_] |5735| 
        ; branchcc occurs ; [] |5735| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5740,column 5,is_stmt,isa 0
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_conf_write")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5740| 
        ; call occurs [#_conf_write] ; [] |5740| 
        MOVZ      AR1,AL                ; [CPU_] |5740| 
	.dwpsn	file "../Source/prod.c",line 5741,column 5,is_stmt,isa 0
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5741| 
        ; call occurs [#_ad7738_setcal] ; [] |5741| 
	.dwpsn	file "../Source/prod.c",line 5742,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5742| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5742| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5742| 
	.dwpsn	file "../Source/prod.c",line 5743,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5743| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5743| 
        ; call occurs [#_ad7738_resetvall] ; [] |5743| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5746,column 5,is_stmt,isa 0
        B         $C$L314,NEQ           ; [CPU_] |5746| 
        ; branchcc occurs ; [] |5746| 
	.dwpsn	file "../Source/prod.c",line 5747,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5747| 
        MOVB      AL,#31                ; [CPU_] |5747| 
        SPM       #0                    ; [CPU_] 
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5747| 
        ; call occurs [#_lcd_puts] ; [] |5747| 
	.dwpsn	file "../Source/prod.c",line 5748,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5748| 
	.dwpsn	file "../Source/prod.c",line 5749,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5749| 
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
        B         $C$L315,UNC           ; [CPU_] |5750| 
        ; branch occurs ; [] |5750| 
$C$L314:    
	.dwpsn	file "../Source/prod.c",line 5751,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5751| 
        MOVB      AL,#31                ; [CPU_] |5751| 
        SPM       #0                    ; [CPU_] 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5751| 
        ; call occurs [#_lcd_puts] ; [] |5751| 
	.dwpsn	file "../Source/prod.c",line 5752,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5752| 
$C$L315:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5755,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5755| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_delay_us")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5755| 
        ; call occurs [#_delay_us] ; [] |5755| 
	.dwpsn	file "../Source/prod.c",line 5754,column 17,is_stmt,isa 0
        BANZ      $C$L316,AR3--         ; [CPU_] |5754| 
        ; branchcc occurs ; [] |5754| 
$C$L317:    
	.dwpsn	file "../Source/prod.c",line 5757,column 5,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5757| 
        ; call occurs [#_lcd_clear] ; [] |5757| 
	.dwpsn	file "../Source/prod.c",line 5758,column 5,is_stmt,isa 0
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_update_units")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5758| 
        ; call occurs [#_update_units] ; [] |5758| 
$C$L318:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5847,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5847 | switch (bincmdresult) {                                                
; 5848 | case OK_SendResult:                                                    
; 5849 |         scia_send_bin(buff, j);         // send back                   
; 5851 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5852 |                 delay_us(2000);                 // 2ms                 
; 5853 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5855 |         break;                                                         
; 5857 | case Error_UnImpl:                                                     
; 5859 |         buff[1] = CmdUnImpl;                                           
; 5860 |         buff[2] = cmdbuff[1];                                          
; 5861 |         scia_send_bin(buff, 3);         // send back                   
; 5862 |         break;                                                         
; 5864 | case Error_Invalid:                                                    
; 5866 |         buff[1] = CmdInvalid;                                          
; 5867 |         buff[2] = cmdbuff[1];                                          
; 5868 |         scia_send_bin(buff, 3);         // send back                   
; 5869 |         break;                                                         
; 5871 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L734,EQ            ; [CPU_] |5847| 
        ; branchcc occurs ; [] |5847| 
        CMPB      AL,#1                 ; [CPU_] |5847| 
        B         $C$L322,EQ            ; [CPU_] |5847| 
        ; branchcc occurs ; [] |5847| 
        CMPB      AL,#2                 ; [CPU_] |5847| 
        B         $C$L321,EQ            ; [CPU_] |5847| 
        ; branchcc occurs ; [] |5847| 
        CMPB      AL,#3                 ; [CPU_] |5847| 
        B         $C$L637,NEQ           ; [CPU_] |5847| 
        ; branchcc occurs ; [] |5847| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5873,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5873 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5873| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5873| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5874,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5874 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5874| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5874| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5874| 
	.dwpsn	file "../Source/prod.c",line 5875,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5875 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5875| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5875| 
        ; call occurs [#_scia_send_bin] ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5876,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5876 | break;                                                                 
; 5878 | default:                                                               
; 5880 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L637,UNC           ; [CPU_] |5876| 
        ; branch occurs ; [] |5876| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5866,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5866| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5866| 
	.dwpsn	file "../Source/prod.c",line 5869,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |5869| 
        ; branch occurs ; [] |5869| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 5859,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5859| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5859| 
	.dwpsn	file "../Source/prod.c",line 5862,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |5862| 
        ; branch occurs ; [] |5862| 
$C$L323:    
	.dwpsn	file "../Source/prod.c",line 1084,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1084| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1084| 
        CMPB      AL,#76                ; [CPU_] |1084| 
        B         $C$L325,GT            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#76                ; [CPU_] |1084| 
        B         $C$L469,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#68                ; [CPU_] |1084| 
        B         $C$L324,GT            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#68                ; [CPU_] |1084| 
        B         $C$L515,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#65                ; [CPU_] |1084| 
        B         $C$L632,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#66                ; [CPU_] |1084| 
        B         $C$L592,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#67                ; [CPU_] |1084| 
        B         $C$L533,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        B         $C$L626,UNC           ; [CPU_] |1084| 
        ; branch occurs ; [] |1084| 
$C$L324:    
        CMPB      AL,#69                ; [CPU_] |1084| 
        B         $C$L506,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#70                ; [CPU_] |1084| 
        B         $C$L497,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#72                ; [CPU_] |1084| 
        B         $C$L631,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        B         $C$L626,UNC           ; [CPU_] |1084| 
        ; branch occurs ; [] |1084| 
$C$L325:    
        CMPB      AL,#83                ; [CPU_] |1084| 
        B         $C$L326,GT            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#83                ; [CPU_] |1084| 
        B         $C$L354,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#79                ; [CPU_] |1084| 
        B         $C$L446,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#80                ; [CPU_] |1084| 
        B         $C$L432,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#82                ; [CPU_] |1084| 
        B         $C$L417,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        B         $C$L626,UNC           ; [CPU_] |1084| 
        ; branch occurs ; [] |1084| 
$C$L326:    
        CMPB      AL,#85                ; [CPU_] |1084| 
        B         $C$L327,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#88                ; [CPU_] |1084| 
        B         $C$L629,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        CMPB      AL,#90                ; [CPU_] |1084| 
        B         $C$L627,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        B         $C$L626,UNC           ; [CPU_] |1084| 
        ; branch occurs ; [] |1084| 
$C$L327:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1257| 
        B         $C$L626,LO            ; [CPU_] |1257| 
        ; branchcc occurs ; [] |1257| 
	.dwpsn	file "../Source/prod.c",line 1260,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1260| 
        CMPB      AL,#73                ; [CPU_] |1260| 
        B         $C$L328,GT            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        CMPB      AL,#73                ; [CPU_] |1260| 
        B         $C$L342,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        CMPB      AL,#66                ; [CPU_] |1260| 
        B         $C$L331,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        CMPB      AL,#67                ; [CPU_] |1260| 
        B         $C$L350,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        CMPB      AL,#70                ; [CPU_] |1260| 
        B         $C$L348,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        B         $C$L626,UNC           ; [CPU_] |1260| 
        ; branch occurs ; [] |1260| 
$C$L328:    
        CMPB      AL,#78                ; [CPU_] |1260| 
        B         $C$L329,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        CMPB      AL,#83                ; [CPU_] |1260| 
        B         $C$L339,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        CMPB      AL,#87                ; [CPU_] |1260| 
        B         $C$L337,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        B         $C$L626,UNC           ; [CPU_] |1260| 
        ; branch occurs ; [] |1260| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1277,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1277| 
        MOVL      XAR0,#84              ; [CPU_] |1277| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1277| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1277| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1277| 
        MOVL      XAR4,XAR1             ; [CPU_] |1277| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_sprintf")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1277| 
        ; call occurs [#_sprintf] ; [] |1277| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1278| 
        MOV       AL,#1024              ; [CPU_] |1278| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1277,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1277| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1278| 
        ; call occurs [#_scia_getparam] ; [] |1278| 
        CMPB      AL,#31                ; [CPU_] |1278| 
        B         $C$L330,LOS           ; [CPU_] |1278| 
        ; branchcc occurs ; [] |1278| 
	.dwpsn	file "../Source/prod.c",line 1282,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1282| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1282| 
	.dwpsn	file "../Source/prod.c",line 1281,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1281| 
	.dwpsn	file "../Source/prod.c",line 1282,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1282| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1282| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1285,column 6,is_stmt,isa 0
        MOVL      XAR0,#74              ; [CPU_] |1285| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1285| 
        MOVL      XAR0,#86              ; [CPU_] |1285| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1285| 
        MOVB      AH,#1                 ; [CPU_] |1285| 
        ADD       AH,AL                 ; [CPU_] |1285| 
        MOVU      ACC,AH                ; [CPU_] |1285| 
        MOVL      XAR5,XAR1             ; [CPU_] |1285| 
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_memcpy")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1285| 
        ; call occurs [#_memcpy] ; [] |1285| 
        MOVL      XAR4,XAR1             ; [CPU_] |1285| 
	.dwpsn	file "../Source/prod.c",line 1289,column 6,is_stmt,isa 0
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_puts")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1289| 
        ; call occurs [#_scia_puts] ; [] |1289| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1290| 
	.dwpsn	file "../Source/prod.c",line 1292,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1292| 
        ; branch occurs ; [] |1292| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1382,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1382| 
        MOVB      XAR0,#34              ; [CPU_] |1382| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1382| 
        CMPB      AL,#3                 ; [CPU_] |1382| 
        B         $C$L336,EQ            ; [CPU_] |1382| 
        ; branchcc occurs ; [] |1382| 
        MOVB      XAR1,#34              ; [CPU_] |1382| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1382| 
        CMPB      AL,#2                 ; [CPU_] |1382| 
        B         $C$L336,EQ            ; [CPU_] |1382| 
        ; branchcc occurs ; [] |1382| 
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1389,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1389| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1389| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1390,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1390| 
        MOVL      XAR0,#84              ; [CPU_] |1390| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1390| 
        MOV       *-SP[3],AL            ; [CPU_] |1390| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1390| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1390| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1390| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_sprintf")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1390| 
        ; call occurs [#_sprintf] ; [] |1390| 
        MOVL      XAR0,#84              ; [CPU_] |1390| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1390| 
	.dwpsn	file "../Source/prod.c",line 1391,column 7,is_stmt,isa 0
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_scia_puts")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1391| 
        ; call occurs [#_scia_puts] ; [] |1391| 
        MOV       AL,*-SP[47]           ; [CPU_] |1391| 
	.dwpsn	file "../Source/prod.c",line 1392,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1392| 
        B         $C$L333,GEQ           ; [CPU_] |1392| 
        ; branchcc occurs ; [] |1392| 
	.dwpsn	file "../Source/prod.c",line 1393,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1393| 
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_puts")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1393| 
        ; call occurs [#_scia_puts] ; [] |1393| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1389,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1389| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1389| 
        B         $C$L332,LT            ; [CPU_] |1389| 
        ; branchcc occurs ; [] |1389| 
	.dwpsn	file "../Source/prod.c",line 1396,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1396| 
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1396| 
        ; call occurs [#_scia_puts] ; [] |1396| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1397| 
        MOVB      XAR0,#35              ; [CPU_] |1397| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1397| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1397| 
        MOV       *-SP[3],AL            ; [CPU_] |1397| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1397| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1397| 
        MOVL      XAR0,#72              ; [CPU_] |1397| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1397| 
        ADDL      ACC,XAR6              ; [CPU_] |1397| 
        MOVL      XAR4,ACC              ; [CPU_] |1397| 
        MOVL      XAR0,#84              ; [CPU_] |1397| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1397| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1397| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1397| 
        MOVL      XAR4,XAR1             ; [CPU_] |1397| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_sprintf")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1397| 
        ; call occurs [#_sprintf] ; [] |1397| 
	.dwpsn	file "../Source/prod.c",line 1400,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1400| 
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1397| 
	.dwpsn	file "../Source/prod.c",line 1400,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1400| 
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1397| 
	.dwpsn	file "../Source/prod.c",line 1400,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1400| 
        MOVL      XAR5,XAR1             ; [CPU_] |1400| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1400| 
        ; call occurs [#_scia_getparam] ; [] |1400| 
        MOVL      XAR4,XAR1             ; [CPU_] |1400| 
	.dwpsn	file "../Source/prod.c",line 1401,column 6,is_stmt,isa 0
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_puts")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1401| 
        ; call occurs [#_scia_puts] ; [] |1401| 
	.dwpsn	file "../Source/prod.c",line 1402,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1402| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_puts")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1402| 
        ; call occurs [#_scia_puts] ; [] |1402| 
        MOV       AL,*-SP[47]           ; [CPU_] |1402| 
	.dwpsn	file "../Source/prod.c",line 1403,column 6,is_stmt,isa 0
        B         $C$L335,EQ            ; [CPU_] |1403| 
        ; branchcc occurs ; [] |1403| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1408,column 6,is_stmt,isa 0
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_atoi")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1408| 
        ; call occurs [#_atoi] ; [] |1408| 
        CMPB      AL,#7                 ; [CPU_] |1408| 
        B         $C$L334,HI            ; [CPU_] |1408| 
        ; branchcc occurs ; [] |1408| 
	.dwpsn	file "../Source/prod.c",line 1414,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1414| 
        MOVB      XAR1,#35              ; [CPU_] |1414| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1414| 
	.dwpsn	file "../Source/prod.c",line 1415,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1415| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1415| 
	.dwpsn	file "../Source/prod.c",line 1414,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1414| 
	.dwpsn	file "../Source/prod.c",line 1415,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1415| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1415| 
        MOVL      XAR0,#72              ; [CPU_] |1415| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1415| 
	.dwpsn	file "../Source/prod.c",line 1422,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1422| 
        ; branch occurs ; [] |1422| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1410,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1410| 
	.dwpsn	file "../Source/prod.c",line 1412,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1412| 
        ; branch occurs ; [] |1412| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1404,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1404| 
	.dwpsn	file "../Source/prod.c",line 1406,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1406| 
        ; branch occurs ; [] |1406| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1384,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1384| 
	.dwpsn	file "../Source/prod.c",line 1386,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1386| 
        ; branch occurs ; [] |1386| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1455,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1455| 
        MOVB      XAR0,#40              ; [CPU_] |1455| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1455| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1455| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1455| 
        MOVL      XAR0,#84              ; [CPU_] |1455| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1455| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1455| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_sprintf")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1455| 
        ; call occurs [#_sprintf] ; [] |1455| 
        MOVL      XAR0,#84              ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1457,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1457| 
	.dwpsn	file "../Source/prod.c",line 1455,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1457,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1457| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1457| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1457| 
        ; call occurs [#_scia_getparam] ; [] |1457| 
        MOVL      XAR0,#86              ; [CPU_] |1457| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1457,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1457| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_strtod")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1458,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1458| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1458| 
        MOVB      XAR1,#40              ; [CPU_] |1458| 
        MOVL      XAR0,#86              ; [CPU_] |1458| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1458| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1459,column 6,is_stmt,isa 0
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1459| 
        ; call occurs [#_scia_puts] ; [] |1459| 
	.dwpsn	file "../Source/prod.c",line 1460,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1460| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1460| 
        ; call occurs [#_scia_puts] ; [] |1460| 
	.dwpsn	file "../Source/prod.c",line 1462,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1462| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1462| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1462| 
        MOVB      XAR1,#40              ; [CPU_] |1462| 
        MOVL      XAR0,#84              ; [CPU_] |1462| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1462| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1462| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1462| 
        MOVL      XAR4,XAR1             ; [CPU_] |1462| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_sprintf")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1462| 
        ; call occurs [#_sprintf] ; [] |1462| 
        MOVL      XAR4,XAR1             ; [CPU_] |1462| 
	.dwpsn	file "../Source/prod.c",line 1464,column 6,is_stmt,isa 0
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_puts")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1464| 
        ; call occurs [#_scia_puts] ; [] |1464| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1468,column 6,is_stmt,isa 0
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1468| 
        ; call occurs [#_ad7738_setcal] ; [] |1468| 
$C$L338:    
	.dwpsn	file "../Source/prod.c",line 1469,column 6,is_stmt,isa 0
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_maf_rst")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1469| 
        ; call occurs [#_maf_rst] ; [] |1469| 
	.dwpsn	file "../Source/prod.c",line 1471,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |1471| 
        ; branch occurs ; [] |1471| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1265,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1265| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1265| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1265| 
        MOV       AL,#1024              ; [CPU_] |1265| 
        MOVL      XAR5,XAR1             ; [CPU_] |1265| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1265| 
        ; call occurs [#_scia_getparam] ; [] |1265| 
        MOVL      XAR4,XAR1             ; [CPU_] |1265| 
	.dwpsn	file "../Source/prod.c",line 1267,column 6,is_stmt,isa 0
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_atol")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1267| 
        ; call occurs [#_atol] ; [] |1267| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1267| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1269| 
	.dwpsn	file "../Source/prod.c",line 1267,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1267| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1269| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1269| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1269| 
$C$L340:    
        MOVL      XAR0,#84              ; [CPU_] |1269| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1269| 
        MOVL      XAR4,XAR1             ; [CPU_] |1269| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_sprintf")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1269| 
        ; call occurs [#_sprintf] ; [] |1269| 
        MOVL      XAR4,XAR1             ; [CPU_] |1269| 
$C$L341:    
	.dwpsn	file "../Source/prod.c",line 1270,column 6,is_stmt,isa 0
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_puts")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1270| 
        ; call occurs [#_scia_puts] ; [] |1270| 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |1272| 
        ; branch occurs ; [] |1272| 
$C$L342:    
        MOVL      XAR0,#70              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1347,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1347| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1347| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1348,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1348| 
        MOVL      XAR0,#84              ; [CPU_] |1348| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1348| 
        MOV       *-SP[3],AL            ; [CPU_] |1348| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1348| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1348| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1348| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_sprintf")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1348| 
        ; call occurs [#_sprintf] ; [] |1348| 
        MOVL      XAR0,#84              ; [CPU_] |1348| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1348| 
	.dwpsn	file "../Source/prod.c",line 1349,column 7,is_stmt,isa 0
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_puts")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1349| 
        ; call occurs [#_scia_puts] ; [] |1349| 
        MOV       AL,*-SP[47]           ; [CPU_] |1349| 
	.dwpsn	file "../Source/prod.c",line 1350,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1350| 
        B         $C$L344,GEQ           ; [CPU_] |1350| 
        ; branchcc occurs ; [] |1350| 
	.dwpsn	file "../Source/prod.c",line 1351,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1351| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_puts")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1351| 
        ; call occurs [#_scia_puts] ; [] |1351| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1347,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1347| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1347| 
        B         $C$L343,LT            ; [CPU_] |1347| 
        ; branchcc occurs ; [] |1347| 
	.dwpsn	file "../Source/prod.c",line 1354,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1354| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1354| 
        ; call occurs [#_scia_puts] ; [] |1354| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1355,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1355| 
        MOVB      XAR0,#34              ; [CPU_] |1355| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1355| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1355| 
        MOV       *-SP[3],AL            ; [CPU_] |1355| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1355| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1355| 
        MOVL      XAR0,#70              ; [CPU_] |1355| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1355| 
        ADDL      ACC,XAR6              ; [CPU_] |1355| 
        MOVL      XAR4,ACC              ; [CPU_] |1355| 
        MOVL      XAR0,#84              ; [CPU_] |1355| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1355| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1355| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1355| 
        MOVL      XAR4,XAR1             ; [CPU_] |1355| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_sprintf")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1355| 
        ; call occurs [#_sprintf] ; [] |1355| 
	.dwpsn	file "../Source/prod.c",line 1357,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1357| 
	.dwpsn	file "../Source/prod.c",line 1355,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1355| 
	.dwpsn	file "../Source/prod.c",line 1357,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1357| 
        MOV       AL,#1024              ; [CPU_] |1357| 
        MOVL      XAR5,XAR1             ; [CPU_] |1357| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1357| 
        ; call occurs [#_scia_getparam] ; [] |1357| 
        MOV       *-SP[47],AL           ; [CPU_] |1357| 
        MOVL      XAR4,XAR1             ; [CPU_] |1357| 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1358| 
        ; call occurs [#_scia_puts] ; [] |1358| 
	.dwpsn	file "../Source/prod.c",line 1359,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1359| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_scia_puts")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1359| 
        ; call occurs [#_scia_puts] ; [] |1359| 
        MOV       AL,*-SP[47]           ; [CPU_] |1359| 
	.dwpsn	file "../Source/prod.c",line 1360,column 6,is_stmt,isa 0
        B         $C$L347,EQ            ; [CPU_] |1360| 
        ; branchcc occurs ; [] |1360| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1364,column 6,is_stmt,isa 0
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_atoi")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1364| 
        ; call occurs [#_atoi] ; [] |1364| 
        CMPB      AL,#3                 ; [CPU_] |1364| 
        B         $C$L346,HI            ; [CPU_] |1364| 
        ; branchcc occurs ; [] |1364| 
	.dwpsn	file "../Source/prod.c",line 1370,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1370| 
        MOVB      XAR1,#34              ; [CPU_] |1370| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1370| 
	.dwpsn	file "../Source/prod.c",line 1371,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1371| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1371| 
	.dwpsn	file "../Source/prod.c",line 1370,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1370| 
	.dwpsn	file "../Source/prod.c",line 1371,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1371| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1371| 
        MOVL      XAR0,#70              ; [CPU_] |1371| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1371| 
$C$L345:    
        ADDL      ACC,XAR6              ; [CPU_] |1371| 
        MOVL      XAR4,ACC              ; [CPU_] |1371| 
        MOVL      XAR0,#84              ; [CPU_] |1371| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1371| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1371| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1371| 
        MOVL      XAR4,XAR1             ; [CPU_] |1371| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_sprintf")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1371| 
        ; call occurs [#_sprintf] ; [] |1371| 
        MOVL      XAR4,XAR1             ; [CPU_] |1371| 
	.dwpsn	file "../Source/prod.c",line 1374,column 6,is_stmt,isa 0
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1374| 
        ; call occurs [#_scia_puts] ; [] |1374| 
	.dwpsn	file "../Source/prod.c",line 1375,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1375| 
	.dwpsn	file "../Source/prod.c",line 1378,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1378| 
        ; branch occurs ; [] |1378| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1366,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1366| 
	.dwpsn	file "../Source/prod.c",line 1368,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1368| 
        ; branch occurs ; [] |1368| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1361,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1361| 
	.dwpsn	file "../Source/prod.c",line 1362,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1362| 
        ; branch occurs ; [] |1362| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1428,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1428| 
        MOVL      XAR0,#84              ; [CPU_] |1428| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1428| 
        MOV       *-SP[3],#4096         ; [CPU_] |1428| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1428| 
        MOVL      XAR4,XAR1             ; [CPU_] |1428| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_sprintf")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1428| 
        ; call occurs [#_sprintf] ; [] |1428| 
	.dwpsn	file "../Source/prod.c",line 1430,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1430| 
	.dwpsn	file "../Source/prod.c",line 1428,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1428| 
	.dwpsn	file "../Source/prod.c",line 1430,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1430| 
        MOV       AL,#1024              ; [CPU_] |1430| 
        MOVL      XAR5,XAR1             ; [CPU_] |1430| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1430| 
        ; call occurs [#_scia_getparam] ; [] |1430| 
	.dwpsn	file "../Source/prod.c",line 1431,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1431| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_atoi")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1431| 
        ; call occurs [#_atoi] ; [] |1431| 
        MOV       *-SP[47],AL           ; [CPU_] |1431| 
	.dwpsn	file "../Source/prod.c",line 1432,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1432| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_puts")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1432| 
        ; call occurs [#_scia_puts] ; [] |1432| 
        MOV       AL,*-SP[47]           ; [CPU_] |1432| 
	.dwpsn	file "../Source/prod.c",line 1434,column 8,is_stmt,isa 0
        B         $C$L349,LEQ           ; [CPU_] |1434| 
        ; branchcc occurs ; [] |1434| 
        CMP       AL,#4096              ; [CPU_] |1434| 
        B         $C$L349,GT            ; [CPU_] |1434| 
        ; branchcc occurs ; [] |1434| 
	.dwpsn	file "../Source/prod.c",line 1439,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1439| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1439| 
        ; call occurs [#_scia_puts] ; [] |1439| 
	.dwpsn	file "../Source/prod.c",line 1441,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1441| 
        MOVL      XAR0,#84              ; [CPU_] |1441| 
        MOV       AL,*-SP[47]           ; [CPU_] |1441| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1441| 
        MOV       *-SP[3],AL            ; [CPU_] |1441| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1441| 
        MOVL      XAR4,XAR1             ; [CPU_] |1441| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_sprintf")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1441| 
        ; call occurs [#_sprintf] ; [] |1441| 
        MOVL      XAR4,XAR1             ; [CPU_] |1441| 
	.dwpsn	file "../Source/prod.c",line 1443,column 6,is_stmt,isa 0
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1443| 
        ; call occurs [#_scia_puts] ; [] |1443| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1448,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1448| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1448| 
        MOV       AL,*-SP[47]           ; [CPU_] |1448| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1448| 
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
        B         $C$L338,UNC           ; [CPU_] |1451| 
        ; branch occurs ; [] |1451| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1436,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1436| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1436| 
        ; call occurs [#_scia_puts] ; [] |1436| 
	.dwpsn	file "../Source/prod.c",line 1427,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1427| 
        ; branch occurs ; [] |1427| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1299,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1299| 
        MOVL      XAR0,#84              ; [CPU_] |1299| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1299| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1299| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1299| 
        MOVL      XAR4,XAR1             ; [CPU_] |1299| 
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_sprintf")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1299| 
        ; call occurs [#_sprintf] ; [] |1299| 
	.dwpsn	file "../Source/prod.c",line 1300,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1300| 
	.dwpsn	file "../Source/prod.c",line 1299,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1299| 
	.dwpsn	file "../Source/prod.c",line 1300,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1300| 
        MOV       AL,#1024              ; [CPU_] |1300| 
        MOVL      XAR5,XAR1             ; [CPU_] |1300| 
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1300| 
        ; call occurs [#_scia_getparam] ; [] |1300| 
	.dwpsn	file "../Source/prod.c",line 1301,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1301| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_atoi")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1301| 
        ; call occurs [#_atoi] ; [] |1301| 
        MOV       *-SP[56],AL           ; [CPU_] |1301| 
	.dwpsn	file "../Source/prod.c",line 1302,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1302| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1302| 
        ; call occurs [#_scia_puts] ; [] |1302| 
        MOV       AL,*-SP[56]           ; [CPU_] |1302| 
	.dwpsn	file "../Source/prod.c",line 1304,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1304| 
        CMPB      AL,#4                 ; [CPU_] |1304| 
        B         $C$L353,HIS           ; [CPU_] |1304| 
        ; branchcc occurs ; [] |1304| 
	.dwpsn	file "../Source/prod.c",line 1308,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1308| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1308| 
        ; call occurs [#_scia_puts] ; [] |1308| 
	.dwpsn	file "../Source/prod.c",line 1309,column 6,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |1309| 
$C$L351:    
	.dwpsn	file "../Source/prod.c",line 1314,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1314| 
        MOVL      XAR0,#84              ; [CPU_] |1314| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1314| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1314| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1314| 
        MOVL      XAR4,XAR1             ; [CPU_] |1314| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_sprintf")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1314| 
        ; call occurs [#_sprintf] ; [] |1314| 
	.dwpsn	file "../Source/prod.c",line 1315,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1315| 
	.dwpsn	file "../Source/prod.c",line 1314,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1314| 
	.dwpsn	file "../Source/prod.c",line 1315,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1315| 
        MOV       AL,#1024              ; [CPU_] |1315| 
        MOVL      XAR5,XAR1             ; [CPU_] |1315| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1315| 
        ; call occurs [#_scia_getparam] ; [] |1315| 
	.dwpsn	file "../Source/prod.c",line 1316,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1316| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_atoi")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1316| 
        ; call occurs [#_atoi] ; [] |1316| 
        MOV       *-SP[55],AL           ; [CPU_] |1316| 
	.dwpsn	file "../Source/prod.c",line 1317,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1317| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_puts")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1317| 
        ; call occurs [#_scia_puts] ; [] |1317| 
        MOV       AL,*-SP[55]           ; [CPU_] |1317| 
	.dwpsn	file "../Source/prod.c",line 1321,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1321| 
        CMPB      AL,#20                ; [CPU_] |1321| 
        B         $C$L352,HIS           ; [CPU_] |1321| 
        ; branchcc occurs ; [] |1321| 
	.dwpsn	file "../Source/prod.c",line 1325,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1325| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_puts")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1325| 
        ; call occurs [#_scia_puts] ; [] |1325| 
	.dwpsn	file "../Source/prod.c",line 1328,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1328| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1328| 
        MOVL      XAR0,#84              ; [CPU_] |1328| 
        MOV       AH,*-SP[55]           ; [CPU_] |1328| 
        ADD       AL,*-SP[56]           ; [CPU_] |1328| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1328| 
        MOV       *-SP[3],AL            ; [CPU_] |1328| 
        MOV       *-SP[4],AH            ; [CPU_] |1328| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1328| 
        DEC       *-SP[55]              ; [CPU_] |1328| 
        MOVL      XAR4,XAR1             ; [CPU_] |1328| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_sprintf")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1328| 
        ; call occurs [#_sprintf] ; [] |1328| 
        MOVL      XAR4,XAR1             ; [CPU_] |1328| 
	.dwpsn	file "../Source/prod.c",line 1330,column 6,is_stmt,isa 0
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1330| 
        ; call occurs [#_scia_puts] ; [] |1330| 
        MOV       AL,*-SP[55]           ; [CPU_] |1330| 
	.dwpsn	file "../Source/prod.c",line 1331,column 6,is_stmt,isa 0
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_print_sensor")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1331| 
        ; call occurs [#_print_sensor] ; [] |1331| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1335| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1335| 
        MOVB      AL,#10                ; [CPU_] |1335| 
        MOV       T,*-SP[56]            ; [CPU_] |1335| 
        MPYU      ACC,T,AL              ; [CPU_] |1335| 
        ADDL      ACC,XAR6              ; [CPU_] |1335| 
        MOVL      XAR4,ACC              ; [CPU_] |1335| 
        MOVB      XAR0,#42              ; [CPU_] |1335| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[55]           ; [CPU_] |1335| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1336,column 6,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1336| 
        ; call occurs [#_ad7738_setcal] ; [] |1336| 
        MOVL      XAR0,#76              ; [CPU_] |1336| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1336| 
	.dwpsn	file "../Source/prod.c",line 1338,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |1338| 
        MOVL      XAR1,ACC              ; [CPU_] |1338| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1338| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1338| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1338| 
	.dwpsn	file "../Source/prod.c",line 1339,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1339| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1339| 
        ; call occurs [#_ad7738_resetvall] ; [] |1339| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1343,column 6,is_stmt,isa 0
        B         $C$L529,UNC           ; [CPU_] |1343| 
        ; branch occurs ; [] |1343| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 1323,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1323| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1323| 
        ; call occurs [#_scia_puts] ; [] |1323| 
	.dwpsn	file "../Source/prod.c",line 1313,column 6,is_stmt,isa 0
        B         $C$L351,UNC           ; [CPU_] |1313| 
        ; branch occurs ; [] |1313| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 1306,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1306| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_puts")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1306| 
        ; call occurs [#_scia_puts] ; [] |1306| 
	.dwpsn	file "../Source/prod.c",line 1298,column 6,is_stmt,isa 0
        B         $C$L350,UNC           ; [CPU_] |1298| 
        ; branch occurs ; [] |1298| 
$C$L354:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2159,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2159| 
        B         $C$L626,LO            ; [CPU_] |2159| 
        ; branchcc occurs ; [] |2159| 
	.dwpsn	file "../Source/prod.c",line 2164,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2164| 
        CMPB      AL,#78                ; [CPU_] |2164| 
        B         $C$L355,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
        CMPB      AL,#85                ; [CPU_] |2164| 
        B         $C$L355,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
        CMPB      AL,#66                ; [CPU_] |2164| 
        B         $C$L355,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
        CMPB      AL,#68                ; [CPU_] |2164| 
        B         $C$L626,NEQ           ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2167,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2167| 
	.dwpsn	file "../Source/prod.c",line 2188,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2188| 
$C$L356:    
	.dwpsn	file "../Source/prod.c",line 2190,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2190| 
        MOVL      XAR0,#84              ; [CPU_] |2190| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2190| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2190| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2190| 
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_sprintf")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2190| 
        ; call occurs [#_sprintf] ; [] |2190| 
        MOVL      XAR0,#84              ; [CPU_] |2190| 
	.dwpsn	file "../Source/prod.c",line 2191,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2191| 
	.dwpsn	file "../Source/prod.c",line 2190,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2190| 
	.dwpsn	file "../Source/prod.c",line 2191,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2191| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2191| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2191| 
        ; call occurs [#_scia_getparam] ; [] |2191| 
        MOVL      XAR0,#86              ; [CPU_] |2191| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2191| 
	.dwpsn	file "../Source/prod.c",line 2192,column 6,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_atoi")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2192| 
        ; call occurs [#_atoi] ; [] |2192| 
        MOVL      XAR0,#86              ; [CPU_] |2192| 
        MOV       *-SP[55],AL           ; [CPU_] |2192| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2192| 
	.dwpsn	file "../Source/prod.c",line 2193,column 6,is_stmt,isa 0
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2193| 
        ; call occurs [#_scia_puts] ; [] |2193| 
        MOV       AL,*-SP[55]           ; [CPU_] |2193| 
	.dwpsn	file "../Source/prod.c",line 2197,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2197| 
        CMPB      AL,#20                ; [CPU_] |2197| 
        B         $C$L416,HIS           ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
	.dwpsn	file "../Source/prod.c",line 2201,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2201| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2201| 
        ; call occurs [#_scia_puts] ; [] |2201| 
	.dwpsn	file "../Source/prod.c",line 2202,column 5,is_stmt,isa 0
        DEC       *-SP[55]              ; [CPU_] |2202| 
	.dwpsn	file "../Source/prod.c",line 2204,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2204| 
        CMPB      AL,#66                ; [CPU_] |2204| 
        B         $C$L411,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#68                ; [CPU_] |2204| 
        B         $C$L408,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#78                ; [CPU_] |2204| 
        B         $C$L406,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#85                ; [CPU_] |2204| 
        B         $C$L626,NEQ           ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
	.dwpsn	file "../Source/prod.c",line 2233,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2233| 
	.dwpsn	file "../Source/prod.c",line 2231,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2231| 
        MOV       AH,#0                 ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2233,column 6,is_stmt,isa 0
        MOV       T,*-SP[55]            ; [CPU_] |2233| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2233| 
	.dwpsn	file "../Source/prod.c",line 2231,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2233,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2233| 
        MPYU      ACC,T,AL              ; [CPU_] |2233| 
        ADDL      ACC,XAR6              ; [CPU_] |2233| 
        ADDB      ACC,#124              ; [CPU_] |2233| 
        MOVL      XAR1,ACC              ; [CPU_] |2233| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2233| 
        CMPB      AL,#35                ; [CPU_] |2233| 
        B         $C$L357,GT            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#35                ; [CPU_] |2233| 
        B         $C$L373,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#16                ; [CPU_] |2233| 
        B         $C$L393,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#17                ; [CPU_] |2233| 
        B         $C$L389,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#34                ; [CPU_] |2233| 
        B         $C$L380,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        B         $C$L397,UNC           ; [CPU_] |2233| 
        ; branch occurs ; [] |2233| 
$C$L357:    
        CMPB      AL,#36                ; [CPU_] |2233| 
        B         $C$L366,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#53                ; [CPU_] |2233| 
        B         $C$L362,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#70                ; [CPU_] |2233| 
        B         $C$L397,NEQ           ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2422,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2422| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2422| 
        MOV       AL,#1024              ; [CPU_] |2422| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2422| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2422| 
        ; call occurs [#_scia_getparam] ; [] |2422| 
        MOVL      XAR0,#86              ; [CPU_] |2422| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2424,column 8,is_stmt,isa 0
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_atoi")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2424| 
        ; call occurs [#_atoi] ; [] |2424| 
        MOVL      XAR0,#86              ; [CPU_] |2424| 
        MOV       *-SP[47],AL           ; [CPU_] |2424| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2424| 
	.dwpsn	file "../Source/prod.c",line 2425,column 8,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2425| 
        ; call occurs [#_scia_puts] ; [] |2425| 
        MOV       AL,*-SP[47]           ; [CPU_] |2425| 
	.dwpsn	file "../Source/prod.c",line 2426,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2426| 
        B         $C$L359,EQ            ; [CPU_] |2426| 
        ; branchcc occurs ; [] |2426| 
        CMPB      AL,#7                 ; [CPU_] |2426| 
        B         $C$L360,EQ            ; [CPU_] |2426| 
        ; branchcc occurs ; [] |2426| 
	.dwpsn	file "../Source/prod.c",line 2427,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2427| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_puts")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2427| 
        ; call occurs [#_scia_puts] ; [] |2427| 
$C$L359:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2429,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2429| 
        B         $C$L360,EQ            ; [CPU_] |2429| 
        ; branchcc occurs ; [] |2429| 
        CMPB      AL,#7                 ; [CPU_] |2429| 
        B         $C$L358,NEQ           ; [CPU_] |2429| 
        ; branchcc occurs ; [] |2429| 
$C$L360:    
	.dwpsn	file "../Source/prod.c",line 2430,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2430| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2430| 
        ; call occurs [#_scia_puts] ; [] |2430| 
        MOV       AL,*-SP[47]           ; [CPU_] |2430| 
	.dwpsn	file "../Source/prod.c",line 2432,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2432| 
        B         $C$L361,EQ            ; [CPU_] |2432| 
        ; branchcc occurs ; [] |2432| 
        CMPB      AL,#7                 ; [CPU_] |2432| 
        B         $C$L396,EQ            ; [CPU_] |2432| 
        ; branchcc occurs ; [] |2432| 
        B         $C$L397,UNC           ; [CPU_] |2432| 
        ; branch occurs ; [] |2432| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2434,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2434| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2434| 
        MOV       AL,*-SP[47]           ; [CPU_] |2434| 
	.dwpsn	file "../Source/prod.c",line 2435,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2435| 
	.dwpsn	file "../Source/prod.c",line 2436,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2436| 
        ; branch occurs ; [] |2436| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2397,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2397| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2397| 
        MOV       AL,#1024              ; [CPU_] |2397| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2397| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2397| 
        ; call occurs [#_scia_getparam] ; [] |2397| 
        MOVL      XAR0,#86              ; [CPU_] |2397| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2397| 
	.dwpsn	file "../Source/prod.c",line 2399,column 8,is_stmt,isa 0
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_atoi")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2399| 
        ; call occurs [#_atoi] ; [] |2399| 
        MOVL      XAR0,#86              ; [CPU_] |2399| 
        MOV       *-SP[47],AL           ; [CPU_] |2399| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2399| 
	.dwpsn	file "../Source/prod.c",line 2400,column 8,is_stmt,isa 0
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2400| 
        ; call occurs [#_scia_puts] ; [] |2400| 
        MOV       AL,*-SP[47]           ; [CPU_] |2400| 
	.dwpsn	file "../Source/prod.c",line 2401,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2401| 
        B         $C$L363,EQ            ; [CPU_] |2401| 
        ; branchcc occurs ; [] |2401| 
        CMPB      AL,#7                 ; [CPU_] |2401| 
        B         $C$L364,EQ            ; [CPU_] |2401| 
        ; branchcc occurs ; [] |2401| 
	.dwpsn	file "../Source/prod.c",line 2402,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2402| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_puts")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2402| 
        ; call occurs [#_scia_puts] ; [] |2402| 
$C$L363:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2404,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2404| 
        B         $C$L364,EQ            ; [CPU_] |2404| 
        ; branchcc occurs ; [] |2404| 
        CMPB      AL,#7                 ; [CPU_] |2404| 
        B         $C$L362,NEQ           ; [CPU_] |2404| 
        ; branchcc occurs ; [] |2404| 
$C$L364:    
	.dwpsn	file "../Source/prod.c",line 2405,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2405| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2405| 
        ; call occurs [#_scia_puts] ; [] |2405| 
        MOV       AL,*-SP[47]           ; [CPU_] |2405| 
	.dwpsn	file "../Source/prod.c",line 2407,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2407| 
        B         $C$L365,EQ            ; [CPU_] |2407| 
        ; branchcc occurs ; [] |2407| 
        CMPB      AL,#7                 ; [CPU_] |2407| 
        B         $C$L396,EQ            ; [CPU_] |2407| 
        ; branchcc occurs ; [] |2407| 
        B         $C$L397,UNC           ; [CPU_] |2407| 
        ; branch occurs ; [] |2407| 
$C$L365:    
	.dwpsn	file "../Source/prod.c",line 2409,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2409| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2409| 
        MOV       AL,*-SP[47]           ; [CPU_] |2409| 
	.dwpsn	file "../Source/prod.c",line 2410,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2410| 
	.dwpsn	file "../Source/prod.c",line 2411,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2411| 
        ; branch occurs ; [] |2411| 
$C$L366:    
	.dwpsn	file "../Source/prod.c",line 2363,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2363| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2363| 
        MOV       AL,#1024              ; [CPU_] |2363| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2363| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2363| 
        ; call occurs [#_scia_getparam] ; [] |2363| 
        MOVL      XAR0,#86              ; [CPU_] |2363| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2363| 
	.dwpsn	file "../Source/prod.c",line 2366,column 8,is_stmt,isa 0
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_atoi")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2366| 
        ; call occurs [#_atoi] ; [] |2366| 
        MOVL      XAR0,#86              ; [CPU_] |2366| 
        MOV       *-SP[47],AL           ; [CPU_] |2366| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2366| 
	.dwpsn	file "../Source/prod.c",line 2367,column 8,is_stmt,isa 0
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_puts")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2367| 
        ; call occurs [#_scia_puts] ; [] |2367| 
        MOV       AL,*-SP[47]           ; [CPU_] |2367| 
	.dwpsn	file "../Source/prod.c",line 2368,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2368| 
        B         $C$L367,EQ            ; [CPU_] |2368| 
        ; branchcc occurs ; [] |2368| 
        CMPB      AL,#3                 ; [CPU_] |2368| 
        B         $C$L368,EQ            ; [CPU_] |2368| 
        ; branchcc occurs ; [] |2368| 
        CMPB      AL,#4                 ; [CPU_] |2368| 
        B         $C$L369,EQ            ; [CPU_] |2368| 
        ; branchcc occurs ; [] |2368| 
        CMPB      AL,#7                 ; [CPU_] |2368| 
        B         $C$L370,EQ            ; [CPU_] |2368| 
        ; branchcc occurs ; [] |2368| 
	.dwpsn	file "../Source/prod.c",line 2369,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2369| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2369| 
        ; call occurs [#_scia_puts] ; [] |2369| 
$C$L367:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2371,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2371| 
        B         $C$L370,EQ            ; [CPU_] |2371| 
        ; branchcc occurs ; [] |2371| 
$C$L368:    
        CMPB      AL,#3                 ; [CPU_] |2371| 
        B         $C$L370,EQ            ; [CPU_] |2371| 
        ; branchcc occurs ; [] |2371| 
$C$L369:    
        CMPB      AL,#4                 ; [CPU_] |2371| 
        B         $C$L370,EQ            ; [CPU_] |2371| 
        ; branchcc occurs ; [] |2371| 
        CMPB      AL,#7                 ; [CPU_] |2371| 
        B         $C$L366,NEQ           ; [CPU_] |2371| 
        ; branchcc occurs ; [] |2371| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2372,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2372| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2372| 
        ; call occurs [#_scia_puts] ; [] |2372| 
        MOV       AL,*-SP[47]           ; [CPU_] |2372| 
	.dwpsn	file "../Source/prod.c",line 2374,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2374| 
        B         $C$L372,EQ            ; [CPU_] |2374| 
        ; branchcc occurs ; [] |2374| 
        CMPB      AL,#3                 ; [CPU_] |2374| 
        B         $C$L371,EQ            ; [CPU_] |2374| 
        ; branchcc occurs ; [] |2374| 
        CMPB      AL,#4                 ; [CPU_] |2374| 
        B         $C$L388,EQ            ; [CPU_] |2374| 
        ; branchcc occurs ; [] |2374| 
        CMPB      AL,#7                 ; [CPU_] |2374| 
        B         $C$L396,EQ            ; [CPU_] |2374| 
        ; branchcc occurs ; [] |2374| 
        B         $C$L397,UNC           ; [CPU_] |2374| 
        ; branch occurs ; [] |2374| 
$C$L371:    
	.dwpsn	file "../Source/prod.c",line 2380,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2380| 
        MOV       AH,#15820             ; [CPU_] |2380| 
	.dwpsn	file "../Source/prod.c",line 2382,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2382| 
        ; branch occurs ; [] |2382| 
$C$L372:    
	.dwpsn	file "../Source/prod.c",line 2376,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2376| 
        MOV       AH,#15649             ; [CPU_] |2376| 
	.dwpsn	file "../Source/prod.c",line 2378,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2378| 
        ; branch occurs ; [] |2378| 
$C$L373:    
	.dwpsn	file "../Source/prod.c",line 2329,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2329| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2329| 
        MOV       AL,#1024              ; [CPU_] |2329| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2329| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2329| 
        ; call occurs [#_scia_getparam] ; [] |2329| 
        MOVL      XAR0,#86              ; [CPU_] |2329| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2329| 
	.dwpsn	file "../Source/prod.c",line 2332,column 8,is_stmt,isa 0
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_atoi")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2332| 
        ; call occurs [#_atoi] ; [] |2332| 
        MOVL      XAR0,#86              ; [CPU_] |2332| 
        MOV       *-SP[47],AL           ; [CPU_] |2332| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2332| 
	.dwpsn	file "../Source/prod.c",line 2333,column 8,is_stmt,isa 0
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_scia_puts")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2333| 
        ; call occurs [#_scia_puts] ; [] |2333| 
        MOV       AL,*-SP[47]           ; [CPU_] |2333| 
	.dwpsn	file "../Source/prod.c",line 2334,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2334| 
        B         $C$L374,EQ            ; [CPU_] |2334| 
        ; branchcc occurs ; [] |2334| 
        CMPB      AL,#3                 ; [CPU_] |2334| 
        B         $C$L375,EQ            ; [CPU_] |2334| 
        ; branchcc occurs ; [] |2334| 
        CMPB      AL,#4                 ; [CPU_] |2334| 
        B         $C$L376,EQ            ; [CPU_] |2334| 
        ; branchcc occurs ; [] |2334| 
        CMPB      AL,#7                 ; [CPU_] |2334| 
        B         $C$L377,EQ            ; [CPU_] |2334| 
        ; branchcc occurs ; [] |2334| 
	.dwpsn	file "../Source/prod.c",line 2335,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2335| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2335| 
        ; call occurs [#_scia_puts] ; [] |2335| 
$C$L374:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2337,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2337| 
        B         $C$L377,EQ            ; [CPU_] |2337| 
        ; branchcc occurs ; [] |2337| 
$C$L375:    
        CMPB      AL,#3                 ; [CPU_] |2337| 
        B         $C$L377,EQ            ; [CPU_] |2337| 
        ; branchcc occurs ; [] |2337| 
$C$L376:    
        CMPB      AL,#4                 ; [CPU_] |2337| 
        B         $C$L377,EQ            ; [CPU_] |2337| 
        ; branchcc occurs ; [] |2337| 
        CMPB      AL,#7                 ; [CPU_] |2337| 
        B         $C$L373,NEQ           ; [CPU_] |2337| 
        ; branchcc occurs ; [] |2337| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2338,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2338| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_scia_puts")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2338| 
        ; call occurs [#_scia_puts] ; [] |2338| 
        MOV       AL,*-SP[47]           ; [CPU_] |2338| 
	.dwpsn	file "../Source/prod.c",line 2340,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2340| 
        B         $C$L379,EQ            ; [CPU_] |2340| 
        ; branchcc occurs ; [] |2340| 
        CMPB      AL,#3                 ; [CPU_] |2340| 
        B         $C$L388,EQ            ; [CPU_] |2340| 
        ; branchcc occurs ; [] |2340| 
        CMPB      AL,#4                 ; [CPU_] |2340| 
        B         $C$L378,EQ            ; [CPU_] |2340| 
        ; branchcc occurs ; [] |2340| 
        CMPB      AL,#7                 ; [CPU_] |2340| 
        B         $C$L396,EQ            ; [CPU_] |2340| 
        ; branchcc occurs ; [] |2340| 
        B         $C$L397,UNC           ; [CPU_] |2340| 
        ; branch occurs ; [] |2340| 
$C$L378:    
	.dwpsn	file "../Source/prod.c",line 2350,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2350| 
        MOV       AH,#16672             ; [CPU_] |2350| 
	.dwpsn	file "../Source/prod.c",line 2352,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2352| 
        ; branch occurs ; [] |2352| 
$C$L379:    
	.dwpsn	file "../Source/prod.c",line 2342,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2342| 
        MOV       AH,#16073             ; [CPU_] |2342| 
	.dwpsn	file "../Source/prod.c",line 2344,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2344| 
        ; branch occurs ; [] |2344| 
$C$L380:    
	.dwpsn	file "../Source/prod.c",line 2295,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2295| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2295| 
        MOV       AL,#1024              ; [CPU_] |2295| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2295| 
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2295| 
        ; call occurs [#_scia_getparam] ; [] |2295| 
        MOVL      XAR0,#86              ; [CPU_] |2295| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2295| 
	.dwpsn	file "../Source/prod.c",line 2298,column 8,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_atoi")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2298| 
        ; call occurs [#_atoi] ; [] |2298| 
        MOVL      XAR0,#86              ; [CPU_] |2298| 
        MOV       *-SP[47],AL           ; [CPU_] |2298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2298| 
	.dwpsn	file "../Source/prod.c",line 2299,column 8,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2299| 
        ; call occurs [#_scia_puts] ; [] |2299| 
        MOV       AL,*-SP[47]           ; [CPU_] |2299| 
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2300| 
        B         $C$L381,EQ            ; [CPU_] |2300| 
        ; branchcc occurs ; [] |2300| 
        CMPB      AL,#3                 ; [CPU_] |2300| 
        B         $C$L382,EQ            ; [CPU_] |2300| 
        ; branchcc occurs ; [] |2300| 
        CMPB      AL,#4                 ; [CPU_] |2300| 
        B         $C$L383,EQ            ; [CPU_] |2300| 
        ; branchcc occurs ; [] |2300| 
        CMPB      AL,#7                 ; [CPU_] |2300| 
        B         $C$L384,EQ            ; [CPU_] |2300| 
        ; branchcc occurs ; [] |2300| 
	.dwpsn	file "../Source/prod.c",line 2301,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2301| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2301| 
        ; call occurs [#_scia_puts] ; [] |2301| 
$C$L381:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2303,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2303| 
        B         $C$L384,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
$C$L382:    
        CMPB      AL,#3                 ; [CPU_] |2303| 
        B         $C$L384,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
$C$L383:    
        CMPB      AL,#4                 ; [CPU_] |2303| 
        B         $C$L384,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
        CMPB      AL,#7                 ; [CPU_] |2303| 
        B         $C$L380,NEQ           ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2304,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2304| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_scia_puts")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2304| 
        ; call occurs [#_scia_puts] ; [] |2304| 
        MOV       AL,*-SP[47]           ; [CPU_] |2304| 
	.dwpsn	file "../Source/prod.c",line 2306,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2306| 
        B         $C$L388,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        CMPB      AL,#3                 ; [CPU_] |2306| 
        B         $C$L387,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        CMPB      AL,#4                 ; [CPU_] |2306| 
        B         $C$L385,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        CMPB      AL,#7                 ; [CPU_] |2306| 
        B         $C$L396,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        B         $C$L397,UNC           ; [CPU_] |2306| 
        ; branch occurs ; [] |2306| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2316,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2316| 
        MOV       AH,#16843             ; [CPU_] |2316| 
$C$L386:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2316| 
        MOV       AL,*-SP[47]           ; [CPU_] |2316| 
	.dwpsn	file "../Source/prod.c",line 2317,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2317| 
	.dwpsn	file "../Source/prod.c",line 2318,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2318| 
        ; branch occurs ; [] |2318| 
$C$L387:    
	.dwpsn	file "../Source/prod.c",line 2312,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2312| 
        MOV       AH,#16418             ; [CPU_] |2312| 
	.dwpsn	file "../Source/prod.c",line 2314,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2314| 
        ; branch occurs ; [] |2314| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2308,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2308| 
	.dwpsn	file "../Source/prod.c",line 2310,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2310| 
        ; branch occurs ; [] |2310| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2266,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2266| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2266| 
        MOV       AL,#1024              ; [CPU_] |2266| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2266| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2266| 
        ; call occurs [#_scia_getparam] ; [] |2266| 
        MOVL      XAR0,#86              ; [CPU_] |2266| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2266| 
	.dwpsn	file "../Source/prod.c",line 2268,column 8,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_atoi")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2268| 
        ; call occurs [#_atoi] ; [] |2268| 
        MOVL      XAR0,#86              ; [CPU_] |2268| 
        MOV       *-SP[47],AL           ; [CPU_] |2268| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2268| 
	.dwpsn	file "../Source/prod.c",line 2269,column 8,is_stmt,isa 0
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_puts")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2269| 
        ; call occurs [#_scia_puts] ; [] |2269| 
        MOV       AL,*-SP[47]           ; [CPU_] |2269| 
	.dwpsn	file "../Source/prod.c",line 2270,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2270| 
        B         $C$L391,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2270| 
        B         $C$L390,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
	.dwpsn	file "../Source/prod.c",line 2271,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2271| 
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_scia_puts")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2271| 
        ; call occurs [#_scia_puts] ; [] |2271| 
$C$L390:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2273,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2273| 
        B         $C$L391,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2273| 
        B         $C$L389,NEQ           ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
$C$L391:    
	.dwpsn	file "../Source/prod.c",line 2274,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2274| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2274| 
        ; call occurs [#_scia_puts] ; [] |2274| 
        MOV       AL,*-SP[47]           ; [CPU_] |2274| 
	.dwpsn	file "../Source/prod.c",line 2276,column 7,is_stmt,isa 0
        B         $C$L392,EQ            ; [CPU_] |2276| 
        ; branchcc occurs ; [] |2276| 
        CMPB      AL,#1                 ; [CPU_] |2276| 
        B         $C$L399,EQ            ; [CPU_] |2276| 
        ; branchcc occurs ; [] |2276| 
        CMPB      AL,#7                 ; [CPU_] |2276| 
        B         $C$L396,EQ            ; [CPU_] |2276| 
        ; branchcc occurs ; [] |2276| 
        B         $C$L397,UNC           ; [CPU_] |2276| 
        ; branch occurs ; [] |2276| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2278,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2278| 
        MOV       AH,#16397             ; [CPU_] |2278| 
	.dwpsn	file "../Source/prod.c",line 2280,column 8,is_stmt,isa 0
        B         $C$L400,UNC           ; [CPU_] |2280| 
        ; branch occurs ; [] |2280| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2237,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2237| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2237| 
        MOV       AL,#1024              ; [CPU_] |2237| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2237| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2237| 
        ; call occurs [#_scia_getparam] ; [] |2237| 
        MOVL      XAR0,#86              ; [CPU_] |2237| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2237| 
	.dwpsn	file "../Source/prod.c",line 2239,column 8,is_stmt,isa 0
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_atoi")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2239| 
        ; call occurs [#_atoi] ; [] |2239| 
        MOVL      XAR0,#86              ; [CPU_] |2239| 
        MOV       *-SP[47],AL           ; [CPU_] |2239| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2239| 
	.dwpsn	file "../Source/prod.c",line 2240,column 8,is_stmt,isa 0
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_scia_puts")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2240| 
        ; call occurs [#_scia_puts] ; [] |2240| 
        MOV       AL,*-SP[47]           ; [CPU_] |2240| 
	.dwpsn	file "../Source/prod.c",line 2241,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2241| 
        B         $C$L395,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2241| 
        B         $C$L394,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
	.dwpsn	file "../Source/prod.c",line 2242,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2242| 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_scia_puts")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2242| 
        ; call occurs [#_scia_puts] ; [] |2242| 
$C$L394:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2244,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2244| 
        B         $C$L395,EQ            ; [CPU_] |2244| 
        ; branchcc occurs ; [] |2244| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2244| 
        B         $C$L393,NEQ           ; [CPU_] |2244| 
        ; branchcc occurs ; [] |2244| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2245,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2245| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_puts")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2245| 
        ; call occurs [#_scia_puts] ; [] |2245| 
        MOV       AL,*-SP[47]           ; [CPU_] |2245| 
	.dwpsn	file "../Source/prod.c",line 2247,column 7,is_stmt,isa 0
        B         $C$L399,EQ            ; [CPU_] |2247| 
        ; branchcc occurs ; [] |2247| 
        CMPB      AL,#1                 ; [CPU_] |2247| 
        B         $C$L398,EQ            ; [CPU_] |2247| 
        ; branchcc occurs ; [] |2247| 
        CMPB      AL,#7                 ; [CPU_] |2247| 
        B         $C$L397,NEQ           ; [CPU_] |2247| 
        ; branchcc occurs ; [] |2247| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2257,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2257| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2257| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2257| 
        MOV       AL,#0                 ; [CPU_] |2257| 
        MOV       AH,#17096             ; [CPU_] |2257| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2257| 
        ; call occurs [#FS$$DIV] ; [] |2257| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2257| 
        MOV       AL,*-SP[47]           ; [CPU_] |2257| 
	.dwpsn	file "../Source/prod.c",line 2258,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2258| 
        MOV       *-SP[47],AL           ; [CPU_] |2258| 
$C$L397:    
	.dwpsn	file "../Source/prod.c",line 2448,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2448| 
        MOV       AH,#0                 ; [CPU_] |2448| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2448| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2448| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2448| 
        ; call occurs [#FS$$CMP] ; [] |2448| 
        CMPB      AL,#0                 ; [CPU_] |2448| 
        B         $C$L402,NEQ           ; [CPU_] |2448| 
        ; branchcc occurs ; [] |2448| 
	.dwpsn	file "../Source/prod.c",line 2449,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2449| 
	.dwpsn	file "../Source/prod.c",line 2450,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |2450| 
        ; branch occurs ; [] |2450| 
$C$L398:    
	.dwpsn	file "../Source/prod.c",line 2253,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2253| 
        MOV       AH,#16104             ; [CPU_] |2253| 
	.dwpsn	file "../Source/prod.c",line 2255,column 8,is_stmt,isa 0
        B         $C$L400,UNC           ; [CPU_] |2255| 
        ; branch occurs ; [] |2255| 
$C$L399:    
	.dwpsn	file "../Source/prod.c",line 2249,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2249| 
$C$L400:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2249| 
        MOV       AL,*-SP[47]           ; [CPU_] |2249| 
	.dwpsn	file "../Source/prod.c",line 2250,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2250| 
$C$L401:    
        MOV       *-SP[47],AL           ; [CPU_] |2250| 
$C$L402:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2453,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2453| 
        B         $C$L405,EQ            ; [CPU_] |2453| 
        ; branchcc occurs ; [] |2453| 
	.dwpsn	file "../Source/prod.c",line 2459,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2459| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2463| 
	.dwpsn	file "../Source/prod.c",line 2460,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2460| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        MOVL      XAR0,#68              ; [CPU_] |2463| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2460,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2460| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2463| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2463| 
        ADD       AL,*-SP[55]           ; [CPU_] |2463| 
        MOV       *-SP[3],AL            ; [CPU_] |2463| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2463| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2463| 
        ANDB      AL,#0x0f              ; [CPU_] |2463| 
        MOV       ACC,AL << 1           ; [CPU_] |2463| 
        ADDL      ACC,XAR6              ; [CPU_] |2463| 
        MOVL      XAR4,ACC              ; [CPU_] |2463| 
        MOVL      XAR0,#84              ; [CPU_] |2463| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2463| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2463| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2463| 
        MOVL      XAR4,XAR1             ; [CPU_] |2463| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_sprintf")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2463| 
        ; call occurs [#_sprintf] ; [] |2463| 
        MOVL      XAR4,XAR1             ; [CPU_] |2463| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_scia_puts")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2465| 
        ; call occurs [#_scia_puts] ; [] |2465| 
        MOVL      XAR0,#40              ; [CPU_] |2465| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2467,column 11,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |2467| 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2461| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2468,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[55]          ; [CPU_] |2468| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2468| 
        CMPL      ACC,XAR6              ; [CPU_] |2468| 
        B         $C$L404,NEQ           ; [CPU_] |2468| 
        ; branchcc occurs ; [] |2468| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2469,column 8,is_stmt,isa 0
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_update_units")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2469| 
        ; call occurs [#_update_units] ; [] |2469| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2471,column 8,is_stmt,isa 0
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2471| 
        ; call occurs [#_ad7738_setcal] ; [] |2471| 
        MOVL      XAR0,#76              ; [CPU_] |2471| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2471| 
	.dwpsn	file "../Source/prod.c",line 2472,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |2472| 
        MOVL      XAR4,ACC              ; [CPU_] |2472| 
        MOVL      *-SP[62],ACC          ; [CPU_] |2472| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2472| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2472| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2472| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |2472| 
	.dwpsn	file "../Source/prod.c",line 2473,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2473| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2473| 
        ; call occurs [#_ad7738_resetvall] ; [] |2473| 
 clrc INTM
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2467,column 19,is_stmt,isa 0
        INC       *-SP[56]              ; [CPU_] |2467| 
        ADDB      XAR1,#10              ; [CPU_] |2467| 
        MOV       AL,*-SP[56]           ; [CPU_] |2467| 
        CMPB      AL,#4                 ; [CPU_] |2467| 
        B         $C$L403,LO            ; [CPU_] |2467| 
        ; branchcc occurs ; [] |2467| 
        B         $C$L635,UNC           ; [CPU_] |2467| 
        ; branch occurs ; [] |2467| 
$C$L405:    
	.dwpsn	file "../Source/prod.c",line 2454,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2454| 
	.dwpsn	file "../Source/prod.c",line 2456,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |2456| 
        ; branch occurs ; [] |2456| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2210,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2210| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2210| 
        MOVL      XAR0,#84              ; [CPU_] |2210| 
        ADD       AL,*-SP[55]           ; [CPU_] |2210| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2210| 
        MOV       *-SP[3],AL            ; [CPU_] |2210| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2210| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2210| 
        MOV       *-SP[47],AL           ; [CPU_] |2210| 
        MOVL      XAR4,XAR1             ; [CPU_] |2210| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_sprintf")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2210| 
        ; call occurs [#_sprintf] ; [] |2210| 
	.dwpsn	file "../Source/prod.c",line 2212,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2212| 
        MOV       AL,#1024              ; [CPU_] |2212| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2212| 
	.dwpsn	file "../Source/prod.c",line 2210,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2210| 
	.dwpsn	file "../Source/prod.c",line 2212,column 6,is_stmt,isa 0
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2212| 
        ; call occurs [#_scia_getparam] ; [] |2212| 
        MOVZ      AR6,AL                ; [CPU_] |2212| 
        CMPB      AL,#15                ; [CPU_] |2212| 
        B         $C$L407,LOS           ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
	.dwpsn	file "../Source/prod.c",line 2216,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2216| 
        MOVB      XAR0,#15              ; [CPU_] |2216| 
	.dwpsn	file "../Source/prod.c",line 2215,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2215| 
	.dwpsn	file "../Source/prod.c",line 2216,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2216| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2218,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2218| 
        MOVB      AL,#152               ; [CPU_] |2218| 
        MOV       T,*-SP[55]            ; [CPU_] |2218| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2218| 
        MOVL      XAR0,#86              ; [CPU_] |2218| 
        MPYU      ACC,T,AL              ; [CPU_] |2218| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2218| 
        ADDL      ACC,XAR7              ; [CPU_] |2218| 
        ADDB      ACC,#98               ; [CPU_] |2218| 
        MOVL      XAR1,ACC              ; [CPU_] |2218| 
        MOVL      XAR4,ACC              ; [CPU_] |2218| 
        MOVB      AH,#1                 ; [CPU_] |2218| 
        ADD       AH,AR6                ; [CPU_] |2218| 
        MOVU      ACC,AH                ; [CPU_] |2218| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_memcpy")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2218| 
        ; call occurs [#_memcpy] ; [] |2218| 
        MOVL      XAR0,#86              ; [CPU_] |2218| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2218| 
	.dwpsn	file "../Source/prod.c",line 2220,column 6,is_stmt,isa 0
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_scia_puts")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2220| 
        ; call occurs [#_scia_puts] ; [] |2220| 
	.dwpsn	file "../Source/prod.c",line 2221,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2221| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_scia_puts")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2221| 
        ; call occurs [#_scia_puts] ; [] |2221| 
	.dwpsn	file "../Source/prod.c",line 2224,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2224| 
        MOV       AL,*-SP[47]           ; [CPU_] |2224| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2224| 
        MOV       *-SP[3],AL            ; [CPU_] |2224| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2224| 
	.dwpsn	file "../Source/prod.c",line 2227,column 6,is_stmt,isa 0
        B         $C$L340,UNC           ; [CPU_] |2227| 
        ; branch occurs ; [] |2227| 
$C$L408:    
	.dwpsn	file "../Source/prod.c",line 2521,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2521| 
        MOVB      AL,#152               ; [CPU_] |2521| 
        MOV       T,*-SP[55]            ; [CPU_] |2521| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2521| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2521| 
        MPYU      ACC,T,AL              ; [CPU_] |2521| 
        MOVB      XAR0,#124             ; [CPU_] |2521| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2521| 
        ADDL      ACC,XAR6              ; [CPU_] |2521| 
        MOVL      XAR1,ACC              ; [CPU_] |2521| 
        MOVB      AL,#1                 ; [CPU_] |2521| 
        ADD       AL,*-SP[55]           ; [CPU_] |2521| 
        MOV       *-SP[47],AL           ; [CPU_] |2521| 
        MOV       *-SP[3],AL            ; [CPU_] |2521| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2521| 
        MOVL      XAR0,#68              ; [CPU_] |2521| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2521| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2521| 
        MOV       ACC,AL << 1           ; [CPU_] |2521| 
        ADDL      ACC,XAR6              ; [CPU_] |2521| 
        MOVL      XAR4,ACC              ; [CPU_] |2521| 
        MOVL      XAR0,#84              ; [CPU_] |2521| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2521| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2521| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2521| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_sprintf")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2521| 
        ; call occurs [#_sprintf] ; [] |2521| 
        MOVL      XAR0,#84              ; [CPU_] |2521| 
	.dwpsn	file "../Source/prod.c",line 2523,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2523| 
	.dwpsn	file "../Source/prod.c",line 2521,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2521| 
	.dwpsn	file "../Source/prod.c",line 2523,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2523| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2523| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2523| 
        ; call occurs [#_scia_getparam] ; [] |2523| 
        MOVL      XAR0,#86              ; [CPU_] |2523| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2523,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2523| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_strtod")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2524,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2524| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2524| 
        MOVL      XAR0,#86              ; [CPU_] |2524| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2524| 
	.dwpsn	file "../Source/prod.c",line 2525,column 6,is_stmt,isa 0
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_scia_puts")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2525| 
        ; call occurs [#_scia_puts] ; [] |2525| 
	.dwpsn	file "../Source/prod.c",line 2526,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2526| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2526| 
        ; call occurs [#_scia_puts] ; [] |2526| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2528| 
        MOVL      XAR0,#84              ; [CPU_] |2528| 
        MOV       AL,*-SP[47]           ; [CPU_] |2528| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2528| 
        MOV       *-SP[3],AL            ; [CPU_] |2528| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2528| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_sprintf")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2528| 
        ; call occurs [#_sprintf] ; [] |2528| 
        MOVL      XAR0,#84              ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2529| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2529| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2529| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2529| 
        ; call occurs [#_scia_getparam] ; [] |2529| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_strtod")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2530,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2530| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2530| 
        MOVL      XAR0,#86              ; [CPU_] |2530| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2530| 
	.dwpsn	file "../Source/prod.c",line 2531,column 6,is_stmt,isa 0
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_scia_puts")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2531| 
        ; call occurs [#_scia_puts] ; [] |2531| 
	.dwpsn	file "../Source/prod.c",line 2532,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2532| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2532| 
        ; call occurs [#_scia_puts] ; [] |2532| 
	.dwpsn	file "../Source/prod.c",line 2535,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2535| 
        MOVB      XAR0,#228             ; [CPU_] |2535| 
        MOV       AL,*-SP[47]           ; [CPU_] |2535| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2535| 
        MOV       *-SP[3],AL            ; [CPU_] |2535| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2535| 
        MOVB      XAR0,#230             ; [CPU_] |2535| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2535| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2535| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2535| 
$C$L409:    
        MOVL      XAR0,#84              ; [CPU_] |2535| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2535| 
        MOVL      XAR4,XAR1             ; [CPU_] |2535| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_sprintf")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2535| 
        ; call occurs [#_sprintf] ; [] |2535| 
        MOVL      XAR4,XAR1             ; [CPU_] |2535| 
	.dwpsn	file "../Source/prod.c",line 2539,column 6,is_stmt,isa 0
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_scia_puts")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2539| 
        ; call occurs [#_scia_puts] ; [] |2539| 
$C$L410:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2542,column 6,is_stmt,isa 0
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2542| 
        ; call occurs [#_ad7738_setcal] ; [] |2542| 
	.dwpsn	file "../Source/prod.c",line 2544,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2544| 
        ; branch occurs ; [] |2544| 
$C$L411:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[55]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2484,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2484| 
        MOV       AL,*-SP[47]           ; [CPU_] |2484| 
        MOVL      XAR0,#84              ; [CPU_] |2484| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2484| 
        MOV       *-SP[3],AL            ; [CPU_] |2484| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2484| 
        MOVL      XAR4,XAR1             ; [CPU_] |2484| 
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_sprintf")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2484| 
        ; call occurs [#_sprintf] ; [] |2484| 
	.dwpsn	file "../Source/prod.c",line 2485,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2485| 
	.dwpsn	file "../Source/prod.c",line 2484,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2484| 
	.dwpsn	file "../Source/prod.c",line 2485,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2485| 
        MOV       AL,#1024              ; [CPU_] |2485| 
        MOVL      XAR5,XAR1             ; [CPU_] |2485| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2485| 
        ; call occurs [#_scia_getparam] ; [] |2485| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_strtod")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2487,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2487| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_scia_puts")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2487| 
        ; call occurs [#_scia_puts] ; [] |2487| 
	.dwpsn	file "../Source/prod.c",line 2489,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2489| 
        MOV       AH,#0                 ; [CPU_] |2489| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2489| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2489| 
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2489| 
        ; call occurs [#FS$$CMP] ; [] |2489| 
        CMPB      AL,#0                 ; [CPU_] |2489| 
        B         $C$L415,EQ            ; [CPU_] |2489| 
        ; branchcc occurs ; [] |2489| 
	.dwpsn	file "../Source/prod.c",line 2493,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2493| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_scia_puts")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2493| 
        ; call occurs [#_scia_puts] ; [] |2493| 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2494| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2494| 
        MOVB      AL,#152               ; [CPU_] |2494| 
        MOV       T,*-SP[55]            ; [CPU_] |2494| 
        MPYU      ACC,T,AL              ; [CPU_] |2494| 
        ADDL      ACC,XAR6              ; [CPU_] |2494| 
        MOVL      XAR1,ACC              ; [CPU_] |2494| 
        MOVB      XAR0,#224             ; [CPU_] |2494| 
	.dwpsn	file "../Source/prod.c",line 2497,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2497| 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2494| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2494| 
	.dwpsn	file "../Source/prod.c",line 2497,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2497| 
        MOV       AL,*-SP[47]           ; [CPU_] |2497| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2497| 
        MOV       *-SP[3],AL            ; [CPU_] |2497| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2497| 
        MOVL      XAR0,#84              ; [CPU_] |2497| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2497| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2497| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_sprintf")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2497| 
        ; call occurs [#_sprintf] ; [] |2497| 
        MOVL      XAR0,#84              ; [CPU_] |2497| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2497| 
	.dwpsn	file "../Source/prod.c",line 2499,column 6,is_stmt,isa 0
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_scia_puts")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2499| 
        ; call occurs [#_scia_puts] ; [] |2499| 
	.dwpsn	file "../Source/prod.c",line 2495,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2495| 
	.dwpsn	file "../Source/prod.c",line 2501,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2501| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2501| 
        CMPB      AL,#247               ; [CPU_] |2501| 
        B         $C$L635,NEQ           ; [CPU_] |2501| 
        ; branchcc occurs ; [] |2501| 
	.dwpsn	file "../Source/prod.c",line 2503,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2503| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2503| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2503| 
        MOV       AL,#0                 ; [CPU_] |2503| 
        MOV       AH,#17096             ; [CPU_] |2503| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2503| 
        ; call occurs [#FS$$DIV] ; [] |2503| 
        MOVB      XAR0,#126             ; [CPU_] |2503| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2503| 
        MOVL      XAR0,#40              ; [CPU_] |2503| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2503| 
	.dwpsn	file "../Source/prod.c",line 2506,column 12,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |2506| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2507,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[55]          ; [CPU_] |2507| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2507| 
        CMPL      ACC,XAR6              ; [CPU_] |2507| 
        B         $C$L414,NEQ           ; [CPU_] |2507| 
        ; branchcc occurs ; [] |2507| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2510,column 9,is_stmt,isa 0
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2510| 
        ; call occurs [#_ad7738_setcal] ; [] |2510| 
        MOVL      XAR0,#76              ; [CPU_] |2510| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2510| 
	.dwpsn	file "../Source/prod.c",line 2511,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |2511| 
        MOVL      XAR4,ACC              ; [CPU_] |2511| 
        MOVL      *-SP[62],ACC          ; [CPU_] |2511| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2511| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2511| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2511| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |2511| 
	.dwpsn	file "../Source/prod.c",line 2512,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2512| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2512| 
        ; call occurs [#_ad7738_resetvall] ; [] |2512| 
 clrc INTM
$C$L414:    
	.dwpsn	file "../Source/prod.c",line 2506,column 20,is_stmt,isa 0
        INC       *-SP[56]              ; [CPU_] |2506| 
        ADDB      XAR1,#10              ; [CPU_] |2506| 
        MOV       AL,*-SP[56]           ; [CPU_] |2506| 
        CMPB      AL,#4                 ; [CPU_] |2506| 
        B         $C$L413,LO            ; [CPU_] |2506| 
        ; branchcc occurs ; [] |2506| 
        B         $C$L635,UNC           ; [CPU_] |2506| 
        ; branch occurs ; [] |2506| 
$C$L415:    
	.dwpsn	file "../Source/prod.c",line 2491,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2491| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_scia_puts")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2491| 
        ; call occurs [#_scia_puts] ; [] |2491| 
	.dwpsn	file "../Source/prod.c",line 2483,column 6,is_stmt,isa 0
        B         $C$L412,UNC           ; [CPU_] |2483| 
        ; branch occurs ; [] |2483| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 2199,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2199| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_scia_puts")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2199| 
        ; call occurs [#_scia_puts] ; [] |2199| 
	.dwpsn	file "../Source/prod.c",line 2189,column 5,is_stmt,isa 0
        B         $C$L356,UNC           ; [CPU_] |2189| 
        ; branch occurs ; [] |2189| 
$C$L417:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3161,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3161| 
        B         $C$L626,LO            ; [CPU_] |3161| 
        ; branchcc occurs ; [] |3161| 
	.dwpsn	file "../Source/prod.c",line 3164,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3164| 
        CMPB      AL,#83                ; [CPU_] |3164| 
        B         $C$L418,GT            ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        CMPB      AL,#83                ; [CPU_] |3164| 
        B         $C$L422,EQ            ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        CMPB      AL,#73                ; [CPU_] |3164| 
        B         $C$L427,EQ            ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        CMPB      AL,#76                ; [CPU_] |3164| 
        B         $C$L431,EQ            ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        CMPB      AL,#80                ; [CPU_] |3164| 
        B         $C$L424,EQ            ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        B         $C$L626,UNC           ; [CPU_] |3164| 
        ; branch occurs ; [] |3164| 
$C$L418:    
        CMPB      AL,#84                ; [CPU_] |3164| 
        B         $C$L420,EQ            ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        CMPB      AL,#86                ; [CPU_] |3164| 
        B         $C$L626,NEQ           ; [CPU_] |3164| 
        ; branchcc occurs ; [] |3164| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3192,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3192| 
        B         $C$L419,LOS           ; [CPU_] |3192| 
        ; branchcc occurs ; [] |3192| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#64              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L419,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3192,column 6,is_stmt,isa 0
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_atoi")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3192| 
        ; call occurs [#_atoi] ; [] |3192| 
        CMPB      AL,#4                 ; [CPU_] |3192| 
        B         $C$L419,GT            ; [CPU_] |3192| 
        ; branchcc occurs ; [] |3192| 
        CMPB      AL,#0                 ; [CPU_] |3192| 
        B         $C$L419,LEQ           ; [CPU_] |3192| 
        ; branchcc occurs ; [] |3192| 
	.dwpsn	file "../Source/prod.c",line 3194,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3194| 
        MOVL      XAR0,#76              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3194| 
        ADD       ACC,AR5               ; [CPU_] |3194| 
        MOVL      XAR4,ACC              ; [CPU_] |3194| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3194| 
	.dwpsn	file "../Source/prod.c",line 3195,column 6,is_stmt,isa 0
        B         $C$L429,UNC           ; [CPU_] |3195| 
        ; branch occurs ; [] |3195| 
$C$L419:    
	.dwpsn	file "../Source/prod.c",line 3196,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3196| 
        B         $C$L429,UNC           ; [CPU_] |3196| 
        ; branch occurs ; [] |3196| 
$C$L420:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3168,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3168| 
        B         $C$L421,LOS           ; [CPU_] |3168| 
        ; branchcc occurs ; [] |3168| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#64              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L421,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3168,column 6,is_stmt,isa 0
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_atoi")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3168| 
        ; call occurs [#_atoi] ; [] |3168| 
        CMPB      AL,#4                 ; [CPU_] |3168| 
        MOVZ      AR4,AL                ; [CPU_] |3168| 
        B         $C$L421,GT            ; [CPU_] |3168| 
        ; branchcc occurs ; [] |3168| 
        CMPB      AL,#0                 ; [CPU_] |3168| 
        B         $C$L421,LEQ           ; [CPU_] |3168| 
        ; branchcc occurs ; [] |3168| 
        MOVL      XAR0,#76              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3170,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3170| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3170| 
	.dwpsn	file "../Source/prod.c",line 3173,column 6,is_stmt,isa 0
        B         $C$L428,UNC           ; [CPU_] |3173| 
        ; branch occurs ; [] |3173| 
$C$L421:    
	.dwpsn	file "../Source/prod.c",line 3174,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3174| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3174| 
        ; call occurs [#_ad7738_resettare] ; [] |3174| 
	.dwpsn	file "../Source/prod.c",line 3175,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3175| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3175| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3175| 
	.dwpsn	file "../Source/prod.c",line 3176,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3176| 
        B         $C$L429,UNC           ; [CPU_] |3176| 
        ; branch occurs ; [] |3176| 
$C$L422:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3202,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3202| 
        B         $C$L423,LOS           ; [CPU_] |3202| 
        ; branchcc occurs ; [] |3202| 
        MOVL      ACC,XAR4              ; [CPU_] |3202| 
        MOVL      XAR0,#64              ; [CPU_] |3202| 
        ADDB      ACC,#2                ; [CPU_] |3202| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3202| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3202| 
        CMPB      AL,#67                ; [CPU_] |3202| 
        B         $C$L423,NEQ           ; [CPU_] |3202| 
        ; branchcc occurs ; [] |3202| 
	.dwpsn	file "../Source/prod.c",line 3203,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3203| 
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3203| 
        ; call occurs [#_shunt_switch] ; [] |3203| 
	.dwpsn	file "../Source/prod.c",line 3204,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3204| 
	.dwpsn	file "../Source/prod.c",line 3205,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3205| 
        ; branch occurs ; [] |3205| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3206,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3206| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3206| 
        ; call occurs [#_shunt_switch] ; [] |3206| 
	.dwpsn	file "../Source/prod.c",line 3207,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3207| 
        B         $C$L634,UNC           ; [CPU_] |3207| 
        ; branch occurs ; [] |3207| 
$C$L424:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3182,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3182| 
        B         $C$L426,LOS           ; [CPU_] |3182| 
        ; branchcc occurs ; [] |3182| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#64              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L426,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3182,column 6,is_stmt,isa 0
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_atoi")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3182| 
        ; call occurs [#_atoi] ; [] |3182| 
        CMPB      AL,#4                 ; [CPU_] |3182| 
        B         $C$L426,GT            ; [CPU_] |3182| 
        ; branchcc occurs ; [] |3182| 
        CMPB      AL,#0                 ; [CPU_] |3182| 
        B         $C$L426,LEQ           ; [CPU_] |3182| 
        ; branchcc occurs ; [] |3182| 
	.dwpsn	file "../Source/prod.c",line 3184,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3184| 
        MOVL      XAR0,#76              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3184| 
        ADD       ACC,AR5               ; [CPU_] |3184| 
        MOVL      XAR4,ACC              ; [CPU_] |3184| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3184| 
$C$L425:    
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3184| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3184| 
	.dwpsn	file "../Source/prod.c",line 3185,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3185| 
        ; branch occurs ; [] |3185| 
$C$L426:    
	.dwpsn	file "../Source/prod.c",line 3186,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3186| 
        B         $C$L425,UNC           ; [CPU_] |3186| 
        ; branch occurs ; [] |3186| 
$C$L427:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3221,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3221| 
        B         $C$L430,LOS           ; [CPU_] |3221| 
        ; branchcc occurs ; [] |3221| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#64              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L430,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3221,column 6,is_stmt,isa 0
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_atoi")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3221| 
        ; call occurs [#_atoi] ; [] |3221| 
        CMPB      AL,#2                 ; [CPU_] |3221| 
        B         $C$L430,GT            ; [CPU_] |3221| 
        ; branchcc occurs ; [] |3221| 
        CMPB      AL,#0                 ; [CPU_] |3221| 
        B         $C$L430,LEQ           ; [CPU_] |3221| 
        ; branchcc occurs ; [] |3221| 
	.dwpsn	file "../Source/prod.c",line 3223,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3223| 
        ADD       AR6,AL                ; [CPU_] |3223| 
        MOVL      XAR0,#76              ; [CPU_] |3223| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3223| 
        ADD       ACC,AR6               ; [CPU_] |3223| 
$C$L428:    
        MOVL      XAR1,ACC              ; [CPU_] |3223| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3223| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3223| 
        ; call occurs [#_ad7738_resettare] ; [] |3223| 
	.dwpsn	file "../Source/prod.c",line 3224,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3224| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3224| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3224| 
	.dwpsn	file "../Source/prod.c",line 3225,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3225| 
$C$L429:    
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3225| 
        ; call occurs [#_ad7738_resetvall] ; [] |3225| 
	.dwpsn	file "../Source/prod.c",line 3226,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3226| 
        ; branch occurs ; [] |3226| 
$C$L430:    
	.dwpsn	file "../Source/prod.c",line 3227,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3227| 
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3227| 
        ; call occurs [#_ad7738_resettare] ; [] |3227| 
	.dwpsn	file "../Source/prod.c",line 3228,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3228| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3228| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3228| 
	.dwpsn	file "../Source/prod.c",line 3229,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3229| 
        B         $C$L429,UNC           ; [CPU_] |3229| 
        ; branch occurs ; [] |3229| 
$C$L431:    
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3213,column 6,is_stmt,isa 0
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_atoi")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3213| 
        ; call occurs [#_atoi] ; [] |3213| 
	.dwpsn	file "../Source/prod.c",line 3216,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3216| 
        MOV       *-SP[56],AL           ; [CPU_] |3216| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3216| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3216| 
	.dwpsn	file "../Source/prod.c",line 3217,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3217| 
        ; branch occurs ; [] |3217| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1164,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1164| 
        CMPB      AL,#76                ; [CPU_] |1164| 
        B         $C$L433,GT            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
        CMPB      AL,#76                ; [CPU_] |1164| 
        B         $C$L441,EQ            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
        CMPB      AL,#65                ; [CPU_] |1164| 
        B         $C$L434,EQ            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
        CMPB      AL,#68                ; [CPU_] |1164| 
        B         $C$L445,EQ            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
        B         $C$L626,UNC           ; [CPU_] |1164| 
        ; branch occurs ; [] |1164| 
$C$L433:    
        CMPB      AL,#79                ; [CPU_] |1164| 
        B         $C$L444,EQ            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
        CMPB      AL,#83                ; [CPU_] |1164| 
        B         $C$L442,EQ            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
        B         $C$L626,UNC           ; [CPU_] |1164| 
        ; branch occurs ; [] |1164| 
$C$L434:    
	.dwpsn	file "../Source/prod.c",line 1169,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1169| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1170| 
	.dwpsn	file "../Source/prod.c",line 1169,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1169| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |1170| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1170| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1170| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1170| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1170| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1170| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1170| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1170| 
        MOVL      XAR4,XAR1             ; [CPU_] |1170| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_sprintf")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1170| 
        ; call occurs [#_sprintf] ; [] |1170| 
	.dwpsn	file "../Source/prod.c",line 1172,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1172| 
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_scia_puts")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1172| 
        ; call occurs [#_scia_puts] ; [] |1172| 
	.dwpsn	file "../Source/prod.c",line 1173,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1173| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1173| 
        LSR       AL,8                  ; [CPU_] |1173| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1173| 
        MOV       *-SP[3],AL            ; [CPU_] |1173| 
        IN        AL,*(04004H)          ; [CPU_] |1173| 
        MOVL      XAR4,XAR1             ; [CPU_] |1173| 
        ANDB      AL,#0xff              ; [CPU_] |1173| 
        MOV       *-SP[4],AL            ; [CPU_] |1173| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_sprintf")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1173| 
        ; call occurs [#_sprintf] ; [] |1173| 
	.dwpsn	file "../Source/prod.c",line 1175,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1175| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_scia_puts")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1175| 
        ; call occurs [#_scia_puts] ; [] |1175| 
	.dwpsn	file "../Source/prod.c",line 1176,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1176| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1176| 
        MOVL      XAR0,#84              ; [CPU_] |1176| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1176| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1176| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1176| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1176| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_sprintf")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1176| 
        ; call occurs [#_sprintf] ; [] |1176| 
        MOVL      XAR0,#84              ; [CPU_] |1176| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1176| 
	.dwpsn	file "../Source/prod.c",line 1177,column 6,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1177| 
        ; call occurs [#_scia_puts] ; [] |1177| 
	.dwpsn	file "../Source/prod.c",line 1178,column 6,is_stmt,isa 0
        MOVL      XAR0,#74              ; [CPU_] |1178| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1178| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1178| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1178| 
        MOVL      XAR0,#84              ; [CPU_] |1178| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1178| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1178| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_sprintf")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1178| 
        ; call occurs [#_sprintf] ; [] |1178| 
        MOVL      XAR0,#84              ; [CPU_] |1178| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1178| 
	.dwpsn	file "../Source/prod.c",line 1180,column 6,is_stmt,isa 0
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_scia_puts")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1180| 
        ; call occurs [#_scia_puts] ; [] |1180| 
	.dwpsn	file "../Source/prod.c",line 1182,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1182| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1182| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1182| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1182| 
        MOVL      XAR0,#70              ; [CPU_] |1182| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1182| 
        ADDL      ACC,XAR6              ; [CPU_] |1182| 
        MOVL      XAR4,ACC              ; [CPU_] |1182| 
        MOVL      XAR0,#84              ; [CPU_] |1182| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1182| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1182| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1182| 
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_sprintf")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1182| 
        ; call occurs [#_sprintf] ; [] |1182| 
        MOVL      XAR0,#84              ; [CPU_] |1182| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1182| 
	.dwpsn	file "../Source/prod.c",line 1184,column 6,is_stmt,isa 0
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_scia_puts")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1184| 
        ; call occurs [#_scia_puts] ; [] |1184| 
	.dwpsn	file "../Source/prod.c",line 1185,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1185| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1185| 
        B         $C$L435,EQ            ; [CPU_] |1185| 
        ; branchcc occurs ; [] |1185| 
        MOVB      XAR0,#34              ; [CPU_] |1185| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1185| 
        CMPB      AL,#1                 ; [CPU_] |1185| 
        B         $C$L436,NEQ           ; [CPU_] |1185| 
        ; branchcc occurs ; [] |1185| 
$C$L435:    
	.dwpsn	file "../Source/prod.c",line 1187,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1187| 
        MOVL      XAR0,#72              ; [CPU_] |1187| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1187| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1187| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1187| 
        ADDL      ACC,XAR6              ; [CPU_] |1187| 
        MOVL      XAR4,ACC              ; [CPU_] |1187| 
        MOVL      XAR0,#84              ; [CPU_] |1187| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1187| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1187| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1187| 
        MOVL      XAR4,XAR1             ; [CPU_] |1187| 
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_sprintf")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1187| 
        ; call occurs [#_sprintf] ; [] |1187| 
        MOVL      XAR4,XAR1             ; [CPU_] |1187| 
	.dwpsn	file "../Source/prod.c",line 1189,column 7,is_stmt,isa 0
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1189| 
        ; call occurs [#_scia_puts] ; [] |1189| 
$C$L436:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1191,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1191| 
        B         $C$L437,NEQ           ; [CPU_] |1191| 
        ; branchcc occurs ; [] |1191| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1191| 
        B         $C$L438,UNC           ; [CPU_] |1191| 
        ; branch occurs ; [] |1191| 
$C$L437:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1191| 
$C$L438:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1191| 
        MOVL      XAR0,#84              ; [CPU_] |1191| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1191| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1191| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1191| 
        MOVL      XAR4,XAR1             ; [CPU_] |1191| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_sprintf")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1191| 
        ; call occurs [#_sprintf] ; [] |1191| 
        MOVL      XAR4,XAR1             ; [CPU_] |1191| 
	.dwpsn	file "../Source/prod.c",line 1193,column 6,is_stmt,isa 0
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_scia_puts")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1193| 
        ; call occurs [#_scia_puts] ; [] |1193| 
	.dwpsn	file "../Source/prod.c",line 1195,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1195| 
        MOVB      XAR0,#38              ; [CPU_] |1195| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1195| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1195| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1195| 
        MOVL      XAR0,#84              ; [CPU_] |1195| 
        MOV       *-SP[3],AL            ; [CPU_] |1195| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1195| 
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_sprintf")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1195| 
        ; call occurs [#_sprintf] ; [] |1195| 
        MOVL      XAR0,#84              ; [CPU_] |1195| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1195| 
	.dwpsn	file "../Source/prod.c",line 1197,column 6,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_scia_puts")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1197| 
        ; call occurs [#_scia_puts] ; [] |1197| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1199,column 11,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |1199| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1200,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1200| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_scia_puts")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1200| 
        ; call occurs [#_scia_puts] ; [] |1200| 
        MOV       AL,*-SP[56]           ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_print_channel")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1201| 
        ; call occurs [#_print_channel] ; [] |1201| 
	.dwpsn	file "../Source/prod.c",line 1202,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1202| 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_print_sensor")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1202| 
        ; call occurs [#_print_sensor] ; [] |1202| 
	.dwpsn	file "../Source/prod.c",line 1199,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1199| 
        INC       *-SP[56]              ; [CPU_] |1199| 
        MOV       AL,*-SP[56]           ; [CPU_] |1199| 
        CMPB      AL,#4                 ; [CPU_] |1199| 
        B         $C$L439,LO            ; [CPU_] |1199| 
        ; branchcc occurs ; [] |1199| 
	.dwpsn	file "../Source/prod.c",line 1205,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1205| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_scia_puts")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1205| 
        ; call occurs [#_scia_puts] ; [] |1205| 
	.dwpsn	file "../Source/prod.c",line 1206,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1206| 
        MOVL      XAR0,#3214            ; [CPU_] |1206| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1206| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1206| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1206| 
        MOVL      XAR0,#84              ; [CPU_] |1206| 
        MOV       *-SP[3],AL            ; [CPU_] |1206| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1206| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_sprintf")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1206| 
        ; call occurs [#_sprintf] ; [] |1206| 
        MOVL      XAR0,#84              ; [CPU_] |1206| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1206| 
	.dwpsn	file "../Source/prod.c",line 1208,column 6,is_stmt,isa 0
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_puts")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1208| 
        ; call occurs [#_scia_puts] ; [] |1208| 
        MOVL      XAR0,#40              ; [CPU_] |1208| 
	.dwpsn	file "../Source/prod.c",line 1209,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1209| 
	.dwpsn	file "../Source/prod.c",line 1208,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1208| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1210,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1210| 
        MOVB      AL,#65                ; [CPU_] |1210| 
        MOVL      XAR0,#84              ; [CPU_] |1210| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1210| 
        ADD       AL,*-SP[47]           ; [CPU_] |1210| 
        MOV       *-SP[3],AL            ; [CPU_] |1210| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1210| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1210| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1210| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_sprintf")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1210| 
        ; call occurs [#_sprintf] ; [] |1210| 
        MOVL      XAR0,#84              ; [CPU_] |1210| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1210| 
	.dwpsn	file "../Source/prod.c",line 1212,column 7,is_stmt,isa 0
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1212| 
        ; call occurs [#_scia_puts] ; [] |1212| 
	.dwpsn	file "../Source/prod.c",line 1209,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1209| 
	.dwpsn	file "../Source/prod.c",line 1212,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1212| 
	.dwpsn	file "../Source/prod.c",line 1209,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1209| 
        B         $C$L440,LT            ; [CPU_] |1209| 
        ; branchcc occurs ; [] |1209| 
	.dwpsn	file "../Source/prod.c",line 1214,column 6,is_stmt,isa 0
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_print_vfd")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1214| 
        ; call occurs [#_print_vfd] ; [] |1214| 
	.dwpsn	file "../Source/prod.c",line 1215,column 6,is_stmt,isa 0
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_print_dac")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1215| 
        ; call occurs [#_print_dac] ; [] |1215| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1216,column 6,is_stmt,isa 0
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_print_limits")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1216| 
        ; call occurs [#_print_limits] ; [] |1216| 
	.dwpsn	file "../Source/prod.c",line 1217,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |1217| 
        ; branch occurs ; [] |1217| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1221,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1221| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1221| 
        ; call occurs [#_scia_puts] ; [] |1221| 
	.dwpsn	file "../Source/prod.c",line 1223,column 11,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |1223| 
$C$L443:    
	.dwpsn	file "../Source/prod.c",line 1224,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1224| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1224| 
        MOVL      XAR0,#84              ; [CPU_] |1224| 
        ADD       AL,*-SP[55]           ; [CPU_] |1224| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1224| 
        MOVZ      AR1,AL                ; [CPU_] |1224| 
        MOV       *-SP[3],AL            ; [CPU_] |1224| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1224| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_sprintf")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1224| 
        ; call occurs [#_sprintf] ; [] |1224| 
        MOVL      XAR0,#84              ; [CPU_] |1224| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1224| 
	.dwpsn	file "../Source/prod.c",line 1225,column 7,is_stmt,isa 0
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_puts")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1225| 
        ; call occurs [#_scia_puts] ; [] |1225| 
        MOV       AL,*-SP[55]           ; [CPU_] |1225| 
	.dwpsn	file "../Source/prod.c",line 1226,column 7,is_stmt,isa 0
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_print_sensor")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1226| 
        ; call occurs [#_print_sensor] ; [] |1226| 
	.dwpsn	file "../Source/prod.c",line 1223,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1223| 
        MOV       *-SP[55],AR1          ; [CPU_] |1223| 
        CMPB      AL,#20                ; [CPU_] |1223| 
        B         $C$L443,LO            ; [CPU_] |1223| 
        ; branchcc occurs ; [] |1223| 
        B         $C$L635,UNC           ; [CPU_] |1223| 
        ; branch occurs ; [] |1223| 
$C$L444:    
	.dwpsn	file "../Source/prod.c",line 1237,column 6,is_stmt,isa 0
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_print_dac")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1237| 
        ; call occurs [#_print_dac] ; [] |1237| 
	.dwpsn	file "../Source/prod.c",line 1238,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |1238| 
        ; branch occurs ; [] |1238| 
$C$L445:    
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_print_vfd")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1232| 
        ; call occurs [#_print_vfd] ; [] |1232| 
	.dwpsn	file "../Source/prod.c",line 1233,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |1233| 
        ; branch occurs ; [] |1233| 
$C$L446:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2781,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2781| 
        B         $C$L626,LO            ; [CPU_] |2781| 
        ; branchcc occurs ; [] |2781| 
	.dwpsn	file "../Source/prod.c",line 2784,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2784| 
        CMPB      AL,#68                ; [CPU_] |2784| 
        B         $C$L447,EQ            ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
        CMPB      AL,#83                ; [CPU_] |2784| 
        B         $C$L453,EQ            ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
        B         $C$L626,UNC           ; [CPU_] |2784| 
        ; branch occurs ; [] |2784| 
$C$L447:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2902,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2902| 
        B         $C$L626,LO            ; [CPU_] |2902| 
        ; branchcc occurs ; [] |2902| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#64              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L626,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L626,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2906,column 6,is_stmt,isa 0
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_atoi")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2906| 
        ; call occurs [#_atoi] ; [] |2906| 
        MOV       *-SP[55],AL           ; [CPU_] |2906| 
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2908| 
        CMPB      AL,#4                 ; [CPU_] |2908| 
        B         $C$L626,HIS           ; [CPU_] |2908| 
        ; branchcc occurs ; [] |2908| 
	.dwpsn	file "../Source/prod.c",line 2914,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2914| 
        MOV       *-SP[55],AL           ; [CPU_] |2914| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2914| 
        MOV       T,AL                  ; [CPU_] |2914| 
        MOVB      AL,#12                ; [CPU_] |2914| 
        MPYU      ACC,T,AL              ; [CPU_] |2914| 
        ADDL      ACC,XAR6              ; [CPU_] |2914| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2914| 
        MOVL      XAR1,ACC              ; [CPU_] |2914| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2914| 
        CMPB      AL,#7                 ; [CPU_] |2914| 
        B         $C$L626,NEQ           ; [CPU_] |2914| 
        ; branchcc occurs ; [] |2914| 
        MOVL      XAR0,#62              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_strtod")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2918,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2918| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *-SP[62],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2920,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2920| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2920| 
        MOVL      ACC,XAR6              ; [CPU_] |2920| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2920| 
        ; call occurs [#FS$$CMP] ; [] |2920| 
        CMPB      AL,#0                 ; [CPU_] |2920| 
        B         $C$L626,LT            ; [CPU_] |2920| 
        ; branchcc occurs ; [] |2920| 
        MOV       AL,#0                 ; [CPU_] |2920| 
        MOV       AH,#16672             ; [CPU_] |2920| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2920| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |2920| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2920| 
        ; call occurs [#FS$$CMP] ; [] |2920| 
        CMPB      AL,#0                 ; [CPU_] |2920| 
        B         $C$L626,GT            ; [CPU_] |2920| 
        ; branchcc occurs ; [] |2920| 
	.dwpsn	file "../Source/prod.c",line 2926,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2926| 
        MOV       AH,#0                 ; [CPU_] |2926| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2926| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |2926| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2926| 
        ; call occurs [#FS$$CMP] ; [] |2926| 
        CMPB      AL,#0                 ; [CPU_] |2926| 
        B         $C$L448,GEQ           ; [CPU_] |2926| 
        ; branchcc occurs ; [] |2926| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2926| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2926| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2926| 
        B         $C$L449,UNC           ; [CPU_] |2926| 
        ; branch occurs ; [] |2926| 
$C$L448:    
        MOVL      ACC,*-SP[62]          ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2926| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2926| 
$C$L449:    
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2926| 
        ; call occurs [#FS$$MPY] ; [] |2926| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2926| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2926| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2926| 
        ; call occurs [#FS$$ADD] ; [] |2926| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2926| 
        ; call occurs [#FS$$TOLL] ; [] |2926| 
	.dwpsn	file "../Source/prod.c",line 2933,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2933| 
	.dwpsn	file "../Source/prod.c",line 2926,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2926| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2926| 
	.dwpsn	file "../Source/prod.c",line 2933,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2933| 
        CMP64     ACC:P                 ; [CPU_] |2933| 
        B         $C$L451,LEQ           ; [CPU_] |2933| 
        ; branchcc occurs ; [] |2933| 
	.dwpsn	file "../Source/prod.c",line 2935,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2935| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2935| 
        MOV       *-SP[2],#0            ; [CPU_] |2935| 
        MOV       *-SP[1],#0            ; [CPU_] |2935| 
        MOVL      P,*-SP[32]            ; [CPU_] |2935| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2935| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$991, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2935| 
        ; call occurs [#LL$$CMP] ; [] |2935| 
        CMPB      AL,#0                 ; [CPU_] |2935| 
        B         $C$L450,GEQ           ; [CPU_] |2935| 
        ; branchcc occurs ; [] |2935| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2938| 
        MOV       *-SP[35],AL           ; [CPU_] |2938| 
        B         $C$L452,UNC           ; [CPU_] |2938| 
        ; branch occurs ; [] |2938| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2936| 
	.dwpsn	file "../Source/prod.c",line 2937,column 6,is_stmt,isa 0
        B         $C$L452,UNC           ; [CPU_] |2937| 
        ; branch occurs ; [] |2937| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2934| 
$C$L452:    
        MOV       AH,*-SP[55]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2941,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2941| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2941| 
        ; call occurs [#_mcbsp_xmit] ; [] |2941| 
	.dwpsn	file "../Source/prod.c",line 2942,column 6,is_stmt,isa 0
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_latch_dac")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2942| 
        ; call occurs [#_latch_dac] ; [] |2942| 
	.dwpsn	file "../Source/prod.c",line 2944,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2944| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2944| 
        MOVL      XAR0,#84              ; [CPU_] |2944| 
        ADD       AL,*-SP[55]           ; [CPU_] |2944| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2944| 
        MOV       *-SP[3],AL            ; [CPU_] |2944| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2944| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2944| 
        MOV       AL,*-SP[35]           ; [CPU_] |2944| 
        MOV       *-SP[7],AL            ; [CPU_] |2944| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2944| 
	.dwpsn	file "../Source/prod.c",line 2948,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2948| 
        ; branch occurs ; [] |2948| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2791,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2791| 
        MOVL      XAR0,#84              ; [CPU_] |2791| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2791| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2791| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2791| 
        MOVL      XAR4,XAR1             ; [CPU_] |2791| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_sprintf")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2791| 
        ; call occurs [#_sprintf] ; [] |2791| 
	.dwpsn	file "../Source/prod.c",line 2792,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2792| 
	.dwpsn	file "../Source/prod.c",line 2791,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2791| 
	.dwpsn	file "../Source/prod.c",line 2792,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2792| 
        MOV       AL,#1024              ; [CPU_] |2792| 
        MOVL      XAR5,XAR1             ; [CPU_] |2792| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2792| 
        ; call occurs [#_scia_getparam] ; [] |2792| 
	.dwpsn	file "../Source/prod.c",line 2793,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2793| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_atoi")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2793| 
        ; call occurs [#_atoi] ; [] |2793| 
        MOV       *-SP[55],AL           ; [CPU_] |2793| 
	.dwpsn	file "../Source/prod.c",line 2794,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2794| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_puts")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2794| 
        ; call occurs [#_scia_puts] ; [] |2794| 
        MOV       AL,*-SP[55]           ; [CPU_] |2794| 
	.dwpsn	file "../Source/prod.c",line 2796,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2796| 
        CMPB      AL,#4                 ; [CPU_] |2796| 
        B         $C$L468,HIS           ; [CPU_] |2796| 
        ; branchcc occurs ; [] |2796| 
	.dwpsn	file "../Source/prod.c",line 2800,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2800| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2800| 
        ; call occurs [#_scia_puts] ; [] |2800| 
        MOVL      XAR0,#60              ; [CPU_] |2800| 
	.dwpsn	file "../Source/prod.c",line 2804,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2804| 
	.dwpsn	file "../Source/prod.c",line 2800,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2800| 
	.dwpsn	file "../Source/prod.c",line 2804,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2804| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2805,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2805| 
        MOVL      XAR0,#84              ; [CPU_] |2805| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2805| 
        MOV       *-SP[3],AL            ; [CPU_] |2805| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2805| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2805| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2805| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_sprintf")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2805| 
        ; call occurs [#_sprintf] ; [] |2805| 
        MOVL      XAR0,#84              ; [CPU_] |2805| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2805| 
	.dwpsn	file "../Source/prod.c",line 2806,column 7,is_stmt,isa 0
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2806| 
        ; call occurs [#_scia_puts] ; [] |2806| 
	.dwpsn	file "../Source/prod.c",line 2807,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2807| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2807| 
        ; call occurs [#_scia_puts] ; [] |2807| 
	.dwpsn	file "../Source/prod.c",line 2804,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2804| 
	.dwpsn	file "../Source/prod.c",line 2807,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2807| 
	.dwpsn	file "../Source/prod.c",line 2804,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2804| 
        B         $C$L454,LT            ; [CPU_] |2804| 
        ; branchcc occurs ; [] |2804| 
	.dwpsn	file "../Source/prod.c",line 2810,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2810| 
        MOVB      XAR0,#14              ; [CPU_] |2810| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2810| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2810| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2810| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2810| 
        MOVL      XAR0,#84              ; [CPU_] |2810| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2810| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2810| 
        MOVL      XAR4,XAR1             ; [CPU_] |2810| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_sprintf")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2810| 
        ; call occurs [#_sprintf] ; [] |2810| 
	.dwpsn	file "../Source/prod.c",line 2811,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2811| 
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2811| 
        ; call occurs [#_scia_puts] ; [] |2811| 
	.dwpsn	file "../Source/prod.c",line 2812,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2812| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2812| 
        ; call occurs [#_scia_puts] ; [] |2812| 
	.dwpsn	file "../Source/prod.c",line 2813,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2813| 
	.dwpsn	file "../Source/prod.c",line 2812,column 6,is_stmt,isa 0
        MOV       AH,*-SP[55]           ; [CPU_] |2812| 
	.dwpsn	file "../Source/prod.c",line 2813,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2813| 
        DEC       *-SP[55]              ; [CPU_] |2813| 
        MOV       *-SP[47],AH           ; [CPU_] |2813| 
        MOV       *-SP[3],AH            ; [CPU_] |2813| 
        MOVL      XAR4,XAR1             ; [CPU_] |2813| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_sprintf")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2813| 
        ; call occurs [#_sprintf] ; [] |2813| 
	.dwpsn	file "../Source/prod.c",line 2815,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2815| 
        MOVL      XAR4,XAR1             ; [CPU_] |2815| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2815| 
        MOV       AL,#1024              ; [CPU_] |2815| 
        MOVL      XAR5,XAR1             ; [CPU_] |2815| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2815| 
        ; call occurs [#_scia_getparam] ; [] |2815| 
        MOVL      XAR4,XAR1             ; [CPU_] |2815| 
	.dwpsn	file "../Source/prod.c",line 2816,column 6,is_stmt,isa 0
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_atoi")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2816| 
        ; call occurs [#_atoi] ; [] |2816| 
	.dwpsn	file "../Source/prod.c",line 2809,column 6,is_stmt,isa 0
        MOV       *-SP[58],#7           ; [CPU_] |2809| 
	.dwpsn	file "../Source/prod.c",line 2816,column 6,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |2816| 
	.dwpsn	file "../Source/prod.c",line 2817,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2817| 
        B         $C$L455,LO            ; [CPU_] |2817| 
        ; branchcc occurs ; [] |2817| 
        CMPB      AL,#7                 ; [CPU_] |2817| 
        B         $C$L455,EQ            ; [CPU_] |2817| 
        ; branchcc occurs ; [] |2817| 
	.dwpsn	file "../Source/prod.c",line 2819,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2819| 
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2819| 
        ; call occurs [#_scia_puts] ; [] |2819| 
	.dwpsn	file "../Source/prod.c",line 2818,column 7,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |2818| 
$C$L455:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2822,column 6,is_stmt,isa 0
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2822| 
        ; call occurs [#_scia_puts] ; [] |2822| 
	.dwpsn	file "../Source/prod.c",line 2823,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2823| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2823| 
        ; call occurs [#_scia_puts] ; [] |2823| 
	.dwpsn	file "../Source/prod.c",line 2824,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2824| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2824| 
        MOVB      AL,#12                ; [CPU_] |2824| 
        MOV       T,*-SP[55]            ; [CPU_] |2824| 
        MPYU      ACC,T,AL              ; [CPU_] |2824| 
        ADDL      ACC,XAR6              ; [CPU_] |2824| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2824| 
        MOVL      XAR1,ACC              ; [CPU_] |2824| 
        MOV       AL,*-SP[57]           ; [CPU_] |2824| 
	.dwpsn	file "../Source/prod.c",line 2826,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2826| 
	.dwpsn	file "../Source/prod.c",line 2824,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2824| 
	.dwpsn	file "../Source/prod.c",line 2826,column 6,is_stmt,isa 0
        B         $C$L462,EQ            ; [CPU_] |2826| 
        ; branchcc occurs ; [] |2826| 
	.dwpsn	file "../Source/prod.c",line 2828,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2828| 
        B         $C$L457,EQ            ; [CPU_] |2828| 
        ; branchcc occurs ; [] |2828| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2828| 
        B         $C$L457,EQ            ; [CPU_] |2828| 
        ; branchcc occurs ; [] |2828| 
	.dwpsn	file "../Source/prod.c",line 2831,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2831| 
        B         $C$L456,EQ            ; [CPU_] |2831| 
        ; branchcc occurs ; [] |2831| 
        CMPB      AL,#4                 ; [CPU_] |2831| 
        B         $C$L458,NEQ           ; [CPU_] |2831| 
        ; branchcc occurs ; [] |2831| 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2832,column 8,is_stmt,isa 0
        MOV       *-SP[58],#2           ; [CPU_] |2832| 
        B         $C$L458,UNC           ; [CPU_] |2832| 
        ; branch occurs ; [] |2832| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2830,column 8,is_stmt,isa 0
        MOV       *-SP[58],#4           ; [CPU_] |2830| 
$C$L458:    
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2837,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2837| 
        MOV       AL,*-SP[58]           ; [CPU_] |2837| 
        MOVL      XAR0,#84              ; [CPU_] |2837| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2837| 
        MOV       *-SP[3],AL            ; [CPU_] |2837| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2837| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_sprintf")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2837| 
        ; call occurs [#_sprintf] ; [] |2837| 
        MOVL      XAR0,#84              ; [CPU_] |2837| 
	.dwpsn	file "../Source/prod.c",line 2838,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2838| 
	.dwpsn	file "../Source/prod.c",line 2837,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2837| 
	.dwpsn	file "../Source/prod.c",line 2838,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2838| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2838| 
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2838| 
        ; call occurs [#_scia_getparam] ; [] |2838| 
        MOVL      XAR0,#86              ; [CPU_] |2838| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2838| 
	.dwpsn	file "../Source/prod.c",line 2839,column 8,is_stmt,isa 0
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_atoi")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2839| 
        ; call occurs [#_atoi] ; [] |2839| 
        MOVL      XAR0,#86              ; [CPU_] |2839| 
        MOV       *-SP[56],AL           ; [CPU_] |2839| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2840,column 8,is_stmt,isa 0
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2840| 
        ; call occurs [#_scia_puts] ; [] |2840| 
        MOV       AL,*-SP[56]           ; [CPU_] |2840| 
	.dwpsn	file "../Source/prod.c",line 2842,column 9,is_stmt,isa 0
        B         $C$L467,EQ            ; [CPU_] |2842| 
        ; branchcc occurs ; [] |2842| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[56]           ; [CPU_] |2842| 
        B         $C$L467,LO            ; [CPU_] |2842| 
        ; branchcc occurs ; [] |2842| 
	.dwpsn	file "../Source/prod.c",line 2846,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2846| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2846| 
        ; call occurs [#_scia_puts] ; [] |2846| 
	.dwpsn	file "../Source/prod.c",line 2848,column 7,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |2848| 
	.dwpsn	file "../Source/prod.c",line 2846,column 7,is_stmt,isa 0
        MOV       AL,*-SP[56]           ; [CPU_] |2846| 
	.dwpsn	file "../Source/prod.c",line 2848,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2848| 
        MOV       AL,*-SP[57]           ; [CPU_] |2848| 
	.dwpsn	file "../Source/prod.c",line 2851,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2851| 
        B         $C$L460,EQ            ; [CPU_] |2851| 
        ; branchcc occurs ; [] |2851| 
        CMPB      AL,#4                 ; [CPU_] |2851| 
        B         $C$L462,NEQ           ; [CPU_] |2851| 
        ; branchcc occurs ; [] |2851| 
	.dwpsn	file "../Source/prod.c",line 2856,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2856| 
        B         $C$L461,UNC           ; [CPU_] |2856| 
        ; branch occurs ; [] |2856| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2854,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2854| 
$C$L461:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2854| 
        MOVL      XAR0,#84              ; [CPU_] |2854| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2854| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_sprintf")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2854| 
        ; call occurs [#_sprintf] ; [] |2854| 
        MOVL      XAR0,#84              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2858,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2858| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2858| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2858| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2858| 
        ; call occurs [#_scia_getparam] ; [] |2858| 
        MOVL      XAR0,#86              ; [CPU_] |2858| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2858,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2858| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_strtod")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2859,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2859| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2859| 
        MOVL      XAR0,#86              ; [CPU_] |2859| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2859| 
	.dwpsn	file "../Source/prod.c",line 2860,column 8,is_stmt,isa 0
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2860| 
        ; call occurs [#_scia_puts] ; [] |2860| 
	.dwpsn	file "../Source/prod.c",line 2861,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2861| 
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2861| 
        ; call occurs [#_scia_puts] ; [] |2861| 
	.dwpsn	file "../Source/prod.c",line 2864,column 8,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |2864| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2864| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2864| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2864| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_sprintf")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2864| 
        ; call occurs [#_sprintf] ; [] |2864| 
        MOVL      XAR0,#84              ; [CPU_] |2864| 
	.dwpsn	file "../Source/prod.c",line 2865,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2865| 
	.dwpsn	file "../Source/prod.c",line 2864,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2864| 
	.dwpsn	file "../Source/prod.c",line 2865,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2865| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2865| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2865| 
        ; call occurs [#_scia_getparam] ; [] |2865| 
        MOVL      XAR0,#86              ; [CPU_] |2865| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2865,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2865| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_strtod")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2866,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2866| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2866| 
        MOVL      XAR0,#86              ; [CPU_] |2866| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2866| 
	.dwpsn	file "../Source/prod.c",line 2867,column 8,is_stmt,isa 0
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2867| 
        ; call occurs [#_scia_puts] ; [] |2867| 
	.dwpsn	file "../Source/prod.c",line 2868,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2868| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2868| 
        ; call occurs [#_scia_puts] ; [] |2868| 
$C$L462:    
	.dwpsn	file "../Source/prod.c",line 2875,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2875| 
        MOV       AL,*-SP[47]           ; [CPU_] |2875| 
        MOVL      XAR0,#60              ; [CPU_] |2875| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2875| 
        MOV       *-SP[3],AL            ; [CPU_] |2875| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2875| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |2875| 
        MOV       ACC,AL << 1           ; [CPU_] |2875| 
        ADDL      ACC,XAR6              ; [CPU_] |2875| 
        MOVL      XAR4,ACC              ; [CPU_] |2875| 
        MOVL      XAR0,#84              ; [CPU_] |2875| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2875| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2875| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2875| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_sprintf")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2875| 
        ; call occurs [#_sprintf] ; [] |2875| 
        MOVL      XAR0,#84              ; [CPU_] |2875| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2875| 
	.dwpsn	file "../Source/prod.c",line 2877,column 6,is_stmt,isa 0
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2877| 
        ; call occurs [#_scia_puts] ; [] |2877| 
	.dwpsn	file "../Source/prod.c",line 2872,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2872| 
        MOV       AL,*-SP[57]           ; [CPU_] |2872| 
	.dwpsn	file "../Source/prod.c",line 2879,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2879| 
        B         $C$L464,EQ            ; [CPU_] |2879| 
        ; branchcc occurs ; [] |2879| 
	.dwpsn	file "../Source/prod.c",line 2882,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2882| 
        MOVB      AL,#1                 ; [CPU_] |2882| 
        MOVL      XAR0,#84              ; [CPU_] |2882| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2882| 
        ADD       AL,*-SP[56]           ; [CPU_] |2882| 
        MOV       *-SP[3],AL            ; [CPU_] |2882| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2882| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_sprintf")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2882| 
        ; call occurs [#_sprintf] ; [] |2882| 
        MOVL      XAR0,#84              ; [CPU_] |2882| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2882| 
	.dwpsn	file "../Source/prod.c",line 2883,column 7,is_stmt,isa 0
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2883| 
        ; call occurs [#_scia_puts] ; [] |2883| 
        MOV       AL,*-SP[57]           ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2885,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2885| 
        B         $C$L463,EQ            ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
        CMPB      AL,#4                 ; [CPU_] |2885| 
        B         $C$L466,NEQ           ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
$C$L463:    
	.dwpsn	file "../Source/prod.c",line 2886,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2886| 
        MOVB      XAR0,#8               ; [CPU_] |2886| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2886| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2886| 
        MOVB      XAR0,#10              ; [CPU_] |2886| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2886| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2886| 
        MOVL      XAR0,#84              ; [CPU_] |2886| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2886| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2886| 
        MOVL      XAR4,XAR1             ; [CPU_] |2886| 
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_sprintf")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2886| 
        ; call occurs [#_sprintf] ; [] |2886| 
        MOVL      XAR4,XAR1             ; [CPU_] |2886| 
	.dwpsn	file "../Source/prod.c",line 2889,column 8,is_stmt,isa 0
        B         $C$L465,UNC           ; [CPU_] |2889| 
        ; branch occurs ; [] |2889| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2880,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2880| 
$C$L465:    
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2880| 
        ; call occurs [#_scia_puts] ; [] |2880| 
$C$L466:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2894,column 6,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2894| 
        ; call occurs [#_ad7738_setcal] ; [] |2894| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2896,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |2896| 
        ; branch occurs ; [] |2896| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2844,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2844| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2844| 
        ; call occurs [#_scia_puts] ; [] |2844| 
	.dwpsn	file "../Source/prod.c",line 2836,column 7,is_stmt,isa 0
        B         $C$L459,UNC           ; [CPU_] |2836| 
        ; branch occurs ; [] |2836| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2798,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2798| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2798| 
        ; call occurs [#_scia_puts] ; [] |2798| 
	.dwpsn	file "../Source/prod.c",line 2790,column 6,is_stmt,isa 0
        B         $C$L453,UNC           ; [CPU_] |2790| 
        ; branch occurs ; [] |2790| 
$C$L469:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2962,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2962| 
        B         $C$L626,LO            ; [CPU_] |2962| 
        ; branchcc occurs ; [] |2962| 
	.dwpsn	file "../Source/prod.c",line 2965,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2965| 
        CMPB      AL,#83                ; [CPU_] |2965| 
        B         $C$L626,NEQ           ; [CPU_] |2965| 
        ; branchcc occurs ; [] |2965| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2972| 
        MOVL      XAR0,#84              ; [CPU_] |2972| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2972| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2972| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2972| 
        MOVL      XAR4,XAR1             ; [CPU_] |2972| 
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_sprintf")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2972| 
        ; call occurs [#_sprintf] ; [] |2972| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2973| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2972| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2973| 
        MOV       AL,#1024              ; [CPU_] |2973| 
        MOVL      XAR5,XAR1             ; [CPU_] |2973| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2973| 
        ; call occurs [#_scia_getparam] ; [] |2973| 
	.dwpsn	file "../Source/prod.c",line 2974,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2974| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_atoi")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2974| 
        ; call occurs [#_atoi] ; [] |2974| 
        MOV       *-SP[55],AL           ; [CPU_] |2974| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2975| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2975| 
        ; call occurs [#_scia_puts] ; [] |2975| 
        MOV       AL,*-SP[55]           ; [CPU_] |2975| 
	.dwpsn	file "../Source/prod.c",line 2977,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2977| 
        CMPB      AL,#4                 ; [CPU_] |2977| 
        B         $C$L496,HIS           ; [CPU_] |2977| 
        ; branchcc occurs ; [] |2977| 
	.dwpsn	file "../Source/prod.c",line 2981,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2981| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2981| 
        ; call occurs [#_scia_puts] ; [] |2981| 
        MOVZ      AR1,*-SP[55]          ; [CPU_] |2981| 
	.dwpsn	file "../Source/prod.c",line 2984,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2984| 
        MOVL      XAR0,#84              ; [CPU_] |2984| 
        DEC       *-SP[55]              ; [CPU_] |2984| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2984| 
        MOV       *-SP[47],AR1          ; [CPU_] |2984| 
        MOV       *-SP[3],AR1           ; [CPU_] |2984| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2984| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_sprintf")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2984| 
        ; call occurs [#_sprintf] ; [] |2984| 
        MOVL      XAR0,#84              ; [CPU_] |2984| 
	.dwpsn	file "../Source/prod.c",line 2985,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2985| 
	.dwpsn	file "../Source/prod.c",line 2984,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2984| 
	.dwpsn	file "../Source/prod.c",line 2985,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2985| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2985| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2985| 
        ; call occurs [#_scia_getparam] ; [] |2985| 
        MOVL      XAR0,#86              ; [CPU_] |2985| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2985| 
	.dwpsn	file "../Source/prod.c",line 2986,column 6,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2986| 
        ; call occurs [#_scia_puts] ; [] |2986| 
	.dwpsn	file "../Source/prod.c",line 2987,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2987| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2987| 
        ; call occurs [#_scia_puts] ; [] |2987| 
        MOVL      XAR0,#86              ; [CPU_] |2987| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2987| 
	.dwpsn	file "../Source/prod.c",line 2989,column 6,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_atoi")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2989| 
        ; call occurs [#_atoi] ; [] |2989| 
        CMPB      AL,#1                 ; [CPU_] |2989| 
        B         $C$L471,EQ            ; [CPU_] |2989| 
        ; branchcc occurs ; [] |2989| 
	.dwpsn	file "../Source/prod.c",line 3138,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3138| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3138| 
        MOV       AL,*-SP[55]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3138| 
        ADDL      ACC,XAR6              ; [CPU_] |3138| 
        ADD       ACC,#199 << 4         ; [CPU_] |3138| 
        MOVL      XAR4,ACC              ; [CPU_] |3138| 
	.dwpsn	file "../Source/prod.c",line 3139,column 7,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |3139| 
	.dwpsn	file "../Source/prod.c",line 3138,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3138| 
	.dwpsn	file "../Source/prod.c",line 3139,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3139| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3139| 
        MOV       *-SP[3],AR1           ; [CPU_] |3139| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3139| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_sprintf")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3139| 
        ; call occurs [#_sprintf] ; [] |3139| 
        B         $C$L410,UNC           ; [CPU_] |3139| 
        ; branch occurs ; [] |3139| 
$C$L471:    
	.dwpsn	file "../Source/prod.c",line 2992,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2992| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2992| 
        MOV       AL,*-SP[55]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2992| 
        ADDL      ACC,XAR6              ; [CPU_] |2992| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2992| 
        MOVL      XAR1,ACC              ; [CPU_] |2992| 
        MOVL      XAR0,#60              ; [CPU_] |2992| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2992| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2992| 
        MOVL      *-SP[62],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2995,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2995| 
        MOV       *-SP[58],AL           ; [CPU_] |2995| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2996,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2996| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2996| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |2996| 
        MOV       *-SP[3],AL            ; [CPU_] |2996| 
        MOVL      XAR0,#84              ; [CPU_] |2996| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2996| 
        MOVL      *-SP[62],XAR4         ; [CPU_] |2996| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2996| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2996| 
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_sprintf")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2996| 
        ; call occurs [#_sprintf] ; [] |2996| 
        MOVL      XAR0,#84              ; [CPU_] |2996| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2996| 
	.dwpsn	file "../Source/prod.c",line 2997,column 8,is_stmt,isa 0
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2997| 
        ; call occurs [#_scia_puts] ; [] |2997| 
        MOV       AL,*-SP[58]           ; [CPU_] |2997| 
	.dwpsn	file "../Source/prod.c",line 2998,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2998| 
        B         $C$L473,GEQ           ; [CPU_] |2998| 
        ; branchcc occurs ; [] |2998| 
	.dwpsn	file "../Source/prod.c",line 2999,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2999| 
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2999| 
        ; call occurs [#_scia_puts] ; [] |2999| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2995,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2995| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2995| 
        B         $C$L472,LT            ; [CPU_] |2995| 
        ; branchcc occurs ; [] |2995| 
	.dwpsn	file "../Source/prod.c",line 3002,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3002| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3002| 
        ; call occurs [#_scia_puts] ; [] |3002| 
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |3003| 
        MOVL      XAR0,#84              ; [CPU_] |3003| 
        MOV       AL,*-SP[47]           ; [CPU_] |3003| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3003| 
        MOV       *-SP[3],AL            ; [CPU_] |3003| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3003| 
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_sprintf")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3003| 
        ; call occurs [#_sprintf] ; [] |3003| 
        MOVL      XAR0,#84              ; [CPU_] |3003| 
	.dwpsn	file "../Source/prod.c",line 3006,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3006| 
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3003| 
	.dwpsn	file "../Source/prod.c",line 3006,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3006| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3006| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3006| 
        ; call occurs [#_scia_getparam] ; [] |3006| 
        MOVL      XAR0,#86              ; [CPU_] |3006| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3006| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_atoi")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3007| 
        ; call occurs [#_atoi] ; [] |3007| 
        MOV       *-SP[57],AL           ; [CPU_] |3007| 
        CMPB      AL,#5                 ; [CPU_] |3007| 
        B         $C$L474,LO            ; [CPU_] |3007| 
        ; branchcc occurs ; [] |3007| 
	.dwpsn	file "../Source/prod.c",line 3010,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |3010| 
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3010| 
        ; call occurs [#_scia_puts] ; [] |3010| 
	.dwpsn	file "../Source/prod.c",line 3009,column 8,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |3009| 
$C$L474:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3013,column 7,is_stmt,isa 0
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3013| 
        ; call occurs [#_scia_puts] ; [] |3013| 
	.dwpsn	file "../Source/prod.c",line 3014,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3014| 
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3014| 
        ; call occurs [#_scia_puts] ; [] |3014| 
        MOV       AL,*-SP[57]           ; [CPU_] |3014| 
	.dwpsn	file "../Source/prod.c",line 3015,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3015| 
	.dwpsn	file "../Source/prod.c",line 3017,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |3017| 
        B         $C$L476,EQ            ; [CPU_] |3017| 
        ; branchcc occurs ; [] |3017| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3017| 
        B         $C$L476,EQ            ; [CPU_] |3017| 
        ; branchcc occurs ; [] |3017| 
	.dwpsn	file "../Source/prod.c",line 3020,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3020| 
        B         $C$L475,EQ            ; [CPU_] |3020| 
        ; branchcc occurs ; [] |3020| 
        CMPB      AL,#4                 ; [CPU_] |3020| 
        B         $C$L477,NEQ           ; [CPU_] |3020| 
        ; branchcc occurs ; [] |3020| 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 3021,column 8,is_stmt,isa 0
        MOV       *-SP[58],#2           ; [CPU_] |3021| 
        B         $C$L477,UNC           ; [CPU_] |3021| 
        ; branch occurs ; [] |3021| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 3019,column 8,is_stmt,isa 0
        MOV       *-SP[58],#4           ; [CPU_] |3019| 
$C$L477:    
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 3026,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |3026| 
        MOV       AL,*-SP[58]           ; [CPU_] |3026| 
        MOVL      XAR0,#84              ; [CPU_] |3026| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3026| 
        MOV       *-SP[3],AL            ; [CPU_] |3026| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3026| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_sprintf")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3026| 
        ; call occurs [#_sprintf] ; [] |3026| 
        MOVL      XAR0,#84              ; [CPU_] |3026| 
	.dwpsn	file "../Source/prod.c",line 3027,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3027| 
	.dwpsn	file "../Source/prod.c",line 3026,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3026| 
	.dwpsn	file "../Source/prod.c",line 3027,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3027| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3027| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3027| 
        ; call occurs [#_scia_getparam] ; [] |3027| 
        MOVL      XAR0,#86              ; [CPU_] |3027| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3027| 
	.dwpsn	file "../Source/prod.c",line 3028,column 8,is_stmt,isa 0
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_atoi")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3028| 
        ; call occurs [#_atoi] ; [] |3028| 
        MOVL      XAR0,#86              ; [CPU_] |3028| 
        MOV       *-SP[56],AL           ; [CPU_] |3028| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3028| 
	.dwpsn	file "../Source/prod.c",line 3029,column 8,is_stmt,isa 0
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3029| 
        ; call occurs [#_scia_puts] ; [] |3029| 
        MOV       AL,*-SP[56]           ; [CPU_] |3029| 
	.dwpsn	file "../Source/prod.c",line 3031,column 9,is_stmt,isa 0
        B         $C$L495,EQ            ; [CPU_] |3031| 
        ; branchcc occurs ; [] |3031| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[56]           ; [CPU_] |3031| 
        B         $C$L495,LO            ; [CPU_] |3031| 
        ; branchcc occurs ; [] |3031| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3035| 
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3035| 
        ; call occurs [#_scia_puts] ; [] |3035| 
	.dwpsn	file "../Source/prod.c",line 3037,column 7,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |3037| 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3040| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
        MOV       AL,*-SP[56]           ; [CPU_] |3035| 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |3040| 
	.dwpsn	file "../Source/prod.c",line 3037,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |3037| 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3040| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3040| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3040| 
        ; call occurs [#_scia_getparam] ; [] |3040| 
        MOVL      XAR0,#86              ; [CPU_] |3040| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3040| 
	.dwpsn	file "../Source/prod.c",line 3043,column 7,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3043| 
        ; call occurs [#_scia_puts] ; [] |3043| 
	.dwpsn	file "../Source/prod.c",line 3044,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3044| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3044| 
        ; call occurs [#_scia_puts] ; [] |3044| 
        MOVL      XAR0,#86              ; [CPU_] |3044| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3044| 
	.dwpsn	file "../Source/prod.c",line 3046,column 7,is_stmt,isa 0
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_atoi")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3046| 
        ; call occurs [#_atoi] ; [] |3046| 
        CMPB      AL,#1                 ; [CPU_] |3046| 
        B         $C$L479,EQ            ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
	.dwpsn	file "../Source/prod.c",line 3050,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |3050| 
        B         $C$L480,UNC           ; [CPU_] |3050| 
        ; branch occurs ; [] |3050| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 3048,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |3048| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 3053,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3053| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |3053| 
        MOV       AL,#1024              ; [CPU_] |3053| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3053| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3053| 
        ; call occurs [#_scia_getparam] ; [] |3053| 
        MOVL      XAR0,#86              ; [CPU_] |3053| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3053| 
	.dwpsn	file "../Source/prod.c",line 3056,column 7,is_stmt,isa 0
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3056| 
        ; call occurs [#_scia_puts] ; [] |3056| 
	.dwpsn	file "../Source/prod.c",line 3057,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3057| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3057| 
        ; call occurs [#_scia_puts] ; [] |3057| 
        MOVL      XAR0,#86              ; [CPU_] |3057| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3057| 
	.dwpsn	file "../Source/prod.c",line 3059,column 7,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_atoi")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3059| 
        ; call occurs [#_atoi] ; [] |3059| 
        CMPB      AL,#1                 ; [CPU_] |3059| 
        B         $C$L481,EQ            ; [CPU_] |3059| 
        ; branchcc occurs ; [] |3059| 
	.dwpsn	file "../Source/prod.c",line 3063,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |3063| 
        B         $C$L482,UNC           ; [CPU_] |3063| 
        ; branch occurs ; [] |3063| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 3061,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |3061| 
$C$L482:    
	.dwpsn	file "../Source/prod.c",line 3066,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3066| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |3066| 
        MOV       AL,#1024              ; [CPU_] |3066| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3066| 
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3066| 
        ; call occurs [#_scia_getparam] ; [] |3066| 
        MOVL      XAR0,#86              ; [CPU_] |3066| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3066| 
	.dwpsn	file "../Source/prod.c",line 3069,column 7,is_stmt,isa 0
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3069| 
        ; call occurs [#_scia_puts] ; [] |3069| 
	.dwpsn	file "../Source/prod.c",line 3070,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3070| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3070| 
        ; call occurs [#_scia_puts] ; [] |3070| 
        MOVL      XAR0,#86              ; [CPU_] |3070| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3070| 
	.dwpsn	file "../Source/prod.c",line 3072,column 7,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_atoi")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3072| 
        ; call occurs [#_atoi] ; [] |3072| 
        CMPB      AL,#1                 ; [CPU_] |3072| 
        B         $C$L483,EQ            ; [CPU_] |3072| 
        ; branchcc occurs ; [] |3072| 
	.dwpsn	file "../Source/prod.c",line 3076,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |3076| 
        B         $C$L484,UNC           ; [CPU_] |3076| 
        ; branch occurs ; [] |3076| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 3074,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |3074| 
$C$L484:    
	.dwpsn	file "../Source/prod.c",line 3080,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3080| 
        CMPB      AL,#2                 ; [CPU_] |3080| 
        B         $C$L486,LOS           ; [CPU_] |3080| 
        ; branchcc occurs ; [] |3080| 
        CMPB      AL,#3                 ; [CPU_] |3080| 
        B         $C$L485,EQ            ; [CPU_] |3080| 
        ; branchcc occurs ; [] |3080| 
        CMPB      AL,#4                 ; [CPU_] |3080| 
        B         $C$L488,NEQ           ; [CPU_] |3080| 
        ; branchcc occurs ; [] |3080| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3092,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |3092| 
	.dwpsn	file "../Source/prod.c",line 3093,column 8,is_stmt,isa 0
        B         $C$L487,UNC           ; [CPU_] |3093| 
        ; branch occurs ; [] |3093| 
$C$L485:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3089,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |3089| 
	.dwpsn	file "../Source/prod.c",line 3090,column 8,is_stmt,isa 0
        B         $C$L487,UNC           ; [CPU_] |3090| 
        ; branch occurs ; [] |3090| 
$C$L486:    
	.dwpsn	file "../Source/prod.c",line 3084,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3084| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3084| 
        MOV       T,#10                 ; [CPU_] |3084| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |3084| 
        ADDL      ACC,XAR6              ; [CPU_] |3084| 
        MOVL      XAR4,ACC              ; [CPU_] |3084| 
        MOVB      XAR0,#42              ; [CPU_] |3084| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |3084| 
        MPYB      ACC,T,#152            ; [CPU_] |3084| 
        ADDL      ACC,XAR6              ; [CPU_] |3084| 
        MOVL      XAR4,ACC              ; [CPU_] |3084| 
        MOVB      XAR0,#125             ; [CPU_] |3084| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3084| 
        MOVL      XAR0,#68              ; [CPU_] |3084| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3084| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |3084| 
        MOV       ACC,AL << 1           ; [CPU_] |3084| 
        ADDL      ACC,XAR6              ; [CPU_] |3084| 
        MOVL      XAR4,ACC              ; [CPU_] |3084| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3084| 
$C$L487:    
        MOVL      XAR0,#46              ; [CPU_] |3084| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3084| 
$C$L488:    
	.dwpsn	file "../Source/prod.c",line 3097,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |3097| 
        MOVL      XAR0,#46              ; [CPU_] |3097| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3097| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3097| 
        MOVL      XAR0,#84              ; [CPU_] |3097| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3097| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3097| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_sprintf")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3097| 
        ; call occurs [#_sprintf] ; [] |3097| 
        MOVL      XAR0,#84              ; [CPU_] |3097| 
	.dwpsn	file "../Source/prod.c",line 3098,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3098| 
	.dwpsn	file "../Source/prod.c",line 3097,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3097| 
	.dwpsn	file "../Source/prod.c",line 3098,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3098| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3098| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3098| 
        ; call occurs [#_scia_getparam] ; [] |3098| 
        MOVL      XAR0,#86              ; [CPU_] |3098| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3098| 
	.dwpsn	file "../Source/prod.c",line 3099,column 7,is_stmt,isa 0
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3099| 
        ; call occurs [#_scia_puts] ; [] |3099| 
	.dwpsn	file "../Source/prod.c",line 3100,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3100| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3100| 
        ; call occurs [#_scia_puts] ; [] |3100| 
        MOVL      XAR0,#86              ; [CPU_] |3100| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3100,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3100| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_strtod")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3106,column 7,is_stmt,isa 0
        MOVL      XAR0,#46              ; [CPU_] |3106| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3106| 
	.dwpsn	file "../Source/prod.c",line 3102,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3102| 
	.dwpsn	file "../Source/prod.c",line 3106,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3106| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3106| 
        MOVL      XAR0,#84              ; [CPU_] |3106| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3106| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3106| 
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_sprintf")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3106| 
        ; call occurs [#_sprintf] ; [] |3106| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3107,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3107| 
        MOVL      XAR0,#86              ; [CPU_] |3107| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3107| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3107| 
        ; call occurs [#_scia_getparam] ; [] |3107| 
        MOVL      XAR0,#86              ; [CPU_] |3107| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3107| 
	.dwpsn	file "../Source/prod.c",line 3108,column 7,is_stmt,isa 0
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3108| 
        ; call occurs [#_scia_puts] ; [] |3108| 
	.dwpsn	file "../Source/prod.c",line 3109,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3109| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3109| 
        ; call occurs [#_scia_puts] ; [] |3109| 
        MOVL      XAR0,#86              ; [CPU_] |3109| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3109,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3109| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_strtod")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3117,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3117| 
        MOVL      XAR0,#60              ; [CPU_] |3117| 
	.dwpsn	file "../Source/prod.c",line 3111,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3111| 
	.dwpsn	file "../Source/prod.c",line 3117,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3117| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3117| 
        MOV       *-SP[3],AL            ; [CPU_] |3117| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3117| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |3117| 
        MOV       ACC,AL << 1           ; [CPU_] |3117| 
        ADDL      ACC,XAR6              ; [CPU_] |3117| 
        MOVL      XAR4,ACC              ; [CPU_] |3117| 
        MOVL      XAR0,#84              ; [CPU_] |3117| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3117| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3117| 
        MOVB      AL,#1                 ; [CPU_] |3117| 
        ADD       AL,*-SP[56]           ; [CPU_] |3117| 
        MOV       *-SP[7],AL            ; [CPU_] |3117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3117| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_sprintf")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3117| 
        ; call occurs [#_sprintf] ; [] |3117| 
        MOVL      XAR0,#84              ; [CPU_] |3117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3117| 
	.dwpsn	file "../Source/prod.c",line 3120,column 7,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3120| 
        ; call occurs [#_scia_puts] ; [] |3120| 
	.dwpsn	file "../Source/prod.c",line 3122,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3122| 
        B         $C$L489,TC            ; [CPU_] |3122| 
        ; branchcc occurs ; [] |3122| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3122| 
        B         $C$L490,UNC           ; [CPU_] |3122| 
        ; branch occurs ; [] |3122| 
$C$L489:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3122| 
$C$L490:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3122| 
        B         $C$L491,TC            ; [CPU_] |3122| 
        ; branchcc occurs ; [] |3122| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3122| 
        B         $C$L492,UNC           ; [CPU_] |3122| 
        ; branch occurs ; [] |3122| 
$C$L491:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3122| 
$C$L492:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3122| 
        B         $C$L493,TC            ; [CPU_] |3122| 
        ; branchcc occurs ; [] |3122| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3122| 
        B         $C$L494,UNC           ; [CPU_] |3122| 
        ; branch occurs ; [] |3122| 
$C$L493:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3122| 
$C$L494:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3122| 
        MOVL      XAR0,#84              ; [CPU_] |3122| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3122| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3122| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3122| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3122| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3122| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_sprintf")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3122| 
        ; call occurs [#_sprintf] ; [] |3122| 
        MOVL      XAR0,#84              ; [CPU_] |3122| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3122| 
	.dwpsn	file "../Source/prod.c",line 3129,column 7,is_stmt,isa 0
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3129| 
        ; call occurs [#_scia_puts] ; [] |3129| 
	.dwpsn	file "../Source/prod.c",line 3130,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3130| 
        MOVL      XAR0,#46              ; [CPU_] |3130| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3130| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3130| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3130| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3130| 
        MOVL      XAR0,#46              ; [CPU_] |3130| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3130| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3130| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3130| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3130| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3130| 
	.dwpsn	file "../Source/prod.c",line 3147,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |3147| 
        ; branch occurs ; [] |3147| 
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3033,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |3033| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3033| 
        ; call occurs [#_scia_puts] ; [] |3033| 
	.dwpsn	file "../Source/prod.c",line 3025,column 7,is_stmt,isa 0
        B         $C$L478,UNC           ; [CPU_] |3025| 
        ; branch occurs ; [] |3025| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2979,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2979| 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2979| 
        ; call occurs [#_scia_puts] ; [] |2979| 
	.dwpsn	file "../Source/prod.c",line 2971,column 6,is_stmt,isa 0
        B         $C$L470,UNC           ; [CPU_] |2971| 
        ; branch occurs ; [] |2971| 
$C$L497:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3451,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3451| 
        B         $C$L626,LO            ; [CPU_] |3451| 
        ; branchcc occurs ; [] |3451| 
	.dwpsn	file "../Source/prod.c",line 3454,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3454| 
        CMPB      AL,#68                ; [CPU_] |3454| 
        B         $C$L501,EQ            ; [CPU_] |3454| 
        ; branchcc occurs ; [] |3454| 
        CMPB      AL,#82                ; [CPU_] |3454| 
        B         $C$L500,EQ            ; [CPU_] |3454| 
        ; branchcc occurs ; [] |3454| 
        CMPB      AL,#87                ; [CPU_] |3454| 
        B         $C$L626,NEQ           ; [CPU_] |3454| 
        ; branchcc occurs ; [] |3454| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3458,column 6,is_stmt,isa 0
        B         $C$L498,NEQ           ; [CPU_] |3458| 
        ; branchcc occurs ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3482,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3482| 
	.dwpsn	file "../Source/prod.c",line 3484,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3484| 
        ; branch occurs ; [] |3484| 
$C$L498:    
	.dwpsn	file "../Source/prod.c",line 3460,column 7,is_stmt,isa 0
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3460| 
        ; call occurs [#_lcd_clear] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3461,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3461| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3461| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3461| 
        ; call occurs [#_lcd_puts] ; [] |3461| 
	.dwpsn	file "../Source/prod.c",line 3462,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3462| 
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3465,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3465| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_delay_us")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3465| 
        ; call occurs [#_delay_us] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3464,column 19,is_stmt,isa 0
        BANZ      $C$L499,AR3--         ; [CPU_] |3464| 
        ; branchcc occurs ; [] |3464| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3469,column 7,is_stmt,isa 0
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_conf_write")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3469| 
        ; call occurs [#_conf_write] ; [] |3469| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3472,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3472| 
        B         $C$L504,NEQ           ; [CPU_] |3472| 
        ; branchcc occurs ; [] |3472| 
	.dwpsn	file "../Source/prod.c",line 3473,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3473| 
	.dwpsn	file "../Source/prod.c",line 3475,column 7,is_stmt,isa 0
        B         $C$L503,UNC           ; [CPU_] |3475| 
        ; branch occurs ; [] |3475| 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3489,column 6,is_stmt,isa 0
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_conf_read")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3489| 
        ; call occurs [#_conf_read] ; [] |3489| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3492,column 6,is_stmt,isa 0
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3492| 
        ; call occurs [#_ad7738_setcal] ; [] |3492| 
	.dwpsn	file "../Source/prod.c",line 3493,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3493| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3493| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3493| 
	.dwpsn	file "../Source/prod.c",line 3494,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3494| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3494| 
        ; call occurs [#_ad7738_resetvall] ; [] |3494| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3497,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3497| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3497| 
        ; call occurs [#_scia_puts] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3500,column 6,is_stmt,isa 0
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_update_units")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3500| 
        ; call occurs [#_update_units] ; [] |3500| 
	.dwpsn	file "../Source/prod.c",line 3498,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3498| 
	.dwpsn	file "../Source/prod.c",line 3502,column 6,is_stmt,isa 0
        B         $C$L637,UNC           ; [CPU_] |3502| 
        ; branch occurs ; [] |3502| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3506,column 6,is_stmt,isa 0
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_conf_default")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3506| 
        ; call occurs [#_conf_default] ; [] |3506| 
	.dwpsn	file "../Source/prod.c",line 3509,column 6,is_stmt,isa 0
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3509| 
        ; call occurs [#_lcd_clear] ; [] |3509| 
	.dwpsn	file "../Source/prod.c",line 3510,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3510| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3510| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3510| 
        ; call occurs [#_lcd_puts] ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3511,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3511| 
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3511| 
        ; call occurs [#_scia_puts] ; [] |3511| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3514,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3514| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_delay_us")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3514| 
        ; call occurs [#_delay_us] ; [] |3514| 
	.dwpsn	file "../Source/prod.c",line 3513,column 18,is_stmt,isa 0
        BANZ      $C$L502,AR3--         ; [CPU_] |3513| 
        ; branchcc occurs ; [] |3513| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3518,column 6,is_stmt,isa 0
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_conf_write")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3518| 
        ; call occurs [#_conf_write] ; [] |3518| 
        MOVZ      AR1,AL                ; [CPU_] |3518| 
	.dwpsn	file "../Source/prod.c",line 3519,column 6,is_stmt,isa 0
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3519| 
        ; call occurs [#_ad7738_setcal] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3520,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3520| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3520| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3520| 
	.dwpsn	file "../Source/prod.c",line 3521,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3521| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3521| 
        ; call occurs [#_ad7738_resetvall] ; [] |3521| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3524,column 6,is_stmt,isa 0
        B         $C$L504,NEQ           ; [CPU_] |3524| 
        ; branchcc occurs ; [] |3524| 
	.dwpsn	file "../Source/prod.c",line 3525,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3525| 
$C$L503:    
        SPM       #0                    ; [CPU_] 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3525| 
        ; call occurs [#_scia_puts] ; [] |3525| 
	.dwpsn	file "../Source/prod.c",line 3527,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3527| 
	.dwpsn	file "../Source/prod.c",line 3528,column 6,is_stmt,isa 0
        B         $C$L505,UNC           ; [CPU_] |3528| 
        ; branch occurs ; [] |3528| 
$C$L504:    
	.dwpsn	file "../Source/prod.c",line 3529,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3529| 
        SPM       #0                    ; [CPU_] 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3529| 
        ; call occurs [#_scia_puts] ; [] |3529| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3531,column 6,is_stmt,isa 0
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3531| 
        ; call occurs [#_lcd_clear] ; [] |3531| 
	.dwpsn	file "../Source/prod.c",line 3532,column 6,is_stmt,isa 0
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_update_units")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3532| 
        ; call occurs [#_update_units] ; [] |3532| 
	.dwpsn	file "../Source/prod.c",line 3533,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3533| 
        ; branch occurs ; [] |3533| 
$C$L506:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2558,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2558| 
        B         $C$L626,LO            ; [CPU_] |2558| 
        ; branchcc occurs ; [] |2558| 
	.dwpsn	file "../Source/prod.c",line 2561,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2561| 
        CMPB      AL,#70                ; [CPU_] |2561| 
        B         $C$L513,EQ            ; [CPU_] |2561| 
        ; branchcc occurs ; [] |2561| 
        CMPB      AL,#80                ; [CPU_] |2561| 
        B         $C$L635,NEQ           ; [CPU_] |2561| 
        ; branchcc occurs ; [] |2561| 
$C$L507:    
	.dwpsn	file "../Source/prod.c",line 2598,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2598| 
        MOVL      XAR0,#84              ; [CPU_] |2598| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2598| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2598| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2598| 
        MOVL      XAR4,XAR1             ; [CPU_] |2598| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_sprintf")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2598| 
        ; call occurs [#_sprintf] ; [] |2598| 
	.dwpsn	file "../Source/prod.c",line 2599,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2599| 
	.dwpsn	file "../Source/prod.c",line 2598,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2598| 
	.dwpsn	file "../Source/prod.c",line 2599,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2599| 
        MOV       AL,#1024              ; [CPU_] |2599| 
        MOVL      XAR5,XAR1             ; [CPU_] |2599| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2599| 
        ; call occurs [#_scia_getparam] ; [] |2599| 
	.dwpsn	file "../Source/prod.c",line 2600,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2600| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_atoi")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2600| 
        ; call occurs [#_atoi] ; [] |2600| 
        MOV       *-SP[55],AL           ; [CPU_] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2601| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2601| 
        ; call occurs [#_scia_puts] ; [] |2601| 
        MOV       AL,*-SP[55]           ; [CPU_] |2601| 
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2603| 
        CMPB      AL,#2                 ; [CPU_] |2603| 
        B         $C$L512,HIS           ; [CPU_] |2603| 
        ; branchcc occurs ; [] |2603| 
	.dwpsn	file "../Source/prod.c",line 2607,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2607| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2607| 
        ; call occurs [#_scia_puts] ; [] |2607| 
        MOVZ      AR1,*-SP[55]          ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2610,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2610| 
        MOVL      XAR0,#84              ; [CPU_] |2610| 
        DEC       *-SP[55]              ; [CPU_] |2610| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2610| 
        MOV       *-SP[3],AR1           ; [CPU_] |2610| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2610| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_sprintf")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2610| 
        ; call occurs [#_sprintf] ; [] |2610| 
        MOVL      XAR0,#84              ; [CPU_] |2610| 
	.dwpsn	file "../Source/prod.c",line 2611,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2611| 
	.dwpsn	file "../Source/prod.c",line 2610,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2610| 
	.dwpsn	file "../Source/prod.c",line 2611,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2611| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2611| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2611| 
        ; call occurs [#_scia_getparam] ; [] |2611| 
        MOVL      XAR0,#86              ; [CPU_] |2611| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2611| 
	.dwpsn	file "../Source/prod.c",line 2612,column 6,is_stmt,isa 0
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_atol")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2612| 
        ; call occurs [#_atol] ; [] |2612| 
        MOVL      XAR0,#86              ; [CPU_] |2612| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2612| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2612| 
	.dwpsn	file "../Source/prod.c",line 2613,column 6,is_stmt,isa 0
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2613| 
        ; call occurs [#_scia_puts] ; [] |2613| 
	.dwpsn	file "../Source/prod.c",line 2614,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2614| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2614| 
        ; call occurs [#_scia_puts] ; [] |2614| 
	.dwpsn	file "../Source/prod.c",line 2615,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2615| 
        B         $C$L508,NEQ           ; [CPU_] |2615| 
        ; branchcc occurs ; [] |2615| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2616| 
	.dwpsn	file "../Source/prod.c",line 2617,column 7,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |2617| 
        ; branch occurs ; [] |2617| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2619,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2619| 
        MOVL      XAR0,#84              ; [CPU_] |2619| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2619| 
        MOV       *-SP[3],AR1           ; [CPU_] |2619| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2619| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2619| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2619| 
        MOVL      XAR4,XAR1             ; [CPU_] |2619| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_sprintf")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2619| 
        ; call occurs [#_sprintf] ; [] |2619| 
        MOVL      XAR4,XAR1             ; [CPU_] |2619| 
	.dwpsn	file "../Source/prod.c",line 2621,column 6,is_stmt,isa 0
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2621| 
        ; call occurs [#_scia_puts] ; [] |2621| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2626,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2626| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2626| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[55]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2626| 
        ADDL      ACC,XAR6              ; [CPU_] |2626| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2626| 
        MOVL      XAR4,ACC              ; [CPU_] |2626| 
        MOVL      XAR0,#3216            ; [CPU_] |2626| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |2626| 
$C$L509:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2627,column 6,is_stmt,isa 0
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2627| 
        ; call occurs [#_ad7738_setcal] ; [] |2627| 
	.dwpsn	file "../Source/prod.c",line 2628,column 6,is_stmt,isa 0
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2628| 
        ; call occurs [#_velf_rst] ; [] |2628| 
$C$L510:    
 clrc INTM
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2622,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2622| 
	.dwpsn	file "../Source/prod.c",line 2630,column 6,is_stmt,isa 0
        B         $C$L636,UNC           ; [CPU_] |2630| 
        ; branch occurs ; [] |2630| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2605,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2605| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2605| 
        ; call occurs [#_scia_puts] ; [] |2605| 
	.dwpsn	file "../Source/prod.c",line 2597,column 6,is_stmt,isa 0
        B         $C$L507,UNC           ; [CPU_] |2597| 
        ; branch occurs ; [] |2597| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2568,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2568| 
        MOVL      XAR0,#84              ; [CPU_] |2568| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2568| 
        MOV       *-SP[3],#4096         ; [CPU_] |2568| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2568| 
        MOVL      XAR4,XAR1             ; [CPU_] |2568| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_sprintf")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2568| 
        ; call occurs [#_sprintf] ; [] |2568| 
	.dwpsn	file "../Source/prod.c",line 2570,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2570| 
	.dwpsn	file "../Source/prod.c",line 2568,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2568| 
	.dwpsn	file "../Source/prod.c",line 2570,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2570| 
        MOV       AL,#1024              ; [CPU_] |2570| 
        MOVL      XAR5,XAR1             ; [CPU_] |2570| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2570| 
        ; call occurs [#_scia_getparam] ; [] |2570| 
	.dwpsn	file "../Source/prod.c",line 2571,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2571| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_atoi")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2571| 
        ; call occurs [#_atoi] ; [] |2571| 
        MOV       *-SP[47],AL           ; [CPU_] |2571| 
	.dwpsn	file "../Source/prod.c",line 2572,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2572| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2572| 
        ; call occurs [#_scia_puts] ; [] |2572| 
        MOV       AL,*-SP[47]           ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2574,column 8,is_stmt,isa 0
        B         $C$L514,LEQ           ; [CPU_] |2574| 
        ; branchcc occurs ; [] |2574| 
        CMP       AL,#4096              ; [CPU_] |2574| 
        B         $C$L514,GT            ; [CPU_] |2574| 
        ; branchcc occurs ; [] |2574| 
	.dwpsn	file "../Source/prod.c",line 2578,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2578| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2578| 
        ; call occurs [#_scia_puts] ; [] |2578| 
	.dwpsn	file "../Source/prod.c",line 2580,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2580| 
        MOVL      XAR0,#84              ; [CPU_] |2580| 
        MOV       AL,*-SP[47]           ; [CPU_] |2580| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2580| 
        MOV       *-SP[3],AL            ; [CPU_] |2580| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2580| 
        MOVL      XAR4,XAR1             ; [CPU_] |2580| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_sprintf")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2580| 
        ; call occurs [#_sprintf] ; [] |2580| 
        MOVL      XAR4,XAR1             ; [CPU_] |2580| 
	.dwpsn	file "../Source/prod.c",line 2582,column 6,is_stmt,isa 0
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2582| 
        ; call occurs [#_scia_puts] ; [] |2582| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2587,column 6,is_stmt,isa 0
        MOVL      XAR0,#3214            ; [CPU_] |2587| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2587| 
        MOV       AL,*-SP[47]           ; [CPU_] |2587| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2587| 
	.dwpsn	file "../Source/prod.c",line 2591,column 6,is_stmt,isa 0
        B         $C$L509,UNC           ; [CPU_] |2591| 
        ; branch occurs ; [] |2591| 
$C$L514:    
	.dwpsn	file "../Source/prod.c",line 2576,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2576| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2576| 
        ; call occurs [#_scia_puts] ; [] |2576| 
	.dwpsn	file "../Source/prod.c",line 2567,column 6,is_stmt,isa 0
        B         $C$L513,UNC           ; [CPU_] |2567| 
        ; branch occurs ; [] |2567| 
$C$L515:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2640,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2640| 
        B         $C$L626,LO            ; [CPU_] |2640| 
        ; branchcc occurs ; [] |2640| 
	.dwpsn	file "../Source/prod.c",line 2643,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2643| 
        CMPB      AL,#83                ; [CPU_] |2643| 
        B         $C$L626,NEQ           ; [CPU_] |2643| 
        ; branchcc occurs ; [] |2643| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2650,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2650| 
        MOVL      XAR0,#84              ; [CPU_] |2650| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2650| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2650| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2650| 
        MOVL      XAR4,XAR1             ; [CPU_] |2650| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2650| 
        ; call occurs [#_sprintf] ; [] |2650| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2650,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2650| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2651| 
        MOV       AL,#1024              ; [CPU_] |2651| 
        MOVL      XAR5,XAR1             ; [CPU_] |2651| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2651| 
        ; call occurs [#_scia_getparam] ; [] |2651| 
	.dwpsn	file "../Source/prod.c",line 2652,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2652| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_atoi")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2652| 
        ; call occurs [#_atoi] ; [] |2652| 
        MOV       *-SP[55],AL           ; [CPU_] |2652| 
	.dwpsn	file "../Source/prod.c",line 2653,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2653| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2653| 
        ; call occurs [#_scia_puts] ; [] |2653| 
        MOV       AL,*-SP[55]           ; [CPU_] |2653| 
	.dwpsn	file "../Source/prod.c",line 2655,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2655| 
        CMPB      AL,#4                 ; [CPU_] |2655| 
        B         $C$L532,HIS           ; [CPU_] |2655| 
        ; branchcc occurs ; [] |2655| 
	.dwpsn	file "../Source/prod.c",line 2659,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2659| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2659| 
        ; call occurs [#_scia_puts] ; [] |2659| 
        MOVL      XAR0,#60              ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2663,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2663| 
	.dwpsn	file "../Source/prod.c",line 2659,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2663,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2663| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2664,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2664| 
        MOVL      XAR0,#84              ; [CPU_] |2664| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2664| 
        MOV       *-SP[3],AL            ; [CPU_] |2664| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2664| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2664| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2664| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_sprintf")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2664| 
        ; call occurs [#_sprintf] ; [] |2664| 
        MOVL      XAR0,#84              ; [CPU_] |2664| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2665,column 7,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2665| 
        ; call occurs [#_scia_puts] ; [] |2665| 
        MOV       AL,*-SP[47]           ; [CPU_] |2665| 
	.dwpsn	file "../Source/prod.c",line 2666,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2666| 
        B         $C$L518,GEQ           ; [CPU_] |2666| 
        ; branchcc occurs ; [] |2666| 
	.dwpsn	file "../Source/prod.c",line 2667,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2667| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2667| 
        ; call occurs [#_scia_puts] ; [] |2667| 
$C$L518:    
	.dwpsn	file "../Source/prod.c",line 2663,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2663| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2663| 
        B         $C$L517,LT            ; [CPU_] |2663| 
        ; branchcc occurs ; [] |2663| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2670| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2670| 
        ; call occurs [#_scia_puts] ; [] |2670| 
	.dwpsn	file "../Source/prod.c",line 2671,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2671| 
        MOVL      XAR0,#84              ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
        MOV       AH,*-SP[55]           ; [CPU_] |2670| 
	.dwpsn	file "../Source/prod.c",line 2671,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2671| 
        MOV       *-SP[3],AH            ; [CPU_] |2671| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2671| 
        DEC       *-SP[55]              ; [CPU_] |2671| 
        MOV       *-SP[47],AH           ; [CPU_] |2671| 
        MOVL      XAR4,XAR1             ; [CPU_] |2671| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_sprintf")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2671| 
        ; call occurs [#_sprintf] ; [] |2671| 
	.dwpsn	file "../Source/prod.c",line 2673,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2671,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2673,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2673| 
        MOV       AL,#1024              ; [CPU_] |2673| 
        MOVL      XAR5,XAR1             ; [CPU_] |2673| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2673| 
        ; call occurs [#_scia_getparam] ; [] |2673| 
        MOVL      XAR4,XAR1             ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2674,column 6,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_atoi")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2674| 
        ; call occurs [#_atoi] ; [] |2674| 
        MOVZ      AR1,AL                ; [CPU_] |2674| 
        CMPB      AL,#7                 ; [CPU_] |2674| 
        B         $C$L519,LO            ; [CPU_] |2674| 
        ; branchcc occurs ; [] |2674| 
	.dwpsn	file "../Source/prod.c",line 2677,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2677| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2677| 
        ; call occurs [#_scia_puts] ; [] |2677| 
	.dwpsn	file "../Source/prod.c",line 2676,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2676| 
$C$L519:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2680| 
        ; call occurs [#_scia_puts] ; [] |2680| 
	.dwpsn	file "../Source/prod.c",line 2681,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2681| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2681| 
        ; call occurs [#_scia_puts] ; [] |2681| 
	.dwpsn	file "../Source/prod.c",line 2682,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2682| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2682| 
        MOVB      AL,#3                 ; [CPU_] |2682| 
        MOV       T,*-SP[55]            ; [CPU_] |2682| 
        MPYU      ACC,T,AL              ; [CPU_] |2682| 
        ADDL      ACC,XAR6              ; [CPU_] |2682| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2682| 
        MOVL      XAR4,ACC              ; [CPU_] |2682| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2682| 
	.dwpsn	file "../Source/prod.c",line 2684,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2684| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2684| 
        CMPB      AL,#2                 ; [CPU_] |2684| 
        B         $C$L523,LOS           ; [CPU_] |2684| 
        ; branchcc occurs ; [] |2684| 
        MOV       AH,AL                 ; [CPU_] |2684| 
        ADDB      AH,#-3                ; [CPU_] |2684| 
        CMPB      AH,#1                 ; [CPU_] |2684| 
        B         $C$L522,LOS           ; [CPU_] |2684| 
        ; branchcc occurs ; [] |2684| 
        CMPB      AL,#5                 ; [CPU_] |2684| 
        B         $C$L520,EQ            ; [CPU_] |2684| 
        ; branchcc occurs ; [] |2684| 
        CMPB      AL,#6                 ; [CPU_] |2684| 
        B         $C$L528,NEQ           ; [CPU_] |2684| 
        ; branchcc occurs ; [] |2684| 
	.dwpsn	file "../Source/prod.c",line 2758,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2758| 
        MOV       AL,*-SP[47]           ; [CPU_] |2758| 
        MOVL      XAR0,#60              ; [CPU_] |2758| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2758| 
        MOV       *-SP[3],AL            ; [CPU_] |2758| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2758| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2758| 
        ADDL      ACC,XAR6              ; [CPU_] |2758| 
        MOVL      XAR4,ACC              ; [CPU_] |2758| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2758| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2758| 
	.dwpsn	file "../Source/prod.c",line 2761,column 7,is_stmt,isa 0
        B         $C$L527,UNC           ; [CPU_] |2761| 
        ; branch occurs ; [] |2761| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2739,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2739| 
        MOVL      XAR0,#84              ; [CPU_] |2739| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2739| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_sprintf")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2739| 
        ; call occurs [#_sprintf] ; [] |2739| 
        MOVL      XAR0,#84              ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2740,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2739,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2740,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2740| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2740| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2740| 
        ; call occurs [#_scia_getparam] ; [] |2740| 
        MOVL      XAR0,#86              ; [CPU_] |2740| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2741,column 8,is_stmt,isa 0
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_atoi")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2741| 
        ; call occurs [#_atoi] ; [] |2741| 
        MOVL      XAR0,#86              ; [CPU_] |2741| 
        MOV       *-SP[56],AL           ; [CPU_] |2741| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2741| 
	.dwpsn	file "../Source/prod.c",line 2742,column 8,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2742| 
        ; call occurs [#_scia_puts] ; [] |2742| 
        MOV       AL,*-SP[56]           ; [CPU_] |2742| 
	.dwpsn	file "../Source/prod.c",line 2744,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2744| 
        CMPB      AL,#4                 ; [CPU_] |2744| 
        B         $C$L521,HIS           ; [CPU_] |2744| 
        ; branchcc occurs ; [] |2744| 
	.dwpsn	file "../Source/prod.c",line 2748,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2748| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2748| 
        ; call occurs [#_scia_puts] ; [] |2748| 
	.dwpsn	file "../Source/prod.c",line 2750,column 7,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2752,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2752| 
        MOVL      XAR0,#60              ; [CPU_] |2752| 
	.dwpsn	file "../Source/prod.c",line 2748,column 7,is_stmt,isa 0
        MOV       AL,*-SP[56]           ; [CPU_] |2748| 
	.dwpsn	file "../Source/prod.c",line 2750,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2752,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2752| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2752| 
        MOV       *-SP[3],AL            ; [CPU_] |2752| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2752| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2752| 
        ADDL      ACC,XAR6              ; [CPU_] |2752| 
        MOVL      XAR4,ACC              ; [CPU_] |2752| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2752| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2752| 
        MOVB      AL,#1                 ; [CPU_] |2752| 
        ADD       AL,*-SP[56]           ; [CPU_] |2752| 
        MOV       *-SP[7],AL            ; [CPU_] |2752| 
	.dwpsn	file "../Source/prod.c",line 2755,column 7,is_stmt,isa 0
        B         $C$L527,UNC           ; [CPU_] |2755| 
        ; branch occurs ; [] |2755| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2746,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2746| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2746| 
        ; call occurs [#_scia_puts] ; [] |2746| 
	.dwpsn	file "../Source/prod.c",line 2738,column 7,is_stmt,isa 0
        B         $C$L520,UNC           ; [CPU_] |2738| 
        ; branch occurs ; [] |2738| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2696,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2696| 
        B         $C$L524,UNC           ; [CPU_] |2696| 
        ; branch occurs ; [] |2696| 
$C$L523:    
	.dwpsn	file "../Source/prod.c",line 2690,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2690| 
$C$L524:    
        MOV       *-SP[57],AL           ; [CPU_] |2690| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2701,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2701| 
        MOV       AL,*-SP[57]           ; [CPU_] |2701| 
        MOVL      XAR0,#84              ; [CPU_] |2701| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2701| 
        MOV       *-SP[3],AL            ; [CPU_] |2701| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2701| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_sprintf")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2701| 
        ; call occurs [#_sprintf] ; [] |2701| 
        MOVL      XAR0,#84              ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2702,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2701,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2702,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2702| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2702| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2702| 
        ; call occurs [#_scia_getparam] ; [] |2702| 
        MOVL      XAR0,#86              ; [CPU_] |2702| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2703,column 8,is_stmt,isa 0
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_atoi")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2703| 
        ; call occurs [#_atoi] ; [] |2703| 
        MOVL      XAR0,#86              ; [CPU_] |2703| 
        MOV       *-SP[56],AL           ; [CPU_] |2703| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2704,column 8,is_stmt,isa 0
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2704| 
        ; call occurs [#_scia_puts] ; [] |2704| 
        MOV       AL,*-SP[56]           ; [CPU_] |2704| 
	.dwpsn	file "../Source/prod.c",line 2706,column 9,is_stmt,isa 0
        B         $C$L531,EQ            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[56]           ; [CPU_] |2706| 
        B         $C$L531,LO            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
	.dwpsn	file "../Source/prod.c",line 2710,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2710| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2710| 
        ; call occurs [#_scia_puts] ; [] |2710| 
	.dwpsn	file "../Source/prod.c",line 2712,column 7,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |2712| 
	.dwpsn	file "../Source/prod.c",line 2710,column 7,is_stmt,isa 0
        MOV       AL,*-SP[56]           ; [CPU_] |2710| 
	.dwpsn	file "../Source/prod.c",line 2712,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2712| 
$C$L526:    
	.dwpsn	file "../Source/prod.c",line 2717,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2717| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2717| 
        MOV       AL,#1024              ; [CPU_] |2717| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2717| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2717| 
        ; call occurs [#_scia_getparam] ; [] |2717| 
        MOVL      XAR0,#86              ; [CPU_] |2717| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2717| 
	.dwpsn	file "../Source/prod.c",line 2719,column 8,is_stmt,isa 0
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_atoi")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2719| 
        ; call occurs [#_atoi] ; [] |2719| 
        MOV       *-SP[48],AL           ; [CPU_] |2719| 
        CMPB      AL,#0                 ; [CPU_] |2719| 
        B         $C$L530,LT            ; [CPU_] |2719| 
        ; branchcc occurs ; [] |2719| 
        CMPB      AL,#6                 ; [CPU_] |2719| 
        B         $C$L530,GEQ           ; [CPU_] |2719| 
        ; branchcc occurs ; [] |2719| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2725,column 7,is_stmt,isa 0
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2725| 
        ; call occurs [#_scia_puts] ; [] |2725| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2726| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2726| 
        ; call occurs [#_scia_puts] ; [] |2726| 
        MOV       AL,*-SP[48]           ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2729,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2729| 
        MOVL      XAR0,#60              ; [CPU_] |2729| 
	.dwpsn	file "../Source/prod.c",line 2727,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2727| 
	.dwpsn	file "../Source/prod.c",line 2729,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2729| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2729| 
        MOV       *-SP[3],AL            ; [CPU_] |2729| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2729| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2729| 
        ADDL      ACC,XAR6              ; [CPU_] |2729| 
        MOVL      XAR4,ACC              ; [CPU_] |2729| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2729| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2729| 
        MOVB      AL,#1                 ; [CPU_] |2729| 
        ADD       AL,*-SP[56]           ; [CPU_] |2729| 
        MOV       *-SP[7],AL            ; [CPU_] |2729| 
        MOV       AL,*-SP[48]           ; [CPU_] |2729| 
        MOV       *-SP[8],AL            ; [CPU_] |2729| 
$C$L527:    
        MOVL      XAR0,#84              ; [CPU_] |2729| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2729| 
        MOVL      XAR4,XAR1             ; [CPU_] |2729| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_sprintf")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2729| 
        ; call occurs [#_sprintf] ; [] |2729| 
        MOVL      XAR4,XAR1             ; [CPU_] |2729| 
	.dwpsn	file "../Source/prod.c",line 2732,column 7,is_stmt,isa 0
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2732| 
        ; call occurs [#_scia_puts] ; [] |2732| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2764,column 6,is_stmt,isa 0
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2764| 
        ; call occurs [#_lcd_clear] ; [] |2764| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2765,column 6,is_stmt,isa 0
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_update_units")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2765| 
        ; call occurs [#_update_units] ; [] |2765| 
	.dwpsn	file "../Source/prod.c",line 2767,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |2767| 
        ; branch occurs ; [] |2767| 
$C$L530:    
	.dwpsn	file "../Source/prod.c",line 2723,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2723| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2723| 
        ; call occurs [#_scia_puts] ; [] |2723| 
	.dwpsn	file "../Source/prod.c",line 2716,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2716| 
        ; branch occurs ; [] |2716| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 2708,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2708| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2708| 
        ; call occurs [#_scia_puts] ; [] |2708| 
	.dwpsn	file "../Source/prod.c",line 2700,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2700| 
        ; branch occurs ; [] |2700| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 2657,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2657| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2657| 
        ; call occurs [#_scia_puts] ; [] |2657| 
	.dwpsn	file "../Source/prod.c",line 2649,column 6,is_stmt,isa 0
        B         $C$L516,UNC           ; [CPU_] |2649| 
        ; branch occurs ; [] |2649| 
$C$L533:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1747,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1747| 
        B         $C$L626,LO            ; [CPU_] |1747| 
        ; branchcc occurs ; [] |1747| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1752| 
        CMPB      AL,#86                ; [CPU_] |1752| 
        B         $C$L534,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#77                ; [CPU_] |1752| 
        B         $C$L534,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#83                ; [CPU_] |1752| 
        B         $C$L626,NEQ           ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1755,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1755| 
        MOV       *-SP[47],AL           ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1757,column 5,is_stmt,isa 0
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1757| 
        ; call occurs [#_lcd_clear] ; [] |1757| 
	.dwpsn	file "../Source/prod.c",line 1758,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1758| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1758| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1758| 
        ; call occurs [#_lcd_puts] ; [] |1758| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1764,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1764| 
        MOVL      XAR0,#84              ; [CPU_] |1764| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1764| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1764| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1764| 
        MOVL      XAR4,XAR1             ; [CPU_] |1764| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_sprintf")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1764| 
        ; call occurs [#_sprintf] ; [] |1764| 
	.dwpsn	file "../Source/prod.c",line 1765,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1765| 
	.dwpsn	file "../Source/prod.c",line 1764,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1764| 
	.dwpsn	file "../Source/prod.c",line 1765,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1765| 
        MOV       AL,#1024              ; [CPU_] |1765| 
        MOVL      XAR5,XAR1             ; [CPU_] |1765| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1765| 
        ; call occurs [#_scia_getparam] ; [] |1765| 
	.dwpsn	file "../Source/prod.c",line 1766,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1766| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_atoi")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1766| 
        ; call occurs [#_atoi] ; [] |1766| 
        MOV       *-SP[56],AL           ; [CPU_] |1766| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1767| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1767| 
        ; call occurs [#_scia_puts] ; [] |1767| 
        MOV       AL,*-SP[56]           ; [CPU_] |1767| 
	.dwpsn	file "../Source/prod.c",line 1769,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1769| 
        CMPB      AL,#4                 ; [CPU_] |1769| 
        B         $C$L591,HIS           ; [CPU_] |1769| 
        ; branchcc occurs ; [] |1769| 
	.dwpsn	file "../Source/prod.c",line 1773,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1773| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1773| 
        ; call occurs [#_scia_puts] ; [] |1773| 
	.dwpsn	file "../Source/prod.c",line 1774,column 5,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |1774| 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1779| 
        MOVL      XAR0,#84              ; [CPU_] |1779| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1779| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1779| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1779| 
        MOVL      XAR4,XAR1             ; [CPU_] |1779| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_sprintf")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1779| 
        ; call occurs [#_sprintf] ; [] |1779| 
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1780| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1780| 
        MOV       AL,#1024              ; [CPU_] |1780| 
        MOVL      XAR5,XAR1             ; [CPU_] |1780| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1780| 
        ; call occurs [#_scia_getparam] ; [] |1780| 
	.dwpsn	file "../Source/prod.c",line 1781,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1781| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_atoi")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1781| 
        ; call occurs [#_atoi] ; [] |1781| 
        MOV       *-SP[55],AL           ; [CPU_] |1781| 
	.dwpsn	file "../Source/prod.c",line 1782,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1782| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1782| 
        ; call occurs [#_scia_puts] ; [] |1782| 
        MOV       AL,*-SP[55]           ; [CPU_] |1782| 
	.dwpsn	file "../Source/prod.c",line 1786,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1786| 
        CMPB      AL,#20                ; [CPU_] |1786| 
        B         $C$L590,HIS           ; [CPU_] |1786| 
        ; branchcc occurs ; [] |1786| 
	.dwpsn	file "../Source/prod.c",line 1790,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1790| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1790| 
        ; call occurs [#_scia_puts] ; [] |1790| 
	.dwpsn	file "../Source/prod.c",line 1794,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1794| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1794| 
        MOVL      XAR0,#84              ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1790,column 5,is_stmt,isa 0
        MOV       AH,*-SP[55]           ; [CPU_] |1790| 
	.dwpsn	file "../Source/prod.c",line 1794,column 5,is_stmt,isa 0
        ADD       AL,*-SP[56]           ; [CPU_] |1794| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1794| 
        MOV       *-SP[3],AL            ; [CPU_] |1794| 
        MOV       *-SP[4],AH            ; [CPU_] |1794| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1794| 
        DEC       *-SP[55]              ; [CPU_] |1794| 
        MOV       *-SP[57],AH           ; [CPU_] |1794| 
        MOV       *-SP[58],AL           ; [CPU_] |1794| 
        MOVL      XAR4,XAR1             ; [CPU_] |1794| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_sprintf")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1794| 
        ; call occurs [#_sprintf] ; [] |1794| 
	.dwpsn	file "../Source/prod.c",line 1795,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1795| 
        MOVL      XAR4,XAR1             ; [CPU_] |1795| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1795| 
        ; call occurs [#_lcd_puts] ; [] |1795| 
	.dwpsn	file "../Source/prod.c",line 1799,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1799| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1799| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1799| 
        MOVL      XAR4,XAR1             ; [CPU_] |1799| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_sprintf")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1799| 
        ; call occurs [#_sprintf] ; [] |1799| 
	.dwpsn	file "../Source/prod.c",line 1800,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1800| 
        MOV       AL,#1024              ; [CPU_] |1800| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1800| 
        MOVL      XAR4,XAR1             ; [CPU_] |1800| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1800| 
        ; call occurs [#_scia_getparam] ; [] |1800| 
        CMPB      AL,#15                ; [CPU_] |1800| 
        B         $C$L537,LOS           ; [CPU_] |1800| 
        ; branchcc occurs ; [] |1800| 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1804| 
        MOVB      XAR0,#15              ; [CPU_] |1804| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1803| 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1804| 
$C$L537:    
	.dwpsn	file "../Source/prod.c",line 1806,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1806| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1806| 
        MOVL      XAR0,#86              ; [CPU_] |1806| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1806| 
        MOVB      AH,#1                 ; [CPU_] |1806| 
        ADD       AH,AL                 ; [CPU_] |1806| 
        MOVU      ACC,AH                ; [CPU_] |1806| 
        MOVL      XAR5,XAR1             ; [CPU_] |1806| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_memcpy")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1806| 
        ; call occurs [#_memcpy] ; [] |1806| 
        MOVL      XAR4,XAR1             ; [CPU_] |1806| 
	.dwpsn	file "../Source/prod.c",line 1807,column 5,is_stmt,isa 0
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1807| 
        ; call occurs [#_scia_puts] ; [] |1807| 
	.dwpsn	file "../Source/prod.c",line 1808,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1808| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1808| 
        ; call occurs [#_scia_puts] ; [] |1808| 
	.dwpsn	file "../Source/prod.c",line 1812,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1812| 
        MOVL      XAR0,#84              ; [CPU_] |1812| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1812| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1812| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1812| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_sprintf")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1812| 
        ; call occurs [#_sprintf] ; [] |1812| 
        MOVL      XAR0,#84              ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1813| 
	.dwpsn	file "../Source/prod.c",line 1812,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1813| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1813| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1813| 
        ; call occurs [#_scia_getparam] ; [] |1813| 
        CMPB      AL,#15                ; [CPU_] |1813| 
        B         $C$L538,LOS           ; [CPU_] |1813| 
        ; branchcc occurs ; [] |1813| 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1817| 
        MOVB      XAR0,#15              ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1816,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1817| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1819,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1819| 
        MOVL      XAR0,#58              ; [CPU_] |1819| 
        MOVL      XAR5,XAR1             ; [CPU_] |1819| 
        ADD       AH,AL                 ; [CPU_] |1819| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1819| 
        MOVU      ACC,AH                ; [CPU_] |1819| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_memcpy")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1819| 
        ; call occurs [#_memcpy] ; [] |1819| 
        MOVL      XAR4,XAR1             ; [CPU_] |1819| 
	.dwpsn	file "../Source/prod.c",line 1820,column 5,is_stmt,isa 0
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1820| 
        ; call occurs [#_scia_puts] ; [] |1820| 
	.dwpsn	file "../Source/prod.c",line 1821,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1821| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1821| 
        ; call occurs [#_scia_puts] ; [] |1821| 
        MOVL      XAR0,#68              ; [CPU_] |1821| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1821| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1824,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1824| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[59],AL           ; [CPU_] |1824| 
$C$L539:    
	.dwpsn	file "../Source/prod.c",line 1825,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1825| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1825| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1825| 
        MOV       *-SP[3],AL            ; [CPU_] |1825| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1825| 
        MOVL      *-SP[62],XAR4         ; [CPU_] |1825| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1825| 
        MOVL      XAR4,XAR1             ; [CPU_] |1825| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_sprintf")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1825| 
        ; call occurs [#_sprintf] ; [] |1825| 
	.dwpsn	file "../Source/prod.c",line 1824,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1824| 
        INC       *-SP[59]              ; [CPU_] |1824| 
        MOV       AL,*-SP[59]           ; [CPU_] |1824| 
        CMPB      AL,#7                 ; [CPU_] |1824| 
        B         $C$L539,LT            ; [CPU_] |1824| 
        ; branchcc occurs ; [] |1824| 
	.dwpsn	file "../Source/prod.c",line 1827,column 5,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |1827| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1827| 
        MOVB      XAR1,#54              ; [CPU_] |1827| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1827| 
	.dwpsn	file "../Source/prod.c",line 1828,column 5,is_stmt,isa 0
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1828| 
        ; call occurs [#_scia_puts] ; [] |1828| 
	.dwpsn	file "../Source/prod.c",line 1829,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1829| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1829| 
        MOV       AL,#1024              ; [CPU_] |1829| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1829| 
        MOVL      XAR5,XAR1             ; [CPU_] |1829| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1829| 
        ; call occurs [#_scia_getparam] ; [] |1829| 
        MOVL      XAR4,XAR1             ; [CPU_] |1829| 
	.dwpsn	file "../Source/prod.c",line 1831,column 5,is_stmt,isa 0
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_atoi")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1831| 
        ; call occurs [#_atoi] ; [] |1831| 
        MOVB      XAR0,#42              ; [CPU_] |1831| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1831| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1833,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1833| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1833| 
        CMPB      AL,#6                 ; [CPU_] |1833| 
        B         $C$L540,GT            ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
        CMPB      AL,#6                 ; [CPU_] |1833| 
        B         $C$L543,EQ            ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
        CMPB      AL,#1                 ; [CPU_] |1833| 
        B         $C$L546,LOS           ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
        MOV       AH,AL                 ; [CPU_] |1833| 
        ADDB      AH,#-2                ; [CPU_] |1833| 
        CMPB      AH,#2                 ; [CPU_] |1833| 
        B         $C$L545,LOS           ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
        CMPB      AL,#5                 ; [CPU_] |1833| 
        B         $C$L544,EQ            ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
        B         $C$L541,UNC           ; [CPU_] |1833| 
        ; branch occurs ; [] |1833| 
$C$L540:    
        MOV       AH,AL                 ; [CPU_] |1833| 
        ADDB      AH,#-7                ; [CPU_] |1833| 
        CMPB      AH,#1                 ; [CPU_] |1833| 
        B         $C$L542,LOS           ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
        CMPB      AL,#15                ; [CPU_] |1833| 
        B         $C$L542,EQ            ; [CPU_] |1833| 
        ; branchcc occurs ; [] |1833| 
$C$L541:    
	.dwpsn	file "../Source/prod.c",line 1855,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1855| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1855| 
	.dwpsn	file "../Source/prod.c",line 1856,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1856| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1856| 
        ; call occurs [#_scia_puts] ; [] |1856| 
	.dwpsn	file "../Source/prod.c",line 1857,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1857| 
        ; branch occurs ; [] |1857| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1852,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1852| 
	.dwpsn	file "../Source/prod.c",line 1853,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1853| 
        ; branch occurs ; [] |1853| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1848| 
        ; branch occurs ; [] |1848| 
$C$L544:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1844,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1844| 
	.dwpsn	file "../Source/prod.c",line 1845,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1845| 
        ; branch occurs ; [] |1845| 
$C$L545:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1841,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1841| 
	.dwpsn	file "../Source/prod.c",line 1842,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1842| 
        ; branch occurs ; [] |1842| 
$C$L546:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1836,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1836| 
$C$L547:    
	.dwpsn	file "../Source/prod.c",line 1859,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1859| 
        MOVL      XAR4,XAR7             ; [CPU_] |1859| 
        MOVB      XAR0,#43              ; [CPU_] |1859| 
        ADDB      XAR7,#42              ; [CPU_] |1859| 
        MOV       AL,*XAR7              ; [CPU_] |1859| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1859| 
	.dwpsn	file "../Source/prod.c",line 1860,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1860| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1860| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1860| 
        MOVL      XAR0,#86              ; [CPU_] |1860| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1862,column 5,is_stmt,isa 0
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1862| 
        ; call occurs [#_scia_puts] ; [] |1862| 
	.dwpsn	file "../Source/prod.c",line 1863,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1863| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1863| 
        ; call occurs [#_scia_puts] ; [] |1863| 
$C$L548:    
	.dwpsn	file "../Source/prod.c",line 1868,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1868| 
        MOVL      XAR5,XAR1             ; [CPU_] |1868| 
        MOV       AL,#1024              ; [CPU_] |1868| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1868| 
        ; call occurs [#_scia_getparam] ; [] |1868| 
        MOVL      XAR4,XAR1             ; [CPU_] |1868| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_strtod")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1869,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1869| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1869| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1869,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1869| 
	.dwpsn	file "../Source/prod.c",line 1871,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1871| 
        MOV       AH,#0                 ; [CPU_] |1871| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1871| 
        MOVL      ACC,XAR3              ; [CPU_] |1871| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1871| 
        ; call occurs [#FS$$CMP] ; [] |1871| 
        CMPB      AL,#0                 ; [CPU_] |1871| 
        B         $C$L589,EQ            ; [CPU_] |1871| 
        ; branchcc occurs ; [] |1871| 
	.dwpsn	file "../Source/prod.c",line 1875,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1875| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1875| 
        MOVB      XAR1,#142             ; [CPU_] |1875| 
        MOVL      XAR0,#86              ; [CPU_] |1875| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1875| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1875| 
	.dwpsn	file "../Source/prod.c",line 1876,column 5,is_stmt,isa 0
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1876| 
        ; call occurs [#_scia_puts] ; [] |1876| 
	.dwpsn	file "../Source/prod.c",line 1877,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1877| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1877| 
        ; call occurs [#_scia_puts] ; [] |1877| 
        MOV       AL,*-SP[56]           ; [CPU_] |1877| 
	.dwpsn	file "../Source/prod.c",line 1879,column 5,is_stmt,isa 0
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_tagid")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1879| 
        ; call occurs [#_tagid] ; [] |1879| 
        MOVL      XAR0,#36              ; [CPU_] |1879| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1879| 
        MOVL      XAR4,XAR5             ; [CPU_] |1879| 
        ADDB      XAR4,#32              ; [CPU_] |1879| 
	.dwpsn	file "../Source/prod.c",line 1881,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1881| 
	.dwpsn	file "../Source/prod.c",line 1879,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1879| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1879| 
	.dwpsn	file "../Source/prod.c",line 1881,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1881| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1881| 
        MOV       *-SP[2],#0            ; [CPU_] |1881| 
        MOV       *-SP[1],#0            ; [CPU_] |1881| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1881| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1881| 
        MOVL      P,XAR4                ; [CPU_] |1881| 
        MOVL      ACC,XAR5              ; [CPU_] |1881| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1210, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1881| 
        ; call occurs [#ULL$$CMP] ; [] |1881| 
        CMPB      AL,#0                 ; [CPU_] |1881| 
        B         $C$L549,NEQ           ; [CPU_] |1881| 
        ; branchcc occurs ; [] |1881| 
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1882| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1882| 
	.dwpsn	file "../Source/prod.c",line 1883,column 5,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1883| 
        ; branch occurs ; [] |1883| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1884,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1884| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1884| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1884| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1884| 
$C$L550:    
        MOVL      XAR0,#84              ; [CPU_] |1884| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1884| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_sprintf")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1884| 
        ; call occurs [#_sprintf] ; [] |1884| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1886,column 5,is_stmt,isa 0
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1886| 
        ; call occurs [#_scia_puts] ; [] |1886| 
        MOV       AL,*-SP[47]           ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1888,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1888| 
        B         $C$L564,EQ            ; [CPU_] |1888| 
        ; branchcc occurs ; [] |1888| 
        CMPB      AL,#83                ; [CPU_] |1888| 
        B         $C$L556,EQ            ; [CPU_] |1888| 
        ; branchcc occurs ; [] |1888| 
        CMPB      AL,#86                ; [CPU_] |1888| 
        B         $C$L619,NEQ           ; [CPU_] |1888| 
        ; branchcc occurs ; [] |1888| 
	.dwpsn	file "../Source/prod.c",line 1893,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1893| 
        MOVB      AL,#40                ; [CPU_] |1893| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1893| 
        ; call occurs [#_lcd_puts] ; [] |1893| 
	.dwpsn	file "../Source/prod.c",line 1895,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1895| 
        MOVB      XAR0,#36              ; [CPU_] |1895| 
	.dwpsn	file "../Source/prod.c",line 1898,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1898| 
	.dwpsn	file "../Source/prod.c",line 1895,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1895| 
	.dwpsn	file "../Source/prod.c",line 1896,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1896| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1896| 
	.dwpsn	file "../Source/prod.c",line 1898,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1898| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1898| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1898| 
        MOVL      XAR0,#68              ; [CPU_] |1898| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1898| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1898| 
        MOV       ACC,AL << 1           ; [CPU_] |1898| 
        ADDL      ACC,XAR6              ; [CPU_] |1898| 
        MOVL      XAR4,ACC              ; [CPU_] |1898| 
        MOVL      XAR0,#84              ; [CPU_] |1898| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1898| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1898| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1898| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_sprintf")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1898| 
        ; call occurs [#_sprintf] ; [] |1898| 
        MOVL      XAR0,#84              ; [CPU_] |1898| 
	.dwpsn	file "../Source/prod.c",line 1900,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1900| 
	.dwpsn	file "../Source/prod.c",line 1898,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1898| 
	.dwpsn	file "../Source/prod.c",line 1900,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1900| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1900| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1900| 
        ; call occurs [#_scia_getparam] ; [] |1900| 
        MOVL      XAR0,#86              ; [CPU_] |1900| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1900,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1900| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_strtod")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1901,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1901| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1901,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1902,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1902| 
        MOV       AH,#0                 ; [CPU_] |1902| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1902| 
        MOVL      ACC,XAR6              ; [CPU_] |1902| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1902| 
        ; call occurs [#FS$$CMP] ; [] |1902| 
        CMPB      AL,#0                 ; [CPU_] |1902| 
        B         $C$L551,NEQ           ; [CPU_] |1902| 
        ; branchcc occurs ; [] |1902| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1903| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1903| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1903| 
$C$L551:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1905,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1905| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1905| 
        ; call occurs [#_scia_puts] ; [] |1905| 
	.dwpsn	file "../Source/prod.c",line 1906,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1906| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1906| 
        ; call occurs [#_scia_puts] ; [] |1906| 
	.dwpsn	file "../Source/prod.c",line 1908,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1908| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1908| 
        MOVL      XAR5,XAR1             ; [CPU_] |1908| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1908| 
        ; call occurs [#_scia_getparam] ; [] |1908| 
	.dwpsn	file "../Source/prod.c",line 1911,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1911| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1911| 
        ; call occurs [#_scia_puts] ; [] |1911| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1913| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1914| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1913| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1914| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1913| 
	.dwpsn	file "../Source/prod.c",line 1915,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1915| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1913| 
	.dwpsn	file "../Source/prod.c",line 1915,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1915| 
        MOVB      ACC,#0                ; [CPU_] |1915| 
        SUBB      ACC,#1                ; [CPU_] |1915| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1915| 
        B         $C$L554,EQ            ; [CPU_] |1915| 
        ; branchcc occurs ; [] |1915| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1916,column 14,is_stmt,isa 0
        B         $C$L553,UNC           ; [CPU_] |1916| 
        ; branch occurs ; [] |1916| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1917,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1917| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_delay_us")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1917| 
        ; call occurs [#_delay_us] ; [] |1917| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1916,column 14,is_stmt,isa 0
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1916| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1916| 
        CMPB      AL,#0                 ; [CPU_] |1916| 
        B         $C$L552,EQ            ; [CPU_] |1916| 
        ; branchcc occurs ; [] |1916| 
	.dwpsn	file "../Source/prod.c",line 1920,column 7,is_stmt,isa 0
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1920| 
        ; call occurs [#_ad7738_getraw] ; [] |1920| 
	.dwpsn	file "../Source/prod.c",line 1921,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1921| 
        ADDL      XAR4,ACC              ; [CPU_] |1921| 
        MOVL      XAR0,#20              ; [CPU_] |1921| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1921| 
        MOVL      XAR0,#20              ; [CPU_] |1921| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1921| 
        ASR64     ACC:P,16              ; [CPU_] |1921| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1921| 
        MOVL      XAR0,#20              ; [CPU_] |1921| 
        ASR64     ACC:P,16              ; [CPU_] |1921| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1921| 
        MOVL      XAR0,#20              ; [CPU_] |1921| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1921| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1921| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1921| 
        MOVL      *-SP[32],P            ; [CPU_] |1921| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1921| 
	.dwpsn	file "../Source/prod.c",line 1915,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1915| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1915| 
        MOVB      ACC,#0                ; [CPU_] |1915| 
        SUBB      ACC,#1                ; [CPU_] |1915| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1915| 
        B         $C$L553,NEQ           ; [CPU_] |1915| 
        ; branchcc occurs ; [] |1915| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1923,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1923| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1923| 
        ; call occurs [#_scia_puts] ; [] |1923| 
	.dwpsn	file "../Source/prod.c",line 1925,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1925| 
        MOVL      XAR0,#50              ; [CPU_] |1925| 
        MOVL      ACC,XAR1              ; [CPU_] |1925| 
        ADDB      ACC,#96               ; [CPU_] |1925| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1925| 
        MOVL      XAR0,#40              ; [CPU_] |1925| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1925| 
        MOV       T,*-SP[56]            ; [CPU_] |1925| 
        MOVB      AL,#10                ; [CPU_] |1925| 
        MPYU      ACC,T,AL              ; [CPU_] |1925| 
        ADDL      ACC,XAR6              ; [CPU_] |1925| 
        ADDB      ACC,#42               ; [CPU_] |1925| 
        MOVL      XAR4,ACC              ; [CPU_] |1925| 
        MOVL      XAR0,#42              ; [CPU_] |1925| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1925| 
$C$L555:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1925| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1925| 
        ; call occurs [#FS$$NEG] ; [] |1925| 
        MOVB      XAR0,#96              ; [CPU_] |1925| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1925| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1925| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1925| 
        ; call occurs [#FS$$MPY] ; [] |1925| 
        MOVL      *-SP[62],ACC          ; [CPU_] |1925| 
        MOVL      P,*-SP[32]            ; [CPU_] |1925| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1925| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1925| 
        ; call occurs [#LL$$TOFS] ; [] |1925| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1925| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |1925| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1925| 
        ; call occurs [#FS$$MPY] ; [] |1925| 
        MOVL      XAR6,ACC              ; [CPU_] |1925| 
        MOV       AL,#16384             ; [CPU_] |1925| 
        MOV       AH,#17948             ; [CPU_] |1925| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1925| 
        MOVL      ACC,XAR6              ; [CPU_] |1925| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1925| 
        ; call occurs [#FS$$DIV] ; [] |1925| 
        MOVB      XAR0,#118             ; [CPU_] |1925| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1925| 
	.dwpsn	file "../Source/prod.c",line 1927,column 6,is_stmt,isa 0
        B         $C$L578,UNC           ; [CPU_] |1927| 
        ; branch occurs ; [] |1927| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 2010,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |2010| 
        MOVB      AL,#40                ; [CPU_] |2010| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |2010| 
        ; call occurs [#_lcd_puts] ; [] |2010| 
	.dwpsn	file "../Source/prod.c",line 2012,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |2012| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2012| 
	.dwpsn	file "../Source/prod.c",line 2015,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |2015| 
	.dwpsn	file "../Source/prod.c",line 2012,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |2012| 
	.dwpsn	file "../Source/prod.c",line 2013,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |2013| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |2013| 
	.dwpsn	file "../Source/prod.c",line 2015,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |2015| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |2015| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2015| 
        MOVL      XAR0,#68              ; [CPU_] |2015| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2015| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2015| 
        MOV       ACC,AL << 1           ; [CPU_] |2015| 
        ADDL      ACC,XAR6              ; [CPU_] |2015| 
        MOVL      XAR4,ACC              ; [CPU_] |2015| 
        MOVL      XAR0,#84              ; [CPU_] |2015| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2015| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2015| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2015| 
        MOVL      XAR4,XAR1             ; [CPU_] |2015| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_sprintf")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2015| 
        ; call occurs [#_sprintf] ; [] |2015| 
	.dwpsn	file "../Source/prod.c",line 2018,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2018| 
	.dwpsn	file "../Source/prod.c",line 2015,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2015| 
	.dwpsn	file "../Source/prod.c",line 2018,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2018| 
        MOV       AL,#1024              ; [CPU_] |2018| 
        MOVL      XAR5,XAR1             ; [CPU_] |2018| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2018| 
        ; call occurs [#_scia_getparam] ; [] |2018| 
	.dwpsn	file "../Source/prod.c",line 2019,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2019| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2019| 
        ; call occurs [#_scia_puts] ; [] |2019| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_strtod")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2021,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2021| 
        MOV       AH,#0                 ; [CPU_] |2021| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2021| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2021| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2021| 
        ; call occurs [#FS$$CMP] ; [] |2021| 
        CMPB      AL,#0                 ; [CPU_] |2021| 
        B         $C$L557,NEQ           ; [CPU_] |2021| 
        ; branchcc occurs ; [] |2021| 
	.dwpsn	file "../Source/prod.c",line 2022,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |2022| 
        MOV       AH,#16314             ; [CPU_] |2022| 
	.dwpsn	file "../Source/prod.c",line 2023,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |2023| 
	.dwpsn	file "../Source/prod.c",line 2022,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2022| 
	.dwpsn	file "../Source/prod.c",line 2023,column 7,is_stmt,isa 0
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2023| 
        ; call occurs [#_scia_puts] ; [] |2023| 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 2025,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2025| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2025| 
        ; call occurs [#_scia_puts] ; [] |2025| 
	.dwpsn	file "../Source/prod.c",line 2027,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2027| 
        MOV       AL,#1024              ; [CPU_] |2027| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |2027| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2027| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2027| 
        ; call occurs [#_scia_getparam] ; [] |2027| 
	.dwpsn	file "../Source/prod.c",line 2030,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |2030| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2030| 
        ; call occurs [#_scia_puts] ; [] |2030| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2032,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2032| 
        MOV       *-SP[48],AL           ; [CPU_] |2032| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 2033,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2033| 
        B         $C$L560,LEQ           ; [CPU_] |2033| 
        ; branchcc occurs ; [] |2033| 
	.dwpsn	file "../Source/prod.c",line 2035,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2035| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2035| 
        ; call occurs [#_shunt_switch] ; [] |2035| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 2037,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2037| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_delay_us")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2037| 
        ; call occurs [#_delay_us] ; [] |2037| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2037| 
	.dwpsn	file "../Source/prod.c",line 2036,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2036| 
        MOVZ      AR0,AR6               ; [CPU_] |2036| 
        MOV       *-SP[47],AR6          ; [CPU_] |2036| 
        CMP       AR0,#-1               ; [CPU_] |2036| 
        B         $C$L559,NEQ           ; [CPU_] |2036| 
        ; branchcc occurs ; [] |2036| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2040,column 8,is_stmt,isa 0
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2040| 
        ; call occurs [#_maf_rst] ; [] |2040| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2042,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2042| 
        SPM       #0                    ; [CPU_] 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_delay_us")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2042| 
        ; call occurs [#_delay_us] ; [] |2042| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 2045,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2046,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2046| 
	.dwpsn	file "../Source/prod.c",line 2045,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |2045| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2047,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2046,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2047,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2047| 
        MOVB      ACC,#0                ; [CPU_] |2047| 
        SUBB      ACC,#1                ; [CPU_] |2047| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2047| 
        B         $C$L562,EQ            ; [CPU_] |2047| 
        ; branchcc occurs ; [] |2047| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
$C$L561:    
	.dwpsn	file "../Source/prod.c",line 2048,column 15,is_stmt,isa 0
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2048| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2048| 
        CMPB      AL,#0                 ; [CPU_] |2048| 
        B         $C$L563,EQ            ; [CPU_] |2048| 
        ; branchcc occurs ; [] |2048| 
	.dwpsn	file "../Source/prod.c",line 2052,column 8,is_stmt,isa 0
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2052| 
        ; call occurs [#_ad7738_getraw] ; [] |2052| 
	.dwpsn	file "../Source/prod.c",line 2053,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |2053| 
        ADDL      XAR4,ACC              ; [CPU_] |2053| 
        MOVL      XAR0,#18              ; [CPU_] |2053| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2053| 
        MOVL      XAR0,#18              ; [CPU_] |2053| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2053| 
        ASR64     ACC:P,16              ; [CPU_] |2053| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2053| 
        MOVL      XAR0,#18              ; [CPU_] |2053| 
        ASR64     ACC:P,16              ; [CPU_] |2053| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2053| 
        MOVL      XAR0,#18              ; [CPU_] |2053| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |2053| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2053| 
        MOVL      XAR0,#18              ; [CPU_] |2053| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2053| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |2053| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |2053| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2053| 
	.dwpsn	file "../Source/prod.c",line 2047,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2047| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2047| 
        MOVB      ACC,#0                ; [CPU_] |2047| 
        SUBB      ACC,#1                ; [CPU_] |2047| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2047| 
        B         $C$L561,NEQ           ; [CPU_] |2047| 
        ; branchcc occurs ; [] |2047| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 2032,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |2032| 
        ADDB      XAR1,#4               ; [CPU_] |2032| 
        MOV       AL,*-SP[48]           ; [CPU_] |2032| 
        CMPB      AL,#2                 ; [CPU_] |2032| 
        B         $C$L558,LT            ; [CPU_] |2032| 
        ; branchcc occurs ; [] |2032| 
	.dwpsn	file "../Source/prod.c",line 2057,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2057| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2057| 
        ; call occurs [#_shunt_switch] ; [] |2057| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2059,column 6,is_stmt,isa 0
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2059| 
        ; call occurs [#_maf_rst] ; [] |2059| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2062,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2062| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2062| 
        ; call occurs [#_scia_puts] ; [] |2062| 
	.dwpsn	file "../Source/prod.c",line 2064,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2064| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2064| 
        MOVB      AL,#10                ; [CPU_] |2064| 
        MOV       T,*-SP[56]            ; [CPU_] |2064| 
        MPYU      ACC,T,AL              ; [CPU_] |2064| 
        ADDL      ACC,XAR6              ; [CPU_] |2064| 
        MOVL      *-SP[62],ACC          ; [CPU_] |2064| 
        MOV       AL,#16384             ; [CPU_] |2064| 
        MOV       AH,#17948             ; [CPU_] |2064| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2064| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2064| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2064| 
        ; call occurs [#FS$$MPY] ; [] |2064| 
        MOVL      XAR1,ACC              ; [CPU_] |2064| 
        MOVL      P,*-SP[28]            ; [CPU_] |2064| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |2064| 
        SUBUL     P,*-SP[32]            ; [CPU_] |2064| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |2064| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2064| 
        ; call occurs [#LL$$TOFS] ; [] |2064| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |2064| 
        MOVB      XAR0,#44              ; [CPU_] |2064| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2064| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2064| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2064| 
        ; call occurs [#FS$$MPY] ; [] |2064| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2064| 
        MOVL      ACC,XAR1              ; [CPU_] |2064| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2064| 
        ; call occurs [#FS$$DIV] ; [] |2064| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2064| 
        MOVB      XAR0,#96              ; [CPU_] |2064| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2064| 
	.dwpsn	file "../Source/prod.c",line 2066,column 6,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |2066| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |2066| 
        MOVL      ACC,XAR1              ; [CPU_] |2066| 
        ADDB      ACC,#96               ; [CPU_] |2066| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2066| 
        ADDB      XAR4,#42              ; [CPU_] |2066| 
        MOVL      XAR0,#42              ; [CPU_] |2066| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2066| 
	.dwpsn	file "../Source/prod.c",line 2068,column 6,is_stmt,isa 0
        B         $C$L555,UNC           ; [CPU_] |2068| 
        ; branch occurs ; [] |2068| 
$C$L563:    
	.dwpsn	file "../Source/prod.c",line 2049,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2049| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_delay_us")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2049| 
        ; call occurs [#_delay_us] ; [] |2049| 
	.dwpsn	file "../Source/prod.c",line 2048,column 15,is_stmt,isa 0
        B         $C$L561,UNC           ; [CPU_] |2048| 
        ; branch occurs ; [] |2048| 
$C$L564:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1931,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1931| 
$C$L565:    
	.dwpsn	file "../Source/prod.c",line 1936,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1936| 
        MOVL      XAR0,#84              ; [CPU_] |1936| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1936| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1936| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1936| 
        MOVL      XAR4,XAR1             ; [CPU_] |1936| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_sprintf")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1936| 
        ; call occurs [#_sprintf] ; [] |1936| 
	.dwpsn	file "../Source/prod.c",line 1937,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1937| 
	.dwpsn	file "../Source/prod.c",line 1936,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1936| 
	.dwpsn	file "../Source/prod.c",line 1937,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1937| 
        MOV       AL,#1024              ; [CPU_] |1937| 
        MOVL      XAR5,XAR1             ; [CPU_] |1937| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1937| 
        ; call occurs [#_scia_getparam] ; [] |1937| 
        MOVL      XAR4,XAR1             ; [CPU_] |1937| 
	.dwpsn	file "../Source/prod.c",line 1938,column 7,is_stmt,isa 0
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_atoi")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1938| 
        ; call occurs [#_atoi] ; [] |1938| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1938| 
        MOVB      XAR0,#46              ; [CPU_] |1938| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1938| 
        MOVL      XAR0,#86              ; [CPU_] |1938| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1938| 
	.dwpsn	file "../Source/prod.c",line 1939,column 7,is_stmt,isa 0
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1939| 
        ; call occurs [#_scia_puts] ; [] |1939| 
	.dwpsn	file "../Source/prod.c",line 1941,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1941| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1941| 
        CMPB      AL,#2                 ; [CPU_] |1941| 
        B         $C$L588,LT            ; [CPU_] |1941| 
        ; branchcc occurs ; [] |1941| 
        CMPB      AL,#12                ; [CPU_] |1941| 
        B         $C$L588,GT            ; [CPU_] |1941| 
        ; branchcc occurs ; [] |1941| 
	.dwpsn	file "../Source/prod.c",line 1946,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1946| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1946| 
        ; call occurs [#_scia_puts] ; [] |1946| 
	.dwpsn	file "../Source/prod.c",line 1948,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1948| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1948| 
        MOVL      XAR0,#84              ; [CPU_] |1948| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1948| 
        ADDB      XAR7,#46              ; [CPU_] |1948| 
        MOV       AL,*XAR7              ; [CPU_] |1948| 
        MOV       *-SP[3],AL            ; [CPU_] |1948| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1948| 
        MOVL      XAR4,XAR1             ; [CPU_] |1948| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_sprintf")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1948| 
        ; call occurs [#_sprintf] ; [] |1948| 
	.dwpsn	file "../Source/prod.c",line 1949,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1949| 
	.dwpsn	file "../Source/prod.c",line 1948,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1948| 
	.dwpsn	file "../Source/prod.c",line 1949,column 6,is_stmt,isa 0
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1949| 
        ; call occurs [#_lcd_puts] ; [] |1949| 
	.dwpsn	file "../Source/prod.c",line 1952,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1952| 
	.dwpsn	file "../Source/prod.c",line 1952,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1952| 
	.dwpsn	file "../Source/prod.c",line 1952,column 11,is_stmt,isa 0
        B         $C$L567,UNC           ; [CPU_] |1952| 
        ; branch occurs ; [] |1952| 
$C$L566:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1953,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1953| 
        SUB       AL,*-SP[47]           ; [CPU_] |1953| 
        ADDB      AL,#1                 ; [CPU_] |1953| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1953| 
        ; call occurs [#I$$TOFS] ; [] |1953| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1953| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1953| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1953| 
        ; call occurs [#FS$$MPY] ; [] |1953| 
        MOVL      *-SP[62],ACC          ; [CPU_] |1953| 
        MOV       AL,*-SP[47]           ; [CPU_] |1953| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1953| 
        ; call occurs [#I$$TOFS] ; [] |1953| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1953| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |1953| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1953| 
        ; call occurs [#FS$$DIV] ; [] |1953| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1953| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1953| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1953| 
        ADDL      ACC,XAR1              ; [CPU_] |1953| 
        MOVL      XAR4,ACC              ; [CPU_] |1953| 
        MOVB      XAR0,#48              ; [CPU_] |1953| 
	.dwpsn	file "../Source/prod.c",line 1952,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1952| 
	.dwpsn	file "../Source/prod.c",line 1953,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1953| 
	.dwpsn	file "../Source/prod.c",line 1952,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1952| 
$C$L567:    
	.dwpsn	file "../Source/prod.c",line 1952,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1952| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1952| 
        MOV       *-SP[47],AL           ; [CPU_] |1952| 
        CMP       AL,*-SP[48]           ; [CPU_] |1952| 
        B         $C$L566,GT            ; [CPU_] |1952| 
        ; branchcc occurs ; [] |1952| 
	.dwpsn	file "../Source/prod.c",line 1958,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1958| 
        B         $C$L570,UNC           ; [CPU_] |1958| 
        ; branch occurs ; [] |1958| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1959,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1959| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1959| 
        MOVL      XAR0,#84              ; [CPU_] |1959| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1959| 
        ADDL      ACC,XAR1              ; [CPU_] |1959| 
        ADDB      ACC,#48               ; [CPU_] |1959| 
        MOVL      XAR1,ACC              ; [CPU_] |1959| 
        MOVB      AL,#1                 ; [CPU_] |1959| 
        ADD       AL,AR6                ; [CPU_] |1959| 
        MOV       *-SP[3],AL            ; [CPU_] |1959| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1959| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1959| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1959| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_sprintf")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1959| 
        ; call occurs [#_sprintf] ; [] |1959| 
        MOVL      XAR0,#84              ; [CPU_] |1959| 
	.dwpsn	file "../Source/prod.c",line 1961,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1961| 
	.dwpsn	file "../Source/prod.c",line 1959,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1959| 
	.dwpsn	file "../Source/prod.c",line 1961,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1961| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1961| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1961| 
        ; call occurs [#_scia_getparam] ; [] |1961| 
        CMPB      AL,#0                 ; [CPU_] |1961| 
        B         $C$L569,EQ            ; [CPU_] |1961| 
        ; branchcc occurs ; [] |1961| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_strtod")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1965,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1965| 
$C$L569:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1967,column 7,is_stmt,isa 0
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1967| 
        ; call occurs [#_scia_puts] ; [] |1967| 
	.dwpsn	file "../Source/prod.c",line 1968,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1968| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1968| 
        ; call occurs [#_scia_puts] ; [] |1968| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1958,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1958| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L570:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1958,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1958| 
        B         $C$L568,GT            ; [CPU_] |1958| 
        ; branchcc occurs ; [] |1958| 
	.dwpsn	file "../Source/prod.c",line 1974,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1974| 
        B         $C$L575,UNC           ; [CPU_] |1974| 
        ; branch occurs ; [] |1974| 
$C$L571:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1975,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1975| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1975| 
        ADDL      ACC,XAR1              ; [CPU_] |1975| 
        ADDB      ACC,#48               ; [CPU_] |1975| 
        MOVL      XAR1,ACC              ; [CPU_] |1975| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1975| 
        MOVL      XAR0,#68              ; [CPU_] |1975| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1975| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1975| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1975| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1975| 
        ANDB      AL,#0x0f              ; [CPU_] |1975| 
        MOV       ACC,AL << 1           ; [CPU_] |1975| 
        ADDL      ACC,XAR7              ; [CPU_] |1975| 
        MOVL      XAR4,ACC              ; [CPU_] |1975| 
        MOVL      XAR0,#84              ; [CPU_] |1975| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1975| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1975| 
        MOVB      AL,#1                 ; [CPU_] |1975| 
        ADD       AL,AR6                ; [CPU_] |1975| 
        MOV       *-SP[7],AL            ; [CPU_] |1975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1975| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_sprintf")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1975| 
        ; call occurs [#_sprintf] ; [] |1975| 
        MOVL      XAR0,#84              ; [CPU_] |1975| 
	.dwpsn	file "../Source/prod.c",line 1979,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1979| 
	.dwpsn	file "../Source/prod.c",line 1975,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1975| 
	.dwpsn	file "../Source/prod.c",line 1979,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1979| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1979| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1979| 
        ; call occurs [#_scia_getparam] ; [] |1979| 
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1980| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1980| 
        ; call occurs [#_scia_puts] ; [] |1980| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1983,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1983| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1983,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1984,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1984| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1984,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1984| 
        MOVB      ACC,#0                ; [CPU_] |1984| 
        SUBB      ACC,#1                ; [CPU_] |1984| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1984| 
        B         $C$L574,EQ            ; [CPU_] |1984| 
        ; branchcc occurs ; [] |1984| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1985,column 15,is_stmt,isa 0
        B         $C$L573,UNC           ; [CPU_] |1985| 
        ; branch occurs ; [] |1985| 
$C$L572:    
	.dwpsn	file "../Source/prod.c",line 1986,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1986| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_delay_us")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1986| 
        ; call occurs [#_delay_us] ; [] |1986| 
$C$L573:    
	.dwpsn	file "../Source/prod.c",line 1985,column 15,is_stmt,isa 0
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1985| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1985| 
        CMPB      AL,#0                 ; [CPU_] |1985| 
        B         $C$L572,EQ            ; [CPU_] |1985| 
        ; branchcc occurs ; [] |1985| 
	.dwpsn	file "../Source/prod.c",line 1989,column 8,is_stmt,isa 0
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1989| 
        ; call occurs [#_ad7738_getraw] ; [] |1989| 
	.dwpsn	file "../Source/prod.c",line 1990,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |1990| 
        ADDL      XAR4,ACC              ; [CPU_] |1990| 
        MOVL      XAR0,#16              ; [CPU_] |1990| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1990| 
        MOVL      XAR0,#16              ; [CPU_] |1990| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1990| 
        ASR64     ACC:P,16              ; [CPU_] |1990| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1990| 
        MOVL      XAR0,#16              ; [CPU_] |1990| 
        ASR64     ACC:P,16              ; [CPU_] |1990| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1990| 
        MOVL      XAR0,#16              ; [CPU_] |1990| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1990| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1990| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1990| 
        MOVL      *-SP[32],P            ; [CPU_] |1990| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1990| 
	.dwpsn	file "../Source/prod.c",line 1984,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1984| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1984| 
        MOVB      ACC,#0                ; [CPU_] |1984| 
        SUBB      ACC,#1                ; [CPU_] |1984| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1984| 
        B         $C$L573,NEQ           ; [CPU_] |1984| 
        ; branchcc occurs ; [] |1984| 
$C$L574:    
	.dwpsn	file "../Source/prod.c",line 1992,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1992| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1992| 
        ; call occurs [#_scia_puts] ; [] |1992| 
	.dwpsn	file "../Source/prod.c",line 1993,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1993| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1993| 
        MOV       *-SP[2],#0            ; [CPU_] |1993| 
        MOV       *-SP[1],#0            ; [CPU_] |1993| 
        MOVL      P,*-SP[32]            ; [CPU_] |1993| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1993| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1993| 
        ; call occurs [#LL$$DIV] ; [] |1993| 
        ADDB      XAR1,#24              ; [CPU_] |1993| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1993| 
	.dwpsn	file "../Source/prod.c",line 1974,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1974| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L575:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1974,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1974| 
        B         $C$L571,GT            ; [CPU_] |1974| 
        ; branchcc occurs ; [] |1974| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[56]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1997,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1997| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L577,UNC           ; [CPU_] |1997| 
        ; branch occurs ; [] |1997| 
$C$L576:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1998,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1998| 
        ADDL      XAR1,ACC              ; [CPU_] |1998| 
        MOVB      XAR0,#48              ; [CPU_] |1998| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1998| 
        MOVB      XAR0,#50              ; [CPU_] |1998| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1998| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1998| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1998| 
        ; call occurs [#FS$$SUB] ; [] |1998| 
        MOVB      XAR0,#74              ; [CPU_] |1998| 
        MOVL      *-SP[62],ACC          ; [CPU_] |1998| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1998| 
        MOVB      XAR0,#72              ; [CPU_] |1998| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1998| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1998| 
        ; call occurs [#L$$TOFS] ; [] |1998| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1998| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |1998| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1998| 
        ; call occurs [#FS$$DIV] ; [] |1998| 
        MOVL      XAR0,#42              ; [CPU_] |1998| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1998| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1998| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1998| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1998| 
        ; call occurs [#FS$$DIV] ; [] |1998| 
        MOVB      XAR0,#96              ; [CPU_] |1998| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1998| 
	.dwpsn	file "../Source/prod.c",line 2002,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |2002| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2002| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2002| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2002| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2002| 
        ; call occurs [#FS$$MPY] ; [] |2002| 
        MOVB      XAR0,#72              ; [CPU_] |2002| 
        MOVL      *-SP[62],ACC          ; [CPU_] |2002| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2002| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |2002| 
        ; call occurs [#L$$TOFS] ; [] |2002| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2002| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |2002| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2002| 
        ; call occurs [#FS$$MPY] ; [] |2002| 
        MOVB      XAR0,#48              ; [CPU_] |2002| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2002| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2002| 
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2002| 
        ; call occurs [#FS$$SUB] ; [] |2002| 
        MOVB      XAR0,#118             ; [CPU_] |2002| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2002| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1997,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1997| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L577:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2006,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2006| 
        CMP       AL,*-SP[48]           ; [CPU_] |2006| 
        B         $C$L576,GT            ; [CPU_] |2006| 
        ; branchcc occurs ; [] |2006| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 2077,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2077| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |2077| 
        MOV       AL,#1024              ; [CPU_] |2077| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2077| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2077| 
        ; call occurs [#_scia_getparam] ; [] |2077| 
	.dwpsn	file "../Source/prod.c",line 2080,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |2080| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2080| 
        ; call occurs [#_scia_puts] ; [] |2080| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2108,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |2108| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2082,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2082| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |2082| 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 2083,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2083| 
        B         $C$L581,LEQ           ; [CPU_] |2083| 
        ; branchcc occurs ; [] |2083| 
	.dwpsn	file "../Source/prod.c",line 2085,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2085| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2085| 
        ; call occurs [#_shunt_switch] ; [] |2085| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2087,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2087| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_delay_us")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2087| 
        ; call occurs [#_delay_us] ; [] |2087| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2087| 
	.dwpsn	file "../Source/prod.c",line 2086,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2086| 
        MOVZ      AR0,AR6               ; [CPU_] |2086| 
        MOV       *-SP[47],AR6          ; [CPU_] |2086| 
        CMP       AR0,#-1               ; [CPU_] |2086| 
        B         $C$L580,NEQ           ; [CPU_] |2086| 
        ; branchcc occurs ; [] |2086| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2090,column 7,is_stmt,isa 0
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2090| 
        ; call occurs [#_maf_rst] ; [] |2090| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2092,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2092| 
        SPM       #0                    ; [CPU_] 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_delay_us")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2092| 
        ; call occurs [#_delay_us] ; [] |2092| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2095,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |2095| 
	.dwpsn	file "../Source/prod.c",line 2096,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2096| 
	.dwpsn	file "../Source/prod.c",line 2095,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |2095| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2095| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2097| 
	.dwpsn	file "../Source/prod.c",line 2096,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2096| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2097| 
        MOVB      ACC,#0                ; [CPU_] |2097| 
        SUBB      ACC,#1                ; [CPU_] |2097| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2097| 
        B         $C$L583,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
$C$L582:    
	.dwpsn	file "../Source/prod.c",line 2098,column 14,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2098| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2098| 
        CMPB      AL,#0                 ; [CPU_] |2098| 
        B         $C$L587,EQ            ; [CPU_] |2098| 
        ; branchcc occurs ; [] |2098| 
	.dwpsn	file "../Source/prod.c",line 2102,column 7,is_stmt,isa 0
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2102| 
        ; call occurs [#_ad7738_getraw] ; [] |2102| 
	.dwpsn	file "../Source/prod.c",line 2103,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |2103| 
        ADDL      XAR4,ACC              ; [CPU_] |2103| 
        MOVL      XAR0,#14              ; [CPU_] |2103| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2103| 
        MOVL      XAR0,#14              ; [CPU_] |2103| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2103| 
        ASR64     ACC:P,16              ; [CPU_] |2103| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2103| 
        MOVL      XAR0,#14              ; [CPU_] |2103| 
        ASR64     ACC:P,16              ; [CPU_] |2103| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2103| 
        MOVL      XAR0,#14              ; [CPU_] |2103| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |2103| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2103| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |2103| 
        MOVL      *+XAR1[0],P           ; [CPU_] |2103| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2103| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2097| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2097| 
        MOVB      ACC,#0                ; [CPU_] |2097| 
        SUBB      ACC,#1                ; [CPU_] |2097| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2097| 
        B         $C$L582,NEQ           ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
$C$L583:    
	.dwpsn	file "../Source/prod.c",line 2105,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2105| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2105| 
        MOV       *-SP[2],#0            ; [CPU_] |2105| 
        MOV       *-SP[1],#0            ; [CPU_] |2105| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |2105| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2105| 
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2105| 
        ; call occurs [#LL$$DIV] ; [] |2105| 
	.dwpsn	file "../Source/prod.c",line 2108,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |2108| 
	.dwpsn	file "../Source/prod.c",line 2105,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |2105| 
	.dwpsn	file "../Source/prod.c",line 2107,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2107| 
	.dwpsn	file "../Source/prod.c",line 2105,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2105| 
	.dwpsn	file "../Source/prod.c",line 2108,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |2108| 
        CMPB      AL,#2                 ; [CPU_] |2108| 
        B         $C$L586,LEQ           ; [CPU_] |2108| 
        ; branchcc occurs ; [] |2108| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2109,column 7,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |2109| 
        ; branch occurs ; [] |2109| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2110,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2110| 
$C$L585:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2109,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2109| 
        B         $C$L586,HIS           ; [CPU_] |2109| 
        ; branchcc occurs ; [] |2109| 
        MOVB      AL,#1                 ; [CPU_] |2109| 
        ADD       AL,AR4                ; [CPU_] |2109| 
        MOVZ      AR5,AL                ; [CPU_] |2109| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2109| 
        ADDL      ACC,XAR3              ; [CPU_] |2109| 
        MOVL      XAR6,ACC              ; [CPU_] |2109| 
        MOVB      XAR0,#72              ; [CPU_] |2109| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2109| 
        MOVL      XAR0,#12              ; [CPU_] |2109| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2109| 
        MOVL      XAR0,#12              ; [CPU_] |2109| 
        ASR64     ACC:P,16              ; [CPU_] |2109| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2109| 
        MOVL      XAR0,#12              ; [CPU_] |2109| 
        ASR64     ACC:P,16              ; [CPU_] |2109| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2109| 
        MOVL      *-SP[4],P             ; [CPU_] |2109| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2109| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2109| 
        MOVL      P,*-SP[32]            ; [CPU_] |2109| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1296, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2109| 
        ; call occurs [#LL$$CMP] ; [] |2109| 
        CMPB      AL,#0                 ; [CPU_] |2109| 
        B         $C$L584,GT            ; [CPU_] |2109| 
        ; branchcc occurs ; [] |2109| 
$C$L586:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2113,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2113| 
        ADDL      ACC,XAR3              ; [CPU_] |2113| 
        MOVL      XAR4,ACC              ; [CPU_] |2113| 
        MOVB      XAR0,#96              ; [CPU_] |2113| 
        MOVL      *-SP[62],ACC          ; [CPU_] |2113| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2113| 
        MOVL      XAR0,#42              ; [CPU_] |2113| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2113| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2113| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2113| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2113| 
        ; call occurs [#FS$$MPY] ; [] |2113| 
        MOVL      XAR0,#36              ; [CPU_] |2113| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2113| 
        MOVL      P,*XAR1++             ; [CPU_] |2113| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2113| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2113| 
        ; call occurs [#LL$$TOFS] ; [] |2113| 
        MOVL      XAR0,#36              ; [CPU_] |2113| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2113| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2113| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2113| 
        ; call occurs [#FS$$MPY] ; [] |2113| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |2113| 
        MOVB      XAR0,#118             ; [CPU_] |2113| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |2113| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2113| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2113| 
        ; call occurs [#FS$$ADD] ; [] |2113| 
        MOVL      XAR0,#38              ; [CPU_] |2113| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2113| 
        MOVL      XAR0,#38              ; [CPU_] |2113| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2113| 
	.dwpsn	file "../Source/prod.c",line 2082,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |2082| 
	.dwpsn	file "../Source/prod.c",line 2113,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2113| 
        MOV       AL,*-SP[48]           ; [CPU_] |2113| 
	.dwpsn	file "../Source/prod.c",line 2082,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2082| 
        B         $C$L579,LT            ; [CPU_] |2082| 
        ; branchcc occurs ; [] |2082| 
	.dwpsn	file "../Source/prod.c",line 2117,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2117| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2117| 
        ; call occurs [#_shunt_switch] ; [] |2117| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2119,column 5,is_stmt,isa 0
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2119| 
        ; call occurs [#_maf_rst] ; [] |2119| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2122,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2122| 
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2122| 
        ; call occurs [#_scia_puts] ; [] |2122| 
	.dwpsn	file "../Source/prod.c",line 2124,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2124| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2124| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2124| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2124| 
        ; call occurs [#FS$$SUB] ; [] |2124| 
        MOVL      XAR0,#36              ; [CPU_] |2124| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2124| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2124| 
        MOVB      XAR0,#140             ; [CPU_] |2124| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2124| 
	.dwpsn	file "../Source/prod.c",line 2127,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2127| 
        MOV       AL,#0                 ; [CPU_] |2127| 
        MOV       AH,#0                 ; [CPU_] |2127| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2127| 
	.dwpsn	file "../Source/prod.c",line 2128,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2128| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2128| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2128| 
	.dwpsn	file "../Source/prod.c",line 2129,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2129| 
        MOV       AL,#0                 ; [CPU_] |2129| 
        MOV       AH,#0                 ; [CPU_] |2129| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2129| 
	.dwpsn	file "../Source/prod.c",line 2130,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2130| 
        MOV       AL,*-SP[56]           ; [CPU_] |2130| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2130| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2133,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2133| 
        MOVB      AL,#152               ; [CPU_] |2133| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2133| 
        MOV       T,*-SP[55]            ; [CPU_] |2133| 
        MOVL      XAR7,XAR4             ; [CPU_] |2133| 
        MPYU      ACC,T,AL              ; [CPU_] |2133| 
        ADDL      ACC,XAR6              ; [CPU_] |2133| 
        ADDB      ACC,#82               ; [CPU_] |2133| 
        MOVL      XAR5,ACC              ; [CPU_] |2133| 
        MOVL      XAR0,#42              ; [CPU_] |2133| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2133| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2133| 
        MOV       AL,*-SP[55]           ; [CPU_] |2133| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2136,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2136| 
	.dwpsn	file "../Source/prod.c",line 2138,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2138| 
        ; call occurs [#_ad7738_setcal] ; [] |2138| 
        MOVL      XAR0,#76              ; [CPU_] |2138| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2138| 
	.dwpsn	file "../Source/prod.c",line 2139,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |2139| 
        MOVL      XAR1,ACC              ; [CPU_] |2139| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2139| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2139| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2139| 
	.dwpsn	file "../Source/prod.c",line 2140,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2140| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2140| 
        ; call occurs [#_ad7738_resetvall] ; [] |2140| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2143,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2143| 
        MOV       AL,*-SP[58]           ; [CPU_] |2143| 
        MOVL      XAR0,#84              ; [CPU_] |2143| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2143| 
        MOV       *-SP[3],AL            ; [CPU_] |2143| 
        MOV       AL,*-SP[57]           ; [CPU_] |2143| 
        MOV       *-SP[4],AL            ; [CPU_] |2143| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2143| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2143| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_sprintf")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2143| 
        ; call occurs [#_sprintf] ; [] |2143| 
        MOVL      XAR4,XAR1             ; [CPU_] |2143| 
	.dwpsn	file "../Source/prod.c",line 2145,column 5,is_stmt,isa 0
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2145| 
        ; call occurs [#_scia_puts] ; [] |2145| 
        MOV       AL,*-SP[55]           ; [CPU_] |2145| 
	.dwpsn	file "../Source/prod.c",line 2146,column 5,is_stmt,isa 0
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2146| 
        ; call occurs [#_print_sensor] ; [] |2146| 
	.dwpsn	file "../Source/prod.c",line 2151,column 5,is_stmt,isa 0
        B         $C$L528,UNC           ; [CPU_] |2151| 
        ; branch occurs ; [] |2151| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 2099,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2099| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_delay_us")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2099| 
        ; call occurs [#_delay_us] ; [] |2099| 
	.dwpsn	file "../Source/prod.c",line 2098,column 14,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2098| 
        ; branch occurs ; [] |2098| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1943,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1943| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1943| 
        ; call occurs [#_scia_puts] ; [] |1943| 
	.dwpsn	file "../Source/prod.c",line 1935,column 6,is_stmt,isa 0
        B         $C$L565,UNC           ; [CPU_] |1935| 
        ; branch occurs ; [] |1935| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1873,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1873| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1873| 
        ; call occurs [#_scia_puts] ; [] |1873| 
	.dwpsn	file "../Source/prod.c",line 1867,column 5,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1867| 
        ; branch occurs ; [] |1867| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1788,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1788| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1788| 
        ; call occurs [#_scia_puts] ; [] |1788| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
        B         $C$L536,UNC           ; [CPU_] |1778| 
        ; branch occurs ; [] |1778| 
$C$L591:    
	.dwpsn	file "../Source/prod.c",line 1771,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1771| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1771| 
        ; call occurs [#_scia_puts] ; [] |1771| 
	.dwpsn	file "../Source/prod.c",line 1763,column 5,is_stmt,isa 0
        B         $C$L535,UNC           ; [CPU_] |1763| 
        ; branch occurs ; [] |1763| 
$C$L592:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1485,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1485| 
        B         $C$L626,LO            ; [CPU_] |1485| 
        ; branchcc occurs ; [] |1485| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#64              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L626,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1489,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1489| 
        CMPB      AL,#67                ; [CPU_] |1489| 
        B         $C$L593,EQ            ; [CPU_] |1489| 
        ; branchcc occurs ; [] |1489| 
        CMPB      AL,#68                ; [CPU_] |1489| 
        B         $C$L626,NEQ           ; [CPU_] |1489| 
        ; branchcc occurs ; [] |1489| 
$C$L593:    
        MOVL      XAR0,#64              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1494,column 5,is_stmt,isa 0
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("_atoi")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1494| 
        ; call occurs [#_atoi] ; [] |1494| 
        MOV       *-SP[56],AL           ; [CPU_] |1494| 
	.dwpsn	file "../Source/prod.c",line 1496,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1496| 
        CMPB      AL,#4                 ; [CPU_] |1496| 
        B         $C$L626,HIS           ; [CPU_] |1496| 
        ; branchcc occurs ; [] |1496| 
	.dwpsn	file "../Source/prod.c",line 1501,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1501| 
        MOV       AH,#0                 ; [CPU_] |1501| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1501| 
	.dwpsn	file "../Source/prod.c",line 1502,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1502| 
        MOV       AH,#0                 ; [CPU_] |1502| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1502| 
        MOV       AL,*-SP[57]           ; [CPU_] |1502| 
	.dwpsn	file "../Source/prod.c",line 1503,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1503| 
        B         $C$L597,LOS           ; [CPU_] |1503| 
        ; branchcc occurs ; [] |1503| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1503,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1503| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1504,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1504| 
        CMPB      AL,#88                ; [CPU_] |1504| 
        B         $C$L595,NEQ           ; [CPU_] |1504| 
        ; branchcc occurs ; [] |1504| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_strtod")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1506,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1506| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1509,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1509| 
        B         $C$L596,NEQ           ; [CPU_] |1509| 
        ; branchcc occurs ; [] |1509| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_strtod")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1511,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1511| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1503,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1503| 
        MOV       AL,*-SP[57]           ; [CPU_] |1503| 
        ADDB      XAR1,#1               ; [CPU_] |1503| 
        CMP       AL,*-SP[47]           ; [CPU_] |1503| 
        B         $C$L594,HI            ; [CPU_] |1503| 
        ; branchcc occurs ; [] |1503| 
$C$L597:    
	.dwpsn	file "../Source/prod.c",line 1516,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1516| 
	.dwpsn	file "../Source/prod.c",line 1499,column 5,is_stmt,isa 0
        DEC       *-SP[56]              ; [CPU_] |1499| 
	.dwpsn	file "../Source/prod.c",line 1516,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1516| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1516| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1516| 
        ; call occurs [#FS$$CMP] ; [] |1516| 
        CMPB      AL,#0                 ; [CPU_] |1516| 
        B         $C$L626,EQ            ; [CPU_] |1516| 
        ; branchcc occurs ; [] |1516| 
	.dwpsn	file "../Source/prod.c",line 1520,column 5,is_stmt,isa 0
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1520| 
        ; call occurs [#_lcd_clear] ; [] |1520| 
	.dwpsn	file "../Source/prod.c",line 1521,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1521| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1521| 
        MOVL      XAR0,#84              ; [CPU_] |1521| 
        ADD       AL,*-SP[56]           ; [CPU_] |1521| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1521| 
        MOVZ      AR1,AL                ; [CPU_] |1521| 
        MOV       *-SP[57],AL           ; [CPU_] |1521| 
        MOV       *-SP[3],AL            ; [CPU_] |1521| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1521| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_sprintf")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1521| 
        ; call occurs [#_sprintf] ; [] |1521| 
        MOVL      XAR0,#84              ; [CPU_] |1521| 
	.dwpsn	file "../Source/prod.c",line 1522,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1522| 
	.dwpsn	file "../Source/prod.c",line 1521,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1521| 
	.dwpsn	file "../Source/prod.c",line 1522,column 5,is_stmt,isa 0
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1522| 
        ; call occurs [#_lcd_puts] ; [] |1522| 
	.dwpsn	file "../Source/prod.c",line 1523,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1523| 
        MOVL      XAR0,#84              ; [CPU_] |1523| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1523| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1523| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1523| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1523| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_sprintf")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1523| 
        ; call occurs [#_sprintf] ; [] |1523| 
        MOVL      XAR0,#84              ; [CPU_] |1523| 
	.dwpsn	file "../Source/prod.c",line 1524,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1524| 
	.dwpsn	file "../Source/prod.c",line 1523,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1523| 
	.dwpsn	file "../Source/prod.c",line 1524,column 5,is_stmt,isa 0
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1524| 
        ; call occurs [#_lcd_puts] ; [] |1524| 
	.dwpsn	file "../Source/prod.c",line 1525,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1525| 
        MOVL      XAR0,#84              ; [CPU_] |1525| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1525| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1525| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1525| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1525| 
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_sprintf")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1525| 
        ; call occurs [#_sprintf] ; [] |1525| 
        MOVL      XAR0,#84              ; [CPU_] |1525| 
	.dwpsn	file "../Source/prod.c",line 1526,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1526| 
	.dwpsn	file "../Source/prod.c",line 1525,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1525| 
	.dwpsn	file "../Source/prod.c",line 1526,column 5,is_stmt,isa 0
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1526| 
        ; call occurs [#_lcd_puts] ; [] |1526| 
	.dwpsn	file "../Source/prod.c",line 1528,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1528| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1528| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1528| 
        MOVL      XAR0,#38              ; [CPU_] |1528| 
        ADDB      ACC,#1                ; [CPU_] |1528| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1528| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1528| 
        CMPB      AL,#67                ; [CPU_] |1528| 
        B         $C$L620,EQ            ; [CPU_] |1528| 
        ; branchcc occurs ; [] |1528| 
        CMPB      AL,#68                ; [CPU_] |1528| 
        B         $C$L626,NEQ           ; [CPU_] |1528| 
        ; branchcc occurs ; [] |1528| 
	.dwpsn	file "../Source/prod.c",line 1581,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1581| 
        MOV       AH,#16672             ; [CPU_] |1581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1581| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1581| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1581| 
        ; call occurs [#FS$$CMP] ; [] |1581| 
        CMPB      AL,#0                 ; [CPU_] |1581| 
        B         $C$L619,GT            ; [CPU_] |1581| 
        ; branchcc occurs ; [] |1581| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1581| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1581| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1581| 
        ; call occurs [#FS$$CMP] ; [] |1581| 
        CMPB      AL,#0                 ; [CPU_] |1581| 
        B         $C$L619,LT            ; [CPU_] |1581| 
        ; branchcc occurs ; [] |1581| 
        MOV       AL,#0                 ; [CPU_] |1581| 
        MOV       AH,#16672             ; [CPU_] |1581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1581| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1581| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1581| 
        ; call occurs [#FS$$CMP] ; [] |1581| 
        CMPB      AL,#0                 ; [CPU_] |1581| 
        B         $C$L619,GT            ; [CPU_] |1581| 
        ; branchcc occurs ; [] |1581| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1581| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1581| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1581| 
        ; call occurs [#FS$$CMP] ; [] |1581| 
        CMPB      AL,#0                 ; [CPU_] |1581| 
        B         $C$L619,LT            ; [CPU_] |1581| 
        ; branchcc occurs ; [] |1581| 
	.dwpsn	file "../Source/prod.c",line 1589,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1589| 
        MOVB      AL,#0                 ; [CPU_] |1589| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1589| 
        ; call occurs [#_lcd_puts] ; [] |1589| 
	.dwpsn	file "../Source/prod.c",line 1591,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1591| 
        MOVL      XAR0,#84              ; [CPU_] |1591| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1591| 
        MOV       *-SP[3],AR1           ; [CPU_] |1591| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1591| 
        MOVL      XAR4,XAR1             ; [CPU_] |1591| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_sprintf")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1591| 
        ; call occurs [#_sprintf] ; [] |1591| 
        MOVL      XAR4,XAR1             ; [CPU_] |1591| 
	.dwpsn	file "../Source/prod.c",line 1594,column 6,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1594| 
        ; call occurs [#_scia_puts] ; [] |1594| 
	.dwpsn	file "../Source/prod.c",line 1595,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1595| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1595| 
        ; call occurs [#_scia_puts] ; [] |1595| 
	.dwpsn	file "../Source/prod.c",line 1596,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1596| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1596| 
        ; call occurs [#_dac_setmode] ; [] |1596| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOV       T,*-SP[56]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
        MOV       AL,*-SP[56]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L598:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1599,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1599| 
	.dwpsn	file "../Source/prod.c",line 1600,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1600| 
        MOV       AH,#0                 ; [CPU_] |1600| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1600| 
        MOVL      ACC,XAR1              ; [CPU_] |1600| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1600| 
        ; call occurs [#FS$$CMP] ; [] |1600| 
        CMPB      AL,#0                 ; [CPU_] |1600| 
        B         $C$L599,GEQ           ; [CPU_] |1600| 
        ; branchcc occurs ; [] |1600| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1600| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1600| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1600| 
        B         $C$L600,UNC           ; [CPU_] |1600| 
        ; branch occurs ; [] |1600| 
$C$L599:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1600| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1600| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1600| 
$C$L600:    
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1600| 
        ; call occurs [#FS$$MPY] ; [] |1600| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1600| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1600| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1600| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1600| 
        ; call occurs [#FS$$ADD] ; [] |1600| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1600| 
        ; call occurs [#FS$$TOLL] ; [] |1600| 
	.dwpsn	file "../Source/prod.c",line 1606,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1606| 
	.dwpsn	file "../Source/prod.c",line 1600,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1600| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1600| 
	.dwpsn	file "../Source/prod.c",line 1606,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1606| 
        CMP64     ACC:P                 ; [CPU_] |1606| 
        B         $C$L602,LEQ           ; [CPU_] |1606| 
        ; branchcc occurs ; [] |1606| 
	.dwpsn	file "../Source/prod.c",line 1608,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1608| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1608| 
        MOV       *-SP[2],#0            ; [CPU_] |1608| 
        MOV       *-SP[1],#0            ; [CPU_] |1608| 
        MOVL      P,*-SP[32]            ; [CPU_] |1608| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1608| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1340, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1608| 
        ; call occurs [#LL$$CMP] ; [] |1608| 
        CMPB      AL,#0                 ; [CPU_] |1608| 
        B         $C$L601,GEQ           ; [CPU_] |1608| 
        ; branchcc occurs ; [] |1608| 
	.dwpsn	file "../Source/prod.c",line 1611,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1611| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1611| 
        MOV       AL,*-SP[32]           ; [CPU_] |1611| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1611| 
        B         $C$L603,UNC           ; [CPU_] |1611| 
        ; branch occurs ; [] |1611| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1609,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1609| 
	.dwpsn	file "../Source/prod.c",line 1610,column 7,is_stmt,isa 0
        B         $C$L603,UNC           ; [CPU_] |1610| 
        ; branch occurs ; [] |1610| 
$C$L602:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1607,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1607| 
$C$L603:    
	.dwpsn	file "../Source/prod.c",line 1614,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1614| 
        MOVL      XAR0,#84              ; [CPU_] |1614| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1614| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1614| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1614| 
        MOVL      XAR4,XAR1             ; [CPU_] |1614| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_sprintf")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1614| 
        ; call occurs [#_sprintf] ; [] |1614| 
        MOVL      XAR4,XAR1             ; [CPU_] |1614| 
	.dwpsn	file "../Source/prod.c",line 1615,column 7,is_stmt,isa 0
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1615| 
        ; call occurs [#_scia_puts] ; [] |1615| 
	.dwpsn	file "../Source/prod.c",line 1616,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1616| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1616| 
$C$L604:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1619,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1619| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1619| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1619| 
        ; call occurs [#_mcbsp_xmit] ; [] |1619| 
	.dwpsn	file "../Source/prod.c",line 1620,column 8,is_stmt,isa 0
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1620| 
        ; call occurs [#_latch_dac] ; [] |1620| 
	.dwpsn	file "../Source/prod.c",line 1623,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1623| 
        MOVL      XAR4,XAR1             ; [CPU_] |1623| 
        MOVL      XAR5,XAR1             ; [CPU_] |1623| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1623| 
        ; call occurs [#_scia_getparam] ; [] |1623| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1625,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1625| 
        CMPB      AL,#45                ; [CPU_] |1625| 
        B         $C$L605,EQ            ; [CPU_] |1625| 
        ; branchcc occurs ; [] |1625| 
        CMPB      AL,#83                ; [CPU_] |1625| 
        B         $C$L610,EQ            ; [CPU_] |1625| 
        ; branchcc occurs ; [] |1625| 
$C$L605:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1632,column 8,is_stmt,isa 0
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_atoi")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1632| 
        ; call occurs [#_atoi] ; [] |1632| 
        CMPB      AL,#0                 ; [CPU_] |1632| 
	.dwpsn	file "../Source/prod.c",line 1634,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1634| 
	.dwpsn	file "../Source/prod.c",line 1637,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1637| 
        CMPB      AH,#43                ; [CPU_] |1637| 
        B         $C$L606,EQ            ; [CPU_] |1637| 
        ; branchcc occurs ; [] |1637| 
	.dwpsn	file "../Source/prod.c",line 1644,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1644| 
        B         $C$L609,NEQ           ; [CPU_] |1644| 
        ; branchcc occurs ; [] |1644| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1646,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1646| 
        B         $C$L607,HI            ; [CPU_] |1646| 
        ; branchcc occurs ; [] |1646| 
	.dwpsn	file "../Source/prod.c",line 1647,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1647| 
	.dwpsn	file "../Source/prod.c",line 1648,column 9,is_stmt,isa 0
        B         $C$L609,UNC           ; [CPU_] |1648| 
        ; branch occurs ; [] |1648| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1639,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1639| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1639| 
        MOV       AH,#65535             ; [CPU_] |1639| 
        SUB       AH,AL                 ; [CPU_] |1639| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1639| 
        B         $C$L608,HIS           ; [CPU_] |1639| 
        ; branchcc occurs ; [] |1639| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1642,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1642| 
        B         $C$L609,UNC           ; [CPU_] |1642| 
        ; branch occurs ; [] |1642| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1640,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1640| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1618,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1618| 
        B         $C$L604,NEQ           ; [CPU_] |1618| 
        ; branchcc occurs ; [] |1618| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1654,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1654| 
        MOVL      XAR0,#86              ; [CPU_] |1654| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1654| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1654| 
        MOVL      XAR0,#86              ; [CPU_] |1654| 
        MOV       AL,*XAR7              ; [CPU_] |1654| 
        MOV       *-SP[3],AL            ; [CPU_] |1654| 
        ADDB      XAR7,#1               ; [CPU_] |1654| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1654| 
        MOVL      XAR0,#84              ; [CPU_] |1654| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1654| 
        MOVL      XAR4,XAR1             ; [CPU_] |1654| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_sprintf")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1654| 
        ; call occurs [#_sprintf] ; [] |1654| 
        MOVL      XAR4,XAR1             ; [CPU_] |1654| 
	.dwpsn	file "../Source/prod.c",line 1655,column 7,is_stmt,isa 0
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1655| 
        ; call occurs [#_scia_puts] ; [] |1655| 
	.dwpsn	file "../Source/prod.c",line 1598,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1598| 
	.dwpsn	file "../Source/prod.c",line 1655,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1655| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1655| 
	.dwpsn	file "../Source/prod.c",line 1598,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1598| 
        SUBB      XAR6,#1               ; [CPU_U] |1598| 
        ADDB      ACC,#2                ; [CPU_] |1598| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1598| 
        MOVZ      AR0,AR6               ; [CPU_] |1598| 
        MOV       *-SP[47],AR6          ; [CPU_] |1598| 
        CMP       AR0,#-1               ; [CPU_] |1598| 
        B         $C$L598,NEQ           ; [CPU_] |1598| 
        ; branchcc occurs ; [] |1598| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1658| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1658| 
        ; call occurs [#FS$$TOU] ; [] |1658| 
        MOV       *-SP[33],AL           ; [CPU_] |1658| 
	.dwpsn	file "../Source/prod.c",line 1660,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1660| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1660| 
        ; call occurs [#_scia_puts] ; [] |1660| 
	.dwpsn	file "../Source/prod.c",line 1661,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1661| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1661| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1661| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1661| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1664,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1664| 
        MOV       AH,*-SP[48]           ; [CPU_] |1664| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1664| 
        ; call occurs [#_mcbsp_xmit] ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1665,column 7,is_stmt,isa 0
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1665| 
        ; call occurs [#_latch_dac] ; [] |1665| 
        MOVL      XAR0,#86              ; [CPU_] |1665| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1665| 
	.dwpsn	file "../Source/prod.c",line 1668,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1668| 
        MOVL      XAR4,XAR5             ; [CPU_] |1668| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1668| 
        ; call occurs [#_scia_getparam] ; [] |1668| 
	.dwpsn	file "../Source/prod.c",line 1673,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1673| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1673| 
        CMPB      AL,#83                ; [CPU_] |1673| 
        B         $C$L616,EQ            ; [CPU_] |1673| 
        ; branchcc occurs ; [] |1673| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1676,column 7,is_stmt,isa 0
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_atoi")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1676| 
        ; call occurs [#_atoi] ; [] |1676| 
        CMPB      AL,#0                 ; [CPU_] |1676| 
	.dwpsn	file "../Source/prod.c",line 1681,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1681| 
	.dwpsn	file "../Source/prod.c",line 1678,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1678| 
	.dwpsn	file "../Source/prod.c",line 1681,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1681| 
        CMPB      AH,#43                ; [CPU_] |1681| 
        B         $C$L612,EQ            ; [CPU_] |1681| 
        ; branchcc occurs ; [] |1681| 
	.dwpsn	file "../Source/prod.c",line 1688,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1688| 
        B         $C$L615,NEQ           ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
	.dwpsn	file "../Source/prod.c",line 1690,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1690| 
        B         $C$L613,HI            ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
	.dwpsn	file "../Source/prod.c",line 1691,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1691| 
	.dwpsn	file "../Source/prod.c",line 1692,column 8,is_stmt,isa 0
        B         $C$L615,UNC           ; [CPU_] |1692| 
        ; branch occurs ; [] |1692| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1683,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1683| 
        SUB       AH,AL                 ; [CPU_] |1683| 
        CMP       AH,*-SP[33]           ; [CPU_] |1683| 
        B         $C$L614,HIS           ; [CPU_] |1683| 
        ; branchcc occurs ; [] |1683| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1686,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1686| 
        B         $C$L615,UNC           ; [CPU_] |1686| 
        ; branch occurs ; [] |1686| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1684,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1684| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1663,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1663| 
        B         $C$L611,NEQ           ; [CPU_] |1663| 
        ; branchcc occurs ; [] |1663| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1698| 
        MOV       AL,*-SP[33]           ; [CPU_] |1698| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1698| 
        MOV       *-SP[3],AL            ; [CPU_] |1698| 
        MOVL      XAR4,XAR1             ; [CPU_] |1698| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_sprintf")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1698| 
        ; call occurs [#_sprintf] ; [] |1698| 
        MOVL      XAR4,XAR1             ; [CPU_] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1699| 
        ; call occurs [#_scia_puts] ; [] |1699| 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1702| 
        MOV       AH,#0                 ; [CPU_] |1702| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1702| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1702| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1702| 
        ; call occurs [#FS$$CMP] ; [] |1702| 
        CMPB      AL,#0                 ; [CPU_] |1702| 
        B         $C$L617,LT            ; [CPU_] |1702| 
        ; branchcc occurs ; [] |1702| 
	.dwpsn	file "../Source/prod.c",line 1708,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1708| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1708| 
        ; call occurs [#U$$TOFS] ; [] |1708| 
        MOVL      XAR1,ACC              ; [CPU_] |1708| 
        MOV       AL,*-SP[35]           ; [CPU_] |1708| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1708| 
        ; call occurs [#U$$TOFS] ; [] |1708| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1708| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1708| 
        ; call occurs [#FS$$SUB] ; [] |1708| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1708| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1708| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1708| 
        ; call occurs [#FS$$DIV] ; [] |1708| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1708| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1708| 
	.dwpsn	file "../Source/prod.c",line 1710,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1710| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1710| 
        ; call occurs [#U$$TOFS] ; [] |1710| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1710| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1710| 
        ; call occurs [#FS$$SUB] ; [] |1710| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1710| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1710| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1710| 
        ; call occurs [#FS$$DIV] ; [] |1710| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1710| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1710| 
        B         $C$L618,UNC           ; [CPU_] |1710| 
        ; branch occurs ; [] |1710| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1703,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1703| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1703| 
        ; call occurs [#U$$TOFS] ; [] |1703| 
        MOVL      XAR1,ACC              ; [CPU_] |1703| 
        MOV       AL,*-SP[35]           ; [CPU_] |1703| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1703| 
        ; call occurs [#U$$TOFS] ; [] |1703| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1703| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1703| 
        ; call occurs [#FS$$SUB] ; [] |1703| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1703| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1703| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1703| 
        ; call occurs [#FS$$DIV] ; [] |1703| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1703| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1703| 
	.dwpsn	file "../Source/prod.c",line 1705,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1705| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1705| 
        ; call occurs [#U$$TOFS] ; [] |1705| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1705| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1705| 
        ; call occurs [#FS$$SUB] ; [] |1705| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1705| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1705| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1705| 
        ; call occurs [#FS$$DIV] ; [] |1705| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1705| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1705| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1713,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1713| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1715| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1715| 
        ; call occurs [#_dac_setmode] ; [] |1715| 
	.dwpsn	file "../Source/prod.c",line 1717,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1717| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1717| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |1717| 
        MOV       AL,*-SP[57]           ; [CPU_] |1717| 
        MOV       *-SP[3],AL            ; [CPU_] |1717| 
        MOVL      XAR0,#84              ; [CPU_] |1717| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1717| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1717| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1717| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1717| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1717| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1717| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1717| 
        MOVL      XAR4,XAR1             ; [CPU_] |1717| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_sprintf")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1717| 
        ; call occurs [#_sprintf] ; [] |1717| 
        MOVL      XAR4,XAR1             ; [CPU_] |1717| 
	.dwpsn	file "../Source/prod.c",line 1721,column 6,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1721| 
        ; call occurs [#_scia_puts] ; [] |1721| 
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1723| 
	.dwpsn	file "../Source/prod.c",line 1724,column 6,is_stmt,isa 0
        B         $C$L624,UNC           ; [CPU_] |1724| 
        ; branch occurs ; [] |1724| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1583,column 7,is_stmt,isa 0
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1583| 
        ; call occurs [#_lcd_clear] ; [] |1583| 
	.dwpsn	file "../Source/prod.c",line 1584,column 7,is_stmt,isa 0
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_update_units")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1584| 
        ; call occurs [#_update_units] ; [] |1584| 
	.dwpsn	file "../Source/prod.c",line 1585,column 7,is_stmt,isa 0
        B         $C$L626,UNC           ; [CPU_] |1585| 
        ; branch occurs ; [] |1585| 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1533,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1533| 
        MOVB      AL,#0                 ; [CPU_] |1533| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1533| 
        ; call occurs [#_lcd_puts] ; [] |1533| 
	.dwpsn	file "../Source/prod.c",line 1535,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1535| 
        MOVL      XAR0,#84              ; [CPU_] |1535| 
        MOV       AL,*-SP[57]           ; [CPU_] |1535| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1535| 
        MOV       *-SP[3],AL            ; [CPU_] |1535| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1535| 
        MOVL      XAR4,XAR1             ; [CPU_] |1535| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_sprintf")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1535| 
        ; call occurs [#_sprintf] ; [] |1535| 
        MOVL      XAR4,XAR1             ; [CPU_] |1535| 
	.dwpsn	file "../Source/prod.c",line 1538,column 6,is_stmt,isa 0
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1538| 
        ; call occurs [#_scia_puts] ; [] |1538| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1551,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1551| 
        MOVL      XAR0,#42              ; [CPU_] |1551| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1551| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1551| 
        MOVL      XAR0,#84              ; [CPU_] |1551| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1551| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1551| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1551| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_sprintf")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1551| 
        ; call occurs [#_sprintf] ; [] |1551| 
        MOVL      XAR0,#84              ; [CPU_] |1551| 
	.dwpsn	file "../Source/prod.c",line 1554,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1554| 
	.dwpsn	file "../Source/prod.c",line 1551,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1551| 
	.dwpsn	file "../Source/prod.c",line 1554,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1554| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1554| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1554| 
        ; call occurs [#_scia_getparam] ; [] |1554| 
	.dwpsn	file "../Source/prod.c",line 1555,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1555| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1555| 
        ; call occurs [#_scia_puts] ; [] |1555| 
	.dwpsn	file "../Source/prod.c",line 1558,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1558| 
	.dwpsn	file "../Source/prod.c",line 1557,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1557| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1557| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1557| 
	.dwpsn	file "../Source/prod.c",line 1559,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1559| 
	.dwpsn	file "../Source/prod.c",line 1558,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1558| 
	.dwpsn	file "../Source/prod.c",line 1559,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1559| 
        MOVB      ACC,#0                ; [CPU_] |1559| 
        SUBB      ACC,#1                ; [CPU_] |1559| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1559| 
        B         $C$L623,EQ            ; [CPU_] |1559| 
        ; branchcc occurs ; [] |1559| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1560,column 15,is_stmt,isa 0
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1560| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1560| 
        CMPB      AL,#0                 ; [CPU_] |1560| 
        B         $C$L625,EQ            ; [CPU_] |1560| 
        ; branchcc occurs ; [] |1560| 
	.dwpsn	file "../Source/prod.c",line 1563,column 8,is_stmt,isa 0
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1563| 
        ; call occurs [#_ad7738_getraw] ; [] |1563| 
	.dwpsn	file "../Source/prod.c",line 1564,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |1564| 
        ADDL      XAR4,ACC              ; [CPU_] |1564| 
        MOVL      XAR0,#10              ; [CPU_] |1564| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1564| 
        MOVL      XAR0,#10              ; [CPU_] |1564| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1564| 
        ASR64     ACC:P,16              ; [CPU_] |1564| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1564| 
        MOVL      XAR0,#10              ; [CPU_] |1564| 
        ASR64     ACC:P,16              ; [CPU_] |1564| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1564| 
        MOVL      XAR0,#10              ; [CPU_] |1564| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1564| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1564| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1564| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1564| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1564| 
	.dwpsn	file "../Source/prod.c",line 1559,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1559| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1559| 
        MOVB      ACC,#0                ; [CPU_] |1559| 
        SUBB      ACC,#1                ; [CPU_] |1559| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1559| 
        B         $C$L622,NEQ           ; [CPU_] |1559| 
        ; branchcc occurs ; [] |1559| 
$C$L623:    
	.dwpsn	file "../Source/prod.c",line 1567,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1567| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1567| 
        ; call occurs [#_scia_puts] ; [] |1567| 
	.dwpsn	file "../Source/prod.c",line 1550,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1550| 
        MOVL      XAR0,#42              ; [CPU_] |1550| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1550| 
        MOVL      XAR0,#42              ; [CPU_] |1550| 
        SUBB      XAR6,#1               ; [CPU_U] |1550| 
        ADDB      ACC,#2                ; [CPU_] |1550| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1550| 
        MOVZ      AR0,AR6               ; [CPU_] |1550| 
        MOV       *-SP[47],AR6          ; [CPU_] |1550| 
        ADDB      XAR1,#4               ; [CPU_] |1550| 
        CMP       AR0,#-1               ; [CPU_] |1550| 
        B         $C$L621,NEQ           ; [CPU_] |1550| 
        ; branchcc occurs ; [] |1550| 
	.dwpsn	file "../Source/prod.c",line 1570,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1570| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1570| 
        MOVB      AL,#10                ; [CPU_] |1570| 
        MOV       T,*-SP[56]            ; [CPU_] |1570| 
        MPYU      ACC,T,AL              ; [CPU_] |1570| 
        ADDL      ACC,XAR6              ; [CPU_] |1570| 
        MOVL      XAR1,ACC              ; [CPU_] |1570| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1570| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1570| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1570| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1570| 
        ; call occurs [#FS$$SUB] ; [] |1570| 
        MOVL      XAR6,ACC              ; [CPU_] |1570| 
        MOV       AL,#16384             ; [CPU_] |1570| 
        MOV       AH,#17948             ; [CPU_] |1570| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1570| 
        MOVL      ACC,XAR6              ; [CPU_] |1570| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1570| 
        ; call occurs [#FS$$MPY] ; [] |1570| 
        MOVL      *-SP[62],ACC          ; [CPU_] |1570| 
        MOVL      P,*-SP[28]            ; [CPU_] |1570| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1570| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1570| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1570| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1570| 
        ; call occurs [#LL$$TOFS] ; [] |1570| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1570| 
        MOVL      ACC,*-SP[62]          ; [CPU_] |1570| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1570| 
        ; call occurs [#FS$$DIV] ; [] |1570| 
        MOVB      XAR0,#44              ; [CPU_] |1570| 
	.dwpsn	file "../Source/prod.c",line 1573,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1573| 
	.dwpsn	file "../Source/prod.c",line 1570,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1570| 
	.dwpsn	file "../Source/prod.c",line 1573,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1573| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1573| 
        MOV       AL,*-SP[57]           ; [CPU_] |1573| 
        MOV       *-SP[3],AL            ; [CPU_] |1573| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1573| 
        MOVL      XAR0,#84              ; [CPU_] |1573| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1573| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1573| 
        MOVL      XAR4,XAR1             ; [CPU_] |1573| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_sprintf")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1573| 
        ; call occurs [#_sprintf] ; [] |1573| 
        MOVL      XAR4,XAR1             ; [CPU_] |1573| 
	.dwpsn	file "../Source/prod.c",line 1575,column 6,is_stmt,isa 0
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1575| 
        ; call occurs [#_scia_puts] ; [] |1575| 
	.dwpsn	file "../Source/prod.c",line 1576,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1576| 
$C$L624:    
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1576| 
        ; call occurs [#_scia_puts] ; [] |1576| 
	.dwpsn	file "../Source/prod.c",line 1731,column 5,is_stmt,isa 0
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1731| 
        ; call occurs [#_lcd_clear] ; [] |1731| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_update_units")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1732| 
        ; call occurs [#_update_units] ; [] |1732| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1735,column 5,is_stmt,isa 0
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1735| 
        ; call occurs [#_ad7738_setcal] ; [] |1735| 
        MOVL      XAR0,#76              ; [CPU_] |1735| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1735| 
	.dwpsn	file "../Source/prod.c",line 1736,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |1736| 
        MOVL      XAR1,ACC              ; [CPU_] |1736| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1736| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1736| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1736| 
	.dwpsn	file "../Source/prod.c",line 1737,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1737| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1737| 
        ; call occurs [#_ad7738_resetvall] ; [] |1737| 
	.dwpsn	file "../Source/prod.c",line 1739,column 5,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |1739| 
        ; branch occurs ; [] |1739| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 1561,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1561| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_delay_us")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1561| 
        ; call occurs [#_delay_us] ; [] |1561| 
	.dwpsn	file "../Source/prod.c",line 1560,column 15,is_stmt,isa 0
        B         $C$L622,UNC           ; [CPU_] |1560| 
        ; branch occurs ; [] |1560| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3690,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3690| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3690| 
        ; call occurs [#_scia_puts] ; [] |3690| 
        MOVL      XAR0,#86              ; [CPU_] |3690| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3690| 
	.dwpsn	file "../Source/prod.c",line 3691,column 5,is_stmt,isa 0
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3691| 
        ; call occurs [#_scia_puts] ; [] |3691| 
	.dwpsn	file "../Source/prod.c",line 3692,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3692| 
	.dwpsn	file "../Source/prod.c",line 3693,column 5,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3693| 
        ; branch occurs ; [] |3693| 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3651,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3651| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3651| 
        ; call occurs [#_scia_puts] ; [] |3651| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3655,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3655| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_delay_us")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3655| 
        ; call occurs [#_delay_us] ; [] |3655| 
	.dwpsn	file "../Source/prod.c",line 3653,column 17,is_stmt,isa 0
        BANZ      $C$L628,AR3--         ; [CPU_] |3653| 
        ; branchcc occurs ; [] |3653| 
	.dwpsn	file "../Source/prod.c",line 3658,column 5,is_stmt,isa 0
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_reboot")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3658| 
        ; call occurs [#_reboot] ; [] |3658| 
	.dwpsn	file "../Source/prod.c",line 3659,column 5,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3659| 
        ; branch occurs ; [] |3659| 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3635,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3635| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3635| 
        ; call occurs [#_scia_puts] ; [] |3635| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3639,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3639| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_delay_us")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3639| 
        ; call occurs [#_delay_us] ; [] |3639| 
	.dwpsn	file "../Source/prod.c",line 3637,column 17,is_stmt,isa 0
        BANZ      $C$L630,AR3--         ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3643,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3643| 
	.dwpsn	file "../Source/prod.c",line 3642,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3642| 
	.dwpsn	file "../Source/prod.c",line 3643,column 5,is_stmt,isa 0
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3643| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3643| 
	.dwpsn	file "../Source/prod.c",line 3647,column 5,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3647| 
        ; branch occurs ; [] |3647| 
$C$L631:    
	.dwpsn	file "../Source/prod.c",line 3546,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3546| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3546| 
        ; call occurs [#_scia_puts] ; [] |3546| 
	.dwpsn	file "../Source/prod.c",line 3548,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3548| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3548| 
        ; call occurs [#_scia_puts] ; [] |3548| 
	.dwpsn	file "../Source/prod.c",line 3549,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3549| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3549| 
        ; call occurs [#_scia_puts] ; [] |3549| 
	.dwpsn	file "../Source/prod.c",line 3551,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3551| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3551| 
        ; call occurs [#_scia_puts] ; [] |3551| 
	.dwpsn	file "../Source/prod.c",line 3552,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3552| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3552| 
        ; call occurs [#_scia_puts] ; [] |3552| 
	.dwpsn	file "../Source/prod.c",line 3553,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3553| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3553| 
        ; call occurs [#_scia_puts] ; [] |3553| 
	.dwpsn	file "../Source/prod.c",line 3554,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3554| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3554| 
        ; call occurs [#_scia_puts] ; [] |3554| 
	.dwpsn	file "../Source/prod.c",line 3556,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3556| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3556| 
        ; call occurs [#_scia_puts] ; [] |3556| 
	.dwpsn	file "../Source/prod.c",line 3557,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3557| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3557| 
        ; call occurs [#_scia_puts] ; [] |3557| 
	.dwpsn	file "../Source/prod.c",line 3558,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3558| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3558| 
        ; call occurs [#_scia_puts] ; [] |3558| 
	.dwpsn	file "../Source/prod.c",line 3559,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3559| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3559| 
        ; call occurs [#_scia_puts] ; [] |3559| 
	.dwpsn	file "../Source/prod.c",line 3560,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3560| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3560| 
        ; call occurs [#_scia_puts] ; [] |3560| 
	.dwpsn	file "../Source/prod.c",line 3561,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3561| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3561| 
        ; call occurs [#_scia_puts] ; [] |3561| 
	.dwpsn	file "../Source/prod.c",line 3562,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3562| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3562| 
        ; call occurs [#_scia_puts] ; [] |3562| 
	.dwpsn	file "../Source/prod.c",line 3564,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3564| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3564| 
        ; call occurs [#_scia_puts] ; [] |3564| 
	.dwpsn	file "../Source/prod.c",line 3566,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3566| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3566| 
        ; call occurs [#_scia_puts] ; [] |3566| 
	.dwpsn	file "../Source/prod.c",line 3568,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3568| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3568| 
        ; call occurs [#_scia_puts] ; [] |3568| 
	.dwpsn	file "../Source/prod.c",line 3570,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3570| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3570| 
        ; call occurs [#_scia_puts] ; [] |3570| 
	.dwpsn	file "../Source/prod.c",line 3571,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3571| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3571| 
        ; call occurs [#_scia_puts] ; [] |3571| 
	.dwpsn	file "../Source/prod.c",line 3572,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3572| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3572| 
        ; call occurs [#_scia_puts] ; [] |3572| 
	.dwpsn	file "../Source/prod.c",line 3573,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3573| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3573| 
        ; call occurs [#_scia_puts] ; [] |3573| 
	.dwpsn	file "../Source/prod.c",line 3575,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3575| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3575| 
        ; call occurs [#_scia_puts] ; [] |3575| 
	.dwpsn	file "../Source/prod.c",line 3576,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3576| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3576| 
        ; call occurs [#_scia_puts] ; [] |3576| 
	.dwpsn	file "../Source/prod.c",line 3577,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3577| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3577| 
        ; call occurs [#_scia_puts] ; [] |3577| 
	.dwpsn	file "../Source/prod.c",line 3578,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3578| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3578| 
        ; call occurs [#_scia_puts] ; [] |3578| 
	.dwpsn	file "../Source/prod.c",line 3579,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3579| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3579| 
        ; call occurs [#_scia_puts] ; [] |3579| 
	.dwpsn	file "../Source/prod.c",line 3581,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3581| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3581| 
        ; call occurs [#_scia_puts] ; [] |3581| 
	.dwpsn	file "../Source/prod.c",line 3582,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3582| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3582| 
        ; call occurs [#_scia_puts] ; [] |3582| 
	.dwpsn	file "../Source/prod.c",line 3584,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3584| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3584| 
        ; call occurs [#_scia_puts] ; [] |3584| 
	.dwpsn	file "../Source/prod.c",line 3586,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3586| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3586| 
        ; call occurs [#_scia_puts] ; [] |3586| 
	.dwpsn	file "../Source/prod.c",line 3587,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3587| 
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3587| 
        ; call occurs [#_scia_puts] ; [] |3587| 
	.dwpsn	file "../Source/prod.c",line 3589,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3589| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3589| 
        ; call occurs [#_scia_puts] ; [] |3589| 
	.dwpsn	file "../Source/prod.c",line 3591,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3591| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3591| 
        ; call occurs [#_scia_puts] ; [] |3591| 
	.dwpsn	file "../Source/prod.c",line 3593,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3593| 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3593| 
        ; call occurs [#_scia_puts] ; [] |3593| 
	.dwpsn	file "../Source/prod.c",line 3595,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3595| 
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3595| 
        ; call occurs [#_scia_puts] ; [] |3595| 
	.dwpsn	file "../Source/prod.c",line 3596,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3596| 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3596| 
        ; call occurs [#_scia_puts] ; [] |3596| 
	.dwpsn	file "../Source/prod.c",line 3598,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3598| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3598| 
        ; call occurs [#_scia_puts] ; [] |3598| 
	.dwpsn	file "../Source/prod.c",line 3599,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3599| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3599| 
        ; call occurs [#_scia_puts] ; [] |3599| 
	.dwpsn	file "../Source/prod.c",line 3600,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3600| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3600| 
        ; call occurs [#_scia_puts] ; [] |3600| 
	.dwpsn	file "../Source/prod.c",line 3601,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3601| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3601| 
        ; call occurs [#_scia_puts] ; [] |3601| 
	.dwpsn	file "../Source/prod.c",line 3602,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3602| 
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3602| 
        ; call occurs [#_scia_puts] ; [] |3602| 
	.dwpsn	file "../Source/prod.c",line 3603,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3603| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3603| 
        ; call occurs [#_scia_puts] ; [] |3603| 
	.dwpsn	file "../Source/prod.c",line 3604,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3604| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3604| 
        ; call occurs [#_scia_puts] ; [] |3604| 
	.dwpsn	file "../Source/prod.c",line 3605,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3605| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3605| 
        ; call occurs [#_scia_puts] ; [] |3605| 
	.dwpsn	file "../Source/prod.c",line 3616,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3616| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3616| 
        ; call occurs [#_scia_puts] ; [] |3616| 
	.dwpsn	file "../Source/prod.c",line 3618,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3618| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3618| 
        ; call occurs [#_scia_puts] ; [] |3618| 
	.dwpsn	file "../Source/prod.c",line 3620,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3620| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3620| 
        ; call occurs [#_scia_puts] ; [] |3620| 
	.dwpsn	file "../Source/prod.c",line 3622,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3622| 
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3622| 
        ; call occurs [#_scia_puts] ; [] |3622| 
	.dwpsn	file "../Source/prod.c",line 3624,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3624| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3624| 
        ; call occurs [#_scia_puts] ; [] |3624| 
	.dwpsn	file "../Source/prod.c",line 3629,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3629| 
	.dwpsn	file "../Source/prod.c",line 3631,column 5,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3631| 
        ; branch occurs ; [] |3631| 
$C$L632:    
	.dwpsn	file "../Source/prod.c",line 1095,column 5,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_getSystemCapVoltageF")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_getSystemCapVoltageF ; [CPU_] |1095| 
        ; call occurs [#_getSystemCapVoltageF] ; [] |1095| 
        MOVL      XAR1,ACC              ; [CPU_] |1095| 
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_getSystemCapVoltage")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_getSystemCapVoltage ; [CPU_] |1095| 
        ; call occurs [#_getSystemCapVoltage] ; [] |1095| 
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1095| 
        ; call occurs [#U$$TOFS] ; [] |1095| 
        MOVL      XAR6,ACC              ; [CPU_] |1095| 
        MOV       AL,#0                 ; [CPU_] |1095| 
        MOV       AH,#16672             ; [CPU_] |1095| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1095| 
        MOVL      ACC,XAR6              ; [CPU_] |1095| 
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1095| 
        ; call occurs [#FS$$DIV] ; [] |1095| 
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |1095| 
        MOVL      XAR0,#84              ; [CPU_] |1095| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1095| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1095| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1095| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1095| 
        MOVL      XAR4,XAR1             ; [CPU_] |1095| 
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_sprintf")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1095| 
        ; call occurs [#_sprintf] ; [] |1095| 
        MOVL      XAR4,XAR1             ; [CPU_] |1095| 
	.dwpsn	file "../Source/prod.c",line 1096,column 5,is_stmt,isa 0
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1096| 
        ; call occurs [#_scia_puts] ; [] |1096| 
	.dwpsn	file "../Source/prod.c",line 1097,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1097| 
        MOVB      AH,#1                 ; [CPU_] |1097| 
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_getModVoltage")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_getModVoltage       ; [CPU_] |1097| 
        ; call occurs [#_getModVoltage] ; [] |1097| 
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1097| 
        ; call occurs [#U$$TOFS] ; [] |1097| 
        MOVL      XAR6,ACC              ; [CPU_] |1097| 
        MOV       AL,#0                 ; [CPU_] |1097| 
        MOV       AH,#16672             ; [CPU_] |1097| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1097| 
        MOVL      ACC,XAR6              ; [CPU_] |1097| 
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1097| 
        ; call occurs [#FS$$DIV] ; [] |1097| 
        MOVL      XAR1,ACC              ; [CPU_] |1097| 
        MOVB      AL,#1                 ; [CPU_] |1097| 
        MOVB      AH,#2                 ; [CPU_] |1097| 
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_getModVoltage")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_getModVoltage       ; [CPU_] |1097| 
        ; call occurs [#_getModVoltage] ; [] |1097| 
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1097| 
        ; call occurs [#U$$TOFS] ; [] |1097| 
        MOVL      XAR6,ACC              ; [CPU_] |1097| 
        MOV       AL,#0                 ; [CPU_] |1097| 
        MOV       AH,#16672             ; [CPU_] |1097| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1097| 
        MOVL      ACC,XAR6              ; [CPU_] |1097| 
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1097| 
        ; call occurs [#FS$$DIV] ; [] |1097| 
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |1097| 
        MOVL      XAR0,#84              ; [CPU_] |1097| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1097| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1097| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1097| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1097| 
        MOVL      XAR4,XAR1             ; [CPU_] |1097| 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_sprintf")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1097| 
        ; call occurs [#_sprintf] ; [] |1097| 
        MOVL      XAR4,XAR1             ; [CPU_] |1097| 
	.dwpsn	file "../Source/prod.c",line 1098,column 5,is_stmt,isa 0
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1098| 
        ; call occurs [#_scia_puts] ; [] |1098| 
	.dwpsn	file "../Source/prod.c",line 1099,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1099| 
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_getShelfMaxTemp")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_getShelfMaxTemp     ; [CPU_] |1099| 
        ; call occurs [#_getShelfMaxTemp] ; [] |1099| 
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1099| 
        ; call occurs [#U$$TOFS] ; [] |1099| 
        MOVL      XAR6,ACC              ; [CPU_] |1099| 
        MOV       AL,#0                 ; [CPU_] |1099| 
        MOV       AH,#16672             ; [CPU_] |1099| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1099| 
        MOVL      ACC,XAR6              ; [CPU_] |1099| 
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1099| 
        ; call occurs [#FS$$DIV] ; [] |1099| 
        MOVL      *-SP[62],ACC          ; [CPU_] |1099| 
        MOVB      AL,#1                 ; [CPU_] |1099| 
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_getShelfMaxTempID")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_getShelfMaxTempID   ; [CPU_] |1099| 
        ; call occurs [#_getShelfMaxTempID] ; [] |1099| 
        MOV       *-SP[47],AL           ; [CPU_] |1099| 
        MOVB      AL,#1                 ; [CPU_] |1099| 
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_getShelfMinTemp")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_getShelfMinTemp     ; [CPU_] |1099| 
        ; call occurs [#_getShelfMinTemp] ; [] |1099| 
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1099| 
        ; call occurs [#U$$TOFS] ; [] |1099| 
        MOVL      XAR6,ACC              ; [CPU_] |1099| 
        MOV       AL,#0                 ; [CPU_] |1099| 
        MOV       AH,#16672             ; [CPU_] |1099| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1099| 
        MOVL      ACC,XAR6              ; [CPU_] |1099| 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1099| 
        ; call occurs [#FS$$DIV] ; [] |1099| 
        MOVL      XAR1,ACC              ; [CPU_] |1099| 
        MOVB      AL,#1                 ; [CPU_] |1099| 
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_getShelfMinTempID")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_getShelfMinTempID   ; [CPU_] |1099| 
        ; call occurs [#_getShelfMinTempID] ; [] |1099| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |1099| 
        MOVL      XAR6,*-SP[62]         ; [CPU_] |1099| 
        MOV       AH,*-SP[47]           ; [CPU_] |1099| 
        MOVL      XAR0,#84              ; [CPU_] |1099| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1099| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |1099| 
        MOV       *-SP[5],AH            ; [CPU_] |1099| 
        MOVL      *-SP[8],XAR1          ; [CPU_] |1099| 
        MOV       *-SP[9],AL            ; [CPU_] |1099| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1099| 
        MOVL      XAR4,XAR1             ; [CPU_] |1099| 
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_sprintf")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1099| 
        ; call occurs [#_sprintf] ; [] |1099| 
	.dwpsn	file "../Source/prod.c",line 1100,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1100| 
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1100| 
        ; call occurs [#_scia_puts] ; [] |1100| 
	.dwpsn	file "../Source/prod.c",line 1103,column 5,is_stmt,isa 0
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("_getSystemOutCurrentF")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #_getSystemOutCurrentF ; [CPU_] |1103| 
        ; call occurs [#_getSystemOutCurrentF] ; [] |1103| 
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |1103| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1103| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1103| 
$C$L633:    
        MOVL      XAR4,XAR1             ; [CPU_] |1103| 
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("_sprintf")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1103| 
        ; call occurs [#_sprintf] ; [] |1103| 
	.dwpsn	file "../Source/prod.c",line 1104,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1104| 
$C$L634:    
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1104| 
        ; call occurs [#_scia_puts] ; [] |1104| 
$C$L635:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3697,column 4,is_stmt,isa 0
        B         $C$L637,EQ            ; [CPU_] |3697| 
        ; branchcc occurs ; [] |3697| 
$C$L636:    
	.dwpsn	file "../Source/prod.c",line 3698,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |3698| 
        SPM       #0                    ; [CPU_] 
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3698| 
        ; call occurs [#_scia_puts] ; [] |3698| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 704,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |704| 
        TBIT      AL,#4                 ; [CPU_] |704| 
        B         $C$L638,TC            ; [CPU_] |704| 
        ; branchcc occurs ; [] |704| 
	.dwpsn	file "../Source/prod.c",line 706,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |706| 
        SPM       #0                    ; [CPU_] 
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |706| 
        ; call occurs [#_ad7738_resettare] ; [] |706| 
	.dwpsn	file "../Source/prod.c",line 707,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |707| 
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |707| 
        ; call occurs [#_ad7738_resetpeak] ; [] |707| 
	.dwpsn	file "../Source/prod.c",line 708,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |708| 
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |708| 
        ; call occurs [#_ad7738_resetvall] ; [] |708| 
$C$L638:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 786,column 3,is_stmt,isa 0
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |786| 
        ; call occurs [#_ad7738_monrdy] ; [] |786| 
        CMPB      AL,#0                 ; [CPU_] |786| 
        B         $C$L664,EQ            ; [CPU_] |786| 
        ; branchcc occurs ; [] |786| 
	.dwpsn	file "../Source/prod.c",line 788,column 4,is_stmt,isa 0
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |788| 
        ; call occurs [#_ad7738_monclr] ; [] |788| 
        MOVL      XAR0,#82              ; [CPU_] |788| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |788| 
	.dwpsn	file "../Source/prod.c",line 791,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |791| 
        CMPB      AL,#3                 ; [CPU_] |791| 
        B         $C$L639,GT            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        CMPB      AL,#3                 ; [CPU_] |791| 
        B         $C$L645,EQ            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        CMPB      AL,#0                 ; [CPU_] |791| 
        B         $C$L649,EQ            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        CMPB      AL,#1                 ; [CPU_] |791| 
        B         $C$L648,EQ            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        CMPB      AL,#2                 ; [CPU_] |791| 
        B         $C$L647,EQ            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        B         $C$L661,UNC           ; [CPU_] |791| 
        ; branch occurs ; [] |791| 
$C$L639:    
        CMPB      AL,#4                 ; [CPU_] |791| 
        B         $C$L644,EQ            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        CMPB      AL,#5                 ; [CPU_] |791| 
        B         $C$L640,EQ            ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
        CMPB      AL,#6                 ; [CPU_] |791| 
        B         $C$L661,NEQ           ; [CPU_] |791| 
        ; branchcc occurs ; [] |791| 
	.dwpsn	file "../Source/prod.c",line 846,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |846| 
        MOVL      XAR0,#44              ; [CPU_] |846| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |846| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |846| 
	.dwpsn	file "../Source/prod.c",line 847,column 5,is_stmt,isa 0
        B         $C$L659,UNC           ; [CPU_] |847| 
        ; branch occurs ; [] |847| 
$C$L640:    
	.dwpsn	file "../Source/prod.c",line 841,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |841| 
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |841| 
        ; call occurs [#_ad7738_getlimitst] ; [] |841| 
	.dwpsn	file "../Source/prod.c",line 842,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |842| 
        B         $C$L642,NTC           ; [CPU_] |842| 
        ; branchcc occurs ; [] |842| 
        TBIT      AL,#0                 ; [CPU_] |842| 
        B         $C$L641,NTC           ; [CPU_] |842| 
        ; branchcc occurs ; [] |842| 
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |842| 
        B         $C$L643,UNC           ; [CPU_] |842| 
        ; branch occurs ; [] |842| 
$C$L641:    
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |842| 
        B         $C$L643,UNC           ; [CPU_] |842| 
        ; branch occurs ; [] |842| 
$C$L642:    
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |842| 
$C$L643:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |842| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |842| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |842| 
	.dwpsn	file "../Source/prod.c",line 844,column 5,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |844| 
        ; branch occurs ; [] |844| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 813,column 5,is_stmt,isa 0
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |813| 
        ; call occurs [#_ad7738_getmon] ; [] |813| 
        MOVL      XAR0,#82              ; [CPU_] |813| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |813| 
	.dwpsn	file "../Source/prod.c",line 815,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |815| 
        B         $C$L646,UNC           ; [CPU_] |815| 
        ; branch occurs ; [] |815| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 808,column 5,is_stmt,isa 0
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |808| 
        ; call occurs [#_ad7738_getmon] ; [] |808| 
        MOVL      XAR0,#82              ; [CPU_] |808| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |808| 
	.dwpsn	file "../Source/prod.c",line 809,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |809| 
$C$L646:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |809| 
        ADDL      XAR4,ACC              ; [CPU_] |809| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |809| 
	.dwpsn	file "../Source/prod.c",line 810,column 5,is_stmt,isa 0
        B         $C$L651,UNC           ; [CPU_] |810| 
        ; branch occurs ; [] |810| 
$C$L647:    
	.dwpsn	file "../Source/prod.c",line 803,column 5,is_stmt,isa 0
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1492, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |803| 
        ; call occurs [#_ad7738_getvall] ; [] |803| 
	.dwpsn	file "../Source/prod.c",line 805,column 5,is_stmt,isa 0
        B         $C$L650,UNC           ; [CPU_] |805| 
        ; branch occurs ; [] |805| 
$C$L648:    
	.dwpsn	file "../Source/prod.c",line 798,column 5,is_stmt,isa 0
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1493, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |798| 
        ; call occurs [#_ad7738_getpeak] ; [] |798| 
	.dwpsn	file "../Source/prod.c",line 800,column 5,is_stmt,isa 0
        B         $C$L650,UNC           ; [CPU_] |800| 
        ; branch occurs ; [] |800| 
$C$L649:    
	.dwpsn	file "../Source/prod.c",line 793,column 5,is_stmt,isa 0
$C$DW$1494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1494, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1494, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |793| 
        ; call occurs [#_ad7738_getmon] ; [] |793| 
$C$L650:    
        MOVL      XAR0,#82              ; [CPU_] |793| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |793| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 794,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |794| 
        ADDL      XAR4,ACC              ; [CPU_] |794| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |794| 
$C$L651:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |794| 
	.dwpsn	file "../Source/prod.c",line 818,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |818| 
        CMPB      AL,#3                 ; [CPU_] |818| 
        B         $C$L652,GT            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        CMPB      AL,#3                 ; [CPU_] |818| 
        B         $C$L654,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        CMPB      AL,#0                 ; [CPU_] |818| 
        B         $C$L657,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        CMPB      AL,#1                 ; [CPU_] |818| 
        B         $C$L656,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        CMPB      AL,#2                 ; [CPU_] |818| 
        B         $C$L655,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        B         $C$L661,UNC           ; [CPU_] |818| 
        ; branch occurs ; [] |818| 
$C$L652:    
        CMPB      AL,#4                 ; [CPU_] |818| 
        B         $C$L653,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        CMPB      AL,#5                 ; [CPU_] |818| 
        B         $C$L661,NEQ           ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
	.dwpsn	file "../Source/prod.c",line 835,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |835| 
	.dwpsn	file "../Source/prod.c",line 836,column 6,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |836| 
        ; branch occurs ; [] |836| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 832,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL272       ; [CPU_U] |832| 
	.dwpsn	file "../Source/prod.c",line 833,column 6,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |833| 
        ; branch occurs ; [] |833| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 829,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL273       ; [CPU_U] |829| 
	.dwpsn	file "../Source/prod.c",line 830,column 6,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |830| 
        ; branch occurs ; [] |830| 
$C$L655:    
	.dwpsn	file "../Source/prod.c",line 826,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL274       ; [CPU_U] |826| 
	.dwpsn	file "../Source/prod.c",line 827,column 6,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |827| 
        ; branch occurs ; [] |827| 
$C$L656:    
	.dwpsn	file "../Source/prod.c",line 823,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |823| 
	.dwpsn	file "../Source/prod.c",line 824,column 6,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |824| 
        ; branch occurs ; [] |824| 
$C$L657:    
	.dwpsn	file "../Source/prod.c",line 820,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL275       ; [CPU_U] |820| 
$C$L658:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |820| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |820| 
$C$L659:    
        MOVL      *-SP[4],ACC           ; [CPU_] |820| 
$C$L660:    
        MOVL      XAR0,#84              ; [CPU_] |820| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |820| 
$C$DW$1495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1495, DW_AT_name("_sprintf")
	.dwattr $C$DW$1495, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |820| 
        ; call occurs [#_sprintf] ; [] |820| 
$C$L661:    
        MOV       T,*-SP[53]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 851,column 4,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |851| 
        MPYB      ACC,T,#20             ; [CPU_] |851| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |851| 
        ADDB      AL,#7                 ; [CPU_] |851| 
$C$DW$1496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1496, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1496, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |851| 
        ; call occurs [#_lcd_puts] ; [] |851| 
	.dwpsn	file "../Source/prod.c",line 854,column 4,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |854| 
	.dwpsn	file "../Source/prod.c",line 851,column 4,is_stmt,isa 0
        MOV       AL,*-SP[53]           ; [CPU_] |851| 
	.dwpsn	file "../Source/prod.c",line 854,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |854| 
        B         $C$L662,HIS           ; [CPU_] |854| 
        ; branchcc occurs ; [] |854| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |854| 
        B         $C$L663,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L662:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 855,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |855| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L663:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L664:    
	.dwpsn	file "../Source/prod.c",line 864,column 3,is_stmt,isa 0
$C$DW$1497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1497, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1497, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |864| 
        ; call occurs [#_ad7738_tempstart] ; [] |864| 
        CMPB      AL,#0                 ; [CPU_] |864| 
        B         $C$L665,NEQ           ; [CPU_] |864| 
        ; branchcc occurs ; [] |864| 
	.dwpsn	file "../Source/prod.c",line 869,column 8,is_stmt,isa 0
$C$DW$1498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1498, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1498, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |869| 
        ; call occurs [#_ad7738_tempread] ; [] |869| 
        CMPB      AL,#0                 ; [CPU_] |869| 
        B         $C$L666,EQ            ; [CPU_] |869| 
        ; branchcc occurs ; [] |869| 
	.dwpsn	file "../Source/prod.c",line 870,column 4,is_stmt,isa 0
$C$DW$1499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1499, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1499, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |870| 
        ; call occurs [#_ds1820read] ; [] |870| 
        MOVL      XAR0,#44              ; [CPU_] |870| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |870| 
	.dwpsn	file "../Source/prod.c",line 871,column 4,is_stmt,isa 0
$C$DW$1500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1500, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1500, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |871| 
        ; call occurs [#_ad7738_settemp] ; [] |871| 
        B         $C$L666,UNC           ; [CPU_] |871| 
        ; branch occurs ; [] |871| 
$C$L665:    
	.dwpsn	file "../Source/prod.c",line 865,column 4,is_stmt,isa 0
$C$DW$1501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1501, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1501, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |865| 
        ; call occurs [#_ds1820start] ; [] |865| 
$C$L666:    
	.dwpsn	file "../Source/prod.c",line 878,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |878| 
        MOVB      XAR0,#36              ; [CPU_] |878| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |878| 
        B         $C$L671,EQ            ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
$C$DW$1502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1502, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1502, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |878| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |878| 
        CMPB      AL,#0                 ; [CPU_] |878| 
        B         $C$L671,EQ            ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 879,column 4,is_stmt,isa 0
$C$DW$1503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1503, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1503, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |879| 
        ; call occurs [#_tagdetect] ; [] |879| 
        CMPB      AL,#0                 ; [CPU_] |879| 
        B         $C$L667,NEQ           ; [CPU_] |879| 
        ; branchcc occurs ; [] |879| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 902,column 5,is_stmt,isa 0
        MOVL      XAR0,#78              ; [CPU_] |902| 
        MOV       *+XAR4[0],#0          ; [CPU_] |902| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |902| 
	.dwpsn	file "../Source/prod.c",line 904,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |904| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |904| 
        MOVL      XAR4,ACC              ; [CPU_] |904| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |904| 
        B         $C$L669,EQ            ; [CPU_] |904| 
        ; branchcc occurs ; [] |904| 
	.dwpsn	file "../Source/prod.c",line 905,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 906,column 6,is_stmt,isa 0
$C$DW$1504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1504, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1504, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |906| 
        ; call occurs [#_lcd_clear] ; [] |906| 
	.dwpsn	file "../Source/prod.c",line 907,column 6,is_stmt,isa 0
$C$DW$1505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1505, DW_AT_name("_update_units")
	.dwattr $C$DW$1505, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |907| 
        ; call occurs [#_update_units] ; [] |907| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 908,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |908| 
        B         $C$L669,UNC           ; [CPU_] |908| 
        ; branch occurs ; [] |908| 
$C$L667:    
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 881,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |881| 
        B         $C$L668,NEQ           ; [CPU_] |881| 
        ; branchcc occurs ; [] |881| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 884,column 6,is_stmt,isa 0
$C$DW$1506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1506, DW_AT_name("_matchTag")
	.dwattr $C$DW$1506, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |884| 
        ; call occurs [#_matchTag] ; [] |884| 
        MOVL      XAR0,#78              ; [CPU_] |884| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |884| 
        MOVL      XAR0,#9               ; [CPU_] |884| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |884| 
	.dwpsn	file "../Source/prod.c",line 885,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |885| 
        B         $C$L668,EQ            ; [CPU_] |885| 
        ; branchcc occurs ; [] |885| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 888,column 7,is_stmt,isa 0
$C$DW$1507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1507, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1507, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |888| 
        ; call occurs [#_maf_rst] ; [] |888| 
	.dwpsn	file "../Source/prod.c",line 889,column 7,is_stmt,isa 0
$C$DW$1508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1508, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1508, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |889| 
        ; call occurs [#_ad7738_setcal] ; [] |889| 
        MOVL      XAR0,#76              ; [CPU_] |889| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |889| 
	.dwpsn	file "../Source/prod.c",line 890,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[56]          ; [CPU_] |890| 
        MOVL      XAR1,ACC              ; [CPU_] |890| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |890| 
$C$DW$1509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1509, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1509, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |890| 
        ; call occurs [#_ad7738_resetpeak] ; [] |890| 
	.dwpsn	file "../Source/prod.c",line 891,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |891| 
$C$DW$1510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1510, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1510, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |891| 
        ; call occurs [#_ad7738_resetvall] ; [] |891| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 894,column 7,is_stmt,isa 0
$C$DW$1511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1511, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1511, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |894| 
        ; call occurs [#_lcd_clear] ; [] |894| 
	.dwpsn	file "../Source/prod.c",line 895,column 7,is_stmt,isa 0
$C$DW$1512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1512, DW_AT_name("_update_units")
	.dwattr $C$DW$1512, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |895| 
        ; call occurs [#_update_units] ; [] |895| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 896,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |896| 
$C$L668:    
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 899,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |899| 
$C$L669:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 913,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |913| 
        ADDB      AL,#1                 ; [CPU_] |913| 
        MOV       *+FP[AR0],AL          ; [CPU_] |913| 
        CMPB      AL,#4                 ; [CPU_] |913| 
        B         $C$L670,HIS           ; [CPU_] |913| 
        ; branchcc occurs ; [] |913| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#80              ; [CPU_] |913| 
        ADDB      ACC,#1                ; [CPU_] |913| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |913| 
        B         $C$L671,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L670:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 914,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |914| 
        MOV       *+FP[AR0],#0          ; [CPU_] |914| 
$C$L671:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 922,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |922| 
        CMPB      AL,#1                 ; [CPU_] |922| 
        B         $C$L678,NEQ           ; [CPU_] |922| 
        ; branchcc occurs ; [] |922| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        B         $C$L678,EQ            ; [CPU_] |922| 
        ; branchcc occurs ; [] |922| 
	.dwpsn	file "../Source/prod.c",line 925,column 4,is_stmt,isa 0
$C$DW$1513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1513, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1513, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |925| 
        ; call occurs [#_prod_getavail] ; [] |925| 
        MOVL      XAR6,ACC              ; [CPU_] |925| 
        MOV       T,*-SP[49]            ; [CPU_] |925| 
        MPY       P,T,*-SP[50]          ; [CPU_] |925| 
        MOVU      ACC,PL                ; [CPU_] |925| 
        CMPL      ACC,XAR6              ; [CPU_] |925| 
        B         $C$L674,LOS           ; [CPU_] |925| 
        ; branchcc occurs ; [] |925| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        B         $C$L674,NEQ           ; [CPU_] |925| 
        ; branchcc occurs ; [] |925| 
	.dwpsn	file "../Source/prod.c",line 1029,column 11,is_stmt,isa 0
$C$DW$1514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1514, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1514, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |1029| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |1029| 
        CMPB      AL,#0                 ; [CPU_] |1029| 
        B         $C$L672,NEQ           ; [CPU_] |1029| 
        ; branchcc occurs ; [] |1029| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1037,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |1037| 
        B         $C$L678,EQ            ; [CPU_] |1037| 
        ; branchcc occurs ; [] |1037| 
	.dwpsn	file "../Source/prod.c",line 1038,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |1038| 
	.dwpsn	file "../Source/prod.c",line 1041,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |1041| 
	.dwpsn	file "../Source/prod.c",line 1043,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |1043| 
        MOVB      XAR0,#36              ; [CPU_] |1043| 
	.dwpsn	file "../Source/prod.c",line 1041,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1041| 
	.dwpsn	file "../Source/prod.c",line 1042,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |1042| 
	.dwpsn	file "../Source/prod.c",line 1043,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |1043| 
        MOVL      XAR0,#78              ; [CPU_] |1043| 
        MOV       *+XAR4[2],AL          ; [CPU_] |1043| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1043| 
	.dwpsn	file "../Source/prod.c",line 1047,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |1047| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1045,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1045| 
	.dwpsn	file "../Source/prod.c",line 1047,column 5,is_stmt,isa 0
        B         $C$L677,UNC           ; [CPU_] |1047| 
        ; branch occurs ; [] |1047| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 1031,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |1031| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1031| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1033,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1033| 
	.dwpsn	file "../Source/prod.c",line 1032,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |1032| 
	.dwpsn	file "../Source/prod.c",line 1033,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1033| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 1034,column 6,is_stmt,isa 0
$C$DW$1515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1515, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1515, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |1034| 
        ; call occurs [#_ad7738_getlimitst] ; [] |1034| 
        MOV       *XAR1++,AL            ; [CPU_] |1034| 
	.dwpsn	file "../Source/prod.c",line 1033,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1033| 
	.dwpsn	file "../Source/prod.c",line 1034,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1034| 
	.dwpsn	file "../Source/prod.c",line 1033,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |1033| 
        B         $C$L673,LT            ; [CPU_] |1033| 
        ; branchcc occurs ; [] |1033| 
	.dwpsn	file "../Source/prod.c",line 1036,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |1036| 
	.dwpsn	file "../Source/prod.c",line 1037,column 4,is_stmt,isa 0
        B         $C$L676,UNC           ; [CPU_] |1037| 
        ; branch occurs ; [] |1037| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 933,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |933| 
        MOV       *+XAR1[0],#0          ; [CPU_] |933| 
	.dwpsn	file "../Source/prod.c",line 934,column 5,is_stmt,isa 0
        MOVB      *+XAR1[1],#221,UNC    ; [CPU_] |934| 
        MOV       AL,*-SP[50]           ; [CPU_] |934| 
	.dwpsn	file "../Source/prod.c",line 935,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |935| 
	.dwpsn	file "../Source/prod.c",line 937,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |937| 
$C$DW$1516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1516, DW_AT_name("_getShelfVoltage")
	.dwattr $C$DW$1516, DW_AT_TI_call

        LCR       #_getShelfVoltage     ; [CPU_] |937| 
        ; call occurs [#_getShelfVoltage] ; [] |937| 
	.dwpsn	file "../Source/prod.c",line 938,column 5,is_stmt,isa 0
        AND       AH,AL,#0x00ff         ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 939,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |939| 
	.dwpsn	file "../Source/prod.c",line 938,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AH          ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 939,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |939| 
        MOV       *+XAR1[4],AL          ; [CPU_] |939| 
	.dwpsn	file "../Source/prod.c",line 941,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |941| 
$C$DW$1517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1517, DW_AT_name("_getShelfAvgTemp")
	.dwattr $C$DW$1517, DW_AT_TI_call

        LCR       #_getShelfAvgTemp     ; [CPU_] |941| 
        ; call occurs [#_getShelfAvgTemp] ; [] |941| 
	.dwpsn	file "../Source/prod.c",line 942,column 5,is_stmt,isa 0
        AND       AH,AL,#0x00ff         ; [CPU_] |942| 
	.dwpsn	file "../Source/prod.c",line 943,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |943| 
	.dwpsn	file "../Source/prod.c",line 942,column 5,is_stmt,isa 0
        MOV       *+XAR1[5],AH          ; [CPU_] |942| 
	.dwpsn	file "../Source/prod.c",line 943,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |943| 
        MOV       *+XAR1[6],AL          ; [CPU_] |943| 
	.dwpsn	file "../Source/prod.c",line 945,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |945| 
$C$DW$1518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1518, DW_AT_name("_getShelfMaxTemp")
	.dwattr $C$DW$1518, DW_AT_TI_call

        LCR       #_getShelfMaxTemp     ; [CPU_] |945| 
        ; call occurs [#_getShelfMaxTemp] ; [] |945| 
	.dwpsn	file "../Source/prod.c",line 946,column 5,is_stmt,isa 0
        AND       AH,AL,#0x00ff         ; [CPU_] |946| 
	.dwpsn	file "../Source/prod.c",line 947,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |947| 
        ASR       AL,8                  ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 946,column 5,is_stmt,isa 0
        MOV       *+XAR1[7],AH          ; [CPU_] |946| 
	.dwpsn	file "../Source/prod.c",line 947,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |947| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 949,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |949| 
$C$DW$1519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1519, DW_AT_name("_getShelfMinTemp")
	.dwattr $C$DW$1519, DW_AT_TI_call

        LCR       #_getShelfMinTemp     ; [CPU_] |949| 
        ; call occurs [#_getShelfMinTemp] ; [] |949| 
	.dwpsn	file "../Source/prod.c",line 950,column 5,is_stmt,isa 0
        MOVB      XAR0,#9               ; [CPU_] |950| 
        AND       AH,AL,#0x00ff         ; [CPU_] |950| 
	.dwpsn	file "../Source/prod.c",line 951,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |951| 
	.dwpsn	file "../Source/prod.c",line 950,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AH        ; [CPU_] |950| 
	.dwpsn	file "../Source/prod.c",line 951,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |951| 
        MOVB      XAR0,#10              ; [CPU_] |951| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |951| 
	.dwpsn	file "../Source/prod.c",line 953,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |953| 
$C$DW$1520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1520, DW_AT_name("_getShelfMaxTempID")
	.dwattr $C$DW$1520, DW_AT_TI_call

        LCR       #_getShelfMaxTempID   ; [CPU_] |953| 
        ; call occurs [#_getShelfMaxTempID] ; [] |953| 
	.dwpsn	file "../Source/prod.c",line 954,column 5,is_stmt,isa 0
        MOVB      XAR0,#11              ; [CPU_] |954| 
        AND       AH,AL,#0x00ff         ; [CPU_] |954| 
	.dwpsn	file "../Source/prod.c",line 955,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |955| 
	.dwpsn	file "../Source/prod.c",line 954,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AH        ; [CPU_] |954| 
	.dwpsn	file "../Source/prod.c",line 955,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |955| 
        MOVB      XAR0,#12              ; [CPU_] |955| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |955| 
	.dwpsn	file "../Source/prod.c",line 957,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |957| 
$C$DW$1521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1521, DW_AT_name("_getShelfMinTempID")
	.dwattr $C$DW$1521, DW_AT_TI_call

        LCR       #_getShelfMinTempID   ; [CPU_] |957| 
        ; call occurs [#_getShelfMinTempID] ; [] |957| 
	.dwpsn	file "../Source/prod.c",line 958,column 5,is_stmt,isa 0
        MOVB      XAR0,#13              ; [CPU_] |958| 
        AND       AH,AL,#0x00ff         ; [CPU_] |958| 
	.dwpsn	file "../Source/prod.c",line 959,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |959| 
	.dwpsn	file "../Source/prod.c",line 958,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AH        ; [CPU_] |958| 
	.dwpsn	file "../Source/prod.c",line 959,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |959| 
        MOVB      XAR0,#14              ; [CPU_] |959| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |959| 
	.dwpsn	file "../Source/prod.c",line 961,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |961| 
$C$DW$1522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1522, DW_AT_name("_getShelfAlarms")
	.dwattr $C$DW$1522, DW_AT_TI_call

        LCR       #_getShelfAlarms      ; [CPU_] |961| 
        ; call occurs [#_getShelfAlarms] ; [] |961| 
	.dwpsn	file "../Source/prod.c",line 962,column 5,is_stmt,isa 0
        MOVB      XAR0,#15              ; [CPU_] |962| 
        AND       AH,AL,#0x00ff         ; [CPU_] |962| 
	.dwpsn	file "../Source/prod.c",line 963,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |963| 
	.dwpsn	file "../Source/prod.c",line 962,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AH        ; [CPU_] |962| 
	.dwpsn	file "../Source/prod.c",line 963,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |963| 
        MOVB      XAR0,#16              ; [CPU_] |963| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |963| 
	.dwpsn	file "../Source/prod.c",line 965,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |965| 
$C$DW$1523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1523, DW_AT_name("_getShelfErrors")
	.dwattr $C$DW$1523, DW_AT_TI_call

        LCR       #_getShelfErrors      ; [CPU_] |965| 
        ; call occurs [#_getShelfErrors] ; [] |965| 
	.dwpsn	file "../Source/prod.c",line 966,column 5,is_stmt,isa 0
        MOVB      XAR0,#17              ; [CPU_] |966| 
        AND       AH,AL,#0x00ff         ; [CPU_] |966| 
	.dwpsn	file "../Source/prod.c",line 967,column 5,is_stmt,isa 0
        ASR       AL,8                  ; [CPU_] |967| 
	.dwpsn	file "../Source/prod.c",line 966,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AH        ; [CPU_] |966| 
	.dwpsn	file "../Source/prod.c",line 967,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |967| 
        MOVB      XAR0,#18              ; [CPU_] |967| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |967| 
        MOV       AL,*-SP[51]           ; [CPU_] |967| 
	.dwpsn	file "../Source/prod.c",line 1022,column 5,is_stmt,isa 0
        B         $C$L675,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
	.dwpsn	file "../Source/prod.c",line 1023,column 6,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |1023| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 1026,column 5,is_stmt,isa 0
        MOVB      AL,#19                ; [CPU_] |1026| 
$C$L676:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$L677:    
$C$DW$1524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1524, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1524, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |1026| 
        ; call occurs [#_scia_send_bin] ; [] |1026| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 1061,column 4,is_stmt,isa 0
$C$DW$1525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1525, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1525, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |1061| 
        ; call occurs [#_scia_rx_getcmds] ; [] |1061| 
        CMPB      AL,#0                 ; [CPU_] |1061| 
        B         $C$L637,EQ            ; [CPU_] |1061| 
        ; branchcc occurs ; [] |1061| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1067,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1067| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1526, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1526, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |1067| 
        ; call occurs [#_scia_rx_getcmd] ; [] |1067| 
        MOV       *-SP[57],AL           ; [CPU_] |1067| 
        CMPB      AL,#0                 ; [CPU_] |1067| 
        B         $C$L637,EQ            ; [CPU_] |1067| 
        ; branchcc occurs ; [] |1067| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1084,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |1084| 
        B         $C$L323,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
	.dwpsn	file "../Source/prod.c",line 3702,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3702| 
        B         $C$L637,NEQ           ; [CPU_] |3702| 
        ; branchcc occurs ; [] |3702| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3702| 
        B         $C$L637,LO            ; [CPU_] |3702| 
        ; branchcc occurs ; [] |3702| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3736,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3736| 
	.dwpsn	file "../Source/prod.c",line 3729,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3729| 
	.dwpsn	file "../Source/prod.c",line 3725,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3725| 
	.dwpsn	file "../Source/prod.c",line 3729,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3729| 
	.dwpsn	file "../Source/prod.c",line 3728,column 4,is_stmt,isa 0
        MOV       *-SP[59],#2           ; [CPU_] |3728| 
	.dwpsn	file "../Source/prod.c",line 3736,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3736| 
	.dwpsn	file "../Source/prod.c",line 3729,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3729| 
	.dwpsn	file "../Source/prod.c",line 3736,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3736| 
        CMPB      AL,#146               ; [CPU_] |3736| 
        B         $C$L686,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#146               ; [CPU_] |3736| 
        B         $C$L232,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#54                ; [CPU_] |3736| 
        B         $C$L682,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#54                ; [CPU_] |3736| 
        B         $C$L717,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#36                ; [CPU_] |3736| 
        B         $C$L680,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#36                ; [CPU_] |3736| 
        B         $C$L288,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#33                ; [CPU_] |3736| 
        B         $C$L679,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#33                ; [CPU_] |3736| 
        B         $C$L303,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#16                ; [CPU_] |3736| 
        B         $C$L732,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        MOV       AH,AL                 ; [CPU_] |3736| 
        ADDB      AH,#-17               ; [CPU_] |3736| 
        CMPB      AH,#1                 ; [CPU_] |3736| 
        B         $C$L731,LOS           ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#32                ; [CPU_] |3736| 
        B         $C$L727,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L679:    
        CMPB      AL,#34                ; [CPU_] |3736| 
        B         $C$L299,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#35                ; [CPU_] |3736| 
        B         $C$L296,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L680:    
        CMPB      AL,#51                ; [CPU_] |3736| 
        B         $C$L681,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#51                ; [CPU_] |3736| 
        B         $C$L722,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#48                ; [CPU_] |3736| 
        B         $C$L282,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#49                ; [CPU_] |3736| 
        B         $C$L257,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#50                ; [CPU_] |3736| 
        B         $C$L724,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L681:    
        CMPB      AL,#52                ; [CPU_] |3736| 
        B         $C$L720,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#53                ; [CPU_] |3736| 
        B         $C$L719,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L682:    
        CMPB      AL,#71                ; [CPU_] |3736| 
        B         $C$L684,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#71                ; [CPU_] |3736| 
        B         $C$L253,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#68                ; [CPU_] |3736| 
        B         $C$L683,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#65                ; [CPU_] |3736| 
        B         $C$L702,GEQ           ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#55                ; [CPU_] |3736| 
        B         $C$L710,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#56                ; [CPU_] |3736| 
        B         $C$L706,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#57                ; [CPU_] |3736| 
        B         $C$L704,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L683:    
        CMPB      AL,#69                ; [CPU_] |3736| 
        B         $C$L701,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#70                ; [CPU_] |3736| 
        B         $C$L694,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L684:    
        CMPB      AL,#132               ; [CPU_] |3736| 
        B         $C$L685,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#132               ; [CPU_] |3736| 
        B         $C$L311,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#72                ; [CPU_] |3736| 
        B         $C$L246,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#130               ; [CPU_] |3736| 
        B         $C$L241,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#131               ; [CPU_] |3736| 
        B         $C$L312,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L685:    
        CMPB      AL,#144               ; [CPU_] |3736| 
        B         $C$L237,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#145               ; [CPU_] |3736| 
        B         $C$L236,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L686:    
        CMPB      AL,#169               ; [CPU_] |3736| 
        B         $C$L690,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#169               ; [CPU_] |3736| 
        B         $C$L168,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#161               ; [CPU_] |3736| 
        B         $C$L688,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#161               ; [CPU_] |3736| 
        B         $C$L194,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#150               ; [CPU_] |3736| 
        B         $C$L687,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#150               ; [CPU_] |3736| 
        B         $C$L225,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#147               ; [CPU_] |3736| 
        B         $C$L231,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#148               ; [CPU_] |3736| 
        B         $C$L230,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#149               ; [CPU_] |3736| 
        B         $C$L229,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L687:    
        CMPB      AL,#153               ; [CPU_] |3736| 
        B         $C$L215,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#160               ; [CPU_] |3736| 
        B         $C$L210,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L688:    
        CMPB      AL,#166               ; [CPU_] |3736| 
        B         $C$L689,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#166               ; [CPU_] |3736| 
        B         $C$L182,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#162               ; [CPU_] |3736| 
        B         $C$L189,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#163               ; [CPU_] |3736| 
        B         $C$L185,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#165               ; [CPU_] |3736| 
        B         $C$L184,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L689:    
        CMPB      AL,#167               ; [CPU_] |3736| 
        B         $C$L179,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#168               ; [CPU_] |3736| 
        B         $C$L177,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L690:    
        CMPB      AL,#195               ; [CPU_] |3736| 
        B         $C$L692,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#195               ; [CPU_] |3736| 
        B         $C$L143,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#192               ; [CPU_] |3736| 
        B         $C$L691,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#192               ; [CPU_] |3736| 
        B         $C$L160,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#170               ; [CPU_] |3736| 
        B         $C$L164,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#186               ; [CPU_] |3736| 
        B         $C$L309,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#187               ; [CPU_] |3736| 
        B         $C$L308,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L691:    
        CMPB      AL,#193               ; [CPU_] |3736| 
        B         $C$L153,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#194               ; [CPU_] |3736| 
        B         $C$L150,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L692:    
        CMPB      AL,#210               ; [CPU_] |3736| 
        B         $C$L693,GT            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#210               ; [CPU_] |3736| 
        B         $C$L79,EQ             ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#196               ; [CPU_] |3736| 
        B         $C$L115,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#197               ; [CPU_] |3736| 
        B         $C$L91,EQ             ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#198               ; [CPU_] |3736| 
        B         $C$L80,EQ             ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L693:    
        CMPB      AL,#211               ; [CPU_] |3736| 
        B         $C$L307,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        CMPB      AL,#240               ; [CPU_] |3736| 
        B         $C$L306,EQ            ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
        B         $C$L318,UNC           ; [CPU_] |3736| 
        ; branch occurs ; [] |3736| 
$C$L694:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4400,column 5,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |4400| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4400| 
        ADD       ACC,*-SP[59]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L695:    
	.dwpsn	file "../Source/prod.c",line 4402,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4402| 
        ANDB      AL,#0xff              ; [CPU_] |4402| 
        MOV       *XAR1++,AL            ; [CPU_] |4402| 
	.dwpsn	file "../Source/prod.c",line 4403,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4403| 
        LSR       AL,8                  ; [CPU_] |4403| 
        MOV       *XAR1++,AL            ; [CPU_] |4403| 
	.dwpsn	file "../Source/prod.c",line 4401,column 17,is_stmt,isa 0
        BANZ      $C$L695,AR6--         ; [CPU_] |4401| 
        ; branchcc occurs ; [] |4401| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4403,column 6,is_stmt,isa 0
        ADD       *-SP[59],#8           ; [CPU_] |4403| 
        MOV       *-SP[47],#3           ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
$C$L696:    
	.dwpsn	file "../Source/prod.c",line 4409,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4409| 
        MOV       AL,#0                 ; [CPU_] |4409| 
        MOV       AH,#0                 ; [CPU_] |4409| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4409| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4409| 
$C$DW$1527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1527, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1527, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4409| 
        ; call occurs [#FS$$CMP] ; [] |4409| 
        CMPB      AL,#0                 ; [CPU_] |4409| 
        B         $C$L697,NEQ           ; [CPU_] |4409| 
        ; branchcc occurs ; [] |4409| 
	.dwpsn	file "../Source/prod.c",line 4408,column 6,is_stmt,isa 0
        MOV       *-SP[57],#128         ; [CPU_] |4408| 
        B         $C$L698,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L697:    
	.dwpsn	file "../Source/prod.c",line 4410,column 7,is_stmt,isa 0
        MOV       *-SP[57],#129         ; [CPU_] |4410| 
$C$L698:    
	.dwpsn	file "../Source/prod.c",line 4412,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4412| 
        MOV       AL,#0                 ; [CPU_] |4412| 
        MOV       AH,#0                 ; [CPU_] |4412| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4412| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4412| 
$C$DW$1528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1528, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1528, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4412| 
        ; call occurs [#FS$$CMP] ; [] |4412| 
        CMPB      AL,#0                 ; [CPU_] |4412| 
        B         $C$L699,EQ            ; [CPU_] |4412| 
        ; branchcc occurs ; [] |4412| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4413,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4413| 
        MOV       *-SP[57],AL           ; [CPU_] |4413| 
$C$L699:    
	.dwpsn	file "../Source/prod.c",line 4415,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[62]         ; [CPU_] |4415| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4415| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4415| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4415| 
$C$DW$1529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1529, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1529, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4415| 
        ; call occurs [#FS$$CMP] ; [] |4415| 
        CMPB      AL,#0                 ; [CPU_] |4415| 
        B         $C$L700,EQ            ; [CPU_] |4415| 
        ; branchcc occurs ; [] |4415| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4416,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4416| 
        MOV       *-SP[57],AL           ; [CPU_] |4416| 
$C$L700:    
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4418,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4418| 
        MOV       *XAR1++,AL            ; [CPU_] |4418| 
	.dwpsn	file "../Source/prod.c",line 4407,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4418,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |4418| 
	.dwpsn	file "../Source/prod.c",line 4407,column 17,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4407| 
        MOVZ      AR0,AR6               ; [CPU_] |4407| 
        ADDB      ACC,#10               ; [CPU_] |4407| 
        MOV       *-SP[47],AR6          ; [CPU_] |4407| 
        MOVL      *-SP[62],ACC          ; [CPU_] |4407| 
        CMP       AR0,#-1               ; [CPU_] |4407| 
        B         $C$L696,NEQ           ; [CPU_] |4407| 
        ; branchcc occurs ; [] |4407| 
        B         $C$L734,UNC           ; [CPU_] |4407| 
        ; branch occurs ; [] |4407| 
$C$L701:    
	.dwpsn	file "../Source/prod.c",line 4393,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4393| 
        MOV       AH,#16672             ; [CPU_] |4393| 
        MOVL      XAR0,#44              ; [CPU_] |4393| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4393| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4393| 
$C$DW$1530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1530, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1530, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4393| 
        ; call occurs [#FS$$MPY] ; [] |4393| 
$C$DW$1531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1531, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1531, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4393| 
        ; call occurs [#FS$$TOU] ; [] |4393| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4393| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4393| 
	.dwpsn	file "../Source/prod.c",line 4394,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4394| 
	.dwpsn	file "../Source/prod.c",line 4393,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4393| 
	.dwpsn	file "../Source/prod.c",line 4394,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4394| 
        MOV       *-SP[59],#4           ; [CPU_] |4394| 
	.dwpsn	file "../Source/prod.c",line 4396,column 5,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |4396| 
        ; branch occurs ; [] |4396| 
$C$L702:    
	.dwpsn	file "../Source/prod.c",line 4375,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4375| 
        MOV       AH,#16672             ; [CPU_] |4375| 
        MOVL      XAR0,#44              ; [CPU_] |4375| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4375| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4375| 
$C$DW$1532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1532, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1532, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4375| 
        ; call occurs [#FS$$MPY] ; [] |4375| 
$C$DW$1533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1533, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1533, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4375| 
        ; call occurs [#FS$$TOU] ; [] |4375| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4375| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4375| 
	.dwpsn	file "../Source/prod.c",line 4376,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4376| 
	.dwpsn	file "../Source/prod.c",line 4375,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4375| 
	.dwpsn	file "../Source/prod.c",line 4376,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4376| 
	.dwpsn	file "../Source/prod.c",line 4378,column 5,is_stmt,isa 0
$C$DW$1534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1534, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1534, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4378| 
        ; call occurs [#_ad7738_getmon] ; [] |4378| 
	.dwpsn	file "../Source/prod.c",line 4379,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4379| 
        MOV       AH,#18371             ; [CPU_] |4379| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4379| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4379| 
        ADDL      ACC,XAR4              ; [CPU_] |4379| 
        SUBB      ACC,#130              ; [CPU_] |4379| 
        MOVL      XAR4,ACC              ; [CPU_] |4379| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4379| 
$C$DW$1535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1535, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1535, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4379| 
        ; call occurs [#FS$$MPY] ; [] |4379| 
$C$DW$1536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1536, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1536, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4379| 
        ; call occurs [#FS$$TOL] ; [] |4379| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4379,column 5,is_stmt,isa 0
        MOVL      XAR0,#84              ; [CPU_] |4379| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4379| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4380| 
	.dwpsn	file "../Source/prod.c",line 4379,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4379| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4380| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4383,column 6,is_stmt,isa 0
        MOV       *-SP[59],#8           ; [CPU_] |4383| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4382,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4382| 
        ANDB      AL,#0xff              ; [CPU_] |4382| 
        MOV       *XAR4++,AL            ; [CPU_] |4382| 
	.dwpsn	file "../Source/prod.c",line 4383,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4383| 
        LSR       AL,8                  ; [CPU_] |4383| 
        MOV       *XAR4++,AL            ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4381,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4381| 
        ; branchcc occurs ; [] |4381| 
        B         $C$L734,UNC           ; [CPU_] |4381| 
        ; branch occurs ; [] |4381| 
$C$L704:    
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4362| 
        MOV       *-SP[59],AL           ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4361,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4361| 
        MOV       *-SP[47],AL           ; [CPU_] |4361| 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
$C$DW$1537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1537, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1537, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4362| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4362| 
        MOV       *XAR1++,AL            ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4361,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4361| 
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4361,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4361| 
        B         $C$L705,LT            ; [CPU_] |4361| 
        ; branchcc occurs ; [] |4361| 
        B         $C$L734,UNC           ; [CPU_] |4361| 
        ; branch occurs ; [] |4361| 
$C$L706:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[59]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4339,column 6,is_stmt,isa 0
        MOVL      XAR0,#3182            ; [CPU_] |4339| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4339| 
        MOV       *XAR4++,AL            ; [CPU_] |4339| 
	.dwpsn	file "../Source/prod.c",line 4340,column 6,is_stmt,isa 0
        MOVL      XAR0,#3183            ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4343,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4343| 
	.dwpsn	file "../Source/prod.c",line 4340,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4341,column 6,is_stmt,isa 0
        MOVL      XAR0,#3184            ; [CPU_] |4341| 
	.dwpsn	file "../Source/prod.c",line 4340,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4341,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4341| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4341| 
$C$L708:    
	.dwpsn	file "../Source/prod.c",line 4345,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4345| 
        ANDB      AL,#0xff              ; [CPU_] |4345| 
        MOV       *XAR4++,AL            ; [CPU_] |4345| 
	.dwpsn	file "../Source/prod.c",line 4346,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4346| 
        LSR       AL,8                  ; [CPU_] |4346| 
        MOV       *XAR4++,AL            ; [CPU_] |4346| 
	.dwpsn	file "../Source/prod.c",line 4344,column 18,is_stmt,isa 0
        BANZ      $C$L708,AR0--         ; [CPU_] |4344| 
        ; branchcc occurs ; [] |4344| 
	.dwpsn	file "../Source/prod.c",line 4349,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |4349| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4351,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4351| 
        ANDB      AL,#0xff              ; [CPU_] |4351| 
        MOV       *XAR4++,AL            ; [CPU_] |4351| 
	.dwpsn	file "../Source/prod.c",line 4352,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4352| 
        LSR       AL,8                  ; [CPU_] |4352| 
        MOV       *XAR4++,AL            ; [CPU_] |4352| 
	.dwpsn	file "../Source/prod.c",line 4350,column 18,is_stmt,isa 0
        BANZ      $C$L709,AR0--         ; [CPU_] |4350| 
        ; branchcc occurs ; [] |4350| 
	.dwpsn	file "../Source/prod.c",line 4340,column 6,is_stmt,isa 0
        MOVZ      AR0,AR3               ; [CPU_] |4340| 
        ADD       *-SP[59],#11          ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4338,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4338| 
        ADDB      XAR7,#8               ; [CPU_] |4338| 
        ADDB      XAR6,#8               ; [CPU_] |4338| 
        SUBB      XAR0,#1               ; [CPU_U] |4338| 
        MOVZ      AR3,AR0               ; [CPU_] |4338| 
        CMP       AR0,#-1               ; [CPU_] |4338| 
        B         $C$L707,NEQ           ; [CPU_] |4338| 
        ; branchcc occurs ; [] |4338| 
        B         $C$L734,UNC           ; [CPU_] |4338| 
        ; branch occurs ; [] |4338| 
$C$L710:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[59]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4285,column 6,is_stmt,isa 0
        MOVL      XAR0,#3134            ; [CPU_] |4285| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4285| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4285,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4285| 
	.dwpsn	file "../Source/prod.c",line 4286,column 6,is_stmt,isa 0
        MOVL      XAR0,#3135            ; [CPU_] |4286| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4286| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4286| 
$C$L712:    
	.dwpsn	file "../Source/prod.c",line 4297,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4297| 
        ANDB      AL,#0xff              ; [CPU_] |4297| 
        MOV       *XAR4++,AL            ; [CPU_] |4297| 
	.dwpsn	file "../Source/prod.c",line 4298,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4298| 
        LSR       AL,8                  ; [CPU_] |4298| 
        MOV       *XAR4++,AL            ; [CPU_] |4298| 
	.dwpsn	file "../Source/prod.c",line 4296,column 18,is_stmt,isa 0
        BANZ      $C$L712,AR0--         ; [CPU_] |4296| 
        ; branchcc occurs ; [] |4296| 
	.dwpsn	file "../Source/prod.c",line 4303,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4303| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4310,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4310| 
        ANDB      AL,#0xff              ; [CPU_] |4310| 
        MOV       *XAR4++,AL            ; [CPU_] |4310| 
	.dwpsn	file "../Source/prod.c",line 4311,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4311| 
        LSR       AL,8                  ; [CPU_] |4311| 
        MOV       *XAR4++,AL            ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4309,column 18,is_stmt,isa 0
        BANZ      $C$L713,AR0--         ; [CPU_] |4309| 
        ; branchcc occurs ; [] |4309| 
        MOVL      XAR6,*-SP[62]         ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L714:    
	.dwpsn	file "../Source/prod.c",line 4316,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4316| 
        ANDB      AL,#0xff              ; [CPU_] |4316| 
        MOV       *XAR4++,AL            ; [CPU_] |4316| 
	.dwpsn	file "../Source/prod.c",line 4317,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4317| 
        LSR       AL,8                  ; [CPU_] |4317| 
        MOV       *XAR4++,AL            ; [CPU_] |4317| 
	.dwpsn	file "../Source/prod.c",line 4315,column 18,is_stmt,isa 0
        BANZ      $C$L714,AR0--         ; [CPU_] |4315| 
        ; branchcc occurs ; [] |4315| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4322,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4322| 
        ANDB      AL,#0xff              ; [CPU_] |4322| 
        MOV       *XAR4++,AL            ; [CPU_] |4322| 
	.dwpsn	file "../Source/prod.c",line 4323,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4323| 
        LSR       AL,8                  ; [CPU_] |4323| 
        MOV       *XAR4++,AL            ; [CPU_] |4323| 
	.dwpsn	file "../Source/prod.c",line 4321,column 18,is_stmt,isa 0
        BANZ      $C$L715,AR0--         ; [CPU_] |4321| 
        ; branchcc occurs ; [] |4321| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4328,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4328| 
        ANDB      AL,#0xff              ; [CPU_] |4328| 
        MOV       *XAR4++,AL            ; [CPU_] |4328| 
	.dwpsn	file "../Source/prod.c",line 4329,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4329| 
        LSR       AL,8                  ; [CPU_] |4329| 
        MOV       *XAR4++,AL            ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4327,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR0--         ; [CPU_] |4327| 
        ; branchcc occurs ; [] |4327| 
	.dwpsn	file "../Source/prod.c",line 4284,column 17,is_stmt,isa 0
        MOVL      ACC,*-SP[62]          ; [CPU_] |4284| 
	.dwpsn	file "../Source/prod.c",line 4286,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4286| 
	.dwpsn	file "../Source/prod.c",line 4284,column 17,is_stmt,isa 0
        ADDB      ACC,#12               ; [CPU_] |4284| 
	.dwpsn	file "../Source/prod.c",line 4286,column 6,is_stmt,isa 0
        ADD       *-SP[59],#22          ; [CPU_] |4286| 
	.dwpsn	file "../Source/prod.c",line 4284,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4284| 
        ADDB      XAR1,#12              ; [CPU_] |4284| 
        ADDB      XAR7,#12              ; [CPU_] |4284| 
        SUBB      XAR0,#1               ; [CPU_U] |4284| 
        MOVL      *-SP[62],ACC          ; [CPU_] |4284| 
        MOVL      ACC,XT                ; [CPU_] |4284| 
        MOV       *-SP[47],AR0          ; [CPU_] |4284| 
        ADDB      ACC,#12               ; [CPU_] |4284| 
        MOVL      XT,ACC                ; [CPU_] |4284| 
        MOVL      ACC,P                 ; [CPU_] |4284| 
        ADDB      ACC,#12               ; [CPU_] |4284| 
        MOVL      P,ACC                 ; [CPU_] |4284| 
        CMP       AR0,#-1               ; [CPU_] |4284| 
        B         $C$L711,NEQ           ; [CPU_] |4284| 
        ; branchcc occurs ; [] |4284| 
        B         $C$L734,UNC           ; [CPU_] |4284| 
        ; branch occurs ; [] |4284| 
$C$L717:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4277,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4277| 
        MOV       *-SP[59],AL           ; [CPU_] |4277| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L718:    
	.dwpsn	file "../Source/prod.c",line 4275,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4275| 
        MOV       *XAR4++,AL            ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4276,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4276| 
        MOV       *XAR4++,AL            ; [CPU_] |4276| 
	.dwpsn	file "../Source/prod.c",line 4277,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4277| 
	.dwpsn	file "../Source/prod.c",line 4274,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4274| 
	.dwpsn	file "../Source/prod.c",line 4277,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4277| 
	.dwpsn	file "../Source/prod.c",line 4274,column 17,is_stmt,isa 0
        BANZ      $C$L718,AR6--         ; [CPU_] |4274| 
        ; branchcc occurs ; [] |4274| 
        B         $C$L734,UNC           ; [CPU_] |4274| 
        ; branch occurs ; [] |4274| 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4265,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4265| 
        MOVB      XAR0,#36              ; [CPU_] |4265| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4265| 
        MOVL      XAR0,#78              ; [CPU_] |4265| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4265| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4265| 
	.dwpsn	file "../Source/prod.c",line 4267,column 6,is_stmt,isa 0
        MOV       *-SP[59],#7           ; [CPU_] |4267| 
	.dwpsn	file "../Source/prod.c",line 4265,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4265| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4267,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4267| 
	.dwpsn	file "../Source/prod.c",line 4266,column 17,is_stmt,isa 0
        B         $C$L734,UNC           ; [CPU_] |4266| 
        ; branch occurs ; [] |4266| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4251,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4251| 
        MOVB      XAR0,#38              ; [CPU_] |4251| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4251| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4252,column 5,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |4252| 
	.dwpsn	file "../Source/prod.c",line 4251,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4251| 
	.dwpsn	file "../Source/prod.c",line 4252,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4252| 
	.dwpsn	file "../Source/prod.c",line 4251,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4252,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4252| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4252| 
	.dwpsn	file "../Source/prod.c",line 4257,column 6,is_stmt,isa 0
        MOV       *-SP[59],#8           ; [CPU_] |4257| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4256,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4256| 
        ANDB      AL,#0xff              ; [CPU_] |4256| 
        MOV       *XAR4++,AL            ; [CPU_] |4256| 
	.dwpsn	file "../Source/prod.c",line 4257,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4257| 
        LSR       AL,8                  ; [CPU_] |4257| 
        MOV       *XAR4++,AL            ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4255,column 17,is_stmt,isa 0
        BANZ      $C$L721,AR6--         ; [CPU_] |4255| 
        ; branchcc occurs ; [] |4255| 
        B         $C$L734,UNC           ; [CPU_] |4255| 
        ; branch occurs ; [] |4255| 
$C$L722:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[59]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4241,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4241| 
        MOV       *-SP[59],AL           ; [CPU_] |4241| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L723:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4241| 
	.dwpsn	file "../Source/prod.c",line 4240,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4241,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4241| 
	.dwpsn	file "../Source/prod.c",line 4240,column 17,is_stmt,isa 0
        BANZ      $C$L723,AR6--         ; [CPU_] |4240| 
        ; branchcc occurs ; [] |4240| 
        B         $C$L734,UNC           ; [CPU_] |4240| 
        ; branch occurs ; [] |4240| 
$C$L724:    
        MOVL      XAR0,#84              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[59]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L725:    
	.dwpsn	file "../Source/prod.c",line 4224,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4224| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4226,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4226| 
        ANDB      AL,#0xff              ; [CPU_] |4226| 
        MOV       *XAR4++,AL            ; [CPU_] |4226| 
	.dwpsn	file "../Source/prod.c",line 4227,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4227| 
        LSR       AL,8                  ; [CPU_] |4227| 
        MOV       *XAR4++,AL            ; [CPU_] |4227| 
	.dwpsn	file "../Source/prod.c",line 4225,column 18,is_stmt,isa 0
        BANZ      $C$L726,AR0--         ; [CPU_] |4225| 
        ; branchcc occurs ; [] |4225| 
	.dwpsn	file "../Source/prod.c",line 4223,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4223| 
	.dwpsn	file "../Source/prod.c",line 4227,column 7,is_stmt,isa 0
        ADD       *-SP[59],#4           ; [CPU_] |4227| 
	.dwpsn	file "../Source/prod.c",line 4223,column 17,is_stmt,isa 0
        BANZ      $C$L725,AR6--         ; [CPU_] |4223| 
        ; branchcc occurs ; [] |4223| 
	.dwpsn	file "../Source/prod.c",line 4232,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4232| 
        MOVL      XAR0,#3214            ; [CPU_] |4232| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4232| 
        ANDB      AL,#0xff              ; [CPU_] |4232| 
        MOV       *XAR4++,AL            ; [CPU_] |4232| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4233| 
        LSR       AL,8                  ; [CPU_] |4233| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4233| 
	.dwpsn	file "../Source/prod.c",line 4236,column 5,is_stmt,isa 0
        B         $C$L224,UNC           ; [CPU_] |4236| 
        ; branch occurs ; [] |4236| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 3878,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3878| 
        MOVL      XAR0,#84              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3878| 
        MOVZ      AR4,AR4               ; [CPU_] |3878| 
        ADD       ACC,*-SP[59]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 3880,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3880| 
        ANDB      AL,#0xff              ; [CPU_] |3880| 
        MOV       *XAR1++,AL            ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3881,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3881| 
        LSR       AL,8                  ; [CPU_] |3881| 
        MOV       *XAR1++,AL            ; [CPU_] |3881| 
	.dwpsn	file "../Source/prod.c",line 3879,column 17,is_stmt,isa 0
        BANZ      $C$L728,AR6--         ; [CPU_] |3879| 
        ; branchcc occurs ; [] |3879| 
	.dwpsn	file "../Source/prod.c",line 3885,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3885| 
        ANDB      AL,#0xff              ; [CPU_] |3885| 
	.dwpsn	file "../Source/prod.c",line 3886,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3886| 
	.dwpsn	file "../Source/prod.c",line 3885,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3885| 
	.dwpsn	file "../Source/prod.c",line 3886,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3886| 
        LSR       AL,8                  ; [CPU_] |3886| 
        MOV       *XAR1++,AL            ; [CPU_] |3886| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3886| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 3890,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3890| 
        ANDB      AL,#0xff              ; [CPU_] |3890| 
        MOV       *XAR1++,AL            ; [CPU_] |3890| 
	.dwpsn	file "../Source/prod.c",line 3891,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3891| 
        LSR       AL,8                  ; [CPU_] |3891| 
        MOV       *XAR1++,AL            ; [CPU_] |3891| 
	.dwpsn	file "../Source/prod.c",line 3889,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |3889| 
        ; branchcc occurs ; [] |3889| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3895,column 5,is_stmt,isa 0
$C$DW$1538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1538, DW_AT_name("_strlen")
	.dwattr $C$DW$1538, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3895| 
        ; call occurs [#_strlen] ; [] |3895| 
	.dwpsn	file "../Source/prod.c",line 3896,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3896| 
	.dwpsn	file "../Source/prod.c",line 3881,column 6,is_stmt,isa 0
        ADD       *-SP[59],#11          ; [CPU_] |3881| 
	.dwpsn	file "../Source/prod.c",line 3897,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3897| 
        B         $C$L734,EQ            ; [CPU_] |3897| 
        ; branchcc occurs ; [] |3897| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3896,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3896| 
	.dwpsn	file "../Source/prod.c",line 3897,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3897| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L730:    
	.dwpsn	file "../Source/prod.c",line 3898,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3898| 
	.dwpsn	file "../Source/prod.c",line 3897,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3897| 
	.dwpsn	file "../Source/prod.c",line 3898,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3898| 
        INC       *-SP[59]              ; [CPU_] |3898| 
	.dwpsn	file "../Source/prod.c",line 3897,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3897| 
        B         $C$L730,HI            ; [CPU_] |3897| 
        ; branchcc occurs ; [] |3897| 
        B         $C$L734,UNC           ; [CPU_] |3897| 
        ; branch occurs ; [] |3897| 
$C$L731:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3864,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3864| 
        MOVL      XAR0,#64              ; [CPU_] |3864| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3864| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3864| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3864| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3864| 
	.dwpsn	file "../Source/prod.c",line 3867,column 5,is_stmt,isa 0
        B         $C$L733,UNC           ; [CPU_] |3867| 
        ; branch occurs ; [] |3867| 
$C$L732:    
	.dwpsn	file "../Source/prod.c",line 3858,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3858| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3858| 
$C$L733:    
        MOV       *-SP[59],#3           ; [CPU_] |3858| 
$C$L734:    
        MOVL      XAR0,#84              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5849,column 5,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |5849| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1539, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1539, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5849| 
        ; call occurs [#_scia_send_bin] ; [] |5849| 
	.dwpsn	file "../Source/prod.c",line 5851,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5851| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5851| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5851| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5851| 
        CMPB      AL,#240               ; [CPU_] |5851| 
        B         $C$L637,NEQ           ; [CPU_] |5851| 
        ; branchcc occurs ; [] |5851| 
	.dwpsn	file "../Source/prod.c",line 5852,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5852| 
$C$DW$1540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1540, DW_AT_name("_delay_us")
	.dwattr $C$DW$1540, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5852| 
        ; call occurs [#_delay_us] ; [] |5852| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5853,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5853| 
$C$DW$1541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1541, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1541, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5853| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5853| 
        B         $C$L637,UNC           ; [CPU_] |5853| 
        ; branch occurs ; [] |5853| 
	.dwattr $C$DW$302, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$302, DW_AT_TI_end_line(0x16fc)
	.dwattr $C$DW$302, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$302

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1542	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1542, DW_AT_name("get_fattime")
	.dwattr $C$DW$1542, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1542, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1542, DW_AT_external
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1542, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1542, DW_AT_TI_begin_line(0x76)
	.dwattr $C$DW$1542, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1542, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 118,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 118 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 122,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 122 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 123 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 124 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |122| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |122| 
        MOVL      ACC,P                 ; [CPU_] |122| 
        SFR       ACC,1                 ; [CPU_] |122| 
        MOVL      P,ACC                 ; [CPU_] |122| 
        MOV       AL,@_rtc              ; [CPU_] |122| 
        SUB       AL,#1980              ; [CPU_] |122| 
        MOV       ACC,AL << 4           ; [CPU_] |122| 
        OR        ACC,@_rtc+1           ; [CPU_] |122| 
        LSL       ACC,5                 ; [CPU_] |122| 
        OR        ACC,@_rtc+2           ; [CPU_] |122| 
        LSL       ACC,5                 ; [CPU_] |122| 
        OR        ACC,@_rtc+4           ; [CPU_] |122| 
        LSL       ACC,6                 ; [CPU_] |122| 
        OR        ACC,@_rtc+5           ; [CPU_] |122| 
        LSL       ACC,5                 ; [CPU_] |122| 
        OR        AL,PL                 ; [CPU_] |122| 
        OR        AH,PH                 ; [CPU_] |122| 
$C$DW$1543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1543, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1542, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1542, DW_AT_TI_end_line(0x7d)
	.dwattr $C$DW$1542, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1542

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"INCH",0
	.align	2
$C$FSL2:	.string	"IPM",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Feb 12 2020",0
	.align	2
$C$FSL62:	.string	"09:43:21",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"Voltage:            %.2f %.2f",13,10,0
	.align	2
$C$FSL264:	.string	"ShelfV :            %.2f %.2f",13,10,0
	.align	2
$C$FSL265:	.string	"ShelfT :            %.2f (%d) %.2f (%d)",13,10,0
	.align	2
$C$FSL266:	.string	"Current:            %.2f",13,10,0
	.align	2
$C$FSL267:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL268:	.string	"%10.1f",0
	.align	2
$C$FSL269:	.string	"1",0
	.align	2
$C$FSL270:	.string	"0",0
	.align	2
$C$FSL271:	.string	"-",0
	.align	2
$C$FSL272:	.string	"%10.4f",0
	.align	2
$C$FSL273:	.string	"%10.3f",0
	.align	2
$C$FSL274:	.string	"%10.2f",0
	.align	2
$C$FSL275:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_ad7738_resettare
	.global	_ad7738_monclr
	.global	_ad7738_resetpeak
	.global	_ad7738_settemp
	.global	_mcbsp_xmit
	.global	_ad7738_resetlimit
	.global	_ad7738_setcal
	.global	_SPICANCheckInts
	.global	_conf_default
	.global	_SPICANReadSetT0Message
	.global	_SPICANWaitForTXBuf
	.global	_velf_rst
	.global	_dac_setmode
	.global	_ad7738_init
	.global	_maf_rst
	.global	_SPICANInit
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_latch_dac
	.global	_led_set
	.global	_lcd_init
	.global	_gpio_init
	.global	_led_init
	.global	_InitECan
	.global	_lcd_clear
	.global	_InitPieVectTable
	.global	_InitPieCtrl
	.global	_shunt_switch
	.global	_ssr_set
	.global	_sys_init
	.global	_flash_init
	.global	_delay_us
	.global	_extio_init
	.global	_uart_set_dir
	.global	_reboot
	.global	_lcd_dputs
	.global	_lcd_puts
	.global	_scia_set_cmd_mode
	.global	_scia_init
	.global	_getShelfErrors
	.global	_getShelfAlarms
	.global	_getModVoltage
	.global	_atoi
	.global	_port400e
	.global	_getShelfMinTemp
	.global	_getShelfMinTempID
	.global	_getShelfMaxTempID
	.global	_getShelfAvgTemp
	.global	_getShelfMaxTemp
	.global	_Flash28_API_LoadStart
	.global	_Flash28_API_LoadEnd
	.global	_sprintf
	.global	_secureRamFuncs_runstart
	.global	_port4004
	.global	_canVarInit
	.global	_secureRamFuncs_loadstart
	.global	_secureRamFuncs_loadend
	.global	_conf_write
	.global	_ad7738_rawrdy
	.global	_scia_rx_getcmds
	.global	_ad7738_getlimitst
	.global	_ad7738_getlimitchgd
	.global	_conf_read
	.global	_SPICANRead
	.global	_scia_send_bin
	.global	_scia_getparam
	.global	_scia_rx_getcmd
	.global	_ad7738_monrdy
	.global	_SPICANReadStat
	.global	_scia_puts
	.global	_getSystemCapVoltage
	.global	_tagdetect
	.global	_ad7738_tagsdetect
	.global	_Flash28_API_RunStart
	.global	_ad7738_tempstart
	.global	_ad7738_tempread
	.global	_getShelfVoltage
	.global	_strtod
	.global	_getSystemCapVoltageF
	.global	_getSystemOutCurrentF
	.global	_atol
	.global	_Flash_CPUScaleFactor
	.global	_Flash_CallbackPtr
	.global	_ad7738_getmon
	.global	_ad7738_getraw
	.global	_ad7738_getpeak
	.global	_prod_getavail
	.global	_strlen
	.global	_ds1820read
	.global	_ad7738_getvall
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1544, DW_AT_name("fs_type")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1545, DW_AT_name("drv")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1546, DW_AT_name("csize")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1547, DW_AT_name("n_fats")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1548, DW_AT_name("wflag")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1549, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1550, DW_AT_name("id")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1551, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1552, DW_AT_name("last_clust")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1553, DW_AT_name("free_clust")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1554, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1555, DW_AT_name("cdir")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1556, DW_AT_name("n_fatent")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1557, DW_AT_name("fsize")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1558, DW_AT_name("fatbase")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1559, DW_AT_name("dirbase")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1560, DW_AT_name("database")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1561, DW_AT_name("winsect")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1562, DW_AT_name("win")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1563, DW_AT_name("fs")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1564, DW_AT_name("id")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1565, DW_AT_name("flag")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1566, DW_AT_name("pad1")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1567, DW_AT_name("fptr")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1568, DW_AT_name("fsize")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1569, DW_AT_name("org_clust")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1570, DW_AT_name("curr_clust")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1571, DW_AT_name("dsect")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1572, DW_AT_name("dir_sect")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1573, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1574, DW_AT_name("cltbl")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1575, DW_AT_name("buf")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1576, DW_AT_name("year")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1577, DW_AT_name("month")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1578, DW_AT_name("mday")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1579, DW_AT_name("wday")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1580, DW_AT_name("hour")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1581, DW_AT_name("min")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1582, DW_AT_name("sec")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1583, DW_AT_name("adc")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1584, DW_AT_name("adw")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1585, DW_AT_name("pos")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1586, DW_AT_name("vel")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1587, DW_AT_name("ci")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1588, DW_AT_name("bslope")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1589, DW_AT_name("tcx")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1590, DW_AT_name("tcy")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1591, DW_AT_name("tcz")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1592	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1592, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("what")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("ch")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1595, DW_AT_name("dslopep")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1596, DW_AT_name("dslopen")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1597, DW_AT_name("dint")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1598, DW_AT_name("gain")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1599, DW_AT_name("offset")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1600	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1600, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("what")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("ch")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("adec")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1604	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1604, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("all")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1622, DW_AT_name("bit")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("all")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1640, DW_AT_name("bit")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("all")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1658, DW_AT_name("bit")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("all")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1676, DW_AT_name("bit")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("all")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1694, DW_AT_name("bit")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1708, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1708, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("all")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1712, DW_AT_name("bit")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("all")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1730, DW_AT_name("bit")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("all")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1748, DW_AT_name("bit")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("rsvd1")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("rsvd2")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("all")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1756, DW_AT_name("bit")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("rsvd1")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("rsvd2")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("all")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1764, DW_AT_name("bit")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("rsvd1")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("rsvd2")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("all")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1772, DW_AT_name("bit")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("rsvd1")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("rsvd2")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("all")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1780, DW_AT_name("bit")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("rsvd1")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("all")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1786, DW_AT_name("bit")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("rsvd1")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("all")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1792, DW_AT_name("bit")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("rsvd1")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("all")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1798, DW_AT_name("bit")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("rsvd1")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("all")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1804, DW_AT_name("bit")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("all")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1822, DW_AT_name("bit")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1825, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1825, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1831, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1831, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1837, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1837, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("all")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1840, DW_AT_name("bit")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1841, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1841, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1842, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1842, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1843, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1843, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1844, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1844, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1846, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1846, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1847, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1847, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1848, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1848, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1849, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1849, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1850, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1850, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1851, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1851, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1851, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1852, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1852, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1852, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1853, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1853, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1853, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1854, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1854, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1854, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1855, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1855, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1855, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1856, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1856, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1856, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("all")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1858, DW_AT_name("bit")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1859, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1859, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1859, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1860, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1860, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1860, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1861, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1861, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1861, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1862, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1862, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1862, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1863, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1863, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1863, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1864, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1864, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1864, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1865, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1865, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1865, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1866, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1866, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1866, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1867, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1867, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1867, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1868, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1868, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1868, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1869, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1869, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1869, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1870, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1870, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1870, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1871, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1871, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1871, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1872, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1872, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1872, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1873, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1873, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1873, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1874, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1874, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1874, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1875, DW_AT_name("all")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1876, DW_AT_name("bit")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1877, DW_AT_name("rsvd1")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1877, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1877, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1878, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1878, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1878, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1879, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1879, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1879, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1880, DW_AT_name("rsvd2")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1880, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1880, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1881, DW_AT_name("all")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1882, DW_AT_name("bit")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1883, DW_AT_name("rsvd1")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1883, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1883, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1884, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1884, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1884, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1885, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1885, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1885, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1886, DW_AT_name("rsvd2")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1886, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1886, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1887, DW_AT_name("all")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1888, DW_AT_name("bit")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1889, DW_AT_name("rsvd1")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1889, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1889, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1890, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1890, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1890, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1891, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1891, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1891, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1892, DW_AT_name("rsvd2")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1892, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1892, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1893, DW_AT_name("all")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1894, DW_AT_name("bit")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1895, DW_AT_name("rsvd1")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1895, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1895, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1896, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1896, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1896, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1897, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1897, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1897, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1898, DW_AT_name("rsvd2")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1898, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1898, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1899, DW_AT_name("all")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1900, DW_AT_name("bit")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1901, DW_AT_name("GPADAT")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1902, DW_AT_name("GPASET")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1903, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1904, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1905, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1906, DW_AT_name("GPBSET")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1907, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1908, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1909, DW_AT_name("rsvd1")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1910, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1911, DW_AT_name("GPDSET")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1912, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1913, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1914, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1915, DW_AT_name("GPESET")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1916, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1917, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1918, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1919, DW_AT_name("GPFSET")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1920	.dwtag  DW_TAG_member
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1920, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1920, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1920, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1920, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1921	.dwtag  DW_TAG_member
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1921, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1921, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1921, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1921, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1922	.dwtag  DW_TAG_member
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1922, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1922, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1922, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1922, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1923	.dwtag  DW_TAG_member
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1923, DW_AT_name("GPGSET")
	.dwattr $C$DW$1923, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1923, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1923, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1924	.dwtag  DW_TAG_member
	.dwattr $C$DW$1924, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1924, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1924, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1924, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1924, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1925	.dwtag  DW_TAG_member
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1925, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1925, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1925, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1925, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1926	.dwtag  DW_TAG_member
	.dwattr $C$DW$1926, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1926, DW_AT_name("rsvd2")
	.dwattr $C$DW$1926, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1926, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1926, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1927	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1927)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1928	.dwtag  DW_TAG_member
	.dwattr $C$DW$1928, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1928, DW_AT_name("what")
	.dwattr $C$DW$1928, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1928, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1928, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1929	.dwtag  DW_TAG_member
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1929, DW_AT_name("ch")
	.dwattr $C$DW$1929, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1929, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1929, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1930	.dwtag  DW_TAG_member
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1930, DW_AT_name("limit")
	.dwattr $C$DW$1930, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1930, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1930, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1931	.dwtag  DW_TAG_member
	.dwattr $C$DW$1931, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1931, DW_AT_name("limits")
	.dwattr $C$DW$1931, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1931, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1931, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1932	.dwtag  DW_TAG_member
	.dwattr $C$DW$1932, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1932, DW_AT_name("limitr")
	.dwattr $C$DW$1932, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1932, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1932, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1933	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1933, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1934	.dwtag  DW_TAG_member
	.dwattr $C$DW$1934, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1934, DW_AT_name("usn")
	.dwattr $C$DW$1934, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1934, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1934, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1935	.dwtag  DW_TAG_member
	.dwattr $C$DW$1935, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1935, DW_AT_name("uname")
	.dwattr $C$DW$1935, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1935, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1935, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1936	.dwtag  DW_TAG_member
	.dwattr $C$DW$1936, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1936, DW_AT_name("rxdir")
	.dwattr $C$DW$1936, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1936, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1936, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1937	.dwtag  DW_TAG_member
	.dwattr $C$DW$1937, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1937, DW_AT_name("baud")
	.dwattr $C$DW$1937, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1937, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1937, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1938	.dwtag  DW_TAG_member
	.dwattr $C$DW$1938, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1938, DW_AT_name("tagiden")
	.dwattr $C$DW$1938, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1938, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1938, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1939	.dwtag  DW_TAG_member
	.dwattr $C$DW$1939, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1939, DW_AT_name("tarepersist")
	.dwattr $C$DW$1939, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1939, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1939, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1940	.dwtag  DW_TAG_member
	.dwattr $C$DW$1940, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1940, DW_AT_name("filter")
	.dwattr $C$DW$1940, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1940, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1940, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1941	.dwtag  DW_TAG_member
	.dwattr $C$DW$1941, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1941, DW_AT_name("diffwin")
	.dwattr $C$DW$1941, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1941, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1941, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1942	.dwtag  DW_TAG_member
	.dwattr $C$DW$1942, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1942, DW_AT_name("ch")
	.dwattr $C$DW$1942, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1942, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1942, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1943	.dwtag  DW_TAG_member
	.dwattr $C$DW$1943, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1943, DW_AT_name("sensor")
	.dwattr $C$DW$1943, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1943, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1943, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1944	.dwtag  DW_TAG_member
	.dwattr $C$DW$1944, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1944, DW_AT_name("vfd")
	.dwattr $C$DW$1944, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1944, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1944, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1945	.dwtag  DW_TAG_member
	.dwattr $C$DW$1945, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1945, DW_AT_name("dac")
	.dwattr $C$DW$1945, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1945, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1945, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1946	.dwtag  DW_TAG_member
	.dwattr $C$DW$1946, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1946, DW_AT_name("lim")
	.dwattr $C$DW$1946, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1946, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1946, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1947	.dwtag  DW_TAG_member
	.dwattr $C$DW$1947, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1947, DW_AT_name("velfilter")
	.dwattr $C$DW$1947, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1947, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1947, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1948	.dwtag  DW_TAG_member
	.dwattr $C$DW$1948, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1948, DW_AT_name("cntperin")
	.dwattr $C$DW$1948, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1948, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1948, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1949	.dwtag  DW_TAG_member
	.dwattr $C$DW$1949, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1949, DW_AT_name("magic")
	.dwattr $C$DW$1949, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1949, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1949, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1950	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1950, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1950)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1951	.dwtag  DW_TAG_member
	.dwattr $C$DW$1951, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1951, DW_AT_name("ssn")
	.dwattr $C$DW$1951, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1951, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1951, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1952	.dwtag  DW_TAG_member
	.dwattr $C$DW$1952, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1952, DW_AT_name("slbl")
	.dwattr $C$DW$1952, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1952, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1952, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1953	.dwtag  DW_TAG_member
	.dwattr $C$DW$1953, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1953, DW_AT_name("tagid")
	.dwattr $C$DW$1953, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1953, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1953, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1954	.dwtag  DW_TAG_member
	.dwattr $C$DW$1954, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1954, DW_AT_name("method")
	.dwattr $C$DW$1954, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1954, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1954, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1955	.dwtag  DW_TAG_member
	.dwattr $C$DW$1955, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1955, DW_AT_name("date")
	.dwattr $C$DW$1955, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1955, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1955, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1956	.dwtag  DW_TAG_member
	.dwattr $C$DW$1956, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1956, DW_AT_name("range")
	.dwattr $C$DW$1956, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1956, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1956, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1957	.dwtag  DW_TAG_member
	.dwattr $C$DW$1957, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1957, DW_AT_name("unit")
	.dwattr $C$DW$1957, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1957, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1957, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1958	.dwtag  DW_TAG_member
	.dwattr $C$DW$1958, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1958, DW_AT_name("ounit")
	.dwattr $C$DW$1958, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1958, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1958, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1959	.dwtag  DW_TAG_member
	.dwattr $C$DW$1959, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1959, DW_AT_name("ufactor")
	.dwattr $C$DW$1959, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1959, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1959, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1960	.dwtag  DW_TAG_member
	.dwattr $C$DW$1960, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1960, DW_AT_name("points")
	.dwattr $C$DW$1960, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1960, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1960, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1961	.dwtag  DW_TAG_member
	.dwattr $C$DW$1961, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1961, DW_AT_name("mass")
	.dwattr $C$DW$1961, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1961, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1961, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1962	.dwtag  DW_TAG_member
	.dwattr $C$DW$1962, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1962, DW_AT_name("adc")
	.dwattr $C$DW$1962, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1962, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1962, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1963	.dwtag  DW_TAG_member
	.dwattr $C$DW$1963, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1963, DW_AT_name("slope")
	.dwattr $C$DW$1963, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1963, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1963, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1964	.dwtag  DW_TAG_member
	.dwattr $C$DW$1964, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1964, DW_AT_name("intercept")
	.dwattr $C$DW$1964, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1964, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1964, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1965	.dwtag  DW_TAG_member
	.dwattr $C$DW$1965, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1965, DW_AT_name("shunt")
	.dwattr $C$DW$1965, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1965, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1965, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1966	.dwtag  DW_TAG_member
	.dwattr $C$DW$1966, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1966, DW_AT_name("base")
	.dwattr $C$DW$1966, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1966, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1966, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1967	.dwtag  DW_TAG_member
	.dwattr $C$DW$1967, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1967, DW_AT_name("tare")
	.dwattr $C$DW$1967, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1967, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1967, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1968	.dwtag  DW_TAG_member
	.dwattr $C$DW$1968, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1968, DW_AT_name("dacgain")
	.dwattr $C$DW$1968, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1968, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1968, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1969	.dwtag  DW_TAG_member
	.dwattr $C$DW$1969, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1969, DW_AT_name("dacoff")
	.dwattr $C$DW$1969, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1969, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1969, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1970	.dwtag  DW_TAG_member
	.dwattr $C$DW$1970, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1970, DW_AT_name("ch")
	.dwattr $C$DW$1970, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1970, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1970, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1971	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1971, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1972	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1972, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1972)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1973	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1973, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1974	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1974, DW_AT_type(*$C$DW$T$6)

$C$DW$T$175	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$1974)


$C$DW$T$176	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_byte_size(0x101)
$C$DW$1975	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1975, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$176

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1976	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1976, DW_AT_type(*$C$DW$T$10)

$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$1976)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1977	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1977, DW_AT_type(*$C$DW$T$36)

$C$DW$1978	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1978, DW_AT_type(*$C$DW$1977)

$C$DW$T$298	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1978)

$C$DW$1979	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1979, DW_AT_type(*$C$DW$T$36)

$C$DW$T$299	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$1979)


$C$DW$T$300	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$300, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$T$300, DW_AT_language(DW_LANG_C)
$C$DW$1980	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$300


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1981	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1981, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87

$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x03)
$C$DW$1982	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1982, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$308


$C$DW$T$309	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$309, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$309, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$309, DW_AT_byte_size(0x08)
$C$DW$1983	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1983, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$309

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1984	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1984, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1985	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1985, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1986	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1986, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1987	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1987, DW_AT_type(*$C$DW$T$12)

$C$DW$T$338	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$338, DW_AT_type(*$C$DW$1987)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1988	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1988, DW_AT_type(*$C$DW$T$90)

$C$DW$T$341	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$341, DW_AT_type(*$C$DW$1988)


$C$DW$T$342	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$342, DW_AT_type(*$C$DW$T$341)
	.dwattr $C$DW$T$342, DW_AT_language(DW_LANG_C)
$C$DW$1989	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$342

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$357	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$357, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$357, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$357, DW_AT_byte_size(0x08)
$C$DW$1990	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1990, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$357

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1991	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1991, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1992	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1992, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1993	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1993, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1994	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1994, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$376	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$376, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$376, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$376, DW_AT_byte_size(0x06)
$C$DW$1995	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1995, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$376

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1996	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1996, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1997	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1997, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$364	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$364, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$364, DW_AT_address_class(0x20)

$C$DW$1998	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1998, DW_AT_type(*$C$DW$T$5)

$C$DW$T$179	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$1998)

$C$DW$T$180	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_address_class(0x20)


$C$DW$T$377	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$377, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$377, DW_AT_language(DW_LANG_C)
$C$DW$1999	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$377


$C$DW$T$378	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$378, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$378, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$378, DW_AT_byte_size(0x400)
$C$DW$2000	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$2000, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$378


$C$DW$T$383	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$383, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$383, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$383, DW_AT_byte_size(0x08)
$C$DW$2001	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$2001, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$383


$C$DW$T$384	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$384, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$384, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$384, DW_AT_byte_size(0x64)
$C$DW$2002	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$2002, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$384


$C$DW$T$385	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$385, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$385, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$385, DW_AT_byte_size(0x40)
$C$DW$2003	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$2003, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$385

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$2004	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2004, DW_AT_name("AL")
	.dwattr $C$DW$2004, DW_AT_location[DW_OP_reg0]

$C$DW$2005	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2005, DW_AT_name("AH")
	.dwattr $C$DW$2005, DW_AT_location[DW_OP_reg1]

$C$DW$2006	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2006, DW_AT_name("PL")
	.dwattr $C$DW$2006, DW_AT_location[DW_OP_reg2]

$C$DW$2007	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2007, DW_AT_name("PH")
	.dwattr $C$DW$2007, DW_AT_location[DW_OP_reg3]

$C$DW$2008	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2008, DW_AT_name("SP")
	.dwattr $C$DW$2008, DW_AT_location[DW_OP_reg20]

$C$DW$2009	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2009, DW_AT_name("XT")
	.dwattr $C$DW$2009, DW_AT_location[DW_OP_reg21]

$C$DW$2010	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2010, DW_AT_name("T")
	.dwattr $C$DW$2010, DW_AT_location[DW_OP_reg22]

$C$DW$2011	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2011, DW_AT_name("ST0")
	.dwattr $C$DW$2011, DW_AT_location[DW_OP_reg23]

$C$DW$2012	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2012, DW_AT_name("ST1")
	.dwattr $C$DW$2012, DW_AT_location[DW_OP_reg24]

$C$DW$2013	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2013, DW_AT_name("PC")
	.dwattr $C$DW$2013, DW_AT_location[DW_OP_reg25]

$C$DW$2014	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2014, DW_AT_name("RPC")
	.dwattr $C$DW$2014, DW_AT_location[DW_OP_reg26]

$C$DW$2015	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2015, DW_AT_name("FP")
	.dwattr $C$DW$2015, DW_AT_location[DW_OP_reg28]

$C$DW$2016	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2016, DW_AT_name("DP")
	.dwattr $C$DW$2016, DW_AT_location[DW_OP_reg29]

$C$DW$2017	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2017, DW_AT_name("SXM")
	.dwattr $C$DW$2017, DW_AT_location[DW_OP_reg30]

$C$DW$2018	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2018, DW_AT_name("PM")
	.dwattr $C$DW$2018, DW_AT_location[DW_OP_reg31]

$C$DW$2019	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2019, DW_AT_name("OVM")
	.dwattr $C$DW$2019, DW_AT_location[DW_OP_regx 0x20]

$C$DW$2020	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2020, DW_AT_name("PAGE0")
	.dwattr $C$DW$2020, DW_AT_location[DW_OP_regx 0x21]

$C$DW$2021	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2021, DW_AT_name("AMODE")
	.dwattr $C$DW$2021, DW_AT_location[DW_OP_regx 0x22]

$C$DW$2022	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2022, DW_AT_name("INTM")
	.dwattr $C$DW$2022, DW_AT_location[DW_OP_regx 0x23]

$C$DW$2023	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2023, DW_AT_name("IFR")
	.dwattr $C$DW$2023, DW_AT_location[DW_OP_regx 0x24]

$C$DW$2024	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2024, DW_AT_name("IER")
	.dwattr $C$DW$2024, DW_AT_location[DW_OP_regx 0x25]

$C$DW$2025	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2025, DW_AT_name("V")
	.dwattr $C$DW$2025, DW_AT_location[DW_OP_regx 0x26]

$C$DW$2026	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2026, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$2026, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$2027	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2027, DW_AT_name("VOL")
	.dwattr $C$DW$2027, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$2028	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2028, DW_AT_name("AR0")
	.dwattr $C$DW$2028, DW_AT_location[DW_OP_reg4]

$C$DW$2029	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2029, DW_AT_name("XAR0")
	.dwattr $C$DW$2029, DW_AT_location[DW_OP_reg5]

$C$DW$2030	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2030, DW_AT_name("AR1")
	.dwattr $C$DW$2030, DW_AT_location[DW_OP_reg6]

$C$DW$2031	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2031, DW_AT_name("XAR1")
	.dwattr $C$DW$2031, DW_AT_location[DW_OP_reg7]

$C$DW$2032	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2032, DW_AT_name("AR2")
	.dwattr $C$DW$2032, DW_AT_location[DW_OP_reg8]

$C$DW$2033	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2033, DW_AT_name("XAR2")
	.dwattr $C$DW$2033, DW_AT_location[DW_OP_reg9]

$C$DW$2034	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2034, DW_AT_name("AR3")
	.dwattr $C$DW$2034, DW_AT_location[DW_OP_reg10]

$C$DW$2035	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2035, DW_AT_name("XAR3")
	.dwattr $C$DW$2035, DW_AT_location[DW_OP_reg11]

$C$DW$2036	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2036, DW_AT_name("AR4")
	.dwattr $C$DW$2036, DW_AT_location[DW_OP_reg12]

$C$DW$2037	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2037, DW_AT_name("XAR4")
	.dwattr $C$DW$2037, DW_AT_location[DW_OP_reg13]

$C$DW$2038	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2038, DW_AT_name("AR5")
	.dwattr $C$DW$2038, DW_AT_location[DW_OP_reg14]

$C$DW$2039	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2039, DW_AT_name("XAR5")
	.dwattr $C$DW$2039, DW_AT_location[DW_OP_reg15]

$C$DW$2040	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2040, DW_AT_name("AR6")
	.dwattr $C$DW$2040, DW_AT_location[DW_OP_reg16]

$C$DW$2041	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2041, DW_AT_name("XAR6")
	.dwattr $C$DW$2041, DW_AT_location[DW_OP_reg17]

$C$DW$2042	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2042, DW_AT_name("AR7")
	.dwattr $C$DW$2042, DW_AT_location[DW_OP_reg18]

$C$DW$2043	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2043, DW_AT_name("XAR7")
	.dwattr $C$DW$2043, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

