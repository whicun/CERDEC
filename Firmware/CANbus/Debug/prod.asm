;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Thu Dec 19 14:16:05 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwendtag $C$DW$5


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$6


$C$DW$8	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$8, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$8


$C$DW$10	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$10, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_declaration
	.dwattr $C$DW$10, DW_AT_external
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$11)

$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$10


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwendtag $C$DW$15


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("SPICANCheckInts")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_SPICANCheckInts")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$16


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("conf_default")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwendtag $C$DW$18


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("SPICANWaitForTXBuf")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$19


$C$DW$21	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$21, DW_AT_name("SPICANRoutine")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("_SPICANRoutine")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwendtag $C$DW$21


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("velf_rst")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("dac_setmode")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$23


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ad7738_init")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("maf_rst")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$36)

$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$36)

$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$27

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("UNITS")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("METHOD")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("BAUD")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$339)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external

$C$DW$34	.dwtag  DW_TAG_variable
	.dwattr $C$DW$34, DW_AT_name("BITMAP")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$300)
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("LPV")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external

$C$DW$36	.dwtag  DW_TAG_variable
	.dwattr $C$DW$36, DW_AT_name("INTERFACE")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("ds1820start")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("configCAN")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("latch_dac")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("SPICANInit")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwendtag $C$DW$40


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("extio_init")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwendtag $C$DW$41


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("gpio_init")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwendtag $C$DW$42


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("ssr_set")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$36)

$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$43


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$46


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("lcd_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("lcd_clear")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwendtag $C$DW$49


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("led_init")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwendtag $C$DW$50


$C$DW$51	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$51, DW_AT_name("led_set")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$51


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("delay_us")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("InitECan")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwendtag $C$DW$57


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwendtag $C$DW$58


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("flash_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("shunt_switch")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$60


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("reboot")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
	.dwendtag $C$DW$62


$C$DW$63	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$63, DW_AT_name("sys_init")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
	.dwendtag $C$DW$63


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$163)

$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64


$C$DW$67	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$67, DW_AT_name("lcd_puts")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$163)

$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$67


$C$DW$70	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$70, DW_AT_name("scia_init")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$70


$C$DW$72	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$72, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$72

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("cmd_mode")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$74, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$74, DW_AT_external


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("scia_getparam")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$163)

$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$163)

$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$75


$C$DW$79	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$79, DW_AT_name("SPICANRead")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$79


$C$DW$81	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$81, DW_AT_name("scia_puts")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$81


$C$DW$83	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$83, DW_AT_name("sprintf")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$163)

$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$180)

$C$DW$86	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$83


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$163)

$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$87


$C$DW$90	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$90, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwendtag $C$DW$90

$C$DW$91	.dwtag  DW_TAG_variable
	.dwattr $C$DW$91, DW_AT_name("port4004")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external

$C$DW$92	.dwtag  DW_TAG_variable
	.dwattr $C$DW$92, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("atoi")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$93

$C$DW$95	.dwtag  DW_TAG_variable
	.dwattr $C$DW$95, DW_AT_name("port400e")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("autoidchanged")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$96, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_external

$C$DW$97	.dwtag  DW_TAG_variable
	.dwattr $C$DW$97, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external

$C$DW$98	.dwtag  DW_TAG_variable
	.dwattr $C$DW$98, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external

$C$DW$99	.dwtag  DW_TAG_variable
	.dwattr $C$DW$99, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external

$C$DW$100	.dwtag  DW_TAG_variable
	.dwattr $C$DW$100, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external

$C$DW$101	.dwtag  DW_TAG_variable
	.dwattr $C$DW$101, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwendtag $C$DW$102


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("conf_write")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
	.dwendtag $C$DW$106


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwendtag $C$DW$107


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
	.dwendtag $C$DW$108


$C$DW$109	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$109, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$109


$C$DW$111	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$111, DW_AT_name("conf_read")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$111, DW_AT_declaration
	.dwattr $C$DW$111, DW_AT_external
	.dwendtag $C$DW$111


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("tagdetect")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$112


$C$DW$114	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$114, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$163)

$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$114


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
	.dwendtag $C$DW$117


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("strtod")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
$C$DW$119	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$180)

$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$359)

	.dwendtag $C$DW$118

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$121	.dwtag  DW_TAG_variable
	.dwattr $C$DW$121, DW_AT_name("VEL_U")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$121, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$121, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$122	.dwtag  DW_TAG_variable
	.dwattr $C$DW$122, DW_AT_name("POS_U")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$122, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$122, DW_AT_external


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$123


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("memcpy")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$3)

$C$DW$127	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$148)

$C$DW$128	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$125


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("atol")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
$C$DW$130	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$129


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
	.dwendtag $C$DW$131


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ds1820read")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("prod_getnext")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
	.dwendtag $C$DW$133

$C$DW$134	.dwtag  DW_TAG_variable
	.dwattr $C$DW$134, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external

$C$DW$135	.dwtag  DW_TAG_variable
	.dwattr $C$DW$135, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
	.dwendtag $C$DW$136


$C$DW$137	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$137, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external
	.dwendtag $C$DW$137


$C$DW$138	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$138, DW_AT_name("strlen")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external
$C$DW$139	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$138


$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$140, DW_AT_declaration
	.dwattr $C$DW$140, DW_AT_external
	.dwendtag $C$DW$140


$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("prod_getavail")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
	.dwendtag $C$DW$141

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("autoid")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$142, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$142, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("tagwasthere")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$143, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$143, DW_AT_external


$C$DW$144	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$144, DW_AT_name("tagid")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external
$C$DW$145	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$144

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$146	.dwtag  DW_TAG_variable
	.dwattr $C$DW$146, DW_AT_name("rtc")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$146, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$146, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$147, DW_AT_declaration
	.dwattr $C$DW$147, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("tsensor")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$148, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$148, DW_AT_external

$C$DW$149	.dwtag  DW_TAG_variable
	.dwattr $C$DW$149, DW_AT_name("_ctypes_")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("fileOb")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$150, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$150, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("Fatfs")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$151, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("conf_data")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$152, DW_AT_declaration
	.dwattr $C$DW$152, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\307402 C:\\Users\\ebenton\\AppData\\Local\\Temp\\307404 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\3074012 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$153	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$153, DW_AT_name("update_units")
	.dwattr $C$DW$153, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$153, DW_AT_high_pc(0x00)
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$153, DW_AT_external
	.dwattr $C$DW$153, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$153, DW_AT_TI_begin_line(0x17cb)
	.dwattr $C$DW$153, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$153, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6091,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$154	.dwtag  DW_TAG_variable
	.dwattr $C$DW$154, DW_AT_name("buff")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6091 | void update_units(void) {                                              
; 6093 | int l;                                                                 
; 6094 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6096,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6096 | lcd_clear();                                                           
; 6097 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6096| 
        ; call occurs [#_lcd_clear] ; [] |6096| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6098,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6098 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6098| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6098| 
        ADDL      XAR4,ACC              ; [CPU_] |6098| 
        MOV       AL,AR1                ; [CPU_] |6098| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6098| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6098| 
        ; call occurs [#_lcd_puts] ; [] |6098| 
	.dwpsn	file "../Source/prod.c",line 6099,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6099 | switch (conf_data.vfd[l].what) {                                       
; 6100 | case VFD_LOAD:                                                         
; 6101 | case VFD_PEAK:                                                         
; 6102 | case VFD_VALL:                                                         
; 6103 | case VFD_POSI:                                                         
; 6104 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6099| 
        CMPB      AL,#4                 ; [CPU_] |6099| 
        B         $C$L2,LOS             ; [CPU_] |6099| 
        ; branchcc occurs ; [] |6099| 
        CMPB      AL,#5                 ; [CPU_] |6099| 
        B         $C$L8,EQ              ; [CPU_] |6099| 
        ; branchcc occurs ; [] |6099| 
        CMPB      AL,#6                 ; [CPU_] |6099| 
        B         $C$L7,EQ              ; [CPU_] |6099| 
        ; branchcc occurs ; [] |6099| 
        B         $C$L10,UNC            ; [CPU_] |6099| 
        ; branch occurs ; [] |6099| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6105,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6105 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6105| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6105| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6105| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6105| 
        ADDB      AL,#1                 ; [CPU_] |6105| 
        MOVL      XAR4,XAR3             ; [CPU_] |6105| 
        MOV       *-SP[3],AL            ; [CPU_] |6105| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_sprintf")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6105| 
        ; call occurs [#_sprintf] ; [] |6105| 
	.dwpsn	file "../Source/prod.c",line 6106,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6106 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6106| 
        ADD       AL,AR1                ; [CPU_] |6106| 
        MOVL      XAR4,XAR3             ; [CPU_] |6106| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6106| 
        ; call occurs [#_lcd_puts] ; [] |6106| 
	.dwpsn	file "../Source/prod.c",line 6107,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6107 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6107| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6107| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6107| 
        B         $C$L3,EQ              ; [CPU_] |6107| 
        ; branchcc occurs ; [] |6107| 
	.dwpsn	file "../Source/prod.c",line 6108,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6108 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6108| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6108| 
        ADD       AL,AR1                ; [CPU_] |6108| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$159, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6108| 
        ; call occurs [#_lcd_puts] ; [] |6108| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6111,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6111 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6112 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6111| 
        CMPB      AL,#3                 ; [CPU_] |6111| 
        B         $C$L6,EQ              ; [CPU_] |6111| 
        ; branchcc occurs ; [] |6111| 
	.dwpsn	file "../Source/prod.c",line 6113,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6113 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6114 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6115 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6113| 
        CMPB      AL,#4                 ; [CPU_] |6113| 
        B         $C$L5,EQ              ; [CPU_] |6113| 
        ; branchcc occurs ; [] |6113| 
	.dwpsn	file "../Source/prod.c",line 6116,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6116 | lcd_puts(                                                              
; 6117 |                 (char*) UNITS[0x0f                                     
; 6118 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6119 |                 18 + 20 * l);                                          
; 6121 | break;                                                                 
; 6122 | case VFD_LIMIT:                                                        
; 6123 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6124 | lcd_puts(buff, 5 + 20 * l);                                            
; 6125 | break;                                                                 
; 6126 | case VFD_TEMP:                                                         
; 6127 | #if(VFD==1)                                                            
; 6128 | buff[0] = 0xb0;                                                        
; 6129 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6116| 
        MOV       T,#10                 ; [CPU_] |6116| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6116| 
        ADDL      ACC,XAR6              ; [CPU_] |6116| 
        MOVL      XAR4,ACC              ; [CPU_] |6116| 
        MOVB      XAR0,#42              ; [CPU_] |6116| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6116| 
        MPYB      ACC,T,#152            ; [CPU_] |6116| 
        ADDL      ACC,XAR6              ; [CPU_] |6116| 
        MOVL      XAR4,ACC              ; [CPU_] |6116| 
        MOVB      XAR0,#125             ; [CPU_] |6116| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6116| 
        ANDB      AL,#0x0f              ; [CPU_] |6116| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6116| 
        MOV       ACC,AL << 1           ; [CPU_] |6116| 
        ADDL      XAR4,ACC              ; [CPU_] |6116| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6116| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6116| 
        B         $C$L9,UNC             ; [CPU_] |6116| 
        ; branch occurs ; [] |6116| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6114,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6114| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6114| 
	.dwpsn	file "../Source/prod.c",line 6115,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6115| 
        ; branch occurs ; [] |6115| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6112,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6112| 
	.dwpsn	file "../Source/prod.c",line 6113,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6113| 
        ; branch occurs ; [] |6113| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6130,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6130 | buff[0] = 0xdf;                                                        
; 6131 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6130| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6130| 
	.dwpsn	file "../Source/prod.c",line 6132,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6132 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6132| 
	.dwpsn	file "../Source/prod.c",line 6133,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6133 | buff[2] = '\0';                                                        
; 6134 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6133| 
	.dwpsn	file "../Source/prod.c",line 6135,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6135 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6135| 
        ; branch occurs ; [] |6135| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6123,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6123| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6123| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6123| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6123| 
        ADDB      AL,#1                 ; [CPU_] |6123| 
        MOVL      XAR4,XAR3             ; [CPU_] |6123| 
        MOV       *-SP[3],AL            ; [CPU_] |6123| 
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("_sprintf")
	.dwattr $C$DW$160, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6123| 
        ; call occurs [#_sprintf] ; [] |6123| 
	.dwpsn	file "../Source/prod.c",line 6124,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6124| 
        MOVL      XAR4,XAR3             ; [CPU_] |6124| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6124| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$161, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6124| 
        ; call occurs [#_lcd_puts] ; [] |6124| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6097,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6097| 
        SUBB      XAR6,#1               ; [CPU_U] |6097| 
        MOVZ      AR0,AR6               ; [CPU_] |6097| 
        ADDB      XAR2,#3               ; [CPU_] |6097| 
        ADDB      XAR1,#20              ; [CPU_] |6097| 
        MOV       *-SP[4],AR6           ; [CPU_] |6097| 
        CMP       AR0,#-1               ; [CPU_] |6097| 
        B         $C$L1,NEQ             ; [CPU_] |6097| 
        ; branchcc occurs ; [] |6097| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$153, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$153, DW_AT_TI_end_line(0x17fa)
	.dwattr $C$DW$153, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$153

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$163	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$163, DW_AT_name("print_vfd")
	.dwattr $C$DW$163, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$163, DW_AT_high_pc(0x00)
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$163, DW_AT_external
	.dwattr $C$DW$163, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$163, DW_AT_TI_begin_line(0x1756)
	.dwattr $C$DW$163, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$163, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5974,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("buff")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5974 | void print_vfd(void) {                                                 
; 5975 | int l;                                                                 
; 5976 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$165	.dwtag  DW_TAG_variable
	.dwattr $C$DW$165, DW_AT_name("l")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5978,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5978 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5978| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5978| 
        ; call occurs [#_scia_puts] ; [] |5978| 
	.dwpsn	file "../Source/prod.c",line 5979,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5979| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5980,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5980 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5980| 
        MOVB      AL,#1                 ; [CPU_] |5980| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5980| 
        ADD       AL,AR1                ; [CPU_] |5980| 
        MOV       *-SP[3],AL            ; [CPU_] |5980| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5980| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5980| 
        ADDL      XAR4,ACC              ; [CPU_] |5980| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5980| 
        MOVL      XAR4,XAR3             ; [CPU_] |5980| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5980| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_sprintf")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5980| 
        ; call occurs [#_sprintf] ; [] |5980| 
	.dwpsn	file "../Source/prod.c",line 5981,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5981 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5981| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5981| 
        ; call occurs [#_scia_puts] ; [] |5981| 
	.dwpsn	file "../Source/prod.c",line 5983,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5983 | switch (conf_data.vfd[l].what) {                                       
; 5984 | case VFD_LOAD:                                                         
; 5985 | case VFD_PEAK:                                                         
; 5986 | case VFD_VALL:                                                         
; 5987 | case VFD_POSI:                                                         
; 5988 | case VFD_VELO:                                                         
; 5989 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5990 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5991 |         scia_puts(buff);                                               
; 5992 |         break;                                                         
; 5993 | case VFD_LIMIT:                                                        
; 5994 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5995 |         scia_puts(buff);                                               
; 5996 |         break;                                                         
; 5997 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5983| 
        CMPB      AL,#4                 ; [CPU_] |5983| 
        B         $C$L13,LOS            ; [CPU_] |5983| 
        ; branchcc occurs ; [] |5983| 
        CMPB      AL,#5                 ; [CPU_] |5983| 
        B         $C$L12,EQ             ; [CPU_] |5983| 
        ; branchcc occurs ; [] |5983| 
        CMPB      AL,#6                 ; [CPU_] |5983| 
        B         $C$L16,NEQ            ; [CPU_] |5983| 
        ; branchcc occurs ; [] |5983| 
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5998 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5998| 
	.dwpsn	file "../Source/prod.c",line 5999,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5999 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5999| 
        ; branch occurs ; [] |5999| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5994,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5994| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5994| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5994| 
        ADDB      AL,#1                 ; [CPU_] |5994| 
        MOV       *-SP[3],AL            ; [CPU_] |5994| 
	.dwpsn	file "../Source/prod.c",line 5996,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5996| 
        ; branch occurs ; [] |5996| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5989,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5989| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5989| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5989| 
        ADDB      AL,#1                 ; [CPU_] |5989| 
        MOV       *-SP[3],AL            ; [CPU_] |5989| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5989| 
        MOV       *-SP[4],AL            ; [CPU_] |5989| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5989| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_sprintf")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5989| 
        ; call occurs [#_sprintf] ; [] |5989| 
	.dwpsn	file "../Source/prod.c",line 5991,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5991| 
$C$L15:    
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5991| 
        ; call occurs [#_scia_puts] ; [] |5991| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 6001,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6001 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6001| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6001| 
        ; call occurs [#_scia_puts] ; [] |6001| 
	.dwpsn	file "../Source/prod.c",line 5979,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5979| 
        ADDB      XAR2,#3               ; [CPU_] |5979| 
        MOV       AL,AR1                ; [CPU_] |5979| 
        CMPB      AL,#4                 ; [CPU_] |5979| 
        B         $C$L11,LT             ; [CPU_] |5979| 
        ; branchcc occurs ; [] |5979| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$163, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$163, DW_AT_TI_end_line(0x1773)
	.dwattr $C$DW$163, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$163

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$173	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$173, DW_AT_name("print_sensor")
	.dwattr $C$DW$173, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$173, DW_AT_high_pc(0x00)
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$173, DW_AT_external
	.dwattr $C$DW$173, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$173, DW_AT_TI_begin_line(0x16ff)
	.dwattr $C$DW$173, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$173, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5887,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("buff")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$175	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$175, DW_AT_name("ss")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$176	.dwtag  DW_TAG_variable
	.dwattr $C$DW$176, DW_AT_name("ss")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("j")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_reg0]

$C$DW$178	.dwtag  DW_TAG_variable
	.dwattr $C$DW$178, DW_AT_name("j")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_breg20 -7]

$C$DW$179	.dwtag  DW_TAG_variable
	.dwattr $C$DW$179, DW_AT_name("j")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_breg20 -7]

$C$DW$180	.dwtag  DW_TAG_variable
	.dwattr $C$DW$180, DW_AT_name("j")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_breg20 -7]

$C$DW$181	.dwtag  DW_TAG_variable
	.dwattr $C$DW$181, DW_AT_name("j")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5887 | void print_sensor(int ss) {                                            
; 5888 | int j;                                                                 
; 5889 | static char buff[100];                                                 
; 5891 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5887| 
	.dwpsn	file "../Source/prod.c",line 5892,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5892 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5893 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5894 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5892| 
        MPYB      P,T,#152              ; [CPU_] |5892| 
        MOVL      ACC,XAR3              ; [CPU_] |5892| 
        ADDL      ACC,P                 ; [CPU_] |5892| 
        MOVL      XAR2,ACC              ; [CPU_] |5892| 
        MOVB      XAR0,#118             ; [CPU_] |5892| 
        MOVL      *-SP[12],P            ; [CPU_] |5892| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5892| 
        B         $C$L28,EQ             ; [CPU_] |5892| 
        ; branchcc occurs ; [] |5892| 
	.dwpsn	file "../Source/prod.c",line 5895,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5895 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5895| 
        MOVL      ACC,XAR2              ; [CPU_] |5895| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5895| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5895| 
        ADDB      ACC,#82               ; [CPU_] |5895| 
        MOVL      XAR4,XAR1             ; [CPU_] |5895| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5895| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_sprintf")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5895| 
        ; call occurs [#_sprintf] ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5896,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5896| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5896| 
        ; call occurs [#_scia_puts] ; [] |5896| 
	.dwpsn	file "../Source/prod.c",line 5897,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5897 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5897| 
        MOVL      ACC,XAR2              ; [CPU_] |5897| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5897| 
        ADDB      ACC,#98               ; [CPU_] |5897| 
        MOVL      XAR4,XAR1             ; [CPU_] |5897| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5897| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_sprintf")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5897| 
        ; call occurs [#_sprintf] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5898,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5898 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5898| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5898| 
        ; call occurs [#_scia_puts] ; [] |5898| 
	.dwpsn	file "../Source/prod.c",line 5899,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5899 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5900 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5899| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5899| 
        MOVL      XAR4,XAR2             ; [CPU_] |5899| 
        ADDB      XAR4,#114             ; [CPU_] |5899| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5899| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5899| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5899| 
        MOVL      XAR4,XAR1             ; [CPU_] |5899| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5899| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_sprintf")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5899| 
        ; call occurs [#_sprintf] ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5901,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5901 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5901| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5901| 
        ; call occurs [#_scia_puts] ; [] |5901| 
	.dwpsn	file "../Source/prod.c",line 5902,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5902 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5903 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5902| 
        MOVB      XAR0,#118             ; [CPU_] |5902| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5902| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5902| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5902| 
        ADDL      XAR4,ACC              ; [CPU_] |5902| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5902| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5902| 
        MOVL      XAR4,XAR1             ; [CPU_] |5902| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5902| 
        ; call occurs [#_sprintf] ; [] |5902| 
	.dwpsn	file "../Source/prod.c",line 5904,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5904 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5904| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5904| 
        ; call occurs [#_scia_puts] ; [] |5904| 
	.dwpsn	file "../Source/prod.c",line 5905,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5905 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5906 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5905| 
        MOVB      XAR0,#124             ; [CPU_] |5905| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5905| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5905| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5905| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5905| 
        ANDB      AL,#0x0f              ; [CPU_] |5905| 
        MOV       ACC,AL << 1           ; [CPU_] |5905| 
        ADDL      XAR4,ACC              ; [CPU_] |5905| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5905| 
        MOVL      XAR4,XAR1             ; [CPU_] |5905| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5905| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5905| 
        ; call occurs [#_sprintf] ; [] |5905| 
	.dwpsn	file "../Source/prod.c",line 5907,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5907| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5907| 
        ; call occurs [#_scia_puts] ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5908,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5908 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5909 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5908| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5908| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5908| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5908| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5908| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5908| 
        MOV       ACC,AL << 1           ; [CPU_] |5908| 
        ADDL      ACC,XAR6              ; [CPU_] |5908| 
        MOVL      XAR4,ACC              ; [CPU_] |5908| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5908| 
        MOVL      XAR4,XAR1             ; [CPU_] |5908| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5908| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5908| 
        ; call occurs [#_sprintf] ; [] |5908| 
	.dwpsn	file "../Source/prod.c",line 5910,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5910 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5910| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5910| 
        ; call occurs [#_scia_puts] ; [] |5910| 
	.dwpsn	file "../Source/prod.c",line 5911,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5911 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5912 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5911| 
        MOVB      XAR0,#126             ; [CPU_] |5911| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5911| 
        MOVL      XAR4,XAR1             ; [CPU_] |5911| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5911| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5911| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5911| 
        ; call occurs [#_sprintf] ; [] |5911| 
	.dwpsn	file "../Source/prod.c",line 5913,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5913 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5913| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5913| 
        ; call occurs [#_scia_puts] ; [] |5913| 
	.dwpsn	file "../Source/prod.c",line 5914,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5914 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5915 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5914| 
        MOVB      XAR0,#122             ; [CPU_] |5914| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5914| 
        MOVL      XAR4,XAR1             ; [CPU_] |5914| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5914| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5914| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5914| 
        ; call occurs [#_sprintf] ; [] |5914| 
	.dwpsn	file "../Source/prod.c",line 5916,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5916 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5916| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5916| 
        ; call occurs [#_scia_puts] ; [] |5916| 
	.dwpsn	file "../Source/prod.c",line 5917,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5917 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5918 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5917| 
        MOVB      XAR0,#222             ; [CPU_] |5917| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5917| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5917| 
        MOVL      XAR4,XAR1             ; [CPU_] |5917| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5917| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5917| 
        ; call occurs [#_sprintf] ; [] |5917| 
	.dwpsn	file "../Source/prod.c",line 5919,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5919 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5919| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5919| 
        ; call occurs [#_scia_puts] ; [] |5919| 
	.dwpsn	file "../Source/prod.c",line 5920,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5920 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5921 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5920| 
        MOVB      XAR0,#224             ; [CPU_] |5920| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5920| 
        MOVL      XAR4,XAR1             ; [CPU_] |5920| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5920| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5920| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5920| 
        ; call occurs [#_sprintf] ; [] |5920| 
	.dwpsn	file "../Source/prod.c",line 5922,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5922 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5922| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5922| 
        ; call occurs [#_scia_puts] ; [] |5922| 
	.dwpsn	file "../Source/prod.c",line 5923,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5923 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5924 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5923| 
        MOVB      XAR0,#228             ; [CPU_] |5923| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5923| 
        MOVL      XAR4,XAR1             ; [CPU_] |5923| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5923| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5923| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5923| 
        ; call occurs [#_sprintf] ; [] |5923| 
	.dwpsn	file "../Source/prod.c",line 5925,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5925 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5925| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5925| 
        ; call occurs [#_scia_puts] ; [] |5925| 
	.dwpsn	file "../Source/prod.c",line 5926,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5926 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5927 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5926| 
        MOVB      XAR0,#230             ; [CPU_] |5926| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5926| 
        MOVL      XAR4,XAR1             ; [CPU_] |5926| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5926| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5926| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5926| 
        ; call occurs [#_sprintf] ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5928,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5928| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5928| 
        ; call occurs [#_scia_puts] ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5930,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5930 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5931 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5932 |                         conf_data.sensor[ss].points);                  
; 5933 |         scia_puts(buff);                                               
; 5935 |         scia_puts("  Point:");                                         
; 5936 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5937 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5938 |                 scia_puts(buff);                                       
; 5940 |         scia_puts("\r\n  Mass: ");                                     
; 5941 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5942 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5943 |                 scia_puts(buff);                                       
; 5945 |         scia_puts("\r\n  Count:");                                     
; 5946 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5947 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5948 |                 scia_puts(buff);                                       
; 5950 |         scia_puts("\r\n  Slope:    ");                                 
; 5951 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5952 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5953 |                 scia_puts(buff);                                       
; 5955 |         scia_puts("\r\n  Intercept:");                                 
; 5956 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5957 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5958 |                 scia_puts(buff);                                       
; 5960 |         scia_puts("\r\n");                                             
; 5961 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5930| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5930| 
        CMPB      AL,#2                 ; [CPU_] |5930| 
        B         $C$L17,EQ             ; [CPU_] |5930| 
        ; branchcc occurs ; [] |5930| 
	.dwpsn	file "../Source/prod.c",line 5962,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5962 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5963 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5962| 
        MOVB      XAR0,#178             ; [CPU_] |5962| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5962| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5962| 
        MOVL      XAR4,XAR1             ; [CPU_] |5962| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5962| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5962| 
        ; call occurs [#_sprintf] ; [] |5962| 
	.dwpsn	file "../Source/prod.c",line 5964,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5964 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5964| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5964| 
        ; call occurs [#_scia_puts] ; [] |5964| 
	.dwpsn	file "../Source/prod.c",line 5965,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5966 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5965| 
        MOVB      XAR0,#200             ; [CPU_] |5965| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5965| 
        MOVL      XAR4,XAR1             ; [CPU_] |5965| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5965| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5965| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_sprintf")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5965| 
        ; call occurs [#_sprintf] ; [] |5965| 
	.dwpsn	file "../Source/prod.c",line 5967,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5967 | scia_puts(buff);                                                       
; 5970 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5967| 
        B         $C$L29,UNC            ; [CPU_] |5967| 
        ; branch occurs ; [] |5967| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5931,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5931| 
        MOVB      XAR0,#128             ; [CPU_] |5931| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5931| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5931| 
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
        MOV       *-SP[3],AL            ; [CPU_] |5931| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_sprintf")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5931| 
        ; call occurs [#_sprintf] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5933,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5933| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5933| 
        ; call occurs [#_scia_puts] ; [] |5933| 
	.dwpsn	file "../Source/prod.c",line 5935,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5935| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5935| 
        ; call occurs [#_scia_puts] ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5936,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5936| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5936,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5936| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5936| 
        B         $C$L27,LT             ; [CPU_] |5936| 
        ; branchcc occurs ; [] |5936| 
	.dwpsn	file "../Source/prod.c",line 5940,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5940| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5940| 
        ; call occurs [#_scia_puts] ; [] |5940| 
	.dwpsn	file "../Source/prod.c",line 5941,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5941| 
        MOV       *-SP[7],AL            ; [CPU_] |5941| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5941,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5941| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5941| 
        B         $C$L26,LT             ; [CPU_] |5941| 
        ; branchcc occurs ; [] |5941| 
	.dwpsn	file "../Source/prod.c",line 5945,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5945| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5945| 
        ; call occurs [#_scia_puts] ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5946,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5946| 
        MOV       *-SP[7],AL            ; [CPU_] |5946| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5946,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5946| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5946| 
        B         $C$L25,LT             ; [CPU_] |5946| 
        ; branchcc occurs ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5950,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5950| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5950| 
        ; call occurs [#_scia_puts] ; [] |5950| 
	.dwpsn	file "../Source/prod.c",line 5951,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5951| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5951,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5951| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5951| 
        ADDB      AL,#-1                ; [CPU_] |5951| 
        CMP       AL,*-SP[7]            ; [CPU_] |5951| 
        B         $C$L24,GT             ; [CPU_] |5951| 
        ; branchcc occurs ; [] |5951| 
	.dwpsn	file "../Source/prod.c",line 5955,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5955| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5955| 
        ; call occurs [#_scia_puts] ; [] |5955| 
	.dwpsn	file "../Source/prod.c",line 5956,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5956| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5956,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5956| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5956| 
        ADDB      AL,#-1                ; [CPU_] |5956| 
        CMP       AL,*-SP[7]            ; [CPU_] |5956| 
        B         $C$L23,GT             ; [CPU_] |5956| 
        ; branchcc occurs ; [] |5956| 
	.dwpsn	file "../Source/prod.c",line 5960,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5960| 
	.dwpsn	file "../Source/prod.c",line 5961,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5961| 
        ; branch occurs ; [] |5961| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5957,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5957| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5957| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5957| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5957| 
        MOV       ACC,AL << 1           ; [CPU_] |5957| 
        ADDL      ACC,XAR6              ; [CPU_] |5957| 
        ADDL      ACC,XAR3              ; [CPU_] |5957| 
        MOVL      XAR4,ACC              ; [CPU_] |5957| 
        MOVB      XAR0,#200             ; [CPU_] |5957| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5957| 
        MOVL      XAR4,XAR1             ; [CPU_] |5957| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5957| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5957| 
        ; call occurs [#_sprintf] ; [] |5957| 
	.dwpsn	file "../Source/prod.c",line 5958,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5958| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5958| 
        ; call occurs [#_scia_puts] ; [] |5958| 
	.dwpsn	file "../Source/prod.c",line 5956,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5956| 
        B         $C$L22,UNC            ; [CPU_] |5956| 
        ; branch occurs ; [] |5956| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5952,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5952| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5952| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5952| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5952| 
        MOV       ACC,AL << 1           ; [CPU_] |5952| 
        ADDL      ACC,XAR6              ; [CPU_] |5952| 
        ADDL      ACC,XAR3              ; [CPU_] |5952| 
        MOVL      XAR4,ACC              ; [CPU_] |5952| 
        MOVB      XAR0,#178             ; [CPU_] |5952| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5952| 
        MOVL      XAR4,XAR1             ; [CPU_] |5952| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5952| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_sprintf")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5952| 
        ; call occurs [#_sprintf] ; [] |5952| 
	.dwpsn	file "../Source/prod.c",line 5953,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5953| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5953| 
        ; call occurs [#_scia_puts] ; [] |5953| 
	.dwpsn	file "../Source/prod.c",line 5951,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5951| 
        B         $C$L21,UNC            ; [CPU_] |5951| 
        ; branch occurs ; [] |5951| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5947,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5947| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5947| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5947| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5947| 
        ADDL      ACC,XAR6              ; [CPU_] |5947| 
        ADDL      ACC,XAR3              ; [CPU_] |5947| 
        MOVL      XAR4,ACC              ; [CPU_] |5947| 
        MOVB      XAR0,#154             ; [CPU_] |5947| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5947| 
        MOVL      XAR4,XAR1             ; [CPU_] |5947| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5947| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5947| 
        ; call occurs [#_sprintf] ; [] |5947| 
	.dwpsn	file "../Source/prod.c",line 5948,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5948| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5948| 
        ; call occurs [#_scia_puts] ; [] |5948| 
	.dwpsn	file "../Source/prod.c",line 5946,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5946| 
	.dwpsn	file "../Source/prod.c",line 5948,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5948| 
	.dwpsn	file "../Source/prod.c",line 5946,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5946| 
        ; branch occurs ; [] |5946| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5942,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5942| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5942| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5942| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5942| 
        ADDL      ACC,XAR6              ; [CPU_] |5942| 
        ADDL      ACC,XAR3              ; [CPU_] |5942| 
        MOVL      XAR4,ACC              ; [CPU_] |5942| 
        MOVB      XAR0,#130             ; [CPU_] |5942| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5942| 
        MOVL      XAR4,XAR1             ; [CPU_] |5942| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5942| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_sprintf")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5942| 
        ; call occurs [#_sprintf] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5943,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5943| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5941,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5941| 
	.dwpsn	file "../Source/prod.c",line 5943,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5943| 
	.dwpsn	file "../Source/prod.c",line 5941,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5941| 
        ; branch occurs ; [] |5941| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5937,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5937| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5937| 
        ADD       AH,AL                 ; [CPU_] |5937| 
        MOV       *-SP[7],AH            ; [CPU_] |5937| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5937| 
        MOVL      XAR4,XAR1             ; [CPU_] |5937| 
        MOV       *-SP[3],AH            ; [CPU_] |5937| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_sprintf")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5937| 
        ; call occurs [#_sprintf] ; [] |5937| 
	.dwpsn	file "../Source/prod.c",line 5938,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5938| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5938| 
        ; call occurs [#_scia_puts] ; [] |5938| 
        MOV       AL,*-SP[7]            ; [CPU_] |5938| 
	.dwpsn	file "../Source/prod.c",line 5936,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5936| 
        ; branch occurs ; [] |5936| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5893,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5893| 
$C$L29:    
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_scia_puts")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5893| 
        ; call occurs [#_scia_puts] ; [] |5893| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$173, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$173, DW_AT_TI_end_line(0x1753)
	.dwattr $C$DW$173, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$173

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$228	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$228, DW_AT_name("print_limits")
	.dwattr $C$DW$228, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$228, DW_AT_high_pc(0x00)
	.dwattr $C$DW$228, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$228, DW_AT_external
	.dwattr $C$DW$228, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$228, DW_AT_TI_begin_line(0x179a)
	.dwattr $C$DW$228, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$228, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6042,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$229	.dwtag  DW_TAG_variable
	.dwattr $C$DW$229, DW_AT_name("buff")
	.dwattr $C$DW$229, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$229, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$229, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6042 | void print_limits(void) {                                              
; 6043 | int ii;                                                                
; 6044 | static char buff[64];                                                  
; 6045 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$230	.dwtag  DW_TAG_variable
	.dwattr $C$DW$230, DW_AT_name("ii")
	.dwattr $C$DW$230, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$230, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$230, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$231	.dwtag  DW_TAG_variable
	.dwattr $C$DW$231, DW_AT_name("up")
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$231, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$231, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6047,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6047 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6047| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6047| 
        ; call occurs [#_scia_puts] ; [] |6047| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6049,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6049 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6049| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6050,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6050 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6050| 
        MOVB      AL,#1                 ; [CPU_] |6050| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6050| 
        ADD       AL,*-SP[9]            ; [CPU_] |6050| 
        MOVL      XAR4,XAR2             ; [CPU_] |6050| 
        MOV       *-SP[3],AL            ; [CPU_] |6050| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_sprintf")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6050| 
        ; call occurs [#_sprintf] ; [] |6050| 
	.dwpsn	file "../Source/prod.c",line 6051,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6051 | scia_puts(buff);                                                       
; 6053 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6051| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6051| 
        ; call occurs [#_scia_puts] ; [] |6051| 
	.dwpsn	file "../Source/prod.c",line 6055,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6055 | switch (conf_data.lim[ii].what) {                                      
; 6056 | case VFD_LOAD:                                                         
; 6057 | case VFD_PEAK:                                                         
; 6058 | case VFD_VALL:                                                         
; 6059 |         up =                                                           
; 6060 |                         UNITS[0x0f                                     
; 6061 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6062 |         break;                                                         
; 6063 | case VFD_POSI:                                                         
; 6064 |         up = POS_U;                                                    
; 6065 |         break;                                                         
; 6066 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6055| 
        B         $C$L40,NTC            ; [CPU_] |6055| 
        ; branchcc occurs ; [] |6055| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6055| 
        CMPB      AL,#2                 ; [CPU_] |6055| 
        B         $C$L32,LOS            ; [CPU_] |6055| 
        ; branchcc occurs ; [] |6055| 
        CMPB      AL,#3                 ; [CPU_] |6055| 
        B         $C$L31,EQ             ; [CPU_] |6055| 
        ; branchcc occurs ; [] |6055| 
        CMPB      AL,#4                 ; [CPU_] |6055| 
        B         $C$L33,NEQ            ; [CPU_] |6055| 
        ; branchcc occurs ; [] |6055| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6067,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6067 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6067| 
	.dwpsn	file "../Source/prod.c",line 6068,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6068 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6068| 
        ; branch occurs ; [] |6068| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6064,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6064| 
	.dwpsn	file "../Source/prod.c",line 6065,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6065| 
        ; branch occurs ; [] |6065| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6059,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6059| 
        MOV       T,#10                 ; [CPU_] |6059| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6059| 
        ADDL      ACC,XAR6              ; [CPU_] |6059| 
        MOVL      XAR4,ACC              ; [CPU_] |6059| 
        MOVB      XAR0,#42              ; [CPU_] |6059| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6059| 
        MPYB      ACC,T,#152            ; [CPU_] |6059| 
        ADDL      ACC,XAR6              ; [CPU_] |6059| 
        MOVL      XAR4,ACC              ; [CPU_] |6059| 
        MOVB      XAR0,#125             ; [CPU_] |6059| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6059| 
        ANDB      AL,#0x0f              ; [CPU_] |6059| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6059| 
        MOV       ACC,AL << 1           ; [CPU_] |6059| 
        ADDL      XAR4,ACC              ; [CPU_] |6059| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6059| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6071,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6071 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6072 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6071| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6071| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6071| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6071| 
        ADDL      XAR4,ACC              ; [CPU_] |6071| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6071| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6071| 
        MOVL      XAR4,XAR2             ; [CPU_] |6071| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6071| 
        ADDB      AL,#1                 ; [CPU_] |6071| 
        MOV       *-SP[5],AL            ; [CPU_] |6071| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6071| 
        ; call occurs [#_sprintf] ; [] |6071| 
	.dwpsn	file "../Source/prod.c",line 6073,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6073 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6073| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6073| 
        ; call occurs [#_scia_puts] ; [] |6073| 
	.dwpsn	file "../Source/prod.c",line 6074,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6074 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6075 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6076 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6077 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6074| 
        B         $C$L34,TC             ; [CPU_] |6074| 
        ; branchcc occurs ; [] |6074| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6074| 
        B         $C$L35,UNC            ; [CPU_] |6074| 
        ; branch occurs ; [] |6074| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6074| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6074| 
        B         $C$L36,TC             ; [CPU_] |6074| 
        ; branchcc occurs ; [] |6074| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6074| 
        B         $C$L37,UNC            ; [CPU_] |6074| 
        ; branch occurs ; [] |6074| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6074| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6074| 
        B         $C$L38,TC             ; [CPU_] |6074| 
        ; branchcc occurs ; [] |6074| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6074| 
        B         $C$L39,UNC            ; [CPU_] |6074| 
        ; branch occurs ; [] |6074| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6074| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6074| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6074| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6074| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6074| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6074| 
        MOVL      XAR4,XAR2             ; [CPU_] |6074| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6074| 
        ; call occurs [#_sprintf] ; [] |6074| 
	.dwpsn	file "../Source/prod.c",line 6078,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6078 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6078| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6078| 
        ; call occurs [#_scia_puts] ; [] |6078| 
	.dwpsn	file "../Source/prod.c",line 6079,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6079 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6080 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6079| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6079| 
        MOVL      XAR4,XAR2             ; [CPU_] |6079| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6079| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6079| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6079| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_sprintf")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6079| 
        ; call occurs [#_sprintf] ; [] |6079| 
	.dwpsn	file "../Source/prod.c",line 6081,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6081 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6081| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6081| 
        ; call occurs [#_scia_puts] ; [] |6081| 
	.dwpsn	file "../Source/prod.c",line 6082,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6082 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6083 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6082| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6082| 
        MOVL      XAR4,XAR2             ; [CPU_] |6082| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6082| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6082| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6082| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_sprintf")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6082| 
        ; call occurs [#_sprintf] ; [] |6082| 
	.dwpsn	file "../Source/prod.c",line 6084,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6084 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6084| 
	.dwpsn	file "../Source/prod.c",line 6085,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6085 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6085| 
        ; branch occurs ; [] |6085| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6086,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6086 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6086| 
$C$L41:    
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6086| 
        ; call occurs [#_scia_puts] ; [] |6086| 
	.dwpsn	file "../Source/prod.c",line 6049,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6049| 
        INC       *-SP[9]               ; [CPU_] |6049| 
        MOV       AL,*-SP[9]            ; [CPU_] |6049| 
        CMPB      AL,#4                 ; [CPU_] |6049| 
        B         $C$L30,LT             ; [CPU_] |6049| 
        ; branchcc occurs ; [] |6049| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$228, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$228, DW_AT_TI_end_line(0x17c9)
	.dwattr $C$DW$228, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$228

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$244	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$244, DW_AT_name("print_dac")
	.dwattr $C$DW$244, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$244, DW_AT_high_pc(0x00)
	.dwattr $C$DW$244, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$244, DW_AT_external
	.dwattr $C$DW$244, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$244, DW_AT_TI_begin_line(0x1776)
	.dwattr $C$DW$244, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$244, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 6006,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$245	.dwtag  DW_TAG_variable
	.dwattr $C$DW$245, DW_AT_name("buff")
	.dwattr $C$DW$245, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$245, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$245, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 6006 | void print_dac(void) {                                                 
; 6007 | int l;                                                                 
; 6008 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$246	.dwtag  DW_TAG_variable
	.dwattr $C$DW$246, DW_AT_name("l")
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$246, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$246, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 6010,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6010 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |6010| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6010| 
        ; call occurs [#_scia_puts] ; [] |6010| 
	.dwpsn	file "../Source/prod.c",line 6012,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6012 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6012| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 6013,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6013 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |6013| 
        MOVB      AL,#1                 ; [CPU_] |6013| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6013| 
        ADD       AL,AR1                ; [CPU_] |6013| 
        MOV       *-SP[3],AL            ; [CPU_] |6013| 
        MOVL      XAR4,XAR3             ; [CPU_] |6013| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_sprintf")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6013| 
        ; call occurs [#_sprintf] ; [] |6013| 
	.dwpsn	file "../Source/prod.c",line 6014,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6014| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_scia_puts")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6014| 
        ; call occurs [#_scia_puts] ; [] |6014| 
	.dwpsn	file "../Source/prod.c",line 6016,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6016 | sprintf(buff,                                                          
; 6017 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 6018 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 6019 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |6016| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6016| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6016| 
        MOVL      XAR4,XAR3             ; [CPU_] |6016| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6016| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6016| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6016| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |6016| 
        MOVL      *-SP[8],ACC           ; [CPU_] |6016| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6016| 
        ; call occurs [#_sprintf] ; [] |6016| 
	.dwpsn	file "../Source/prod.c",line 6020,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6020 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6020| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6020| 
        ; call occurs [#_scia_puts] ; [] |6020| 
	.dwpsn	file "../Source/prod.c",line 6022,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6022 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |6022| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6022| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6022| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6022| 
        ADDL      XAR4,ACC              ; [CPU_] |6022| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6022| 
        MOVL      XAR4,XAR3             ; [CPU_] |6022| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6022| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6022| 
        ; call occurs [#_sprintf] ; [] |6022| 
	.dwpsn	file "../Source/prod.c",line 6023,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6023 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6023| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6023| 
        ; call occurs [#_scia_puts] ; [] |6023| 
	.dwpsn	file "../Source/prod.c",line 6025,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6025| 
        CMPB      AL,#7                 ; [CPU_] |6025| 
        B         $C$L43,EQ             ; [CPU_] |6025| 
        ; branchcc occurs ; [] |6025| 
	.dwpsn	file "../Source/prod.c",line 6026,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6026 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |6026| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6026| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6026| 
        ADDB      AL,#1                 ; [CPU_] |6026| 
        MOVL      XAR4,XAR3             ; [CPU_] |6026| 
        MOV       *-SP[3],AL            ; [CPU_] |6026| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_sprintf")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6026| 
        ; call occurs [#_sprintf] ; [] |6026| 
	.dwpsn	file "../Source/prod.c",line 6027,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6027| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6027| 
        ; call occurs [#_scia_puts] ; [] |6027| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 6030,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6030 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 6031 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 6032 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 6033 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6034 |         scia_puts(buff);                                               
; 6035 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6030| 
        CMPB      AL,#3                 ; [CPU_] |6030| 
        B         $C$L44,EQ             ; [CPU_] |6030| 
        ; branchcc occurs ; [] |6030| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |6030| 
        CMPB      AL,#4                 ; [CPU_] |6030| 
        B         $C$L44,EQ             ; [CPU_] |6030| 
        ; branchcc occurs ; [] |6030| 
	.dwpsn	file "../Source/prod.c",line 6036,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6036 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6036| 
        B         $C$L45,UNC            ; [CPU_] |6036| 
        ; branch occurs ; [] |6036| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 6032,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |6032| 
        MOVB      XAR0,#8               ; [CPU_] |6032| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6032| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6032| 
        MOVB      XAR0,#10              ; [CPU_] |6032| 
        MOVL      XAR4,XAR3             ; [CPU_] |6032| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6032| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6032| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6032| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_sprintf")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6032| 
        ; call occurs [#_sprintf] ; [] |6032| 
	.dwpsn	file "../Source/prod.c",line 6034,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6034| 
$C$L45:    
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_scia_puts")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6034| 
        ; call occurs [#_scia_puts] ; [] |6034| 
	.dwpsn	file "../Source/prod.c",line 6012,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6012| 
        ADDB      XAR2,#12              ; [CPU_] |6012| 
        MOV       AL,AR1                ; [CPU_] |6012| 
        CMPB      AL,#4                 ; [CPU_] |6012| 
        B         $C$L42,LT             ; [CPU_] |6012| 
        ; branchcc occurs ; [] |6012| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$244, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$244, DW_AT_TI_end_line(0x1797)
	.dwattr $C$DW$244, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$244

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$259	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$259, DW_AT_name("print_channel")
	.dwattr $C$DW$259, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$259, DW_AT_high_pc(0x00)
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$259, DW_AT_external
	.dwattr $C$DW$259, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$259, DW_AT_TI_begin_line(0x16e4)
	.dwattr $C$DW$259, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$259, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5860,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$260	.dwtag  DW_TAG_variable
	.dwattr $C$DW$260, DW_AT_name("buff")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$261	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$261, DW_AT_name("ch")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$262	.dwtag  DW_TAG_variable
	.dwattr $C$DW$262, DW_AT_name("ch")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5860 | void print_channel(Uint16 ch) {                                        
; 5861 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5860| 
	.dwpsn	file "../Source/prod.c",line 5863,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5863 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5863| 
        MOVZ      AR1,AR2               ; [CPU_] |5863| 
        MOVB      AH,#1                 ; [CPU_] |5863| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5863| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5863| 
        ADD       AH,AR1                ; [CPU_] |5863| 
        MOVL      XAR4,XAR3             ; [CPU_] |5863| 
        MOV       *-SP[3],AH            ; [CPU_] |5863| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_sprintf")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5863| 
        ; call occurs [#_sprintf] ; [] |5863| 
	.dwpsn	file "../Source/prod.c",line 5864,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5864 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5864| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5864| 
        ; call occurs [#_scia_puts] ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5866,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5866 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5866| 
        MOV       T,AR1                 ; [CPU_] |5866| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5866| 
        MPYU      ACC,T,AL              ; [CPU_] |5866| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5866| 
        ADDL      XAR1,ACC              ; [CPU_] |5866| 
        MOVB      XAR0,#44              ; [CPU_] |5866| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5866| 
        MOVL      XAR4,XAR3             ; [CPU_] |5866| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5866| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5866| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_sprintf")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5866| 
        ; call occurs [#_sprintf] ; [] |5866| 
	.dwpsn	file "../Source/prod.c",line 5867,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5867 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5867| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5867| 
        ; call occurs [#_scia_puts] ; [] |5867| 
	.dwpsn	file "../Source/prod.c",line 5877,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5877 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5877| 
        MOVB      XAR0,#42              ; [CPU_] |5877| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5877| 
        MOVL      XAR4,XAR3             ; [CPU_] |5877| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5877| 
        ADDB      AL,#1                 ; [CPU_] |5877| 
        MOV       *-SP[3],AL            ; [CPU_] |5877| 
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_name("_sprintf")
	.dwattr $C$DW$267, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5877| 
        ; call occurs [#_sprintf] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5878,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5878 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5878| 
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_name("_scia_puts")
	.dwattr $C$DW$268, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5878| 
        ; call occurs [#_scia_puts] ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5880,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5880 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5880| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5880| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5880| 
        B         $C$L46,EQ             ; [CPU_] |5880| 
        ; branchcc occurs ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5881,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5881 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5881| 
$C$DW$269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$269, DW_AT_name("_scia_puts")
	.dwattr $C$DW$269, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5881| 
        ; call occurs [#_scia_puts] ; [] |5881| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$270, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$259, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$259, DW_AT_TI_end_line(0x16fb)
	.dwattr $C$DW$259, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$259

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$271	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$271, DW_AT_name("matchTag")
	.dwattr $C$DW$271, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$271, DW_AT_high_pc(0x00)
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$271, DW_AT_external
	.dwattr $C$DW$271, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$271, DW_AT_TI_begin_line(0x16c0)
	.dwattr $C$DW$271, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$271, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5824,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$272	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$272, DW_AT_name("ch")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5824 | void matchTag(Uint16 ch) {                                             
; 5825 | Uint16 sns;                                                            
; 5826 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$273	.dwtag  DW_TAG_variable
	.dwattr $C$DW$273, DW_AT_name("ch")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$274	.dwtag  DW_TAG_variable
	.dwattr $C$DW$274, DW_AT_name("sns")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$275	.dwtag  DW_TAG_variable
	.dwattr $C$DW$275, DW_AT_name("tag")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5828,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5828 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5828| 
	.dwpsn	file "../Source/prod.c",line 5824,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5824| 
	.dwpsn	file "../Source/prod.c",line 5828,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5828| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5828| 
        MOVL      XAR1,ACC              ; [CPU_] |5828| 
	.dwpsn	file "../Source/prod.c",line 5830,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5830| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5830| 
	.dwpsn	file "../Source/prod.c",line 5828,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5828| 
	.dwpsn	file "../Source/prod.c",line 5830,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5831 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5830| 
        B         $C$L50,EQ             ; [CPU_] |5830| 
        ; branchcc occurs ; [] |5830| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5830| 
        B         $C$L50,HIS            ; [CPU_] |5830| 
        ; branchcc occurs ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5834,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5834 | tag = tagid(ch);                                                       
; 5835 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5836 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("_tagid")
	.dwattr $C$DW$276, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5834| 
        ; call occurs [#_tagid] ; [] |5834| 
        MOVB      XAR6,#0               ; [CPU_] |5834| 
        MOVL      XAR3,ACC              ; [CPU_] |5834| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5834| 
        MOV       *-SP[2],#0            ; [CPU_] |5834| 
        MOV       *-SP[1],#0            ; [CPU_] |5834| 
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$277, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5834| 
        ; call occurs [#ULL$$CMP] ; [] |5834| 
        CMPB      AL,#0                 ; [CPU_] |5834| 
        B         $C$L50,EQ             ; [CPU_] |5834| 
        ; branchcc occurs ; [] |5834| 
        MOVB      ACC,#0                ; [CPU_] |5834| 
        SUBB      ACC,#1                ; [CPU_] |5834| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5834| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5834| 
        MOVL      ACC,XAR3              ; [CPU_] |5834| 
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$278, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5834| 
        ; call occurs [#ULL$$CMP] ; [] |5834| 
        CMPB      AL,#0                 ; [CPU_] |5834| 
        B         $C$L50,EQ             ; [CPU_] |5834| 
        ; branchcc occurs ; [] |5834| 
	.dwpsn	file "../Source/prod.c",line 5837,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5837 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5837| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5837| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5837| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5839,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5841 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5839| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5842,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | continue;                       // not calibrated                      
; 5845 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5842| 
        B         $C$L48,EQ             ; [CPU_] |5842| 
        ; branchcc occurs ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5846,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5846 | continue;                       // doesn't match, skip                 
; 5849 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5846| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5846| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5846| 
        MOVL      ACC,XAR3              ; [CPU_] |5846| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5846| 
$C$DW$279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$279, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$279, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5846| 
        ; call occurs [#ULL$$CMP] ; [] |5846| 
        CMPB      AL,#0                 ; [CPU_] |5846| 
        B         $C$L49,EQ             ; [CPU_] |5846| 
        ; branchcc occurs ; [] |5846| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5839,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5839| 
        MOVL      XAR0,ACC              ; [CPU_] |5839| 
        ADDB      XAR4,#1               ; [CPU_] |5839| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5839| 
        ; branchcc occurs ; [] |5839| 
        B         $C$L50,UNC            ; [CPU_] |5839| 
        ; branch occurs ; [] |5839| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5850,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5850 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5850| 
	.dwpsn	file "../Source/prod.c",line 5851,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5851 | conf_data.ch[ch].ci = sns;                                             
; 5853 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5851| 
        MOV       T,*-SP[5]             ; [CPU_] |5851| 
        MPYU      ACC,T,AL              ; [CPU_] |5851| 
        ADDL      ACC,XAR2              ; [CPU_] |5851| 
        MOVL      XAR5,ACC              ; [CPU_] |5851| 
        MOVB      XAR0,#42              ; [CPU_] |5851| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5851| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$280, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$271, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$271, DW_AT_TI_end_line(0x16e0)
	.dwattr $C$DW$271, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$271

	.sect	".text"
	.clink
	.global	_main

$C$DW$281	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$281, DW_AT_name("main")
	.dwattr $C$DW$281, DW_AT_low_pc(_main)
	.dwattr $C$DW$281, DW_AT_high_pc(0x00)
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$281, DW_AT_external
	.dwattr $C$DW$281, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$281, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$281, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$281, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("buff")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("cmdbuff")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U143
;* AR1   assigned to $O$U330
;* AR1   assigned to $O$U359
;* AR1   assigned to $O$U568
;* AR1   assigned to $O$U696
;* AR1   assigned to $O$U795
;* AR1   assigned to $O$U832
;* AR5   assigned to $O$U848
;* AL    assigned to $O$U1006
;* AR1   assigned to $O$U984
;* AR1   assigned to $O$U1074
;* AR1   assigned to $O$U974
;* AR6   assigned to $O$U1275
;* AR1   assigned to $O$U1301
;* AR7   assigned to $O$U1537
;* XT    assigned to $O$U1564
;* PL    assigned to $O$U1565
;* AR5   assigned to $O$U1589
;* PL    assigned to $O$U1594
;* PL    assigned to $O$U1601
;* AR7   assigned to $O$U1603
;* AR5   assigned to $O$U1604
;* AR5   assigned to $O$U1618
;* XT    assigned to $O$U1660
;* PL    assigned to $O$U1661
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("ccp")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -104]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("tempft")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -12]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("templg")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -14]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("ds_ct")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -47]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_sn")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -49]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_bm")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -50]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("ds_dec")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -51]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("ds_dn")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -52]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("ds_stop")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -53]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("ds_en")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -54]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("bincmdresult")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -47]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("line")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -55]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("daccbm")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -56]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("tempvalue")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -106]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("scale")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -16]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("unsaved")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -48]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("tagch")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -143]

$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("ss")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_breg20 -57]

$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("ch")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_breg20 -58]

$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("version")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U427
;* AR1   assigned to $O$U427
;* AR1   assigned to $O$U427
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR5   assigned to $O$U405
;* AR7   assigned to $O$U405
;* AR1   assigned to $O$U296
;* AR1   assigned to $O$U589
;* AR1   assigned to $O$U589
;* AR1   assigned to $O$U634
;* AR1   assigned to $O$U634
;* AR4   assigned to $O$K823
;* AR4   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR4   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR5   assigned to $O$K823
;* AR5   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$U877
;* AR1   assigned to $O$U877
;* AR1   assigned to $O$U899
;* AR3   assigned to $O$U899
;* AR1   assigned to $O$U899
;* AR6   assigned to $O$U857
;* AL    assigned to $O$U857
;* AR1   assigned to $O$U925
;* AR1   assigned to $O$U925
;* AR1   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR5   assigned to $O$U1005
;* AR5   assigned to $O$U1005
;* AR5   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR4   assigned to $O$U1005
;* AR4   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR1   assigned to $O$K313
;* AR7   assigned to $O$U1140
;* AR7   assigned to $O$U1140
;* AR7   assigned to $O$U1140
;* AR7   assigned to $O$U1140
;* AR4   assigned to $O$U1142
;* AR4   assigned to $O$U1142
;* AR4   assigned to $O$U1142
;* AR4   assigned to $O$U1142
;* AR3   assigned to $O$U1176
;* AR1   assigned to $O$U1176
;* AR1   assigned to $O$U1176
;* AR1   assigned to $O$U1182
;* AR4   assigned to $O$U1194
;* AR4   assigned to $O$U1191
;* AR7   assigned to $O$U1191
;* PL    assigned to $O$U1191
;* AR7   assigned to $O$U1191
;* AR4   assigned to $O$U1191
;* AR5   assigned to $O$U1251
;* AR4   assigned to $O$U1251
;* AR5   assigned to $O$U1330
;* AR5   assigned to $O$U1330
;* AR4   assigned to $O$U1326
;* AR4   assigned to $O$U1326
;* AR5   assigned to $O$U1385
;* AR5   assigned to $O$U1385
;* PL    assigned to $O$U1391
;* AR0   assigned to $O$U1391
;* AR1   assigned to $O$U1392
;* AR7   assigned to $O$U1392
;* AR0   assigned to $O$U1428
;* AR5   assigned to $O$U1428
;* PL    assigned to $O$U1431
;* AR1   assigned to $O$U1431
;* AR1   assigned to $O$U1432
;* AR7   assigned to $O$U1432
;* AR5   assigned to $O$U1470
;* AR5   assigned to $O$U1470
;* AR0   assigned to $O$U1505
;* AR5   assigned to $O$U1505
;* AR4   assigned to $O$U1540
;* AR1   assigned to $O$U1540
;* AR5   assigned to $O$U1540
;* AR5   assigned to $O$U1540
;* AR4   assigned to $O$U1629
;* AR5   assigned to $O$U1629
;* AR4   assigned to $O$U1629
;* AR5   assigned to $O$U1638
;* AR3   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("intp")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("intp")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("tempint")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("tempint")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("temp16")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg10]

$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("temp16")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_breg20 -59]

$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("temp32")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("temp32")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("cmethod")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg6]

$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("cmethod")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("flash_ret")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("flash_ret")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("flash_ret")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("flash_ret")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("slen")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("slen")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("slen")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("slen")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("slen")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("pt")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg0]

$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_breg20 -59]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("pt")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("pt")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg12]

$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("pt")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("pt")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("wtp")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("wtp")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("wtp")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("wtp")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg12]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("cmdlen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg0]

$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_breg20 -47]

$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("cmdlen")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("cmdlen")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("cmdlen")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("cmdlen")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_reg0]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("k")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -59]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -60]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -60]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_reg16]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -59]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("k")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg2]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("k")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("k")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("k")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg10]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -47]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -47]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_reg6]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -47]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -47]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -47]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -47]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -60]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -60]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -47]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -59]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -61]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -48]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -48]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -48]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -48]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("j")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -48]

$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("j")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_breg20 -48]

$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("j")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_breg20 -47]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("j")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg0]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg18]

$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg0]

$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_breg20 -47]

$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_breg20 -47]

$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_reg16]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("i")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("i")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_reg16]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("volt")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -24]

$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("dsum")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$354)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_breg20 -32]

$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("dacc")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_breg20 -35]

$C$DW$474	.dwtag  DW_TAG_variable
	.dwattr $C$DW$474, DW_AT_name("sampcnt")
	.dwattr $C$DW$474, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$474, DW_AT_type(*$C$DW$T$335)
	.dwattr $C$DW$474, DW_AT_location[DW_OP_breg20 -38]

$C$DW$475	.dwtag  DW_TAG_variable
	.dwattr $C$DW$475, DW_AT_name("data")
	.dwattr $C$DW$475, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$475, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$475, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_sys_init")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_delay_us")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_gpio_init")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_extio_init")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_InitECan")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_configCAN")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_memcpy")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_memcpy")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_flash_init")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_led_init")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_lcd_init")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_ssr_set")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_ssr_set")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_ssr_set")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_ssr_set")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_conf_read")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_conf_default")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_conf_write")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_delay_us")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_sprintf")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_sprintf")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_led_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_delay_us")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_led_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_conf_write")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_led_set")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_led_set")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_led_set")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_led_set")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_sprintf")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_led_set")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_sprintf")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_led_set")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_led_set")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_sprintf")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_init")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[47]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_puts")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_delay_us")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_puts")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_delay_us")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[47]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_puts")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_delay_us")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_scia_puts")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_delay_us")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_puts")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_delay_us")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_scia_puts")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_delay_us")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_delay_us")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_led_set")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_led_set")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_update_units")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | Uint16 data[8];                                                        
; 598 | Uint16 data2[8];                                                       
; 599 | Uint16 data3[8];                                                       
; 600 | int n;                                                                 
; 601 | Uint16 res_1;                                                          
; 602 | volatile Uint16 res_2;                                                 
; 603 | res_1 = 0;                                                             
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 604,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 604 | SPICANCheckInts(604);                                                  
;----------------------------------------------------------------------
        MOV       AL,#604               ; [CPU_] |604| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |604| 
        ; call occurs [#_SPICANCheckInts] ; [] |604| 
	.dwpsn	file "../Source/prod.c",line 605,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 605 | SPICANInit();                                                          
;----------------------------------------------------------------------
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |605| 
        ; call occurs [#_SPICANInit] ; [] |605| 
	.dwpsn	file "../Source/prod.c",line 606,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 606 | SPICANCheckInts(606);                                                  
; 607 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
        MOV       AL,#606               ; [CPU_] |606| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |606| 
        ; call occurs [#_SPICANCheckInts] ; [] |606| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 609,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 609 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |609| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |612| 
        ; call occurs [#_SPICANReadStat] ; [] |612| 
        MOV       *-SP[46],AL           ; [CPU_] |612| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 613 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |613| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |613| 
        ; call occurs [#_SPICANRead] ; [] |613| 
        MOV       *-SP[45],AL           ; [CPU_] |613| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 614 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |614| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |614| 
        ; call occurs [#_SPICANRead] ; [] |614| 
        MOV       *-SP[44],AL           ; [CPU_] |614| 
	.dwpsn	file "../Source/prod.c",line 615,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 615 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |615| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |615| 
        ; call occurs [#_SPICANRead] ; [] |615| 
        MOV       *-SP[43],AL           ; [CPU_] |615| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |616| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |616| 
        ; call occurs [#_SPICANRead] ; [] |616| 
        MOV       *-SP[42],AL           ; [CPU_] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 617 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |617| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |617| 
        ; call occurs [#_SPICANRead] ; [] |617| 
        MOV       *-SP[41],AL           ; [CPU_] |617| 
	.dwpsn	file "../Source/prod.c",line 618,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 618 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |618| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |618| 
        ; call occurs [#_SPICANRead] ; [] |618| 
        MOV       *-SP[40],AL           ; [CPU_] |618| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 619 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |619| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |619| 
        ; call occurs [#_SPICANRead] ; [] |619| 
	.dwpsn	file "../Source/prod.c",line 621,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 621 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |621| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |619| 
	.dwpsn	file "../Source/prod.c",line 621,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |621| 
        MOVB      AL,#161               ; [CPU_] |621| 
        SUBB      XAR4,#46              ; [CPU_U] |621| 
        MOVZ      AR4,AR4               ; [CPU_] |621| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |621| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |621| 
	.dwpsn	file "../Source/prod.c",line 622,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 622 | SPICANWaitForTXBuf(0);                                                 
; 623 | //      SPICAN_T0_RTS();                                               
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |622| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |622| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |622| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 625 | data[0] = res_1;                                                       
; 626 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        MOVB      *-SP[46],#1,UNC       ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 627 | data[1] = data[1] + 1;                                                 
; 628 | data[2] = data[2] + 1;                                                 
; 629 | data[3] = data[3] + 1;                                                 
; 630 | data[4] = data[4] + 1;                                                 
; 631 | data[5] = data[5] + 1;                                                 
; 632 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 634 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |634| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |630| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |634| 
        ; call occurs [#_SPICANRead] ; [] |634| 
        MOV       *-SP[46],AL           ; [CPU_] |634| 
	.dwpsn	file "../Source/prod.c",line 635,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 635 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |635| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |635| 
        ; call occurs [#_SPICANRead] ; [] |635| 
        MOV       *-SP[45],AL           ; [CPU_] |635| 
	.dwpsn	file "../Source/prod.c",line 636,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 636 | data[2] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |636| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |636| 
        ; call occurs [#_SPICANRead] ; [] |636| 
        MOV       *-SP[44],AL           ; [CPU_] |636| 
	.dwpsn	file "../Source/prod.c",line 637,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 637 | data[3] = SPICANRead(0x2C);                                            
;----------------------------------------------------------------------
        MOVB      AL,#44                ; [CPU_] |637| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |637| 
        ; call occurs [#_SPICANRead] ; [] |637| 
        MOV       *-SP[43],AL           ; [CPU_] |637| 
	.dwpsn	file "../Source/prod.c",line 638,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 638 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |638| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |638| 
        ; call occurs [#_SPICANRead] ; [] |638| 
        MOV       *-SP[42],AL           ; [CPU_] |638| 
	.dwpsn	file "../Source/prod.c",line 639,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 639 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |639| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |639| 
        ; call occurs [#_SPICANRead] ; [] |639| 
        MOV       *-SP[41],AL           ; [CPU_] |639| 
	.dwpsn	file "../Source/prod.c",line 640,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 640 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 642 | for (;;) {                                                             
; 644 |         Uint16 should_send;                                            
; 645 |         SPICANRoutine();                                               
; 646 |         // data[7] = SPICANReadBufs(data2, data3);                     
; 647 | //              should_send = SPICANReadBufs(data2, data3);            
; 649 | //              res_1 = SPICANRead(0x2C);                              
; 650 | //              delay_us(10);                                          
; 651 | //              res_2 = (res_1 & 0xFC);                                
; 652 | //              SPICANBitModify(0x2C, 0x03, 0x00);                     
; 653 | //              // delay_us(10);                                       
; 654 | //              res_2 = SPICANReadInts();                              
; 655 | //              // SPICANWrite(0x2C, res_2);                           
; 656 | // //           res_2 = SPICANRead(0x2C);                              
; 657 | // //           res_2 = 0x00;                                          
; 658 | //              if((res_2 & 0x01) == 0x01)                             
; 659 | //              {                                                      
; 660 | //                      SPICANWaitForTXBuf(0);                         
; 661 | //                      SPICANReadSetT0Message(0xA2, 8, data2);        
; 662 | //                      SPICANWaitForTXBuf(0);                         
; 663 | //                      SPICAN_T0_RTS();                               
; 664 | //                      res_2 = SPICANRead(0x2C);                      
; 665 | //              }                                                      
; 666 | //              else if((res_2 & 0x02) == 0x02)                        
; 667 | //              {                                                      
; 668 | //                      SPICANWaitForTXBuf(0);                         
; 669 | //                      SPICANReadSetT0Message(0xA3, 8, data3);        
; 670 | //                      SPICANWaitForTXBuf(0);                         
; 671 | //                      SPICAN_T0_RTS();                               
; 672 | //              }                                                      
; 674 |         // Check for any errors                                        
; 675 |         data[6] = SPICANRead(0x2D);                                    
; 677 |         // check SW2 for reset command                                 
; 678 |         if (!(0x0010 & INBTTN)) {                                      
; 680 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 681 |                 ad7738_resetpeak(0x0f);                                
; 682 |                 ad7738_resetvall(0x0f);                                
; 684 | #if(0)                                                                 
; 685 |                 // DEBUG: tagid                                        
; 686 |                 lcd_clear();                                           
; 687 |                 for( i = 0; i < 4; i++ )                               
; 689 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 690 |                         lcd_puts( buff, i * 20 );                      
; 692 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 694 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 696 |                 // DEBUG: tagid                                        
; 697 |                 update_units();                                        
; 698 | #endif                                                                 
; 702 | #ifdef SDHCCARD                                                        
; 703 |         // write to SD card file if flag set                           
; 704 |         if( sd_write && fp )                                           
; 706 |                 if( prod_getavail() > 31 || sd_close )                 
; 708 |                         led_set( LED2, LED_RED );                      
; 710 |                         k = 32;                                        
; 712 |                         while( prod_getavail() && k-- )                
; 714 |                                 wtp = prod_getnext();                  
; 716 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 718 |                                         intp = (Uint16*)&wtp->adw[i];  
; 720 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 722 |                                         for( j = 0; j < 2; j++ )       
; 724 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 725 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 726 |                                                 intp++;                
; 729 |                                 sd_cnt++;                              
; 732 |                         if( sd_close )                                 
; 734 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 735 |                                 if( res )                              
; 737 |                                         sprintf( buff, "%02X ", res ); 
; 738 |                                         scia_puts( buff );             
; 741 |                                 res = f_close( fp );                   
; 742 |                                 fp = NULL;                             
; 744 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 745 |                                 scia_puts( buff );                     
; 747 |                                 sd_write = 0;                          
; 748 |                                 sd_close = 0;                          
; 751 |                         led_set( LED2, LED_OFF );                      
; 754 | #endif                                                                 
; 756 |         //=============================================================
;     | =====================//                                                
; 757 |         // update the vfd
;     |                          //                                            
; 758 |         //=============================================================
;     | =====================//                                                
; 759 |         // if there is new "monitor data" ready                        
; 760 |         if (ad7738_monrdy()) {                                         
; 761 |                 // clear the ready flag                                
; 762 |                 ad7738_monclr();                                       
; 764 |                 // display the appropriate data                        
; 765 |                 switch (conf_data.vfd[line].what) {                    
; 766 |                 case VFD_LOAD:                                         
; 767 |                         wtp = ad7738_getmon();                         
; 768 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 769 |                         goto VFD_LINE_BUFF;                            
; 771 |                 case VFD_PEAK:                                         
; 772 |                         wtp = ad7738_getpeak();                        
; 773 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 774 |                         goto VFD_LINE_BUFF;                            
; 776 |                 case VFD_VALL:                                         
; 777 |                         wtp = ad7738_getvall();                        
; 778 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 779 |                         goto VFD_LINE_BUFF;                            
; 781 |                 case VFD_POSI:                                         
; 782 |                         wtp = ad7738_getmon();                         
; 783 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 784 |                         goto VFD_LINE_BUFF;                            
; 786 |                 case VFD_VELO:                                         
; 787 |                         wtp = ad7738_getmon();                         
; 788 |                         //wtp = ad7738_getpeak();                      
; 789 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 791 |                         // display appropriate decimal points          
; 792 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 793 |                         case 0:                                        
; 794 |                                 sprintf(buff, "%10.0f", tempft);       
; 795 |                                 break;                                 
; 796 |                         case 1:                                        
; 797 |                                 sprintf(buff, "%10.1f", tempft);       
; 798 |                                 break;                                 
; 799 |                         case 2:                                        
; 800 |                                 sprintf(buff, "%10.2f", tempft);       
; 801 |                                 break;                                 
; 802 |                         case 3:                                        
; 803 |                                 sprintf(buff, "%10.3f", tempft);       
; 804 |                                 break;                                 
; 805 |                         case 4:                                        
; 806 |                                 sprintf(buff, "%10.4f", tempft);       
; 807 |                                 break;                                 
; 808 |                         case 5:                                        
; 809 |                                 sprintf(buff, "%10.5f", tempft);       
; 810 |                                 break;                                 
; 812 |                         break;                                         
; 814 |                 case VFD_LIMIT:                                        
; 815 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 816 |                         sprintf(buff, "  %s",                          
; 817 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 818 |                         break;                                         
; 819 |                 case VFD_TEMP:                                         
; 820 |                         sprintf(buff, "%10.1f", tempvalue);            
; 821 |                         break;                                         
; 824 |                 // print to LCD                                        
; 825 |                 lcd_puts(buff, 7 + 20 * line);                         
; 827 |                 line++;                                                
; 828 |                 if (line >= VFD_MAX) {                                 
; 829 |                         line = 0;                                      
; 833 |         //=============================================================
;     | =====================//                                                
; 834 |         // temperature sensor reading
;     |                  //                                                    
; 835 |         //=============================================================
;     | =====================//                                                
; 837 |         // if its time to start a temp conversion...                   
; 838 |         if (ad7738_tempstart()) {                                      
; 839 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 842 |         // if its time to start a temp reading...                      
; 843 |         else if (ad7738_tempread()) {                                  
; 844 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 845 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 848 |         //=============================================================
;     | =====================//                                                
; 849 |         // Auto ID detection
;     |                  //                                                    
; 850 |         //=============================================================
;     | =====================//                                                
; 851 |         // check for changes in the load cells connected by "TAG ID"   
; 852 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 853 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 855 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 857 |                                 // new loadcell just plugged in        
; 858 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 859 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 861 |                                         DINT;                          
; 862 |                                         maf_rst();                     
; 863 |                                         ad7738_setcal();               
; 864 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 865 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 866 |                                         EINT;                          
; 868 |                                         lcd_clear();                   
; 869 |                                         update_units();                
; 870 |                                         autoidchanged = 1;             
; 873 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 874 |                 } else {                                               
; 876 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 878 |                         if (autoid[tagch]) {                           
; 879 |                                 autoid[tagch] = 0;                     
; 880 |                                 lcd_clear();                           
; 881 |                                 update_units();                        
; 882 |                                 autoidchanged = 1;                     
; 886 |                 tagch++;                                               
; 887 |                 if (tagch >= CHS_MAX) {                                
; 888 |                         tagch = 0;                                     
; 892 |         //=============================================================
;     | =====================//                                                
; 893 |         // Data streamming
;     |                          //                                            
; 894 |         //=============================================================
;     | =====================//                                                
; 895 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 896 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 897 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 898 |                 //      taking into account decimation, etc.           
; 899 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 901 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 903 |                         ds_ct = 0;                                     
; 904 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 905 |                         j = 0;                                         
; 906 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 907 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 908 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 909 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 910 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 911 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 912 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 914 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 915 |                                 wtp = prod_getnext();                  
; 916 |                                 if (--k) {                             
; 917 |                                         continue;
;     |          // decimation                                                 
; 919 |                                 k = ds_dec;                            
; 920 |                                 ds_ct++;                               
; 922 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 923 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 924 |                                         if (ds_bm & ch) {              
; 925 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 926 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 927 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 928 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 929 |                                                         intp++;        
; 932 |                                         ch <<= 1;
;     |          // next channel                                               
; 935 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 936 |                                         if (ds_bm & ch) {              
; 937 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 938 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 939 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 940 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 941 |                                                         intp++;        
; 944 |                                         ch <<= 1;
;     |          // next channel                                               
; 947 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 948 |                                         if (ds_bm & ch) {              
; 949 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 950 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 951 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 952 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 953 |                                                         intp++;        
; 956 |                                         ch <<= 1;
;     |          // next channel                                               
; 960 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 962 |                         if (ds_stop) {                                 
; 963 |                                 ds_en = 0;                             
; 966 |                         scia_send_bin(buff, j);         // send data   
; 968 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 969 |                 } else if (ad7738_getlimitchgd()) {                    
; 970 |                         j = 0;                                         
; 971 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 972 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 973 |                         for (i = 0; i < LIM_MAX; i++) {                
; 974 |                                 buff[j++] = ad7738_getlimitst(i);      
; 976 |                         scia_send_bin(buff, j);         // send data   
; 977 |                 } else if (autoidchanged) {                            
; 978 |                         autoidchanged = 0;                             
; 980 |                         j = 0;                                         
; 981 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 982 |                         buff[j++] = GetAutoId;                  // 1,  
; 983 |                         buff[j++] = conf_data.tagiden;                 
; 984 |                         for (i = 0; i < CHS_MAX; i++) {                
; 985 |                                 buff[j++] = autoid[i];                 
; 987 |                         scia_send_bin(buff, j);         // send data   
; 993 |         //=============================================================
;     | =====================//                                                
; 994 |         // serial command processing
;     |                  //                                                    
; 995 |         //=============================================================
;     | =====================//                                                
; 997 |         //=============================================================
;     | =====================//                                                
; 998 |         // Check for available command in the command buffer
;     |                  //                                                    
; 999 |         //=============================================================
;     | =====================//                                                
; 1000 |         if (0 == scia_rx_getcmds()) {                                  
; 1001 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 1004 |         //=============================================================
;     | =====================//                                                
; 1005 |         // Read one command from command buffer
;     |                  //                                                    
; 1006 |         //=============================================================
;     | =====================//                                                
; 1007 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 1009 |         //=============================================================
;     | =====================//                                                
; 1010 |         // Empty command
;     |                          //                                            
; 1011 |         //=============================================================
;     | =====================//                                                
; 1012 |         if (0 == cmdlen) {                                             
; 1013 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 1014 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 1015 |                 continue;                                              
; 1018 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 1020 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1021 |                 // ASCII command mode processing
;     |                                  //                                    
; 1022 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1024 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 1027 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1028 |                 // Current configuration print out
;     |                          //                                            
; 1029 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1031 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1095 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1097 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1099 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1102 |                         case 'A':                               // all 
; 1104 |                                 version = VERSION;                     
; 1105 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1106 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1107 |                                 scia_puts(buff);                       
; 1108 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1109 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1110 |                                 scia_puts(buff);                       
; 1111 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1112 |                                 scia_puts(buff);                       
; 1113 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1114 |                                                 conf_data.uname);      
; 1115 |                                 scia_puts(buff);                       
; 1117 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1118 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1119 |                                 scia_puts(buff);                       
; 1120 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1121 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1122 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1123 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1124 |                                         scia_puts(buff);               
; 1126 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1127 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1128 |                                 scia_puts(buff);                       
; 1130 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1131 |                                                 conf_data.filter);     
; 1132 |                                 scia_puts(buff);                       
; 1134 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1135 |                                         scia_puts("\r\n");             
; 1136 |                                         print_channel(ch);
;     |          // channel info                                               
; 1137 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1140 |                                 scia_puts("\r\n");                     
; 1141 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1142 |                                                 conf_data.velfilter);  
; 1143 |                                 scia_puts(buff);                       
; 1144 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1145 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1146 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1147 |                                         scia_puts(buff);               
; 1149 |                                 print_vfd();                           
; 1150 |                                 print_dac();                           
; 1151 |                                 print_limits();                        
; 1152 |                                 break;                                 
; 1154 |                         case 'S':
;     |  // sensor list                                                        
; 1156 |                                 scia_puts("\r\n");                     
; 1158 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1159 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1160 |                                         scia_puts(buff);               
; 1161 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1163 |                                 break;                                 
; 1165 |                         case 'D':
;     |  // Display settings                                                   
; 1167 |                                 print_vfd();                           
; 1168 |                                 break;                                 
; 1170 |                         case 'O':
;     |  // DAC settings                                                       
; 1172 |                                 print_dac();                           
; 1173 |                                 break;                                 
; 1175 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1177 |                                 print_limits();                        
; 1178 |                                 break;                                 
; 1180 |                         default:                                       
; 1181 |                                 goto INVALIDCMD;                       
; 1184 |                         break;                                         
; 1186 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1187 |                         // Unit config commands
;     |                                  //                                    
; 1188 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1189 |                 case 'U':                                       // Unit
; 1191 |                         if (cmdlen < 2) {                              
; 1192 |                                 goto INVALIDCMD;                       
; 1195 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1198 |                         case 'S':
;     |  // unit serial number                                                 
; 1200 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1201 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1202 |                                 conf_data.usn = atol(cmdbuff);         
; 1204 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1205 |                                 scia_puts(buff);                       
; 1206 |                                 unsaved = 1;                           
; 1207 |                                 break;                                 
; 1209 |                         case 'N':
;     |  // unit name                                                          
; 1211 |                                 j = sizeof(conf_data.uname) - 1;       
; 1212 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1213 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1214 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1216 |                                         cmdlen = j;                    
; 1217 |                                         cmdbuff[j] = '\0';             
; 1219 |                                 // also copy the null terminater       
; 1220 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1221 |                                                 cmdlen + 1);           
; 1222 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1224 |                                 scia_puts(cmdbuff);                    
; 1225 |                                 scia_puts("\r\n");                     
; 1226 |                                 unsaved = 1;                           
; 1227 |                                 break;                                 
; 1229 |                         case 'C':
;     |  // current sensor                                                     
; 1231 |                                 // channel number                      
; 1232 |                                 j = CHS_MAX;                           
; 1233 |                                 do {                                   
; 1234 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1235 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1236 |                                         ch = atoi(cmdbuff);            
; 1237 |                                         scia_puts(cmdbuff);            
; 1238 |                                         if (ch > 0 && ch <= j) {       
; 1239 |                                                 break;
;     |          // valid input channel number                                 
; 1241 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1242 |                                 } while (j);                           
; 1243 |                                 scia_puts("\r\n");                     
; 1244 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1246 |                                 // sensor number                       
; 1247 |                                 j = SENSPCH;                           
; 1248 |                                 do {                                   
; 1249 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1250 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1251 |                                         ss = atoi(cmdbuff);            
; 1252 |                                         scia_puts(cmdbuff);            
; 1253 |                                         if (ss > 0 && ss <= j) {       
; 1254 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1256 |                                                 break;                 
; 1258 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1259 |                                 } while (j);                           
; 1260 |                                 scia_puts("\r\n");                     
; 1261 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1263 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1264 |                                                 ch + 1, ss + 1);       
; 1265 |                                 scia_puts(buff);                       
; 1266 |                                 print_sensor(ss);                      
; 1267 |                                 unsaved = 1;                           
; 1269 |                                 DINT;                                  
; 1270 |                                 conf_data.ch[ch].ci = ss;              
; 1271 |                                 ad7738_setcal();                       
; 1273 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1274 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1275 |                                 EINT;                                  
; 1277 |                                 update_units();                        
; 1278 |                                 break;                                 
; 1280 |                         case 'I':
;     |  // interface                                                          
; 1282 |                                 for (j = 0; j < 4; j++) {              
; 1283 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1284 |                                         scia_puts(buff);               
; 1285 |                                         if (j < 3) {                   
; 1286 |                                                 scia_puts(", ");       
; 1289 |                                 scia_puts("\r\n");                     
; 1290 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1291 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1292 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1293 |                                 scia_puts(cmdbuff);                    
; 1294 |                                 scia_puts("\r\n");                     
; 1295 |                                 if (cmdlen == 0) {                     
; 1296 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1297 |                                         break;                         
; 1299 |                                 pt = atoi(cmdbuff);                    
; 1300 |                                 if (pt > 3) {                          
; 1301 |                                         scia_puts(                     
; 1302 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1303 |                                         break;                         
; 1305 |                                 conf_data.rxdir = pt;                  
; 1306 |                                 sprintf(buff,                          
; 1307 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1308 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1309 |                                 scia_puts(buff);                       
; 1310 |                                 scia_puts(                             
; 1311 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1312 |                                 unsaved = 1;                           
; 1313 |                                 break;                                 
; 1315 |                         case 'B':
;     |  // baudrate                                                           
; 1317 |                                 if (conf_data.rxdir == SDIR_USB        
; 1318 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1319 |                                         scia_puts(                     
; 1320 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1321 |                                         break;                         
; 1324 |                                 for (j = 0; j < 8; j++) {              
; 1325 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1326 |                                         scia_puts(buff);               
; 1327 |                                         if (j < 7) {                   
; 1328 |                                                 scia_puts(", ");       
; 1331 |                                 scia_puts("\r\n");                     
; 1332 |                                 cmdlen = sprintf(buff,                 
; 1333 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1334 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1335 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1336 |                                 scia_puts(cmdbuff);                    
; 1337 |                                 scia_puts("\r\n");                     
; 1338 |                                 if (cmdlen == 0) {                     
; 1339 |                                         scia_puts(                     
; 1340 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1341 |                                         break;                         
; 1343 |                                 pt = atoi(cmdbuff);                    
; 1344 |                                 if (pt > 7) {                          
; 1345 |                                         scia_puts(                     
; 1346 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1347 |                                         break;                         
; 1349 |                                 conf_data.baud = pt;                   
; 1350 |                                 sprintf(buff,                          
; 1351 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1352 |                                                 BAUD[conf_data.baud]); 
; 1353 |                                 scia_puts(buff);                       
; 1354 |                                 scia_puts(                             
; 1355 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1356 |                                 unsaved = 1;                           
; 1357 |                                 break;                                 
; 1359 |                         case 'F':
;     |  // averaging filter size                                              
; 1361 |                                 j = MAF_MAX;                           
; 1362 |                                 do {                                   
; 1363 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1364 |                                                         j);            
; 1365 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1366 |                                         i = atoi(cmdbuff);             
; 1367 |                                         scia_puts(cmdbuff);            
; 1368 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1369 |                                                 break;
;     |          // valid number input                                         
; 1371 |                                         scia_puts(                     
; 1372 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1373 |                                 } while (j);                           
; 1374 |                                 scia_puts("\r\n");                     
; 1376 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1377 |                                                 i);                    
; 1378 |                                 scia_puts(buff);                       
; 1379 |                                 unsaved = 1;                           
; 1381 |                                 // update new value                    
; 1382 |                                 DINT;                                  
; 1383 |                                 conf_data.filter = i;                  
; 1384 |                                 maf_rst();                             
; 1385 |                                 EINT;                                  
; 1386 |                                 break;                                 
; 1388 |                         case 'W':
;     |  // diff window ratio                                                  
; 1390 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1391 |                                                 conf_data.diffwin);    
; 1392 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1393 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1394 |                                 scia_puts(cmdbuff);                    
; 1395 |                                 scia_puts("\r\n");                     
; 1397 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1398 |                                                 conf_data.diffwin);    
; 1399 |                                 scia_puts(buff);                       
; 1400 |                                 unsaved = 1;                           
; 1402 |                                 DINT;                                  
; 1403 |                                 ad7738_setcal();                       
; 1404 |                                 maf_rst();                             
; 1405 |                                 EINT;                                  
; 1406 |                                 break;                                 
; 1408 |                         default:                                       
; 1409 |                                 goto INVALIDCMD;                       
; 1412 |                         break;                                         
; 1414 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1415 |                         // Board calibration
;     |                                  //                                    
; 1416 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1417 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1419 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1420 |                                 goto INVALIDCMD;                       
; 1423 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1424 |                                 goto INVALIDCMD;                       
; 1425 |                                 // invalid calibration method          
; 1428 |                         // channel index                               
; 1429 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1430 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1431 |                                 goto INVALIDCMD;                       
; 1432 |                                 // invalid channel number              
; 1434 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1436 |                         volt[0] = 0;                                   
; 1437 |                         volt[1] = 0;                                   
; 1438 |                         for (j = 3; j < cmdlen; j++) {                 
; 1439 |                                 if (cmdbuff[j] == 'X') {               
; 1440 |                                         j++;                           
; 1441 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1444 |                                 if (cmdbuff[j] == 'Y') {               
; 1445 |                                         j++;                           
; 1446 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1450 |                         if (volt[0] == volt[1]) {                      
; 1451 |                                 goto INVALIDCMD;                       
; 1452 |                                 // invalid parameters                  
; 1455 |                         lcd_clear();                                   
; 1456 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1457 |                         lcd_puts(buff, 20);                            
; 1458 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1459 |                         lcd_puts(buff, 40);                            
; 1460 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1461 |                         lcd_puts(buff, 60);                            
; 1463 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1466 |                         case 'C':
;     |  // board ADC calibration                                              
; 1468 |                                 lcd_puts("Board Calibration...", 0);   
; 1470 |                                 sprintf(buff,                          
; 1471 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1472 |                                                 ch + 1);               
; 1473 |                                 scia_puts(buff);                       
; 1485 |                                 for (j = 0; j < 2; j++) {              
; 1486 |                                         sprintf(buff,                  
; 1487 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1488 |                                                         volt[j]);      
; 1489 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1490 |                                         scia_puts("Reading ... ");     
; 1492 |                                         dsum[j] = 0;                   
; 1493 |                                         sampcnt = CAL_SAMPLES;         
; 1494 |                                         while (sampcnt--) {            
; 1495 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1496 |                                                         delay_us(1);
;     |                  // wait                                               
; 1498 |                                                 cntp = ad7738_getraw();
; 1499 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1502 |                                         scia_puts("done\r\n");         
; 1505 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1506 |                                                 / (dsum[1] - dsum[0]); 
; 1508 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1509 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1510 |                                 scia_puts(buff);                       
; 1511 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1512 |                                 break;                                 
; 1514 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1516 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1517 |                                                 || volt[1] < -10) {    
; 1518 |                                         lcd_clear();                   
; 1519 |                                         update_units();                
; 1520 |                                         goto INVALIDCMD;               
; 1521 |                                         // invalid parameters          
; 1524 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1526 |                                 sprintf(buff,                          
; 1527 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1528 |                                                 ch + 1);               
; 1529 |                                 scia_puts(buff);                       
; 1530 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1531 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1533 |                                 for (j = 0; j < 2; j++) {              
; 1534 |                                         if (volt[j] < 0) {             
; 1535 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1536 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1537 |                                         } else {                       
; 1538 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1539 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1541 |                                         if (dsum[0] <= 0) {            
; 1542 |                                                 dacc[j] = 0;           
; 1543 |                                         } else if (dsum[0] >= 0xffff) {
; 1544 |                                                 dacc[j] = 0xffff;      
; 1545 |                                         } else {                       
; 1546 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1549 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1550 |                                         scia_puts(buff);               
; 1551 |                                         cmdbuff[0] = '\0';             
; 1553 |                                         do {                           
; 1554 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1555 |                                                 latch_dac();           
; 1557 |                                                 do {                   
; 1558 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1559 | 
;     |  sizeof(cmdbuff));                                                     
; 1560 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1561 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1563 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1564 |                                                         break;
;     |                  // done                                               
; 1567 |                                                 i = atoi(cmdbuff + 1); 
; 1568 |                                                 if (i == 0) {          
; 1569 |                                                         i = 1;         
; 1572 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1574 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1575 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1576 |                                                         } else {       
; 1577 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1579 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1581 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1582 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1583 |                                                         } else {       
; 1584 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1587 |                                         } while (i);                   
; 1589 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1590 |                                         scia_puts(buff);               
; 1593 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1595 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1596 |                                 cmdbuff[0] = '\0';                     
; 1598 |                                 do {                                   
; 1599 |                                         mcbsp_xmit(dacc[2], ch);       
; 1600 |                                         latch_dac();                   
; 1602 |                                         do {                           
; 1603 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1604 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1605 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1607 |                                         if ('S' == cmdbuff[0]) {       
; 1608 |                                                 break;
;     |          // done                                                       
; 1611 |                                         i = atoi(cmdbuff + 1);         
; 1612 |                                         if (i == 0) {                  
; 1613 |                                                 i = 1;                 
; 1616 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1618 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1619 |                                                         dacc[2] += i;  
; 1620 |                                                 } else {               
; 1621 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1623 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1625 |                                                 if (dacc[2] >= i) {    
; 1626 |                                                         dacc[2] -= i;  
; 1627 |                                                 } else {               
; 1628 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1631 |                                 } while (i);                           
; 1633 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1634 |                                 scia_puts(buff);                       
; 1636 |                                 // do the calculations                 
; 1637 |                                 if (volt[0] < 0) {                     
; 1638 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1639 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1640 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1641 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1642 |                                 } else {                               
; 1643 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1644 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1645 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1646 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1648 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1650 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1652 |                                 sprintf(buff,                          
; 1653 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1654 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1655 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1656 |                                 scia_puts(buff);                       
; 1658 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1659 |                                 break;                                 
; 1661 |                         default:                                       
; 1662 |                                 goto INVALIDCMD;                       
; 1665 |                         unsaved = 1;                                   
; 1666 |                         lcd_clear();                                   
; 1667 |                         update_units();                                
; 1669 |                         DINT;                                          
; 1670 |                         ad7738_setcal();                               
; 1671 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1672 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1673 |                         EINT;                                          
; 1674 |                         break;                                         
; 1676 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1677 |                         // Channel sensor calibration
;     |                                  //                                    
; 1678 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1679 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1681 |                         if (cmdlen < 2) {                              
; 1682 |                                 goto INVALIDCMD;                       
; 1685 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1686 |                                         && 'S' != cmdbuff[1]) {        
; 1687 |                                 goto INVALIDCMD;                       
; 1688 |                                 // invalid calibration method          
; 1690 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1692 |                         lcd_clear();                                   
; 1693 |                         lcd_puts("Sensor Calibration..", 0);           
; 1695 |                         // === read informations ====                  
; 1696 |                         // channel number                              
; 1697 |                         j = CHS_MAX;                                   
; 1698 |                         do {                                           
; 1699 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1700 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1701 |                                 ch = atoi(cmdbuff);                    
; 1702 |                                 scia_puts(cmdbuff);                    
; 1703 |                                 if (ch > 0 && ch <= j) {               
; 1704 |                                         break;
;     |  // valid input channel number                                         
; 1706 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1707 |                         } while (j);                                   
; 1708 |                         scia_puts("\r\n");                             
; 1709 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1711 |                         // sensor number                               
; 1712 |                         j = SENSPCH;                                   
; 1713 |                         do {                                           
; 1714 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1715 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1716 |                                 ss = atoi(cmdbuff);                    
; 1717 |                                 scia_puts(cmdbuff);                    
; 1718 |                                 if (ss > 0 && ss <= j) {               
; 1719 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1721 |                                         break;                         
; 1723 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1724 |                         } while (j);                                   
; 1725 |                         scia_puts("\r\n");                             
; 1726 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1728 |                         // put on the vfd                              
; 1729 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1730 |                         lcd_puts(buff, 20);                            
; 1732 |                         // sensor serial number                        
; 1733 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1734 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1735 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1736 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1738 |                                 cmdlen = j;                            
; 1739 |                                 cmdbuff[j] = '\0';                     
; 1741 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1742 |                         scia_puts(cmdbuff);                            
; 1743 |                         scia_puts("\r\n");                             
; 1745 |                         // sensor label                                
; 1746 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1747 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1748 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1749 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1751 |                                 cmdlen = j;                            
; 1752 |                                 cmdbuff[j] = '\0';                     
; 1754 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1755 |                         scia_puts(cmdbuff);                            
; 1756 |                         scia_puts("\r\n");                             
; 1758 |                         // unit                                        
; 1759 |                         for (j = 0; j < 7; j++) {                      
; 1760 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1762 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1763 |                         scia_puts(buff);                               
; 1764 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1765 |                                         sizeof(cmdbuff));              
; 1766 |                         tsensor.unit = atoi(cmdbuff);                  
; 1768 |                         switch (tsensor.unit) {                        
; 1769 |                         case 0:                                 // lb  
; 1770 |                         case 1:                                 // kg  
; 1771 |                                 tsensor.unit |= 0x10;                  
; 1772 |                                 break;                                 
; 1773 |                         case 2:                                 // in  
; 1774 |                         case 3:                                 // cm  
; 1775 |                         case 4:                                 // mm  
; 1776 |                                 tsensor.unit |= 0x20;                  
; 1777 |                                 break;                                 
; 1778 |                         case 5:                                 // ps  
; 1779 |                                 tsensor.unit |= 0x30;                  
; 1780 |                                 break;                                 
; 1781 |                         case 6:                                 // nm  
; 1782 |                                 tsensor.unit |= 0x40;                  
; 1783 |                                 break;                                 
; 1784 |                         case 7:                                        
; 1785 |                         case 8:                                        
; 1786 |                         case 15:                                       
; 1787 |                                 tsensor.unit |= 0xf0;                  
; 1788 |                                 break;                                 
; 1789 |                         default:                                       
; 1790 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1791 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1792 |                                 break;                                 
; 1794 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1795 |                         tsensor.ufactor = 1;                    // 1:1 
; 1797 |                         scia_puts(cmdbuff);                            
; 1798 |                         scia_puts("\r\n");                             
; 1800 |                         // range                                       
; 1801 |                         j = 1;                                         
; 1802 |                         do {                                           
; 1803 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1804 |                                 tsensor.range = atof(cmdbuff);         
; 1805 |                                 if (tsensor.range != 0) {              
; 1806 |                                         break;                         
; 1808 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1809 |                         } while (j);                                   
; 1810 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1811 |                         scia_puts(cmdbuff);                            
; 1812 |                         scia_puts("\r\n");                             
; 1814 |                         tsensor.tagid = tagid(ch);                     
; 1816 |                         if (tsensor.tagid == 0) {                      
; 1817 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1818 |                         } else {                                       
; 1819 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1821 |                         scia_puts(buff);                               
; 1823 |                         switch (cmethod)
;     |  // on method code                                                     
; 1826 |                         case 'V':
;     |  // mv/v cal                                                           
; 1828 |                                 lcd_puts("Method: mv/v", 40);          
; 1830 |                                 tsensor.method = MD_RUN_MVV;           
; 1831 |                                 tsensor.points = 1;                    
; 1833 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1834 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1835 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1836 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1837 |                                 if (tsensor.slope[0] == 0) {           
; 1838 |                                         tsensor.slope[0] = 1;          
; 1840 |                                 scia_puts(cmdbuff);                    
; 1841 |                                 scia_puts("\r\n");                     
; 1843 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1844 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1846 |                                 scia_puts("Reading ... ");             
; 1848 |                                 dsum[0] = 0;                           
; 1849 |                                 sampcnt = CAL_SAMPLES;                 
; 1850 |                                 while (sampcnt--) {                    
; 1851 |                                         while (0 == ad7738_rawrdy()) { 
; 1852 |                                                 delay_us(1);
;     |          // wait                                                       
; 1855 |                                         cntp = ad7738_getraw();        
; 1856 |                                         dsum[0] += cntp->adc[ch];      
; 1858 |                                 scia_puts("done\r\n");                 
; 1860 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1861 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1862 |                                 break;                                 
; 1864 |                         case 'M':
;     |  // mass cal                                                           
; 1866 |                                 tsensor.method = MD_RUN_MAS;           
; 1868 |                                 // calibration points for mass cal only
; 1869 |                                 j = PNT_MAX;                           
; 1870 |                                 do {                                   
; 1871 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1872 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1873 |                                         tsensor.points = atoi(cmdbuff);
; 1874 |                                         scia_puts(cmdbuff);            
; 1875 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1876 |                                                 break;                 
; 1878 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1880 |                                 } while (j);                           
; 1881 |                                 scia_puts("\r\n");                     
; 1883 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1884 |                                 lcd_puts(buff, 40);                    
; 1886 |                                 // calculate the default point values  
; 1887 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1888 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1889 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1892 |                                 // read in value with default provided 
; 1893 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1894 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1895 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1896 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1898 |                                         // zero length response set the
;     |  default                                                               
; 1899 |                                         if (cmdlen > 0) {              
; 1900 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1902 |                                         scia_puts(cmdbuff);            
; 1903 |                                         scia_puts("\r\n");             
; 1906 |                                 // TODO: sort the list of points       
; 1908 |                                 // read adc count for each point       
; 1909 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1910 |                                         sprintf(buff,                  
; 1911 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1912 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1913 |                                                         j + 1);        
; 1914 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1915 |                                         scia_puts("Reading ... ");     
; 1917 |                                         dsum[0] = 0;                   
; 1918 |                                         sampcnt = CAL_SAMPLES;         
; 1919 |                                         while (sampcnt--) {            
; 1920 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1921 |                                                         delay_us(1);
;     |                  // wait                                               
; 1924 |                                                 cntp = ad7738_getraw();
; 1925 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1927 |                                         scia_puts("done\r\n");         
; 1928 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1931 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1932 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1933 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1934 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1935 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1936 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1937 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1938 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1939 | 
;     |  * tsensor.adc[j];                                                     
; 1941 |                                 break;                                 
; 1943 |                         case 'S':
;     |  // shunt cal                                                          
; 1945 |                                 lcd_puts("Method: shunt", 40);         
; 1947 |                                 tsensor.method = MD_RUN_SHT;           
; 1948 |                                 tsensor.points = 1;                    
; 1950 |                                 sprintf(buff,                          
; 1951 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1952 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1953 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1954 |                                 scia_puts(cmdbuff);                    
; 1955 |                                 scale = atof(cmdbuff);                 
; 1956 |                                 if (scale == 0) {                      
; 1957 |                                         scale = 1.46;                  
; 1958 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1960 |                                 scia_puts("\r\n");                     
; 1962 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1963 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1965 |                                 scia_puts("Reading ... ");             
; 1967 |                                 for (j = 0; j < 2; j++) {              
; 1968 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1970 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1971 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1972 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1974 |                                                 DINT;                  
; 1975 |                                                 maf_rst();             
; 1976 |                                                 EINT;                  
; 1977 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1980 |                                         dsum[j] = 0;                   
; 1981 |                                         sampcnt = CAL_SAMPLES;         
; 1982 |                                         while (sampcnt--) {            
; 1983 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1984 |                                                         delay_us(1);
;     |                  // wait                                               
; 1987 |                                                 cntp = ad7738_getraw();
; 1988 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1992 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1993 |                                 DINT;                                  
; 1994 |                                 maf_rst();                             
; 1995 |                                 EINT;                                  
; 1997 |                                 scia_puts("done\r\n");                 
; 1999 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 2000 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 2001 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 2002 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 2003 |                                 break;                                 
; 2005 |                         default:                                       
; 2006 |                                 lcd_clear();                           
; 2007 |                                 update_units();                        
; 2008 |                                 goto INVALIDCMD;                       
; 2011 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 2012 |                         scia_getparam(                                 
; 2013 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 2014 |                                         cmdbuff, sizeof(cmdbuff));     
; 2015 |                         scia_puts("Reading ... ");                     
; 2017 |                         for (j = 0; j < 2; j++) {                      
; 2018 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 2020 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 2021 |                                         for (i = 0; i < 50; i++) {     
; 2022 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 2024 |                                         DINT;                          
; 2025 |                                         maf_rst();                     
; 2026 |                                         EINT;                          
; 2027 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 2030 |                                 dsum[j] = 0;                           
; 2031 |                                 sampcnt = CAL_SAMPLES;                 
; 2032 |                                 while (sampcnt--) {                    
; 2033 |                                         while (0 == ad7738_rawrdy()) { 
; 2034 |                                                 delay_us(1);
;     |          // wait                                                       
; 2037 |                                         cntp = ad7738_getraw();        
; 2038 |                                         dsum[j] += cntp->adc[ch];      
; 2040 |                                 dsum[j] /= CAL_SAMPLES;                
; 2042 |                                 pt = 0;                                
; 2043 |                                 if (tsensor.points > 2) {              
; 2044 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2045 |                                                 pt++;                  
; 2048 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2049 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2052 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2053 |                         DINT;                                          
; 2054 |                         maf_rst();                                     
; 2055 |                         EINT;                                          
; 2057 |                         scia_puts("done\r\n");                         
; 2059 |                         tsensor.shunt = volt[1] - volt[0];             
; 2061 |                         // setup some other members of the structure   
; 2062 |                         tsensor.tare = 0;                              
; 2063 |                         tsensor.dacgain = 1;                           
; 2064 |                         tsensor.dacoff = 0;                            
; 2065 |                         tsensor.ch = ch;                               
; 2067 |                         DINT;                                          
; 2068 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2069 |                                         sizeof(sconf_t));              
; 2071 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2073 |                         ad7738_setcal();                               
; 2074 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2075 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2076 |                         EINT;                                          
; 2078 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2079 |                                         ch + 1, ss + 1);               
; 2080 |                         scia_puts(buff);                               
; 2081 |                         print_sensor(ss);                              
; 2083 |                         unsaved = 1;                                   
; 2084 |                         lcd_clear();                                   
; 2085 |                         update_units();                                
; 2086 |                         break;                                         
; 2088 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2089 |                         // sensor config commands
;     |                                          //                            
; 2090 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2091 |                 case 'S':                               // sensor      
; 2093 |                         if (cmdlen < 2) {                              
; 2094 |                                 goto INVALIDCMD;                       
; 2097 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2098 |                                         && 'D' != cmdbuff[1]) {        
; 2099 |                                 goto INVALIDCMD;                       
; 2100 |                                 // invalid command                     
; 2102 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2122 |                         // sensor number                               
; 2123 |                         j = SENSPCH;                                   
; 2124 |                         do {                                           
; 2125 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2126 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2127 |                                 ss = atoi(cmdbuff);                    
; 2128 |                                 scia_puts(cmdbuff);                    
; 2129 |                                 if (ss > 0 && ss <= j) {               
; 2130 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2132 |                                         break;                         
; 2134 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2135 |                         } while (j);                                   
; 2136 |                         scia_puts("\r\n");                             
; 2137 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2139 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2142 |                         case 'N':
;     |  // change sensor label                                                
; 2144 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2145 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2146 |                                                 ss + 1, j);            
; 2147 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2148 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2150 |                                         cmdlen = j;                    
; 2151 |                                         cmdbuff[j] = '\0';             
; 2153 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2154 |                                                 cmdlen + 1);           
; 2155 |                                 scia_puts(cmdbuff);                    
; 2156 |                                 scia_puts("\r\n");                     
; 2157 |                                 unsaved = 1;                           
; 2159 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2160 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2161 |                                 scia_puts(buff);                       
; 2162 |                                 break;                                 
; 2164 |                         case 'U':
;     |  // change the output unit                                             
; 2166 |                                 scale = 0;                             
; 2168 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2169 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2171 |                                         do {                           
; 2172 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2173 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2174 |                                                 j = atoi(cmdbuff);     
; 2175 |                                                 scia_puts(cmdbuff);    
; 2176 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2177 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2179 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2180 |                                         scia_puts("\r\n");             
; 2182 |                                         switch (j) {                   
; 2183 |                                         case 0:                        
; 2184 |                                                 scale = 1;             
; 2185 |                                                 j |= 0x10;             
; 2186 |                                                 break;                 
; 2187 |                                         case 1:                        
; 2188 |                                                 scale = LB_TO_KG;      
; 2189 |                                                 j |= 0x10;             
; 2190 |                                                 break;                 
; 2191 |                                         case 7:                        
; 2192 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2193 |                                                 j |= 0xf0;             
; 2194 |                                                 break;                 
; 2196 |                                         break;                         
; 2198 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2200 |                                         do {                           
; 2201 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2202 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2203 |                                                 j = atoi(cmdbuff);     
; 2204 |                                                 scia_puts(cmdbuff);    
; 2205 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2206 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2208 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2209 |                                         scia_puts("\r\n");             
; 2211 |                                         switch (j) {                   
; 2212 |                                         case 0:                        
; 2213 |                                                 scale = 1.0 / LB_TO_KG;
; 2214 |                                                 j |= 0x10;             
; 2215 |                                                 break;                 
; 2216 |                                         case 1:                        
; 2217 |                                                 scale = 1;             
; 2218 |                                                 j |= 0x10;             
; 2219 |                                                 break;                 
; 2220 |                                         case 7:                        
; 2221 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2222 |                                                 j |= 0xf0;             
; 2223 |                                                 break;                 
; 2225 |                                         break;                         
; 2227 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2229 |                                         do {                           
; 2230 |                                                 scia_getparam(         
; 2231 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2232 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2233 |                                                 j = atoi(cmdbuff);     
; 2234 |                                                 scia_puts(cmdbuff);    
; 2235 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2236 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2238 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2239 |                                         scia_puts("\r\n");             
; 2241 |                                         switch (j) {                   
; 2242 |                                         case 2:                        
; 2243 |                                                 scale = 1;             
; 2244 |                                                 j |= 0x20;             
; 2245 |                                                 break;                 
; 2246 |                                         case 3:                        
; 2247 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2248 |                                                 j |= 0x20;             
; 2249 |                                                 break;                 
; 2250 |                                         case 4:                        
; 2251 |                                                 scale = IN_TO_MM;      
; 2252 |                                                 j |= 0x20;             
; 2253 |                                                 break;                 
; 2254 |                                         case 7:                        
; 2255 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2256 |                                                 j |= 0xf0;             
; 2257 |                                                 break;                 
; 2259 |                                         break;                         
; 2261 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2263 |                                         do {                           
; 2264 |                                                 scia_getparam(         
; 2265 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2266 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2267 |                                                 j = atoi(cmdbuff);     
; 2268 |                                                 scia_puts(cmdbuff);    
; 2269 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2270 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2272 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2273 |                                         scia_puts("\r\n");             
; 2275 |                                         switch (j) {                   
; 2276 |                                         case 2:                        
; 2277 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2278 |                                                 j |= 0x20;             
; 2279 |                                                 break;                 
; 2280 |                                         case 3:                        
; 2281 |                                                 scale = 1;             
; 2282 |                                                 j |= 0x20;             
; 2283 |                                                 break;                 
; 2284 |                                         case 4:                        
; 2285 |                                                 scale = 10;            
; 2286 |                                                 j |= 0x20;             
; 2287 |                                                 break;                 
; 2288 |                                         case 7:                        
; 2289 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2290 |                                                 j |= 0xf0;             
; 2291 |                                                 break;                 
; 2293 |                                         break;                         
; 2295 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2297 |                                         do {                           
; 2298 |                                                 scia_getparam(         
; 2299 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2300 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2301 |                                                 j = atoi(cmdbuff);     
; 2302 |                                                 scia_puts(cmdbuff);    
; 2303 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2304 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2306 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2307 |                                         scia_puts("\r\n");             
; 2309 |                                         switch (j) {                   
; 2310 |                                         case 2:                        
; 2311 |                                                 scale = 1.0 / IN_TO_MM;
; 2312 |                                                 j |= 0x20;             
; 2313 |                                                 break;                 
; 2314 |                                         case 3:                        
; 2315 |                                                 scale = 0.1;           
; 2316 |                                                 j |= 0x20;             
; 2317 |                                                 break;                 
; 2318 |                                         case 4:                        
; 2319 |                                                 scale = 1;             
; 2320 |                                                 j |= 0x20;             
; 2321 |                                                 break;                 
; 2322 |                                         case 7:                        
; 2323 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2324 |                                                 j |= 0xf0;             
; 2325 |                                                 break;                 
; 2327 |                                         break;                         
; 2329 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2331 |                                         do {                           
; 2332 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2333 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2334 |                                                 j = atoi(cmdbuff);     
; 2335 |                                                 scia_puts(cmdbuff);    
; 2336 |                                                 if (j != 5 && j != 7) {
; 2337 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2339 |                                         } while (j != 5 && j != 7);    
; 2340 |                                         scia_puts("\r\n");             
; 2342 |                                         switch (j) {                   
; 2343 |                                         case 5:                        
; 2344 |                                                 scale = 1;             
; 2345 |                                                 j |= 0x30;             
; 2346 |                                                 break;                 
; 2347 |                                         case 7:                        
; 2348 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2349 |                                                 j |= 0xf0;             
; 2350 |                                                 break;                 
; 2352 |                                         break;                         
; 2354 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2356 |                                         do {                           
; 2357 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2358 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2359 |                                                 j = atoi(cmdbuff);     
; 2360 |                                                 scia_puts(cmdbuff);    
; 2361 |                                                 if (j != 6 && j != 7) {
; 2362 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2364 |                                         } while (j != 6 && j != 7);    
; 2365 |                                         scia_puts("\r\n");             
; 2367 |                                         switch (j) {                   
; 2368 |                                         case 6:                        
; 2369 |                                                 scale = 1;             
; 2370 |                                                 j |= 0x40;             
; 2371 |                                                 break;                 
; 2372 |                                         case 7:                        
; 2373 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2374 |                                                 j |= 0xf0;             
; 2375 |                                                 break;                 
; 2377 |                                         break;                         
; 2379 |                                 default:                               
; 2380 |                                         break;                         
; 2383 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2384 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2385 |                                         break;                         
; 2388 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2389 |                                         scia_puts(                     
; 2390 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2391 |                                         break;                         
; 2394 |                                 conf_data.sensor[ss].ounit = j;        
; 2395 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2396 |                                 unsaved = 1;                           
; 2398 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2399 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2400 |                                 scia_puts(buff);                       
; 2402 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2403 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2404 |                                                 update_units();        
; 2405 |                                                 DINT;                  
; 2406 |                                                 ad7738_setcal();       
; 2407 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2408 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2409 |                                                 EINT;                  
; 2412 |                                 break;                                 
; 2414 |                         case 'B':
;     |  // change percent base                                                
; 2416 |                                 // base                                
; 2417 |                                 j = 1;                                 
; 2418 |                                 do {                                   
; 2419 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2420 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2421 |                                         scale = atof(cmdbuff);         
; 2422 |                                         scia_puts(cmdbuff);            
; 2423 |                                         if (scale != 0) {              
; 2424 |                                                 break;                 
; 2426 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2427 |                                 } while (j);                           
; 2428 |                                 scia_puts("\r\n");                     
; 2429 |                                 conf_data.sensor[ss].base = scale;     
; 2430 |                                 unsaved = 1;                           
; 2432 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2433 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2434 |                                 scia_puts(buff);                       
; 2436 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2437 |                                         // output unit is percent      
; 2438 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2439 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2441 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2442 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2443 |                                                         // changed is f
;     | or the current sensor                                                  
; 2444 |                                                         DINT;          
; 2445 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2446 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2447 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2448 |                                                         EINT;          
; 2452 |                                 break;                                 
; 2454 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2456 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2457 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2458 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2459 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2460 |                                 scia_puts(cmdbuff);                    
; 2461 |                                 scia_puts("\r\n");                     
; 2463 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2464 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2465 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2466 |                                 scia_puts(cmdbuff);                    
; 2467 |                                 scia_puts("\r\n");                     
; 2468 |                                 unsaved = 1;                           
; 2470 |                                 sprintf(buff,                          
; 2471 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2472 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2473 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2474 |                                 scia_puts(buff);                       
; 2476 |                                 DINT;                                  
; 2477 |                                 ad7738_setcal();                       
; 2478 |                                 EINT;                                  
; 2479 |                                 break;                                 
; 2481 |                         default:                                       
; 2482 |                                 goto INVALIDCMD;                       
; 2485 |                         break;                                         
; 2487 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2488 |                         // Encoder config commands
;     |                                  //                                    
; 2489 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2490 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2492 |                         if (cmdlen < 2) {                              
; 2493 |                                 goto INVALIDCMD;                       
; 2496 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2499 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2501 |                                 j = MAF_MAX;                           
; 2502 |                                 do {                                   
; 2503 |                                         sprintf(buff,                  
; 2504 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2505 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2506 |                                         i = atoi(cmdbuff);             
; 2507 |                                         scia_puts(cmdbuff);            
; 2508 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2509 |                                                 break;
;     |          // valid number input                                         
; 2511 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2512 |                                 } while (j);                           
; 2513 |                                 scia_puts("\r\n");                     
; 2515 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2516 |                                                 i);                    
; 2517 |                                 scia_puts(buff);                       
; 2518 |                                 unsaved = 1;                           
; 2520 |                                 // update new value                    
; 2521 |                                 DINT;                                  
; 2522 |                                 conf_data.velfilter = i;               
; 2523 |                                 ad7738_setcal();                       
; 2524 |                                 velf_rst();                            
; 2525 |                                 EINT;                                  
; 2526 |                                 break;                                 
; 2528 |                         case 'P':
;     |  // count per inch                                                     
; 2530 |                                 // channel number                      
; 2531 |                                 j = ENC_MAX;                           
; 2532 |                                 do {                                   
; 2533 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2534 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2535 |                                         ss = atoi(cmdbuff);            
; 2536 |                                         scia_puts(cmdbuff);            
; 2537 |                                         if (ss > 0 && ss <= j) {       
; 2538 |                                                 break;
;     |          // valid input line number                                    
; 2540 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2541 |                                 } while (j);                           
; 2542 |                                 scia_puts("\r\n");                     
; 2543 |                                 ss--;
;     |  // line number, convert to index                                      
; 2545 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2546 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2547 |                                 templg = atol(cmdbuff);                
; 2548 |                                 scia_puts(cmdbuff);                    
; 2549 |                                 scia_puts("\r\n");                     
; 2550 |                                 if (templg == 0) {                     
; 2551 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2552 |                                         break;                         
; 2554 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2555 |                                                 ss + 1, templg);       
; 2556 |                                 scia_puts(buff);                       
; 2557 |                                 unsaved = 1;                           
; 2559 |                                 // update new value                    
; 2560 |                                 DINT;                                  
; 2561 |                                 conf_data.cntperin[ss] = templg;       
; 2562 |                                 ad7738_setcal();                       
; 2563 |                                 velf_rst();                            
; 2564 |                                 EINT;                                  
; 2565 |                                 break;                                 
; 2567 |                         break;                                         
; 2569 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2570 |                         // Display command
;     |                                  //                                    
; 2571 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2572 |                 case 'D':                                              
; 2574 |                         if (cmdlen < 2) {                              
; 2575 |                                 goto INVALIDCMD;                       
; 2578 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2580 |                         case 'S':
;     |  // selection                                                          
; 2582 |                                 // line number                         
; 2583 |                                 j = VFD_MAX;                           
; 2584 |                                 do {                                   
; 2585 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2586 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2587 |                                         ss = atoi(cmdbuff);            
; 2588 |                                         scia_puts(cmdbuff);            
; 2589 |                                         if (ss > 0 && ss <= j) {       
; 2590 |                                                 break;
;     |          // valid input line number                                    
; 2592 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2593 |                                 } while (j);                           
; 2594 |                                 scia_puts("\r\n");                     
; 2595 |                                 ss--;
;     |  // line number, convert to index                                      
; 2597 |                                 // what                                
; 2598 |                                 for (j = 0; j < 7; j++) {              
; 2599 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2600 |                                         scia_puts(buff);               
; 2601 |                                         if (j < 6) {                   
; 2602 |                                                 scia_puts(", ");       
; 2605 |                                 scia_puts("\r\n");                     
; 2606 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2607 |                                                 ss + 1);               
; 2608 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2609 |                                 pt = atoi(cmdbuff);                    
; 2610 |                                 if (pt >= 7) {                         
; 2611 |                                         pt = 0;                        
; 2612 |                                         scia_puts(                     
; 2613 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2615 |                                 scia_puts(cmdbuff);                    
; 2616 |                                 scia_puts("\r\n");                     
; 2617 |                                 conf_data.vfd[ss].what = pt;           
; 2619 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2621 |                                 case VFD_LOAD:                         
; 2622 |                                 case VFD_PEAK:                         
; 2623 |                                 case VFD_VALL:                         
; 2625 |                                         j = CHS_MAX;                   
; 2626 |                                         goto VFD_CHANNEL;              
; 2628 |                                 case VFD_POSI:                         
; 2629 |                                 case VFD_VELO:                         
; 2631 |                                         j = ENC_MAX;                   
; 2633 |                                         VFD_CHANNEL:                   
; 2634 |                                         // channel number              
; 2635 |                                         do {                           
; 2636 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2637 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2638 |                                                 ch = atoi(cmdbuff);    
; 2639 |                                                 scia_puts(cmdbuff);    
; 2640 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2641 |                                                         break;
;     |          // valid input channel number                                 
; 2643 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2644 |                                         } while (j);                   
; 2645 |                                         scia_puts("\r\n");             
; 2646 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2647 |                                         conf_data.vfd[ss].ch = ch;     
; 2649 |                                         // digits after decimal point  
; 2650 |                                         j = 1;                         
; 2651 |                                         do {                           
; 2652 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2653 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2654 |                                                 i = atoi(cmdbuff);     
; 2655 |                                                 if (i >= 0 && i <= 5) {
; 2656 |                                                         break;         
; 2658 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2659 |                                         } while (j);                   
; 2660 |                                         scia_puts(cmdbuff);            
; 2661 |                                         scia_puts("\r\n");             
; 2662 |                                         conf_data.vfd[ss].adec = i;    
; 2664 |                                         sprintf(buff,                  
; 2665 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2666 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2667 |                                         scia_puts(buff);               
; 2668 |                                         break;                         
; 2670 |                                 case VFD_LIMIT:                        
; 2671 |                                         // channel number              
; 2672 |                                         j = CHS_MAX;                   
; 2673 |                                         do {                           
; 2674 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2675 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2676 |                                                 ch = atoi(cmdbuff);    
; 2677 |                                                 scia_puts(cmdbuff);    
; 2678 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2679 |                                                         break;
;     |          // valid input channel number                                 
; 2681 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2682 |                                         } while (j);                   
; 2683 |                                         scia_puts("\r\n");             
; 2684 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2685 |                                         conf_data.vfd[ss].ch = ch;     
; 2687 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2688 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2689 |                                         scia_puts(buff);               
; 2690 |                                         break;                         
; 2691 |                                 case VFD_TEMP:                         
; 2692 |                                         // no more info                
; 2693 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2694 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2695 |                                         scia_puts(buff);               
; 2696 |                                         break;                         
; 2699 |                                 lcd_clear();                           
; 2700 |                                 update_units();                        
; 2701 |                                 unsaved = 1;                           
; 2702 |                                 break;                                 
; 2704 |                         default:                                       
; 2705 |                                 goto INVALIDCMD;                       
; 2708 |                         break;                                         
; 2710 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2711 |                         // DAC out command
;     |                                  //                                    
; 2712 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2713 |                 case 'O':                                              
; 2715 |                         if (cmdlen < 2) {                              
; 2716 |                                 goto INVALIDCMD;                       
; 2719 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2721 |                         case 'S':
;     |  // selection                                                          
; 2723 |                                 // DAC channel number                  
; 2724 |                                 j = DAC_MAX;                           
; 2725 |                                 do {                                   
; 2726 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2727 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2728 |                                         ss = atoi(cmdbuff);            
; 2729 |                                         scia_puts(cmdbuff);            
; 2730 |                                         if (ss > 0 && ss <= j) {       
; 2731 |                                                 break;
;     |          // valid input channel number                                 
; 2733 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2734 |                                 } while (j);                           
; 2735 |                                 scia_puts("\r\n");                     
; 2736 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2738 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2739 |                                 for (j = 0; j < 5; j++) {              
; 2740 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2741 |                                         scia_puts(buff);               
; 2742 |                                         scia_puts(", ");               
; 2744 |                                 j = 7;                                 
; 2745 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2746 |                                 scia_puts(buff);                       
; 2747 |                                 scia_puts("\r\n");                     
; 2748 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2749 |                                                 ss + 1);               
; 2750 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2751 |                                 pt = atoi(cmdbuff);                    
; 2752 |                                 if (pt >= 5 && pt != 7) {              
; 2753 |                                         pt = 0;                        
; 2754 |                                         scia_puts(                     
; 2755 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2757 |                                 scia_puts(cmdbuff);                    
; 2758 |                                 scia_puts("\r\n");                     
; 2759 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2761 |                                 if ( VFD_VOLT != pt) {                 
; 2763 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2764 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2765 |                                                 j = CHS_MAX;           
; 2766 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2767 |                                                 j = ENC_MAX;           
; 2770 |                                         // linked load/... channel numb
;     | er                                                                     
; 2771 |                                         do {                           
; 2772 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2773 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2774 |                                                 ch = atoi(cmdbuff);    
; 2775 |                                                 scia_puts(cmdbuff);    
; 2776 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2777 |                                                         break;
;     |          // valid input channel number                                 
; 2779 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2780 |                                         } while (j);                   
; 2781 |                                         scia_puts("\r\n");             
; 2782 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2783 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2785 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2786 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2787 |                                                 // gain                
; 2788 |                                                 if ( VFD_POSI == pt) { 
; 2789 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2790 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2791 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2793 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2794 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2795 |                                                 scia_puts(cmdbuff);    
; 2796 |                                                 scia_puts("\r\n");     
; 2798 |                                                 // offset              
; 2799 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2800 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2801 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2802 |                                                 scia_puts(cmdbuff);    
; 2803 |                                                 scia_puts("\r\n");     
; 2807 |                                 unsaved = 1;                           
; 2809 |                                 // print result                        
; 2810 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2811 |                                                 LPV[pt]);              
; 2812 |                                 scia_puts(buff);                       
; 2814 |                                 if ( VFD_VOLT == pt) {                 
; 2815 |                                         scia_puts("\r\n");             
; 2816 |                                 } else {                               
; 2817 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2818 |                                         scia_puts(buff);               
; 2820 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2821 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2822 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2823 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2824 |                                                 scia_puts(buff);       
; 2828 |                                 DINT;                                  
; 2829 |                                 ad7738_setcal();                       
; 2830 |                                 EINT;                                  
; 2831 |                                 break;                                 
; 2833 |                         case 'D':
;     |  // direct voltage output                                              
; 2835 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2836 |                                                 || 'V' != cmdbuff[3]) {
; 2837 |                                         goto INVALIDCMD;               
; 2840 |                                 // channel index                       
; 2841 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2842 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2843 |                                         goto INVALIDCMD;               
; 2844 |                                         // invalid channel number      
; 2846 |                                 ss--;
;     |  // change to zero based index                                         
; 2848 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2849 |                                         goto INVALIDCMD;               
; 2850 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2853 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2854 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2855 |                                         goto INVALIDCMD;               
; 2856 |                                         // invalid voltage             
; 2859 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2860 |                                 if (volt[0] < 0) {                     
; 2861 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2862 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2863 |                                 } else {                               
; 2864 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2865 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2868 |                                 if (dsum[0] <= 0) {                    
; 2869 |                                         dacc[0] = 0;                   
; 2870 |                                 } else if (dsum[0] >= 0xffff) {        
; 2871 |                                         dacc[0] = 0xffff;              
; 2872 |                                 } else {                               
; 2873 |                                         dacc[0] = (Uint16) dsum[0];    
; 2876 |                                 mcbsp_xmit(dacc[0], ss);               
; 2877 |                                 latch_dac();                           
; 2879 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2880 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2881 |                                 scia_puts(buff);                       
; 2883 |                                 break;                                 
; 2885 |                         default:                                       
; 2886 |                                 goto INVALIDCMD;                       
; 2889 |                         break;                                         
; 2891 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2892 |                         // LIMIT command
;     |                                          //                            
; 2893 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2894 |                 case 'L':                                              
; 2896 |                         if (cmdlen < 2) {                              
; 2897 |                                 goto INVALIDCMD;                       
; 2900 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2902 |                         case 'S':
;     |  // selection                                                          
; 2904 |                                 // LIMIT channel number                
; 2905 |                                 j = LIM_MAX;                           
; 2906 |                                 do {                                   
; 2907 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2908 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2909 |                                         ss = atoi(cmdbuff);            
; 2910 |                                         scia_puts(cmdbuff);            
; 2911 |                                         if (ss > 0 && ss <= j) {       
; 2912 |                                                 break;
;     |          // valid input channel number                                 
; 2914 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2915 |                                 } while (j);                           
; 2916 |                                 scia_puts("\r\n");                     
; 2917 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2919 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2920 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2921 |                                 scia_puts(cmdbuff);                    
; 2922 |                                 scia_puts("\r\n");                     
; 2924 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2926 |                                         // set on flag                 
; 2927 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2929 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2930 |                                         for (j = 0; j < 5; j++) {      
; 2931 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2932 |                                                 scia_puts(buff);       
; 2933 |                                                 if (j < 4) {           
; 2934 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2937 |                                         scia_puts("\r\n");             
; 2938 |                                         sprintf(buff,                  
; 2939 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2940 |                                                         ss + 1);       
; 2941 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2942 |                                         pt = atoi(cmdbuff);            
; 2943 |                                         if (pt >= 5) {                 
; 2944 |                                                 pt = 0;                
; 2945 |                                                 scia_puts(             
; 2946 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2948 |                                         scia_puts(cmdbuff);            
; 2949 |                                         scia_puts("\r\n");             
; 2950 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2952 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2953 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2954 |                                                 j = CHS_MAX;           
; 2955 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2956 |                                                 j = ENC_MAX;           
; 2959 |                                         // linked load/... channel numb
;     | er                                                                     
; 2960 |                                         do {                           
; 2961 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2962 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2963 |                                                 ch = atoi(cmdbuff);    
; 2964 |                                                 scia_puts(cmdbuff);    
; 2965 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2966 |                                                         break;
;     |          // valid input channel number                                 
; 2968 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2969 |                                         } while (j);                   
; 2970 |                                         scia_puts("\r\n");             
; 2971 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2972 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2974 |                                         // NO/NC                       
; 2975 |                                         scia_getparam(                 
; 2976 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2977 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2978 |                                         scia_puts(cmdbuff);            
; 2979 |                                         scia_puts("\r\n");             
; 2981 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2983 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2984 |                                         } else {                       
; 2985 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2988 |                                         scia_getparam(                 
; 2989 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2990 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2991 |                                         scia_puts(cmdbuff);            
; 2992 |                                         scia_puts("\r\n");             
; 2994 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2996 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2997 |                                         } else {                       
; 2998 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 3001 |                                         scia_getparam(                 
; 3002 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 3003 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3004 |                                         scia_puts(cmdbuff);            
; 3005 |                                         scia_puts("\r\n");             
; 3007 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 3009 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 3010 |                                         } else {                       
; 3011 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 3014 |                                         // unit (output)               
; 3015 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 3016 |                                         case VFD_LOAD:                 
; 3017 |                                         case VFD_PEAK:                 
; 3018 |                                         case VFD_VALL:                 
; 3019 |                                                 ccp =                  
; 3020 |                                                                 UNITS[0
;     | x0f                                                                    
; 3021 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 3022 |                                                 break;                 
; 3023 |                                         case VFD_POSI:                 
; 3024 |                                                 ccp = POS_U;           
; 3025 |                                                 break;                 
; 3026 |                                         case VFD_VELO:                 
; 3027 |                                                 ccp = VEL_U;           
; 3028 |                                                 break;                 
; 3031 |                                         // set value                   
; 3032 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 3033 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3034 |                                         scia_puts(cmdbuff);            
; 3035 |                                         scia_puts("\r\n");             
; 3037 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3038 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3039 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3041 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3042 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3043 |                                         scia_puts(cmdbuff);            
; 3044 |                                         scia_puts("\r\n");             
; 3046 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3047 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3048 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3049 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3051 |                                         // print result                
; 3052 |                                         sprintf(buff,                  
; 3053 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3054 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3055 |                                         scia_puts(buff);               
; 3057 |                                         sprintf(buff,                  
; 3058 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3059 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3060 | 
;     |  "NC" : "NO",                                                          
; 3061 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3062 | 
;     |  "ON" : "OFF",                                                         
; 3063 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3064 |                                         scia_puts(buff);               
; 3065 |                                         sprintf(buff,                  
; 3066 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3067 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3068 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3069 |                                         scia_puts(buff);               
; 3071 |                                 } else
;     |  // turn off                                                           
; 3073 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3074 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3077 |                                 unsaved = 1;                           
; 3079 |                                 DINT;                                  
; 3080 |                                 ad7738_setcal();                       
; 3081 |                                 EINT;                                  
; 3082 |                                 break;                                 
; 3084 |                         default:                                       
; 3085 |                                 goto INVALIDCMD;                       
; 3088 |                         break;                                         
; 3090 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3091 |                         // reset commands
;     |                                          //                            
; 3092 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3093 |                 case 'R':                                              
; 3095 |                         if (cmdlen < 2) {                              
; 3096 |                                 goto INVALIDCMD;                       
; 3099 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3101 |                         case 'T':
;     |  // tare                                                               
; 3103 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3104 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3105 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3106 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3107 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3108 |                                 } else {                               
; 3109 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3110 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3111 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3113 |                                 break;                                 
; 3115 |                         case 'P':
;     |  // peak                                                               
; 3117 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3118 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3119 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3120 |                                 } else {                               
; 3121 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3123 |                                 break;                                 
; 3125 |                         case 'V':
;     |  // valley                                                             
; 3127 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3128 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3129 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3130 |                                 } else {                               
; 3131 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3133 |                                 break;                                 
; 3135 |                         case 'S':
;     |  // shunt switch                                                       
; 3137 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3138 |                                         shunt_switch(1);               
; 3139 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3140 |                                 } else {                               
; 3141 |                                         shunt_switch(0);               
; 3142 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3144 |                                 break;                                 
; 3146 |                         case 'L':
;     |  // limit                                                              
; 3148 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3149 |                                 ch--;                                  
; 3151 |                                 ad7738_resetlimit(ch);                 
; 3152 |                                 break;                                 
; 3154 |                         case 'I':
;     |  // posItion                                                           
; 3156 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3157 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3158 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3159 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3160 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3161 |                                 } else {                               
; 3162 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3163 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3164 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3166 |                                 break;                                 
; 3168 |                         default:                                       
; 3169 |                                 goto INVALIDCMD;                       
; 3171 |                         break;                                         
; 3173 | #ifdef SDHCCARD                                                        
; 3175 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3176 |                         // Stream to SD Card
;     |                                  //                                    
; 3177 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3178 |                         case 'W':// Write control                      
; 3180 |                         if( cmdlen < 2 )                               
; 3182 |                                 goto INVALIDCMD;                       
; 3185 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3187 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3189 |                                 if( cmdlen < 3 )                       
; 3191 |                                         goto INVALIDCMD;               
; 3194 |                                 if( sd_write )                         
; 3196 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3197 |                                         break;                         
; 3200 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3201 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3203 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3205 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3206 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3208 |                                 if( !res )                             
; 3210 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3211 |                                         if( res || cmdlen != temp16 )  
; 3213 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3214 |                                                 scia_puts( buff );     
; 3215 |                                                 f_close( fp );         
; 3216 |                                                 fp = NULL;             
; 3217 |                                                 break;                 
; 3234 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3236 |                                         if( res )                      
; 3238 |                                                 f_close( fp );         
; 3239 |                                                 fp = NULL;             
; 3240 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3241 |                                                 break;                 
; 3244 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3245 |                                         scia_puts( buff );             
; 3247 |                                         prod_init();                   
; 3248 |                                         sd_write = 1;                  
; 3249 |                                         sd_cnt = 0;                    
; 3250 |                                         break;                         
; 3253 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3254 |                                 scia_puts( buff );                     
; 3255 |                                 break;                                 
; 3257 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3259 |                                 if( sd_write )                         
; 3261 |                                         sd_close = 1;                  
; 3262 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3263 |                                         break;                         
; 3265 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3266 |                                 break;                                 
; 3268 |                                 case 'L':
;     |          // list files                                                 
; 3270 |                                 if( sd_write )                         
; 3272 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3273 |                                         break;                         
; 3276 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3277 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3279 |                                 res = f_opendir(&dir, "0:");           
; 3280 |                                 if (res)                               
; 3282 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3283 |                                         scia_puts( buff );             
; 3284 |                                         break;                         
; 3287 |                                 p1 = s1 = s2 = 0;                      
; 3288 |                                 for(;;)                                
; 3290 |                                         res = f_readdir(&dir, &Finfo); 
; 3291 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3292 |                                         break;                         
; 3293 |                                         if (Finfo.fattrib & AM_DIR)    
; 3295 |                                                 s2++;                  
; 3297 |                                         else                           
; 3299 |                                                 s1++;                  
; 3300 |                                                 p1 += Finfo.fsize;     
; 3302 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3303 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3304 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3305 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3306 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3307 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3308 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3309 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3310 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3311 |                                         scia_puts( buff );             
; 3313 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3314 |                                 scia_puts( buff );                     
; 3315 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3317 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3318 |                                         scia_puts( buff );             
; 3320 |                                 break;                                 
; 3322 |                                 case 'G':
;     |          // get a file                                                 
; 3324 |                                 if( sd_write )                         
; 3326 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3327 |                                         break;                         
; 3330 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3331 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3333 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3335 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3336 |                                 res = f_open( fp, buff, FA_READ );     
; 3337 |                                 if (res)                               
; 3339 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3340 |                                         scia_puts( buff );             
; 3341 |                                         break;                         
; 3344 |                                 do                                     
; 3346 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3347 |                                         scia_send( buff, temp16 );     
; 3348 |                                 }while( !res && temp16 == 512 );       
; 3350 |                                 f_close( fp );                         
; 3351 |                                 fp = NULL;                             
; 3352 |                                 break;                                 
; 3354 |                                 case 'R':
;     |          // remove a file                                              
; 3356 |                                 if( sd_write )                         
; 3358 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3359 |                                         break;                         
; 3362 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3363 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3365 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3367 |                                 res = f_unlink( buff );                
; 3369 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3370 |                                 scia_puts( buff );                     
; 3371 |                                 break;                                 
; 3373 |                                 default:                               
; 3374 |                                 goto INVALIDCMD;                       
; 3377 |                         break;                                         
; 3378 | #endif                                                                 
; 3380 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3381 |                         // Flash memory access commands
;     |                                    //                                  
; 3382 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3383 |                 case 'F':                                       // flas
;     | h access                                                               
; 3385 |                         if (cmdlen < 2) {                              
; 3386 |                                 goto INVALIDCMD;                       
; 3389 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3391 |                         case 'W':
;     |  // write flash                                                        
; 3393 |                                 if (unsaved) {                         
; 3394 |                                         // flash writing               
; 3395 |                                         lcd_clear();                   
; 3396 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3397 |                                         scia_puts("Flash writing..."); 
; 3399 |                                         for (i = 0; i < 50; i++) {     
; 3400 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3403 |                                         DINT;                          
; 3404 |                                         flash_ret = conf_write();      
; 3405 |                                         EINT;                          
; 3407 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3408 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3409 |                                                 unsaved = 0;           
; 3410 |                                         } else {                       
; 3411 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3413 |                                         lcd_clear();                   
; 3414 |                                         update_units();                
; 3415 |                                         break;                         
; 3417 |                                 scia_puts(                             
; 3418 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3419 |                                 break;                                 
; 3421 |                         case 'R':
;     |  // read flash                                                         
; 3423 |                                 // flash reading                       
; 3424 |                                 conf_read();                           
; 3426 |                                 DINT;                                  
; 3427 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3428 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3429 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3430 |                                 EINT;                                  
; 3432 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3433 |                                 unsaved = 0;                           
; 3435 |                                 update_units();                        
; 3437 |                                 break;                                 
; 3439 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3441 |                                 conf_default();                        
; 3443 |                                 // flash writing                       
; 3444 |                                 lcd_clear();                           
; 3445 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3446 |                                 scia_puts("Flash write...");           
; 3448 |                                 for (i = 0; i < 50; i++) {             
; 3449 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3452 |                                 DINT;                                  
; 3453 |                                 flash_ret = conf_write();              
; 3454 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3455 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3456 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3457 |                                 EINT;                                  
; 3459 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3460 |                                         scia_puts(                     
; 3461 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3462 |                                         unsaved = 0;                   
; 3463 |                                 } else {                               
; 3464 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3466 |                                 lcd_clear();                           
; 3467 |                                 update_units();                        
; 3468 |                                 break;                                 
; 3470 |                         default:                                       
; 3471 |                                 goto INVALIDCMD;                       
; 3474 |                         break;                                         
; 3476 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3477 |                         // Help manu
;     |                                  //                                    
; 3478 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3479 |                 case 'H':                               // help menu   
; 3481 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3483 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3484 |                         scia_puts(                                     
; 3485 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3486 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3487 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3488 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3489 |                         scia_puts("\r\n");                             
; 3491 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3492 |                         scia_puts("UN          Set unit name.\r\n");   
; 3493 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3494 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3495 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3496 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3497 |                         scia_puts("\r\n");                             
; 3499 |                         scia_puts(                                     
; 3500 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3501 |                         scia_puts(                                     
; 3502 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3503 |                         scia_puts("\r\n");                             
; 3505 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3506 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3507 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3508 |                         scia_puts("\r\n");                             
; 3510 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3511 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3512 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3513 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3514 |                         scia_puts("\r\n");                             
; 3516 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3517 |                         scia_puts(                                     
; 3518 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3519 |                         scia_puts("\r\n");                             
; 3521 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3522 |                         scia_puts("\r\n");                             
; 3524 |                         scia_puts(                                     
; 3525 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3526 |                         scia_puts(                                     
; 3527 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3528 |                         scia_puts("\r\n");                             
; 3530 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3531 |                         scia_puts("\r\n");                             
; 3533 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3534 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3535 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3536 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3537 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3538 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3539 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3540 |                         scia_puts("\r\n");                             
; 3542 | #ifdef SDHCCARD                                                        
; 3543 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3544 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3545 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3546 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3547 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3548 |                         scia_puts( "\r\n" );                           
; 3549 | #endif                                                                 
; 3551 |                         scia_puts(                                     
; 3552 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3553 |                         scia_puts(                                     
; 3554 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3555 |                         scia_puts(                                     
; 3556 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3557 |                         scia_puts("\r\n");                             
; 3559 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3561 |                         // not implemented                             
; 3562 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3564 |                         scia_puts("\r\n");                             
; 3566 |                         break;                                         
; 3568 |                 case 'X':                                              
; 3570 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3572 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3574 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3577 |                         cmd_mode = SCI_MODE_BIN;                       
; 3578 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3580 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3582 |                         break;                                         
; 3584 |                 case 'Z':                                              
; 3586 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3588 |                         for (i = 0; i < 100; i++)       // 2s          
; 3590 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3593 |                         reboot();                                      
; 3594 |                         break;                                         
; 3618 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3619 |                         // Invalid commands
;     |                                  //                                    
; 3620 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3621 |                 default:                                               
; 3623 |                         INVALIDCMD:                                    
; 3625 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3626 |                         scia_puts(cmdbuff);                            
; 3627 |                         scia_puts("\", ignored.\r\n");                 
; 3628 |                         break;                                         
; 3630 |                 } // switch on 1st byte                                
; 3632 |                 if (unsaved) {                                         
; 3633 |                         scia_puts(                                     
; 3634 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3637 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3638 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3639 |                 // BIN command mode processing
;     |                          //                                            
; 3640 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3642 |                 // ------------------------------------------------    
; 3643 |                 // DEBUG: put received command on LCD                  
; 3652 |                 // ------------------------------------------------    
; 3653 |                 if (cmdlen < 2) {                                      
; 3654 |                         // INVALID COMMAND, less than 2 byte           
; 3655 |                         // may need to send NACK back                  
; 3656 |                         continue;                                      
; 3659 |                 for (i = 0; i < 2; i++) {                              
; 3660 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3663 |                 j = 2;                                  // buff length 
; 3664 |                 bincmdresult = Error_UnImpl;                           
; 3666 |                 // DEBUG, sending the command back                     
; 3667 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3669 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3671 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3674 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3789 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3791 |                 case CheckAddress:                                     
; 3793 |                         buff[j++] = 0;                                 
; 3794 |                         bincmdresult = OK_SendResult;                  
; 3795 |                         break;                                         
; 3797 |                 case SetAddress:                                       
; 3799 |                         buff[j] = cmdbuff[j];                          
; 3800 |                         j++;                                           
; 3801 |                         bincmdresult = OK_SendResult;                  
; 3802 |                         break;                                         
; 3804 |                 case RemoveAddress:                                    
; 3806 |                         buff[j] = cmdbuff[j];                          
; 3807 |                         j++;                                           
; 3808 |                         bincmdresult = OK_SendResult;                  
; 3809 |                         break;                                         
; 3811 |                 case GetUnitInfo:                                      
; 3813 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3814 |                         for (i = 0; i < 2; i++) {                      
; 3815 |                                 buff[j++] = 0xff & *intp;              
; 3816 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3817 |                                 intp++;                                
; 3820 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3821 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3823 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3824 |                         for (i = 0; i < 2; i++) {                      
; 3825 |                                 buff[j++] = 0xff & *intp;              
; 3826 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3827 |                                 intp++;                                
; 3830 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3831 |                         buff[j++] = slen;                              
; 3832 |                         for (i = 0; i < slen; i++) {                   
; 3833 |                                 buff[j++] = conf_data.uname[i]; // name
; 3835 |                         bincmdresult = OK_SendResult;                  
; 3837 |                         break;                                         
; 3839 |                 case SetUnitSN:                                        
; 3841 |                         if (cmdlen < 6) {                              
; 3842 |                                 bincmdresult = Error_Invalid;          
; 3843 |                                 break;                                 
; 3846 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3847 |                         for (i = 0; i < 2; i++) {                      
; 3848 |                                 *intp = cmdbuff[j];                    
; 3849 |                                 buff[j++] = 0xff & *intp;              
; 3850 |                                 *intp += cmdbuff[j] << 8;              
; 3851 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3852 |                                 intp++;                                
; 3854 |                         unsaved = 1;                                   
; 3856 |                         bincmdresult = OK_SendResult;                  
; 3857 |                         break;                                         
; 3859 |                 case SetUnitName:                                      
; 3861 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3862 |                                 bincmdresult = Error_Invalid;          
; 3863 |                                 break;                                 
; 3866 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3867 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3869 |                         conf_data.uname[i] = '\0';                     
; 3870 |                         unsaved = 1;                                   
; 3872 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3873 |                         buff[j++] = slen;                              
; 3874 |                         for (i = 0; i < slen; i++) {                   
; 3875 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3877 |                         bincmdresult = OK_SendResult;                  
; 3878 |                         break;                                         
; 3880 |                 case GetInterface:                                     
; 3882 |                         buff[j++] = conf_data.rxdir;                   
; 3884 |                         if (conf_data.rxdir == SDIR_RS485              
; 3885 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3886 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3887 |                                 for (i = 0; i < 2; i++) {              
; 3888 |                                         buff[j++] = 0xff & *intp;      
; 3889 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3890 |                                         intp++;                        
; 3893 |                         bincmdresult = OK_SendResult;                  
; 3894 |                         break;                                         
; 3896 |                 case SetInterface:                                     
; 3898 |                         if (cmdlen < 3) {                              
; 3899 |                                 bincmdresult = Error_Invalid;          
; 3900 |                                 break;                                 
; 3902 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3903 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3904 |                                 bincmdresult = Error_Invalid;          
; 3905 |                                 break;                                 
; 3908 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3909 |                                 if (cmdlen < 7) {                      
; 3910 |                                         bincmdresult = Error_Invalid;  
; 3911 |                                         break;                         
; 3914 |                                 temp32 = 0;                            
; 3915 |                                 for (k = 6; k > 2; k--) {              
; 3916 |                                         temp32 += cmdbuff[k];          
; 3917 |                                         temp32 <<= 8;                  
; 3920 |                                 for (i = 0; i < 8; i++) {              
; 3921 |                                         if (temp32 == BAUD[i]) {       
; 3922 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3923 |                                                 break;                 
; 3926 |                                 if (i == 8) {                          
; 3927 |                                         bincmdresult = Error_Invalid;  
; 3928 |                                         break;                         
; 3932 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3934 |                         while (j < cmdlen) {                           
; 3935 |                                 buff[j] = cmdbuff[j];                  
; 3936 |                                 j++;                                   
; 3938 |                         unsaved = 1;                                   
; 3939 |                         bincmdresult = OK_SendResult;                  
; 3940 |                         break;                                         
; 3942 |                 case GetChannel:                                       
; 3944 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3945 |                                 bincmdresult = Error_Invalid;          
; 3946 |                                 break;                                 
; 3948 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3950 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3952 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3954 |                                 buff[j++] = 0;                         
; 3957 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3958 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3960 |                                 buff[j++] = 0xff & *intp;              
; 3961 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3962 |                                 intp++;                                
; 3965 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3966 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3968 |                                 buff[j++] = 0xff & *intp;              
; 3969 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3970 |                                 intp++;                                
; 3973 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3974 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3976 |                                 buff[j++] = 0xff & *intp;              
; 3977 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3978 |                                 intp++;                                
; 3981 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3982 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3984 |                                 buff[j++] = 0xff & *intp;              
; 3985 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3986 |                                 intp++;                                
; 3989 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3990 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3992 |                                 buff[j++] = 0xff & *intp;              
; 3993 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3994 |                                 intp++;                                
; 3997 |                         bincmdresult = OK_SendResult;                  
; 3998 |                         break;                                         
; 4000 |                 case GetSensor:                                        
; 4002 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4003 |                                 bincmdresult = Error_Invalid;          
; 4004 |                                 break;                                 
; 4006 |                         ss = cmdbuff[2];                               
; 4007 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4009 |                         // sensor serial name                          
; 4010 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 4011 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4012 |                         for (i = 0; i < slen; i++) {                   
; 4013 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 4016 |                         // sensor name/label                           
; 4017 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4018 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4019 |                         for (i = 0; i < slen; i++) {                   
; 4020 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4023 |                         // TAGID                                       
; 4024 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 4025 |                         for (i = 0; i < 4; i++) {                      
; 4026 |                                 buff[j++] = 0xff & *intp;              
; 4027 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4028 |                                 intp++;                                
; 4031 |                         // Method                                      
; 4032 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4034 |                         // Date                                        
; 4035 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4036 |                         for (i = 0; i < 2; i++) {                      
; 4037 |                                 buff[j++] = 0xff & *intp;              
; 4038 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4039 |                                 intp++;                                
; 4042 |                         // Range                                       
; 4043 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4044 |                         for (i = 0; i < 2; i++) {                      
; 4045 |                                 buff[j++] = 0xff & *intp;              
; 4046 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4047 |                                 intp++;                                
; 4050 |                         // Unit                                        
; 4051 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4053 |                         // Output Unit                                 
; 4054 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4056 |                         // Unit Factor                                 
; 4057 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4058 |                         for (i = 0; i < 2; i++) {                      
; 4059 |                                 buff[j++] = 0xff & *intp;              
; 4060 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4061 |                                 intp++;                                
; 4064 |                         // calibration points.                         
; 4065 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4066 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4067 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4068 |                                         // mass point                  
; 4069 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4070 |                                         for (i = 0; i < 2; i++) {      
; 4071 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4072 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4073 |                                                 intp++;                
; 4075 |                                         // adc counts point            
; 4076 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4077 |                                         for (i = 0; i < 2; i++) {      
; 4078 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4079 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4080 |                                                 intp++;                
; 4084 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4085 |                                         // slope point                 
; 4086 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4087 |                                         for (i = 0; i < 2; i++) {      
; 4088 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4089 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4090 |                                                 intp++;                
; 4092 |                                         // intercept point             
; 4093 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4094 |                                         for (i = 0; i < 2; i++) {      
; 4095 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4096 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4097 |                                                 intp++;                
; 4100 |                         } else {                                       
; 4101 |                                 buff[j++] = 0;                         
; 4102 |                                 // slope                               
; 4103 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4104 |                                 for (i = 0; i < 2; i++) {              
; 4105 |                                         buff[j++] = 0xff & *intp;      
; 4106 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4107 |                                         intp++;                        
; 4109 |                                 // intercept                           
; 4110 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4111 |                                 for (i = 0; i < 2; i++) {              
; 4112 |                                         buff[j++] = 0xff & *intp;      
; 4113 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4114 |                                         intp++;                        
; 4118 |                         // shunt                                       
; 4119 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4120 |                         for (i = 0; i < 2; i++) {                      
; 4121 |                                 buff[j++] = 0xff & *intp;              
; 4122 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4123 |                                 intp++;                                
; 4126 |                         // base                                        
; 4127 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4128 |                         for (i = 0; i < 2; i++) {                      
; 4129 |                                 buff[j++] = 0xff & *intp;              
; 4130 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4131 |                                 intp++;                                
; 4134 |                         // DAC calibration gain                        
; 4135 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4136 |                         for (i = 0; i < 2; i++) {                      
; 4137 |                                 buff[j++] = 0xff & *intp;              
; 4138 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4139 |                                 intp++;                                
; 4142 |                         // DAC calibration offset                      
; 4143 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4144 |                         for (i = 0; i < 2; i++) {                      
; 4145 |                                 buff[j++] = 0xff & *intp;              
; 4146 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4147 |                                 intp++;                                
; 4150 |                         // channel calibrated on                       
; 4151 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4153 |                         bincmdresult = OK_SendResult;                  
; 4154 |                         break;                                         
; 4156 |                 case GetQEPChannels:                                   
; 4158 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4159 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4160 |                                 for (i = 0; i < 2; i++) {              
; 4161 |                                         buff[j++] = 0xff & *intp;      
; 4162 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4163 |                                         intp++;                        
; 4167 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4168 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4170 |                         bincmdresult = OK_SendResult;                  
; 4171 |                         break;                                         
; 4173 |                 case GetCurSensor:                                     
; 4175 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4176 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4179 |                         bincmdresult = OK_SendResult;                  
; 4180 |                         break;                                         
; 4182 |                 case GetAFilterSize:                                   
; 4184 |                         // filter size                                 
; 4185 |                         intp = (Uint16*) &conf_data.filter;            
; 4186 |                         buff[j++] = 0xff & *intp;                      
; 4187 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4188 |                         // filter window                               
; 4189 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4190 |                         for (i = 0; i < 2; i++) {                      
; 4191 |                                 buff[j++] = 0xff & *intp;              
; 4192 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4193 |                                 intp++;                                
; 4195 |                         bincmdresult = OK_SendResult;                  
; 4196 |                         break;                                         
; 4198 |                 case GetAutoId:                                        
; 4200 |                         buff[j++] = conf_data.tagiden;                 
; 4201 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4202 |                                 buff[j++] = autoid[i];                 
; 4204 |                         bincmdresult = OK_SendResult;                  
; 4205 |                         break;                                         
; 4207 |                 case GetDisplay:                                       
; 4209 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4210 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4211 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4212 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4214 |                         bincmdresult = OK_SendResult;                  
; 4215 |                         break;                                         
; 4217 |                 case GetDAC:                                           
; 4219 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4220 |                                 buff[j++] = conf_data.dac[i].what;     
; 4221 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4223 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4224 |                                 //{                                    
; 4225 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4226 |                                 //}                                    
; 4227 |                                 //else                                 
; 4228 |                                 //{                                    
; 4229 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4230 |                                 //}                                    
; 4231 |                                 for (k = 0; k < 2; k++) {              
; 4232 |                                         buff[j++] = 0xff & *intp;      
; 4233 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4234 |                                         intp++;                        
; 4236 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4237 |                                 //{                                    
; 4238 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4239 |                                 //}                                    
; 4240 |                                 //else                                 
; 4241 |                                 //{                                    
; 4242 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4243 |                                 //}                                    
; 4244 |                                 for (k = 0; k < 2; k++) {              
; 4245 |                                         buff[j++] = 0xff & *intp;      
; 4246 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4247 |                                         intp++;                        
; 4249 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4250 |                                 for (k = 0; k < 2; k++) {              
; 4251 |                                         buff[j++] = 0xff & *intp;      
; 4252 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4253 |                                         intp++;                        
; 4255 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4256 |                                 for (k = 0; k < 2; k++) {              
; 4257 |                                         buff[j++] = 0xff & *intp;      
; 4258 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4259 |                                         intp++;                        
; 4261 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4262 |                                 for (k = 0; k < 2; k++) {              
; 4263 |                                         buff[j++] = 0xff & *intp;      
; 4264 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4265 |                                         intp++;                        
; 4268 |                         bincmdresult = OK_SendResult;                  
; 4269 |                         break;                                         
; 4271 |                 case GetLIMIT:                                         
; 4273 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4274 |                                 buff[j++] = conf_data.lim[i].what;     
; 4275 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4276 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4278 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4279 |                                 for (k = 0; k < 2; k++) {              
; 4280 |                                         buff[j++] = 0xff & *intp;      
; 4281 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4282 |                                         intp++;                        
; 4284 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4285 |                                 for (k = 0; k < 2; k++) {              
; 4286 |                                         buff[j++] = 0xff & *intp;      
; 4287 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4288 |                                         intp++;                        
; 4291 |                         bincmdresult = OK_SendResult;                  
; 4292 |                         break;                                         
; 4294 |                 case GetLIMITStatus:                                   
; 4296 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4297 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4299 |                         bincmdresult = OK_SendResult;                  
; 4300 |                         break;                                         
; 4302 |                         // Heat Cal commands.                          
; 4303 |                 case GetTCLoadA:                                       
; 4304 |                 case GetTCLoadB:                                       
; 4305 |                 case GetTCLoadC:                                       
; 4306 |                 case GetTCLoadD:                                       
; 4308 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4309 |                         intp = (Uint16*) &temp16;                      
; 4310 |                         buff[j++] = 0xff & *intp;                      
; 4311 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4313 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4314 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4315 |                         intp = (Uint16*) &templg;                      
; 4316 |                         for (i = 0; i < 2; i++) {                      
; 4317 |                                 buff[j++] = 0xff & *intp;              
; 4318 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4319 |                                 intp++;                                
; 4321 |                         bincmdresult = OK_SendResult;                  
; 4322 |                         break;                                         
; 4324 |                 case GetTCTemp:                                        
; 4326 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4327 |                         intp = (Uint16*) &temp16;                      
; 4328 |                         buff[j++] = 0xff & *intp;                      
; 4329 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4330 |                         bincmdresult = OK_SendResult;                  
; 4331 |                         break;                                         
; 4333 |                 case GetTCStatus:                                      
; 4335 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4336 |                         for (i = 0; i < 2; i++) {                      
; 4337 |                                 buff[j++] = 0xff & *intp;              
; 4338 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4339 |                                 intp++;                                
; 4342 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4343 |                                 temp16 = 0x80;                         
; 4344 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4345 |                                         temp16 |= 0x01;                
; 4347 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4348 |                                         temp16 |= 0x02;                
; 4350 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4351 |                                         temp16 |= 0x04;                
; 4353 |                                 buff[j++] = 0xff & temp16;             
; 4355 |                         bincmdresult = OK_SendResult;                  
; 4356 |                         break;                                         
; 4358 |                 case GetTCParam:                                       
; 4360 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4361 |                                 bincmdresult = Error_Invalid;          
; 4362 |                                 break;                                 
; 4365 |                         ch = cmdbuff[2];                               
; 4366 |                         buff[j++] = ch;                                
; 4368 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4369 |                         for (k = 0; k < 2; k++) {                      
; 4370 |                                 buff[j++] = 0xff & *intp;              
; 4371 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4372 |                                 intp++;                                
; 4374 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4375 |                         for (k = 0; k < 2; k++) {                      
; 4376 |                                 buff[j++] = 0xff & *intp;              
; 4377 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4378 |                                 intp++;                                
; 4380 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4381 |                         for (k = 0; k < 2; k++) {                      
; 4382 |                                 buff[j++] = 0xff & *intp;              
; 4383 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4384 |                                 intp++;                                
; 4386 |                         bincmdresult = OK_SendResult;                  
; 4387 |                         break;                                         
; 4389 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4390 | #if 1                                                                  
; 4391 |                 case Open_SSR_IN1:                                     
; 4392 |                         ssr_set(0, SSR_OPEN);                          
; 4393 |                         break;                                         
; 4395 |                 case Close_SSR_IN1:                                    
; 4396 |                         ssr_set(0, SSR_CLOSE);                         
; 4397 |                         break;                                         
; 4398 | #endif                                                                 
; 4400 |                 case SetTCParam:                                       
; 4402 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4403 |                                 bincmdresult = Error_Invalid;          
; 4404 |                                 break;                                 
; 4407 |                         ch = cmdbuff[2];                               
; 4408 |                         buff[j++] = ch;                                
; 4410 |                         k = 3;                                         
; 4411 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4412 |                         for (i = 0; i < 2; i++) {                      
; 4413 |                                 *intp = cmdbuff[k++];                  
; 4414 |                                 *intp += cmdbuff[k++] << 8;            
; 4415 |                                 intp++;                                
; 4417 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4418 |                         for (i = 0; i < 2; i++) {                      
; 4419 |                                 *intp = cmdbuff[k++];                  
; 4420 |                                 *intp += cmdbuff[k++] << 8;            
; 4421 |                                 intp++;                                
; 4423 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4424 |                         for (i = 0; i < 2; i++) {                      
; 4425 |                                 *intp = cmdbuff[k++];                  
; 4426 |                                 *intp += cmdbuff[k++] << 8;            
; 4427 |                                 intp++;                                
; 4430 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4431 |                         for (k = 0; k < 2; k++) {                      
; 4432 |                                 buff[j++] = 0xff & *intp;              
; 4433 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4434 |                                 intp++;                                
; 4436 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4437 |                         for (k = 0; k < 2; k++) {                      
; 4438 |                                 buff[j++] = 0xff & *intp;              
; 4439 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4440 |                                 intp++;                                
; 4442 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4443 |                         for (k = 0; k < 2; k++) {                      
; 4444 |                                 buff[j++] = 0xff & *intp;              
; 4445 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4446 |                                 intp++;                                
; 4448 |                         unsaved = 1;                                   
; 4449 |                         bincmdresult = OK_SendResult;                  
; 4450 |                         break;                                         
; 4452 |                 case SetBCalParam:                                     
; 4454 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4455 |                                         || cmdbuff[3] != 2) {          
; 4456 |                                 bincmdresult = Error_Invalid;          
; 4457 |                                 break;                                 
; 4460 |                         ch = cmdbuff[2];                               
; 4461 |                         buff[j++] = ch;                                
; 4462 |                         buff[j] = cmdbuff[j++];                        
; 4464 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4465 |                                 intp = (Uint16*) &volt[k];             
; 4466 |                                 for (i = 0; i < 2; i++) {              
; 4467 |                                         *intp = cmdbuff[j];            
; 4468 |                                         buff[j++] = 0xff & *intp;      
; 4469 |                                         *intp += cmdbuff[j] << 8;      
; 4470 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4471 |                                         intp++;                        
; 4474 |                         bincmdresult = OK_SendResult;                  
; 4475 |                         break;                                         
; 4477 |                 case StartBCRead:                                      
; 4479 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4480 |                                         || cmdbuff[3] >= 2) {          
; 4481 |                                 bincmdresult = Error_Invalid;          
; 4482 |                                 break;                                 
; 4485 |                         k = cmdbuff[3];                                
; 4486 |                         intp = (Uint16*) &tempft;                      
; 4487 |                         for (i = 0; i < 2; i++) {                      
; 4488 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4489 |                                 intp++;                                
; 4491 |                         if (volt[k] != tempft) {                       
; 4492 |                                 bincmdresult = Error_Invalid;          
; 4493 |                                 break;                                 
; 4495 |                         lcd_clear();                                   
; 4496 |                         lcd_puts("Board Calibration...", 0);           
; 4497 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4498 |                         lcd_puts(buff, 20);                            
; 4499 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4500 |                         lcd_puts(buff, 40);                            
; 4501 |                         lcd_puts("Reading ... ", 60);                  
; 4503 |                         dsum[k] = 0;                                   
; 4504 |                         sampcnt = CAL_SAMPLES;                         
; 4505 |                         while (sampcnt--) {                            
; 4506 |                                 while (0 == ad7738_rawrdy()) {         
; 4507 |                                         delay_us(1);
;     |  // wait                                                               
; 4509 |                                 cntp = ad7738_getraw();                
; 4510 |                                 dsum[k] += cntp->adc[ch];              
; 4512 |                         if (1 == k) {                                  
; 4513 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4514 |                                                 / (dsum[1] - dsum[0]); 
; 4516 |                                 unsaved = 1;                           
; 4517 |                                 DINT;                                  
; 4518 |                                 ad7738_setcal();                       
; 4519 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4520 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4521 |                                 EINT;                                  
; 4523 |                         for (i = 0; i < cmdlen; i++) {                 
; 4524 |                                 buff[i] = cmdbuff[i];                  
; 4526 |                         j = cmdlen;                                    
; 4527 |                         bincmdresult = OK_SendResult;                  
; 4529 |                         lcd_clear();                                   
; 4530 |                         update_units();                                
; 4531 |                         break;                                         
; 4533 |                 case SetDCalParam:                                     
; 4535 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4536 |                                         || (0x07 | daccbm) != 0x07) {  
; 4537 |                                 bincmdresult = Error_Invalid;          
; 4538 |                                 break;                                 
; 4540 |                         ch = cmdbuff[2];                               
; 4541 |                         buff[j++] = ch;                                
; 4543 |                         for (k = 0; k < 3; k++) {                      
; 4544 |                                 intp = (Uint16*) &volt[k];             
; 4545 |                                 for (i = 0; i < 2; i++) {              
; 4546 |                                         *intp = cmdbuff[j];            
; 4547 |                                         buff[j++] = 0xff & *intp;      
; 4548 |                                         *intp += cmdbuff[j] << 8;      
; 4549 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4550 |                                         intp++;                        
; 4554 |                         // order: - o +                                
; 4555 |                         // do the calculations                         
; 4556 |                         conf_data.dac[ch].dslopen =                    
; 4557 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4558 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4559 |                         conf_data.dac[ch].dslopep =                    
; 4560 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4561 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4562 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4563 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4565 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4566 |                         daccbm = 0;                                    
; 4568 |                         unsaved = 1;                                   
; 4570 |                         DINT;                                          
; 4571 |                         ad7738_setcal();                               
; 4572 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4573 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4574 |                         EINT;                                          
; 4576 |                         bincmdresult = OK_SendResult;                  
; 4577 |                         break;                                         
; 4579 |                 case StartDCRead:                                      
; 4581 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4582 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4583 |                                 bincmdresult = Error_Invalid;          
; 4584 |                                 break;                                 
; 4587 |                         if (daccbm == 0) {                             
; 4588 |                                 ch = cmdbuff[2];                       
; 4589 |                         } else {                                       
; 4590 |                                 if (ch != cmdbuff[2]) {                
; 4591 |                                         bincmdresult = Error_Invalid;  
; 4592 |                                         break;                         
; 4595 |                         buff[j++] = ch;                                
; 4596 |                         k = cmdbuff[j];                                
; 4597 |                         buff[j++] = k;                                 
; 4599 |                         intp = (Uint16*) &volt[k];                     
; 4600 |                         for (i = 0; i < 2; i++) {                      
; 4601 |                                 *intp = cmdbuff[j];                    
; 4602 |                                 buff[j++] = 0xff & *intp;              
; 4603 |                                 *intp += cmdbuff[j] << 8;              
; 4604 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4605 |                                 intp++;                                
; 4607 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4608 |                                 bincmdresult = Error_Invalid;          
; 4609 |                                 break;                                 
; 4612 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4613 |                         if (dsum[0] <= 0) {                            
; 4614 |                                 dacc[k] = 0;                           
; 4615 |                         } else if (dsum[0] >= 0xffff) {                
; 4616 |                                 dacc[k] = 0xffff;                      
; 4617 |                         } else {                                       
; 4618 |                                 dacc[k] = (Uint16) dsum[0];            
; 4621 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4623 |                         mcbsp_xmit(dacc[k], ch);                       
; 4624 |                         latch_dac();                                   
; 4626 |                         daccbm |= (0x1 << k);                          
; 4628 |                         bincmdresult = OK_SendResult;                  
; 4629 |                         break;                                         
; 4631 |                 case SetSensorCalPa:                                   
; 4633 |                         if (cmdlen < 20) {                             
; 4634 |                                 bincmdresult = Error_Invalid;          
; 4635 |                                 break;                                 
; 4637 |                         k = 2;                                         
; 4638 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4639 |                         ss = cmdbuff[k++];              // sensor index
; 4640 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4641 |                                 bincmdresult = Error_Invalid;          
; 4642 |                                 break;                                 
; 4645 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4646 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4647 |                                 bincmdresult = Error_Invalid;          
; 4648 |                                 break;                                 
; 4650 |                         for (i = 0; i < tempint; i++) {                
; 4651 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4653 |                         tsensor.ssn[i] = '\0';                         
; 4655 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4656 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4657 |                                 bincmdresult = Error_Invalid;          
; 4658 |                                 break;                                 
; 4660 |                         for (i = 0; i < tempint; i++) {                
; 4661 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4663 |                         tsensor.slbl[i] = '\0';                        
; 4665 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4667 |                         intp = (Uint16*) &tsensor.date; // date        
; 4668 |                         for (i = 0; i < 2; i++) {                      
; 4669 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4670 |                                 k += 2;                                
; 4671 |                                 intp++;                                
; 4674 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4675 |                         for (i = 0; i < 2; i++) {                      
; 4676 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4677 |                                 k += 2;                                
; 4678 |                                 intp++;                                
; 4680 |                         tsensor.base = tsensor.range;                  
; 4682 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4683 |                         switch (tsensor.unit) {                        
; 4684 |                         case 0:                                 // lb  
; 4685 |                         case 1:                                 // kg  
; 4686 |                                 tsensor.unit |= UNIT_WT;               
; 4687 |                                 break;                                 
; 4688 |                         case 2:                                 // in  
; 4689 |                         case 3:                                 // cm  
; 4690 |                         case 4:                                 // mm  
; 4691 |                                 tsensor.unit |= UNIT_LT;               
; 4692 |                                 break;                                 
; 4693 |                         case 5:                                 // ps  
; 4694 |                                 tsensor.unit |= UNIT_PR;               
; 4695 |                                 break;                                 
; 4696 |                         case 6:                                 // nm  
; 4697 |                                 tsensor.unit |= UNIT_TQ;               
; 4698 |                                 break;                                 
; 4699 |                         case 7:                                        
; 4700 |                         case 8:                                        
; 4701 |                         case 15:                                       
; 4702 |                                 tsensor.unit |= 0xf0;                  
; 4703 |                                 break;                                 
; 4704 |                         default:                                       
; 4705 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4706 |                                 break;                                 
; 4708 |                         tsensor.ounit = tsensor.unit;                  
; 4709 |                         tsensor.ufactor = 1;                           
; 4711 |                         switch (tsensor.method) {                      
; 4712 |                         case MD_RUN_MVV:                               
; 4714 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4715 |                                 for (i = 0; i < 2; i++) {              
; 4716 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4717 |                                         k += 2;                        
; 4718 |                                         intp++;                        
; 4720 |                                 if (tsensor.slope[0] == 0) {           
; 4721 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4723 |                                 tsensor.points = 1;                    
; 4724 |                                 break;                                 
; 4726 |                         case MD_RUN_MAS:                               
; 4728 |                                 tsensor.points = cmdbuff[k++];         
; 4729 |                                 if (tsensor.points > PNT_MAX) {        
; 4730 |                                         tsensor.method = MD_UNCALED;   
; 4731 |                                         break;                         
; 4734 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4735 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4736 |                                         for (i = 0; i < 2; i++) {      
; 4737 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4738 |                                                 k += 2;                
; 4739 |                                                 intp++;                
; 4742 |                                 break;                                 
; 4744 |                         case MD_RUN_SHT:                               
; 4746 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4747 |                                 for (i = 0; i < 2; i++) {              
; 4748 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4749 |                                         k += 2;                        
; 4750 |                                         intp++;                        
; 4752 |                                 if (scale == 0) {                      
; 4753 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4755 |                                 tsensor.points = 1;                    
; 4756 |                                 break;                                 
; 4758 |                         default:                                       
; 4760 |                                 tsensor.method = MD_UNCALED;           
; 4761 |                                 break;                                 
; 4764 |                         if (tsensor.method == MD_UNCALED) {            
; 4765 |                                 bincmdresult = Error_Invalid;          
; 4766 |                                 break;                                 
; 4768 |                         tsensor.tare = 0;                              
; 4769 |                         tsensor.dacgain = 1;                           
; 4770 |                         tsensor.dacoff = 0;                            
; 4771 |                         tsensor.ch = ch;                               
; 4773 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4774 |                                 buff[j] = cmdbuff[j++];                
; 4776 |                         bincmdresult = OK_SendResult;                  
; 4777 |                         break;                                         
; 4779 |                 case StartSCRead:                                      
; 4781 |                         if (cmdlen < 5) {                              
; 4782 |                                 bincmdresult = Error_Invalid;          
; 4783 |                                 break;                                 
; 4785 |                         k = 2;                                         
; 4786 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4787 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4788 |                                 bincmdresult = Error_Invalid;          
; 4789 |                                 break;                                 
; 4792 |                         lcd_clear();                                   
; 4793 |                         lcd_puts("Sensor Calibration..", 0);           
; 4794 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4795 |                         lcd_puts(buff, 20);                            
; 4796 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4797 |                         lcd_puts(buff, 40);                            
; 4799 |                         switch (tsensor.method) {                      
; 4801 |                         case MD_RUN_MVV:                               
; 4803 |                                 lcd_puts("Reading zero point...", 60); 
; 4805 |                                 dsum[0] = 0;                           
; 4806 |                                 sampcnt = CAL_SAMPLES;                 
; 4807 |                                 while (sampcnt--) {                    
; 4808 |                                         while (0 == ad7738_rawrdy()) { 
; 4809 |                                                 delay_us(1);
;     |          // wait                                                       
; 4812 |                                         cntp = ad7738_getraw();        
; 4813 |                                         dsum[0] += cntp->adc[ch];      
; 4815 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4816 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4818 |                                 bincmdresult = OK_SendResult;          
; 4819 |                                 break;                                 
; 4821 |                         case MD_RUN_MAS:                               
; 4823 |                                 pt = cmdbuff[k++];                     
; 4824 |                                 intp = (Uint16*) &scale;               
; 4825 |                                 for (i = 0; i < 2; i++) {              
; 4826 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4827 |                                         k += 2;                        
; 4828 |                                         intp++;                        
; 4830 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4831 |                                         bincmdresult = Error_Invalid;  
; 4832 |                                         break;                         
; 4834 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4835 |                                 lcd_puts(buff, 60);                    
; 4837 |                                 dsum[0] = 0;                           
; 4838 |                                 sampcnt = CAL_SAMPLES;                 
; 4839 |                                 while (sampcnt--) {                    
; 4840 |                                         while (0 == ad7738_rawrdy()) { 
; 4841 |                                                 delay_us(1);
;     |          // wait                                                       
; 4844 |                                         cntp = ad7738_getraw();        
; 4845 |                                         dsum[0] += cntp->adc[ch];      
; 4847 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4849 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4851 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4852 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4853 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4854 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4855 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4856 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4857 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4858 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4859 | 
;     |          * tsensor.adc[k];                                             
; 4863 |                                 bincmdresult = OK_SendResult;          
; 4864 |                                 break;                                 
; 4866 |                         case MD_RUN_SHT:                               
; 4868 |                                 lcd_puts("Reading zero point...", 60); 
; 4870 |                                 for (k = 0; k < 2; k++) {              
; 4871 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4873 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4874 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4875 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4877 |                                                 DINT;                  
; 4878 |                                                 maf_rst();             
; 4879 |                                                 EINT;                  
; 4880 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4883 |                                         dsum[k] = 0;                   
; 4884 |                                         sampcnt = CAL_SAMPLES;         
; 4885 |                                         while (sampcnt--) {            
; 4886 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4887 |                                                         delay_us(1);
;     |                  // wait                                               
; 4890 |                                                 cntp = ad7738_getraw();
; 4891 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4895 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4896 |                                 DINT;                                  
; 4897 |                                 maf_rst();                             
; 4898 |                                 EINT;                                  
; 4900 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4901 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4902 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4903 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4905 |                                 bincmdresult = OK_SendResult;          
; 4906 |                                 break;                                 
; 4908 |                         default:                                       
; 4910 |                                 bincmdresult = Error_Invalid;          
; 4911 |                                 break;                                 
; 4913 |                         lcd_clear();                                   
; 4914 |                         update_units();                                
; 4916 |                         if (bincmdresult != OK_SendResult) {           
; 4917 |                                 break;                                 
; 4919 |                         for (i = 0; i < cmdlen; i++) {                 
; 4920 |                                 buff[i] = cmdbuff[i];                  
; 4922 |                         j = cmdlen;                                    
; 4923 |                         break;                                         
; 4925 |                 case StartSCShuntRd:                                   
; 4927 |                         if (cmdlen < 5) {                              
; 4928 |                                 bincmdresult = Error_Invalid;          
; 4929 |                                 break;                                 
; 4931 |                         k = 2;                                         
; 4932 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4933 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4934 |                                 bincmdresult = Error_Invalid;          
; 4935 |                                 break;                                 
; 4938 |                         lcd_clear();                                   
; 4939 |                         lcd_puts("Sensor Calibration..", 0);           
; 4940 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4941 |                         lcd_puts(buff, 20);                            
; 4942 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4943 |                         lcd_puts(buff, 40);                            
; 4944 |                         lcd_puts("Reading shunt value...", 60);        
; 4946 |                         for (k = 0; k < 2; k++) {                      
; 4947 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4949 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4950 |                                         for (i = 0; i < 50; i++) {     
; 4951 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4953 |                                         DINT;                          
; 4954 |                                         maf_rst();                     
; 4955 |                                         EINT;                          
; 4956 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4959 |                                 dsum[k] = 0;                           
; 4960 |                                 sampcnt = CAL_SAMPLES;                 
; 4961 |                                 while (sampcnt--) {                    
; 4962 |                                         while (0 == ad7738_rawrdy()) { 
; 4963 |                                                 delay_us(1);
;     |          // wait                                                       
; 4966 |                                         cntp = ad7738_getraw();        
; 4967 |                                         dsum[k] += cntp->adc[ch];      
; 4969 |                                 dsum[k] /= CAL_SAMPLES;                
; 4971 |                                 pt = 0;                                
; 4972 |                                 if (tsensor.points > 2) {              
; 4973 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4974 |                                                 pt++;                  
; 4977 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4978 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4981 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4982 |                         DINT;                                          
; 4983 |                         maf_rst();                                     
; 4984 |                         EINT;                                          
; 4986 |                         tsensor.shunt = volt[1] - volt[0];             
; 4988 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4990 |                         DINT;                                          
; 4991 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4992 |                                         sizeof(sconf_t));              
; 4994 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4996 |                         ad7738_setcal();                               
; 4997 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4998 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4999 |                         EINT;                                          
; 5001 |                         unsaved = 1;                                   
; 5003 |                         lcd_clear();                                   
; 5004 |                         update_units();                                
; 5006 |                         for (i = 0; i < cmdlen; i++) {                 
; 5007 |                                 buff[i] = cmdbuff[i];                  
; 5009 |                         j = cmdlen;                                    
; 5010 |                         bincmdresult = OK_SendResult;                  
; 5011 |                         break;                                         
; 5013 |                 case SetSensorName:                                    
; 5015 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 5016 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 5017 |                                 bincmdresult = Error_Invalid;          
; 5018 |                                 break;                                 
; 5020 |                         ss = cmdbuff[2];                               
; 5021 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5023 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 5024 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 5025 |                         for (i = 0; i < slen; i++) {                   
; 5026 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 5028 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 5029 |                         unsaved = 1;                                   
; 5031 |                         // sensor name/label                           
; 5032 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 5033 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5034 |                         for (i = 0; i < slen; i++) {                   
; 5035 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5038 |                         bincmdresult = OK_SendResult;                  
; 5039 |                         break;                                         
; 5041 |                 case SetSensorOUnit:                                   
; 5043 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5044 |                                 bincmdresult = Error_Invalid;          
; 5045 |                                 break;                                 
; 5048 |                         ss = cmdbuff[2];                               
; 5049 |                         pt = cmdbuff[3];                               
; 5051 |                         if (pt != UNIT_PC                              
; 5052 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5053 |                                 bincmdresult = Error_Invalid;          
; 5054 |                                 break;                                 
; 5057 |                         conf_data.sensor[ss].ounit = pt;               
; 5058 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5059 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5061 |                         if (pt == UNIT_PC) {                           
; 5062 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5063 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5064 |                         } else if (conf_data.sensor[ss].ounit          
; 5065 |                                         == conf_data.sensor[ss].unit) {
; 5066 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5067 |                         } else {                                       
; 5068 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5069 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5071 |                                         if (pt == UNIT_KG) {           
; 5072 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5074 |                                         break;                         
; 5076 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5078 |                                         if (pt == UNIT_LB) {           
; 5079 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5081 |                                         break;                         
; 5083 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5085 |                                         switch (pt) {                  
; 5086 |                                         case UNIT_CM:                  
; 5087 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5088 |                                                 break;                 
; 5089 |                                         case UNIT_MM:                  
; 5090 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5091 |                                                 break;                 
; 5093 |                                         break;                         
; 5095 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5097 |                                         switch (pt) {                  
; 5098 |                                         case UNIT_IN:                  
; 5099 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5100 |                                                 break;                 
; 5101 |                                         case UNIT_MM:                  
; 5102 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5103 |                                                 break;                 
; 5105 |                                         break;                         
; 5107 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5109 |                                         switch (pt) {                  
; 5110 |                                         case UNIT_IN:                  
; 5111 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5112 |                                                 break;                 
; 5113 |                                         case UNIT_CM:                  
; 5114 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5115 |                                                 break;                 
; 5117 |                                         break;                         
; 5119 |                                 default:                               
; 5121 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5122 |                                         break;                         
; 5126 |                         unsaved = 1;                                   
; 5128 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5129 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5130 |                                         update_units();                
; 5131 |                                         DINT;                          
; 5132 |                                         ad7738_setcal();               
; 5133 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5134 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5135 |                                         EINT;                          
; 5139 |                         bincmdresult = OK_SendResult;                  
; 5140 |                         break;                                         
; 5142 |                 case SetSensorBase:                                    
; 5144 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5145 |                                 bincmdresult = Error_Invalid;          
; 5146 |                                 break;                                 
; 5148 |                         ss = cmdbuff[2];                               
; 5149 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5151 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5152 |                         for (i = 0; i < 2; i++) {                      
; 5153 |                                 *intp = cmdbuff[j];                    
; 5154 |                                 buff[j++] = 0xff & *intp;              
; 5155 |                                 *intp += cmdbuff[j] << 8;              
; 5156 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5157 |                                 intp++;                                
; 5159 |                         unsaved = 1;                                   
; 5161 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5162 |                                 // output unit is percent              
; 5163 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5164 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5166 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5167 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5168 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5169 |                                                 DINT;                  
; 5170 |                                                 ad7738_setcal();       
; 5171 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5172 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5173 |                                                 EINT;                  
; 5178 |                         bincmdresult = OK_SendResult;                  
; 5179 |                         break;                                         
; 5181 |                 case SetQEPChannels:                                   
; 5183 |                         if (cmdlen < 6) {                              
; 5184 |                                 bincmdresult = Error_Invalid;          
; 5185 |                                 break;                                 
; 5188 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5189 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5190 |                                 for (i = 0; i < 2; i++) {              
; 5191 |                                         *intp = cmdbuff[j];            
; 5192 |                                         buff[j++] = 0xff & *intp;      
; 5193 |                                         *intp += cmdbuff[j] << 8;      
; 5194 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5195 |                                         intp++;                        
; 5199 |                         conf_data.velfilter = cmdbuff[j];              
; 5200 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5201 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5202 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5204 |                         unsaved = 1;                                   
; 5206 |                         DINT;                                          
; 5207 |                         ad7738_setcal();                               
; 5208 |                         velf_rst();                                    
; 5209 |                         EINT;                                          
; 5211 |                         bincmdresult = OK_SendResult;                  
; 5212 |                         break;                                         
; 5214 |                         //case SetEnCntperin: // not needed            
; 5215 |                         //break;                                       
; 5217 |                 case SetCurSensor:                                     
; 5219 |                         if (cmdlen < 4||                               
; 5220 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5221 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5222 |                                 bincmdresult = Error_Invalid;          
; 5223 |                                 break;                                 
; 5226 |                         ch = cmdbuff[2];                               
; 5227 |                         ss = cmdbuff[3];                               
; 5229 |                         if (autoid[ch]) {                              
; 5230 |                                 bincmdresult = Error_Exe;              
; 5231 |                                 break;                                 
; 5234 |                         DINT;                                          
; 5235 |                         conf_data.ch[ch].ci = ss;                      
; 5236 |                         ad7738_setcal();                               
; 5238 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5239 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5240 |                         EINT;                                          
; 5242 |                         update_units();                                
; 5243 |                         unsaved = 1;                                   
; 5245 |                         buff[j++] = ch;                                
; 5246 |                         buff[j++] = ss;                                
; 5247 |                         bincmdresult = OK_SendResult;                  
; 5248 |                         break;                                         
; 5250 |                 case SetAFilterSize:                                   
; 5252 |                         if (cmdlen < 4) {                              
; 5253 |                                 bincmdresult = Error_Invalid;          
; 5254 |                                 break;                                 
; 5257 |                         // filter length                               
; 5258 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5259 |                         if (temp16 > MAF_MAX) {                        
; 5260 |                                 bincmdresult = Error_Invalid;          
; 5261 |                                 break;                                 
; 5264 |                         // filter diff window                          
; 5265 |                         intp = (Uint16*) &tempft;                      
; 5266 |                         for (i = 0; i < 2; i++) {                      
; 5267 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5268 |                                 intp++;                                
; 5271 |                         DINT;                                          
; 5272 |                         conf_data.filter = temp16;                     
; 5273 |                         conf_data.diffwin = tempft;                    
; 5274 |                         maf_rst();                                     
; 5275 |                         EINT;                                          
; 5277 |                         unsaved = 1;                                   
; 5279 |                         buff[j++] = 0xff & temp16;                     
; 5280 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5282 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5283 |                         buff[j++] = 0xff & intp[0];                    
; 5284 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5285 |                         buff[j++] = 0xff & intp[1];                    
; 5286 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5288 |                         bincmdresult = OK_SendResult;                  
; 5289 |                         break;                                         
; 5291 |                 case SetAutoId:                                        
; 5293 |                         if (cmdlen < 3) {                              
; 5294 |                                 bincmdresult = Error_Invalid;          
; 5295 |                                 break;                                 
; 5298 |                         conf_data.tagiden = cmdbuff[2];                
; 5299 |                         if (!conf_data.tagiden) {                      
; 5300 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5301 |                                         tagwasthere[i] = 0;            
; 5302 |                                         autoid[i] = 0;                 
; 5304 |                                 update_units();                        
; 5306 |                         unsaved = 1;                                   
; 5308 |                         buff[j] = cmdbuff[j++];                        
; 5309 |                         bincmdresult = OK_SendResult;                  
; 5310 |                         break;                                         
; 5312 |                 case SetDisplayLine:                                   
; 5314 |                         if (cmdlen < 14) {                             
; 5315 |                                 bincmdresult = Error_Invalid;          
; 5316 |                                 break;                                 
; 5319 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5320 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5321 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5322 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5323 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5324 |                                         || cmdbuff[13] > 5) {          
; 5325 |                                 bincmdresult = Error_Invalid;          
; 5326 |                                 break;                                 
; 5329 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5330 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5331 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5332 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5333 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5334 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5335 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5337 |                         unsaved = 1;                                   
; 5339 |                         lcd_clear();                                   
; 5340 |                         update_units();                                
; 5341 |                         bincmdresult = OK_SendResult;                  
; 5342 |                         break;                                         
; 5344 |                 case SetDACCh:                                         
; 5346 |                         if (cmdlen < 42) {                             
; 5347 |                                 bincmdresult = Error_Invalid;          
; 5348 |                                 break;                                 
; 5351 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5352 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5353 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5354 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5355 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5356 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5357 |                                 bincmdresult = Error_Invalid;          
; 5358 |                                 break;                                 
; 5361 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5362 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5363 |                                 buff[j++] = conf_data.dac[i].what;     
; 5364 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5365 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5367 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5368 |                                 //{                                    
; 5369 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5370 |                                 //}                                    
; 5371 |                                 //else                                 
; 5372 |                                 //{                                    
; 5373 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5374 |                                 //}                                    
; 5375 |                                 for (k = 0; k < 2; k++) {              
; 5376 |                                         *intp = cmdbuff[j];            
; 5377 |                                         buff[j++] = 0xff & *intp;      
; 5378 |                                         *intp += cmdbuff[j] << 8;      
; 5379 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5380 |                                         intp++;                        
; 5383 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5384 |                                 //{                                    
; 5385 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5386 |                                 //}                                    
; 5387 |                                 //else                                 
; 5388 |                                 //{                                    
; 5389 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5390 |                                 //}                                    
; 5391 |                                 for (k = 0; k < 2; k++) {              
; 5392 |                                         *intp = cmdbuff[j];            
; 5393 |                                         buff[j++] = 0xff & *intp;      
; 5394 |                                         *intp += cmdbuff[j] << 8;      
; 5395 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5396 |                                         intp++;                        
; 5399 |                         unsaved = 1;                                   
; 5401 |                         DINT;                                          
; 5402 |                         ad7738_setcal();                               
; 5403 |                         EINT;                                          
; 5404 |                         bincmdresult = OK_SendResult;                  
; 5405 |                         break;                                         
; 5407 |                 case SetLIMITCh:                                       
; 5409 |                         if (cmdlen < 46) {                             
; 5410 |                                 bincmdresult = Error_Invalid;          
; 5411 |                                 break;                                 
; 5414 |                         if (cmdbuff[2]                                 
; 5415 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5416 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5417 |                                 bincmdresult = Error_Invalid;          
; 5418 |                                 break;                                 
; 5421 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5422 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5423 |                                 buff[j++] = conf_data.lim[i].what;     
; 5424 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5425 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5426 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5427 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5429 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5430 |                                 for (k = 0; k < 2; k++) {              
; 5431 |                                         *intp = cmdbuff[j];            
; 5432 |                                         buff[j++] = 0xff & *intp;      
; 5433 |                                         *intp += cmdbuff[j] << 8;      
; 5434 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5435 |                                         intp++;                        
; 5437 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5438 |                                 for (k = 0; k < 2; k++) {              
; 5439 |                                         *intp = cmdbuff[j];            
; 5440 |                                         buff[j++] = 0xff & *intp;      
; 5441 |                                         *intp += cmdbuff[j] << 8;      
; 5442 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5443 |                                         intp++;                        
; 5446 |                         unsaved = 1;                                   
; 5448 |                         DINT;                                          
; 5449 |                         ad7738_setcal();                               
; 5450 |                         EINT;                                          
; 5452 |                         bincmdresult = OK_SendResult;                  
; 5453 |                         break;                                         
; 5455 |                 case Tare:                                             
; 5457 |                         if (cmdlen < 3) {                              
; 5458 |                                 //bincmdresult = Error_Invalid;        
; 5459 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5460 |                                 ad7738_resetpeak(0xff);                
; 5461 |                                 ad7738_resetvall(0xff);                
; 5462 |                                 unsaved = 1;                           
; 5464 |                                 buff[j++] = 0xff;                      
; 5465 |                                 bincmdresult = OK_SendResult;          
; 5466 |                                 break;                                 
; 5469 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5470 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5471 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5472 |                         unsaved = 1;                                   
; 5474 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5475 |                         bincmdresult = OK_SendResult;                  
; 5476 |                         break;                                         
; 5478 |                 case ResetPkVly:                                       
; 5480 |                         if (cmdlen < 3) {                              
; 5481 |                                 bincmdresult = Error_Invalid;          
; 5482 |                                 break;                                 
; 5485 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5486 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5487 |                         unsaved = 1;                                   
; 5489 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5490 |                         bincmdresult = OK_SendResult;                  
; 5491 |                         break;                                         
; 5493 |                 case ResetPk:                                          
; 5495 |                         if (cmdlen < 3) {                              
; 5496 |                                 bincmdresult = Error_Invalid;          
; 5497 |                                 break;                                 
; 5500 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5501 |                         unsaved = 1;                                   
; 5503 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5504 |                         bincmdresult = OK_SendResult;                  
; 5505 |                         break;                                         
; 5507 |                 case ResetVly:                                         
; 5509 |                         if (cmdlen < 3) {                              
; 5510 |                                 bincmdresult = Error_Invalid;          
; 5511 |                                 break;                                 
; 5514 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5515 |                         unsaved = 1;                                   
; 5517 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5518 |                         bincmdresult = OK_SendResult;                  
; 5519 |                         break;                                         
; 5521 |                 case ResetLIMIT:                                       
; 5523 |                         if (cmdlen < 3) {                              
; 5524 |                                 bincmdresult = Error_Invalid;          
; 5525 |                                 break;                                 
; 5528 |                         k = 0x01;                                      
; 5529 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5530 |                                 if (k & cmdbuff[2]) {                  
; 5531 |                                         ad7738_resetlimit(i);          
; 5533 |                                 k <<= 1;                               
; 5535 |                         unsaved = 1;                                   
; 5537 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5538 |                         bincmdresult = OK_SendResult;                  
; 5539 |                         break;                                         
; 5541 |                 case ResetPosition:                                    
; 5543 |                         if (cmdlen < 3) {                              
; 5544 |                                 bincmdresult = Error_Invalid;          
; 5545 |                                 break;                                 
; 5548 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5549 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5550 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5551 |                         unsaved = 1;                                   
; 5553 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5554 |                         bincmdresult = OK_SendResult;                  
; 5555 |                         break;                                         
; 5557 |                 case SetShuntSwitch:                                   
; 5559 |                         if (cmdlen < 3) {                              
; 5560 |                                 bincmdresult = Error_Invalid;          
; 5561 |                                 break;                                 
; 5564 |                         shunt_switch(cmdbuff[2]);                      
; 5565 |                         unsaved = 1;                                   
; 5567 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5568 |                         bincmdresult = OK_SendResult;                  
; 5569 |                         break;                                         
; 5571 |                 case SetDirectVolt:                                    
; 5573 |                         if (cmdlen < 7) {                              
; 5574 |                                 bincmdresult = Error_Invalid;          
; 5575 |                                 break;                                 
; 5578 |                         ss = cmdbuff[j];                               
; 5579 |                         buff[j++] = ss;                                
; 5581 |                         intp = (Uint16*) &volt[0];                     
; 5582 |                         for (k = 0; k < 2; k++) {                      
; 5583 |                                 *intp = cmdbuff[j];                    
; 5584 |                                 buff[j++] = 0xff & *intp;              
; 5585 |                                 *intp += cmdbuff[j] << 8;              
; 5586 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5587 |                                 intp++;                                
; 5590 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5591 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5592 |                                 bincmdresult = Error_Invalid;          
; 5593 |                                 break;                                 
; 5596 |                         if (volt[0] < 0) {                             
; 5597 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5598 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5599 |                         } else {                                       
; 5600 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5601 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5604 |                         if (dsum[0] <= 0) {                            
; 5605 |                                 dacc[0] = 0;                           
; 5606 |                         } else if (dsum[0] >= 0xffff) {                
; 5607 |                                 dacc[0] = 0xffff;                      
; 5608 |                         } else {                                       
; 5609 |                                 dacc[0] = (Uint16) dsum[0];            
; 5612 |                         mcbsp_xmit(dacc[0], ss);                       
; 5613 |                         latch_dac();                                   
; 5615 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5616 |                         buff[j++] = 0xff & dacc[0];                    
; 5617 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5619 |                         bincmdresult = OK_SendResult;                  
; 5620 |                         break;                                         
; 5622 |                 case GetAllFlash:                                      
; 5624 |                         break;                                         
; 5626 |                 case SetAllFlash:                                      
; 5628 |                         break;                                         
; 5630 |                 case FlashMemWrite:                                    
; 5632 |                         bincmdresult = OK_SendResult;                  
; 5633 |                         if (unsaved) {                                 
; 5634 |                                 // flash writing                       
; 5635 |                                 lcd_clear();                           
; 5636 |                                 lcd_puts("Flash writing...", 0);       
; 5638 |                                 for (i = 0; i < 50; i++) {             
; 5639 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5642 |                                 DINT;                                  
; 5643 |                                 flash_ret = conf_write();              
; 5644 |                                 EINT;                                  
; 5646 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5647 |                                         lcd_puts("Done", 16);          
; 5648 |                                         unsaved = 0;                   
; 5649 |                                 } else {                               
; 5650 |                                         lcd_puts("Fail", 16);          
; 5651 |                                         bincmdresult = Error_Exe;      
; 5654 |                                 for (i = 0; i < 50; i++) {             
; 5655 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5657 |                                 lcd_clear();                           
; 5658 |                                 update_units();                        
; 5660 |                         break;                                         
; 5662 |                 case FlashMemDefault:                                  
; 5664 |                         conf_default();                                
; 5666 |                         // flash writing                               
; 5667 |                         lcd_clear();                                   
; 5668 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5670 |                         for (i = 0; i < 50; i++) {                     
; 5671 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5674 |                         DINT;                                          
; 5675 |                         flash_ret = conf_write();                      
; 5676 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5677 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5678 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5679 |                         EINT;                                          
; 5681 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5682 |                                 lcd_puts("Done", 31);                  
; 5683 |                                 unsaved = 0;                           
; 5684 |                                 bincmdresult = OK_SendResult;          
; 5685 |                         } else {                                       
; 5686 |                                 lcd_puts("Fail", 31);                  
; 5687 |                                 bincmdresult = Error_Exe;              
; 5689 |                         for (i = 0; i < 50; i++) {                     
; 5690 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5692 |                         lcd_clear();                                   
; 5693 |                         update_units();                                
; 5695 |                         break;                                         
; 5697 |                 case FlashMemRead:                                     
; 5699 |                         // flash reading                               
; 5700 |                         conf_read();                                   
; 5702 |                         DINT;                                          
; 5703 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5704 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5705 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5706 |                         EINT;                                          
; 5708 |                         unsaved = 0;                                   
; 5709 |                         update_units();                                
; 5710 |                         bincmdresult = OK_SendResult;                  
; 5711 |                         break;                                         
; 5713 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |640| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |640| 
        ; call occurs [#_SPICANRead] ; [] |640| 
        MOVL      XAR0,#40              ; [CPU_] |640| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |640| 
        MOV       *-SP[40],AL           ; [CPU_] |640| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |592| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5715,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5715 | if (cmdlen < 6) {                                                      
; 5716 |         bincmdresult = Error_Invalid;                                  
; 5717 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5715| 
        B         $C$L320,LO            ; [CPU_] |5715| 
        ; branchcc occurs ; [] |5715| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5720 | ds_dn = cmdbuff[2];                                                    
; 5721 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5722 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5722| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5720| 
        ADDB      ACC,#2                ; [CPU_] |5720| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5723 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5722| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5720| 
        MOV       *-SP[52],AL           ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5722| 
        ADDB      ACC,#4                ; [CPU_] |5722| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5722| 
	.dwpsn	file "../Source/prod.c",line 5724,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5724 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5724| 
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5722| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5722| 
        MOV       *-SP[51],AL           ; [CPU_] |5722| 
	.dwpsn	file "../Source/prod.c",line 5724,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5726 | tempint = 0;                                                           
; 5727 | k = 0x01;                                                              
; 5728 | for (i = 0; i < 8; i++) {                                              
; 5729 |         if (ds_bm & k) {                                               
; 5730 |                 tempint++;                                             
; 5732 |         k <<= 1;                                                       
; 5735 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5736 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5737 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5738 | //                                      ds_en = 0;                     
; 5739 | //                                      bincmdresult = Error_Invalid;  
; 5740 | //                                      break;                         
; 5741 | //                              }                                      
; 5743 | ds_en = 1;                                                             
; 5744 | ds_stop = 0;                                                           
; 5745 | ds_sn = 0;                                                             
; 5747 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5748 | //                              ad7738_setlimitchgd();                 
; 5750 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5724| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5724| 
        MOV       *-SP[50],AL           ; [CPU_] |5724| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5751,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5751 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5751| 
	.dwpsn	file "../Source/prod.c",line 5743,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5743| 
	.dwpsn	file "../Source/prod.c",line 5744,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5744| 
	.dwpsn	file "../Source/prod.c",line 5745,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5745| 
	.dwpsn	file "../Source/prod.c",line 5752,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5752 | j++;                                                                   
; 5754 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5752| 
	.dwpsn	file "../Source/prod.c",line 5755,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5755 | break;                                                                 
; 5757 | case StopStream:                                                       
; 5759 | ds_stop = 1;                                                           
; 5760 | bincmdresult = OK_SendResult;                                          
; 5761 | break;                                                                 
; 5763 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5765 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5755| 
        ; branch occurs ; [] |5755| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4927,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4927| 
        B         $C$L320,LO            ; [CPU_] |4927| 
        ; branchcc occurs ; [] |4927| 
	.dwpsn	file "../Source/prod.c",line 4932,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4932| 
        MOVL      ACC,XAR4              ; [CPU_] |4932| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4932| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4932| 
        MOVL      XAR0,#66              ; [CPU_] |4932| 
        ADDB      ACC,#2                ; [CPU_] |4932| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4932| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4932| 
        CMPL      ACC,XAR6              ; [CPU_] |4932| 
        B         $C$L320,NEQ           ; [CPU_] |4932| 
        ; branchcc occurs ; [] |4932| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4932| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4932| 
        CMPL      ACC,XAR6              ; [CPU_] |4932| 
        B         $C$L320,NEQ           ; [CPU_] |4932| 
        ; branchcc occurs ; [] |4932| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4932| 
        MOVL      XAR0,#64              ; [CPU_] |4932| 
        MOVL      ACC,XAR5              ; [CPU_] |4932| 
        ADDB      ACC,#4                ; [CPU_] |4932| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4932| 
        MOVB      XAR0,#36              ; [CPU_] |4932| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4932| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4932| 
        B         $C$L320,NEQ           ; [CPU_] |4932| 
        ; branchcc occurs ; [] |4932| 
	.dwpsn	file "../Source/prod.c",line 4938,column 5,is_stmt,isa 0
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4938| 
        ; call occurs [#_lcd_clear] ; [] |4938| 
	.dwpsn	file "../Source/prod.c",line 4939,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4939| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4939| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4939| 
        ; call occurs [#_lcd_puts] ; [] |4939| 
	.dwpsn	file "../Source/prod.c",line 4940,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4940| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4940| 
        MOVL      XAR0,#44              ; [CPU_] |4940| 
        ADD       AL,*-SP[58]           ; [CPU_] |4940| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4940| 
        MOV       *-SP[3],AL            ; [CPU_] |4940| 
        MOVB      AL,#1                 ; [CPU_] |4940| 
        ADD       AL,*-SP[57]           ; [CPU_] |4940| 
        MOV       *-SP[4],AL            ; [CPU_] |4940| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4940| 
        MOVL      XAR4,XAR3             ; [CPU_] |4940| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_sprintf")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4940| 
        ; call occurs [#_sprintf] ; [] |4940| 
	.dwpsn	file "../Source/prod.c",line 4941,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4941| 
        MOVL      XAR4,XAR3             ; [CPU_] |4941| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4941| 
        ; call occurs [#_lcd_puts] ; [] |4941| 
	.dwpsn	file "../Source/prod.c",line 4942,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4942| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4942| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4942| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4942| 
        MOVL      XAR0,#58              ; [CPU_] |4942| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4942| 
        MOVB      XAR1,#36              ; [CPU_] |4942| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4942| 
        ADDL      ACC,XAR6              ; [CPU_] |4942| 
        MOVL      XAR4,ACC              ; [CPU_] |4942| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4942| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4942| 
        MOVL      XAR4,XAR3             ; [CPU_] |4942| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_sprintf")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4942| 
        ; call occurs [#_sprintf] ; [] |4942| 
	.dwpsn	file "../Source/prod.c",line 4943,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4943| 
        MOVL      XAR4,XAR3             ; [CPU_] |4943| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4943| 
        ; call occurs [#_lcd_puts] ; [] |4943| 
	.dwpsn	file "../Source/prod.c",line 4944,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4944| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4944| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4944| 
        ; call occurs [#_lcd_puts] ; [] |4944| 
        MOVL      XAR0,#78              ; [CPU_] |4944| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4944| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4944| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4946,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4946| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4946| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4947,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4947| 
        B         $C$L83,LEQ            ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
	.dwpsn	file "../Source/prod.c",line 4949,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4949| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4949| 
        ; call occurs [#_shunt_switch] ; [] |4949| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4951,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4951| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_delay_us")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4951| 
        ; call occurs [#_delay_us] ; [] |4951| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4951| 
	.dwpsn	file "../Source/prod.c",line 4950,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4950| 
        MOVZ      AR0,AR6               ; [CPU_] |4950| 
        MOV       *-SP[48],AR6          ; [CPU_] |4950| 
        CMP       AR0,#-1               ; [CPU_] |4950| 
        B         $C$L82,NEQ            ; [CPU_] |4950| 
        ; branchcc occurs ; [] |4950| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4954,column 7,is_stmt,isa 0
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_maf_rst")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4954| 
        ; call occurs [#_maf_rst] ; [] |4954| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4956,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4956| 
        SPM       #0                    ; [CPU_] 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_delay_us")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4956| 
        ; call occurs [#_delay_us] ; [] |4956| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4959,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4959| 
	.dwpsn	file "../Source/prod.c",line 4960,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4960| 
	.dwpsn	file "../Source/prod.c",line 4959,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4959| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4959| 
	.dwpsn	file "../Source/prod.c",line 4961,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4961| 
	.dwpsn	file "../Source/prod.c",line 4960,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4960| 
	.dwpsn	file "../Source/prod.c",line 4961,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4961| 
        MOVB      ACC,#0                ; [CPU_] |4961| 
        SUBB      ACC,#1                ; [CPU_] |4961| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4961| 
        B         $C$L86,EQ             ; [CPU_] |4961| 
        ; branchcc occurs ; [] |4961| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4962,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4962| 
        ; branch occurs ; [] |4962| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4963,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4963| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_delay_us")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4963| 
        ; call occurs [#_delay_us] ; [] |4963| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4962,column 14,is_stmt,isa 0
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4962| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4962| 
        CMPB      AL,#0                 ; [CPU_] |4962| 
        B         $C$L84,EQ             ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
	.dwpsn	file "../Source/prod.c",line 4966,column 7,is_stmt,isa 0
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4966| 
        ; call occurs [#_ad7738_getraw] ; [] |4966| 
	.dwpsn	file "../Source/prod.c",line 4967,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4967| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4967| 
        ADDL      XAR4,ACC              ; [CPU_] |4967| 
        MOVL      XAR0,#34              ; [CPU_] |4967| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4967| 
        MOVL      XAR0,#34              ; [CPU_] |4967| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4967| 
        ASR64     ACC:P,16              ; [CPU_] |4967| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4967| 
        MOVL      XAR0,#34              ; [CPU_] |4967| 
        ASR64     ACC:P,16              ; [CPU_] |4967| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4967| 
        MOVL      XAR0,#34              ; [CPU_] |4967| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4967| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4967| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4967| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4967| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4967| 
	.dwpsn	file "../Source/prod.c",line 4961,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4961| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4961| 
        MOVB      ACC,#0                ; [CPU_] |4961| 
        SUBB      ACC,#1                ; [CPU_] |4961| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4961| 
        B         $C$L85,NEQ            ; [CPU_] |4961| 
        ; branchcc occurs ; [] |4961| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4969| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4969| 
        MOV       *-SP[2],#0            ; [CPU_] |4969| 
        MOV       *-SP[1],#0            ; [CPU_] |4969| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4969| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4969| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4969| 
        ; call occurs [#LL$$DIV] ; [] |4969| 
	.dwpsn	file "../Source/prod.c",line 4972,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4972| 
        MOVB      XAR0,#46              ; [CPU_] |4972| 
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4969| 
	.dwpsn	file "../Source/prod.c",line 4971,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4971| 
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4969| 
	.dwpsn	file "../Source/prod.c",line 4972,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4972| 
        CMPB      AL,#2                 ; [CPU_] |4972| 
        B         $C$L89,LEQ            ; [CPU_] |4972| 
        ; branchcc occurs ; [] |4972| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4973,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4973| 
        ; branch occurs ; [] |4973| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4974,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4974| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4973,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4973| 
        B         $C$L89,HIS            ; [CPU_] |4973| 
        ; branchcc occurs ; [] |4973| 
        MOVB      AL,#1                 ; [CPU_] |4973| 
        ADD       AL,AR4                ; [CPU_] |4973| 
        MOVZ      AR5,AL                ; [CPU_] |4973| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4973| 
        ADDL      ACC,XAR1              ; [CPU_] |4973| 
        MOVL      XAR6,ACC              ; [CPU_] |4973| 
        MOVB      XAR0,#72              ; [CPU_] |4973| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4973| 
        MOVL      XAR0,#32              ; [CPU_] |4973| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4973| 
        MOVL      XAR0,#32              ; [CPU_] |4973| 
        ASR64     ACC:P,16              ; [CPU_] |4973| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4973| 
        MOVL      XAR0,#32              ; [CPU_] |4973| 
        ASR64     ACC:P,16              ; [CPU_] |4973| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4973| 
        MOVL      *-SP[4],P             ; [CPU_] |4973| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4973| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4973| 
        MOVL      P,*-SP[32]            ; [CPU_] |4973| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$592, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4973| 
        ; call occurs [#LL$$CMP] ; [] |4973| 
        CMPB      AL,#0                 ; [CPU_] |4973| 
        B         $C$L87,GT             ; [CPU_] |4973| 
        ; branchcc occurs ; [] |4973| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4977,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4977| 
        ADDL      ACC,XAR1              ; [CPU_] |4977| 
        MOVL      XAR4,ACC              ; [CPU_] |4977| 
        MOVL      XAR0,#88              ; [CPU_] |4977| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4977| 
        MOVB      XAR0,#96              ; [CPU_] |4977| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4977| 
        MOVL      XAR0,#38              ; [CPU_] |4977| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4977| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4977| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4977| 
        ; call occurs [#FS$$MPY] ; [] |4977| 
        MOVL      XAR0,#30              ; [CPU_] |4977| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4977| 
        MOVL      P,*XAR3++             ; [CPU_] |4977| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4977| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4977| 
        ; call occurs [#LL$$TOFS] ; [] |4977| 
        MOVL      XAR0,#30              ; [CPU_] |4977| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4977| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4977| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4977| 
        ; call occurs [#FS$$MPY] ; [] |4977| 
        MOVL      XAR0,#88              ; [CPU_] |4977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4977| 
        MOVB      XAR1,#118             ; [CPU_] |4977| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4977| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4977| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4977| 
        ; call occurs [#FS$$ADD] ; [] |4977| 
        MOVL      XAR0,#36              ; [CPU_] |4977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4977| 
        MOVL      XAR0,#36              ; [CPU_] |4977| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4946,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4946| 
	.dwpsn	file "../Source/prod.c",line 4977,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4977| 
        MOV       AL,*-SP[60]           ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4946,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4946| 
        B         $C$L81,LT             ; [CPU_] |4946| 
        ; branchcc occurs ; [] |4946| 
	.dwpsn	file "../Source/prod.c",line 4981,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4981| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4981| 
        ; call occurs [#_shunt_switch] ; [] |4981| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4983,column 5,is_stmt,isa 0
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_maf_rst")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4983| 
        ; call occurs [#_maf_rst] ; [] |4983| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4986| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4986| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4986| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4986| 
        ; call occurs [#FS$$SUB] ; [] |4986| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4986| 
        MOVL      XAR0,#36              ; [CPU_] |4986| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4986| 
        MOVB      XAR0,#140             ; [CPU_] |4986| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4986| 
        MOV       AL,*-SP[58]           ; [CPU_] |4986| 
	.dwpsn	file "../Source/prod.c",line 4988,column 5,is_stmt,isa 0
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_tagid")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4988| 
        ; call occurs [#_tagid] ; [] |4988| 
        MOVL      XAR4,XAR1             ; [CPU_] |4988| 
        ADDB      XAR4,#32              ; [CPU_] |4988| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4988| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4988| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4991,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4991| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4991| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4991| 
        MOV       AL,*-SP[57]           ; [CPU_] |4991| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4994,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4994| 
	.dwpsn	file "../Source/prod.c",line 4996,column 5,is_stmt,isa 0
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4996| 
        ; call occurs [#_ad7738_setcal] ; [] |4996| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |4996| 
	.dwpsn	file "../Source/prod.c",line 4997,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4997| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4997| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4997| 
        MOV       AL,AR1                ; [CPU_] |4997| 
	.dwpsn	file "../Source/prod.c",line 4998,column 5,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4998| 
        ; call occurs [#_ad7738_resetvall] ; [] |4998| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5003,column 5,is_stmt,isa 0
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5003| 
        ; call occurs [#_lcd_clear] ; [] |5003| 
	.dwpsn	file "../Source/prod.c",line 5004,column 5,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_update_units")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5004| 
        ; call occurs [#_update_units] ; [] |5004| 
        MOVL      XAR0,#42              ; [CPU_] |5004| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5004| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5006,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |5006| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 5007,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 5006,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |5006| 
	.dwpsn	file "../Source/prod.c",line 5007,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 5006,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |5006| 
	.dwpsn	file "../Source/prod.c",line 5007,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 5006,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |5006| 
        B         $C$L90,HI             ; [CPU_] |5006| 
        ; branchcc occurs ; [] |5006| 
	.dwpsn	file "../Source/prod.c",line 5009,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5011,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5011| 
        ; branch occurs ; [] |5011| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4781,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4781| 
        B         $C$L320,LO            ; [CPU_] |4781| 
        ; branchcc occurs ; [] |4781| 
	.dwpsn	file "../Source/prod.c",line 4786,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4786| 
        MOVL      XAR0,#66              ; [CPU_] |4786| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4786| 
        ADDB      ACC,#2                ; [CPU_] |4786| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4786| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4786| 
        CMPL      ACC,XAR6              ; [CPU_] |4786| 
        B         $C$L320,NEQ           ; [CPU_] |4786| 
        ; branchcc occurs ; [] |4786| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4786| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4786| 
        CMPL      ACC,XAR6              ; [CPU_] |4786| 
        B         $C$L320,NEQ           ; [CPU_] |4786| 
        ; branchcc occurs ; [] |4786| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4786| 
        MOVL      XAR0,#64              ; [CPU_] |4786| 
        MOVL      ACC,XAR5              ; [CPU_] |4786| 
        ADDB      ACC,#4                ; [CPU_] |4786| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4786| 
        MOVB      XAR0,#36              ; [CPU_] |4786| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4786| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4786| 
        B         $C$L320,NEQ           ; [CPU_] |4786| 
        ; branchcc occurs ; [] |4786| 
	.dwpsn	file "../Source/prod.c",line 4792,column 5,is_stmt,isa 0
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4792| 
        ; call occurs [#_lcd_clear] ; [] |4792| 
	.dwpsn	file "../Source/prod.c",line 4793,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4793| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4793| 
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4793| 
        ; call occurs [#_lcd_puts] ; [] |4793| 
	.dwpsn	file "../Source/prod.c",line 4794,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4794| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4794| 
        MOVL      XAR0,#44              ; [CPU_] |4794| 
        ADD       AL,*-SP[58]           ; [CPU_] |4794| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4794| 
        MOV       *-SP[3],AL            ; [CPU_] |4794| 
        MOVB      AL,#1                 ; [CPU_] |4794| 
        ADD       AL,*-SP[57]           ; [CPU_] |4794| 
        MOV       *-SP[4],AL            ; [CPU_] |4794| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4794| 
        MOVL      XAR4,XAR1             ; [CPU_] |4794| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_sprintf")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4794| 
        ; call occurs [#_sprintf] ; [] |4794| 
	.dwpsn	file "../Source/prod.c",line 4795,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4795| 
	.dwpsn	file "../Source/prod.c",line 4794,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4794| 
	.dwpsn	file "../Source/prod.c",line 4795,column 5,is_stmt,isa 0
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4795| 
        ; call occurs [#_lcd_puts] ; [] |4795| 
	.dwpsn	file "../Source/prod.c",line 4796,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4796| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4796| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4796| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4796| 
        MOVL      XAR0,#58              ; [CPU_] |4796| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4796| 
        MOVB      XAR1,#36              ; [CPU_] |4796| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4796| 
        ADDL      ACC,XAR6              ; [CPU_] |4796| 
        MOVL      XAR4,ACC              ; [CPU_] |4796| 
        MOVL      XAR0,#44              ; [CPU_] |4796| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4796| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4796| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4796| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_sprintf")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4796| 
        ; call occurs [#_sprintf] ; [] |4796| 
        MOVL      XAR0,#44              ; [CPU_] |4796| 
	.dwpsn	file "../Source/prod.c",line 4797,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4797| 
	.dwpsn	file "../Source/prod.c",line 4796,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4796| 
	.dwpsn	file "../Source/prod.c",line 4797,column 5,is_stmt,isa 0
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4797| 
        ; call occurs [#_lcd_puts] ; [] |4797| 
	.dwpsn	file "../Source/prod.c",line 4799,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4799| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4799| 
        MOVB      XAR1,#36              ; [CPU_] |4799| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4799| 
        CMPB      AL,#1                 ; [CPU_] |4799| 
        B         $C$L92,EQ             ; [CPU_] |4799| 
        ; branchcc occurs ; [] |4799| 
        CMPB      AL,#2                 ; [CPU_] |4799| 
        B         $C$L105,EQ            ; [CPU_] |4799| 
        ; branchcc occurs ; [] |4799| 
        CMPB      AL,#3                 ; [CPU_] |4799| 
        B         $C$L96,EQ             ; [CPU_] |4799| 
        ; branchcc occurs ; [] |4799| 
        B         $C$L112,UNC           ; [CPU_] |4799| 
        ; branch occurs ; [] |4799| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4803| 
        MOVB      AL,#60                ; [CPU_] |4803| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4803| 
        ; call occurs [#_lcd_puts] ; [] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4805| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4806,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4806| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4807| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4806,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4806| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4807| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4807| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4807| 
        SUBB      ACC,#1                ; [CPU_] |4807| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4807| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4807| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4807| 
        ; branchcc occurs ; [] |4807| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4808,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4808| 
        ; branch occurs ; [] |4808| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4809,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4809| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_delay_us")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4809| 
        ; call occurs [#_delay_us] ; [] |4809| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4808,column 14,is_stmt,isa 0
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4808| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4808| 
        CMPB      AL,#0                 ; [CPU_] |4808| 
        B         $C$L93,EQ             ; [CPU_] |4808| 
        ; branchcc occurs ; [] |4808| 
	.dwpsn	file "../Source/prod.c",line 4812,column 7,is_stmt,isa 0
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4812| 
        ; call occurs [#_ad7738_getraw] ; [] |4812| 
	.dwpsn	file "../Source/prod.c",line 4813,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4813| 
        ADDL      XAR4,ACC              ; [CPU_] |4813| 
        MOVL      XAR0,#28              ; [CPU_] |4813| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4813| 
        MOVL      XAR0,#28              ; [CPU_] |4813| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4813| 
        ASR64     ACC:P,16              ; [CPU_] |4813| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4813| 
        MOVL      XAR0,#28              ; [CPU_] |4813| 
        ASR64     ACC:P,16              ; [CPU_] |4813| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4813| 
        MOVL      XAR0,#28              ; [CPU_] |4813| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4813| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4813| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4813| 
        MOVL      *-SP[32],P            ; [CPU_] |4813| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4807| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4807| 
        MOVB      ACC,#0                ; [CPU_] |4807| 
        SUBB      ACC,#1                ; [CPU_] |4807| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4807| 
        B         $C$L94,NEQ            ; [CPU_] |4807| 
        ; branchcc occurs ; [] |4807| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4815,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4815| 
	.dwpsn	file "../Source/prod.c",line 4819,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4819| 
        ; branch occurs ; [] |4819| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4868,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4868| 
        MOVB      AL,#60                ; [CPU_] |4868| 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4868| 
        ; call occurs [#_lcd_puts] ; [] |4868| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4870,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4870| 
        MOV       *-SP[60],AL           ; [CPU_] |4870| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4871,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4871| 
        B         $C$L99,LEQ            ; [CPU_] |4871| 
        ; branchcc occurs ; [] |4871| 
	.dwpsn	file "../Source/prod.c",line 4873,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4873| 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4873| 
        ; call occurs [#_shunt_switch] ; [] |4873| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4875,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4875| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_delay_us")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4875| 
        ; call occurs [#_delay_us] ; [] |4875| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4875| 
	.dwpsn	file "../Source/prod.c",line 4874,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4874| 
        MOVZ      AR0,AR6               ; [CPU_] |4874| 
        MOV       *-SP[47],AR6          ; [CPU_] |4874| 
        CMP       AR0,#-1               ; [CPU_] |4874| 
        B         $C$L98,NEQ            ; [CPU_] |4874| 
        ; branchcc occurs ; [] |4874| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4878,column 8,is_stmt,isa 0
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_maf_rst")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4878| 
        ; call occurs [#_maf_rst] ; [] |4878| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4880,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4880| 
        SPM       #0                    ; [CPU_] 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_delay_us")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4880| 
        ; call occurs [#_delay_us] ; [] |4880| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4883,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4884,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4884| 
	.dwpsn	file "../Source/prod.c",line 4883,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4883| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4885,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4885| 
	.dwpsn	file "../Source/prod.c",line 4884,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4884| 
	.dwpsn	file "../Source/prod.c",line 4885,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4885| 
        MOVB      ACC,#0                ; [CPU_] |4885| 
        SUBB      ACC,#1                ; [CPU_] |4885| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4885| 
        B         $C$L101,EQ            ; [CPU_] |4885| 
        ; branchcc occurs ; [] |4885| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4886,column 15,is_stmt,isa 0
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4886| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4886| 
        CMPB      AL,#0                 ; [CPU_] |4886| 
        B         $C$L104,EQ            ; [CPU_] |4886| 
        ; branchcc occurs ; [] |4886| 
	.dwpsn	file "../Source/prod.c",line 4890,column 8,is_stmt,isa 0
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4890| 
        ; call occurs [#_ad7738_getraw] ; [] |4890| 
	.dwpsn	file "../Source/prod.c",line 4891,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4891| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4891| 
        ADDL      XAR4,ACC              ; [CPU_] |4891| 
        MOVL      XAR0,#26              ; [CPU_] |4891| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4891| 
        MOVL      XAR0,#26              ; [CPU_] |4891| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4891| 
        ASR64     ACC:P,16              ; [CPU_] |4891| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4891| 
        MOVL      XAR0,#26              ; [CPU_] |4891| 
        ASR64     ACC:P,16              ; [CPU_] |4891| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4891| 
        MOVL      XAR0,#26              ; [CPU_] |4891| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4891| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4891| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4891| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4891| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4891| 
	.dwpsn	file "../Source/prod.c",line 4885,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4885| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4885| 
        MOVB      ACC,#0                ; [CPU_] |4885| 
        SUBB      ACC,#1                ; [CPU_] |4885| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4885| 
        B         $C$L100,NEQ           ; [CPU_] |4885| 
        ; branchcc occurs ; [] |4885| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4870,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4870| 
        ADDB      XAR1,#4               ; [CPU_] |4870| 
        MOV       AL,*-SP[60]           ; [CPU_] |4870| 
        CMPB      AL,#2                 ; [CPU_] |4870| 
        B         $C$L97,LT             ; [CPU_] |4870| 
        ; branchcc occurs ; [] |4870| 
	.dwpsn	file "../Source/prod.c",line 4895,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4895| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4895| 
        ; call occurs [#_shunt_switch] ; [] |4895| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4897,column 6,is_stmt,isa 0
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("_maf_rst")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4897| 
        ; call occurs [#_maf_rst] ; [] |4897| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4900,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4900| 
        MOV       AH,#17948             ; [CPU_] |4900| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4900| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4900| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4900| 
        ; call occurs [#FS$$MPY] ; [] |4900| 
        MOVL      XAR1,ACC              ; [CPU_] |4900| 
        MOVL      P,*-SP[28]            ; [CPU_] |4900| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4900| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4900| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4900| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4900| 
        ; call occurs [#LL$$TOFS] ; [] |4900| 
        MOVL      XAR0,#88              ; [CPU_] |4900| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4900| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4900| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4900| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4900| 
        ; call occurs [#FS$$MPY] ; [] |4900| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4900| 
        MOVL      ACC,XAR1              ; [CPU_] |4900| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4900| 
        ; call occurs [#FS$$DIV] ; [] |4900| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4900| 
        MOVB      XAR0,#96              ; [CPU_] |4900| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4900| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4902| 
        MOVL      XAR0,#52              ; [CPU_] |4902| 
        ADDB      ACC,#96               ; [CPU_] |4902| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4902| 
        MOVL      XAR0,#88              ; [CPU_] |4902| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4902| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4902| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4902| 
        ; call occurs [#FS$$NEG] ; [] |4902| 
        MOVB      XAR0,#96              ; [CPU_] |4902| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4902| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4902| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4902| 
        ; call occurs [#FS$$MPY] ; [] |4902| 
        MOVL      XAR1,ACC              ; [CPU_] |4902| 
        MOVL      P,*-SP[32]            ; [CPU_] |4902| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4902| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4902| 
        ; call occurs [#LL$$TOFS] ; [] |4902| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4902| 
        MOVL      ACC,XAR1              ; [CPU_] |4902| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4902| 
        ; call occurs [#FS$$MPY] ; [] |4902| 
        MOVL      XAR6,ACC              ; [CPU_] |4902| 
        MOV       AL,#16384             ; [CPU_] |4902| 
        MOV       AH,#17948             ; [CPU_] |4902| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4902| 
        MOVL      ACC,XAR6              ; [CPU_] |4902| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4902| 
        ; call occurs [#FS$$DIV] ; [] |4902| 
        MOVL      XAR0,#36              ; [CPU_] |4902| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4902| 
        MOVB      XAR1,#118             ; [CPU_] |4902| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4902| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4905,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4905| 
	.dwpsn	file "../Source/prod.c",line 4906,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4906| 
        ; branch occurs ; [] |4906| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4887,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4887| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_delay_us")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4887| 
        ; call occurs [#_delay_us] ; [] |4887| 
	.dwpsn	file "../Source/prod.c",line 4886,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4886| 
        ; branch occurs ; [] |4886| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4823,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4823| 
	.dwpsn	file "../Source/prod.c",line 4824,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4824| 
	.dwpsn	file "../Source/prod.c",line 4823,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4823| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4823| 
	.dwpsn	file "../Source/prod.c",line 4824,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4824| 
        MOVZ      AR5,AR5               ; [CPU_] |4824| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4826,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4826| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4826| 
        MOV       *XAR5++,AL            ; [CPU_] |4826| 
	.dwpsn	file "../Source/prod.c",line 4827,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4827| 
	.dwpsn	file "../Source/prod.c",line 4825,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4825| 
        ; branchcc occurs ; [] |4825| 
	.dwpsn	file "../Source/prod.c",line 4830,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4830| 
        MOVB      XAR0,#46              ; [CPU_] |4830| 
        MOV       AL,*-SP[47]           ; [CPU_] |4830| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4830| 
        B         $C$L112,HIS           ; [CPU_] |4830| 
        ; branchcc occurs ; [] |4830| 
        MOVL      XAR0,#36              ; [CPU_] |4830| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4830| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4830| 
        ADDL      ACC,XAR6              ; [CPU_] |4830| 
        ADDB      ACC,#48               ; [CPU_] |4830| 
        MOVL      XAR1,ACC              ; [CPU_] |4830| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4830| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4830| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4830| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4830| 
        ; call occurs [#FS$$CMP] ; [] |4830| 
        CMPB      AL,#0                 ; [CPU_] |4830| 
        B         $C$L112,NEQ           ; [CPU_] |4830| 
        ; branchcc occurs ; [] |4830| 
	.dwpsn	file "../Source/prod.c",line 4834,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4834| 
        MOVB      AL,#1                 ; [CPU_] |4834| 
        MOVL      XAR0,#44              ; [CPU_] |4834| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4834| 
        ADD       AL,*-SP[47]           ; [CPU_] |4834| 
        MOV       *-SP[3],AL            ; [CPU_] |4834| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4834| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("_sprintf")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4834| 
        ; call occurs [#_sprintf] ; [] |4834| 
        MOVL      XAR0,#44              ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4834,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4835| 
        ; call occurs [#_lcd_puts] ; [] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4838,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4838| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4838,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4838| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4839| 
        MOVB      ACC,#0                ; [CPU_] |4839| 
        SUBB      ACC,#1                ; [CPU_] |4839| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4839| 
        B         $C$L108,EQ            ; [CPU_] |4839| 
        ; branchcc occurs ; [] |4839| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4840,column 14,is_stmt,isa 0
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4840| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4840| 
        CMPB      AL,#0                 ; [CPU_] |4840| 
        B         $C$L111,EQ            ; [CPU_] |4840| 
        ; branchcc occurs ; [] |4840| 
	.dwpsn	file "../Source/prod.c",line 4844,column 7,is_stmt,isa 0
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4844| 
        ; call occurs [#_ad7738_getraw] ; [] |4844| 
	.dwpsn	file "../Source/prod.c",line 4845,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4845| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4845| 
        ADDL      XAR4,ACC              ; [CPU_] |4845| 
        MOVL      XAR0,#24              ; [CPU_] |4845| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4845| 
        MOVL      XAR0,#24              ; [CPU_] |4845| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4845| 
        ASR64     ACC:P,16              ; [CPU_] |4845| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4845| 
        MOVL      XAR0,#24              ; [CPU_] |4845| 
        ASR64     ACC:P,16              ; [CPU_] |4845| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4845| 
        MOVL      XAR0,#24              ; [CPU_] |4845| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4845| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4845| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4845| 
        MOVL      *-SP[32],P            ; [CPU_] |4845| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4845| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4839| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4839| 
        MOVB      ACC,#0                ; [CPU_] |4839| 
        SUBB      ACC,#1                ; [CPU_] |4839| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4839| 
        B         $C$L107,NEQ           ; [CPU_] |4839| 
        ; branchcc occurs ; [] |4839| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4847,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4847| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4847| 
        MOV       *-SP[2],#0            ; [CPU_] |4847| 
        MOV       *-SP[1],#0            ; [CPU_] |4847| 
        MOVL      P,*-SP[32]            ; [CPU_] |4847| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4847| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4847| 
        ; call occurs [#LL$$DIV] ; [] |4847| 
        ADDB      XAR1,#24              ; [CPU_] |4847| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4849| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4849| 
	.dwpsn	file "../Source/prod.c",line 4847,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4847| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4849| 
        MOV       AL,*-SP[47]           ; [CPU_] |4849| 
        SUB       AL,AR6                ; [CPU_] |4849| 
        MOVZ      AR7,AL                ; [CPU_] |4849| 
        MOVL      XAR4,#65535           ; [CPU_U] |4849| 
        MOVL      ACC,XAR4              ; [CPU_] |4849| 
        CMPL      ACC,XAR7              ; [CPU_] |4849| 
        B         $C$L103,NEQ           ; [CPU_] |4849| 
        ; branchcc occurs ; [] |4849| 
	.dwpsn	file "../Source/prod.c",line 4852,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4852| 
        B         $C$L110,UNC           ; [CPU_] |4852| 
        ; branch occurs ; [] |4852| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4853,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4853| 
        MOVB      AL,#10                ; [CPU_] |4853| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4853| 
        MOV       T,*-SP[58]            ; [CPU_] |4853| 
        MPYU      ACC,T,AL              ; [CPU_] |4853| 
        MOVL      XAR0,#88              ; [CPU_] |4853| 
        ADDL      ACC,XAR6              ; [CPU_] |4853| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4853| 
        MOVL      XAR0,#36              ; [CPU_] |4853| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4853| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4853| 
        MOV       ACC,AL << 1           ; [CPU_] |4853| 
        ADDL      ACC,XAR6              ; [CPU_] |4853| 
        MOVL      XAR3,ACC              ; [CPU_] |4853| 
        MOVB      XAR0,#48              ; [CPU_] |4853| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4853| 
        MOVB      XAR0,#50              ; [CPU_] |4853| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4853| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4853| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4853| 
        ; call occurs [#FS$$SUB] ; [] |4853| 
        MOVL      XAR0,#42              ; [CPU_] |4853| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4853| 
        MOVB      XAR0,#74              ; [CPU_] |4853| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4853| 
        MOVB      XAR0,#72              ; [CPU_] |4853| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4853| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4853| 
        ; call occurs [#L$$TOFS] ; [] |4853| 
        MOVL      XAR0,#42              ; [CPU_] |4853| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4853| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4853| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4853| 
        ; call occurs [#FS$$DIV] ; [] |4853| 
        MOVL      XAR0,#88              ; [CPU_] |4853| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4853| 
        MOVB      XAR1,#44              ; [CPU_] |4853| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4853| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4853| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4853| 
        ; call occurs [#FS$$DIV] ; [] |4853| 
        MOVB      XAR0,#96              ; [CPU_] |4853| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4853| 
	.dwpsn	file "../Source/prod.c",line 4857,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4857| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4857| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4857| 
        MOVB      XAR1,#44              ; [CPU_] |4857| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4857| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4857| 
        ; call occurs [#FS$$MPY] ; [] |4857| 
        MOVL      XAR0,#88              ; [CPU_] |4857| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4857| 
        MOVB      XAR0,#72              ; [CPU_] |4857| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4857| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4857| 
        ; call occurs [#L$$TOFS] ; [] |4857| 
        MOVL      XAR0,#88              ; [CPU_] |4857| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4857| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4857| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4857| 
        ; call occurs [#FS$$MPY] ; [] |4857| 
        MOVB      XAR0,#48              ; [CPU_] |4857| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4857| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4857| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4857| 
        ; call occurs [#FS$$SUB] ; [] |4857| 
        MOVB      XAR0,#118             ; [CPU_] |4857| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4857| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4852,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4852| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4852,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4852| 
        ADDB      AL,#-1                ; [CPU_] |4852| 
        CMP       AL,*-SP[47]           ; [CPU_] |4852| 
        B         $C$L109,GT            ; [CPU_] |4852| 
        ; branchcc occurs ; [] |4852| 
	.dwpsn	file "../Source/prod.c",line 4864,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4864| 
        ; branch occurs ; [] |4864| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4841,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4841| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("_delay_us")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4841| 
        ; call occurs [#_delay_us] ; [] |4841| 
	.dwpsn	file "../Source/prod.c",line 4840,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4840| 
        ; branch occurs ; [] |4840| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4831,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4831| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4913,column 5,is_stmt,isa 0
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4913| 
        ; call occurs [#_lcd_clear] ; [] |4913| 
	.dwpsn	file "../Source/prod.c",line 4914,column 5,is_stmt,isa 0
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("_update_units")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4914| 
        ; call occurs [#_update_units] ; [] |4914| 
        MOV       AL,*-SP[47]           ; [CPU_] |4914| 
	.dwpsn	file "../Source/prod.c",line 4917,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4917| 
        ; branchcc occurs ; [] |4917| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4919,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4919| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4920,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4919,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4919| 
	.dwpsn	file "../Source/prod.c",line 4920,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4919,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4919| 
	.dwpsn	file "../Source/prod.c",line 4920,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4919,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4919| 
        B         $C$L114,HI            ; [CPU_] |4919| 
        ; branchcc occurs ; [] |4919| 
	.dwpsn	file "../Source/prod.c",line 4922,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4922| 
	.dwpsn	file "../Source/prod.c",line 4923,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4923| 
        ; branch occurs ; [] |4923| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4633,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4633| 
        B         $C$L320,LO            ; [CPU_] |4633| 
        ; branchcc occurs ; [] |4633| 
	.dwpsn	file "../Source/prod.c",line 4638,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4638| 
        MOV       *-SP[58],AL           ; [CPU_] |4638| 
	.dwpsn	file "../Source/prod.c",line 4640,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4640| 
	.dwpsn	file "../Source/prod.c",line 4639,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4639| 
        MOV       *-SP[57],AL           ; [CPU_] |4639| 
	.dwpsn	file "../Source/prod.c",line 4640,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4640| 
        MOV       AL,*-SP[58]           ; [CPU_] |4640| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4640| 
        CMPB      AL,#4                 ; [CPU_] |4640| 
        B         $C$L320,HIS           ; [CPU_] |4640| 
        ; branchcc occurs ; [] |4640| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4640| 
        B         $C$L320,HIS           ; [CPU_] |4640| 
        ; branchcc occurs ; [] |4640| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4646| 
        MOVL      ACC,XAR4              ; [CPU_] |4646| 
        ADDB      ACC,#4                ; [CPU_] |4646| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4646| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4646| 
        CMPB      AL,#16                ; [CPU_] |4646| 
        B         $C$L320,HIS           ; [CPU_] |4646| 
        ; branchcc occurs ; [] |4646| 
	.dwpsn	file "../Source/prod.c",line 4650,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4650| 
        MOVL      XAR0,#64              ; [CPU_] |4650| 
        CMPB      AL,#0                 ; [CPU_] |4650| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4650| 
        B         $C$L116,LEQ           ; [CPU_] |4650| 
        ; branchcc occurs ; [] |4650| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4650| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4650| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4650| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4650| 
        MOVL      XAR0,ACC              ; [CPU_] |4650| 
	.dwpsn	file "../Source/prod.c",line 4651,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4651| 
        ADD       AL,AR4                ; [CPU_] |4651| 
        MOVZ      AR6,AL                ; [CPU_] |4651| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4651| 
	.dwpsn	file "../Source/prod.c",line 4650,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4650| 
        ; branch occurs ; [] |4650| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4645,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4645| 
	.dwpsn	file "../Source/prod.c",line 4650,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4650| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4653,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4653| 
        MOVL      XAR0,#86              ; [CPU_] |4653| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4653| 
	.dwpsn	file "../Source/prod.c",line 4655,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4655| 
        MOVL      XAR4,ACC              ; [CPU_] |4655| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4655| 
        CMPB      AL,#16                ; [CPU_] |4655| 
        B         $C$L320,HIS           ; [CPU_] |4655| 
        ; branchcc occurs ; [] |4655| 
        ADDB      XAR4,#1               ; [CPU_] |4655| 
	.dwpsn	file "../Source/prod.c",line 4660,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4655,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4655| 
        MOVL      P,XAR4                ; [CPU_] |4655| 
	.dwpsn	file "../Source/prod.c",line 4660,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4660| 
        ; branchcc occurs ; [] |4660| 
        MOVZ      AR5,AL                ; [CPU_] |4660| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4661,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4661| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4661| 
        MOV       *XAR4++,AL            ; [CPU_] |4661| 
        ADDB      XAR7,#1               ; [CPU_] |4661| 
        MOVL      P,XAR7                ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4660,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4660| 
        ; branchcc occurs ; [] |4660| 
        B         $C$L120,UNC           ; [CPU_] |4660| 
        ; branch occurs ; [] |4660| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4660,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4660| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4663,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4663| 
        ADD       ACC,AR5               ; [CPU_] |4663| 
        MOVL      XAR4,ACC              ; [CPU_] |4663| 
        MOVB      XAR0,#16              ; [CPU_] |4663| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4663| 
	.dwpsn	file "../Source/prod.c",line 4665,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4665| 
        MOV       AL,*XAR7              ; [CPU_] |4665| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4665| 
        ADDB      XAR7,#1               ; [CPU_] |4665| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4665| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4665| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4669,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4669| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4670,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4669,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4669| 
        MOV       *XAR5++,AL            ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4670,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4670| 
        MOVL      P,XAR7                ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4668,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4668| 
        ; branchcc occurs ; [] |4668| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4676,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4676| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4676| 
	.dwpsn	file "../Source/prod.c",line 4677,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4677| 
	.dwpsn	file "../Source/prod.c",line 4676,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4676| 
        MOV       *XAR0++,AL            ; [CPU_] |4676| 
	.dwpsn	file "../Source/prod.c",line 4677,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4677| 
        MOVL      P,XAR5                ; [CPU_] |4677| 
	.dwpsn	file "../Source/prod.c",line 4675,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4675| 
        ; branchcc occurs ; [] |4675| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4680| 
        MOVB      XAR0,#40              ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4682,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4680| 
        MOVB      XAR0,#142             ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4682,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4682,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4682| 
        MOV       AL,*XAR7              ; [CPU_] |4682| 
        ADDB      XAR7,#1               ; [CPU_] |4682| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4683,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4683| 
	.dwpsn	file "../Source/prod.c",line 4682,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4683,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4683| 
        CMPB      AL,#6                 ; [CPU_] |4683| 
        B         $C$L123,GT            ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        CMPB      AL,#6                 ; [CPU_] |4683| 
        B         $C$L126,EQ            ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        CMPB      AL,#1                 ; [CPU_] |4683| 
        B         $C$L129,LOS           ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        MOV       AH,AL                 ; [CPU_] |4683| 
        ADDB      AH,#-2                ; [CPU_] |4683| 
        CMPB      AH,#2                 ; [CPU_] |4683| 
        B         $C$L128,LOS           ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        CMPB      AL,#5                 ; [CPU_] |4683| 
        B         $C$L127,EQ            ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        B         $C$L124,UNC           ; [CPU_] |4683| 
        ; branch occurs ; [] |4683| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4683| 
        ADDB      AH,#-7                ; [CPU_] |4683| 
        CMPB      AH,#1                 ; [CPU_] |4683| 
        B         $C$L125,LOS           ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        CMPB      AL,#15                ; [CPU_] |4683| 
        B         $C$L125,EQ            ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4705,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4705| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4705| 
	.dwpsn	file "../Source/prod.c",line 4706,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4706| 
        ; branch occurs ; [] |4706| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4702,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4702| 
	.dwpsn	file "../Source/prod.c",line 4703,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4703| 
        ; branch occurs ; [] |4703| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4697,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4698,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4698| 
        ; branch occurs ; [] |4698| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4694| 
	.dwpsn	file "../Source/prod.c",line 4695,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4695| 
        ; branch occurs ; [] |4695| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4691,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4692| 
        ; branch occurs ; [] |4692| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4686,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4686| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4708,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4708| 
        MOVB      XAR0,#43              ; [CPU_] |4708| 
        ADDB      XAR7,#42              ; [CPU_] |4708| 
        MOV       AL,*XAR7              ; [CPU_] |4708| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4708| 
	.dwpsn	file "../Source/prod.c",line 4709,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4709| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4709| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4709| 
	.dwpsn	file "../Source/prod.c",line 4711,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4711| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4711| 
        CMPB      AL,#1                 ; [CPU_] |4711| 
        B         $C$L137,EQ            ; [CPU_] |4711| 
        ; branchcc occurs ; [] |4711| 
        CMPB      AL,#2                 ; [CPU_] |4711| 
        B         $C$L131,EQ            ; [CPU_] |4711| 
        ; branchcc occurs ; [] |4711| 
        CMPB      AL,#3                 ; [CPU_] |4711| 
        B         $C$L135,EQ            ; [CPU_] |4711| 
        ; branchcc occurs ; [] |4711| 
        B         $C$L134,UNC           ; [CPU_] |4711| 
        ; branch occurs ; [] |4711| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4728| 
        MOVB      XAR0,#46              ; [CPU_] |4728| 
        MOV       AL,*XAR7              ; [CPU_] |4728| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4728| 
	.dwpsn	file "../Source/prod.c",line 4729,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4729| 
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4728| 
	.dwpsn	file "../Source/prod.c",line 4729,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4729| 
        CMPB      AL,#12                ; [CPU_] |4729| 
        B         $C$L134,GT            ; [CPU_] |4729| 
        ; branchcc occurs ; [] |4729| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4728| 
	.dwpsn	file "../Source/prod.c",line 4734,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4734| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4728| 
        MOVL      P,XAR6                ; [CPU_] |4728| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4742,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4742| 
        B         $C$L140,LEQ           ; [CPU_] |4742| 
        ; branchcc occurs ; [] |4742| 
	.dwpsn	file "../Source/prod.c",line 4735,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4735| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4735| 
        ADDB      ACC,#48               ; [CPU_] |4735| 
        MOVL      XAR0,ACC              ; [CPU_] |4735| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4737,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4737| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4737| 
	.dwpsn	file "../Source/prod.c",line 4738,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4738| 
	.dwpsn	file "../Source/prod.c",line 4737,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4737| 
        MOV       *XAR0++,AL            ; [CPU_] |4737| 
	.dwpsn	file "../Source/prod.c",line 4738,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4738| 
        MOVL      P,XAR5                ; [CPU_] |4738| 
	.dwpsn	file "../Source/prod.c",line 4736,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4736| 
        ; branchcc occurs ; [] |4736| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4734,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4734| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4734| 
        ; branch occurs ; [] |4734| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4760,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4760| 
	.dwpsn	file "../Source/prod.c",line 4761,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4761| 
        ; branch occurs ; [] |4761| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4746,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4746| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4746| 
        MOVZ      AR0,AR5               ; [CPU_] |4746| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4748,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4748| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4749,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4749| 
	.dwpsn	file "../Source/prod.c",line 4748,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4748| 
        MOV       *XAR0++,AL            ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4749,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4749| 
        MOVL      P,XAR5                ; [CPU_] |4749| 
	.dwpsn	file "../Source/prod.c",line 4747,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4747| 
        ; branchcc occurs ; [] |4747| 
	.dwpsn	file "../Source/prod.c",line 4752,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4752| 
        MOV       AH,#0                 ; [CPU_] |4752| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4752| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4752| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4752| 
        ; call occurs [#FS$$CMP] ; [] |4752| 
        CMPB      AL,#0                 ; [CPU_] |4752| 
        B         $C$L139,NEQ           ; [CPU_] |4752| 
        ; branchcc occurs ; [] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4753| 
        MOV       AH,#16314             ; [CPU_] |4753| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4753| 
        B         $C$L139,UNC           ; [CPU_] |4753| 
        ; branch occurs ; [] |4753| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4716,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4716| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4717| 
	.dwpsn	file "../Source/prod.c",line 4716,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4716| 
        MOV       *XAR0++,AL            ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4717| 
        MOVL      P,XAR5                ; [CPU_] |4717| 
	.dwpsn	file "../Source/prod.c",line 4715,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4715| 
        ; branchcc occurs ; [] |4715| 
	.dwpsn	file "../Source/prod.c",line 4720,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4720| 
        MOVL      XAR0,#88              ; [CPU_] |4720| 
        MOVL      ACC,XAR1              ; [CPU_] |4720| 
        ADDB      ACC,#96               ; [CPU_] |4720| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4720| 
        MOVL      XAR0,#52              ; [CPU_] |4720| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4720| 
        MOV       AL,#0                 ; [CPU_] |4720| 
        MOV       AH,#0                 ; [CPU_] |4720| 
        MOVB      XAR0,#96              ; [CPU_] |4720| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4720| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4720| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4720| 
        ; call occurs [#FS$$CMP] ; [] |4720| 
        CMPB      AL,#0                 ; [CPU_] |4720| 
        B         $C$L139,NEQ           ; [CPU_] |4720| 
        ; branchcc occurs ; [] |4720| 
	.dwpsn	file "../Source/prod.c",line 4721,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4721| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4721| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4721| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4723,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4723| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4764,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4764| 
        MOVB      XAR0,#36              ; [CPU_] |4764| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4764| 
        B         $C$L320,EQ            ; [CPU_] |4764| 
        ; branchcc occurs ; [] |4764| 
	.dwpsn	file "../Source/prod.c",line 4768,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4768| 
        MOV       AL,#0                 ; [CPU_] |4768| 
        MOV       AH,#0                 ; [CPU_] |4768| 
	.dwpsn	file "../Source/prod.c",line 4769,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4768,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4768| 
	.dwpsn	file "../Source/prod.c",line 4769,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4769| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4770,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4770| 
        MOV       AL,#0                 ; [CPU_] |4770| 
        MOV       AH,#0                 ; [CPU_] |4770| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4770| 
	.dwpsn	file "../Source/prod.c",line 4771,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4771| 
        MOV       AL,*-SP[58]           ; [CPU_] |4771| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4771| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4771| 
	.dwpsn	file "../Source/prod.c",line 4773,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4773| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4773| 
        ; branch occurs ; [] |4773| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4774,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4774| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4774| 
        ADD       ACC,PL                ; [CPU_] |4774| 
        MOVL      XAR7,ACC              ; [CPU_] |4774| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4774| 
        ADD       ACC,PL                ; [CPU_] |4774| 
        MOVL      XAR4,ACC              ; [CPU_] |4774| 
	.dwpsn	file "../Source/prod.c",line 4773,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4773| 
	.dwpsn	file "../Source/prod.c",line 4774,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4774| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4774| 
        MOV       AL,PL                 ; [CPU_] |4774| 
        ADDB      AL,#1                 ; [CPU_] |4774| 
        MOV       *-SP[61],AL           ; [CPU_] |4774| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4773,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4773| 
        B         $C$L141,HI            ; [CPU_] |4773| 
        ; branchcc occurs ; [] |4773| 
        B         $C$L743,UNC           ; [CPU_] |4773| 
        ; branch occurs ; [] |4773| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4581,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4581| 
        B         $C$L320,LO            ; [CPU_] |4581| 
        ; branchcc occurs ; [] |4581| 
        MOVL      ACC,XAR4              ; [CPU_] |4581| 
        MOVL      XAR0,#66              ; [CPU_] |4581| 
        ADDB      ACC,#2                ; [CPU_] |4581| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4581| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4581| 
        B         $C$L320,LT            ; [CPU_] |4581| 
        ; branchcc occurs ; [] |4581| 
        MOVL      XAR5,XAR4             ; [CPU_] |4581| 
        MOVL      XAR0,#66              ; [CPU_] |4581| 
        CMPB      AL,#4                 ; [CPU_] |4581| 
        ADDB      XAR5,#2               ; [CPU_] |4581| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4581| 
        B         $C$L320,GEQ           ; [CPU_] |4581| 
        ; branchcc occurs ; [] |4581| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4581| 
        B         $C$L320,LT            ; [CPU_] |4581| 
        ; branchcc occurs ; [] |4581| 
        CMPB      AH,#2                 ; [CPU_] |4581| 
        B         $C$L320,GT            ; [CPU_] |4581| 
        ; branchcc occurs ; [] |4581| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4587,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4587| 
        ; branchcc occurs ; [] |4587| 
	.dwpsn	file "../Source/prod.c",line 4590,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4590| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4590| 
        MOVL      XAR0,#66              ; [CPU_] |4590| 
        MOVU      ACC,AL                ; [CPU_] |4590| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4590| 
        CMPL      ACC,XAR6              ; [CPU_] |4590| 
        B         $C$L145,EQ            ; [CPU_] |4590| 
        ; branchcc occurs ; [] |4590| 
        B         $C$L320,UNC           ; [CPU_] |4590| 
        ; branch occurs ; [] |4590| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4588,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4588| 
        MOVL      XAR0,#66              ; [CPU_] |4588| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4588| 
        MOV       *-SP[58],AL           ; [CPU_] |4588| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4588| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4596| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4595,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4595| 
        MOV       *-SP[47],AL           ; [CPU_] |4595| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4595| 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4596| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4599| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4599| 
        MOVZ      AR4,AR4               ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4597| 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4599| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4599| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4601,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4601| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4602,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4602| 
        MOV       *XAR7++,AL            ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4603,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4603| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4603| 
        MOV       *XAR4++,AL            ; [CPU_] |4603| 
	.dwpsn	file "../Source/prod.c",line 4604,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4604| 
        MOV       *XAR7++,AL            ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4600,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4600| 
        ; branchcc occurs ; [] |4600| 
	.dwpsn	file "../Source/prod.c",line 4607,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4607| 
        SUBB      XAR4,#24              ; [CPU_U] |4607| 
        MOVZ      AR4,AR4               ; [CPU_] |4607| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4607| 
        ADDL      XAR4,ACC              ; [CPU_] |4607| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4607| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4607| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4607| 
        MOVL      ACC,XAR1              ; [CPU_] |4607| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4607| 
        ; call occurs [#FS$$CMP] ; [] |4607| 
        CMPB      AL,#0                 ; [CPU_] |4607| 
        B         $C$L320,LT            ; [CPU_] |4607| 
        ; branchcc occurs ; [] |4607| 
        MOV       AL,#0                 ; [CPU_] |4607| 
        MOV       AH,#16672             ; [CPU_] |4607| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4607| 
        MOVL      ACC,XAR1              ; [CPU_] |4607| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4607| 
        ; call occurs [#FS$$CMP] ; [] |4607| 
        CMPB      AL,#0                 ; [CPU_] |4607| 
        B         $C$L320,GT            ; [CPU_] |4607| 
        ; branchcc occurs ; [] |4607| 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4612| 
        MOV       AH,#16672             ; [CPU_] |4612| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4612| 
        MOVL      ACC,XAR1              ; [CPU_] |4612| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4612| 
        ; call occurs [#FS$$ADD] ; [] |4612| 
        MOVL      XAR6,ACC              ; [CPU_] |4612| 
        MOV       AL,#65024             ; [CPU_] |4612| 
        MOV       AH,#18175             ; [CPU_] |4612| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4612| 
        MOVL      ACC,XAR6              ; [CPU_] |4612| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4612| 
        ; call occurs [#FS$$MPY] ; [] |4612| 
        MOVL      XAR6,ACC              ; [CPU_] |4612| 
        MOV       AL,#0                 ; [CPU_] |4612| 
        MOV       AH,#16672             ; [CPU_] |4612| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4612| 
        MOVL      ACC,XAR6              ; [CPU_] |4612| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4612| 
        ; call occurs [#FS$$DIV] ; [] |4612| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4612| 
        ; call occurs [#FS$$TOLL] ; [] |4612| 
	.dwpsn	file "../Source/prod.c",line 4613,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4613| 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4603,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4603| 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4613,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4613| 
        CMP64     ACC:P                 ; [CPU_] |4613| 
        B         $C$L148,LEQ           ; [CPU_] |4613| 
        ; branchcc occurs ; [] |4613| 
	.dwpsn	file "../Source/prod.c",line 4615,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4615| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4615| 
        MOV       *-SP[2],#0            ; [CPU_] |4615| 
        MOV       *-SP[1],#0            ; [CPU_] |4615| 
        MOVL      P,*-SP[32]            ; [CPU_] |4615| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4615| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$660, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4615| 
        ; call occurs [#LL$$CMP] ; [] |4615| 
        CMPB      AL,#0                 ; [CPU_] |4615| 
        B         $C$L147,GEQ           ; [CPU_] |4615| 
        ; branchcc occurs ; [] |4615| 
	.dwpsn	file "../Source/prod.c",line 4618,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4618| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4618| 
        MOVU      ACC,AR4               ; [CPU_] |4618| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4618| 
        MOVL      XAR1,ACC              ; [CPU_] |4618| 
        MOV       AL,*-SP[32]           ; [CPU_] |4618| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4618| 
        B         $C$L149,UNC           ; [CPU_] |4618| 
        ; branch occurs ; [] |4618| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4616,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4616| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4616| 
        MOVU      ACC,AR4               ; [CPU_] |4616| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4616| 
        MOVL      XAR1,ACC              ; [CPU_] |4616| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4616| 
	.dwpsn	file "../Source/prod.c",line 4617,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4617| 
        ; branch occurs ; [] |4617| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4614,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4614| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4614| 
        MOVU      ACC,AR4               ; [CPU_] |4614| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4614| 
        MOVL      XAR1,ACC              ; [CPU_] |4614| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4614| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4621,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4621| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4621| 
        ; call occurs [#_dac_setmode] ; [] |4621| 
	.dwpsn	file "../Source/prod.c",line 4623,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4623| 
        MOV       AH,*-SP[47]           ; [CPU_] |4623| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4623| 
        ; call occurs [#_mcbsp_xmit] ; [] |4623| 
	.dwpsn	file "../Source/prod.c",line 4624,column 5,is_stmt,isa 0
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("_latch_dac")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4624| 
        ; call occurs [#_latch_dac] ; [] |4624| 
	.dwpsn	file "../Source/prod.c",line 4626,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4626| 
        MOV       T,*-SP[59]            ; [CPU_] |4626| 
        LSL       AL,T                  ; [CPU_] |4626| 
        OR        *-SP[56],AL           ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4629| 
        ; branch occurs ; [] |4629| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4535| 
        B         $C$L320,LO            ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4535| 
        MOVL      XAR0,#66              ; [CPU_] |4535| 
        MOVL      ACC,XAR5              ; [CPU_] |4535| 
        ADDB      ACC,#2                ; [CPU_] |4535| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4535| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4535| 
        MOVZ      AR7,AR6               ; [CPU_] |4535| 
        MOV       AL,*-SP[58]           ; [CPU_] |4535| 
        MOVU      ACC,AL                ; [CPU_] |4535| 
        CMPL      ACC,XAR7              ; [CPU_] |4535| 
        B         $C$L320,NEQ           ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4535| 
        CMPB      AL,#7                 ; [CPU_] |4535| 
        B         $C$L320,NEQ           ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4541| 
        MOVL      ACC,XAR5              ; [CPU_] |4541| 
        MOVL      XAR0,#66              ; [CPU_] |4541| 
	.dwpsn	file "../Source/prod.c",line 4540,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4540| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4541| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4541| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4541| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4541| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4544,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4544| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4546,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4546| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4547,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4547| 
        MOV       *XAR7++,AL            ; [CPU_] |4547| 
	.dwpsn	file "../Source/prod.c",line 4548,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4548| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4548| 
        MOV       *XAR0++,AL            ; [CPU_] |4548| 
	.dwpsn	file "../Source/prod.c",line 4549,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4549| 
        MOV       *XAR7++,AL            ; [CPU_] |4549| 
	.dwpsn	file "../Source/prod.c",line 4545,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4545| 
        ; branchcc occurs ; [] |4545| 
	.dwpsn	file "../Source/prod.c",line 4543,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4543| 
	.dwpsn	file "../Source/prod.c",line 4549,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4549| 
	.dwpsn	file "../Source/prod.c",line 4543,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4543| 
        ; branchcc occurs ; [] |4543| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4556| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4556| 
        ; call occurs [#U$$TOFS] ; [] |4556| 
        MOVL      XAR1,ACC              ; [CPU_] |4556| 
        MOV       AL,*-SP[35]           ; [CPU_] |4556| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4556| 
        ; call occurs [#U$$TOFS] ; [] |4556| 
        MOVL      XAR0,#86              ; [CPU_] |4556| 
        MOV       T,*-SP[58]            ; [CPU_] |4556| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4556| 
        MOVL      XAR0,#40              ; [CPU_] |4556| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4556| 
        MOVB      AL,#12                ; [CPU_] |4556| 
        MPYU      ACC,T,AL              ; [CPU_] |4556| 
        MOVL      XAR0,#88              ; [CPU_] |4556| 
        ADDL      ACC,XAR6              ; [CPU_] |4556| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4556| 
        MOVL      XAR0,#86              ; [CPU_] |4556| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4556| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4556| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4556| 
        ; call occurs [#FS$$SUB] ; [] |4556| 
        MOVL      XAR0,#42              ; [CPU_] |4556| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4556| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4556| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4556| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4556| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4556| 
        ; call occurs [#FS$$SUB] ; [] |4556| 
        MOVL      XAR0,#42              ; [CPU_] |4556| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4556| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4556| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4556| 
        ; call occurs [#FS$$DIV] ; [] |4556| 
        MOVL      XAR0,#88              ; [CPU_] |4556| 
        MOVL      XAR6,ACC              ; [CPU_] |4556| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4556| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4556| 
        MOVL      XAR4,ACC              ; [CPU_] |4556| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4556| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4559| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4559| 
        ; call occurs [#U$$TOFS] ; [] |4559| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4559| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4559| 
        ; call occurs [#FS$$SUB] ; [] |4559| 
        MOVL      XAR1,ACC              ; [CPU_] |4559| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4559| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4559| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4559| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4559| 
        ; call occurs [#FS$$SUB] ; [] |4559| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4559| 
        MOVL      ACC,XAR1              ; [CPU_] |4559| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4559| 
        ; call occurs [#FS$$DIV] ; [] |4559| 
        MOVL      XAR0,#88              ; [CPU_] |4559| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4559| 
        MOVL      XAR6,ACC              ; [CPU_] |4559| 
        MOVL      ACC,XAR1              ; [CPU_] |4559| 
        ADD       ACC,#49 << 6          ; [CPU_] |4559| 
        MOVL      XAR4,ACC              ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4562| 
        MOVL      XAR4,ACC              ; [CPU_] |4562| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4562| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4562| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4562| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4562| 
        ; call occurs [#FS$$MPY] ; [] |4562| 
        MOVL      XAR0,#86              ; [CPU_] |4562| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4562| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4562| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4562| 
        ; call occurs [#FS$$SUB] ; [] |4562| 
        MOVL      XAR6,ACC              ; [CPU_] |4562| 
        MOVL      ACC,XAR1              ; [CPU_] |4562| 
        ADD       ACC,#785 << 2         ; [CPU_] |4562| 
        MOVL      XAR4,ACC              ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4565| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4565| 
        ; call occurs [#_dac_setmode] ; [] |4565| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4571| 
        ; call occurs [#_ad7738_setcal] ; [] |4571| 
        MOVL      XAR0,#78              ; [CPU_] |4571| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4571| 
	.dwpsn	file "../Source/prod.c",line 4572,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4572| 
        MOVL      XAR1,ACC              ; [CPU_] |4572| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4572| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4572| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4572| 
	.dwpsn	file "../Source/prod.c",line 4573,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4573| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4573| 
        ; call occurs [#_ad7738_resetvall] ; [] |4573| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4566,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4566| 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4577| 
        ; branch occurs ; [] |4577| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4479,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4479| 
        B         $C$L320,LO            ; [CPU_] |4479| 
        ; branchcc occurs ; [] |4479| 
        MOVL      XAR0,#88              ; [CPU_] |4479| 
        MOVL      ACC,XAR4              ; [CPU_] |4479| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4479| 
        MOVL      XAR0,#66              ; [CPU_] |4479| 
        ADDB      ACC,#2                ; [CPU_] |4479| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4479| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4479| 
        MOV       AL,*-SP[58]           ; [CPU_] |4479| 
        MOVU      ACC,AL                ; [CPU_] |4479| 
        CMPL      ACC,XAR6              ; [CPU_] |4479| 
        B         $C$L320,NEQ           ; [CPU_] |4479| 
        ; branchcc occurs ; [] |4479| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4479| 
        B         $C$L320,LT            ; [CPU_] |4479| 
        ; branchcc occurs ; [] |4479| 
        CMPB      AL,#2                 ; [CPU_] |4479| 
        B         $C$L320,GEQ           ; [CPU_] |4479| 
        ; branchcc occurs ; [] |4479| 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4486,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4486| 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4485| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4486,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4486| 
        MOVZ      AR7,AR6               ; [CPU_] |4486| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4488,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4488| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4487,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4487| 
        ADDB      XAR4,#2               ; [CPU_] |4487| 
	.dwpsn	file "../Source/prod.c",line 4488,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4487,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4487| 
        ; branchcc occurs ; [] |4487| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4491| 
        SUBB      XAR4,#24              ; [CPU_U] |4491| 
        MOVZ      AR1,AR4               ; [CPU_] |4491| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4491| 
        ADDL      XAR1,ACC              ; [CPU_] |4491| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4491| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4491| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4491| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4491| 
        ; call occurs [#FS$$CMP] ; [] |4491| 
        CMPB      AL,#0                 ; [CPU_] |4491| 
        B         $C$L320,NEQ           ; [CPU_] |4491| 
        ; branchcc occurs ; [] |4491| 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4495| 
        ; call occurs [#_lcd_clear] ; [] |4495| 
	.dwpsn	file "../Source/prod.c",line 4496,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4496| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4496| 
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4496| 
        ; call occurs [#_lcd_puts] ; [] |4496| 
	.dwpsn	file "../Source/prod.c",line 4497,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4497| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4497| 
        MOVL      XAR0,#44              ; [CPU_] |4497| 
        ADD       AL,*-SP[58]           ; [CPU_] |4497| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4497| 
        MOV       *-SP[3],AL            ; [CPU_] |4497| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4497| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_sprintf")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4497| 
        ; call occurs [#_sprintf] ; [] |4497| 
        MOVL      XAR0,#44              ; [CPU_] |4497| 
	.dwpsn	file "../Source/prod.c",line 4498,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4498| 
	.dwpsn	file "../Source/prod.c",line 4497,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4497| 
	.dwpsn	file "../Source/prod.c",line 4498,column 5,is_stmt,isa 0
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4498| 
        ; call occurs [#_lcd_puts] ; [] |4498| 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4499| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4499| 
        MOVL      XAR0,#44              ; [CPU_] |4499| 
        ADD       AL,*-SP[47]           ; [CPU_] |4499| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4499| 
        MOV       *-SP[3],AL            ; [CPU_] |4499| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4499| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4499| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4499| 
        MOVL      XAR4,XAR1             ; [CPU_] |4499| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_sprintf")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4499| 
        ; call occurs [#_sprintf] ; [] |4499| 
	.dwpsn	file "../Source/prod.c",line 4500,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4500| 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4499| 
	.dwpsn	file "../Source/prod.c",line 4500,column 5,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4500| 
        ; call occurs [#_lcd_puts] ; [] |4500| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4501| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4501| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4501| 
        ; call occurs [#_lcd_puts] ; [] |4501| 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4503| 
        SUBB      XAR4,#32              ; [CPU_U] |4503| 
        MOVZ      AR1,AR4               ; [CPU_] |4503| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4501| 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4503| 
        ADDL      XAR1,ACC              ; [CPU_] |4503| 
	.dwpsn	file "../Source/prod.c",line 4504,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4504| 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4503| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4503| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4503| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4505| 
	.dwpsn	file "../Source/prod.c",line 4504,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4504| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4505| 
        MOVB      ACC,#0                ; [CPU_] |4505| 
        SUBB      ACC,#1                ; [CPU_] |4505| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4505| 
        B         $C$L157,EQ            ; [CPU_] |4505| 
        ; branchcc occurs ; [] |4505| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4506,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4506| 
        ; branch occurs ; [] |4506| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4507,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4507| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_delay_us")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4507| 
        ; call occurs [#_delay_us] ; [] |4507| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4506,column 13,is_stmt,isa 0
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4506| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4506| 
        CMPB      AL,#0                 ; [CPU_] |4506| 
        B         $C$L155,EQ            ; [CPU_] |4506| 
        ; branchcc occurs ; [] |4506| 
	.dwpsn	file "../Source/prod.c",line 4509,column 6,is_stmt,isa 0
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4509| 
        ; call occurs [#_ad7738_getraw] ; [] |4509| 
	.dwpsn	file "../Source/prod.c",line 4510,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4510| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4510| 
        ADDL      XAR4,ACC              ; [CPU_] |4510| 
        MOVL      XAR0,#22              ; [CPU_] |4510| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4510| 
        MOVL      XAR0,#22              ; [CPU_] |4510| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4510| 
        ASR64     ACC:P,16              ; [CPU_] |4510| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4510| 
        MOVL      XAR0,#22              ; [CPU_] |4510| 
        ASR64     ACC:P,16              ; [CPU_] |4510| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4510| 
        MOVL      XAR0,#22              ; [CPU_] |4510| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4510| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4510| 
        MOVL      XAR0,#22              ; [CPU_] |4510| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4510| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4510| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4510| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4510| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4505| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4505| 
        MOVB      ACC,#0                ; [CPU_] |4505| 
        SUBB      ACC,#1                ; [CPU_] |4505| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4505| 
        B         $C$L156,NEQ           ; [CPU_] |4505| 
        ; branchcc occurs ; [] |4505| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4512,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4512| 
        B         $C$L158,NEQ           ; [CPU_] |4512| 
        ; branchcc occurs ; [] |4512| 
	.dwpsn	file "../Source/prod.c",line 4513,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4513| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4513| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4513| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4513| 
        ; call occurs [#FS$$SUB] ; [] |4513| 
        MOVL      XAR6,ACC              ; [CPU_] |4513| 
        MOV       AL,#16384             ; [CPU_] |4513| 
        MOV       AH,#17948             ; [CPU_] |4513| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4513| 
        MOVL      ACC,XAR6              ; [CPU_] |4513| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4513| 
        ; call occurs [#FS$$MPY] ; [] |4513| 
        MOVL      XAR1,ACC              ; [CPU_] |4513| 
        MOVL      P,*-SP[28]            ; [CPU_] |4513| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4513| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4513| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4513| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4513| 
        ; call occurs [#LL$$TOFS] ; [] |4513| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4513| 
        MOVL      ACC,XAR1              ; [CPU_] |4513| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4513| 
        ; call occurs [#FS$$DIV] ; [] |4513| 
        MOVL      XAR0,#40              ; [CPU_] |4513| 
        MOV       T,*-SP[58]            ; [CPU_] |4513| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4513| 
        MOVL      XAR6,ACC              ; [CPU_] |4513| 
        MOVB      AL,#10                ; [CPU_] |4513| 
        MPYU      ACC,T,AL              ; [CPU_] |4513| 
        ADDL      ACC,XAR7              ; [CPU_] |4513| 
        MOVL      XAR4,ACC              ; [CPU_] |4513| 
        MOVB      XAR0,#44              ; [CPU_] |4513| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4513| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4518,column 6,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4518| 
        ; call occurs [#_ad7738_setcal] ; [] |4518| 
        MOVL      XAR0,#78              ; [CPU_] |4518| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4519,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4519| 
        MOVL      XAR1,ACC              ; [CPU_] |4519| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4519| 
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4519| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4519| 
	.dwpsn	file "../Source/prod.c",line 4520,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4520| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4520| 
        ; call occurs [#_ad7738_resetvall] ; [] |4520| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4516,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4516| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4523,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4523| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4524,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4523,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4524,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4523,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4524,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4523,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4523| 
        B         $C$L159,HI            ; [CPU_] |4523| 
        ; branchcc occurs ; [] |4523| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4526| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4529| 
        ; call occurs [#_lcd_clear] ; [] |4529| 
	.dwpsn	file "../Source/prod.c",line 4530,column 5,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_update_units")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4530| 
        ; call occurs [#_update_units] ; [] |4530| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4531| 
        ; branch occurs ; [] |4531| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4454,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4454| 
        B         $C$L320,LO            ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
        MOVL      ACC,XAR4              ; [CPU_] |4454| 
        MOVL      XAR0,#66              ; [CPU_] |4454| 
        ADDB      ACC,#2                ; [CPU_] |4454| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4454| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4454| 
        B         $C$L320,LT            ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
        MOVL      XAR5,XAR4             ; [CPU_] |4454| 
        MOVL      XAR0,#66              ; [CPU_] |4454| 
        CMPB      AL,#4                 ; [CPU_] |4454| 
        ADDB      XAR5,#2               ; [CPU_] |4454| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4454| 
        B         $C$L320,GEQ           ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4454| 
        CMPB      AH,#2                 ; [CPU_] |4454| 
        B         $C$L320,NEQ           ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4461| 
        MOVL      XAR0,#66              ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4460| 
	.dwpsn	file "../Source/prod.c",line 4464,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4464| 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4461| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4461| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4462,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4462| 
        MOV       *-SP[61],#4           ; [CPU_] |4462| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4464,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4464| 
        ; branch occurs ; [] |4464| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4465,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4465| 
        SUBB      XAR4,#24              ; [CPU_U] |4465| 
        MOVZ      AR4,AR4               ; [CPU_] |4465| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4465| 
        MOVL      XAR0,#44              ; [CPU_] |4465| 
        ADDL      XAR4,ACC              ; [CPU_] |4465| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4465| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4467,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4467| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4468| 
        MOV       *XAR7++,AL            ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4469,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4469| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4469| 
        MOV       *XAR4++,AL            ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4470,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4470| 
        MOV       *XAR7++,AL            ; [CPU_] |4470| 
	.dwpsn	file "../Source/prod.c",line 4466,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4466| 
        ; branchcc occurs ; [] |4466| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4470,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4470| 
	.dwpsn	file "../Source/prod.c",line 4464,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4464| 
        MOV       PL,AL                 ; [CPU_] |4464| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4464,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4464| 
        MOV       AL,PL                 ; [CPU_] |4464| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4464| 
        B         $C$L161,LT            ; [CPU_] |4464| 
        ; branchcc occurs ; [] |4464| 
        B         $C$L743,UNC           ; [CPU_] |4464| 
        ; branch occurs ; [] |4464| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5409,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5409| 
        B         $C$L320,LO            ; [CPU_] |5409| 
        ; branchcc occurs ; [] |5409| 
	.dwpsn	file "../Source/prod.c",line 5414,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5414| 
        MOVL      XAR0,#66              ; [CPU_] |5414| 
        MOVL      ACC,XAR7              ; [CPU_] |5414| 
        ADDB      ACC,#2                ; [CPU_] |5414| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5414| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GT            ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVB      XAR0,#13              ; [CPU_] |5414| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GT            ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVB      XAR0,#24              ; [CPU_] |5414| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GT            ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVB      XAR0,#35              ; [CPU_] |5414| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GT            ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GEQ           ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVB      XAR0,#14              ; [CPU_] |5414| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GEQ           ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVB      XAR0,#25              ; [CPU_] |5414| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GEQ           ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVB      XAR0,#36              ; [CPU_] |5414| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5414| 
        CMPB      AL,#4                 ; [CPU_] |5414| 
        B         $C$L320,GEQ           ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5422,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5422| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5422| 
        MOVL      XAR6,ACC              ; [CPU_] |5422| 
        MOV       AL,*XAR7              ; [CPU_] |5422| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5423,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5423| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5423| 
        MOVL      XAR6,ACC              ; [CPU_] |5423| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5423| 
        MOV       *XAR4++,AL            ; [CPU_] |5423| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5424| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5424| 
        MOVL      XAR6,ACC              ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5422,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5424| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5425| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5425| 
        MOVL      XAR6,ACC              ; [CPU_] |5425| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5425| 
        MOV       *XAR4++,AL            ; [CPU_] |5425| 
	.dwpsn	file "../Source/prod.c",line 5426,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5426| 
        ANDB      AL,#0xfe              ; [CPU_] |5426| 
        MOVZ      AR0,AL                ; [CPU_] |5426| 
        MOVL      ACC,XAR5              ; [CPU_] |5426| 
        ADD       ACC,#199 << 4         ; [CPU_] |5426| 
        MOVL      XAR6,ACC              ; [CPU_] |5426| 
	.dwpsn	file "../Source/prod.c",line 5427,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5427| 
        ADD       ACC,#199 << 4         ; [CPU_] |5427| 
	.dwpsn	file "../Source/prod.c",line 5426,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5426| 
	.dwpsn	file "../Source/prod.c",line 5427,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5427| 
        MOVL      XAR0,P                ; [CPU_] |5427| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5427| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5427| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5431,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5431| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5431| 
	.dwpsn	file "../Source/prod.c",line 5432,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5432| 
        MOV       *XAR4++,AL            ; [CPU_] |5432| 
	.dwpsn	file "../Source/prod.c",line 5433,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5433| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5433| 
        MOV       *XAR0++,AL            ; [CPU_] |5433| 
	.dwpsn	file "../Source/prod.c",line 5434,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5434| 
        MOV       *XAR4++,AL            ; [CPU_] |5434| 
	.dwpsn	file "../Source/prod.c",line 5430,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5430| 
        ; branchcc occurs ; [] |5430| 
	.dwpsn	file "../Source/prod.c",line 5437,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5437| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5439,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5439| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5439| 
	.dwpsn	file "../Source/prod.c",line 5440,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5440| 
        MOV       *XAR4++,AL            ; [CPU_] |5440| 
	.dwpsn	file "../Source/prod.c",line 5441,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5441| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5441| 
        MOV       *XAR0++,AL            ; [CPU_] |5441| 
	.dwpsn	file "../Source/prod.c",line 5442,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5442| 
        MOV       *XAR4++,AL            ; [CPU_] |5442| 
	.dwpsn	file "../Source/prod.c",line 5438,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5438| 
        ; branchcc occurs ; [] |5438| 
	.dwpsn	file "../Source/prod.c",line 5421,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5421| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5424| 
        ADD       *-SP[61],#11          ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5421,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5421| 
        ADDB      XAR1,#8               ; [CPU_] |5421| 
        ADDB      ACC,#8                ; [CPU_] |5421| 
        SUBB      XAR6,#1               ; [CPU_U] |5421| 
        MOVZ      AR3,AR6               ; [CPU_] |5421| 
        MOVL      P,ACC                 ; [CPU_] |5421| 
        CMP       AR6,#-1               ; [CPU_] |5421| 
        B         $C$L165,NEQ           ; [CPU_] |5421| 
        ; branchcc occurs ; [] |5421| 
        B         $C$L176,UNC           ; [CPU_] |5421| 
        ; branch occurs ; [] |5421| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5346,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5346| 
        B         $C$L320,LO            ; [CPU_] |5346| 
        ; branchcc occurs ; [] |5346| 
	.dwpsn	file "../Source/prod.c",line 5351,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5351| 
        MOVL      XAR0,#66              ; [CPU_] |5351| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5351| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L169,LEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        CMPB      AL,#7                 ; [CPU_] |5351| 
        B         $C$L320,NEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5351| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L170,LEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        CMPB      AL,#7                 ; [CPU_] |5351| 
        B         $C$L320,NEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5351| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L171,LEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        CMPB      AL,#7                 ; [CPU_] |5351| 
        B         $C$L320,NEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5351| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L172,LEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        CMPB      AL,#7                 ; [CPU_] |5351| 
        B         $C$L320,NEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5351| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L320,GEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        MOVB      XAR0,#13              ; [CPU_] |5351| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L320,GEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        MOVB      XAR0,#23              ; [CPU_] |5351| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L320,GEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        MOVB      XAR0,#33              ; [CPU_] |5351| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5351| 
        CMPB      AL,#4                 ; [CPU_] |5351| 
        B         $C$L320,GEQ           ; [CPU_] |5351| 
        ; branchcc occurs ; [] |5351| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5362| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5362| 
        MOVL      XAR5,ACC              ; [CPU_] |5362| 
        MOV       AL,*XAR7              ; [CPU_] |5362| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5363| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5363| 
        MOVL      XAR5,ACC              ; [CPU_] |5363| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5363| 
        MOV       *XAR4++,AL            ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5364,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5364| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5364| 
        MOVL      XAR5,ACC              ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5364,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5364| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5365| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5365| 
        MOVL      XAR5,ACC              ; [CPU_] |5365| 
	.dwpsn	file "../Source/prod.c",line 5364,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5365| 
        MOVL      XAR5,P                ; [CPU_] |5365| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5365| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5376,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5376| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5376| 
	.dwpsn	file "../Source/prod.c",line 5377,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5377| 
        MOV       *XAR4++,AL            ; [CPU_] |5377| 
	.dwpsn	file "../Source/prod.c",line 5378,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5378| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5378| 
        MOV       *XAR5++,AL            ; [CPU_] |5378| 
	.dwpsn	file "../Source/prod.c",line 5379,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5379| 
        MOV       *XAR4++,AL            ; [CPU_] |5379| 
	.dwpsn	file "../Source/prod.c",line 5375,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5375| 
        ; branchcc occurs ; [] |5375| 
	.dwpsn	file "../Source/prod.c",line 5385,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5385| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5392,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5392| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5393| 
        MOV       *XAR4++,AL            ; [CPU_] |5393| 
	.dwpsn	file "../Source/prod.c",line 5394,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5394| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5394| 
        MOV       *XAR5++,AL            ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5395,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5395| 
        MOV       *XAR4++,AL            ; [CPU_] |5395| 
	.dwpsn	file "../Source/prod.c",line 5391,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5391| 
        ; branchcc occurs ; [] |5391| 
	.dwpsn	file "../Source/prod.c",line 5361,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5364,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5364| 
        ADD       *-SP[61],#10          ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5361,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5361| 
        ADDB      XAR1,#12              ; [CPU_] |5361| 
        ADDB      ACC,#12               ; [CPU_] |5361| 
        SUBB      XAR6,#1               ; [CPU_U] |5361| 
        MOVZ      AR3,AR6               ; [CPU_] |5361| 
        MOVL      P,ACC                 ; [CPU_] |5361| 
        CMP       AR6,#-1               ; [CPU_] |5361| 
        B         $C$L173,NEQ           ; [CPU_] |5361| 
        ; branchcc occurs ; [] |5361| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5402,column 5,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5402| 
        ; call occurs [#_ad7738_setcal] ; [] |5402| 
	.dwpsn	file "../Source/prod.c",line 5405,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5405| 
        ; branch occurs ; [] |5405| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5314,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5314| 
        B         $C$L320,LO            ; [CPU_] |5314| 
        ; branchcc occurs ; [] |5314| 
	.dwpsn	file "../Source/prod.c",line 5319,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5319| 
        MOVL      XAR0,#66              ; [CPU_] |5319| 
        MOVL      ACC,XAR7              ; [CPU_] |5319| 
        ADDB      ACC,#2                ; [CPU_] |5319| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5319| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GT            ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GT            ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVB      XAR0,#8               ; [CPU_] |5319| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GT            ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVB      XAR0,#11              ; [CPU_] |5319| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GT            ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5319| 
        CMPB      AL,#4                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5319| 
        CMPB      AL,#4                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVB      XAR0,#9               ; [CPU_] |5319| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5319| 
        CMPB      AL,#4                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVB      XAR0,#12              ; [CPU_] |5319| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5319| 
        CMPB      AL,#4                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVL      ACC,XAR7              ; [CPU_] |5319| 
        MOVL      XAR0,#64              ; [CPU_] |5319| 
        ADDB      ACC,#4                ; [CPU_] |5319| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5319| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVB      XAR0,#10              ; [CPU_] |5319| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVB      XAR0,#13              ; [CPU_] |5319| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5319| 
        CMPB      AL,#6                 ; [CPU_] |5319| 
        B         $C$L320,GEQ           ; [CPU_] |5319| 
        ; branchcc occurs ; [] |5319| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5330| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5331,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5331| 
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5331,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5331| 
	.dwpsn	file "../Source/prod.c",line 5332,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5332| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5332| 
        ADDB      XAR7,#1               ; [CPU_] |5332| 
	.dwpsn	file "../Source/prod.c",line 5333,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5333| 
        MOV       *XAR4++,AL            ; [CPU_] |5333| 
	.dwpsn	file "../Source/prod.c",line 5334,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5334| 
        ADDB      XAR7,#1               ; [CPU_] |5334| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5334| 
	.dwpsn	file "../Source/prod.c",line 5335,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5335| 
	.dwpsn	file "../Source/prod.c",line 5329,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5329| 
	.dwpsn	file "../Source/prod.c",line 5335,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5335| 
	.dwpsn	file "../Source/prod.c",line 5329,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5329| 
        ; branchcc occurs ; [] |5329| 
	.dwpsn	file "../Source/prod.c",line 5339,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5339| 
        ; call occurs [#_lcd_clear] ; [] |5339| 
	.dwpsn	file "../Source/prod.c",line 5340,column 5,is_stmt,isa 0
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_update_units")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5340| 
        ; call occurs [#_update_units] ; [] |5340| 
	.dwpsn	file "../Source/prod.c",line 5335,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5335| 
	.dwpsn	file "../Source/prod.c",line 5342,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5342| 
        ; branch occurs ; [] |5342| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5293,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5293| 
        B         $C$L320,LO            ; [CPU_] |5293| 
        ; branchcc occurs ; [] |5293| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5298,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5298| 
        MOVB      XAR0,#36              ; [CPU_] |5298| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5298| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5299| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5299| 
        B         $C$L181,NEQ           ; [CPU_] |5299| 
        ; branchcc occurs ; [] |5299| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5301,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5302,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5302| 
	.dwpsn	file "../Source/prod.c",line 5300,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5300| 
        ; branchcc occurs ; [] |5300| 
	.dwpsn	file "../Source/prod.c",line 5304,column 6,is_stmt,isa 0
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_update_units")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5304| 
        ; call occurs [#_update_units] ; [] |5304| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5308,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5308| 
	.dwpsn	file "../Source/prod.c",line 5310,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5310| 
        ; branch occurs ; [] |5310| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5252,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5252| 
        B         $C$L320,LO            ; [CPU_] |5252| 
        ; branchcc occurs ; [] |5252| 
	.dwpsn	file "../Source/prod.c",line 5258,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5258| 
        ADDB      XAR4,#2               ; [CPU_] |5258| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5258| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5258| 
        MOVZ      AR3,AL                ; [CPU_] |5258| 
	.dwpsn	file "../Source/prod.c",line 5259,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5259| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5259| 
        CMP       AR3,#4096             ; [CPU_] |5259| 
        B         $C$L320,HI            ; [CPU_] |5259| 
        ; branchcc occurs ; [] |5259| 
	.dwpsn	file "../Source/prod.c",line 5265,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5265| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5265| 
        MOVZ      AR7,AR6               ; [CPU_] |5265| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5267,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5267| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5266,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5266| 
        ADDB      XAR4,#2               ; [CPU_] |5266| 
	.dwpsn	file "../Source/prod.c",line 5267,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5266,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5266| 
        ; branchcc occurs ; [] |5266| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5272,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5272| 
        MOVB      XAR1,#38              ; [CPU_] |5272| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5272| 
	.dwpsn	file "../Source/prod.c",line 5273,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5273| 
        MOVB      XAR1,#40              ; [CPU_] |5273| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5273| 
	.dwpsn	file "../Source/prod.c",line 5274,column 5,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_maf_rst")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5274| 
        ; call occurs [#_maf_rst] ; [] |5274| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5279,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5279| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5279| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5279,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5279| 
	.dwpsn	file "../Source/prod.c",line 5280,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5280| 
        LSR       AL,8                  ; [CPU_] |5280| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5280| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5283| 
        MOVB      XAR1,#40              ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5284| 
        MOVL      XAR0,#50              ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5283| 
        ANDB      AL,#0xff              ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5285,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5285| 
	.dwpsn	file "../Source/prod.c",line 5284,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5284| 
        LSR       AL,8                  ; [CPU_] |5284| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5285,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5285| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5285| 
	.dwpsn	file "../Source/prod.c",line 5286,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5285,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5285| 
	.dwpsn	file "../Source/prod.c",line 5286,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5286| 
        MOV       *-SP[61],#8           ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5289,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5289| 
        ; branch occurs ; [] |5289| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5219,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5219| 
        B         $C$L320,LO            ; [CPU_] |5219| 
        ; branchcc occurs ; [] |5219| 
        MOVL      ACC,XAR4              ; [CPU_] |5219| 
        MOVL      XAR0,#66              ; [CPU_] |5219| 
        ADDB      ACC,#2                ; [CPU_] |5219| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5219| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5219| 
        B         $C$L320,LT            ; [CPU_] |5219| 
        ; branchcc occurs ; [] |5219| 
        MOVL      XAR5,XAR4             ; [CPU_] |5219| 
        MOVL      XAR0,#66              ; [CPU_] |5219| 
        CMPB      AL,#4                 ; [CPU_] |5219| 
        ADDB      XAR5,#2               ; [CPU_] |5219| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5219| 
        B         $C$L320,GEQ           ; [CPU_] |5219| 
        ; branchcc occurs ; [] |5219| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5219| 
        B         $C$L320,LT            ; [CPU_] |5219| 
        ; branchcc occurs ; [] |5219| 
        CMPB      AH,#20                ; [CPU_] |5219| 
        B         $C$L320,GEQ           ; [CPU_] |5219| 
        ; branchcc occurs ; [] |5219| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5229| 
        MOVL      XAR0,#66              ; [CPU_] |5229| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5229| 
        MOVL      XAR0,#80              ; [CPU_] |5229| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5229| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5229| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5229| 
        B         $C$L318,NEQ           ; [CPU_] |5229| 
        ; branchcc occurs ; [] |5229| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5235,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5235| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5235| 
        MOVB      AL,#10                ; [CPU_] |5235| 
        MOV       T,*-SP[58]            ; [CPU_] |5235| 
        MPYU      ACC,T,AL              ; [CPU_] |5235| 
        ADDL      ACC,XAR6              ; [CPU_] |5235| 
        MOVL      XAR4,ACC              ; [CPU_] |5235| 
        MOVB      XAR0,#42              ; [CPU_] |5235| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5235| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5235| 
	.dwpsn	file "../Source/prod.c",line 5236,column 5,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5236| 
        ; call occurs [#_ad7738_setcal] ; [] |5236| 
        MOVL      XAR0,#78              ; [CPU_] |5236| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5236| 
	.dwpsn	file "../Source/prod.c",line 5238,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5238| 
        MOVL      XAR1,ACC              ; [CPU_] |5238| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5238| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5238| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5238| 
	.dwpsn	file "../Source/prod.c",line 5239,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5239| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5239| 
        ; call occurs [#_ad7738_resetvall] ; [] |5239| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5242,column 5,is_stmt,isa 0
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_update_units")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5242| 
        ; call occurs [#_update_units] ; [] |5242| 
	.dwpsn	file "../Source/prod.c",line 5245,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5245| 
        MOV       AL,*-SP[58]           ; [CPU_] |5245| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5245| 
        MOV       AL,*-SP[57]           ; [CPU_] |5245| 
	.dwpsn	file "../Source/prod.c",line 5246,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5246| 
        MOV       *-SP[61],#4           ; [CPU_] |5246| 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5248| 
        ; branch occurs ; [] |5248| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5183,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5183| 
        B         $C$L320,LO            ; [CPU_] |5183| 
        ; branchcc occurs ; [] |5183| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5189,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5189| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5191,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5191| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5191| 
	.dwpsn	file "../Source/prod.c",line 5192,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5192| 
        MOV       *XAR5++,AL            ; [CPU_] |5192| 
	.dwpsn	file "../Source/prod.c",line 5193,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5193| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5193| 
        MOV       *XAR1++,AL            ; [CPU_] |5193| 
	.dwpsn	file "../Source/prod.c",line 5194,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5194| 
        MOV       *XAR5++,AL            ; [CPU_] |5194| 
	.dwpsn	file "../Source/prod.c",line 5190,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5190| 
        ; branchcc occurs ; [] |5190| 
	.dwpsn	file "../Source/prod.c",line 5188,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5188| 
	.dwpsn	file "../Source/prod.c",line 5194,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5194| 
	.dwpsn	file "../Source/prod.c",line 5188,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5188| 
        ; branchcc occurs ; [] |5188| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5199| 
        MOVL      ACC,XAR4              ; [CPU_] |5199| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5199| 
        MOVL      XAR6,ACC              ; [CPU_] |5199| 
        MOV       AL,*XAR7              ; [CPU_] |5199| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5200,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5200| 
        MOVL      XAR6,XAR4             ; [CPU_] |5200| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5200| 
        MOVL      XAR4,ACC              ; [CPU_] |5200| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5200| 
        ANDB      AL,#0xff              ; [CPU_] |5200| 
        MOV       *XAR5++,AL            ; [CPU_] |5200| 
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5201| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5201| 
        MOVL      XAR4,ACC              ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5201| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5202| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5202| 
        MOVL      XAR4,ACC              ; [CPU_] |5202| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5202| 
        LSR       AL,8                  ; [CPU_] |5202| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5201| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5207,column 5,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5207| 
        ; call occurs [#_ad7738_setcal] ; [] |5207| 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_velf_rst")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5208| 
        ; call occurs [#_velf_rst] ; [] |5208| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5212| 
        ; branch occurs ; [] |5212| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5144,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5144| 
        B         $C$L320,LO            ; [CPU_] |5144| 
        ; branchcc occurs ; [] |5144| 
        MOVL      ACC,XAR4              ; [CPU_] |5144| 
        MOVL      XAR0,#66              ; [CPU_] |5144| 
        ADDB      ACC,#2                ; [CPU_] |5144| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5144| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5144| 
        B         $C$L320,LT            ; [CPU_] |5144| 
        ; branchcc occurs ; [] |5144| 
        MOVL      XAR5,XAR4             ; [CPU_] |5144| 
        MOVL      XAR0,#66              ; [CPU_] |5144| 
        CMPB      AL,#20                ; [CPU_] |5144| 
        ADDB      XAR5,#2               ; [CPU_] |5144| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5144| 
        B         $C$L320,GEQ           ; [CPU_] |5144| 
        ; branchcc occurs ; [] |5144| 
	.dwpsn	file "../Source/prod.c",line 5148,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5148| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5149| 
	.dwpsn	file "../Source/prod.c",line 5151,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5151| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5149| 
	.dwpsn	file "../Source/prod.c",line 5151,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5151| 
        ADDB      ACC,#2                ; [CPU_] |5151| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5151| 
        MOVL      XAR0,#40              ; [CPU_] |5151| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5151| 
        MOV       T,*-SP[57]            ; [CPU_] |5151| 
        MOVB      AL,#152               ; [CPU_] |5151| 
        MPYU      ACC,T,AL              ; [CPU_] |5151| 
        ADDL      ACC,XAR6              ; [CPU_] |5151| 
        ADDB      ACC,#224              ; [CPU_] |5151| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5151| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5153,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5153| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5153| 
	.dwpsn	file "../Source/prod.c",line 5154,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5154| 
        MOV       *XAR5++,AL            ; [CPU_] |5154| 
	.dwpsn	file "../Source/prod.c",line 5155,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5155| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5155| 
        MOV       *XAR7++,AL            ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5156,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5156| 
        MOV       *XAR5++,AL            ; [CPU_] |5156| 
	.dwpsn	file "../Source/prod.c",line 5152,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5152| 
        ; branchcc occurs ; [] |5152| 
	.dwpsn	file "../Source/prod.c",line 5161,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5161| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5161| 
        MOVB      AL,#152               ; [CPU_] |5161| 
        MPYU      ACC,T,AL              ; [CPU_] |5161| 
        ADDL      ACC,XAR6              ; [CPU_] |5161| 
        MOVL      XAR1,ACC              ; [CPU_] |5161| 
        MOVB      XAR0,#125             ; [CPU_] |5161| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5161| 
        CMPB      AL,#247               ; [CPU_] |5161| 
        B         $C$L193,NEQ           ; [CPU_] |5161| 
        ; branchcc occurs ; [] |5161| 
	.dwpsn	file "../Source/prod.c",line 5163,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5163| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5163| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5163| 
        MOV       AL,#0                 ; [CPU_] |5163| 
        MOV       AH,#17096             ; [CPU_] |5163| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5163| 
        ; call occurs [#FS$$DIV] ; [] |5163| 
        MOVB      XAR0,#126             ; [CPU_] |5163| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5163| 
        MOVL      XAR0,#40              ; [CPU_] |5163| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5163| 
	.dwpsn	file "../Source/prod.c",line 5166,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5166| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5167,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5167| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5167| 
        CMPL      ACC,XAR6              ; [CPU_] |5167| 
        B         $C$L192,NEQ           ; [CPU_] |5167| 
        ; branchcc occurs ; [] |5167| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5170,column 8,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5170| 
        ; call occurs [#_ad7738_setcal] ; [] |5170| 
        MOVL      XAR0,#78              ; [CPU_] |5170| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5170| 
	.dwpsn	file "../Source/prod.c",line 5171,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5171| 
        MOVL      XAR4,ACC              ; [CPU_] |5171| 
        MOVL      XAR0,#88              ; [CPU_] |5171| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5171| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5171| 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5171| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5171| 
        MOVL      XAR0,#88              ; [CPU_] |5171| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5171| 
	.dwpsn	file "../Source/prod.c",line 5172,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5172| 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5172| 
        ; call occurs [#_ad7738_resetvall] ; [] |5172| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5166,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5166| 
        ADDB      XAR1,#10              ; [CPU_] |5166| 
        MOV       AL,*-SP[58]           ; [CPU_] |5166| 
        CMPB      AL,#4                 ; [CPU_] |5166| 
        B         $C$L191,LO            ; [CPU_] |5166| 
        ; branchcc occurs ; [] |5166| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5155,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5179,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5179| 
        ; branch occurs ; [] |5179| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5043,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5043| 
        B         $C$L320,LO            ; [CPU_] |5043| 
        ; branchcc occurs ; [] |5043| 
        MOVL      ACC,XAR4              ; [CPU_] |5043| 
        MOVL      XAR0,#66              ; [CPU_] |5043| 
        ADDB      ACC,#2                ; [CPU_] |5043| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5043| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5043| 
        B         $C$L320,LT            ; [CPU_] |5043| 
        ; branchcc occurs ; [] |5043| 
        MOVL      XAR5,XAR4             ; [CPU_] |5043| 
        MOVL      XAR0,#66              ; [CPU_] |5043| 
        CMPB      AL,#20                ; [CPU_] |5043| 
        ADDB      XAR5,#2               ; [CPU_] |5043| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5043| 
        B         $C$L320,GEQ           ; [CPU_] |5043| 
        ; branchcc occurs ; [] |5043| 
	.dwpsn	file "../Source/prod.c",line 5048,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5048| 
        MOVL      XAR0,#66              ; [CPU_] |5048| 
        MOV       *-SP[57],AL           ; [CPU_] |5048| 
        ADDB      XAR5,#2               ; [CPU_] |5048| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5048| 
	.dwpsn	file "../Source/prod.c",line 5049,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5049| 
        MOV       AL,AR6                ; [CPU_] |5049| 
        CMPB      AL,#247               ; [CPU_] |5049| 
        B         $C$L195,EQ            ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
	.dwpsn	file "../Source/prod.c",line 5051,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5051| 
        MOVL      XAR0,#66              ; [CPU_] |5051| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5051| 
        MOVL      XAR0,#40              ; [CPU_] |5051| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5051| 
        MOVB      AL,#152               ; [CPU_] |5051| 
        MOV       T,*-SP[57]            ; [CPU_] |5051| 
        MPYU      ACC,T,AL              ; [CPU_] |5051| 
        ADDL      ACC,XAR7              ; [CPU_] |5051| 
        MOVL      XAR4,ACC              ; [CPU_] |5051| 
        MOVB      XAR0,#124             ; [CPU_] |5051| 
        MOV       PH,#0                 ; [CPU_] |5051| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5051| 
        ANDB      AL,#0xf0              ; [CPU_] |5051| 
        MOVU      ACC,AL                ; [CPU_] |5051| 
        MOVL      XAR7,ACC              ; [CPU_] |5051| 
        MOV       AL,AR6                ; [CPU_] |5051| 
        ANDB      AL,#240               ; [CPU_] |5051| 
        MOV       PL,AL                 ; [CPU_] |5051| 
        MOVL      ACC,XAR7              ; [CPU_] |5051| 
        CMPL      ACC,P                 ; [CPU_] |5051| 
        B         $C$L320,NEQ           ; [CPU_] |5051| 
        ; branchcc occurs ; [] |5051| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5057,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5057| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5057| 
        MOVB      AL,#152               ; [CPU_] |5057| 
        MOV       T,*-SP[57]            ; [CPU_] |5057| 
        MPYU      ACC,T,AL              ; [CPU_] |5057| 
        ADDL      ACC,XAR7              ; [CPU_] |5057| 
        MOVL      XAR1,ACC              ; [CPU_] |5057| 
        MOVB      XAR0,#125             ; [CPU_] |5057| 
	.dwpsn	file "../Source/prod.c",line 5058,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5058| 
	.dwpsn	file "../Source/prod.c",line 5057,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5057| 
	.dwpsn	file "../Source/prod.c",line 5058,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5058| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5058| 
	.dwpsn	file "../Source/prod.c",line 5059,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5059| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5059| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5059| 
        MOV       AL,AR6                ; [CPU_] |5059| 
        MOV       *-SP[61],#4           ; [CPU_] |5059| 
	.dwpsn	file "../Source/prod.c",line 5061,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5061| 
        B         $C$L205,EQ            ; [CPU_] |5061| 
        ; branchcc occurs ; [] |5061| 
	.dwpsn	file "../Source/prod.c",line 5064,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5064| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5064| 
        B         $C$L204,EQ            ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
	.dwpsn	file "../Source/prod.c",line 5068,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5068| 
        CMPB      AL,#34                ; [CPU_] |5068| 
        B         $C$L196,GT            ; [CPU_] |5068| 
        ; branchcc occurs ; [] |5068| 
        CMPB      AL,#34                ; [CPU_] |5068| 
        B         $C$L200,EQ            ; [CPU_] |5068| 
        ; branchcc occurs ; [] |5068| 
        CMPB      AL,#16                ; [CPU_] |5068| 
        B         $C$L203,EQ            ; [CPU_] |5068| 
        ; branchcc occurs ; [] |5068| 
        CMPB      AL,#17                ; [CPU_] |5068| 
        B         $C$L202,EQ            ; [CPU_] |5068| 
        ; branchcc occurs ; [] |5068| 
        B         $C$L204,UNC           ; [CPU_] |5068| 
        ; branch occurs ; [] |5068| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5068| 
        B         $C$L198,EQ            ; [CPU_] |5068| 
        ; branchcc occurs ; [] |5068| 
        CMPB      AL,#36                ; [CPU_] |5068| 
        B         $C$L204,NEQ           ; [CPU_] |5068| 
        ; branchcc occurs ; [] |5068| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5109,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5109| 
        B         $C$L197,EQ            ; [CPU_] |5109| 
        ; branchcc occurs ; [] |5109| 
        CMPB      AL,#35                ; [CPU_] |5109| 
        B         $C$L207,NEQ           ; [CPU_] |5109| 
        ; branchcc occurs ; [] |5109| 
	.dwpsn	file "../Source/prod.c",line 5114,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5114| 
        MOV       AH,#15820             ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5115,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5115| 
        ; branch occurs ; [] |5115| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5111,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5111| 
        MOV       AH,#15649             ; [CPU_] |5111| 
	.dwpsn	file "../Source/prod.c",line 5112,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5112| 
        ; branch occurs ; [] |5112| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5097,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5097| 
        B         $C$L199,EQ            ; [CPU_] |5097| 
        ; branchcc occurs ; [] |5097| 
        CMPB      AL,#36                ; [CPU_] |5097| 
        B         $C$L207,NEQ           ; [CPU_] |5097| 
        ; branchcc occurs ; [] |5097| 
	.dwpsn	file "../Source/prod.c",line 5102,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5102| 
        MOV       AH,#16672             ; [CPU_] |5102| 
	.dwpsn	file "../Source/prod.c",line 5103,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5103| 
        ; branch occurs ; [] |5103| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5099,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5099| 
        MOV       AH,#16073             ; [CPU_] |5099| 
	.dwpsn	file "../Source/prod.c",line 5100,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5100| 
        ; branch occurs ; [] |5100| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5085,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5085| 
        B         $C$L201,EQ            ; [CPU_] |5085| 
        ; branchcc occurs ; [] |5085| 
        CMPB      AL,#36                ; [CPU_] |5085| 
        B         $C$L207,NEQ           ; [CPU_] |5085| 
        ; branchcc occurs ; [] |5085| 
	.dwpsn	file "../Source/prod.c",line 5090,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5090| 
        MOV       AH,#16843             ; [CPU_] |5090| 
	.dwpsn	file "../Source/prod.c",line 5091,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5091| 
        ; branch occurs ; [] |5091| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5087,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5087| 
        MOV       AH,#16418             ; [CPU_] |5087| 
	.dwpsn	file "../Source/prod.c",line 5088,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5088| 
        ; branch occurs ; [] |5088| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5078,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5078| 
        B         $C$L207,NEQ           ; [CPU_] |5078| 
        ; branchcc occurs ; [] |5078| 
	.dwpsn	file "../Source/prod.c",line 5079,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5079| 
        MOV       AH,#16397             ; [CPU_] |5079| 
        B         $C$L206,UNC           ; [CPU_] |5079| 
        ; branch occurs ; [] |5079| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5071,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5071| 
        B         $C$L207,NEQ           ; [CPU_] |5071| 
        ; branchcc occurs ; [] |5071| 
	.dwpsn	file "../Source/prod.c",line 5072,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5072| 
        MOV       AH,#16104             ; [CPU_] |5072| 
        B         $C$L206,UNC           ; [CPU_] |5072| 
        ; branch occurs ; [] |5072| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5066,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5066| 
	.dwpsn	file "../Source/prod.c",line 5067,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5067| 
        ; branch occurs ; [] |5067| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5062,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5062| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5062| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5062| 
        MOV       AL,#0                 ; [CPU_] |5062| 
        MOV       AH,#17096             ; [CPU_] |5062| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5062| 
        ; call occurs [#FS$$DIV] ; [] |5062| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5062| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5128,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5128| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5129,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5129| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5129| 
        CMPL      ACC,XAR6              ; [CPU_] |5129| 
        B         $C$L209,NEQ           ; [CPU_] |5129| 
        ; branchcc occurs ; [] |5129| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5130,column 7,is_stmt,isa 0
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_update_units")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5130| 
        ; call occurs [#_update_units] ; [] |5130| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5132,column 7,is_stmt,isa 0
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5132| 
        ; call occurs [#_ad7738_setcal] ; [] |5132| 
        MOVL      XAR0,#78              ; [CPU_] |5132| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5132| 
	.dwpsn	file "../Source/prod.c",line 5133,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5133| 
        MOVL      XAR4,ACC              ; [CPU_] |5133| 
        MOVL      XAR0,#88              ; [CPU_] |5133| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5133| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5133| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5133| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5133| 
        MOVL      XAR0,#88              ; [CPU_] |5133| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5133| 
	.dwpsn	file "../Source/prod.c",line 5134,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5134| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5134| 
        ; call occurs [#_ad7738_resetvall] ; [] |5134| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5128,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5128| 
        ADDB      XAR1,#10              ; [CPU_] |5128| 
        MOV       AL,*-SP[58]           ; [CPU_] |5128| 
        CMPB      AL,#4                 ; [CPU_] |5128| 
        B         $C$L208,LO            ; [CPU_] |5128| 
        ; branchcc occurs ; [] |5128| 
        B         $C$L304,UNC           ; [CPU_] |5128| 
        ; branch occurs ; [] |5128| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5015,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5015| 
        B         $C$L320,LO            ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5015| 
        MOVL      XAR0,#66              ; [CPU_] |5015| 
        MOVL      ACC,XAR7              ; [CPU_] |5015| 
        ADDB      ACC,#2                ; [CPU_] |5015| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5015| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5015| 
        B         $C$L320,LT            ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
        ADDB      XAR4,#2               ; [CPU_] |5015| 
        MOVL      XAR0,#66              ; [CPU_] |5015| 
        CMPB      AL,#20                ; [CPU_] |5015| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5015| 
        B         $C$L320,GEQ           ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5015| 
        MOVB      AH,#4                 ; [CPU_] |5015| 
        ADD       AH,AR6                ; [CPU_] |5015| 
        CMP       AH,*-SP[59]           ; [CPU_] |5015| 
        B         $C$L320,HI            ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
	.dwpsn	file "../Source/prod.c",line 5020,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5020| 
	.dwpsn	file "../Source/prod.c",line 5021,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5021| 
        MOVL      XAR0,#66              ; [CPU_] |5021| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |5021| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5021| 
        MOV       AL,*-SP[57]           ; [CPU_] |5021| 
        MOV       @_buff$1+2,AL         ; [CPU_] |5021| 
        MOV       AL,AR6                ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5023,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5023| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |5023| 
        B         $C$L211,HIS           ; [CPU_] |5023| 
        ; branchcc occurs ; [] |5023| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5023| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 5025,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5025| 
        MOVB      XAR5,#0               ; [CPU_] |5025| 
	.dwpsn	file "../Source/prod.c",line 5025,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |5025| 
        ; branchcc occurs ; [] |5025| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5025,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |5025| 
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5025,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5025| 
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5025,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |5025| 
        B         $C$L212,HI            ; [CPU_] |5025| 
        ; branchcc occurs ; [] |5025| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 5028,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5028| 
        MOVB      AL,#152               ; [CPU_] |5028| 
        MOV       T,*-SP[57]            ; [CPU_] |5028| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5028| 
        MPYU      P,T,AL                ; [CPU_] |5028| 
        MOVL      ACC,P                 ; [CPU_] |5028| 
        ADD       ACC,AR5               ; [CPU_] |5028| 
        ADDL      ACC,XAR6              ; [CPU_] |5028| 
        MOVL      XAR4,ACC              ; [CPU_] |5028| 
        MOVB      XAR0,#98              ; [CPU_] |5028| 
	.dwpsn	file "../Source/prod.c",line 5032,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5032| 
	.dwpsn	file "../Source/prod.c",line 5028,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5028| 
	.dwpsn	file "../Source/prod.c",line 5032,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |5032| 
        MOVL      XAR4,ACC              ; [CPU_] |5032| 
        MOVL      XAR1,ACC              ; [CPU_] |5032| 
        ADDB      XAR4,#98              ; [CPU_] |5032| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_strlen")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |5032| 
        ; call occurs [#_strlen] ; [] |5032| 
	.dwpsn	file "../Source/prod.c",line 5033,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5033| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5034,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5034| 
	.dwpsn	file "../Source/prod.c",line 5033,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5034,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5034,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5034| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5035,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5035| 
	.dwpsn	file "../Source/prod.c",line 5034,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5034| 
	.dwpsn	file "../Source/prod.c",line 5035,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |5035| 
        INC       *-SP[61]              ; [CPU_] |5035| 
	.dwpsn	file "../Source/prod.c",line 5034,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5034| 
        B         $C$L214,HI            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        B         $C$L304,UNC           ; [CPU_] |5034| 
        ; branch occurs ; [] |5034| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5573,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5573| 
        B         $C$L320,LO            ; [CPU_] |5573| 
        ; branchcc occurs ; [] |5573| 
	.dwpsn	file "../Source/prod.c",line 5578,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5578| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5579| 
	.dwpsn	file "../Source/prod.c",line 5578,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5578| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5578| 
        MOV       *-SP[57],AL           ; [CPU_] |5578| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5579| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5579| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5579| 
	.dwpsn	file "../Source/prod.c",line 5581,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5581| 
        SUBB      XAR5,#24              ; [CPU_U] |5581| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5581| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5583,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5583| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5583| 
	.dwpsn	file "../Source/prod.c",line 5584,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5584| 
        MOV       *XAR1++,AL            ; [CPU_] |5584| 
	.dwpsn	file "../Source/prod.c",line 5585,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5585| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5585| 
        MOV       *XAR5++,AL            ; [CPU_] |5585| 
	.dwpsn	file "../Source/prod.c",line 5586,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5586| 
        MOV       *XAR1++,AL            ; [CPU_] |5586| 
	.dwpsn	file "../Source/prod.c",line 5582,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5582| 
        ; branchcc occurs ; [] |5582| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5590,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5590| 
        B         $C$L320,HIS           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
        MOVL      XAR0,#40              ; [CPU_] |5590| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5590| 
        MOVB      AL,#12                ; [CPU_] |5590| 
        MOV       T,*-SP[57]            ; [CPU_] |5590| 
        MPYU      ACC,T,AL              ; [CPU_] |5590| 
        ADDL      ACC,XAR6              ; [CPU_] |5590| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5590| 
        MOVL      XAR4,ACC              ; [CPU_] |5590| 
        MOVL      XAR0,#88              ; [CPU_] |5590| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5590| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5590| 
        CMPB      AL,#7                 ; [CPU_] |5590| 
        B         $C$L320,NEQ           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5590| 
        MOV       *-SP[47],#0           ; [CPU_] |5590| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5590| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5590| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5590| 
        ; call occurs [#FS$$CMP] ; [] |5590| 
        CMPB      AL,#0                 ; [CPU_] |5590| 
        B         $C$L217,GEQ           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
        MOV       *-SP[47],#1           ; [CPU_] |5590| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
        MOV       AL,#0                 ; [CPU_] |5590| 
        MOV       AH,#16672             ; [CPU_] |5590| 
        MOV       *-SP[47],#0           ; [CPU_] |5590| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5590| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5590| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5590| 
        ; call occurs [#FS$$CMP] ; [] |5590| 
        CMPB      AL,#0                 ; [CPU_] |5590| 
        B         $C$L218,LEQ           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
        MOV       *-SP[47],#1           ; [CPU_] |5590| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
	.dwpsn	file "../Source/prod.c",line 5597,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5597| 
        MOV       AH,#0                 ; [CPU_] |5597| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5597| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5597| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5597| 
        ; call occurs [#FS$$CMP] ; [] |5597| 
        CMPB      AL,#0                 ; [CPU_] |5597| 
        B         $C$L219,GEQ           ; [CPU_] |5597| 
        ; branchcc occurs ; [] |5597| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5597| 
        MOVL      XAR0,#88              ; [CPU_] |5597| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5597| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5597| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5597| 
        B         $C$L220,UNC           ; [CPU_] |5597| 
        ; branch occurs ; [] |5597| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5597| 
        MOVL      XAR0,#88              ; [CPU_] |5597| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5597| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5597| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5597| 
$C$L220:    
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5597| 
        ; call occurs [#FS$$MPY] ; [] |5597| 
        MOVL      XAR0,#88              ; [CPU_] |5597| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5597| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5597| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5597| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5597| 
        ; call occurs [#FS$$ADD] ; [] |5597| 
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5597| 
        ; call occurs [#FS$$TOLL] ; [] |5597| 
	.dwpsn	file "../Source/prod.c",line 5604,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5604| 
	.dwpsn	file "../Source/prod.c",line 5597,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5597| 
	.dwpsn	file "../Source/prod.c",line 5585,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5585| 
	.dwpsn	file "../Source/prod.c",line 5597,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5597| 
	.dwpsn	file "../Source/prod.c",line 5604,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5604| 
        CMP64     ACC:P                 ; [CPU_] |5604| 
        B         $C$L222,LEQ           ; [CPU_] |5604| 
        ; branchcc occurs ; [] |5604| 
	.dwpsn	file "../Source/prod.c",line 5606,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5606| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5606| 
        MOV       *-SP[2],#0            ; [CPU_] |5606| 
        MOV       *-SP[1],#0            ; [CPU_] |5606| 
        MOVL      P,*-SP[32]            ; [CPU_] |5606| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5606| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$726, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5606| 
        ; call occurs [#LL$$CMP] ; [] |5606| 
        CMPB      AL,#0                 ; [CPU_] |5606| 
        B         $C$L221,GEQ           ; [CPU_] |5606| 
        ; branchcc occurs ; [] |5606| 
	.dwpsn	file "../Source/prod.c",line 5609,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5609| 
        MOV       *-SP[35],AL           ; [CPU_] |5609| 
        B         $C$L223,UNC           ; [CPU_] |5609| 
        ; branch occurs ; [] |5609| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5607,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5607| 
	.dwpsn	file "../Source/prod.c",line 5608,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5608| 
        ; branch occurs ; [] |5608| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5605,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5605| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5612,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5612| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5612| 
        ; call occurs [#_mcbsp_xmit] ; [] |5612| 
	.dwpsn	file "../Source/prod.c",line 5613,column 5,is_stmt,isa 0
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_latch_dac")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5613| 
        ; call occurs [#_latch_dac] ; [] |5613| 
	.dwpsn	file "../Source/prod.c",line 5616,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5616| 
        ANDB      AL,#0xff              ; [CPU_] |5616| 
        MOV       *XAR1++,AL            ; [CPU_] |5616| 
	.dwpsn	file "../Source/prod.c",line 5617,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5617| 
        LSR       AL,8                  ; [CPU_] |5617| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5617| 
	.dwpsn	file "../Source/prod.c",line 5620,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5620| 
        ; branch occurs ; [] |5620| 
$C$L224:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5509,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5509| 
        B         $C$L320,LO            ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
	.dwpsn	file "../Source/prod.c",line 5514,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5514| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5514| 
$C$L226:    
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5514| 
        ; call occurs [#_ad7738_resetvall] ; [] |5514| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5517,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5517| 
        MOVL      XAR0,#66              ; [CPU_] |5517| 
        ADDB      ACC,#2                ; [CPU_] |5517| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5517| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5517| 
        ANDB      AL,#0x0f              ; [CPU_] |5517| 
	.dwpsn	file "../Source/prod.c",line 5519,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5519| 
        ; branch occurs ; [] |5519| 
$C$L228:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5495,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5495| 
        B         $C$L320,LO            ; [CPU_] |5495| 
        ; branchcc occurs ; [] |5495| 
	.dwpsn	file "../Source/prod.c",line 5500,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5500| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5500| 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5500| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5500| 
	.dwpsn	file "../Source/prod.c",line 5505,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5505| 
        ; branch occurs ; [] |5505| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5559,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5559| 
        B         $C$L320,LO            ; [CPU_] |5559| 
        ; branchcc occurs ; [] |5559| 
	.dwpsn	file "../Source/prod.c",line 5564,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5564| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5564| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5564| 
        ; call occurs [#_shunt_switch] ; [] |5564| 
	.dwpsn	file "../Source/prod.c",line 5569,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5569| 
        ; branch occurs ; [] |5569| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5543,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5543| 
        B         $C$L320,LO            ; [CPU_] |5543| 
        ; branchcc occurs ; [] |5543| 
	.dwpsn	file "../Source/prod.c",line 5548,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5548| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5548| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5548| 
        ; call occurs [#_ad7738_resettare] ; [] |5548| 
	.dwpsn	file "../Source/prod.c",line 5549,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5549| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5549| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5549| 
	.dwpsn	file "../Source/prod.c",line 5550,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5550| 
	.dwpsn	file "../Source/prod.c",line 5555,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5555| 
        ; branch occurs ; [] |5555| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5523,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5523| 
        B         $C$L320,LO            ; [CPU_] |5523| 
        ; branchcc occurs ; [] |5523| 
	.dwpsn	file "../Source/prod.c",line 5528,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5528| 
	.dwpsn	file "../Source/prod.c",line 5529,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5529| 
$C$L232:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5530,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5530| 
        B         $C$L233,EQ            ; [CPU_] |5530| 
        ; branchcc occurs ; [] |5530| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5531,column 7,is_stmt,isa 0
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5531| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5531| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5529,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5529| 
	.dwpsn	file "../Source/prod.c",line 5533,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5533| 
        MOV       *-SP[47],AL           ; [CPU_] |5533| 
	.dwpsn	file "../Source/prod.c",line 5529,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5529| 
        CMPB      AL,#4                 ; [CPU_] |5529| 
        B         $C$L232,LT            ; [CPU_] |5529| 
        ; branchcc occurs ; [] |5529| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5537,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5537| 
        ANDB      AL,#0x0f              ; [CPU_] |5537| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5537| 
        MOVL      XAR0,#66              ; [CPU_] |5537| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5537| 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5539| 
        ; branch occurs ; [] |5539| 
$C$L235:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5480,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5480| 
        B         $C$L320,LO            ; [CPU_] |5480| 
        ; branchcc occurs ; [] |5480| 
	.dwpsn	file "../Source/prod.c",line 5485,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5485| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5485| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5485| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5485| 
	.dwpsn	file "../Source/prod.c",line 5491,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5491| 
        ; branch occurs ; [] |5491| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5457,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5457| 
        B         $C$L239,LO            ; [CPU_] |5457| 
        ; branchcc occurs ; [] |5457| 
	.dwpsn	file "../Source/prod.c",line 5469,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5469| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5469| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5469| 
        ; call occurs [#_ad7738_resettare] ; [] |5469| 
	.dwpsn	file "../Source/prod.c",line 5470,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5470| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5470| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5470| 
	.dwpsn	file "../Source/prod.c",line 5471,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5471| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5471| 
        ; call occurs [#_ad7738_resetvall] ; [] |5471| 
	.dwpsn	file "../Source/prod.c",line 5474,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5474| 
        MOVL      ACC,XAR1              ; [CPU_] |5474| 
        ADDB      ACC,#2                ; [CPU_] |5474| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5474| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5474| 
        ANDB      AL,#0xff              ; [CPU_] |5474| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5474| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5474| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5472,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5472| 
	.dwpsn	file "../Source/prod.c",line 5476,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5476| 
        ; branch occurs ; [] |5476| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5459,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5459| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5459| 
        ; call occurs [#_ad7738_resettare] ; [] |5459| 
	.dwpsn	file "../Source/prod.c",line 5460,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5460| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5460| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5460| 
	.dwpsn	file "../Source/prod.c",line 5461,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5461| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5461| 
        ; call occurs [#_ad7738_resetvall] ; [] |5461| 
	.dwpsn	file "../Source/prod.c",line 5464,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5464| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5464| 
	.dwpsn	file "../Source/prod.c",line 5466,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5466| 
        ; branch occurs ; [] |5466| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5632,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5632| 
        MOV       *-SP[47],#0           ; [CPU_] |5632| 
	.dwpsn	file "../Source/prod.c",line 5633,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5633| 
        ; branchcc occurs ; [] |5633| 
	.dwpsn	file "../Source/prod.c",line 5635,column 6,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5635| 
        ; call occurs [#_lcd_clear] ; [] |5635| 
	.dwpsn	file "../Source/prod.c",line 5636,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5636| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5636| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5636| 
        ; call occurs [#_lcd_puts] ; [] |5636| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5639,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5639| 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_delay_us")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5639| 
        ; call occurs [#_delay_us] ; [] |5639| 
	.dwpsn	file "../Source/prod.c",line 5638,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5638| 
        ; branchcc occurs ; [] |5638| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5643,column 6,is_stmt,isa 0
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_conf_write")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5643| 
        ; call occurs [#_conf_write] ; [] |5643| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5646,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5646| 
        B         $C$L242,NEQ           ; [CPU_] |5646| 
        ; branchcc occurs ; [] |5646| 
	.dwpsn	file "../Source/prod.c",line 5647,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5647| 
        MOVB      AL,#16                ; [CPU_] |5647| 
        SPM       #0                    ; [CPU_] 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5647| 
        ; call occurs [#_lcd_puts] ; [] |5647| 
	.dwpsn	file "../Source/prod.c",line 5648,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5648| 
	.dwpsn	file "../Source/prod.c",line 5649,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5649| 
        ; branch occurs ; [] |5649| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5650,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5650| 
        MOVB      AL,#16                ; [CPU_] |5650| 
        SPM       #0                    ; [CPU_] 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5650| 
        ; call occurs [#_lcd_puts] ; [] |5650| 
	.dwpsn	file "../Source/prod.c",line 5651,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5651| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5655,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5655| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_delay_us")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5655| 
        ; call occurs [#_delay_us] ; [] |5655| 
	.dwpsn	file "../Source/prod.c",line 5654,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5654| 
        ; branchcc occurs ; [] |5654| 
        B         $C$L316,UNC           ; [CPU_] |5654| 
        ; branch occurs ; [] |5654| 
$C$L245:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4402,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4402| 
        B         $C$L320,LO            ; [CPU_] |4402| 
        ; branchcc occurs ; [] |4402| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4402| 
        MOVL      XAR0,#66              ; [CPU_] |4402| 
        MOVL      ACC,XAR7              ; [CPU_] |4402| 
        ADDB      ACC,#2                ; [CPU_] |4402| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4402| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4402| 
        B         $C$L320,LT            ; [CPU_] |4402| 
        ; branchcc occurs ; [] |4402| 
        ADDB      XAR4,#2               ; [CPU_] |4402| 
        MOVL      XAR0,#66              ; [CPU_] |4402| 
        CMPB      AL,#4                 ; [CPU_] |4402| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4402| 
        B         $C$L320,GEQ           ; [CPU_] |4402| 
        ; branchcc occurs ; [] |4402| 
	.dwpsn	file "../Source/prod.c",line 4407,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4408| 
	.dwpsn	file "../Source/prod.c",line 4411,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4411| 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4408| 
	.dwpsn	file "../Source/prod.c",line 4411,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4411| 
        ADDB      ACC,#2                ; [CPU_] |4411| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4411| 
        MOVL      XAR0,#40              ; [CPU_] |4411| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4411| 
        MOV       T,*-SP[58]            ; [CPU_] |4411| 
        MOVB      AL,#10                ; [CPU_] |4411| 
        MPYU      ACC,T,AL              ; [CPU_] |4411| 
        ADDL      ACC,XAR6              ; [CPU_] |4411| 
        ADDB      ACC,#46               ; [CPU_] |4411| 
        MOVL      XAR4,ACC              ; [CPU_] |4411| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4413,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4413| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4413| 
        ADDB      XAR7,#1               ; [CPU_] |4413| 
	.dwpsn	file "../Source/prod.c",line 4414,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4414| 
        ADD       *XAR4++,AL            ; [CPU_] |4414| 
	.dwpsn	file "../Source/prod.c",line 4412,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4412| 
        ; branchcc occurs ; [] |4412| 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4417| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4417| 
        MOVB      AL,#10                ; [CPU_] |4417| 
        MPYU      ACC,T,AL              ; [CPU_] |4417| 
        ADDL      ACC,XAR6              ; [CPU_] |4417| 
        MOVL      XAR5,ACC              ; [CPU_] |4417| 
        ADDB      ACC,#48               ; [CPU_] |4417| 
        MOVL      XAR4,ACC              ; [CPU_] |4417| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4417| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4419,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4419| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4419| 
        ADDB      XAR7,#1               ; [CPU_] |4419| 
	.dwpsn	file "../Source/prod.c",line 4420,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4420| 
        ADD       *XAR4++,AL            ; [CPU_] |4420| 
	.dwpsn	file "../Source/prod.c",line 4418,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4418| 
        ; branchcc occurs ; [] |4418| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4423| 
        ADDB      ACC,#50               ; [CPU_] |4423| 
        MOVL      XAR4,ACC              ; [CPU_] |4423| 
        MOVL      P,ACC                 ; [CPU_] |4423| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4425,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4425| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4425| 
        ADDB      XAR7,#1               ; [CPU_] |4425| 
	.dwpsn	file "../Source/prod.c",line 4426,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4426| 
        ADD       *XAR4++,AL            ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4424,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4424| 
        ; branchcc occurs ; [] |4424| 
	.dwpsn	file "../Source/prod.c",line 4430,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4430| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4430| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4430| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4432,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4432| 
        ANDB      AL,#0xff              ; [CPU_] |4432| 
        MOV       *XAR4++,AL            ; [CPU_] |4432| 
	.dwpsn	file "../Source/prod.c",line 4433,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4433| 
        LSR       AL,8                  ; [CPU_] |4433| 
        MOV       *XAR4++,AL            ; [CPU_] |4433| 
	.dwpsn	file "../Source/prod.c",line 4431,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4431| 
        ; branchcc occurs ; [] |4431| 
	.dwpsn	file "../Source/prod.c",line 4436,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4436| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4438,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4438| 
        ANDB      AL,#0xff              ; [CPU_] |4438| 
        MOV       *XAR4++,AL            ; [CPU_] |4438| 
	.dwpsn	file "../Source/prod.c",line 4439,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4439| 
        LSR       AL,8                  ; [CPU_] |4439| 
        MOV       *XAR4++,AL            ; [CPU_] |4439| 
	.dwpsn	file "../Source/prod.c",line 4437,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4437| 
        ; branchcc occurs ; [] |4437| 
	.dwpsn	file "../Source/prod.c",line 4442,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4442| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4444,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4444| 
        ANDB      AL,#0xff              ; [CPU_] |4444| 
        MOV       *XAR4++,AL            ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4445,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4445| 
        LSR       AL,8                  ; [CPU_] |4445| 
        MOV       *XAR4++,AL            ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4443,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4443| 
        ; branchcc occurs ; [] |4443| 
	.dwpsn	file "../Source/prod.c",line 4433,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4433| 
	.dwpsn	file "../Source/prod.c",line 4450,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4450| 
        ; branch occurs ; [] |4450| 
$C$L252:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4360,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4360| 
        B         $C$L320,LO            ; [CPU_] |4360| 
        ; branchcc occurs ; [] |4360| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4360| 
        MOVL      XAR0,#66              ; [CPU_] |4360| 
        MOVL      ACC,XAR5              ; [CPU_] |4360| 
        ADDB      ACC,#2                ; [CPU_] |4360| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4360| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4360| 
        B         $C$L320,LT            ; [CPU_] |4360| 
        ; branchcc occurs ; [] |4360| 
        ADDB      XAR4,#2               ; [CPU_] |4360| 
        MOVL      XAR0,#66              ; [CPU_] |4360| 
        CMPB      AL,#4                 ; [CPU_] |4360| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4360| 
        B         $C$L320,GEQ           ; [CPU_] |4360| 
        ; branchcc occurs ; [] |4360| 
	.dwpsn	file "../Source/prod.c",line 4365,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4365| 
	.dwpsn	file "../Source/prod.c",line 4366,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4366| 
	.dwpsn	file "../Source/prod.c",line 4368,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4368| 
        MOVL      XAR0,#66              ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4366,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4366| 
	.dwpsn	file "../Source/prod.c",line 4368,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4368| 
        MOVL      XAR0,#40              ; [CPU_] |4368| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4368| 
        MOVB      AL,#10                ; [CPU_] |4368| 
        MOV       T,*-SP[58]            ; [CPU_] |4368| 
        MPYU      ACC,T,AL              ; [CPU_] |4368| 
        ADDL      ACC,XAR6              ; [CPU_] |4368| 
        ADDB      ACC,#46               ; [CPU_] |4368| 
        MOVL      XAR5,ACC              ; [CPU_] |4368| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4370,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4370| 
        ANDB      AL,#0xff              ; [CPU_] |4370| 
        MOV       *XAR4++,AL            ; [CPU_] |4370| 
	.dwpsn	file "../Source/prod.c",line 4371,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4371| 
        LSR       AL,8                  ; [CPU_] |4371| 
        MOV       *XAR4++,AL            ; [CPU_] |4371| 
	.dwpsn	file "../Source/prod.c",line 4369,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4369| 
        ; branchcc occurs ; [] |4369| 
	.dwpsn	file "../Source/prod.c",line 4374,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4374| 
        MPYU      ACC,T,AL              ; [CPU_] |4374| 
        ADDL      ACC,XAR6              ; [CPU_] |4374| 
        MOVL      XAR5,ACC              ; [CPU_] |4374| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4374| 
        ADDB      XAR5,#48              ; [CPU_] |4374| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4376,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4376| 
        ANDB      AL,#0xff              ; [CPU_] |4376| 
        MOV       *XAR4++,AL            ; [CPU_] |4376| 
	.dwpsn	file "../Source/prod.c",line 4377,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4377| 
        LSR       AL,8                  ; [CPU_] |4377| 
        MOV       *XAR4++,AL            ; [CPU_] |4377| 
	.dwpsn	file "../Source/prod.c",line 4375,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4375| 
        ; branchcc occurs ; [] |4375| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4371,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4371| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4380| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4382,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4382| 
        ANDB      AL,#0xff              ; [CPU_] |4382| 
        MOV       *XAR4++,AL            ; [CPU_] |4382| 
	.dwpsn	file "../Source/prod.c",line 4383,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4383| 
        LSR       AL,8                  ; [CPU_] |4383| 
        MOV       *XAR4++,AL            ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4381,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4381| 
        ; branchcc occurs ; [] |4381| 
        B         $C$L743,UNC           ; [CPU_] |4381| 
        ; branch occurs ; [] |4381| 
$C$L256:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4002,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4002| 
        B         $C$L320,LO            ; [CPU_] |4002| 
        ; branchcc occurs ; [] |4002| 
        MOVL      ACC,XAR4              ; [CPU_] |4002| 
        MOVL      XAR0,#66              ; [CPU_] |4002| 
        ADDB      ACC,#2                ; [CPU_] |4002| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4002| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4002| 
        B         $C$L320,LT            ; [CPU_] |4002| 
        ; branchcc occurs ; [] |4002| 
        MOVL      XAR5,XAR4             ; [CPU_] |4002| 
        MOVL      XAR0,#66              ; [CPU_] |4002| 
        CMPB      AL,#20                ; [CPU_] |4002| 
        ADDB      XAR5,#2               ; [CPU_] |4002| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4002| 
        B         $C$L320,GEQ           ; [CPU_] |4002| 
        ; branchcc occurs ; [] |4002| 
	.dwpsn	file "../Source/prod.c",line 4006,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4006| 
	.dwpsn	file "../Source/prod.c",line 4007,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |4007| 
	.dwpsn	file "../Source/prod.c",line 4010,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4010| 
        MOVL      XAR0,#66              ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4007,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |4007| 
	.dwpsn	file "../Source/prod.c",line 4010,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4010| 
        MOVL      XAR0,#40              ; [CPU_] |4010| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4010| 
        MOVB      AL,#152               ; [CPU_] |4010| 
        MOV       T,*-SP[57]            ; [CPU_] |4010| 
        MPYU      ACC,T,AL              ; [CPU_] |4010| 
        ADDL      ACC,XAR6              ; [CPU_] |4010| 
        ADDB      ACC,#82               ; [CPU_] |4010| 
        MOVL      XAR4,ACC              ; [CPU_] |4010| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_strlen")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4010| 
        ; call occurs [#_strlen] ; [] |4010| 
        MOVZ      AR6,AL                ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4011,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4012,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4012| 
	.dwpsn	file "../Source/prod.c",line 4011,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4012,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |4012| 
        ; branchcc occurs ; [] |4012| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4012,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4012| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 4013,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4013| 
	.dwpsn	file "../Source/prod.c",line 4012,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4012| 
	.dwpsn	file "../Source/prod.c",line 4013,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4013| 
	.dwpsn	file "../Source/prod.c",line 4012,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4012| 
	.dwpsn	file "../Source/prod.c",line 4013,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4013| 
	.dwpsn	file "../Source/prod.c",line 4012,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4012| 
        B         $C$L257,HI            ; [CPU_] |4012| 
        ; branchcc occurs ; [] |4012| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 4017,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4017| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4017| 
        MOVB      AL,#152               ; [CPU_] |4017| 
        MOV       T,*-SP[57]            ; [CPU_] |4017| 
        MPYU      ACC,T,AL              ; [CPU_] |4017| 
        ADDL      ACC,XAR6              ; [CPU_] |4017| 
        MOVL      XAR4,ACC              ; [CPU_] |4017| 
        MOVL      XAR1,ACC              ; [CPU_] |4017| 
        ADDB      XAR4,#98              ; [CPU_] |4017| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_strlen")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4017| 
        ; call occurs [#_strlen] ; [] |4017| 
        MOVL      XAR0,#44              ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4018,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |4018| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4017,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |4017| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4018,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |4018| 
        MOVL      XAR4,ACC              ; [CPU_] |4018| 
        MOV       AL,AR7                ; [CPU_] |4018| 
        ADDB      AL,#1                 ; [CPU_] |4018| 
        MOV       *XAR4++,AR6           ; [CPU_] |4018| 
        MOV       *-SP[61],AL           ; [CPU_] |4018| 
        MOV       AL,AR6                ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4019,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |4019| 
        ; branchcc occurs ; [] |4019| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4019,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4019| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 4020,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4020| 
	.dwpsn	file "../Source/prod.c",line 4019,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4019| 
	.dwpsn	file "../Source/prod.c",line 4020,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4020| 
	.dwpsn	file "../Source/prod.c",line 4019,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4019| 
	.dwpsn	file "../Source/prod.c",line 4020,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4020| 
	.dwpsn	file "../Source/prod.c",line 4019,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4019| 
        B         $C$L259,HI            ; [CPU_] |4019| 
        ; branchcc occurs ; [] |4019| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 4024,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4024| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |4024| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 4026,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4026| 
        ANDB      AL,#0xff              ; [CPU_] |4026| 
        MOV       *XAR4++,AL            ; [CPU_] |4026| 
	.dwpsn	file "../Source/prod.c",line 4027,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4027| 
        LSR       AL,8                  ; [CPU_] |4027| 
        MOV       *XAR4++,AL            ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4025,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |4025| 
        ; branchcc occurs ; [] |4025| 
	.dwpsn	file "../Source/prod.c",line 4032,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4035,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4032,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4032| 
        MOV       *XAR4++,AL            ; [CPU_] |4032| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4035,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4035| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4037,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4037| 
        ANDB      AL,#0xff              ; [CPU_] |4037| 
        MOV       *XAR4++,AL            ; [CPU_] |4037| 
	.dwpsn	file "../Source/prod.c",line 4038,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4038| 
        LSR       AL,8                  ; [CPU_] |4038| 
        MOV       *XAR4++,AL            ; [CPU_] |4038| 
	.dwpsn	file "../Source/prod.c",line 4036,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4036| 
        ; branchcc occurs ; [] |4036| 
	.dwpsn	file "../Source/prod.c",line 4043,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4043| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4043| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4045,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4045| 
        ANDB      AL,#0xff              ; [CPU_] |4045| 
        MOV       *XAR4++,AL            ; [CPU_] |4045| 
	.dwpsn	file "../Source/prod.c",line 4046,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4046| 
        LSR       AL,8                  ; [CPU_] |4046| 
        MOV       *XAR4++,AL            ; [CPU_] |4046| 
	.dwpsn	file "../Source/prod.c",line 4044,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4044| 
        ; branchcc occurs ; [] |4044| 
	.dwpsn	file "../Source/prod.c",line 4051,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4051| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4057,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4051,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4054,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4054| 
	.dwpsn	file "../Source/prod.c",line 4051,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4054,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4054| 
	.dwpsn	file "../Source/prod.c",line 4057,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4054,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4054| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4054| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4059,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4059| 
        ANDB      AL,#0xff              ; [CPU_] |4059| 
        MOV       *XAR4++,AL            ; [CPU_] |4059| 
	.dwpsn	file "../Source/prod.c",line 4060,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4060| 
        LSR       AL,8                  ; [CPU_] |4060| 
        MOV       *XAR4++,AL            ; [CPU_] |4060| 
	.dwpsn	file "../Source/prod.c",line 4058,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4058| 
        ; branchcc occurs ; [] |4058| 
	.dwpsn	file "../Source/prod.c",line 4027,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4065,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4065| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4065| 
        CMPB      AL,#2                 ; [CPU_] |4065| 
        B         $C$L267,EQ            ; [CPU_] |4065| 
        ; branchcc occurs ; [] |4065| 
	.dwpsn	file "../Source/prod.c",line 4103,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4103| 
        ADDB      ACC,#178              ; [CPU_] |4103| 
        MOVL      XAR5,ACC              ; [CPU_] |4103| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4101,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4101| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4105,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4105| 
        ANDB      AL,#0xff              ; [CPU_] |4105| 
        MOV       *XAR4++,AL            ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4106,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4106| 
        LSR       AL,8                  ; [CPU_] |4106| 
        MOV       *XAR4++,AL            ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4104,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4104| 
        ; branchcc occurs ; [] |4104| 
	.dwpsn	file "../Source/prod.c",line 4110,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4110| 
        ADDB      ACC,#200              ; [CPU_] |4110| 
        MOVL      XAR5,ACC              ; [CPU_] |4110| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4101,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4101| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4112,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4112| 
        ANDB      AL,#0xff              ; [CPU_] |4112| 
        MOV       *XAR4++,AL            ; [CPU_] |4112| 
	.dwpsn	file "../Source/prod.c",line 4113,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4113| 
        LSR       AL,8                  ; [CPU_] |4113| 
        MOV       *XAR4++,AL            ; [CPU_] |4113| 
	.dwpsn	file "../Source/prod.c",line 4111,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4111| 
        ; branchcc occurs ; [] |4111| 
        B         $C$L276,UNC           ; [CPU_] |4111| 
        ; branch occurs ; [] |4111| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4066,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4066| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4066| 
	.dwpsn	file "../Source/prod.c",line 4067,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4067| 
	.dwpsn	file "../Source/prod.c",line 4066,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4066| 
        INC       *-SP[61]              ; [CPU_] |4066| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4067,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |4067| 
        ; branch occurs ; [] |4067| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4069,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4069| 
        MOVL      XAR0,#40              ; [CPU_] |4069| 
        MOV       T,*-SP[57]            ; [CPU_] |4069| 
        MOVL      XAR6,ACC              ; [CPU_] |4069| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4069| 
        MOVB      AL,#76                ; [CPU_] |4069| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4069| 
        ADDL      ACC,XAR6              ; [CPU_] |4069| 
        LSL       ACC,1                 ; [CPU_] |4069| 
        ADDL      ACC,XAR7              ; [CPU_] |4069| 
        ADDB      ACC,#130              ; [CPU_] |4069| 
        MOVL      XAR7,ACC              ; [CPU_] |4069| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4071,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4071| 
        ANDB      AL,#0xff              ; [CPU_] |4071| 
        MOV       *XAR4++,AL            ; [CPU_] |4071| 
	.dwpsn	file "../Source/prod.c",line 4072,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4072| 
        LSR       AL,8                  ; [CPU_] |4072| 
        MOV       *XAR4++,AL            ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4070,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |4070| 
        ; branchcc occurs ; [] |4070| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4078,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4078| 
        ANDB      AL,#0xff              ; [CPU_] |4078| 
        MOV       *XAR4++,AL            ; [CPU_] |4078| 
	.dwpsn	file "../Source/prod.c",line 4079,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4079| 
        LSR       AL,8                  ; [CPU_] |4079| 
        MOV       *XAR4++,AL            ; [CPU_] |4079| 
	.dwpsn	file "../Source/prod.c",line 4077,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4077| 
        ; branchcc occurs ; [] |4077| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4072,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4067,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4067| 
        MOV       PL,AL                 ; [CPU_] |4067| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4067,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4067| 
        MOV       AL,PL                 ; [CPU_] |4067| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4067| 
        B         $C$L268,LT            ; [CPU_] |4067| 
        ; branchcc occurs ; [] |4067| 
	.dwpsn	file "../Source/prod.c",line 4084,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4084| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4084| 
        ; branch occurs ; [] |4084| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4086,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4086| 
        MOVL      XAR0,#40              ; [CPU_] |4086| 
        MOV       T,*-SP[57]            ; [CPU_] |4086| 
        MOVL      P,ACC                 ; [CPU_] |4086| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4086| 
        MOVB      AL,#76                ; [CPU_] |4086| 
        MPYU      ACC,T,AL              ; [CPU_] |4086| 
        ADDL      ACC,P                 ; [CPU_] |4086| 
        LSL       ACC,1                 ; [CPU_] |4086| 
        ADDL      ACC,XAR6              ; [CPU_] |4086| 
        ADDB      ACC,#178              ; [CPU_] |4086| 
        MOVL      XAR7,ACC              ; [CPU_] |4086| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4088,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4088| 
        ANDB      AL,#0xff              ; [CPU_] |4088| 
        MOV       *XAR4++,AL            ; [CPU_] |4088| 
	.dwpsn	file "../Source/prod.c",line 4089,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4089| 
        LSR       AL,8                  ; [CPU_] |4089| 
        MOV       *XAR4++,AL            ; [CPU_] |4089| 
	.dwpsn	file "../Source/prod.c",line 4087,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4087| 
        ; branchcc occurs ; [] |4087| 
	.dwpsn	file "../Source/prod.c",line 4093,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4093| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4095,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4095| 
        ANDB      AL,#0xff              ; [CPU_] |4095| 
        MOV       *XAR4++,AL            ; [CPU_] |4095| 
	.dwpsn	file "../Source/prod.c",line 4096,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4096| 
        LSR       AL,8                  ; [CPU_] |4096| 
        MOV       *XAR4++,AL            ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4094,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4094| 
        ; branchcc occurs ; [] |4094| 
	.dwpsn	file "../Source/prod.c",line 4084,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4089,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4089| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4100,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4100| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4100| 
        ADDB      AL,#-1                ; [CPU_] |4100| 
        CMP       AL,AR5                ; [CPU_] |4100| 
        B         $C$L272,GT            ; [CPU_] |4100| 
        ; branchcc occurs ; [] |4100| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4119,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4119| 
        ADDB      ACC,#222              ; [CPU_] |4119| 
        MOVL      XAR5,ACC              ; [CPU_] |4119| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4121,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4121| 
        ANDB      AL,#0xff              ; [CPU_] |4121| 
        MOV       *XAR4++,AL            ; [CPU_] |4121| 
	.dwpsn	file "../Source/prod.c",line 4122,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4122| 
        LSR       AL,8                  ; [CPU_] |4122| 
        MOV       *XAR4++,AL            ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4120,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4120| 
        ; branchcc occurs ; [] |4120| 
	.dwpsn	file "../Source/prod.c",line 4127,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4127| 
        ADDB      ACC,#224              ; [CPU_] |4127| 
        MOVL      XAR5,ACC              ; [CPU_] |4127| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4129,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4129| 
        ANDB      AL,#0xff              ; [CPU_] |4129| 
        MOV       *XAR4++,AL            ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4130,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4130| 
        LSR       AL,8                  ; [CPU_] |4130| 
        MOV       *XAR4++,AL            ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4128,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4128| 
        ; branchcc occurs ; [] |4128| 
	.dwpsn	file "../Source/prod.c",line 4135,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4135| 
        ADDB      ACC,#228              ; [CPU_] |4135| 
        MOVL      XAR5,ACC              ; [CPU_] |4135| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4137,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4137| 
        ANDB      AL,#0xff              ; [CPU_] |4137| 
        MOV       *XAR4++,AL            ; [CPU_] |4137| 
	.dwpsn	file "../Source/prod.c",line 4138,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4138| 
        LSR       AL,8                  ; [CPU_] |4138| 
        MOV       *XAR4++,AL            ; [CPU_] |4138| 
	.dwpsn	file "../Source/prod.c",line 4136,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4136| 
        ; branchcc occurs ; [] |4136| 
	.dwpsn	file "../Source/prod.c",line 4143,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4143| 
        ADDB      ACC,#230              ; [CPU_] |4143| 
        MOVL      XAR5,ACC              ; [CPU_] |4143| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4145,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4145| 
        ANDB      AL,#0xff              ; [CPU_] |4145| 
        MOV       *XAR4++,AL            ; [CPU_] |4145| 
	.dwpsn	file "../Source/prod.c",line 4146,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4146| 
        LSR       AL,8                  ; [CPU_] |4146| 
        MOV       *XAR4++,AL            ; [CPU_] |4146| 
	.dwpsn	file "../Source/prod.c",line 4144,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4144| 
        ; branchcc occurs ; [] |4144| 
	.dwpsn	file "../Source/prod.c",line 4151,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4151| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4151| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4122,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4154,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4154| 
        ; branch occurs ; [] |4154| 
$C$L281:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3944,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3944| 
        B         $C$L320,LO            ; [CPU_] |3944| 
        ; branchcc occurs ; [] |3944| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3944| 
        MOVL      XAR0,#66              ; [CPU_] |3944| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3944| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3944| 
        B         $C$L320,LT            ; [CPU_] |3944| 
        ; branchcc occurs ; [] |3944| 
        CMPB      AL,#4                 ; [CPU_] |3944| 
        B         $C$L320,GEQ           ; [CPU_] |3944| 
        ; branchcc occurs ; [] |3944| 
	.dwpsn	file "../Source/prod.c",line 3948,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3948| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3948| 
	.dwpsn	file "../Source/prod.c",line 3950,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3950| 
        MOVL      XAR0,#40              ; [CPU_] |3950| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3950| 
        MPYB      ACC,T,#10             ; [CPU_] |3950| 
        ADDL      ACC,XAR6              ; [CPU_] |3950| 
        MOVL      XAR4,ACC              ; [CPU_] |3950| 
        MOVL      XAR7,ACC              ; [CPU_] |3950| 
        MOVB      XAR0,#42              ; [CPU_] |3950| 
        MOVL      P,ACC                 ; [CPU_] |3950| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3950| 
	.dwpsn	file "../Source/prod.c",line 3957,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3957| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3957| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3950,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3950| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3954,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3954| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3960,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3960| 
        ANDB      AL,#0xff              ; [CPU_] |3960| 
        MOV       *XAR4++,AL            ; [CPU_] |3960| 
	.dwpsn	file "../Source/prod.c",line 3961,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3961| 
        LSR       AL,8                  ; [CPU_] |3961| 
        MOV       *XAR4++,AL            ; [CPU_] |3961| 
	.dwpsn	file "../Source/prod.c",line 3958,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3958| 
        ; branchcc occurs ; [] |3958| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3968,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3968| 
        ANDB      AL,#0xff              ; [CPU_] |3968| 
        MOV       *XAR4++,AL            ; [CPU_] |3968| 
	.dwpsn	file "../Source/prod.c",line 3969,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3969| 
        LSR       AL,8                  ; [CPU_] |3969| 
        MOV       *XAR4++,AL            ; [CPU_] |3969| 
	.dwpsn	file "../Source/prod.c",line 3966,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3966| 
        ; branchcc occurs ; [] |3966| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3973| 
        ADDB      XAR5,#46              ; [CPU_] |3973| 
        MOVL      XAR7,XAR5             ; [CPU_] |3973| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3976,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3976| 
        ANDB      AL,#0xff              ; [CPU_] |3976| 
        MOV       *XAR4++,AL            ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3977,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3977| 
        LSR       AL,8                  ; [CPU_] |3977| 
        MOV       *XAR4++,AL            ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3974,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3974| 
        ; branchcc occurs ; [] |3974| 
	.dwpsn	file "../Source/prod.c",line 3981,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3981| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3984| 
        ANDB      AL,#0xff              ; [CPU_] |3984| 
        MOV       *XAR4++,AL            ; [CPU_] |3984| 
	.dwpsn	file "../Source/prod.c",line 3985,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3985| 
        LSR       AL,8                  ; [CPU_] |3985| 
        MOV       *XAR4++,AL            ; [CPU_] |3985| 
	.dwpsn	file "../Source/prod.c",line 3982,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3982| 
        ; branchcc occurs ; [] |3982| 
	.dwpsn	file "../Source/prod.c",line 3954,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3954| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3992,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3992| 
        ANDB      AL,#0xff              ; [CPU_] |3992| 
        MOV       *XAR4++,AL            ; [CPU_] |3992| 
	.dwpsn	file "../Source/prod.c",line 3993,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3993| 
        LSR       AL,8                  ; [CPU_] |3993| 
        MOV       *XAR4++,AL            ; [CPU_] |3993| 
	.dwpsn	file "../Source/prod.c",line 3990,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3990| 
        ; branchcc occurs ; [] |3990| 
        B         $C$L743,UNC           ; [CPU_] |3990| 
        ; branch occurs ; [] |3990| 
$C$L287:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3898,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3898| 
        B         $C$L320,LO            ; [CPU_] |3898| 
        ; branchcc occurs ; [] |3898| 
	.dwpsn	file "../Source/prod.c",line 3902,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3902| 
        B         $C$L288,EQ            ; [CPU_] |3902| 
        ; branchcc occurs ; [] |3902| 
        CMPB      AL,#1                 ; [CPU_] |3902| 
        B         $C$L288,EQ            ; [CPU_] |3902| 
        ; branchcc occurs ; [] |3902| 
        CMPB      AL,#2                 ; [CPU_] |3902| 
        B         $C$L288,EQ            ; [CPU_] |3902| 
        ; branchcc occurs ; [] |3902| 
        ADDB      XAR4,#2               ; [CPU_] |3902| 
        MOVL      XAR0,#66              ; [CPU_] |3902| 
        CMPB      AL,#3                 ; [CPU_] |3902| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3902| 
        B         $C$L320,NEQ           ; [CPU_] |3902| 
        ; branchcc occurs ; [] |3902| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3908,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3908| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3908| 
        MOVL      XAR4,XAR5             ; [CPU_] |3908| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3908| 
        ADDB      XAR5,#2               ; [CPU_] |3908| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3908| 
        ADDB      XAR4,#6               ; [CPU_] |3908| 
        B         $C$L293,NEQ           ; [CPU_] |3908| 
        ; branchcc occurs ; [] |3908| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3909,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3909| 
        B         $C$L320,LO            ; [CPU_] |3909| 
        ; branchcc occurs ; [] |3909| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3914,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3914| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3916,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3916| 
        ADDL      ACC,XT                ; [CPU_] |3916| 
	.dwpsn	file "../Source/prod.c",line 3917,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3917| 
	.dwpsn	file "../Source/prod.c",line 3915,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3915| 
        ; branchcc occurs ; [] |3915| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3920,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3920| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3921,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3921| 
        B         $C$L291,EQ            ; [CPU_] |3921| 
        ; branchcc occurs ; [] |3921| 
	.dwpsn	file "../Source/prod.c",line 3920,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3920| 
        ADDB      XAR4,#1               ; [CPU_] |3920| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3920| 
        ; branchcc occurs ; [] |3920| 
        B         $C$L292,UNC           ; [CPU_] |3920| 
        ; branch occurs ; [] |3920| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3922,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3922| 
        MOVB      XAR0,#35              ; [CPU_] |3922| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3922| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3926,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3926| 
        B         $C$L320,EQ            ; [CPU_] |3926| 
        ; branchcc occurs ; [] |3926| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3932,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3932| 
        MOVL      XAR0,#66              ; [CPU_] |3932| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3932| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3932| 
        ADDB      ACC,#2                ; [CPU_] |3932| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3932| 
        MOVB      XAR0,#34              ; [CPU_] |3932| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3932| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3932| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3932| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3932| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3935| 
        MOV       *XAR4++,AL            ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3934,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3934| 
        MOV       AL,*-SP[59]           ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3934,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3934| 
        B         $C$L294,HI            ; [CPU_] |3934| 
        ; branchcc occurs ; [] |3934| 
        B         $C$L304,UNC           ; [CPU_] |3934| 
        ; branch occurs ; [] |3934| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3882,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3882| 
        MOVB      XAR0,#34              ; [CPU_] |3882| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3882| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3882| 
	.dwpsn	file "../Source/prod.c",line 3884,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3884| 
	.dwpsn	file "../Source/prod.c",line 3882,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3882| 
        MOV       *-SP[61],#3           ; [CPU_] |3882| 
	.dwpsn	file "../Source/prod.c",line 3884,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3884| 
        CMPB      AL,#1                 ; [CPU_] |3884| 
        B         $C$L296,EQ            ; [CPU_] |3884| 
        ; branchcc occurs ; [] |3884| 
        MOVB      XAR1,#34              ; [CPU_] |3884| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3884| 
        B         $C$L743,NEQ           ; [CPU_] |3884| 
        ; branchcc occurs ; [] |3884| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3886,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3886| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3886| 
        MOVL      XAR0,#74              ; [CPU_] |3886| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3886| 
        MOVL      XAR0,#44              ; [CPU_] |3886| 
        ADDL      ACC,XAR6              ; [CPU_] |3886| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3886| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3886| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3889,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3889| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3889| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3888,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3888| 
        ANDB      AL,#0xff              ; [CPU_] |3888| 
        MOV       *XAR4++,AL            ; [CPU_] |3888| 
	.dwpsn	file "../Source/prod.c",line 3889,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3889| 
        LSR       AL,8                  ; [CPU_] |3889| 
        MOV       *XAR4++,AL            ; [CPU_] |3889| 
	.dwpsn	file "../Source/prod.c",line 3887,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3887| 
        ; branchcc occurs ; [] |3887| 
        B         $C$L743,UNC           ; [CPU_] |3887| 
        ; branch occurs ; [] |3887| 
$C$L298:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3861,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3861| 
        B         $C$L320,LO            ; [CPU_] |3861| 
        ; branchcc occurs ; [] |3861| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3861| 
        MOVL      XAR0,#66              ; [CPU_] |3861| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3861| 
        ADDB      AL,#3                 ; [CPU_] |3861| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3861| 
        CMP       AL,*-SP[59]           ; [CPU_] |3861| 
        B         $C$L320,HI            ; [CPU_] |3861| 
        ; branchcc occurs ; [] |3861| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3866,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3866| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3866| 
        ; branch occurs ; [] |3866| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3867,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3867| 
        ADD       PL,AL                 ; [CPU_] |3867| 
        MOVL      ACC,XAR7              ; [CPU_] |3867| 
        ADD       ACC,PL                ; [CPU_] |3867| 
        MOVL      XAR7,ACC              ; [CPU_] |3867| 
	.dwpsn	file "../Source/prod.c",line 3866,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3866| 
	.dwpsn	file "../Source/prod.c",line 3867,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3867| 
        MOV       *XAR4++,AL            ; [CPU_] |3867| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3866,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3866| 
        MOVL      XAR0,#66              ; [CPU_] |3866| 
        MOVL      ACC,XAR7              ; [CPU_] |3866| 
        ADDB      ACC,#2                ; [CPU_] |3866| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3866| 
        MOV       AL,AR6                ; [CPU_] |3866| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3866| 
        B         $C$L299,LT            ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
	.dwpsn	file "../Source/prod.c",line 3869,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3869| 
        MOVL      XAR0,#76              ; [CPU_] |3869| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3869| 
	.dwpsn	file "../Source/prod.c",line 3872,column 5,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_strlen")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3872| 
        ; call occurs [#_strlen] ; [] |3872| 
	.dwpsn	file "../Source/prod.c",line 3873,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3873| 
	.dwpsn	file "../Source/prod.c",line 3874,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3874| 
	.dwpsn	file "../Source/prod.c",line 3873,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3873| 
        MOV       *-SP[61],#3           ; [CPU_] |3873| 
	.dwpsn	file "../Source/prod.c",line 3874,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3874| 
        ; branchcc occurs ; [] |3874| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3874,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3874| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3875,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3875| 
	.dwpsn	file "../Source/prod.c",line 3874,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3874| 
	.dwpsn	file "../Source/prod.c",line 3875,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3875| 
        INC       *-SP[61]              ; [CPU_] |3875| 
	.dwpsn	file "../Source/prod.c",line 3874,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3874| 
        B         $C$L301,HI            ; [CPU_] |3874| 
        ; branchcc occurs ; [] |3874| 
	.dwpsn	file "../Source/prod.c",line 3878,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3878| 
        ; branch occurs ; [] |3878| 
$C$L302:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3841,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3841| 
        B         $C$L320,LO            ; [CPU_] |3841| 
        ; branchcc occurs ; [] |3841| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3846,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3846| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3846| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3848,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3848| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3849,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3849| 
        MOV       *XAR5++,AL            ; [CPU_] |3849| 
	.dwpsn	file "../Source/prod.c",line 3850,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3850| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3850| 
        MOV       *XAR4++,AL            ; [CPU_] |3850| 
	.dwpsn	file "../Source/prod.c",line 3851,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3851| 
        MOV       *XAR5++,AL            ; [CPU_] |3851| 
	.dwpsn	file "../Source/prod.c",line 3847,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3847| 
        ; branchcc occurs ; [] |3847| 
	.dwpsn	file "../Source/prod.c",line 3851,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3851| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3854,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3854| 
	.dwpsn	file "../Source/prod.c",line 3857,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3857| 
        ; branch occurs ; [] |3857| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5766,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5766 | cmd_mode = SCI_MODE_ASCII;                                             
; 5767 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5768 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5769 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5766| 
	.dwpsn	file "../Source/prod.c",line 5772,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5772 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_update_units")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5772| 
        ; call occurs [#_update_units] ; [] |5772| 
	.dwpsn	file "../Source/prod.c",line 5765,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5765| 
	.dwpsn	file "../Source/prod.c",line 5773,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5773 | break;                                                                 
; 5775 | default:                                                               
; 5777 | // send back NACK?                                                     
; 5779 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5773| 
        ; branch occurs ; [] |5773| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5759,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5759| 
	.dwpsn	file "../Source/prod.c",line 5761,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5761| 
        ; branch occurs ; [] |5761| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4396,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4396| 
	.dwpsn	file "../Source/prod.c",line 4397,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4397| 
        ; branch occurs ; [] |4397| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4392,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4392| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4392| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_ssr_set")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4392| 
        ; call occurs [#_ssr_set] ; [] |4392| 
	.dwpsn	file "../Source/prod.c",line 4393,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4393| 
        ; branch occurs ; [] |4393| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5700,column 5,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_conf_read")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5700| 
        ; call occurs [#_conf_read] ; [] |5700| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5703,column 5,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5703| 
        ; call occurs [#_ad7738_setcal] ; [] |5703| 
	.dwpsn	file "../Source/prod.c",line 5704,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5704| 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5704| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5704| 
	.dwpsn	file "../Source/prod.c",line 5705,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5705| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5705| 
        ; call occurs [#_ad7738_resetvall] ; [] |5705| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5709,column 5,is_stmt,isa 0
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_update_units")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5709| 
        ; call occurs [#_update_units] ; [] |5709| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5708| 
	.dwpsn	file "../Source/prod.c",line 5711,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5711| 
        ; branch occurs ; [] |5711| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5664,column 5,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_conf_default")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5664| 
        ; call occurs [#_conf_default] ; [] |5664| 
	.dwpsn	file "../Source/prod.c",line 5667,column 5,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5667| 
        ; call occurs [#_lcd_clear] ; [] |5667| 
	.dwpsn	file "../Source/prod.c",line 5668,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5668| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5668| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5668| 
        ; call occurs [#_lcd_puts] ; [] |5668| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5671,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5671| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_delay_us")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5671| 
        ; call occurs [#_delay_us] ; [] |5671| 
	.dwpsn	file "../Source/prod.c",line 5670,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5670| 
        ; branchcc occurs ; [] |5670| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5675,column 5,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_conf_write")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5675| 
        ; call occurs [#_conf_write] ; [] |5675| 
        MOVZ      AR1,AL                ; [CPU_] |5675| 
	.dwpsn	file "../Source/prod.c",line 5676,column 5,is_stmt,isa 0
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5676| 
        ; call occurs [#_ad7738_setcal] ; [] |5676| 
	.dwpsn	file "../Source/prod.c",line 5677,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5677| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5677| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5677| 
	.dwpsn	file "../Source/prod.c",line 5678,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5678| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5678| 
        ; call occurs [#_ad7738_resetvall] ; [] |5678| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5681,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5681| 
        ; branchcc occurs ; [] |5681| 
	.dwpsn	file "../Source/prod.c",line 5682,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5682| 
        MOVB      AL,#31                ; [CPU_] |5682| 
        SPM       #0                    ; [CPU_] 
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5682| 
        ; call occurs [#_lcd_puts] ; [] |5682| 
	.dwpsn	file "../Source/prod.c",line 5683,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5683| 
	.dwpsn	file "../Source/prod.c",line 5684,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5684| 
	.dwpsn	file "../Source/prod.c",line 5685,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5685| 
        ; branch occurs ; [] |5685| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5686,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5686| 
        MOVB      AL,#31                ; [CPU_] |5686| 
        SPM       #0                    ; [CPU_] 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5686| 
        ; call occurs [#_lcd_puts] ; [] |5686| 
	.dwpsn	file "../Source/prod.c",line 5687,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5687| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5690,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5690| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_delay_us")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5690| 
        ; call occurs [#_delay_us] ; [] |5690| 
	.dwpsn	file "../Source/prod.c",line 5689,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5689| 
        ; branchcc occurs ; [] |5689| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5692,column 5,is_stmt,isa 0
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5692| 
        ; call occurs [#_lcd_clear] ; [] |5692| 
	.dwpsn	file "../Source/prod.c",line 5693,column 5,is_stmt,isa 0
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_update_units")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5693| 
        ; call occurs [#_update_units] ; [] |5693| 
$C$L317:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5782,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5782 | switch (bincmdresult) {                                                
; 5783 | case OK_SendResult:                                                    
; 5784 |         scia_send_bin(buff, j);         // send back                   
; 5786 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5787 |                 delay_us(2000);                 // 2ms                 
; 5788 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5790 |         break;                                                         
; 5792 | case Error_UnImpl:                                                     
; 5794 |         buff[1] = CmdUnImpl;                                           
; 5795 |         buff[2] = cmdbuff[1];                                          
; 5796 |         scia_send_bin(buff, 3);         // send back                   
; 5797 |         break;                                                         
; 5799 | case Error_Invalid:                                                    
; 5801 |         buff[1] = CmdInvalid;                                          
; 5802 |         buff[2] = cmdbuff[1];                                          
; 5803 |         scia_send_bin(buff, 3);         // send back                   
; 5804 |         break;                                                         
; 5806 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5782| 
        ; branchcc occurs ; [] |5782| 
        CMPB      AL,#1                 ; [CPU_] |5782| 
        B         $C$L321,EQ            ; [CPU_] |5782| 
        ; branchcc occurs ; [] |5782| 
        CMPB      AL,#2                 ; [CPU_] |5782| 
        B         $C$L320,EQ            ; [CPU_] |5782| 
        ; branchcc occurs ; [] |5782| 
        CMPB      AL,#3                 ; [CPU_] |5782| 
        B         $C$L634,NEQ           ; [CPU_] |5782| 
        ; branchcc occurs ; [] |5782| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5808,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5808 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5808| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5808| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5809,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5809 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5809| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5809| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5809| 
	.dwpsn	file "../Source/prod.c",line 5810,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5810 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5810| 
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5810| 
        ; call occurs [#_scia_send_bin] ; [] |5810| 
	.dwpsn	file "../Source/prod.c",line 5811,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5811 | break;                                                                 
; 5813 | default:                                                               
; 5815 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5811| 
        ; branch occurs ; [] |5811| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5801,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5801| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5801| 
	.dwpsn	file "../Source/prod.c",line 5804,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5804| 
        ; branch occurs ; [] |5804| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5794,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5794| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5794| 
	.dwpsn	file "../Source/prod.c",line 5797,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5797| 
        ; branch occurs ; [] |5797| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 1024,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1024| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1024| 
        CMPB      AL,#79                ; [CPU_] |1024| 
        B         $C$L324,GT            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#79                ; [CPU_] |1024| 
        B         $C$L443,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#69                ; [CPU_] |1024| 
        B         $C$L323,GT            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#69                ; [CPU_] |1024| 
        B         $C$L507,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#66                ; [CPU_] |1024| 
        B         $C$L591,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#67                ; [CPU_] |1024| 
        B         $C$L530,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#68                ; [CPU_] |1024| 
        B         $C$L514,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        B         $C$L625,UNC           ; [CPU_] |1024| 
        ; branch occurs ; [] |1024| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |1024| 
        B         $C$L498,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#72                ; [CPU_] |1024| 
        B         $C$L630,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#76                ; [CPU_] |1024| 
        B         $C$L466,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        B         $C$L625,UNC           ; [CPU_] |1024| 
        ; branch occurs ; [] |1024| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |1024| 
        B         $C$L325,GT            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#85                ; [CPU_] |1024| 
        B         $C$L326,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#80                ; [CPU_] |1024| 
        B         $C$L429,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#82                ; [CPU_] |1024| 
        B         $C$L414,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#83                ; [CPU_] |1024| 
        B         $C$L351,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        B         $C$L625,UNC           ; [CPU_] |1024| 
        ; branch occurs ; [] |1024| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |1024| 
        B         $C$L628,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        CMPB      AL,#90                ; [CPU_] |1024| 
        B         $C$L626,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
        B         $C$L625,UNC           ; [CPU_] |1024| 
        ; branch occurs ; [] |1024| 
$C$L326:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1192,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1192| 
        B         $C$L625,LO            ; [CPU_] |1192| 
        ; branchcc occurs ; [] |1192| 
	.dwpsn	file "../Source/prod.c",line 1195,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1195| 
        CMPB      AL,#73                ; [CPU_] |1195| 
        B         $C$L327,GT            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        CMPB      AL,#73                ; [CPU_] |1195| 
        B         $C$L338,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        CMPB      AL,#66                ; [CPU_] |1195| 
        B         $C$L330,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        CMPB      AL,#67                ; [CPU_] |1195| 
        B         $C$L347,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        CMPB      AL,#70                ; [CPU_] |1195| 
        B         $C$L344,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        B         $C$L625,UNC           ; [CPU_] |1195| 
        ; branch occurs ; [] |1195| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1195| 
        B         $C$L328,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        CMPB      AL,#83                ; [CPU_] |1195| 
        B         $C$L337,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        CMPB      AL,#87                ; [CPU_] |1195| 
        B         $C$L336,EQ            ; [CPU_] |1195| 
        ; branchcc occurs ; [] |1195| 
        B         $C$L625,UNC           ; [CPU_] |1195| 
        ; branch occurs ; [] |1195| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1212,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1212| 
        MOVL      XAR0,#44              ; [CPU_] |1212| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1212| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1212| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1212| 
        MOVL      XAR4,XAR1             ; [CPU_] |1212| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_sprintf")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1212| 
        ; call occurs [#_sprintf] ; [] |1212| 
	.dwpsn	file "../Source/prod.c",line 1213,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1213| 
        MOV       AL,#1024              ; [CPU_] |1213| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1213| 
	.dwpsn	file "../Source/prod.c",line 1212,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1212| 
	.dwpsn	file "../Source/prod.c",line 1213,column 6,is_stmt,isa 0
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1213| 
        ; call occurs [#_scia_getparam] ; [] |1213| 
        CMPB      AL,#31                ; [CPU_] |1213| 
        B         $C$L329,LOS           ; [CPU_] |1213| 
        ; branchcc occurs ; [] |1213| 
	.dwpsn	file "../Source/prod.c",line 1217,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1217| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1217| 
	.dwpsn	file "../Source/prod.c",line 1216,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1216| 
	.dwpsn	file "../Source/prod.c",line 1217,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1217| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1217| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1220,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1220| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1220| 
        MOVL      XAR0,#86              ; [CPU_] |1220| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1220| 
        MOVB      AH,#1                 ; [CPU_] |1220| 
        ADD       AH,AL                 ; [CPU_] |1220| 
        MOVU      ACC,AH                ; [CPU_] |1220| 
        MOVL      XAR5,XAR1             ; [CPU_] |1220| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_memcpy")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1220| 
        ; call occurs [#_memcpy] ; [] |1220| 
        MOVL      XAR4,XAR1             ; [CPU_] |1220| 
	.dwpsn	file "../Source/prod.c",line 1224,column 6,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1224| 
        ; call occurs [#_scia_puts] ; [] |1224| 
	.dwpsn	file "../Source/prod.c",line 1225,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1225| 
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1227| 
        ; branch occurs ; [] |1227| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1317,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1317| 
        MOVB      XAR0,#34              ; [CPU_] |1317| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1317| 
        CMPB      AL,#3                 ; [CPU_] |1317| 
        B         $C$L335,EQ            ; [CPU_] |1317| 
        ; branchcc occurs ; [] |1317| 
        MOVB      XAR1,#34              ; [CPU_] |1317| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1317| 
        CMPB      AL,#2                 ; [CPU_] |1317| 
        B         $C$L335,EQ            ; [CPU_] |1317| 
        ; branchcc occurs ; [] |1317| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1324,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1324| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1324| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1325,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1325| 
        MOVL      XAR0,#44              ; [CPU_] |1325| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1325| 
        MOV       *-SP[3],AL            ; [CPU_] |1325| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1325| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1325| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1325| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_sprintf")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1325| 
        ; call occurs [#_sprintf] ; [] |1325| 
        MOVL      XAR0,#44              ; [CPU_] |1325| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1325| 
	.dwpsn	file "../Source/prod.c",line 1326,column 7,is_stmt,isa 0
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_puts")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1326| 
        ; call occurs [#_scia_puts] ; [] |1326| 
        MOV       AL,*-SP[47]           ; [CPU_] |1326| 
	.dwpsn	file "../Source/prod.c",line 1327,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1327| 
        B         $C$L332,GEQ           ; [CPU_] |1327| 
        ; branchcc occurs ; [] |1327| 
	.dwpsn	file "../Source/prod.c",line 1328,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1328| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_scia_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1328| 
        ; call occurs [#_scia_puts] ; [] |1328| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1324,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1324| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1324| 
        B         $C$L331,LT            ; [CPU_] |1324| 
        ; branchcc occurs ; [] |1324| 
	.dwpsn	file "../Source/prod.c",line 1331,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1331| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_puts")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1331| 
        ; call occurs [#_scia_puts] ; [] |1331| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1332,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1332| 
        MOVB      XAR0,#35              ; [CPU_] |1332| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1332| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1332| 
        MOV       *-SP[3],AL            ; [CPU_] |1332| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1332| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1332| 
        MOVL      XAR0,#74              ; [CPU_] |1332| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1332| 
        ADDL      ACC,XAR6              ; [CPU_] |1332| 
        MOVL      XAR4,ACC              ; [CPU_] |1332| 
        MOVL      XAR0,#44              ; [CPU_] |1332| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1332| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1332| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1332| 
        MOVL      XAR4,XAR1             ; [CPU_] |1332| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_sprintf")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1332| 
        ; call occurs [#_sprintf] ; [] |1332| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1332,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1332| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1332,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1332| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1335| 
        MOVL      XAR5,XAR1             ; [CPU_] |1335| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1335| 
        ; call occurs [#_scia_getparam] ; [] |1335| 
        MOVL      XAR4,XAR1             ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1336,column 6,is_stmt,isa 0
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_puts")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1336| 
        ; call occurs [#_scia_puts] ; [] |1336| 
	.dwpsn	file "../Source/prod.c",line 1337,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1337| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_scia_puts")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1337| 
        ; call occurs [#_scia_puts] ; [] |1337| 
        MOV       AL,*-SP[47]           ; [CPU_] |1337| 
	.dwpsn	file "../Source/prod.c",line 1338,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1338| 
        ; branchcc occurs ; [] |1338| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1343,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_atoi")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1343| 
        ; call occurs [#_atoi] ; [] |1343| 
        CMPB      AL,#7                 ; [CPU_] |1343| 
        B         $C$L333,HI            ; [CPU_] |1343| 
        ; branchcc occurs ; [] |1343| 
	.dwpsn	file "../Source/prod.c",line 1349,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1349| 
        MOVB      XAR1,#35              ; [CPU_] |1349| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1349| 
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1350| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1350| 
	.dwpsn	file "../Source/prod.c",line 1349,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1349| 
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1350| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1350| 
        MOVL      XAR0,#74              ; [CPU_] |1350| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1350| 
	.dwpsn	file "../Source/prod.c",line 1357,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1357| 
        ; branch occurs ; [] |1357| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1345,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1345| 
	.dwpsn	file "../Source/prod.c",line 1347,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1347| 
        ; branch occurs ; [] |1347| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1339,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1339| 
	.dwpsn	file "../Source/prod.c",line 1341,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1341| 
        ; branch occurs ; [] |1341| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1319,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1319| 
	.dwpsn	file "../Source/prod.c",line 1321,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1321| 
        ; branch occurs ; [] |1321| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1390| 
        MOVB      XAR0,#40              ; [CPU_] |1390| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1390| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1390| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1390| 
        MOVL      XAR0,#44              ; [CPU_] |1390| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1390| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1390| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_sprintf")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1390| 
        ; call occurs [#_sprintf] ; [] |1390| 
        MOVL      XAR0,#44              ; [CPU_] |1390| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1392| 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1390| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1392| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1392| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1392| 
        ; call occurs [#_scia_getparam] ; [] |1392| 
        MOVL      XAR0,#86              ; [CPU_] |1392| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1392| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_strtod")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1393,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1393| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1393| 
        MOVB      XAR1,#40              ; [CPU_] |1393| 
        MOVL      XAR0,#86              ; [CPU_] |1393| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1393| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1393| 
	.dwpsn	file "../Source/prod.c",line 1394,column 6,is_stmt,isa 0
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_scia_puts")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1394| 
        ; call occurs [#_scia_puts] ; [] |1394| 
	.dwpsn	file "../Source/prod.c",line 1395,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1395| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1395| 
        ; call occurs [#_scia_puts] ; [] |1395| 
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1397| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1397| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1397| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1397| 
        MOVB      XAR1,#40              ; [CPU_] |1397| 
        MOVL      XAR0,#44              ; [CPU_] |1397| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1397| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1397| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1397| 
        MOVL      XAR4,XAR1             ; [CPU_] |1397| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_sprintf")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1397| 
        ; call occurs [#_sprintf] ; [] |1397| 
        MOVL      XAR4,XAR1             ; [CPU_] |1397| 
	.dwpsn	file "../Source/prod.c",line 1399,column 6,is_stmt,isa 0
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_puts")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1399| 
        ; call occurs [#_scia_puts] ; [] |1399| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1403,column 6,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1403| 
        ; call occurs [#_ad7738_setcal] ; [] |1403| 
	.dwpsn	file "../Source/prod.c",line 1406,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1406| 
        ; branch occurs ; [] |1406| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1200,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1200| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1200| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1200| 
        MOV       AL,#1024              ; [CPU_] |1200| 
        MOVL      XAR5,XAR1             ; [CPU_] |1200| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1200| 
        ; call occurs [#_scia_getparam] ; [] |1200| 
        MOVL      XAR4,XAR1             ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1202,column 6,is_stmt,isa 0
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_atol")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1202| 
        ; call occurs [#_atol] ; [] |1202| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1202| 
	.dwpsn	file "../Source/prod.c",line 1204,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1204| 
	.dwpsn	file "../Source/prod.c",line 1202,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1202| 
	.dwpsn	file "../Source/prod.c",line 1204,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1204| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1204| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1204| 
	.dwpsn	file "../Source/prod.c",line 1207,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1207| 
        ; branch occurs ; [] |1207| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1282,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1282| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1282| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1283,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1283| 
        MOVL      XAR0,#44              ; [CPU_] |1283| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1283| 
        MOV       *-SP[3],AL            ; [CPU_] |1283| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1283| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1283| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1283| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_sprintf")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1283| 
        ; call occurs [#_sprintf] ; [] |1283| 
        MOVL      XAR0,#44              ; [CPU_] |1283| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1283| 
	.dwpsn	file "../Source/prod.c",line 1284,column 7,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_puts")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1284| 
        ; call occurs [#_scia_puts] ; [] |1284| 
        MOV       AL,*-SP[47]           ; [CPU_] |1284| 
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1285| 
        B         $C$L340,GEQ           ; [CPU_] |1285| 
        ; branchcc occurs ; [] |1285| 
	.dwpsn	file "../Source/prod.c",line 1286,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1286| 
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1286| 
        ; call occurs [#_scia_puts] ; [] |1286| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1282,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1282| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1282| 
        B         $C$L339,LT            ; [CPU_] |1282| 
        ; branchcc occurs ; [] |1282| 
	.dwpsn	file "../Source/prod.c",line 1289,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1289| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1289| 
        ; call occurs [#_scia_puts] ; [] |1289| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1290| 
        MOVB      XAR0,#34              ; [CPU_] |1290| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1290| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1290| 
        MOV       *-SP[3],AL            ; [CPU_] |1290| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1290| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1290| 
        MOVL      XAR0,#72              ; [CPU_] |1290| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1290| 
        ADDL      ACC,XAR6              ; [CPU_] |1290| 
        MOVL      XAR4,ACC              ; [CPU_] |1290| 
        MOVL      XAR0,#44              ; [CPU_] |1290| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1290| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1290| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1290| 
        MOVL      XAR4,XAR1             ; [CPU_] |1290| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_sprintf")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1290| 
        ; call occurs [#_sprintf] ; [] |1290| 
	.dwpsn	file "../Source/prod.c",line 1292,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1290| 
	.dwpsn	file "../Source/prod.c",line 1292,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1292| 
        MOV       AL,#1024              ; [CPU_] |1292| 
        MOVL      XAR5,XAR1             ; [CPU_] |1292| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1292| 
        ; call occurs [#_scia_getparam] ; [] |1292| 
        MOV       *-SP[47],AL           ; [CPU_] |1292| 
        MOVL      XAR4,XAR1             ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_puts")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1293| 
        ; call occurs [#_scia_puts] ; [] |1293| 
	.dwpsn	file "../Source/prod.c",line 1294,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1294| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_puts")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1294| 
        ; call occurs [#_scia_puts] ; [] |1294| 
        MOV       AL,*-SP[47]           ; [CPU_] |1294| 
	.dwpsn	file "../Source/prod.c",line 1295,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1295| 
        ; branchcc occurs ; [] |1295| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1299,column 6,is_stmt,isa 0
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_atoi")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1299| 
        ; call occurs [#_atoi] ; [] |1299| 
        CMPB      AL,#3                 ; [CPU_] |1299| 
        B         $C$L342,HI            ; [CPU_] |1299| 
        ; branchcc occurs ; [] |1299| 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1305| 
        MOVB      XAR1,#34              ; [CPU_] |1305| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1305| 
	.dwpsn	file "../Source/prod.c",line 1306,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1306| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1306| 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1305| 
	.dwpsn	file "../Source/prod.c",line 1306,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1306| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1306| 
        MOVL      XAR0,#72              ; [CPU_] |1306| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1306| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1306| 
        MOVL      XAR4,ACC              ; [CPU_] |1306| 
        MOVL      XAR0,#44              ; [CPU_] |1306| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1306| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1306| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1306| 
        MOVL      XAR4,XAR1             ; [CPU_] |1306| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_sprintf")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1306| 
        ; call occurs [#_sprintf] ; [] |1306| 
        MOVL      XAR4,XAR1             ; [CPU_] |1306| 
	.dwpsn	file "../Source/prod.c",line 1309,column 6,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1309| 
        ; call occurs [#_scia_puts] ; [] |1309| 
	.dwpsn	file "../Source/prod.c",line 1310,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1310| 
	.dwpsn	file "../Source/prod.c",line 1313,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1313| 
        ; branch occurs ; [] |1313| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1301,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1301| 
	.dwpsn	file "../Source/prod.c",line 1303,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1303| 
        ; branch occurs ; [] |1303| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1296,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1296| 
	.dwpsn	file "../Source/prod.c",line 1297,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1297| 
        ; branch occurs ; [] |1297| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1363,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1363| 
        MOVL      XAR0,#44              ; [CPU_] |1363| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1363| 
        MOV       *-SP[3],#4096         ; [CPU_] |1363| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1363| 
        MOVL      XAR4,XAR1             ; [CPU_] |1363| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_sprintf")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1363| 
        ; call occurs [#_sprintf] ; [] |1363| 
	.dwpsn	file "../Source/prod.c",line 1365,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1363,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1363| 
	.dwpsn	file "../Source/prod.c",line 1365,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1365| 
        MOV       AL,#1024              ; [CPU_] |1365| 
        MOVL      XAR5,XAR1             ; [CPU_] |1365| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1365| 
        ; call occurs [#_scia_getparam] ; [] |1365| 
	.dwpsn	file "../Source/prod.c",line 1366,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1366| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_atoi")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1366| 
        ; call occurs [#_atoi] ; [] |1366| 
        MOV       *-SP[47],AL           ; [CPU_] |1366| 
	.dwpsn	file "../Source/prod.c",line 1367,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1367| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_puts")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1367| 
        ; call occurs [#_scia_puts] ; [] |1367| 
        MOV       AL,*-SP[47]           ; [CPU_] |1367| 
	.dwpsn	file "../Source/prod.c",line 1369,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1369| 
        ; branchcc occurs ; [] |1369| 
        CMP       AL,#4096              ; [CPU_] |1369| 
        B         $C$L346,GT            ; [CPU_] |1369| 
        ; branchcc occurs ; [] |1369| 
	.dwpsn	file "../Source/prod.c",line 1374,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1374| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1374| 
        ; call occurs [#_scia_puts] ; [] |1374| 
	.dwpsn	file "../Source/prod.c",line 1376,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1376| 
        MOVL      XAR0,#44              ; [CPU_] |1376| 
        MOV       AL,*-SP[47]           ; [CPU_] |1376| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1376| 
        MOV       *-SP[3],AL            ; [CPU_] |1376| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1376| 
        MOVL      XAR4,XAR1             ; [CPU_] |1376| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_sprintf")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1376| 
        ; call occurs [#_sprintf] ; [] |1376| 
        MOVL      XAR4,XAR1             ; [CPU_] |1376| 
	.dwpsn	file "../Source/prod.c",line 1378,column 6,is_stmt,isa 0
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_puts")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1378| 
        ; call occurs [#_scia_puts] ; [] |1378| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1383,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1383| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1383| 
        MOV       AL,*-SP[47]           ; [CPU_] |1383| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1383| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1384,column 6,is_stmt,isa 0
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_maf_rst")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1384| 
        ; call occurs [#_maf_rst] ; [] |1384| 
	.dwpsn	file "../Source/prod.c",line 1386,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1386| 
        ; branch occurs ; [] |1386| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1371,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1371| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_puts")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1371| 
        ; call occurs [#_scia_puts] ; [] |1371| 
	.dwpsn	file "../Source/prod.c",line 1362,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1362| 
        ; branch occurs ; [] |1362| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1234,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1234| 
        MOVL      XAR0,#44              ; [CPU_] |1234| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1234| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1234| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1234| 
        MOVL      XAR4,XAR1             ; [CPU_] |1234| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_sprintf")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1234| 
        ; call occurs [#_sprintf] ; [] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1234,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1235| 
        MOV       AL,#1024              ; [CPU_] |1235| 
        MOVL      XAR5,XAR1             ; [CPU_] |1235| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1235| 
        ; call occurs [#_scia_getparam] ; [] |1235| 
	.dwpsn	file "../Source/prod.c",line 1236,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1236| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_atoi")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1236| 
        ; call occurs [#_atoi] ; [] |1236| 
        MOV       *-SP[58],AL           ; [CPU_] |1236| 
	.dwpsn	file "../Source/prod.c",line 1237,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1237| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_puts")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1237| 
        ; call occurs [#_scia_puts] ; [] |1237| 
        MOV       AL,*-SP[58]           ; [CPU_] |1237| 
	.dwpsn	file "../Source/prod.c",line 1239,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1239| 
        CMPB      AL,#4                 ; [CPU_] |1239| 
        B         $C$L350,HIS           ; [CPU_] |1239| 
        ; branchcc occurs ; [] |1239| 
	.dwpsn	file "../Source/prod.c",line 1243,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1243| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1243| 
        ; call occurs [#_scia_puts] ; [] |1243| 
	.dwpsn	file "../Source/prod.c",line 1244,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1244| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1249| 
        MOVL      XAR0,#44              ; [CPU_] |1249| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1249| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1249| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1249| 
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_sprintf")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1249| 
        ; call occurs [#_sprintf] ; [] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1250| 
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1250| 
        MOV       AL,#1024              ; [CPU_] |1250| 
        MOVL      XAR5,XAR1             ; [CPU_] |1250| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1250| 
        ; call occurs [#_scia_getparam] ; [] |1250| 
	.dwpsn	file "../Source/prod.c",line 1251,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1251| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_atoi")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1251| 
        ; call occurs [#_atoi] ; [] |1251| 
        MOV       *-SP[57],AL           ; [CPU_] |1251| 
	.dwpsn	file "../Source/prod.c",line 1252,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1252| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_scia_puts")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1252| 
        ; call occurs [#_scia_puts] ; [] |1252| 
        MOV       AL,*-SP[57]           ; [CPU_] |1252| 
	.dwpsn	file "../Source/prod.c",line 1256,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1256| 
        CMPB      AL,#20                ; [CPU_] |1256| 
        B         $C$L349,HIS           ; [CPU_] |1256| 
        ; branchcc occurs ; [] |1256| 
	.dwpsn	file "../Source/prod.c",line 1260,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1260| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_puts")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1260| 
        ; call occurs [#_scia_puts] ; [] |1260| 
	.dwpsn	file "../Source/prod.c",line 1263,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1263| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1263| 
        MOVL      XAR0,#44              ; [CPU_] |1263| 
        MOV       AH,*-SP[57]           ; [CPU_] |1263| 
        ADD       AL,*-SP[58]           ; [CPU_] |1263| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1263| 
        MOV       *-SP[3],AL            ; [CPU_] |1263| 
        MOV       *-SP[4],AH            ; [CPU_] |1263| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1263| 
        DEC       *-SP[57]              ; [CPU_] |1263| 
        MOVL      XAR4,XAR1             ; [CPU_] |1263| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_sprintf")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1263| 
        ; call occurs [#_sprintf] ; [] |1263| 
        MOVL      XAR4,XAR1             ; [CPU_] |1263| 
	.dwpsn	file "../Source/prod.c",line 1265,column 6,is_stmt,isa 0
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1265| 
        ; call occurs [#_scia_puts] ; [] |1265| 
        MOV       AL,*-SP[57]           ; [CPU_] |1265| 
	.dwpsn	file "../Source/prod.c",line 1266,column 6,is_stmt,isa 0
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_print_sensor")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1266| 
        ; call occurs [#_print_sensor] ; [] |1266| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1270,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1270| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1270| 
        MOVB      AL,#10                ; [CPU_] |1270| 
        MOV       T,*-SP[58]            ; [CPU_] |1270| 
        MPYU      ACC,T,AL              ; [CPU_] |1270| 
        ADDL      ACC,XAR6              ; [CPU_] |1270| 
        MOVL      XAR4,ACC              ; [CPU_] |1270| 
        MOVB      XAR0,#42              ; [CPU_] |1270| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1270| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1270| 
	.dwpsn	file "../Source/prod.c",line 1271,column 6,is_stmt,isa 0
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1271| 
        ; call occurs [#_ad7738_setcal] ; [] |1271| 
        MOVL      XAR0,#78              ; [CPU_] |1271| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1271| 
	.dwpsn	file "../Source/prod.c",line 1273,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1273| 
        MOVL      XAR1,ACC              ; [CPU_] |1273| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1273| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1273| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1273| 
	.dwpsn	file "../Source/prod.c",line 1274,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1274| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1274| 
        ; call occurs [#_ad7738_resetvall] ; [] |1274| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1278| 
        ; branch occurs ; [] |1278| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1258,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1258| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1258| 
        ; call occurs [#_scia_puts] ; [] |1258| 
	.dwpsn	file "../Source/prod.c",line 1248,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1248| 
        ; branch occurs ; [] |1248| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1241,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1241| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1241| 
        ; call occurs [#_scia_puts] ; [] |1241| 
	.dwpsn	file "../Source/prod.c",line 1233,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1233| 
        ; branch occurs ; [] |1233| 
$C$L351:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2094,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2094| 
        B         $C$L625,LO            ; [CPU_] |2094| 
        ; branchcc occurs ; [] |2094| 
	.dwpsn	file "../Source/prod.c",line 2099,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2099| 
        CMPB      AL,#78                ; [CPU_] |2099| 
        B         $C$L352,EQ            ; [CPU_] |2099| 
        ; branchcc occurs ; [] |2099| 
        CMPB      AL,#85                ; [CPU_] |2099| 
        B         $C$L352,EQ            ; [CPU_] |2099| 
        ; branchcc occurs ; [] |2099| 
        CMPB      AL,#66                ; [CPU_] |2099| 
        B         $C$L352,EQ            ; [CPU_] |2099| 
        ; branchcc occurs ; [] |2099| 
        CMPB      AL,#68                ; [CPU_] |2099| 
        B         $C$L625,NEQ           ; [CPU_] |2099| 
        ; branchcc occurs ; [] |2099| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2102,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2102| 
	.dwpsn	file "../Source/prod.c",line 2123,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2123| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2125,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2125| 
        MOVL      XAR0,#44              ; [CPU_] |2125| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2125| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2125| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2125| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_sprintf")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2125| 
        ; call occurs [#_sprintf] ; [] |2125| 
        MOVL      XAR0,#44              ; [CPU_] |2125| 
	.dwpsn	file "../Source/prod.c",line 2126,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2126| 
	.dwpsn	file "../Source/prod.c",line 2125,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2125| 
	.dwpsn	file "../Source/prod.c",line 2126,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2126| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2126| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2126| 
        ; call occurs [#_scia_getparam] ; [] |2126| 
        MOVL      XAR0,#86              ; [CPU_] |2126| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2126| 
	.dwpsn	file "../Source/prod.c",line 2127,column 6,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_atoi")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2127| 
        ; call occurs [#_atoi] ; [] |2127| 
        MOVL      XAR0,#86              ; [CPU_] |2127| 
        MOV       *-SP[57],AL           ; [CPU_] |2127| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2127| 
	.dwpsn	file "../Source/prod.c",line 2128,column 6,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2128| 
        ; call occurs [#_scia_puts] ; [] |2128| 
        MOV       AL,*-SP[57]           ; [CPU_] |2128| 
	.dwpsn	file "../Source/prod.c",line 2132,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2132| 
        CMPB      AL,#20                ; [CPU_] |2132| 
        B         $C$L413,HIS           ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
	.dwpsn	file "../Source/prod.c",line 2136,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2136| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_puts")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2136| 
        ; call occurs [#_scia_puts] ; [] |2136| 
	.dwpsn	file "../Source/prod.c",line 2137,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2137| 
	.dwpsn	file "../Source/prod.c",line 2139,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2139| 
        CMPB      AL,#66                ; [CPU_] |2139| 
        B         $C$L408,EQ            ; [CPU_] |2139| 
        ; branchcc occurs ; [] |2139| 
        CMPB      AL,#68                ; [CPU_] |2139| 
        B         $C$L407,EQ            ; [CPU_] |2139| 
        ; branchcc occurs ; [] |2139| 
        CMPB      AL,#78                ; [CPU_] |2139| 
        B         $C$L403,EQ            ; [CPU_] |2139| 
        ; branchcc occurs ; [] |2139| 
        CMPB      AL,#85                ; [CPU_] |2139| 
        B         $C$L625,NEQ           ; [CPU_] |2139| 
        ; branchcc occurs ; [] |2139| 
	.dwpsn	file "../Source/prod.c",line 2168,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2168| 
	.dwpsn	file "../Source/prod.c",line 2166,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2166| 
        MOV       AH,#0                 ; [CPU_] |2166| 
	.dwpsn	file "../Source/prod.c",line 2168,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2168| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2168| 
	.dwpsn	file "../Source/prod.c",line 2166,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2166| 
	.dwpsn	file "../Source/prod.c",line 2168,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2168| 
        MPYU      ACC,T,AL              ; [CPU_] |2168| 
        ADDL      ACC,XAR6              ; [CPU_] |2168| 
        ADDB      ACC,#124              ; [CPU_] |2168| 
        MOVL      XAR1,ACC              ; [CPU_] |2168| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2168| 
        CMPB      AL,#35                ; [CPU_] |2168| 
        B         $C$L354,GT            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        CMPB      AL,#35                ; [CPU_] |2168| 
        B         $C$L370,EQ            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        CMPB      AL,#16                ; [CPU_] |2168| 
        B         $C$L390,EQ            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        CMPB      AL,#17                ; [CPU_] |2168| 
        B         $C$L386,EQ            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        CMPB      AL,#34                ; [CPU_] |2168| 
        B         $C$L377,EQ            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        B         $C$L394,UNC           ; [CPU_] |2168| 
        ; branch occurs ; [] |2168| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2168| 
        B         $C$L363,EQ            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        CMPB      AL,#53                ; [CPU_] |2168| 
        B         $C$L359,EQ            ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
        CMPB      AL,#70                ; [CPU_] |2168| 
        B         $C$L394,NEQ           ; [CPU_] |2168| 
        ; branchcc occurs ; [] |2168| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2357,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2357| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2357| 
        MOV       AL,#1024              ; [CPU_] |2357| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2357| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2357| 
        ; call occurs [#_scia_getparam] ; [] |2357| 
        MOVL      XAR0,#86              ; [CPU_] |2357| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2357| 
	.dwpsn	file "../Source/prod.c",line 2359,column 8,is_stmt,isa 0
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_atoi")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2359| 
        ; call occurs [#_atoi] ; [] |2359| 
        MOVL      XAR0,#86              ; [CPU_] |2359| 
        MOV       *-SP[47],AL           ; [CPU_] |2359| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2359| 
	.dwpsn	file "../Source/prod.c",line 2360,column 8,is_stmt,isa 0
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2360| 
        ; call occurs [#_scia_puts] ; [] |2360| 
        MOV       AL,*-SP[47]           ; [CPU_] |2360| 
	.dwpsn	file "../Source/prod.c",line 2361,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2361| 
        B         $C$L356,EQ            ; [CPU_] |2361| 
        ; branchcc occurs ; [] |2361| 
        CMPB      AL,#7                 ; [CPU_] |2361| 
        B         $C$L357,EQ            ; [CPU_] |2361| 
        ; branchcc occurs ; [] |2361| 
	.dwpsn	file "../Source/prod.c",line 2362,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2362| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_puts")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2362| 
        ; call occurs [#_scia_puts] ; [] |2362| 
$C$L356:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2364,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2364| 
        B         $C$L357,EQ            ; [CPU_] |2364| 
        ; branchcc occurs ; [] |2364| 
        CMPB      AL,#7                 ; [CPU_] |2364| 
        B         $C$L355,NEQ           ; [CPU_] |2364| 
        ; branchcc occurs ; [] |2364| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2365,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2365| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_puts")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2365| 
        ; call occurs [#_scia_puts] ; [] |2365| 
        MOV       AL,*-SP[47]           ; [CPU_] |2365| 
	.dwpsn	file "../Source/prod.c",line 2367,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2367| 
        B         $C$L358,EQ            ; [CPU_] |2367| 
        ; branchcc occurs ; [] |2367| 
        CMPB      AL,#7                 ; [CPU_] |2367| 
        B         $C$L393,EQ            ; [CPU_] |2367| 
        ; branchcc occurs ; [] |2367| 
        B         $C$L394,UNC           ; [CPU_] |2367| 
        ; branch occurs ; [] |2367| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2369,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2369| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2369| 
        MOV       AL,*-SP[47]           ; [CPU_] |2369| 
	.dwpsn	file "../Source/prod.c",line 2370,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2370| 
	.dwpsn	file "../Source/prod.c",line 2371,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2371| 
        ; branch occurs ; [] |2371| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2332,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2332| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2332| 
        MOV       AL,#1024              ; [CPU_] |2332| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2332| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2332| 
        ; call occurs [#_scia_getparam] ; [] |2332| 
        MOVL      XAR0,#86              ; [CPU_] |2332| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2332| 
	.dwpsn	file "../Source/prod.c",line 2334,column 8,is_stmt,isa 0
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_atoi")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2334| 
        ; call occurs [#_atoi] ; [] |2334| 
        MOVL      XAR0,#86              ; [CPU_] |2334| 
        MOV       *-SP[47],AL           ; [CPU_] |2334| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2334| 
	.dwpsn	file "../Source/prod.c",line 2335,column 8,is_stmt,isa 0
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_puts")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2335| 
        ; call occurs [#_scia_puts] ; [] |2335| 
        MOV       AL,*-SP[47]           ; [CPU_] |2335| 
	.dwpsn	file "../Source/prod.c",line 2336,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2336| 
        B         $C$L360,EQ            ; [CPU_] |2336| 
        ; branchcc occurs ; [] |2336| 
        CMPB      AL,#7                 ; [CPU_] |2336| 
        B         $C$L361,EQ            ; [CPU_] |2336| 
        ; branchcc occurs ; [] |2336| 
	.dwpsn	file "../Source/prod.c",line 2337,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2337| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2337| 
        ; call occurs [#_scia_puts] ; [] |2337| 
$C$L360:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2339,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2339| 
        B         $C$L361,EQ            ; [CPU_] |2339| 
        ; branchcc occurs ; [] |2339| 
        CMPB      AL,#7                 ; [CPU_] |2339| 
        B         $C$L359,NEQ           ; [CPU_] |2339| 
        ; branchcc occurs ; [] |2339| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2340,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2340| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_puts")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2340| 
        ; call occurs [#_scia_puts] ; [] |2340| 
        MOV       AL,*-SP[47]           ; [CPU_] |2340| 
	.dwpsn	file "../Source/prod.c",line 2342,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2342| 
        B         $C$L362,EQ            ; [CPU_] |2342| 
        ; branchcc occurs ; [] |2342| 
        CMPB      AL,#7                 ; [CPU_] |2342| 
        B         $C$L393,EQ            ; [CPU_] |2342| 
        ; branchcc occurs ; [] |2342| 
        B         $C$L394,UNC           ; [CPU_] |2342| 
        ; branch occurs ; [] |2342| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2344,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2344| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2344| 
        MOV       AL,*-SP[47]           ; [CPU_] |2344| 
	.dwpsn	file "../Source/prod.c",line 2345,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2345| 
	.dwpsn	file "../Source/prod.c",line 2346,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2346| 
        ; branch occurs ; [] |2346| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2298,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2298| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2298| 
        MOV       AL,#1024              ; [CPU_] |2298| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2298| 
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2298| 
        ; call occurs [#_scia_getparam] ; [] |2298| 
        MOVL      XAR0,#86              ; [CPU_] |2298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2298| 
	.dwpsn	file "../Source/prod.c",line 2301,column 8,is_stmt,isa 0
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_atoi")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2301| 
        ; call occurs [#_atoi] ; [] |2301| 
        MOVL      XAR0,#86              ; [CPU_] |2301| 
        MOV       *-SP[47],AL           ; [CPU_] |2301| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2301| 
	.dwpsn	file "../Source/prod.c",line 2302,column 8,is_stmt,isa 0
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2302| 
        ; call occurs [#_scia_puts] ; [] |2302| 
        MOV       AL,*-SP[47]           ; [CPU_] |2302| 
	.dwpsn	file "../Source/prod.c",line 2303,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2303| 
        B         $C$L364,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
        CMPB      AL,#3                 ; [CPU_] |2303| 
        B         $C$L365,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
        CMPB      AL,#4                 ; [CPU_] |2303| 
        B         $C$L366,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
        CMPB      AL,#7                 ; [CPU_] |2303| 
        B         $C$L367,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
	.dwpsn	file "../Source/prod.c",line 2304,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2304| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2304| 
        ; call occurs [#_scia_puts] ; [] |2304| 
$C$L364:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2306,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2306| 
        B         $C$L367,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2306| 
        B         $C$L367,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2306| 
        B         $C$L367,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        CMPB      AL,#7                 ; [CPU_] |2306| 
        B         $C$L363,NEQ           ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2307,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2307| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_puts")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2307| 
        ; call occurs [#_scia_puts] ; [] |2307| 
        MOV       AL,*-SP[47]           ; [CPU_] |2307| 
	.dwpsn	file "../Source/prod.c",line 2309,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2309| 
        B         $C$L369,EQ            ; [CPU_] |2309| 
        ; branchcc occurs ; [] |2309| 
        CMPB      AL,#3                 ; [CPU_] |2309| 
        B         $C$L368,EQ            ; [CPU_] |2309| 
        ; branchcc occurs ; [] |2309| 
        CMPB      AL,#4                 ; [CPU_] |2309| 
        B         $C$L385,EQ            ; [CPU_] |2309| 
        ; branchcc occurs ; [] |2309| 
        CMPB      AL,#7                 ; [CPU_] |2309| 
        B         $C$L393,EQ            ; [CPU_] |2309| 
        ; branchcc occurs ; [] |2309| 
        B         $C$L394,UNC           ; [CPU_] |2309| 
        ; branch occurs ; [] |2309| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2315,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2315| 
        MOV       AH,#15820             ; [CPU_] |2315| 
	.dwpsn	file "../Source/prod.c",line 2317,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2317| 
        ; branch occurs ; [] |2317| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2311,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2311| 
        MOV       AH,#15649             ; [CPU_] |2311| 
	.dwpsn	file "../Source/prod.c",line 2313,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2313| 
        ; branch occurs ; [] |2313| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2264| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2264| 
        MOV       AL,#1024              ; [CPU_] |2264| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2264| 
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2264| 
        ; call occurs [#_scia_getparam] ; [] |2264| 
        MOVL      XAR0,#86              ; [CPU_] |2264| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2264| 
	.dwpsn	file "../Source/prod.c",line 2267,column 8,is_stmt,isa 0
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_atoi")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2267| 
        ; call occurs [#_atoi] ; [] |2267| 
        MOVL      XAR0,#86              ; [CPU_] |2267| 
        MOV       *-SP[47],AL           ; [CPU_] |2267| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2267| 
	.dwpsn	file "../Source/prod.c",line 2268,column 8,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_puts")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2268| 
        ; call occurs [#_scia_puts] ; [] |2268| 
        MOV       AL,*-SP[47]           ; [CPU_] |2268| 
	.dwpsn	file "../Source/prod.c",line 2269,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2269| 
        B         $C$L371,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
        CMPB      AL,#3                 ; [CPU_] |2269| 
        B         $C$L372,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
        CMPB      AL,#4                 ; [CPU_] |2269| 
        B         $C$L373,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
        CMPB      AL,#7                 ; [CPU_] |2269| 
        B         $C$L374,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
	.dwpsn	file "../Source/prod.c",line 2270,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2270| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2270| 
        ; call occurs [#_scia_puts] ; [] |2270| 
$C$L371:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2272,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2272| 
        B         $C$L374,EQ            ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2272| 
        B         $C$L374,EQ            ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2272| 
        B         $C$L374,EQ            ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
        CMPB      AL,#7                 ; [CPU_] |2272| 
        B         $C$L370,NEQ           ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2273,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2273| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2273| 
        ; call occurs [#_scia_puts] ; [] |2273| 
        MOV       AL,*-SP[47]           ; [CPU_] |2273| 
	.dwpsn	file "../Source/prod.c",line 2275,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2275| 
        B         $C$L376,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        CMPB      AL,#3                 ; [CPU_] |2275| 
        B         $C$L385,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        CMPB      AL,#4                 ; [CPU_] |2275| 
        B         $C$L375,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        CMPB      AL,#7                 ; [CPU_] |2275| 
        B         $C$L393,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        B         $C$L394,UNC           ; [CPU_] |2275| 
        ; branch occurs ; [] |2275| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2285,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2285| 
        MOV       AH,#16672             ; [CPU_] |2285| 
	.dwpsn	file "../Source/prod.c",line 2287,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2287| 
        ; branch occurs ; [] |2287| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2277| 
        MOV       AH,#16073             ; [CPU_] |2277| 
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2279| 
        ; branch occurs ; [] |2279| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2230,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2230| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2230| 
        MOV       AL,#1024              ; [CPU_] |2230| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2230| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2230| 
        ; call occurs [#_scia_getparam] ; [] |2230| 
        MOVL      XAR0,#86              ; [CPU_] |2230| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2230| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_atoi")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2233| 
        ; call occurs [#_atoi] ; [] |2233| 
        MOVL      XAR0,#86              ; [CPU_] |2233| 
        MOV       *-SP[47],AL           ; [CPU_] |2233| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2233| 
	.dwpsn	file "../Source/prod.c",line 2234,column 8,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2234| 
        ; call occurs [#_scia_puts] ; [] |2234| 
        MOV       AL,*-SP[47]           ; [CPU_] |2234| 
	.dwpsn	file "../Source/prod.c",line 2235,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2235| 
        B         $C$L378,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#3                 ; [CPU_] |2235| 
        B         $C$L379,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#4                 ; [CPU_] |2235| 
        B         $C$L380,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#7                 ; [CPU_] |2235| 
        B         $C$L381,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
	.dwpsn	file "../Source/prod.c",line 2236,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2236| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_puts")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2236| 
        ; call occurs [#_scia_puts] ; [] |2236| 
$C$L378:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2238,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2238| 
        B         $C$L381,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2238| 
        B         $C$L381,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2238| 
        B         $C$L381,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        CMPB      AL,#7                 ; [CPU_] |2238| 
        B         $C$L377,NEQ           ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2239,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2239| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2239| 
        ; call occurs [#_scia_puts] ; [] |2239| 
        MOV       AL,*-SP[47]           ; [CPU_] |2239| 
	.dwpsn	file "../Source/prod.c",line 2241,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2241| 
        B         $C$L385,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#3                 ; [CPU_] |2241| 
        B         $C$L384,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#4                 ; [CPU_] |2241| 
        B         $C$L382,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#7                 ; [CPU_] |2241| 
        B         $C$L393,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        B         $C$L394,UNC           ; [CPU_] |2241| 
        ; branch occurs ; [] |2241| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2251,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2251| 
        MOV       AH,#16843             ; [CPU_] |2251| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2251| 
        MOV       AL,*-SP[47]           ; [CPU_] |2251| 
	.dwpsn	file "../Source/prod.c",line 2252,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2252| 
	.dwpsn	file "../Source/prod.c",line 2253,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2253| 
        ; branch occurs ; [] |2253| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2247,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2247| 
        MOV       AH,#16418             ; [CPU_] |2247| 
	.dwpsn	file "../Source/prod.c",line 2249,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2249| 
        ; branch occurs ; [] |2249| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2243,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2243| 
	.dwpsn	file "../Source/prod.c",line 2245,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2245| 
        ; branch occurs ; [] |2245| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2201,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2201| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2201| 
        MOV       AL,#1024              ; [CPU_] |2201| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2201| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2201| 
        ; call occurs [#_scia_getparam] ; [] |2201| 
        MOVL      XAR0,#86              ; [CPU_] |2201| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2201| 
	.dwpsn	file "../Source/prod.c",line 2203,column 8,is_stmt,isa 0
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_atoi")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2203| 
        ; call occurs [#_atoi] ; [] |2203| 
        MOVL      XAR0,#86              ; [CPU_] |2203| 
        MOV       *-SP[47],AL           ; [CPU_] |2203| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2203| 
	.dwpsn	file "../Source/prod.c",line 2204,column 8,is_stmt,isa 0
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2204| 
        ; call occurs [#_scia_puts] ; [] |2204| 
        MOV       AL,*-SP[47]           ; [CPU_] |2204| 
	.dwpsn	file "../Source/prod.c",line 2205,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2205| 
        B         $C$L388,EQ            ; [CPU_] |2205| 
        ; branchcc occurs ; [] |2205| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2205| 
        B         $C$L387,EQ            ; [CPU_] |2205| 
        ; branchcc occurs ; [] |2205| 
	.dwpsn	file "../Source/prod.c",line 2206,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2206| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_puts")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2206| 
        ; call occurs [#_scia_puts] ; [] |2206| 
$C$L387:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2208,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2208| 
        B         $C$L388,EQ            ; [CPU_] |2208| 
        ; branchcc occurs ; [] |2208| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2208| 
        B         $C$L386,NEQ           ; [CPU_] |2208| 
        ; branchcc occurs ; [] |2208| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2209,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2209| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2209| 
        ; call occurs [#_scia_puts] ; [] |2209| 
        MOV       AL,*-SP[47]           ; [CPU_] |2209| 
	.dwpsn	file "../Source/prod.c",line 2211,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2211| 
        ; branchcc occurs ; [] |2211| 
        CMPB      AL,#1                 ; [CPU_] |2211| 
        B         $C$L396,EQ            ; [CPU_] |2211| 
        ; branchcc occurs ; [] |2211| 
        CMPB      AL,#7                 ; [CPU_] |2211| 
        B         $C$L393,EQ            ; [CPU_] |2211| 
        ; branchcc occurs ; [] |2211| 
        B         $C$L394,UNC           ; [CPU_] |2211| 
        ; branch occurs ; [] |2211| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2213,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2213| 
        MOV       AH,#16397             ; [CPU_] |2213| 
	.dwpsn	file "../Source/prod.c",line 2215,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2215| 
        ; branch occurs ; [] |2215| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2172,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2172| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2172| 
        MOV       AL,#1024              ; [CPU_] |2172| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2172| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2172| 
        ; call occurs [#_scia_getparam] ; [] |2172| 
        MOVL      XAR0,#86              ; [CPU_] |2172| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2172| 
	.dwpsn	file "../Source/prod.c",line 2174,column 8,is_stmt,isa 0
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_atoi")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2174| 
        ; call occurs [#_atoi] ; [] |2174| 
        MOVL      XAR0,#86              ; [CPU_] |2174| 
        MOV       *-SP[47],AL           ; [CPU_] |2174| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2174| 
	.dwpsn	file "../Source/prod.c",line 2175,column 8,is_stmt,isa 0
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_puts")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2175| 
        ; call occurs [#_scia_puts] ; [] |2175| 
        MOV       AL,*-SP[47]           ; [CPU_] |2175| 
	.dwpsn	file "../Source/prod.c",line 2176,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2176| 
        B         $C$L392,EQ            ; [CPU_] |2176| 
        ; branchcc occurs ; [] |2176| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2176| 
        B         $C$L391,EQ            ; [CPU_] |2176| 
        ; branchcc occurs ; [] |2176| 
	.dwpsn	file "../Source/prod.c",line 2177,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2177| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2177| 
        ; call occurs [#_scia_puts] ; [] |2177| 
$C$L391:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2179,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2179| 
        B         $C$L392,EQ            ; [CPU_] |2179| 
        ; branchcc occurs ; [] |2179| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2179| 
        B         $C$L390,NEQ           ; [CPU_] |2179| 
        ; branchcc occurs ; [] |2179| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2180,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2180| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2180| 
        ; call occurs [#_scia_puts] ; [] |2180| 
        MOV       AL,*-SP[47]           ; [CPU_] |2180| 
	.dwpsn	file "../Source/prod.c",line 2182,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2182| 
        ; branchcc occurs ; [] |2182| 
        CMPB      AL,#1                 ; [CPU_] |2182| 
        B         $C$L395,EQ            ; [CPU_] |2182| 
        ; branchcc occurs ; [] |2182| 
        CMPB      AL,#7                 ; [CPU_] |2182| 
        B         $C$L394,NEQ           ; [CPU_] |2182| 
        ; branchcc occurs ; [] |2182| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2192,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2192| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2192| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2192| 
        MOV       AL,#0                 ; [CPU_] |2192| 
        MOV       AH,#17096             ; [CPU_] |2192| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2192| 
        ; call occurs [#FS$$DIV] ; [] |2192| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2192| 
        MOV       AL,*-SP[47]           ; [CPU_] |2192| 
	.dwpsn	file "../Source/prod.c",line 2193,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2193| 
        MOV       *-SP[47],AL           ; [CPU_] |2193| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2383,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2383| 
        MOV       AH,#0                 ; [CPU_] |2383| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2383| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2383| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2383| 
        ; call occurs [#FS$$CMP] ; [] |2383| 
        CMPB      AL,#0                 ; [CPU_] |2383| 
        B         $C$L399,NEQ           ; [CPU_] |2383| 
        ; branchcc occurs ; [] |2383| 
	.dwpsn	file "../Source/prod.c",line 2384,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2384| 
	.dwpsn	file "../Source/prod.c",line 2385,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2385| 
        ; branch occurs ; [] |2385| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2188,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2188| 
        MOV       AH,#16104             ; [CPU_] |2188| 
	.dwpsn	file "../Source/prod.c",line 2190,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2190| 
        ; branch occurs ; [] |2190| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2184,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2184| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2184| 
        MOV       AL,*-SP[47]           ; [CPU_] |2184| 
	.dwpsn	file "../Source/prod.c",line 2185,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2185| 
$C$L398:    
        MOV       *-SP[47],AL           ; [CPU_] |2185| 
$C$L399:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2388,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2388| 
        B         $C$L402,EQ            ; [CPU_] |2388| 
        ; branchcc occurs ; [] |2388| 
	.dwpsn	file "../Source/prod.c",line 2394,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2394| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2398| 
	.dwpsn	file "../Source/prod.c",line 2395,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2395| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2398| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2395,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2395| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2398| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2398| 
        ADD       AL,*-SP[57]           ; [CPU_] |2398| 
        MOV       *-SP[3],AL            ; [CPU_] |2398| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2398| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2398| 
        ANDB      AL,#0x0f              ; [CPU_] |2398| 
        MOV       ACC,AL << 1           ; [CPU_] |2398| 
        ADDL      ACC,XAR6              ; [CPU_] |2398| 
        MOVL      XAR4,ACC              ; [CPU_] |2398| 
        MOVL      XAR0,#44              ; [CPU_] |2398| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2398| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2398| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2398| 
        MOVL      XAR4,XAR1             ; [CPU_] |2398| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_sprintf")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2398| 
        ; call occurs [#_sprintf] ; [] |2398| 
        MOVL      XAR4,XAR1             ; [CPU_] |2398| 
	.dwpsn	file "../Source/prod.c",line 2400,column 6,is_stmt,isa 0
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2400| 
        ; call occurs [#_scia_puts] ; [] |2400| 
        MOVL      XAR0,#40              ; [CPU_] |2400| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2400| 
	.dwpsn	file "../Source/prod.c",line 2402,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2402| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2396| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2403,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2403| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2403| 
        CMPL      ACC,XAR6              ; [CPU_] |2403| 
        B         $C$L401,NEQ           ; [CPU_] |2403| 
        ; branchcc occurs ; [] |2403| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2404,column 8,is_stmt,isa 0
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_update_units")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2404| 
        ; call occurs [#_update_units] ; [] |2404| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2406,column 8,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2406| 
        ; call occurs [#_ad7738_setcal] ; [] |2406| 
        MOVL      XAR0,#78              ; [CPU_] |2406| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2406| 
	.dwpsn	file "../Source/prod.c",line 2407,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2407| 
        MOVL      XAR4,ACC              ; [CPU_] |2407| 
        MOVL      XAR0,#88              ; [CPU_] |2407| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2407| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2407| 
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2407| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2407| 
        MOVL      XAR0,#88              ; [CPU_] |2407| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2407| 
	.dwpsn	file "../Source/prod.c",line 2408,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2408| 
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2408| 
        ; call occurs [#_ad7738_resetvall] ; [] |2408| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2402,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2402| 
        ADDB      XAR1,#10              ; [CPU_] |2402| 
        MOV       AL,*-SP[58]           ; [CPU_] |2402| 
        CMPB      AL,#4                 ; [CPU_] |2402| 
        B         $C$L400,LO            ; [CPU_] |2402| 
        ; branchcc occurs ; [] |2402| 
        B         $C$L632,UNC           ; [CPU_] |2402| 
        ; branch occurs ; [] |2402| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2389,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2389| 
	.dwpsn	file "../Source/prod.c",line 2391,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2391| 
        ; branch occurs ; [] |2391| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2145,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2145| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2145| 
        MOVL      XAR0,#44              ; [CPU_] |2145| 
        ADD       AL,*-SP[57]           ; [CPU_] |2145| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2145| 
        MOV       *-SP[3],AL            ; [CPU_] |2145| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2145| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2145| 
        MOV       *-SP[47],AL           ; [CPU_] |2145| 
        MOVL      XAR4,XAR1             ; [CPU_] |2145| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_sprintf")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2145| 
        ; call occurs [#_sprintf] ; [] |2145| 
	.dwpsn	file "../Source/prod.c",line 2147,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2147| 
        MOV       AL,#1024              ; [CPU_] |2147| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2147| 
	.dwpsn	file "../Source/prod.c",line 2145,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2145| 
	.dwpsn	file "../Source/prod.c",line 2147,column 6,is_stmt,isa 0
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2147| 
        ; call occurs [#_scia_getparam] ; [] |2147| 
        MOVZ      AR6,AL                ; [CPU_] |2147| 
        CMPB      AL,#15                ; [CPU_] |2147| 
        B         $C$L404,LOS           ; [CPU_] |2147| 
        ; branchcc occurs ; [] |2147| 
	.dwpsn	file "../Source/prod.c",line 2151,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2151| 
        MOVB      XAR0,#15              ; [CPU_] |2151| 
	.dwpsn	file "../Source/prod.c",line 2150,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2150| 
	.dwpsn	file "../Source/prod.c",line 2151,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2151| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2153,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2153| 
        MOVB      AL,#152               ; [CPU_] |2153| 
        MOV       T,*-SP[57]            ; [CPU_] |2153| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2153| 
        MOVL      XAR0,#86              ; [CPU_] |2153| 
        MPYU      ACC,T,AL              ; [CPU_] |2153| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2153| 
        ADDL      ACC,XAR7              ; [CPU_] |2153| 
        ADDB      ACC,#98               ; [CPU_] |2153| 
        MOVL      XAR1,ACC              ; [CPU_] |2153| 
        MOVL      XAR4,ACC              ; [CPU_] |2153| 
        MOVB      AH,#1                 ; [CPU_] |2153| 
        ADD       AH,AR6                ; [CPU_] |2153| 
        MOVU      ACC,AH                ; [CPU_] |2153| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_memcpy")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2153| 
        ; call occurs [#_memcpy] ; [] |2153| 
        MOVL      XAR0,#86              ; [CPU_] |2153| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2153| 
	.dwpsn	file "../Source/prod.c",line 2155,column 6,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_scia_puts")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2155| 
        ; call occurs [#_scia_puts] ; [] |2155| 
	.dwpsn	file "../Source/prod.c",line 2156,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2156| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_puts")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2156| 
        ; call occurs [#_scia_puts] ; [] |2156| 
	.dwpsn	file "../Source/prod.c",line 2159,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2159| 
        MOV       AL,*-SP[47]           ; [CPU_] |2159| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2159| 
        MOV       *-SP[3],AL            ; [CPU_] |2159| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2159| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2159| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2159| 
        MOVL      XAR4,XAR1             ; [CPU_] |2159| 
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_sprintf")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2159| 
        ; call occurs [#_sprintf] ; [] |2159| 
        MOVL      XAR4,XAR1             ; [CPU_] |2159| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2161,column 6,is_stmt,isa 0
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2161| 
        ; call occurs [#_scia_puts] ; [] |2161| 
	.dwpsn	file "../Source/prod.c",line 2162,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2162| 
        ; branch occurs ; [] |2162| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2456,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2456| 
        MOVB      AL,#152               ; [CPU_] |2456| 
        MOV       T,*-SP[57]            ; [CPU_] |2456| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2456| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2456| 
        MPYU      ACC,T,AL              ; [CPU_] |2456| 
        MOVB      XAR0,#124             ; [CPU_] |2456| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2456| 
        ADDL      ACC,XAR6              ; [CPU_] |2456| 
        MOVL      XAR1,ACC              ; [CPU_] |2456| 
        MOVB      AL,#1                 ; [CPU_] |2456| 
        ADD       AL,*-SP[57]           ; [CPU_] |2456| 
        MOV       *-SP[47],AL           ; [CPU_] |2456| 
        MOV       *-SP[3],AL            ; [CPU_] |2456| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2456| 
        MOVL      XAR0,#70              ; [CPU_] |2456| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2456| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2456| 
        MOV       ACC,AL << 1           ; [CPU_] |2456| 
        ADDL      ACC,XAR6              ; [CPU_] |2456| 
        MOVL      XAR4,ACC              ; [CPU_] |2456| 
        MOVL      XAR0,#44              ; [CPU_] |2456| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2456| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2456| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2456| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_sprintf")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2456| 
        ; call occurs [#_sprintf] ; [] |2456| 
        MOVL      XAR0,#44              ; [CPU_] |2456| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2458| 
	.dwpsn	file "../Source/prod.c",line 2456,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2456| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2458| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2458| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2458| 
        ; call occurs [#_scia_getparam] ; [] |2458| 
        MOVL      XAR0,#86              ; [CPU_] |2458| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2458| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_strtod")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2459,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2459| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2459| 
        MOVL      XAR0,#86              ; [CPU_] |2459| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2459| 
	.dwpsn	file "../Source/prod.c",line 2460,column 6,is_stmt,isa 0
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_scia_puts")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2460| 
        ; call occurs [#_scia_puts] ; [] |2460| 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2461| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_puts")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2461| 
        ; call occurs [#_scia_puts] ; [] |2461| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2463| 
        MOVL      XAR0,#44              ; [CPU_] |2463| 
        MOV       AL,*-SP[47]           ; [CPU_] |2463| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2463| 
        MOV       *-SP[3],AL            ; [CPU_] |2463| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2463| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_sprintf")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2463| 
        ; call occurs [#_sprintf] ; [] |2463| 
        MOVL      XAR0,#44              ; [CPU_] |2463| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2464| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2463| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2464| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2464| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2464| 
        ; call occurs [#_scia_getparam] ; [] |2464| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_strtod")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2465| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2465| 
        MOVL      XAR0,#86              ; [CPU_] |2465| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2466,column 6,is_stmt,isa 0
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_scia_puts")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2466| 
        ; call occurs [#_scia_puts] ; [] |2466| 
	.dwpsn	file "../Source/prod.c",line 2467,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2467| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2467| 
        ; call occurs [#_scia_puts] ; [] |2467| 
	.dwpsn	file "../Source/prod.c",line 2470,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2470| 
        MOVB      XAR0,#228             ; [CPU_] |2470| 
        MOV       AL,*-SP[47]           ; [CPU_] |2470| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2470| 
        MOV       *-SP[3],AL            ; [CPU_] |2470| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2470| 
        MOVB      XAR0,#230             ; [CPU_] |2470| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2470| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2470| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2470| 
	.dwpsn	file "../Source/prod.c",line 2479,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2479| 
        ; branch occurs ; [] |2479| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2419,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2419| 
        MOV       AL,*-SP[47]           ; [CPU_] |2419| 
        MOVL      XAR0,#44              ; [CPU_] |2419| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2419| 
        MOV       *-SP[3],AL            ; [CPU_] |2419| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2419| 
        MOVL      XAR4,XAR1             ; [CPU_] |2419| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_sprintf")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2419| 
        ; call occurs [#_sprintf] ; [] |2419| 
	.dwpsn	file "../Source/prod.c",line 2420,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2420| 
	.dwpsn	file "../Source/prod.c",line 2419,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2419| 
	.dwpsn	file "../Source/prod.c",line 2420,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2420| 
        MOV       AL,#1024              ; [CPU_] |2420| 
        MOVL      XAR5,XAR1             ; [CPU_] |2420| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2420| 
        ; call occurs [#_scia_getparam] ; [] |2420| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_strtod")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2422,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2422| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2422| 
        ; call occurs [#_scia_puts] ; [] |2422| 
	.dwpsn	file "../Source/prod.c",line 2424,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2424| 
        MOV       AH,#0                 ; [CPU_] |2424| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2424| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2424| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2424| 
        ; call occurs [#FS$$CMP] ; [] |2424| 
        CMPB      AL,#0                 ; [CPU_] |2424| 
        B         $C$L412,EQ            ; [CPU_] |2424| 
        ; branchcc occurs ; [] |2424| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2428| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_scia_puts")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2428| 
        ; call occurs [#_scia_puts] ; [] |2428| 
	.dwpsn	file "../Source/prod.c",line 2429,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2429| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2429| 
        MOVB      AL,#152               ; [CPU_] |2429| 
        MOV       T,*-SP[57]            ; [CPU_] |2429| 
        MPYU      ACC,T,AL              ; [CPU_] |2429| 
        ADDL      ACC,XAR6              ; [CPU_] |2429| 
        MOVL      XAR1,ACC              ; [CPU_] |2429| 
        MOVB      XAR0,#224             ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2432,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2432| 
	.dwpsn	file "../Source/prod.c",line 2429,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2429| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2432,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2432| 
        MOV       AL,*-SP[47]           ; [CPU_] |2432| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2432| 
        MOV       *-SP[3],AL            ; [CPU_] |2432| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2432| 
        MOVL      XAR0,#44              ; [CPU_] |2432| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2432| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2432| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_sprintf")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2432| 
        ; call occurs [#_sprintf] ; [] |2432| 
        MOVL      XAR0,#44              ; [CPU_] |2432| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2432| 
	.dwpsn	file "../Source/prod.c",line 2434,column 6,is_stmt,isa 0
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_scia_puts")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2434| 
        ; call occurs [#_scia_puts] ; [] |2434| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2430| 
	.dwpsn	file "../Source/prod.c",line 2436,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2436| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2436| 
        CMPB      AL,#247               ; [CPU_] |2436| 
        B         $C$L632,NEQ           ; [CPU_] |2436| 
        ; branchcc occurs ; [] |2436| 
	.dwpsn	file "../Source/prod.c",line 2438,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2438| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2438| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2438| 
        MOV       AL,#0                 ; [CPU_] |2438| 
        MOV       AH,#17096             ; [CPU_] |2438| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2438| 
        ; call occurs [#FS$$DIV] ; [] |2438| 
        MOVB      XAR0,#126             ; [CPU_] |2438| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2438| 
        MOVL      XAR0,#40              ; [CPU_] |2438| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2438| 
	.dwpsn	file "../Source/prod.c",line 2441,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2441| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2442,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2442| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2442| 
        CMPL      ACC,XAR6              ; [CPU_] |2442| 
        B         $C$L411,NEQ           ; [CPU_] |2442| 
        ; branchcc occurs ; [] |2442| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2445,column 9,is_stmt,isa 0
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2445| 
        ; call occurs [#_ad7738_setcal] ; [] |2445| 
        MOVL      XAR0,#78              ; [CPU_] |2445| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2445| 
	.dwpsn	file "../Source/prod.c",line 2446,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2446| 
        MOVL      XAR4,ACC              ; [CPU_] |2446| 
        MOVL      XAR0,#88              ; [CPU_] |2446| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2446| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2446| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2446| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2446| 
        MOVL      XAR0,#88              ; [CPU_] |2446| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2446| 
	.dwpsn	file "../Source/prod.c",line 2447,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2447| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2447| 
        ; call occurs [#_ad7738_resetvall] ; [] |2447| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2441,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2441| 
        ADDB      XAR1,#10              ; [CPU_] |2441| 
        MOV       AL,*-SP[58]           ; [CPU_] |2441| 
        CMPB      AL,#4                 ; [CPU_] |2441| 
        B         $C$L410,LO            ; [CPU_] |2441| 
        ; branchcc occurs ; [] |2441| 
        B         $C$L632,UNC           ; [CPU_] |2441| 
        ; branch occurs ; [] |2441| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2426,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2426| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2426| 
        ; call occurs [#_scia_puts] ; [] |2426| 
	.dwpsn	file "../Source/prod.c",line 2418,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2418| 
        ; branch occurs ; [] |2418| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2134,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2134| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_scia_puts")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2134| 
        ; call occurs [#_scia_puts] ; [] |2134| 
	.dwpsn	file "../Source/prod.c",line 2124,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2124| 
        ; branch occurs ; [] |2124| 
$C$L414:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3096,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3096| 
        B         $C$L625,LO            ; [CPU_] |3096| 
        ; branchcc occurs ; [] |3096| 
	.dwpsn	file "../Source/prod.c",line 3099,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3099| 
        CMPB      AL,#83                ; [CPU_] |3099| 
        B         $C$L415,GT            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        CMPB      AL,#83                ; [CPU_] |3099| 
        B         $C$L419,EQ            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        CMPB      AL,#73                ; [CPU_] |3099| 
        B         $C$L424,EQ            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        CMPB      AL,#76                ; [CPU_] |3099| 
        B         $C$L428,EQ            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        CMPB      AL,#80                ; [CPU_] |3099| 
        B         $C$L421,EQ            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        B         $C$L625,UNC           ; [CPU_] |3099| 
        ; branch occurs ; [] |3099| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3099| 
        B         $C$L417,EQ            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        CMPB      AL,#86                ; [CPU_] |3099| 
        B         $C$L625,NEQ           ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3127,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3127| 
        B         $C$L416,LOS           ; [CPU_] |3127| 
        ; branchcc occurs ; [] |3127| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3127,column 6,is_stmt,isa 0
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_atoi")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3127| 
        ; call occurs [#_atoi] ; [] |3127| 
        CMPB      AL,#4                 ; [CPU_] |3127| 
        B         $C$L416,GT            ; [CPU_] |3127| 
        ; branchcc occurs ; [] |3127| 
        CMPB      AL,#0                 ; [CPU_] |3127| 
        B         $C$L416,LEQ           ; [CPU_] |3127| 
        ; branchcc occurs ; [] |3127| 
	.dwpsn	file "../Source/prod.c",line 3129,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3129| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3129| 
        ADD       ACC,AR5               ; [CPU_] |3129| 
        MOVL      XAR4,ACC              ; [CPU_] |3129| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3129| 
	.dwpsn	file "../Source/prod.c",line 3130,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3130| 
        ; branch occurs ; [] |3130| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3131,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3131| 
        B         $C$L426,UNC           ; [CPU_] |3131| 
        ; branch occurs ; [] |3131| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3103,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3103| 
        B         $C$L418,LOS           ; [CPU_] |3103| 
        ; branchcc occurs ; [] |3103| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3103,column 6,is_stmt,isa 0
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_atoi")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3103| 
        ; call occurs [#_atoi] ; [] |3103| 
        CMPB      AL,#4                 ; [CPU_] |3103| 
        MOVZ      AR4,AL                ; [CPU_] |3103| 
        B         $C$L418,GT            ; [CPU_] |3103| 
        ; branchcc occurs ; [] |3103| 
        CMPB      AL,#0                 ; [CPU_] |3103| 
        B         $C$L418,LEQ           ; [CPU_] |3103| 
        ; branchcc occurs ; [] |3103| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3105,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3105| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3105| 
	.dwpsn	file "../Source/prod.c",line 3108,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3108| 
        ; branch occurs ; [] |3108| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3109,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3109| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3109| 
        ; call occurs [#_ad7738_resettare] ; [] |3109| 
	.dwpsn	file "../Source/prod.c",line 3110,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3110| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3110| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3110| 
	.dwpsn	file "../Source/prod.c",line 3111,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3111| 
        B         $C$L426,UNC           ; [CPU_] |3111| 
        ; branch occurs ; [] |3111| 
$C$L419:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3137,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3137| 
        B         $C$L420,LOS           ; [CPU_] |3137| 
        ; branchcc occurs ; [] |3137| 
        MOVL      ACC,XAR4              ; [CPU_] |3137| 
        MOVL      XAR0,#66              ; [CPU_] |3137| 
        ADDB      ACC,#2                ; [CPU_] |3137| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3137| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3137| 
        CMPB      AL,#67                ; [CPU_] |3137| 
        B         $C$L420,NEQ           ; [CPU_] |3137| 
        ; branchcc occurs ; [] |3137| 
	.dwpsn	file "../Source/prod.c",line 3138,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3138| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3138| 
        ; call occurs [#_shunt_switch] ; [] |3138| 
	.dwpsn	file "../Source/prod.c",line 3139,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3139| 
	.dwpsn	file "../Source/prod.c",line 3140,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3140| 
        ; branch occurs ; [] |3140| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3141,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3141| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3141| 
        ; call occurs [#_shunt_switch] ; [] |3141| 
	.dwpsn	file "../Source/prod.c",line 3142,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3142| 
        B         $C$L631,UNC           ; [CPU_] |3142| 
        ; branch occurs ; [] |3142| 
$C$L421:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3117,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3117| 
        B         $C$L423,LOS           ; [CPU_] |3117| 
        ; branchcc occurs ; [] |3117| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3117,column 6,is_stmt,isa 0
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_atoi")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3117| 
        ; call occurs [#_atoi] ; [] |3117| 
        CMPB      AL,#4                 ; [CPU_] |3117| 
        B         $C$L423,GT            ; [CPU_] |3117| 
        ; branchcc occurs ; [] |3117| 
        CMPB      AL,#0                 ; [CPU_] |3117| 
        B         $C$L423,LEQ           ; [CPU_] |3117| 
        ; branchcc occurs ; [] |3117| 
	.dwpsn	file "../Source/prod.c",line 3119,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3119| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3119| 
        ADD       ACC,AR5               ; [CPU_] |3119| 
        MOVL      XAR4,ACC              ; [CPU_] |3119| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3119| 
$C$L422:    
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3119| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3119| 
	.dwpsn	file "../Source/prod.c",line 3120,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3120| 
        ; branch occurs ; [] |3120| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3121,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3121| 
        B         $C$L422,UNC           ; [CPU_] |3121| 
        ; branch occurs ; [] |3121| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3156,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3156| 
        B         $C$L427,LOS           ; [CPU_] |3156| 
        ; branchcc occurs ; [] |3156| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3156,column 6,is_stmt,isa 0
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_atoi")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3156| 
        ; call occurs [#_atoi] ; [] |3156| 
        CMPB      AL,#2                 ; [CPU_] |3156| 
        B         $C$L427,GT            ; [CPU_] |3156| 
        ; branchcc occurs ; [] |3156| 
        CMPB      AL,#0                 ; [CPU_] |3156| 
        B         $C$L427,LEQ           ; [CPU_] |3156| 
        ; branchcc occurs ; [] |3156| 
	.dwpsn	file "../Source/prod.c",line 3158,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3158| 
        ADD       AR6,AL                ; [CPU_] |3158| 
        MOVL      XAR0,#78              ; [CPU_] |3158| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3158| 
        ADD       ACC,AR6               ; [CPU_] |3158| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3158| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3158| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3158| 
        ; call occurs [#_ad7738_resettare] ; [] |3158| 
	.dwpsn	file "../Source/prod.c",line 3159,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3159| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3159| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3159| 
	.dwpsn	file "../Source/prod.c",line 3160,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3160| 
$C$L426:    
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3160| 
        ; call occurs [#_ad7738_resetvall] ; [] |3160| 
	.dwpsn	file "../Source/prod.c",line 3161,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3161| 
        ; branch occurs ; [] |3161| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3162,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3162| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3162| 
        ; call occurs [#_ad7738_resettare] ; [] |3162| 
	.dwpsn	file "../Source/prod.c",line 3163,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3163| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3163| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3163| 
	.dwpsn	file "../Source/prod.c",line 3164,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3164| 
        B         $C$L426,UNC           ; [CPU_] |3164| 
        ; branch occurs ; [] |3164| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3148,column 6,is_stmt,isa 0
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_atoi")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3148| 
        ; call occurs [#_atoi] ; [] |3148| 
	.dwpsn	file "../Source/prod.c",line 3151,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3151| 
        MOV       *-SP[58],AL           ; [CPU_] |3151| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3151| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3151| 
	.dwpsn	file "../Source/prod.c",line 3152,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3152| 
        ; branch occurs ; [] |3152| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1099,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1099| 
        CMPB      AL,#76                ; [CPU_] |1099| 
        B         $C$L430,GT            ; [CPU_] |1099| 
        ; branchcc occurs ; [] |1099| 
        CMPB      AL,#76                ; [CPU_] |1099| 
        B         $C$L438,EQ            ; [CPU_] |1099| 
        ; branchcc occurs ; [] |1099| 
        CMPB      AL,#65                ; [CPU_] |1099| 
        B         $C$L431,EQ            ; [CPU_] |1099| 
        ; branchcc occurs ; [] |1099| 
        CMPB      AL,#68                ; [CPU_] |1099| 
        B         $C$L442,EQ            ; [CPU_] |1099| 
        ; branchcc occurs ; [] |1099| 
        B         $C$L625,UNC           ; [CPU_] |1099| 
        ; branch occurs ; [] |1099| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1099| 
        B         $C$L441,EQ            ; [CPU_] |1099| 
        ; branchcc occurs ; [] |1099| 
        CMPB      AL,#83                ; [CPU_] |1099| 
        B         $C$L439,EQ            ; [CPU_] |1099| 
        ; branchcc occurs ; [] |1099| 
        B         $C$L625,UNC           ; [CPU_] |1099| 
        ; branch occurs ; [] |1099| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1104,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1104| 
	.dwpsn	file "../Source/prod.c",line 1105,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1105| 
	.dwpsn	file "../Source/prod.c",line 1104,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1104| 
	.dwpsn	file "../Source/prod.c",line 1105,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1105| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1105| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1105| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1105| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1105| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1105| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1105| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1105| 
        MOVL      XAR4,XAR1             ; [CPU_] |1105| 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_sprintf")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1105| 
        ; call occurs [#_sprintf] ; [] |1105| 
	.dwpsn	file "../Source/prod.c",line 1107,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1107| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_scia_puts")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1107| 
        ; call occurs [#_scia_puts] ; [] |1107| 
	.dwpsn	file "../Source/prod.c",line 1108,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1108| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1108| 
        LSR       AL,8                  ; [CPU_] |1108| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1108| 
        MOV       *-SP[3],AL            ; [CPU_] |1108| 
        IN        AL,*(04004H)          ; [CPU_] |1108| 
        MOVL      XAR4,XAR1             ; [CPU_] |1108| 
        ANDB      AL,#0xff              ; [CPU_] |1108| 
        MOV       *-SP[4],AL            ; [CPU_] |1108| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_sprintf")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1108| 
        ; call occurs [#_sprintf] ; [] |1108| 
	.dwpsn	file "../Source/prod.c",line 1110,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1110| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_scia_puts")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1110| 
        ; call occurs [#_scia_puts] ; [] |1110| 
	.dwpsn	file "../Source/prod.c",line 1111,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1111| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1111| 
        MOVL      XAR0,#44              ; [CPU_] |1111| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1111| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1111| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1111| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_sprintf")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1111| 
        ; call occurs [#_sprintf] ; [] |1111| 
        MOVL      XAR0,#44              ; [CPU_] |1111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1111| 
	.dwpsn	file "../Source/prod.c",line 1112,column 6,is_stmt,isa 0
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_scia_puts")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1112| 
        ; call occurs [#_scia_puts] ; [] |1112| 
	.dwpsn	file "../Source/prod.c",line 1113,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1113| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1113| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1113| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1113| 
        MOVL      XAR0,#44              ; [CPU_] |1113| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1113| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1113| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_sprintf")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1113| 
        ; call occurs [#_sprintf] ; [] |1113| 
        MOVL      XAR0,#44              ; [CPU_] |1113| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1113| 
	.dwpsn	file "../Source/prod.c",line 1115,column 6,is_stmt,isa 0
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_scia_puts")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1115| 
        ; call occurs [#_scia_puts] ; [] |1115| 
	.dwpsn	file "../Source/prod.c",line 1117,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1117| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1117| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1117| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1117| 
        MOVL      XAR0,#72              ; [CPU_] |1117| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1117| 
        ADDL      ACC,XAR6              ; [CPU_] |1117| 
        MOVL      XAR4,ACC              ; [CPU_] |1117| 
        MOVL      XAR0,#44              ; [CPU_] |1117| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1117| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1117| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_sprintf")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1117| 
        ; call occurs [#_sprintf] ; [] |1117| 
        MOVL      XAR0,#44              ; [CPU_] |1117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1117| 
	.dwpsn	file "../Source/prod.c",line 1119,column 6,is_stmt,isa 0
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_scia_puts")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1119| 
        ; call occurs [#_scia_puts] ; [] |1119| 
	.dwpsn	file "../Source/prod.c",line 1120,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1120| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1120| 
        B         $C$L432,EQ            ; [CPU_] |1120| 
        ; branchcc occurs ; [] |1120| 
        MOVB      XAR0,#34              ; [CPU_] |1120| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1120| 
        CMPB      AL,#1                 ; [CPU_] |1120| 
        B         $C$L433,NEQ           ; [CPU_] |1120| 
        ; branchcc occurs ; [] |1120| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1122,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1122| 
        MOVL      XAR0,#74              ; [CPU_] |1122| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1122| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1122| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1122| 
        ADDL      ACC,XAR6              ; [CPU_] |1122| 
        MOVL      XAR4,ACC              ; [CPU_] |1122| 
        MOVL      XAR0,#44              ; [CPU_] |1122| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1122| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1122| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1122| 
        MOVL      XAR4,XAR1             ; [CPU_] |1122| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_sprintf")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1122| 
        ; call occurs [#_sprintf] ; [] |1122| 
        MOVL      XAR4,XAR1             ; [CPU_] |1122| 
	.dwpsn	file "../Source/prod.c",line 1124,column 7,is_stmt,isa 0
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_scia_puts")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1124| 
        ; call occurs [#_scia_puts] ; [] |1124| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1126,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1126| 
        B         $C$L434,NEQ           ; [CPU_] |1126| 
        ; branchcc occurs ; [] |1126| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1126| 
        B         $C$L435,UNC           ; [CPU_] |1126| 
        ; branch occurs ; [] |1126| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1126| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1126| 
        MOVL      XAR0,#44              ; [CPU_] |1126| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1126| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1126| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1126| 
        MOVL      XAR4,XAR1             ; [CPU_] |1126| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_sprintf")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1126| 
        ; call occurs [#_sprintf] ; [] |1126| 
        MOVL      XAR4,XAR1             ; [CPU_] |1126| 
	.dwpsn	file "../Source/prod.c",line 1128,column 6,is_stmt,isa 0
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_scia_puts")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1128| 
        ; call occurs [#_scia_puts] ; [] |1128| 
	.dwpsn	file "../Source/prod.c",line 1130,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1130| 
        MOVB      XAR0,#38              ; [CPU_] |1130| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1130| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1130| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1130| 
        MOVL      XAR0,#44              ; [CPU_] |1130| 
        MOV       *-SP[3],AL            ; [CPU_] |1130| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1130| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_sprintf")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1130| 
        ; call occurs [#_sprintf] ; [] |1130| 
        MOVL      XAR0,#44              ; [CPU_] |1130| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1130| 
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_scia_puts")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1132| 
        ; call occurs [#_scia_puts] ; [] |1132| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1134,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1134| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1135,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1135| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_scia_puts")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1135| 
        ; call occurs [#_scia_puts] ; [] |1135| 
        MOV       AL,*-SP[58]           ; [CPU_] |1135| 
	.dwpsn	file "../Source/prod.c",line 1136,column 7,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_print_channel")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1136| 
        ; call occurs [#_print_channel] ; [] |1136| 
	.dwpsn	file "../Source/prod.c",line 1137,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1137| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_print_sensor")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1137| 
        ; call occurs [#_print_sensor] ; [] |1137| 
	.dwpsn	file "../Source/prod.c",line 1134,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1134| 
        INC       *-SP[58]              ; [CPU_] |1134| 
        MOV       AL,*-SP[58]           ; [CPU_] |1134| 
        CMPB      AL,#4                 ; [CPU_] |1134| 
        B         $C$L436,LO            ; [CPU_] |1134| 
        ; branchcc occurs ; [] |1134| 
	.dwpsn	file "../Source/prod.c",line 1140,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1140| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_scia_puts")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1140| 
        ; call occurs [#_scia_puts] ; [] |1140| 
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1141| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1141| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1141| 
        MOVL      ACC,XAR4              ; [CPU_] |1141| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1141| 
        MOVL      XAR4,ACC              ; [CPU_] |1141| 
        MOVL      XAR0,#44              ; [CPU_] |1141| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1141| 
        MOV       *-SP[3],AL            ; [CPU_] |1141| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1141| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_sprintf")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1141| 
        ; call occurs [#_sprintf] ; [] |1141| 
        MOVL      XAR0,#44              ; [CPU_] |1141| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1141| 
	.dwpsn	file "../Source/prod.c",line 1143,column 6,is_stmt,isa 0
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_scia_puts")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1143| 
        ; call occurs [#_scia_puts] ; [] |1143| 
        MOVL      XAR0,#40              ; [CPU_] |1143| 
	.dwpsn	file "../Source/prod.c",line 1144,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1144| 
	.dwpsn	file "../Source/prod.c",line 1143,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1143| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1145,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1145| 
        MOVB      AL,#65                ; [CPU_] |1145| 
        MOVL      XAR0,#44              ; [CPU_] |1145| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1145| 
        ADD       AL,*-SP[47]           ; [CPU_] |1145| 
        MOV       *-SP[3],AL            ; [CPU_] |1145| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1145| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1145| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1145| 
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_sprintf")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1145| 
        ; call occurs [#_sprintf] ; [] |1145| 
        MOVL      XAR0,#44              ; [CPU_] |1145| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1145| 
	.dwpsn	file "../Source/prod.c",line 1147,column 7,is_stmt,isa 0
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_puts")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1147| 
        ; call occurs [#_scia_puts] ; [] |1147| 
	.dwpsn	file "../Source/prod.c",line 1144,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1144| 
	.dwpsn	file "../Source/prod.c",line 1147,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1147| 
	.dwpsn	file "../Source/prod.c",line 1144,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1144| 
        B         $C$L437,LT            ; [CPU_] |1144| 
        ; branchcc occurs ; [] |1144| 
	.dwpsn	file "../Source/prod.c",line 1149,column 6,is_stmt,isa 0
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_print_vfd")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1149| 
        ; call occurs [#_print_vfd] ; [] |1149| 
	.dwpsn	file "../Source/prod.c",line 1150,column 6,is_stmt,isa 0
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_print_dac")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1150| 
        ; call occurs [#_print_dac] ; [] |1150| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1151,column 6,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_print_limits")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1151| 
        ; call occurs [#_print_limits] ; [] |1151| 
	.dwpsn	file "../Source/prod.c",line 1152,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1152| 
        ; branch occurs ; [] |1152| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1156| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_scia_puts")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1156| 
        ; call occurs [#_scia_puts] ; [] |1156| 
	.dwpsn	file "../Source/prod.c",line 1158,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1158| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1159,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1159| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1159| 
        MOVL      XAR0,#44              ; [CPU_] |1159| 
        ADD       AL,*-SP[57]           ; [CPU_] |1159| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1159| 
        MOVZ      AR1,AL                ; [CPU_] |1159| 
        MOV       *-SP[3],AL            ; [CPU_] |1159| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1159| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_sprintf")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1159| 
        ; call occurs [#_sprintf] ; [] |1159| 
        MOVL      XAR0,#44              ; [CPU_] |1159| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1159| 
	.dwpsn	file "../Source/prod.c",line 1160,column 7,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_scia_puts")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1160| 
        ; call occurs [#_scia_puts] ; [] |1160| 
        MOV       AL,*-SP[57]           ; [CPU_] |1160| 
	.dwpsn	file "../Source/prod.c",line 1161,column 7,is_stmt,isa 0
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_print_sensor")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1161| 
        ; call occurs [#_print_sensor] ; [] |1161| 
	.dwpsn	file "../Source/prod.c",line 1158,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1158| 
        MOV       *-SP[57],AR1          ; [CPU_] |1158| 
        CMPB      AL,#20                ; [CPU_] |1158| 
        B         $C$L440,LO            ; [CPU_] |1158| 
        ; branchcc occurs ; [] |1158| 
        B         $C$L632,UNC           ; [CPU_] |1158| 
        ; branch occurs ; [] |1158| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1172,column 6,is_stmt,isa 0
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_print_dac")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1172| 
        ; call occurs [#_print_dac] ; [] |1172| 
	.dwpsn	file "../Source/prod.c",line 1173,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1173| 
        ; branch occurs ; [] |1173| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1167,column 6,is_stmt,isa 0
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_print_vfd")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1167| 
        ; call occurs [#_print_vfd] ; [] |1167| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1168| 
        ; branch occurs ; [] |1168| 
$C$L443:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2716,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2716| 
        B         $C$L625,LO            ; [CPU_] |2716| 
        ; branchcc occurs ; [] |2716| 
	.dwpsn	file "../Source/prod.c",line 2719,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2719| 
        CMPB      AL,#68                ; [CPU_] |2719| 
        B         $C$L444,EQ            ; [CPU_] |2719| 
        ; branchcc occurs ; [] |2719| 
        CMPB      AL,#83                ; [CPU_] |2719| 
        B         $C$L450,EQ            ; [CPU_] |2719| 
        ; branchcc occurs ; [] |2719| 
        B         $C$L625,UNC           ; [CPU_] |2719| 
        ; branch occurs ; [] |2719| 
$C$L444:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2837,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2837| 
        B         $C$L625,LO            ; [CPU_] |2837| 
        ; branchcc occurs ; [] |2837| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2841,column 6,is_stmt,isa 0
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_atoi")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2841| 
        ; call occurs [#_atoi] ; [] |2841| 
        MOV       *-SP[57],AL           ; [CPU_] |2841| 
	.dwpsn	file "../Source/prod.c",line 2843,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2843| 
        CMPB      AL,#4                 ; [CPU_] |2843| 
        B         $C$L625,HIS           ; [CPU_] |2843| 
        ; branchcc occurs ; [] |2843| 
	.dwpsn	file "../Source/prod.c",line 2849,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2849| 
        MOV       *-SP[57],AL           ; [CPU_] |2849| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2849| 
        MOV       T,AL                  ; [CPU_] |2849| 
        MOVB      AL,#12                ; [CPU_] |2849| 
        MPYU      ACC,T,AL              ; [CPU_] |2849| 
        ADDL      ACC,XAR6              ; [CPU_] |2849| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2849| 
        MOVL      XAR1,ACC              ; [CPU_] |2849| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2849| 
        CMPB      AL,#7                 ; [CPU_] |2849| 
        B         $C$L625,NEQ           ; [CPU_] |2849| 
        ; branchcc occurs ; [] |2849| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_strtod")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2853,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2853| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2855,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2855| 
        MOVL      ACC,XAR6              ; [CPU_] |2855| 
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2855| 
        ; call occurs [#FS$$CMP] ; [] |2855| 
        CMPB      AL,#0                 ; [CPU_] |2855| 
        B         $C$L625,LT            ; [CPU_] |2855| 
        ; branchcc occurs ; [] |2855| 
        MOV       AL,#0                 ; [CPU_] |2855| 
        MOV       AH,#16672             ; [CPU_] |2855| 
        MOVL      XAR0,#88              ; [CPU_] |2855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2855| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2855| 
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2855| 
        ; call occurs [#FS$$CMP] ; [] |2855| 
        CMPB      AL,#0                 ; [CPU_] |2855| 
        B         $C$L625,GT            ; [CPU_] |2855| 
        ; branchcc occurs ; [] |2855| 
	.dwpsn	file "../Source/prod.c",line 2861,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2861| 
        MOV       AH,#0                 ; [CPU_] |2861| 
        MOVL      XAR0,#88              ; [CPU_] |2861| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2861| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2861| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2861| 
        ; call occurs [#FS$$CMP] ; [] |2861| 
        CMPB      AL,#0                 ; [CPU_] |2861| 
        B         $C$L445,GEQ           ; [CPU_] |2861| 
        ; branchcc occurs ; [] |2861| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2861| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2861| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2861| 
        B         $C$L446,UNC           ; [CPU_] |2861| 
        ; branch occurs ; [] |2861| 
$C$L445:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2861| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2861| 
$C$L446:    
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2861| 
        ; call occurs [#FS$$MPY] ; [] |2861| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2861| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2861| 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2861| 
        ; call occurs [#FS$$ADD] ; [] |2861| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2861| 
        ; call occurs [#FS$$TOLL] ; [] |2861| 
	.dwpsn	file "../Source/prod.c",line 2868,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2868| 
	.dwpsn	file "../Source/prod.c",line 2861,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2861| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2861| 
	.dwpsn	file "../Source/prod.c",line 2868,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2868| 
        CMP64     ACC:P                 ; [CPU_] |2868| 
        B         $C$L448,LEQ           ; [CPU_] |2868| 
        ; branchcc occurs ; [] |2868| 
	.dwpsn	file "../Source/prod.c",line 2870,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2870| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2870| 
        MOV       *-SP[2],#0            ; [CPU_] |2870| 
        MOV       *-SP[1],#0            ; [CPU_] |2870| 
        MOVL      P,*-SP[32]            ; [CPU_] |2870| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2870| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$970, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2870| 
        ; call occurs [#LL$$CMP] ; [] |2870| 
        CMPB      AL,#0                 ; [CPU_] |2870| 
        B         $C$L447,GEQ           ; [CPU_] |2870| 
        ; branchcc occurs ; [] |2870| 
	.dwpsn	file "../Source/prod.c",line 2873,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2873| 
        MOV       *-SP[35],AL           ; [CPU_] |2873| 
        B         $C$L449,UNC           ; [CPU_] |2873| 
        ; branch occurs ; [] |2873| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2871| 
	.dwpsn	file "../Source/prod.c",line 2872,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2872| 
        ; branch occurs ; [] |2872| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2869,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2869| 
$C$L449:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2876,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2876| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2876| 
        ; call occurs [#_mcbsp_xmit] ; [] |2876| 
	.dwpsn	file "../Source/prod.c",line 2877,column 6,is_stmt,isa 0
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_latch_dac")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2877| 
        ; call occurs [#_latch_dac] ; [] |2877| 
	.dwpsn	file "../Source/prod.c",line 2879,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2879| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2879| 
        MOVL      XAR0,#44              ; [CPU_] |2879| 
        ADD       AL,*-SP[57]           ; [CPU_] |2879| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2879| 
        MOV       *-SP[3],AL            ; [CPU_] |2879| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2879| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2879| 
        MOV       AL,*-SP[35]           ; [CPU_] |2879| 
        MOV       *-SP[7],AL            ; [CPU_] |2879| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2879| 
        MOVL      XAR4,XAR1             ; [CPU_] |2879| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_sprintf")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2879| 
        ; call occurs [#_sprintf] ; [] |2879| 
        MOVL      XAR4,XAR1             ; [CPU_] |2879| 
	.dwpsn	file "../Source/prod.c",line 2883,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2883| 
        ; branch occurs ; [] |2883| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2726| 
        MOVL      XAR0,#44              ; [CPU_] |2726| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2726| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2726| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2726| 
        MOVL      XAR4,XAR1             ; [CPU_] |2726| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_sprintf")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2726| 
        ; call occurs [#_sprintf] ; [] |2726| 
	.dwpsn	file "../Source/prod.c",line 2727,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2727| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2727,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2727| 
        MOV       AL,#1024              ; [CPU_] |2727| 
        MOVL      XAR5,XAR1             ; [CPU_] |2727| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2727| 
        ; call occurs [#_scia_getparam] ; [] |2727| 
	.dwpsn	file "../Source/prod.c",line 2728,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2728| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_atoi")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2728| 
        ; call occurs [#_atoi] ; [] |2728| 
        MOV       *-SP[57],AL           ; [CPU_] |2728| 
	.dwpsn	file "../Source/prod.c",line 2729,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2729| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2729| 
        ; call occurs [#_scia_puts] ; [] |2729| 
        MOV       AL,*-SP[57]           ; [CPU_] |2729| 
	.dwpsn	file "../Source/prod.c",line 2731,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2731| 
        CMPB      AL,#4                 ; [CPU_] |2731| 
        B         $C$L465,HIS           ; [CPU_] |2731| 
        ; branchcc occurs ; [] |2731| 
	.dwpsn	file "../Source/prod.c",line 2735,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2735| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_scia_puts")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2735| 
        ; call occurs [#_scia_puts] ; [] |2735| 
        MOVL      XAR0,#62              ; [CPU_] |2735| 
	.dwpsn	file "../Source/prod.c",line 2739,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2735,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2735| 
	.dwpsn	file "../Source/prod.c",line 2739,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2739| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2740,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2740| 
        MOVL      XAR0,#44              ; [CPU_] |2740| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2740| 
        MOV       *-SP[3],AL            ; [CPU_] |2740| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2740| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2740| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2740| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_sprintf")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2740| 
        ; call occurs [#_sprintf] ; [] |2740| 
        MOVL      XAR0,#44              ; [CPU_] |2740| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2741,column 7,is_stmt,isa 0
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2741| 
        ; call occurs [#_scia_puts] ; [] |2741| 
	.dwpsn	file "../Source/prod.c",line 2742,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2742| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_scia_puts")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2742| 
        ; call occurs [#_scia_puts] ; [] |2742| 
	.dwpsn	file "../Source/prod.c",line 2739,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2742,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2742| 
	.dwpsn	file "../Source/prod.c",line 2739,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2739| 
        B         $C$L451,LT            ; [CPU_] |2739| 
        ; branchcc occurs ; [] |2739| 
	.dwpsn	file "../Source/prod.c",line 2745,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2745| 
        MOVB      XAR0,#14              ; [CPU_] |2745| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2745| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2745| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2745| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2745| 
        MOVL      XAR0,#44              ; [CPU_] |2745| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2745| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2745| 
        MOVL      XAR4,XAR1             ; [CPU_] |2745| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_sprintf")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2745| 
        ; call occurs [#_sprintf] ; [] |2745| 
	.dwpsn	file "../Source/prod.c",line 2746,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2746| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_scia_puts")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2746| 
        ; call occurs [#_scia_puts] ; [] |2746| 
	.dwpsn	file "../Source/prod.c",line 2747,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2747| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2747| 
        ; call occurs [#_scia_puts] ; [] |2747| 
	.dwpsn	file "../Source/prod.c",line 2748,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2748| 
	.dwpsn	file "../Source/prod.c",line 2747,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2747| 
	.dwpsn	file "../Source/prod.c",line 2748,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2748| 
        DEC       *-SP[57]              ; [CPU_] |2748| 
        MOV       *-SP[47],AH           ; [CPU_] |2748| 
        MOV       *-SP[3],AH            ; [CPU_] |2748| 
        MOVL      XAR4,XAR1             ; [CPU_] |2748| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_sprintf")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2748| 
        ; call occurs [#_sprintf] ; [] |2748| 
	.dwpsn	file "../Source/prod.c",line 2750,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2750| 
        MOVL      XAR4,XAR1             ; [CPU_] |2750| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2750| 
        MOV       AL,#1024              ; [CPU_] |2750| 
        MOVL      XAR5,XAR1             ; [CPU_] |2750| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2750| 
        ; call occurs [#_scia_getparam] ; [] |2750| 
        MOVL      XAR4,XAR1             ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2751,column 6,is_stmt,isa 0
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_atoi")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2751| 
        ; call occurs [#_atoi] ; [] |2751| 
	.dwpsn	file "../Source/prod.c",line 2744,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2744| 
	.dwpsn	file "../Source/prod.c",line 2751,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2751| 
	.dwpsn	file "../Source/prod.c",line 2752,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2752| 
        B         $C$L452,LO            ; [CPU_] |2752| 
        ; branchcc occurs ; [] |2752| 
        CMPB      AL,#7                 ; [CPU_] |2752| 
        B         $C$L452,EQ            ; [CPU_] |2752| 
        ; branchcc occurs ; [] |2752| 
	.dwpsn	file "../Source/prod.c",line 2754,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2754| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2754| 
        ; call occurs [#_scia_puts] ; [] |2754| 
	.dwpsn	file "../Source/prod.c",line 2753,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2753| 
$C$L452:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2757,column 6,is_stmt,isa 0
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2757| 
        ; call occurs [#_scia_puts] ; [] |2757| 
	.dwpsn	file "../Source/prod.c",line 2758,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2758| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_scia_puts")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2758| 
        ; call occurs [#_scia_puts] ; [] |2758| 
	.dwpsn	file "../Source/prod.c",line 2759,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2759| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2759| 
        MOVB      AL,#12                ; [CPU_] |2759| 
        MOV       T,*-SP[57]            ; [CPU_] |2759| 
        MPYU      ACC,T,AL              ; [CPU_] |2759| 
        ADDL      ACC,XAR6              ; [CPU_] |2759| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2759| 
        MOVL      XAR1,ACC              ; [CPU_] |2759| 
        MOV       AL,*-SP[59]           ; [CPU_] |2759| 
	.dwpsn	file "../Source/prod.c",line 2761,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2761| 
	.dwpsn	file "../Source/prod.c",line 2759,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2759| 
	.dwpsn	file "../Source/prod.c",line 2761,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2761| 
        ; branchcc occurs ; [] |2761| 
	.dwpsn	file "../Source/prod.c",line 2763,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2763| 
        B         $C$L454,EQ            ; [CPU_] |2763| 
        ; branchcc occurs ; [] |2763| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2763| 
        B         $C$L454,EQ            ; [CPU_] |2763| 
        ; branchcc occurs ; [] |2763| 
	.dwpsn	file "../Source/prod.c",line 2766,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2766| 
        B         $C$L453,EQ            ; [CPU_] |2766| 
        ; branchcc occurs ; [] |2766| 
        CMPB      AL,#4                 ; [CPU_] |2766| 
        B         $C$L455,NEQ           ; [CPU_] |2766| 
        ; branchcc occurs ; [] |2766| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2767,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2767| 
        B         $C$L455,UNC           ; [CPU_] |2767| 
        ; branch occurs ; [] |2767| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2765,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2765| 
$C$L455:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2772,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2772| 
        MOV       AL,*-SP[60]           ; [CPU_] |2772| 
        MOVL      XAR0,#44              ; [CPU_] |2772| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2772| 
        MOV       *-SP[3],AL            ; [CPU_] |2772| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2772| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_sprintf")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2772| 
        ; call occurs [#_sprintf] ; [] |2772| 
        MOVL      XAR0,#44              ; [CPU_] |2772| 
	.dwpsn	file "../Source/prod.c",line 2773,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2773| 
	.dwpsn	file "../Source/prod.c",line 2772,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2772| 
	.dwpsn	file "../Source/prod.c",line 2773,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2773| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2773| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2773| 
        ; call occurs [#_scia_getparam] ; [] |2773| 
        MOVL      XAR0,#86              ; [CPU_] |2773| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2773| 
	.dwpsn	file "../Source/prod.c",line 2774,column 8,is_stmt,isa 0
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_atoi")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2774| 
        ; call occurs [#_atoi] ; [] |2774| 
        MOVL      XAR0,#86              ; [CPU_] |2774| 
        MOV       *-SP[58],AL           ; [CPU_] |2774| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2774| 
	.dwpsn	file "../Source/prod.c",line 2775,column 8,is_stmt,isa 0
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_scia_puts")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2775| 
        ; call occurs [#_scia_puts] ; [] |2775| 
        MOV       AL,*-SP[58]           ; [CPU_] |2775| 
	.dwpsn	file "../Source/prod.c",line 2777,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2777| 
        ; branchcc occurs ; [] |2777| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2777| 
        B         $C$L464,LO            ; [CPU_] |2777| 
        ; branchcc occurs ; [] |2777| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2781| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2781| 
        ; call occurs [#_scia_puts] ; [] |2781| 
	.dwpsn	file "../Source/prod.c",line 2783,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2783| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2781| 
	.dwpsn	file "../Source/prod.c",line 2783,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2783| 
        MOV       AL,*-SP[59]           ; [CPU_] |2783| 
	.dwpsn	file "../Source/prod.c",line 2786,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2786| 
        B         $C$L457,EQ            ; [CPU_] |2786| 
        ; branchcc occurs ; [] |2786| 
        CMPB      AL,#4                 ; [CPU_] |2786| 
        B         $C$L459,NEQ           ; [CPU_] |2786| 
        ; branchcc occurs ; [] |2786| 
	.dwpsn	file "../Source/prod.c",line 2791,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2791| 
        B         $C$L458,UNC           ; [CPU_] |2791| 
        ; branch occurs ; [] |2791| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2789,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2789| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2789| 
        MOVL      XAR0,#44              ; [CPU_] |2789| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2789| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_sprintf")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2789| 
        ; call occurs [#_sprintf] ; [] |2789| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2793,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2793| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2793| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2793| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2793| 
        ; call occurs [#_scia_getparam] ; [] |2793| 
        MOVL      XAR0,#86              ; [CPU_] |2793| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2793,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2793| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_strtod")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2794,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2794| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2794| 
        MOVL      XAR0,#86              ; [CPU_] |2794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2794| 
	.dwpsn	file "../Source/prod.c",line 2795,column 8,is_stmt,isa 0
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_scia_puts")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2795| 
        ; call occurs [#_scia_puts] ; [] |2795| 
	.dwpsn	file "../Source/prod.c",line 2796,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2796| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2796| 
        ; call occurs [#_scia_puts] ; [] |2796| 
	.dwpsn	file "../Source/prod.c",line 2799,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2799| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2799| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2799| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2799| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_sprintf")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2799| 
        ; call occurs [#_sprintf] ; [] |2799| 
        MOVL      XAR0,#44              ; [CPU_] |2799| 
	.dwpsn	file "../Source/prod.c",line 2800,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2800| 
	.dwpsn	file "../Source/prod.c",line 2799,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2799| 
	.dwpsn	file "../Source/prod.c",line 2800,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2800| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2800| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2800| 
        ; call occurs [#_scia_getparam] ; [] |2800| 
        MOVL      XAR0,#86              ; [CPU_] |2800| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2800,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2800| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_strtod")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2801,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2801| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2801| 
        MOVL      XAR0,#86              ; [CPU_] |2801| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2801| 
	.dwpsn	file "../Source/prod.c",line 2802,column 8,is_stmt,isa 0
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2802| 
        ; call occurs [#_scia_puts] ; [] |2802| 
	.dwpsn	file "../Source/prod.c",line 2803,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2803| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2803| 
        ; call occurs [#_scia_puts] ; [] |2803| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2810,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2810| 
        MOV       AL,*-SP[47]           ; [CPU_] |2810| 
        MOVL      XAR0,#62              ; [CPU_] |2810| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2810| 
        MOV       *-SP[3],AL            ; [CPU_] |2810| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2810| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2810| 
        MOV       ACC,AL << 1           ; [CPU_] |2810| 
        ADDL      ACC,XAR6              ; [CPU_] |2810| 
        MOVL      XAR4,ACC              ; [CPU_] |2810| 
        MOVL      XAR0,#44              ; [CPU_] |2810| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2810| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2810| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2810| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_sprintf")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2810| 
        ; call occurs [#_sprintf] ; [] |2810| 
        MOVL      XAR0,#44              ; [CPU_] |2810| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2810| 
	.dwpsn	file "../Source/prod.c",line 2812,column 6,is_stmt,isa 0
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2812| 
        ; call occurs [#_scia_puts] ; [] |2812| 
	.dwpsn	file "../Source/prod.c",line 2807,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2807| 
        MOV       AL,*-SP[59]           ; [CPU_] |2807| 
	.dwpsn	file "../Source/prod.c",line 2814,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2814| 
        B         $C$L461,EQ            ; [CPU_] |2814| 
        ; branchcc occurs ; [] |2814| 
	.dwpsn	file "../Source/prod.c",line 2817,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2817| 
        MOVB      AL,#1                 ; [CPU_] |2817| 
        MOVL      XAR0,#44              ; [CPU_] |2817| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2817| 
        ADD       AL,*-SP[58]           ; [CPU_] |2817| 
        MOV       *-SP[3],AL            ; [CPU_] |2817| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2817| 
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_sprintf")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2817| 
        ; call occurs [#_sprintf] ; [] |2817| 
        MOVL      XAR0,#44              ; [CPU_] |2817| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2817| 
	.dwpsn	file "../Source/prod.c",line 2818,column 7,is_stmt,isa 0
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2818| 
        ; call occurs [#_scia_puts] ; [] |2818| 
        MOV       AL,*-SP[59]           ; [CPU_] |2818| 
	.dwpsn	file "../Source/prod.c",line 2820,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2820| 
        B         $C$L460,EQ            ; [CPU_] |2820| 
        ; branchcc occurs ; [] |2820| 
        CMPB      AL,#4                 ; [CPU_] |2820| 
        B         $C$L463,NEQ           ; [CPU_] |2820| 
        ; branchcc occurs ; [] |2820| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2821,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2821| 
        MOVB      XAR0,#8               ; [CPU_] |2821| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2821| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2821| 
        MOVB      XAR0,#10              ; [CPU_] |2821| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2821| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2821| 
        MOVL      XAR0,#44              ; [CPU_] |2821| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2821| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2821| 
        MOVL      XAR4,XAR1             ; [CPU_] |2821| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_sprintf")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2821| 
        ; call occurs [#_sprintf] ; [] |2821| 
        MOVL      XAR4,XAR1             ; [CPU_] |2821| 
	.dwpsn	file "../Source/prod.c",line 2824,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2824| 
        ; branch occurs ; [] |2824| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2815,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2815| 
$C$L462:    
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2815| 
        ; call occurs [#_scia_puts] ; [] |2815| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2829,column 6,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2829| 
        ; call occurs [#_ad7738_setcal] ; [] |2829| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2831,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2831| 
        ; branch occurs ; [] |2831| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2779,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2779| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2779| 
        ; call occurs [#_scia_puts] ; [] |2779| 
	.dwpsn	file "../Source/prod.c",line 2771,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2771| 
        ; branch occurs ; [] |2771| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2733,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2733| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2733| 
        ; call occurs [#_scia_puts] ; [] |2733| 
	.dwpsn	file "../Source/prod.c",line 2725,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2725| 
        ; branch occurs ; [] |2725| 
$C$L466:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2897,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2897| 
        B         $C$L625,LO            ; [CPU_] |2897| 
        ; branchcc occurs ; [] |2897| 
	.dwpsn	file "../Source/prod.c",line 2900,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2900| 
        CMPB      AL,#83                ; [CPU_] |2900| 
        B         $C$L625,NEQ           ; [CPU_] |2900| 
        ; branchcc occurs ; [] |2900| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2907| 
        MOVL      XAR0,#44              ; [CPU_] |2907| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2907| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2907| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2907| 
        MOVL      XAR4,XAR1             ; [CPU_] |2907| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_sprintf")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2907| 
        ; call occurs [#_sprintf] ; [] |2907| 
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2908| 
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2907| 
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2908| 
        MOV       AL,#1024              ; [CPU_] |2908| 
        MOVL      XAR5,XAR1             ; [CPU_] |2908| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2908| 
        ; call occurs [#_scia_getparam] ; [] |2908| 
	.dwpsn	file "../Source/prod.c",line 2909,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2909| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_atoi")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2909| 
        ; call occurs [#_atoi] ; [] |2909| 
        MOV       *-SP[57],AL           ; [CPU_] |2909| 
	.dwpsn	file "../Source/prod.c",line 2910,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2910| 
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2910| 
        ; call occurs [#_scia_puts] ; [] |2910| 
        MOV       AL,*-SP[57]           ; [CPU_] |2910| 
	.dwpsn	file "../Source/prod.c",line 2912,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2912| 
        CMPB      AL,#4                 ; [CPU_] |2912| 
        B         $C$L497,HIS           ; [CPU_] |2912| 
        ; branchcc occurs ; [] |2912| 
	.dwpsn	file "../Source/prod.c",line 2916,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2916| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2916| 
        ; call occurs [#_scia_puts] ; [] |2916| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2916| 
	.dwpsn	file "../Source/prod.c",line 2919,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2919| 
        MOVL      XAR0,#44              ; [CPU_] |2919| 
        DEC       *-SP[57]              ; [CPU_] |2919| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2919| 
        MOV       *-SP[47],AR1          ; [CPU_] |2919| 
        MOV       *-SP[3],AR1           ; [CPU_] |2919| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2919| 
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_sprintf")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2919| 
        ; call occurs [#_sprintf] ; [] |2919| 
        MOVL      XAR0,#44              ; [CPU_] |2919| 
	.dwpsn	file "../Source/prod.c",line 2920,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2920| 
	.dwpsn	file "../Source/prod.c",line 2919,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2919| 
	.dwpsn	file "../Source/prod.c",line 2920,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2920| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2920| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2920| 
        ; call occurs [#_scia_getparam] ; [] |2920| 
        MOVL      XAR0,#86              ; [CPU_] |2920| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2920| 
	.dwpsn	file "../Source/prod.c",line 2921,column 6,is_stmt,isa 0
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2921| 
        ; call occurs [#_scia_puts] ; [] |2921| 
	.dwpsn	file "../Source/prod.c",line 2922,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2922| 
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2922| 
        ; call occurs [#_scia_puts] ; [] |2922| 
        MOVL      XAR0,#86              ; [CPU_] |2922| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2922| 
	.dwpsn	file "../Source/prod.c",line 2924,column 6,is_stmt,isa 0
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_atoi")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2924| 
        ; call occurs [#_atoi] ; [] |2924| 
        CMPB      AL,#1                 ; [CPU_] |2924| 
        B         $C$L468,EQ            ; [CPU_] |2924| 
        ; branchcc occurs ; [] |2924| 
	.dwpsn	file "../Source/prod.c",line 3073,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3073| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3073| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3073| 
        ADDL      ACC,XAR6              ; [CPU_] |3073| 
        ADD       ACC,#199 << 4         ; [CPU_] |3073| 
        MOVL      XAR4,ACC              ; [CPU_] |3073| 
	.dwpsn	file "../Source/prod.c",line 3074,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3074| 
	.dwpsn	file "../Source/prod.c",line 3073,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3073| 
	.dwpsn	file "../Source/prod.c",line 3074,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3074| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3074| 
        MOV       *-SP[3],AR1           ; [CPU_] |3074| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3074| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_sprintf")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3074| 
        ; call occurs [#_sprintf] ; [] |3074| 
        B         $C$L493,UNC           ; [CPU_] |3074| 
        ; branch occurs ; [] |3074| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2927,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2927| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2927| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2927| 
        ADDL      ACC,XAR6              ; [CPU_] |2927| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2927| 
        MOVL      XAR1,ACC              ; [CPU_] |2927| 
        MOVL      XAR0,#62              ; [CPU_] |2927| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2927| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2927| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2930,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2930| 
        MOV       *-SP[60],AL           ; [CPU_] |2930| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2931,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2931| 
        MOVL      XAR0,#88              ; [CPU_] |2931| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2931| 
        MOV       *-SP[3],AL            ; [CPU_] |2931| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2931| 
        MOVL      XAR0,#88              ; [CPU_] |2931| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2931| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2931| 
        MOVL      XAR0,#44              ; [CPU_] |2931| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2931| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2931| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_sprintf")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2931| 
        ; call occurs [#_sprintf] ; [] |2931| 
        MOVL      XAR0,#44              ; [CPU_] |2931| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2931| 
	.dwpsn	file "../Source/prod.c",line 2932,column 8,is_stmt,isa 0
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2932| 
        ; call occurs [#_scia_puts] ; [] |2932| 
        MOV       AL,*-SP[60]           ; [CPU_] |2932| 
	.dwpsn	file "../Source/prod.c",line 2933,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2933| 
        B         $C$L470,GEQ           ; [CPU_] |2933| 
        ; branchcc occurs ; [] |2933| 
	.dwpsn	file "../Source/prod.c",line 2934,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2934| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2934| 
        ; call occurs [#_scia_puts] ; [] |2934| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2930,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2930| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2930| 
        B         $C$L469,LT            ; [CPU_] |2930| 
        ; branchcc occurs ; [] |2930| 
	.dwpsn	file "../Source/prod.c",line 2937,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2937| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2937| 
        ; call occurs [#_scia_puts] ; [] |2937| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2938| 
        MOVL      XAR0,#44              ; [CPU_] |2938| 
        MOV       AL,*-SP[47]           ; [CPU_] |2938| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2938| 
        MOV       *-SP[3],AL            ; [CPU_] |2938| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2938| 
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_sprintf")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2938| 
        ; call occurs [#_sprintf] ; [] |2938| 
        MOVL      XAR0,#44              ; [CPU_] |2938| 
	.dwpsn	file "../Source/prod.c",line 2941,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2941| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2938| 
	.dwpsn	file "../Source/prod.c",line 2941,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2941| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2941| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2941| 
        ; call occurs [#_scia_getparam] ; [] |2941| 
        MOVL      XAR0,#86              ; [CPU_] |2941| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2941| 
	.dwpsn	file "../Source/prod.c",line 2942,column 7,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_atoi")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2942| 
        ; call occurs [#_atoi] ; [] |2942| 
        MOV       *-SP[59],AL           ; [CPU_] |2942| 
        CMPB      AL,#5                 ; [CPU_] |2942| 
        B         $C$L471,LO            ; [CPU_] |2942| 
        ; branchcc occurs ; [] |2942| 
	.dwpsn	file "../Source/prod.c",line 2945,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2945| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2945| 
        ; call occurs [#_scia_puts] ; [] |2945| 
	.dwpsn	file "../Source/prod.c",line 2944,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2944| 
$C$L471:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2948,column 7,is_stmt,isa 0
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2948| 
        ; call occurs [#_scia_puts] ; [] |2948| 
	.dwpsn	file "../Source/prod.c",line 2949,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2949| 
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2949| 
        ; call occurs [#_scia_puts] ; [] |2949| 
        MOV       AL,*-SP[59]           ; [CPU_] |2949| 
	.dwpsn	file "../Source/prod.c",line 2950,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2950| 
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2952| 
        B         $C$L473,EQ            ; [CPU_] |2952| 
        ; branchcc occurs ; [] |2952| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2952| 
        B         $C$L473,EQ            ; [CPU_] |2952| 
        ; branchcc occurs ; [] |2952| 
	.dwpsn	file "../Source/prod.c",line 2955,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2955| 
        B         $C$L472,EQ            ; [CPU_] |2955| 
        ; branchcc occurs ; [] |2955| 
        CMPB      AL,#4                 ; [CPU_] |2955| 
        B         $C$L474,NEQ           ; [CPU_] |2955| 
        ; branchcc occurs ; [] |2955| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2956,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2956| 
        B         $C$L474,UNC           ; [CPU_] |2956| 
        ; branch occurs ; [] |2956| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2954,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2954| 
$C$L474:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2961,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2961| 
        MOV       AL,*-SP[60]           ; [CPU_] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2961| 
        MOV       *-SP[3],AL            ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_sprintf")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2961| 
        ; call occurs [#_sprintf] ; [] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2961,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2962| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2962| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2962| 
        ; call occurs [#_scia_getparam] ; [] |2962| 
        MOVL      XAR0,#86              ; [CPU_] |2962| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2963,column 8,is_stmt,isa 0
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_atoi")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2963| 
        ; call occurs [#_atoi] ; [] |2963| 
        MOVL      XAR0,#86              ; [CPU_] |2963| 
        MOV       *-SP[58],AL           ; [CPU_] |2963| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2963| 
	.dwpsn	file "../Source/prod.c",line 2964,column 8,is_stmt,isa 0
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2964| 
        ; call occurs [#_scia_puts] ; [] |2964| 
        MOV       AL,*-SP[58]           ; [CPU_] |2964| 
	.dwpsn	file "../Source/prod.c",line 2966,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2966| 
        ; branchcc occurs ; [] |2966| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2966| 
        B         $C$L496,LO            ; [CPU_] |2966| 
        ; branchcc occurs ; [] |2966| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2970| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2970| 
        ; call occurs [#_scia_puts] ; [] |2970| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2972| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2975| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2970| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2975| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2972| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2975| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2975| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2975| 
        ; call occurs [#_scia_getparam] ; [] |2975| 
        MOVL      XAR0,#86              ; [CPU_] |2975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2975| 
	.dwpsn	file "../Source/prod.c",line 2978,column 7,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2978| 
        ; call occurs [#_scia_puts] ; [] |2978| 
	.dwpsn	file "../Source/prod.c",line 2979,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2979| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2979| 
        ; call occurs [#_scia_puts] ; [] |2979| 
        MOVL      XAR0,#86              ; [CPU_] |2979| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2979| 
	.dwpsn	file "../Source/prod.c",line 2981,column 7,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_atoi")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2981| 
        ; call occurs [#_atoi] ; [] |2981| 
        CMPB      AL,#1                 ; [CPU_] |2981| 
        B         $C$L476,EQ            ; [CPU_] |2981| 
        ; branchcc occurs ; [] |2981| 
	.dwpsn	file "../Source/prod.c",line 2985,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2985| 
        B         $C$L477,UNC           ; [CPU_] |2985| 
        ; branch occurs ; [] |2985| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2983,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2983| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2988,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2988| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2988| 
        MOV       AL,#1024              ; [CPU_] |2988| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2988| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2988| 
        ; call occurs [#_scia_getparam] ; [] |2988| 
        MOVL      XAR0,#86              ; [CPU_] |2988| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2988| 
	.dwpsn	file "../Source/prod.c",line 2991,column 7,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2991| 
        ; call occurs [#_scia_puts] ; [] |2991| 
	.dwpsn	file "../Source/prod.c",line 2992,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2992| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2992| 
        ; call occurs [#_scia_puts] ; [] |2992| 
        MOVL      XAR0,#86              ; [CPU_] |2992| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2992| 
	.dwpsn	file "../Source/prod.c",line 2994,column 7,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_atoi")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2994| 
        ; call occurs [#_atoi] ; [] |2994| 
        CMPB      AL,#1                 ; [CPU_] |2994| 
        B         $C$L478,EQ            ; [CPU_] |2994| 
        ; branchcc occurs ; [] |2994| 
	.dwpsn	file "../Source/prod.c",line 2998,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2998| 
        B         $C$L479,UNC           ; [CPU_] |2998| 
        ; branch occurs ; [] |2998| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2996,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2996| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 3001,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3001| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |3001| 
        MOV       AL,#1024              ; [CPU_] |3001| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3001| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3001| 
        ; call occurs [#_scia_getparam] ; [] |3001| 
        MOVL      XAR0,#86              ; [CPU_] |3001| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3001| 
	.dwpsn	file "../Source/prod.c",line 3004,column 7,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3004| 
        ; call occurs [#_scia_puts] ; [] |3004| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3005| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3005| 
        ; call occurs [#_scia_puts] ; [] |3005| 
        MOVL      XAR0,#86              ; [CPU_] |3005| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3005| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_atoi")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3007| 
        ; call occurs [#_atoi] ; [] |3007| 
        CMPB      AL,#1                 ; [CPU_] |3007| 
        B         $C$L480,EQ            ; [CPU_] |3007| 
        ; branchcc occurs ; [] |3007| 
	.dwpsn	file "../Source/prod.c",line 3011,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |3011| 
        B         $C$L481,UNC           ; [CPU_] |3011| 
        ; branch occurs ; [] |3011| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 3009,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |3009| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 3015,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3015| 
        CMPB      AL,#2                 ; [CPU_] |3015| 
        B         $C$L483,LOS           ; [CPU_] |3015| 
        ; branchcc occurs ; [] |3015| 
        CMPB      AL,#3                 ; [CPU_] |3015| 
        B         $C$L482,EQ            ; [CPU_] |3015| 
        ; branchcc occurs ; [] |3015| 
        CMPB      AL,#4                 ; [CPU_] |3015| 
        B         $C$L485,NEQ           ; [CPU_] |3015| 
        ; branchcc occurs ; [] |3015| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3027,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |3027| 
	.dwpsn	file "../Source/prod.c",line 3028,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |3028| 
        ; branch occurs ; [] |3028| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3024,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |3024| 
	.dwpsn	file "../Source/prod.c",line 3025,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |3025| 
        ; branch occurs ; [] |3025| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 3019,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3019| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3019| 
        MOV       T,#10                 ; [CPU_] |3019| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |3019| 
        ADDL      ACC,XAR6              ; [CPU_] |3019| 
        MOVL      XAR4,ACC              ; [CPU_] |3019| 
        MOVB      XAR0,#42              ; [CPU_] |3019| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |3019| 
        MPYB      ACC,T,#152            ; [CPU_] |3019| 
        ADDL      ACC,XAR6              ; [CPU_] |3019| 
        MOVL      XAR4,ACC              ; [CPU_] |3019| 
        MOVB      XAR0,#125             ; [CPU_] |3019| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3019| 
        MOVL      XAR0,#70              ; [CPU_] |3019| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3019| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |3019| 
        MOV       ACC,AL << 1           ; [CPU_] |3019| 
        ADDL      ACC,XAR6              ; [CPU_] |3019| 
        MOVL      XAR4,ACC              ; [CPU_] |3019| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3019| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |3019| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3019| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 3032,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |3032| 
        MOVL      XAR0,#48              ; [CPU_] |3032| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3032| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3032| 
        MOVL      XAR0,#44              ; [CPU_] |3032| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3032| 
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_sprintf")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3032| 
        ; call occurs [#_sprintf] ; [] |3032| 
        MOVL      XAR0,#44              ; [CPU_] |3032| 
	.dwpsn	file "../Source/prod.c",line 3033,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3033| 
	.dwpsn	file "../Source/prod.c",line 3032,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3032| 
	.dwpsn	file "../Source/prod.c",line 3033,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3033| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3033| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3033| 
        ; call occurs [#_scia_getparam] ; [] |3033| 
        MOVL      XAR0,#86              ; [CPU_] |3033| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3033| 
	.dwpsn	file "../Source/prod.c",line 3034,column 7,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3034| 
        ; call occurs [#_scia_puts] ; [] |3034| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3035| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3035| 
        ; call occurs [#_scia_puts] ; [] |3035| 
        MOVL      XAR0,#86              ; [CPU_] |3035| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3035| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_strtod")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3041,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3041| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3041| 
	.dwpsn	file "../Source/prod.c",line 3037,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3037| 
	.dwpsn	file "../Source/prod.c",line 3041,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3041| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3041| 
        MOVL      XAR0,#44              ; [CPU_] |3041| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3041| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3041| 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_sprintf")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3041| 
        ; call occurs [#_sprintf] ; [] |3041| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3042,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3042| 
        MOVL      XAR0,#86              ; [CPU_] |3042| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3042| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3042| 
        ; call occurs [#_scia_getparam] ; [] |3042| 
        MOVL      XAR0,#86              ; [CPU_] |3042| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3042| 
	.dwpsn	file "../Source/prod.c",line 3043,column 7,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3043| 
        ; call occurs [#_scia_puts] ; [] |3043| 
	.dwpsn	file "../Source/prod.c",line 3044,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3044| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3044| 
        ; call occurs [#_scia_puts] ; [] |3044| 
        MOVL      XAR0,#86              ; [CPU_] |3044| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3044,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3044| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_strtod")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3052,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3052| 
        MOVL      XAR0,#62              ; [CPU_] |3052| 
	.dwpsn	file "../Source/prod.c",line 3046,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3046| 
	.dwpsn	file "../Source/prod.c",line 3052,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3052| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3052| 
        MOV       *-SP[3],AL            ; [CPU_] |3052| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3052| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |3052| 
        MOV       ACC,AL << 1           ; [CPU_] |3052| 
        ADDL      ACC,XAR6              ; [CPU_] |3052| 
        MOVL      XAR4,ACC              ; [CPU_] |3052| 
        MOVL      XAR0,#44              ; [CPU_] |3052| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3052| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3052| 
        MOVB      AL,#1                 ; [CPU_] |3052| 
        ADD       AL,*-SP[58]           ; [CPU_] |3052| 
        MOV       *-SP[7],AL            ; [CPU_] |3052| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3052| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_sprintf")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3052| 
        ; call occurs [#_sprintf] ; [] |3052| 
        MOVL      XAR0,#44              ; [CPU_] |3052| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3052| 
	.dwpsn	file "../Source/prod.c",line 3055,column 7,is_stmt,isa 0
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3055| 
        ; call occurs [#_scia_puts] ; [] |3055| 
	.dwpsn	file "../Source/prod.c",line 3057,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3057| 
        B         $C$L486,TC            ; [CPU_] |3057| 
        ; branchcc occurs ; [] |3057| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3057| 
        B         $C$L487,UNC           ; [CPU_] |3057| 
        ; branch occurs ; [] |3057| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3057| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3057| 
        B         $C$L488,TC            ; [CPU_] |3057| 
        ; branchcc occurs ; [] |3057| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3057| 
        B         $C$L489,UNC           ; [CPU_] |3057| 
        ; branch occurs ; [] |3057| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3057| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3057| 
        B         $C$L490,TC            ; [CPU_] |3057| 
        ; branchcc occurs ; [] |3057| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3057| 
        B         $C$L491,UNC           ; [CPU_] |3057| 
        ; branch occurs ; [] |3057| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3057| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3057| 
        MOVL      XAR0,#44              ; [CPU_] |3057| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3057| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3057| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3057| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3057| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3057| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_sprintf")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3057| 
        ; call occurs [#_sprintf] ; [] |3057| 
        MOVL      XAR0,#44              ; [CPU_] |3057| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3057| 
	.dwpsn	file "../Source/prod.c",line 3064,column 7,is_stmt,isa 0
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3064| 
        ; call occurs [#_scia_puts] ; [] |3064| 
	.dwpsn	file "../Source/prod.c",line 3065,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3065| 
        MOVL      XAR0,#48              ; [CPU_] |3065| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3065| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3065| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3065| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3065| 
        MOVL      XAR0,#48              ; [CPU_] |3065| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3065| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3065| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3065| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3065| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3065| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |3065| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |3065| 
        MOVL      XAR4,XAR1             ; [CPU_] |3065| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_sprintf")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3065| 
        ; call occurs [#_sprintf] ; [] |3065| 
        MOVL      XAR4,XAR1             ; [CPU_] |3065| 
	.dwpsn	file "../Source/prod.c",line 3069,column 7,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3069| 
        ; call occurs [#_scia_puts] ; [] |3069| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3080,column 6,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3080| 
        ; call occurs [#_ad7738_setcal] ; [] |3080| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3077,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3077| 
	.dwpsn	file "../Source/prod.c",line 3082,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3082| 
        ; branch occurs ; [] |3082| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2968,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2968| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2968| 
        ; call occurs [#_scia_puts] ; [] |2968| 
	.dwpsn	file "../Source/prod.c",line 2960,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2960| 
        ; branch occurs ; [] |2960| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2914,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2914| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2914| 
        ; call occurs [#_scia_puts] ; [] |2914| 
	.dwpsn	file "../Source/prod.c",line 2906,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2906| 
        ; branch occurs ; [] |2906| 
$C$L498:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3386,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3386| 
        B         $C$L625,LO            ; [CPU_] |3386| 
        ; branchcc occurs ; [] |3386| 
	.dwpsn	file "../Source/prod.c",line 3389,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3389| 
        CMPB      AL,#68                ; [CPU_] |3389| 
        B         $C$L502,EQ            ; [CPU_] |3389| 
        ; branchcc occurs ; [] |3389| 
        CMPB      AL,#82                ; [CPU_] |3389| 
        B         $C$L501,EQ            ; [CPU_] |3389| 
        ; branchcc occurs ; [] |3389| 
        CMPB      AL,#87                ; [CPU_] |3389| 
        B         $C$L625,NEQ           ; [CPU_] |3389| 
        ; branchcc occurs ; [] |3389| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3393,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3393| 
        ; branchcc occurs ; [] |3393| 
	.dwpsn	file "../Source/prod.c",line 3417,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3417| 
	.dwpsn	file "../Source/prod.c",line 3419,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3419| 
        ; branch occurs ; [] |3419| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3395,column 7,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3395| 
        ; call occurs [#_lcd_clear] ; [] |3395| 
	.dwpsn	file "../Source/prod.c",line 3396,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3396| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3396| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3396| 
        ; call occurs [#_lcd_puts] ; [] |3396| 
	.dwpsn	file "../Source/prod.c",line 3397,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3397| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3397| 
        ; call occurs [#_scia_puts] ; [] |3397| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3400,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3400| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_delay_us")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3400| 
        ; call occurs [#_delay_us] ; [] |3400| 
	.dwpsn	file "../Source/prod.c",line 3399,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3399| 
        ; branchcc occurs ; [] |3399| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3404,column 7,is_stmt,isa 0
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_conf_write")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3404| 
        ; call occurs [#_conf_write] ; [] |3404| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3407,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3407| 
        B         $C$L505,NEQ           ; [CPU_] |3407| 
        ; branchcc occurs ; [] |3407| 
	.dwpsn	file "../Source/prod.c",line 3408,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3408| 
	.dwpsn	file "../Source/prod.c",line 3410,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3410| 
        ; branch occurs ; [] |3410| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3424,column 6,is_stmt,isa 0
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_conf_read")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3424| 
        ; call occurs [#_conf_read] ; [] |3424| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3427,column 6,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3427| 
        ; call occurs [#_ad7738_setcal] ; [] |3427| 
	.dwpsn	file "../Source/prod.c",line 3428,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3428| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3428| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3428| 
	.dwpsn	file "../Source/prod.c",line 3429,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3429| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3429| 
        ; call occurs [#_ad7738_resetvall] ; [] |3429| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3432,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3432| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3432| 
        ; call occurs [#_scia_puts] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3435,column 6,is_stmt,isa 0
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_update_units")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3435| 
        ; call occurs [#_update_units] ; [] |3435| 
	.dwpsn	file "../Source/prod.c",line 3433,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3433| 
	.dwpsn	file "../Source/prod.c",line 3437,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3437| 
        ; branch occurs ; [] |3437| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3441,column 6,is_stmt,isa 0
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_conf_default")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3441| 
        ; call occurs [#_conf_default] ; [] |3441| 
	.dwpsn	file "../Source/prod.c",line 3444,column 6,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3444| 
        ; call occurs [#_lcd_clear] ; [] |3444| 
	.dwpsn	file "../Source/prod.c",line 3445,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3445| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3445| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3445| 
        ; call occurs [#_lcd_puts] ; [] |3445| 
	.dwpsn	file "../Source/prod.c",line 3446,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3446| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3446| 
        ; call occurs [#_scia_puts] ; [] |3446| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3449,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3449| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_delay_us")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3449| 
        ; call occurs [#_delay_us] ; [] |3449| 
	.dwpsn	file "../Source/prod.c",line 3448,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3448| 
        ; branchcc occurs ; [] |3448| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3453,column 6,is_stmt,isa 0
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_conf_write")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3453| 
        ; call occurs [#_conf_write] ; [] |3453| 
        MOVZ      AR1,AL                ; [CPU_] |3453| 
	.dwpsn	file "../Source/prod.c",line 3454,column 6,is_stmt,isa 0
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3454| 
        ; call occurs [#_ad7738_setcal] ; [] |3454| 
	.dwpsn	file "../Source/prod.c",line 3455,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3455| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3455| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3456,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3456| 
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3456| 
        ; call occurs [#_ad7738_resetvall] ; [] |3456| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3459,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3459| 
        ; branchcc occurs ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3460| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3462,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3462| 
	.dwpsn	file "../Source/prod.c",line 3463,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3463| 
        ; branch occurs ; [] |3463| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3464,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3464| 
        SPM       #0                    ; [CPU_] 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3464| 
        ; call occurs [#_scia_puts] ; [] |3464| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3466,column 6,is_stmt,isa 0
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3466| 
        ; call occurs [#_lcd_clear] ; [] |3466| 
	.dwpsn	file "../Source/prod.c",line 3467,column 6,is_stmt,isa 0
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_update_units")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3467| 
        ; call occurs [#_update_units] ; [] |3467| 
	.dwpsn	file "../Source/prod.c",line 3468,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3468| 
        ; branch occurs ; [] |3468| 
$C$L507:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2493,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2493| 
        B         $C$L625,LO            ; [CPU_] |2493| 
        ; branchcc occurs ; [] |2493| 
	.dwpsn	file "../Source/prod.c",line 2496,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2496| 
        CMPB      AL,#70                ; [CPU_] |2496| 
        B         $C$L512,EQ            ; [CPU_] |2496| 
        ; branchcc occurs ; [] |2496| 
        CMPB      AL,#80                ; [CPU_] |2496| 
        B         $C$L632,NEQ           ; [CPU_] |2496| 
        ; branchcc occurs ; [] |2496| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2533,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2533| 
        MOVL      XAR0,#44              ; [CPU_] |2533| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2533| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2533| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2533| 
        MOVL      XAR4,XAR1             ; [CPU_] |2533| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_sprintf")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2533| 
        ; call occurs [#_sprintf] ; [] |2533| 
	.dwpsn	file "../Source/prod.c",line 2534,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2534| 
	.dwpsn	file "../Source/prod.c",line 2533,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2533| 
	.dwpsn	file "../Source/prod.c",line 2534,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2534| 
        MOV       AL,#1024              ; [CPU_] |2534| 
        MOVL      XAR5,XAR1             ; [CPU_] |2534| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2534| 
        ; call occurs [#_scia_getparam] ; [] |2534| 
	.dwpsn	file "../Source/prod.c",line 2535,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2535| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_atoi")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2535| 
        ; call occurs [#_atoi] ; [] |2535| 
        MOV       *-SP[57],AL           ; [CPU_] |2535| 
	.dwpsn	file "../Source/prod.c",line 2536,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2536| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2536| 
        ; call occurs [#_scia_puts] ; [] |2536| 
        MOV       AL,*-SP[57]           ; [CPU_] |2536| 
	.dwpsn	file "../Source/prod.c",line 2538,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2538| 
        CMPB      AL,#2                 ; [CPU_] |2538| 
        B         $C$L511,HIS           ; [CPU_] |2538| 
        ; branchcc occurs ; [] |2538| 
	.dwpsn	file "../Source/prod.c",line 2542,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2542| 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2542| 
        ; call occurs [#_scia_puts] ; [] |2542| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2542| 
	.dwpsn	file "../Source/prod.c",line 2545,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2545| 
        MOVL      XAR0,#44              ; [CPU_] |2545| 
        DEC       *-SP[57]              ; [CPU_] |2545| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2545| 
        MOV       *-SP[3],AR1           ; [CPU_] |2545| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2545| 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_sprintf")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2545| 
        ; call occurs [#_sprintf] ; [] |2545| 
        MOVL      XAR0,#44              ; [CPU_] |2545| 
	.dwpsn	file "../Source/prod.c",line 2546,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2546| 
	.dwpsn	file "../Source/prod.c",line 2545,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2545| 
	.dwpsn	file "../Source/prod.c",line 2546,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2546| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2546| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2546| 
        ; call occurs [#_scia_getparam] ; [] |2546| 
        MOVL      XAR0,#86              ; [CPU_] |2546| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2546| 
	.dwpsn	file "../Source/prod.c",line 2547,column 6,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_atol")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2547| 
        ; call occurs [#_atol] ; [] |2547| 
        MOVL      XAR0,#86              ; [CPU_] |2547| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2547| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2547| 
	.dwpsn	file "../Source/prod.c",line 2548,column 6,is_stmt,isa 0
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2548| 
        ; call occurs [#_scia_puts] ; [] |2548| 
	.dwpsn	file "../Source/prod.c",line 2549,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2549| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2549| 
        ; call occurs [#_scia_puts] ; [] |2549| 
	.dwpsn	file "../Source/prod.c",line 2550,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2550| 
        B         $C$L509,NEQ           ; [CPU_] |2550| 
        ; branchcc occurs ; [] |2550| 
	.dwpsn	file "../Source/prod.c",line 2551,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2551| 
	.dwpsn	file "../Source/prod.c",line 2552,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2552| 
        ; branch occurs ; [] |2552| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2554,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2554| 
        MOVL      XAR0,#44              ; [CPU_] |2554| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2554| 
        MOV       *-SP[3],AR1           ; [CPU_] |2554| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2554| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2554| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2554| 
        MOVL      XAR4,XAR1             ; [CPU_] |2554| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_sprintf")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2554| 
        ; call occurs [#_sprintf] ; [] |2554| 
        MOVL      XAR4,XAR1             ; [CPU_] |2554| 
	.dwpsn	file "../Source/prod.c",line 2556,column 6,is_stmt,isa 0
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2556| 
        ; call occurs [#_scia_puts] ; [] |2556| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2561,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2561| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2561| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2561| 
        ADDL      ACC,XAR6              ; [CPU_] |2561| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2561| 
        ADD       ACC,#201 << 4         ; [CPU_] |2561| 
        MOVL      XAR4,ACC              ; [CPU_] |2561| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2561| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2562,column 6,is_stmt,isa 0
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2562| 
        ; call occurs [#_ad7738_setcal] ; [] |2562| 
	.dwpsn	file "../Source/prod.c",line 2563,column 6,is_stmt,isa 0
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2563| 
        ; call occurs [#_velf_rst] ; [] |2563| 
	.dwpsn	file "../Source/prod.c",line 2565,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2565| 
        ; branch occurs ; [] |2565| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2540,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2540| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2540| 
        ; call occurs [#_scia_puts] ; [] |2540| 
	.dwpsn	file "../Source/prod.c",line 2532,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2532| 
        ; branch occurs ; [] |2532| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2503,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2503| 
        MOVL      XAR0,#44              ; [CPU_] |2503| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2503| 
        MOV       *-SP[3],#4096         ; [CPU_] |2503| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2503| 
        MOVL      XAR4,XAR1             ; [CPU_] |2503| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_sprintf")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2503| 
        ; call occurs [#_sprintf] ; [] |2503| 
	.dwpsn	file "../Source/prod.c",line 2505,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2505| 
	.dwpsn	file "../Source/prod.c",line 2503,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2503| 
	.dwpsn	file "../Source/prod.c",line 2505,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2505| 
        MOV       AL,#1024              ; [CPU_] |2505| 
        MOVL      XAR5,XAR1             ; [CPU_] |2505| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2505| 
        ; call occurs [#_scia_getparam] ; [] |2505| 
	.dwpsn	file "../Source/prod.c",line 2506,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2506| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_atoi")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2506| 
        ; call occurs [#_atoi] ; [] |2506| 
        MOV       *-SP[47],AL           ; [CPU_] |2506| 
	.dwpsn	file "../Source/prod.c",line 2507,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2507| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2507| 
        ; call occurs [#_scia_puts] ; [] |2507| 
        MOV       AL,*-SP[47]           ; [CPU_] |2507| 
	.dwpsn	file "../Source/prod.c",line 2509,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2509| 
        ; branchcc occurs ; [] |2509| 
        CMP       AL,#4096              ; [CPU_] |2509| 
        B         $C$L513,GT            ; [CPU_] |2509| 
        ; branchcc occurs ; [] |2509| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2513| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2513| 
        ; call occurs [#_scia_puts] ; [] |2513| 
	.dwpsn	file "../Source/prod.c",line 2515,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2515| 
        MOVL      XAR0,#44              ; [CPU_] |2515| 
        MOV       AL,*-SP[47]           ; [CPU_] |2515| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2515| 
        MOV       *-SP[3],AL            ; [CPU_] |2515| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2515| 
        MOVL      XAR4,XAR1             ; [CPU_] |2515| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_sprintf")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2515| 
        ; call occurs [#_sprintf] ; [] |2515| 
        MOVL      XAR4,XAR1             ; [CPU_] |2515| 
	.dwpsn	file "../Source/prod.c",line 2517,column 6,is_stmt,isa 0
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2517| 
        ; call occurs [#_scia_puts] ; [] |2517| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2522,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2522| 
        MOVL      ACC,XAR4              ; [CPU_] |2522| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2522| 
        MOVL      XAR4,ACC              ; [CPU_] |2522| 
        MOV       AL,*-SP[47]           ; [CPU_] |2522| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2522| 
	.dwpsn	file "../Source/prod.c",line 2526,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2526| 
        ; branch occurs ; [] |2526| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2511,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2511| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2511| 
        ; call occurs [#_scia_puts] ; [] |2511| 
	.dwpsn	file "../Source/prod.c",line 2502,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2502| 
        ; branch occurs ; [] |2502| 
$C$L514:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2575,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2575| 
        B         $C$L625,LO            ; [CPU_] |2575| 
        ; branchcc occurs ; [] |2575| 
	.dwpsn	file "../Source/prod.c",line 2578,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2578| 
        CMPB      AL,#83                ; [CPU_] |2578| 
        B         $C$L625,NEQ           ; [CPU_] |2578| 
        ; branchcc occurs ; [] |2578| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2585,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2585| 
        MOVL      XAR0,#44              ; [CPU_] |2585| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2585| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2585| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2585| 
        MOVL      XAR4,XAR1             ; [CPU_] |2585| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_sprintf")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2585| 
        ; call occurs [#_sprintf] ; [] |2585| 
	.dwpsn	file "../Source/prod.c",line 2586,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2586| 
	.dwpsn	file "../Source/prod.c",line 2585,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2585| 
	.dwpsn	file "../Source/prod.c",line 2586,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2586| 
        MOV       AL,#1024              ; [CPU_] |2586| 
        MOVL      XAR5,XAR1             ; [CPU_] |2586| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2586| 
        ; call occurs [#_scia_getparam] ; [] |2586| 
	.dwpsn	file "../Source/prod.c",line 2587,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2587| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_atoi")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2587| 
        ; call occurs [#_atoi] ; [] |2587| 
        MOV       *-SP[57],AL           ; [CPU_] |2587| 
	.dwpsn	file "../Source/prod.c",line 2588,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2588| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2588| 
        ; call occurs [#_scia_puts] ; [] |2588| 
        MOV       AL,*-SP[57]           ; [CPU_] |2588| 
	.dwpsn	file "../Source/prod.c",line 2590,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2590| 
        CMPB      AL,#4                 ; [CPU_] |2590| 
        B         $C$L529,HIS           ; [CPU_] |2590| 
        ; branchcc occurs ; [] |2590| 
	.dwpsn	file "../Source/prod.c",line 2594,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2594| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2594| 
        ; call occurs [#_scia_puts] ; [] |2594| 
        MOVL      XAR0,#62              ; [CPU_] |2594| 
	.dwpsn	file "../Source/prod.c",line 2598,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2598| 
	.dwpsn	file "../Source/prod.c",line 2594,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2594| 
	.dwpsn	file "../Source/prod.c",line 2598,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2598| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2599,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2599| 
        MOVL      XAR0,#44              ; [CPU_] |2599| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2599| 
        MOV       *-SP[3],AL            ; [CPU_] |2599| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2599| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2599| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2599| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_sprintf")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2599| 
        ; call occurs [#_sprintf] ; [] |2599| 
        MOVL      XAR0,#44              ; [CPU_] |2599| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2599| 
	.dwpsn	file "../Source/prod.c",line 2600,column 7,is_stmt,isa 0
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2600| 
        ; call occurs [#_scia_puts] ; [] |2600| 
        MOV       AL,*-SP[47]           ; [CPU_] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2601| 
        B         $C$L517,GEQ           ; [CPU_] |2601| 
        ; branchcc occurs ; [] |2601| 
	.dwpsn	file "../Source/prod.c",line 2602,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2602| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2602| 
        ; call occurs [#_scia_puts] ; [] |2602| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2598,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2598| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2598| 
        B         $C$L516,LT            ; [CPU_] |2598| 
        ; branchcc occurs ; [] |2598| 
	.dwpsn	file "../Source/prod.c",line 2605,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2605| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2605| 
        ; call occurs [#_scia_puts] ; [] |2605| 
	.dwpsn	file "../Source/prod.c",line 2606,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2606| 
        MOVL      XAR0,#44              ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2605,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2606,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2606| 
        MOV       *-SP[3],AH            ; [CPU_] |2606| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2606| 
        DEC       *-SP[57]              ; [CPU_] |2606| 
        MOV       *-SP[47],AH           ; [CPU_] |2606| 
        MOVL      XAR4,XAR1             ; [CPU_] |2606| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_sprintf")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2606| 
        ; call occurs [#_sprintf] ; [] |2606| 
	.dwpsn	file "../Source/prod.c",line 2608,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2608| 
	.dwpsn	file "../Source/prod.c",line 2606,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2608,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2608| 
        MOV       AL,#1024              ; [CPU_] |2608| 
        MOVL      XAR5,XAR1             ; [CPU_] |2608| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2608| 
        ; call occurs [#_scia_getparam] ; [] |2608| 
        MOVL      XAR4,XAR1             ; [CPU_] |2608| 
	.dwpsn	file "../Source/prod.c",line 2609,column 6,is_stmt,isa 0
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_atoi")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2609| 
        ; call occurs [#_atoi] ; [] |2609| 
        MOVZ      AR1,AL                ; [CPU_] |2609| 
        CMPB      AL,#7                 ; [CPU_] |2609| 
        B         $C$L518,LO            ; [CPU_] |2609| 
        ; branchcc occurs ; [] |2609| 
	.dwpsn	file "../Source/prod.c",line 2612,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2612| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2612| 
        ; call occurs [#_scia_puts] ; [] |2612| 
	.dwpsn	file "../Source/prod.c",line 2611,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2611| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2615,column 6,is_stmt,isa 0
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2615| 
        ; call occurs [#_scia_puts] ; [] |2615| 
	.dwpsn	file "../Source/prod.c",line 2616,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2616| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2616| 
        ; call occurs [#_scia_puts] ; [] |2616| 
	.dwpsn	file "../Source/prod.c",line 2617,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2617| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2617| 
        MOVB      AL,#3                 ; [CPU_] |2617| 
        MOV       T,*-SP[57]            ; [CPU_] |2617| 
        MPYU      ACC,T,AL              ; [CPU_] |2617| 
        ADDL      ACC,XAR6              ; [CPU_] |2617| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2617| 
        MOVL      XAR4,ACC              ; [CPU_] |2617| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2617| 
	.dwpsn	file "../Source/prod.c",line 2619,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2619| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2619| 
        CMPB      AL,#2                 ; [CPU_] |2619| 
        B         $C$L522,LOS           ; [CPU_] |2619| 
        ; branchcc occurs ; [] |2619| 
        MOV       AH,AL                 ; [CPU_] |2619| 
        ADDB      AH,#-3                ; [CPU_] |2619| 
        CMPB      AH,#1                 ; [CPU_] |2619| 
        B         $C$L521,LOS           ; [CPU_] |2619| 
        ; branchcc occurs ; [] |2619| 
        CMPB      AL,#5                 ; [CPU_] |2619| 
        B         $C$L519,EQ            ; [CPU_] |2619| 
        ; branchcc occurs ; [] |2619| 
        CMPB      AL,#6                 ; [CPU_] |2619| 
        B         $C$L584,NEQ           ; [CPU_] |2619| 
        ; branchcc occurs ; [] |2619| 
	.dwpsn	file "../Source/prod.c",line 2693,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2693| 
        MOV       AL,*-SP[47]           ; [CPU_] |2693| 
        MOVL      XAR0,#62              ; [CPU_] |2693| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2693| 
        MOV       *-SP[3],AL            ; [CPU_] |2693| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2693| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2693| 
        ADDL      ACC,XAR6              ; [CPU_] |2693| 
        MOVL      XAR4,ACC              ; [CPU_] |2693| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2693| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2696,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2696| 
        ; branch occurs ; [] |2696| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2674,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2674| 
        MOVL      XAR0,#44              ; [CPU_] |2674| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2674| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2674| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2674| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_sprintf")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2674| 
        ; call occurs [#_sprintf] ; [] |2674| 
        MOVL      XAR0,#44              ; [CPU_] |2674| 
	.dwpsn	file "../Source/prod.c",line 2675,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2675| 
	.dwpsn	file "../Source/prod.c",line 2674,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2674| 
	.dwpsn	file "../Source/prod.c",line 2675,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2675| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2675| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2675| 
        ; call occurs [#_scia_getparam] ; [] |2675| 
        MOVL      XAR0,#86              ; [CPU_] |2675| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2675| 
	.dwpsn	file "../Source/prod.c",line 2676,column 8,is_stmt,isa 0
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_atoi")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2676| 
        ; call occurs [#_atoi] ; [] |2676| 
        MOVL      XAR0,#86              ; [CPU_] |2676| 
        MOV       *-SP[58],AL           ; [CPU_] |2676| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2676| 
	.dwpsn	file "../Source/prod.c",line 2677,column 8,is_stmt,isa 0
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2677| 
        ; call occurs [#_scia_puts] ; [] |2677| 
        MOV       AL,*-SP[58]           ; [CPU_] |2677| 
	.dwpsn	file "../Source/prod.c",line 2679,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2679| 
        CMPB      AL,#4                 ; [CPU_] |2679| 
        B         $C$L520,HIS           ; [CPU_] |2679| 
        ; branchcc occurs ; [] |2679| 
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2683| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2683| 
        ; call occurs [#_scia_puts] ; [] |2683| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2685| 
	.dwpsn	file "../Source/prod.c",line 2687,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2687| 
        MOVL      XAR0,#62              ; [CPU_] |2687| 
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2683| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2685| 
	.dwpsn	file "../Source/prod.c",line 2687,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2687| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2687| 
        MOV       *-SP[3],AL            ; [CPU_] |2687| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2687| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2687| 
        ADDL      ACC,XAR6              ; [CPU_] |2687| 
        MOVL      XAR4,ACC              ; [CPU_] |2687| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2687| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2687| 
        MOVB      AL,#1                 ; [CPU_] |2687| 
        ADD       AL,*-SP[58]           ; [CPU_] |2687| 
        MOV       *-SP[7],AL            ; [CPU_] |2687| 
	.dwpsn	file "../Source/prod.c",line 2690,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2690| 
        ; branch occurs ; [] |2690| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2681,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2681| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2681| 
        ; call occurs [#_scia_puts] ; [] |2681| 
	.dwpsn	file "../Source/prod.c",line 2673,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2673| 
        ; branch occurs ; [] |2673| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2631,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2631| 
        B         $C$L523,UNC           ; [CPU_] |2631| 
        ; branch occurs ; [] |2631| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2625,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2625| 
$C$L523:    
        MOV       *-SP[59],AL           ; [CPU_] |2625| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2636,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2636| 
        MOV       AL,*-SP[59]           ; [CPU_] |2636| 
        MOVL      XAR0,#44              ; [CPU_] |2636| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2636| 
        MOV       *-SP[3],AL            ; [CPU_] |2636| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2636| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_sprintf")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2636| 
        ; call occurs [#_sprintf] ; [] |2636| 
        MOVL      XAR0,#44              ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2637,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2637| 
	.dwpsn	file "../Source/prod.c",line 2636,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2637,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2637| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2637| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2637| 
        ; call occurs [#_scia_getparam] ; [] |2637| 
        MOVL      XAR0,#86              ; [CPU_] |2637| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2637| 
	.dwpsn	file "../Source/prod.c",line 2638,column 8,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_atoi")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2638| 
        ; call occurs [#_atoi] ; [] |2638| 
        MOVL      XAR0,#86              ; [CPU_] |2638| 
        MOV       *-SP[58],AL           ; [CPU_] |2638| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2638| 
	.dwpsn	file "../Source/prod.c",line 2639,column 8,is_stmt,isa 0
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2639| 
        ; call occurs [#_scia_puts] ; [] |2639| 
        MOV       AL,*-SP[58]           ; [CPU_] |2639| 
	.dwpsn	file "../Source/prod.c",line 2641,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2641| 
        ; branchcc occurs ; [] |2641| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2641| 
        B         $C$L528,LO            ; [CPU_] |2641| 
        ; branchcc occurs ; [] |2641| 
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2645| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2645| 
        ; call occurs [#_scia_puts] ; [] |2645| 
	.dwpsn	file "../Source/prod.c",line 2647,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2647| 
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2645| 
	.dwpsn	file "../Source/prod.c",line 2647,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2647| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2652,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2652| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2652| 
        MOV       AL,#1024              ; [CPU_] |2652| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2652| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2652| 
        ; call occurs [#_scia_getparam] ; [] |2652| 
        MOVL      XAR0,#86              ; [CPU_] |2652| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2652| 
	.dwpsn	file "../Source/prod.c",line 2654,column 8,is_stmt,isa 0
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_atoi")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2654| 
        ; call occurs [#_atoi] ; [] |2654| 
        MOV       *-SP[48],AL           ; [CPU_] |2654| 
        CMPB      AL,#0                 ; [CPU_] |2654| 
        B         $C$L527,LT            ; [CPU_] |2654| 
        ; branchcc occurs ; [] |2654| 
        CMPB      AL,#6                 ; [CPU_] |2654| 
        B         $C$L527,GEQ           ; [CPU_] |2654| 
        ; branchcc occurs ; [] |2654| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2660| 
        ; call occurs [#_scia_puts] ; [] |2660| 
	.dwpsn	file "../Source/prod.c",line 2661,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2661| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2661| 
        ; call occurs [#_scia_puts] ; [] |2661| 
        MOV       AL,*-SP[48]           ; [CPU_] |2661| 
	.dwpsn	file "../Source/prod.c",line 2664,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2664| 
        MOVL      XAR0,#62              ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2662| 
	.dwpsn	file "../Source/prod.c",line 2664,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2664| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2664| 
        MOV       *-SP[3],AL            ; [CPU_] |2664| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2664| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2664| 
        ADDL      ACC,XAR6              ; [CPU_] |2664| 
        MOVL      XAR4,ACC              ; [CPU_] |2664| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2664| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2664| 
        MOVB      AL,#1                 ; [CPU_] |2664| 
        ADD       AL,*-SP[58]           ; [CPU_] |2664| 
        MOV       *-SP[7],AL            ; [CPU_] |2664| 
        MOV       AL,*-SP[48]           ; [CPU_] |2664| 
        MOV       *-SP[8],AL            ; [CPU_] |2664| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2664| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2664| 
        MOVL      XAR4,XAR1             ; [CPU_] |2664| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_sprintf")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2664| 
        ; call occurs [#_sprintf] ; [] |2664| 
        MOVL      XAR4,XAR1             ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2667,column 7,is_stmt,isa 0
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2667| 
        ; call occurs [#_scia_puts] ; [] |2667| 
	.dwpsn	file "../Source/prod.c",line 2702,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2702| 
        ; branch occurs ; [] |2702| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2658,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2658| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2658| 
        ; call occurs [#_scia_puts] ; [] |2658| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2651| 
        ; branch occurs ; [] |2651| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2643,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2643| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2643| 
        ; call occurs [#_scia_puts] ; [] |2643| 
	.dwpsn	file "../Source/prod.c",line 2635,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2635| 
        ; branch occurs ; [] |2635| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2592,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2592| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2592| 
        ; call occurs [#_scia_puts] ; [] |2592| 
	.dwpsn	file "../Source/prod.c",line 2584,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2584| 
        ; branch occurs ; [] |2584| 
$C$L530:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1682,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1682| 
        B         $C$L625,LO            ; [CPU_] |1682| 
        ; branchcc occurs ; [] |1682| 
	.dwpsn	file "../Source/prod.c",line 1687,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1687| 
        CMPB      AL,#86                ; [CPU_] |1687| 
        B         $C$L531,EQ            ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        CMPB      AL,#77                ; [CPU_] |1687| 
        B         $C$L531,EQ            ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        CMPB      AL,#83                ; [CPU_] |1687| 
        B         $C$L625,NEQ           ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1690,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1690| 
        MOV       *-SP[47],AL           ; [CPU_] |1690| 
	.dwpsn	file "../Source/prod.c",line 1692,column 5,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1692| 
        ; call occurs [#_lcd_clear] ; [] |1692| 
	.dwpsn	file "../Source/prod.c",line 1693,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1693| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1693| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1693| 
        ; call occurs [#_lcd_puts] ; [] |1693| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1699| 
        MOVL      XAR0,#44              ; [CPU_] |1699| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1699| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1699| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1699| 
        MOVL      XAR4,XAR1             ; [CPU_] |1699| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_sprintf")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1699| 
        ; call occurs [#_sprintf] ; [] |1699| 
	.dwpsn	file "../Source/prod.c",line 1700,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1700| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1699| 
	.dwpsn	file "../Source/prod.c",line 1700,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1700| 
        MOV       AL,#1024              ; [CPU_] |1700| 
        MOVL      XAR5,XAR1             ; [CPU_] |1700| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1700| 
        ; call occurs [#_scia_getparam] ; [] |1700| 
	.dwpsn	file "../Source/prod.c",line 1701,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1701| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_atoi")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1701| 
        ; call occurs [#_atoi] ; [] |1701| 
        MOV       *-SP[58],AL           ; [CPU_] |1701| 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1702| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1702| 
        ; call occurs [#_scia_puts] ; [] |1702| 
        MOV       AL,*-SP[58]           ; [CPU_] |1702| 
	.dwpsn	file "../Source/prod.c",line 1704,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1704| 
        CMPB      AL,#4                 ; [CPU_] |1704| 
        B         $C$L590,HIS           ; [CPU_] |1704| 
        ; branchcc occurs ; [] |1704| 
	.dwpsn	file "../Source/prod.c",line 1708,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1708| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1708| 
        ; call occurs [#_scia_puts] ; [] |1708| 
	.dwpsn	file "../Source/prod.c",line 1709,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1709| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1714| 
        MOVL      XAR0,#44              ; [CPU_] |1714| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1714| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1714| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1714| 
        MOVL      XAR4,XAR1             ; [CPU_] |1714| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_sprintf")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1714| 
        ; call occurs [#_sprintf] ; [] |1714| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1715| 
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1714| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1715| 
        MOV       AL,#1024              ; [CPU_] |1715| 
        MOVL      XAR5,XAR1             ; [CPU_] |1715| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1715| 
        ; call occurs [#_scia_getparam] ; [] |1715| 
	.dwpsn	file "../Source/prod.c",line 1716,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1716| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_atoi")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1716| 
        ; call occurs [#_atoi] ; [] |1716| 
        MOV       *-SP[57],AL           ; [CPU_] |1716| 
	.dwpsn	file "../Source/prod.c",line 1717,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1717| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1717| 
        ; call occurs [#_scia_puts] ; [] |1717| 
        MOV       AL,*-SP[57]           ; [CPU_] |1717| 
	.dwpsn	file "../Source/prod.c",line 1721,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1721| 
        CMPB      AL,#20                ; [CPU_] |1721| 
        B         $C$L589,HIS           ; [CPU_] |1721| 
        ; branchcc occurs ; [] |1721| 
	.dwpsn	file "../Source/prod.c",line 1725,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1725| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1725| 
        ; call occurs [#_scia_puts] ; [] |1725| 
	.dwpsn	file "../Source/prod.c",line 1729,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1729| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1729| 
        MOVL      XAR0,#44              ; [CPU_] |1729| 
	.dwpsn	file "../Source/prod.c",line 1725,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1725| 
	.dwpsn	file "../Source/prod.c",line 1729,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1729| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1729| 
        MOV       *-SP[3],AL            ; [CPU_] |1729| 
        MOV       *-SP[4],AH            ; [CPU_] |1729| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1729| 
        DEC       *-SP[57]              ; [CPU_] |1729| 
        MOV       *-SP[59],AH           ; [CPU_] |1729| 
        MOV       *-SP[60],AL           ; [CPU_] |1729| 
        MOVL      XAR4,XAR1             ; [CPU_] |1729| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_sprintf")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1729| 
        ; call occurs [#_sprintf] ; [] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1730| 
        MOVL      XAR4,XAR1             ; [CPU_] |1730| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1730| 
        ; call occurs [#_lcd_puts] ; [] |1730| 
	.dwpsn	file "../Source/prod.c",line 1734,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1734| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1734| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1734| 
        MOVL      XAR4,XAR1             ; [CPU_] |1734| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_sprintf")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1734| 
        ; call occurs [#_sprintf] ; [] |1734| 
	.dwpsn	file "../Source/prod.c",line 1735,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1735| 
        MOV       AL,#1024              ; [CPU_] |1735| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1735| 
        MOVL      XAR4,XAR1             ; [CPU_] |1735| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1735| 
        ; call occurs [#_scia_getparam] ; [] |1735| 
        CMPB      AL,#15                ; [CPU_] |1735| 
        B         $C$L534,LOS           ; [CPU_] |1735| 
        ; branchcc occurs ; [] |1735| 
	.dwpsn	file "../Source/prod.c",line 1739,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1739| 
        MOVB      XAR0,#15              ; [CPU_] |1739| 
	.dwpsn	file "../Source/prod.c",line 1738,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1738| 
	.dwpsn	file "../Source/prod.c",line 1739,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1739| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1741,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1741| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1741| 
        MOVL      XAR0,#86              ; [CPU_] |1741| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1741| 
        MOVB      AH,#1                 ; [CPU_] |1741| 
        ADD       AH,AL                 ; [CPU_] |1741| 
        MOVU      ACC,AH                ; [CPU_] |1741| 
        MOVL      XAR5,XAR1             ; [CPU_] |1741| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_memcpy")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1741| 
        ; call occurs [#_memcpy] ; [] |1741| 
        MOVL      XAR4,XAR1             ; [CPU_] |1741| 
	.dwpsn	file "../Source/prod.c",line 1742,column 5,is_stmt,isa 0
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1742| 
        ; call occurs [#_scia_puts] ; [] |1742| 
	.dwpsn	file "../Source/prod.c",line 1743,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1743| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1743| 
        ; call occurs [#_scia_puts] ; [] |1743| 
	.dwpsn	file "../Source/prod.c",line 1747,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1747| 
        MOVL      XAR0,#44              ; [CPU_] |1747| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1747| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1747| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1747| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_sprintf")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1747| 
        ; call occurs [#_sprintf] ; [] |1747| 
        MOVL      XAR0,#44              ; [CPU_] |1747| 
	.dwpsn	file "../Source/prod.c",line 1748,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1748| 
	.dwpsn	file "../Source/prod.c",line 1747,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1747| 
	.dwpsn	file "../Source/prod.c",line 1748,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1748| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1748| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1748| 
        ; call occurs [#_scia_getparam] ; [] |1748| 
        CMPB      AL,#15                ; [CPU_] |1748| 
        B         $C$L535,LOS           ; [CPU_] |1748| 
        ; branchcc occurs ; [] |1748| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1752| 
        MOVB      XAR0,#15              ; [CPU_] |1752| 
	.dwpsn	file "../Source/prod.c",line 1751,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1751| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1752| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1754,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1754| 
        MOVL      XAR0,#60              ; [CPU_] |1754| 
        MOVL      XAR5,XAR1             ; [CPU_] |1754| 
        ADD       AH,AL                 ; [CPU_] |1754| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1754| 
        MOVU      ACC,AH                ; [CPU_] |1754| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_memcpy")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1754| 
        ; call occurs [#_memcpy] ; [] |1754| 
        MOVL      XAR4,XAR1             ; [CPU_] |1754| 
	.dwpsn	file "../Source/prod.c",line 1755,column 5,is_stmt,isa 0
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1755| 
        ; call occurs [#_scia_puts] ; [] |1755| 
	.dwpsn	file "../Source/prod.c",line 1756,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1756| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1756| 
        ; call occurs [#_scia_puts] ; [] |1756| 
        MOVL      XAR0,#70              ; [CPU_] |1756| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1756| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1759,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1759| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1759| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1760,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1760| 
        MOVL      XAR0,#88              ; [CPU_] |1760| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1760| 
        MOV       *-SP[3],AL            ; [CPU_] |1760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1760| 
        MOVL      XAR0,#88              ; [CPU_] |1760| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1760| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1760| 
        MOVL      XAR4,XAR1             ; [CPU_] |1760| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1760| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_sprintf")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1760| 
        ; call occurs [#_sprintf] ; [] |1760| 
	.dwpsn	file "../Source/prod.c",line 1759,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1759| 
        INC       *-SP[61]              ; [CPU_] |1759| 
        MOV       AL,*-SP[61]           ; [CPU_] |1759| 
        CMPB      AL,#7                 ; [CPU_] |1759| 
        B         $C$L536,LT            ; [CPU_] |1759| 
        ; branchcc occurs ; [] |1759| 
	.dwpsn	file "../Source/prod.c",line 1762,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1762| 
        MOVB      XAR1,#54              ; [CPU_] |1762| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1762| 
	.dwpsn	file "../Source/prod.c",line 1763,column 5,is_stmt,isa 0
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1763| 
        ; call occurs [#_scia_puts] ; [] |1763| 
	.dwpsn	file "../Source/prod.c",line 1764,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1764| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1764| 
        MOV       AL,#1024              ; [CPU_] |1764| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1764| 
        MOVL      XAR5,XAR1             ; [CPU_] |1764| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1764| 
        ; call occurs [#_scia_getparam] ; [] |1764| 
        MOVL      XAR4,XAR1             ; [CPU_] |1764| 
	.dwpsn	file "../Source/prod.c",line 1766,column 5,is_stmt,isa 0
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_atoi")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1766| 
        ; call occurs [#_atoi] ; [] |1766| 
        MOVB      XAR0,#42              ; [CPU_] |1766| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1766| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1766| 
	.dwpsn	file "../Source/prod.c",line 1768,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1768| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1768| 
        CMPB      AL,#6                 ; [CPU_] |1768| 
        B         $C$L537,GT            ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
        CMPB      AL,#6                 ; [CPU_] |1768| 
        B         $C$L540,EQ            ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
        CMPB      AL,#1                 ; [CPU_] |1768| 
        B         $C$L543,LOS           ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
        MOV       AH,AL                 ; [CPU_] |1768| 
        ADDB      AH,#-2                ; [CPU_] |1768| 
        CMPB      AH,#2                 ; [CPU_] |1768| 
        B         $C$L542,LOS           ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
        CMPB      AL,#5                 ; [CPU_] |1768| 
        B         $C$L541,EQ            ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
        B         $C$L538,UNC           ; [CPU_] |1768| 
        ; branch occurs ; [] |1768| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1768| 
        ADDB      AH,#-7                ; [CPU_] |1768| 
        CMPB      AH,#1                 ; [CPU_] |1768| 
        B         $C$L539,LOS           ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
        CMPB      AL,#15                ; [CPU_] |1768| 
        B         $C$L539,EQ            ; [CPU_] |1768| 
        ; branchcc occurs ; [] |1768| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1790,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1790| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1790| 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1791| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1791| 
        ; call occurs [#_scia_puts] ; [] |1791| 
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1792| 
        ; branch occurs ; [] |1792| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1787,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1787| 
	.dwpsn	file "../Source/prod.c",line 1788,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1788| 
        ; branch occurs ; [] |1788| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1782,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1782| 
	.dwpsn	file "../Source/prod.c",line 1783,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1783| 
        ; branch occurs ; [] |1783| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1780| 
        ; branch occurs ; [] |1780| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1776,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1776| 
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1777| 
        ; branch occurs ; [] |1777| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1771,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1771| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1794,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1794| 
        MOVL      XAR4,XAR7             ; [CPU_] |1794| 
        MOVB      XAR0,#43              ; [CPU_] |1794| 
        ADDB      XAR7,#42              ; [CPU_] |1794| 
        MOV       AL,*XAR7              ; [CPU_] |1794| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1795,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1795| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1795| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1795| 
        MOVL      XAR0,#86              ; [CPU_] |1795| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1795| 
	.dwpsn	file "../Source/prod.c",line 1797,column 5,is_stmt,isa 0
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1797| 
        ; call occurs [#_scia_puts] ; [] |1797| 
	.dwpsn	file "../Source/prod.c",line 1798,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1798| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1798| 
        ; call occurs [#_scia_puts] ; [] |1798| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1803| 
        MOVL      XAR5,XAR1             ; [CPU_] |1803| 
        MOV       AL,#1024              ; [CPU_] |1803| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1803| 
        ; call occurs [#_scia_getparam] ; [] |1803| 
        MOVL      XAR4,XAR1             ; [CPU_] |1803| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_strtod")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1804| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1804| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1804| 
	.dwpsn	file "../Source/prod.c",line 1806,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1806| 
        MOV       AH,#0                 ; [CPU_] |1806| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1806| 
        MOVL      ACC,XAR3              ; [CPU_] |1806| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1806| 
        ; call occurs [#FS$$CMP] ; [] |1806| 
        CMPB      AL,#0                 ; [CPU_] |1806| 
        B         $C$L588,EQ            ; [CPU_] |1806| 
        ; branchcc occurs ; [] |1806| 
	.dwpsn	file "../Source/prod.c",line 1810,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1810| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1810| 
        MOVB      XAR1,#142             ; [CPU_] |1810| 
        MOVL      XAR0,#86              ; [CPU_] |1810| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1810| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1810| 
	.dwpsn	file "../Source/prod.c",line 1811,column 5,is_stmt,isa 0
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1811| 
        ; call occurs [#_scia_puts] ; [] |1811| 
	.dwpsn	file "../Source/prod.c",line 1812,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1812| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1812| 
        ; call occurs [#_scia_puts] ; [] |1812| 
        MOV       AL,*-SP[58]           ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 5,is_stmt,isa 0
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_tagid")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1814| 
        ; call occurs [#_tagid] ; [] |1814| 
        MOVL      XAR0,#36              ; [CPU_] |1814| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1814| 
        MOVL      XAR4,XAR5             ; [CPU_] |1814| 
        ADDB      XAR4,#32              ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1816,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1814,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1814| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1816,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1816| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1816| 
        MOV       *-SP[2],#0            ; [CPU_] |1816| 
        MOV       *-SP[1],#0            ; [CPU_] |1816| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1816| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1816| 
        MOVL      P,XAR4                ; [CPU_] |1816| 
        MOVL      ACC,XAR5              ; [CPU_] |1816| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1191, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1816| 
        ; call occurs [#ULL$$CMP] ; [] |1816| 
        CMPB      AL,#0                 ; [CPU_] |1816| 
        B         $C$L546,NEQ           ; [CPU_] |1816| 
        ; branchcc occurs ; [] |1816| 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1817| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1818,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1818| 
        ; branch occurs ; [] |1818| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1819,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1819| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1819| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1819| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1819| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1819| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1819| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_sprintf")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1819| 
        ; call occurs [#_sprintf] ; [] |1819| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1821,column 5,is_stmt,isa 0
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1821| 
        ; call occurs [#_scia_puts] ; [] |1821| 
        MOV       AL,*-SP[47]           ; [CPU_] |1821| 
	.dwpsn	file "../Source/prod.c",line 1823,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1823| 
        B         $C$L561,EQ            ; [CPU_] |1823| 
        ; branchcc occurs ; [] |1823| 
        CMPB      AL,#83                ; [CPU_] |1823| 
        B         $C$L552,EQ            ; [CPU_] |1823| 
        ; branchcc occurs ; [] |1823| 
        CMPB      AL,#86                ; [CPU_] |1823| 
        B         $C$L618,NEQ           ; [CPU_] |1823| 
        ; branchcc occurs ; [] |1823| 
	.dwpsn	file "../Source/prod.c",line 1828,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1828| 
        MOVB      AL,#40                ; [CPU_] |1828| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1828| 
        ; call occurs [#_lcd_puts] ; [] |1828| 
	.dwpsn	file "../Source/prod.c",line 1830,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1830| 
        MOVB      XAR0,#36              ; [CPU_] |1830| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1833| 
	.dwpsn	file "../Source/prod.c",line 1830,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1830| 
	.dwpsn	file "../Source/prod.c",line 1831,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1831| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1833| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1833| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1833| 
        MOVL      XAR0,#70              ; [CPU_] |1833| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1833| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1833| 
        MOV       ACC,AL << 1           ; [CPU_] |1833| 
        ADDL      ACC,XAR6              ; [CPU_] |1833| 
        MOVL      XAR4,ACC              ; [CPU_] |1833| 
        MOVL      XAR0,#44              ; [CPU_] |1833| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1833| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1833| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1833| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_sprintf")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1833| 
        ; call occurs [#_sprintf] ; [] |1833| 
        MOVL      XAR0,#44              ; [CPU_] |1833| 
	.dwpsn	file "../Source/prod.c",line 1835,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1835| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1833| 
	.dwpsn	file "../Source/prod.c",line 1835,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1835| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1835| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1835| 
        ; call occurs [#_scia_getparam] ; [] |1835| 
        MOVL      XAR0,#86              ; [CPU_] |1835| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1835,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1835| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_strtod")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1836,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1836| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1836,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1837,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1837| 
        MOV       AH,#0                 ; [CPU_] |1837| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1837| 
        MOVL      ACC,XAR6              ; [CPU_] |1837| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1837| 
        ; call occurs [#FS$$CMP] ; [] |1837| 
        CMPB      AL,#0                 ; [CPU_] |1837| 
        B         $C$L548,NEQ           ; [CPU_] |1837| 
        ; branchcc occurs ; [] |1837| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1838| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1838| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1838| 
$C$L548:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1840,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1840| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1840| 
        ; call occurs [#_scia_puts] ; [] |1840| 
	.dwpsn	file "../Source/prod.c",line 1841,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1841| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1841| 
        ; call occurs [#_scia_puts] ; [] |1841| 
	.dwpsn	file "../Source/prod.c",line 1843,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1843| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1843| 
        MOVL      XAR5,XAR1             ; [CPU_] |1843| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1843| 
        ; call occurs [#_scia_getparam] ; [] |1843| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1846| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1846| 
        ; call occurs [#_scia_puts] ; [] |1846| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1849,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1849| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1849,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1849| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1850| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1850| 
        MOVB      ACC,#0                ; [CPU_] |1850| 
        SUBB      ACC,#1                ; [CPU_] |1850| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1850| 
        B         $C$L551,EQ            ; [CPU_] |1850| 
        ; branchcc occurs ; [] |1850| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1851,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1851| 
        ; branch occurs ; [] |1851| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1852,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1852| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_delay_us")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1852| 
        ; call occurs [#_delay_us] ; [] |1852| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1851,column 14,is_stmt,isa 0
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1851| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1851| 
        CMPB      AL,#0                 ; [CPU_] |1851| 
        B         $C$L549,EQ            ; [CPU_] |1851| 
        ; branchcc occurs ; [] |1851| 
	.dwpsn	file "../Source/prod.c",line 1855,column 7,is_stmt,isa 0
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1855| 
        ; call occurs [#_ad7738_getraw] ; [] |1855| 
	.dwpsn	file "../Source/prod.c",line 1856,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1856| 
        ADDL      XAR4,ACC              ; [CPU_] |1856| 
        MOVL      XAR0,#20              ; [CPU_] |1856| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1856| 
        MOVL      XAR0,#20              ; [CPU_] |1856| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1856| 
        ASR64     ACC:P,16              ; [CPU_] |1856| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1856| 
        MOVL      XAR0,#20              ; [CPU_] |1856| 
        ASR64     ACC:P,16              ; [CPU_] |1856| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1856| 
        MOVL      XAR0,#20              ; [CPU_] |1856| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1856| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1856| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1856| 
        MOVL      *-SP[32],P            ; [CPU_] |1856| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1856| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1850| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1850| 
        MOVB      ACC,#0                ; [CPU_] |1850| 
        SUBB      ACC,#1                ; [CPU_] |1850| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1850| 
        B         $C$L550,NEQ           ; [CPU_] |1850| 
        ; branchcc occurs ; [] |1850| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1858,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1858| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1858| 
        ; call occurs [#_scia_puts] ; [] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1860| 
        MOVL      XAR0,#52              ; [CPU_] |1860| 
        MOVL      ACC,XAR1              ; [CPU_] |1860| 
        ADDB      ACC,#96               ; [CPU_] |1860| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1860| 
        MOVL      XAR0,#40              ; [CPU_] |1860| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1860| 
        MOV       T,*-SP[58]            ; [CPU_] |1860| 
        MOVB      AL,#10                ; [CPU_] |1860| 
        MPYU      ACC,T,AL              ; [CPU_] |1860| 
        ADDL      ACC,XAR6              ; [CPU_] |1860| 
        ADDB      ACC,#42               ; [CPU_] |1860| 
        MOVL      XAR4,ACC              ; [CPU_] |1860| 
        MOVL      XAR0,#42              ; [CPU_] |1860| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1862,column 6,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1862| 
        ; branch occurs ; [] |1862| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1945,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1945| 
        MOVB      AL,#40                ; [CPU_] |1945| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1945| 
        ; call occurs [#_lcd_puts] ; [] |1945| 
	.dwpsn	file "../Source/prod.c",line 1947,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1947| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1947| 
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1950| 
	.dwpsn	file "../Source/prod.c",line 1947,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1947| 
	.dwpsn	file "../Source/prod.c",line 1948,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1948| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1948| 
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1950| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1950| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1950| 
        MOVL      XAR0,#70              ; [CPU_] |1950| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1950| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1950| 
        MOV       ACC,AL << 1           ; [CPU_] |1950| 
        ADDL      ACC,XAR6              ; [CPU_] |1950| 
        MOVL      XAR4,ACC              ; [CPU_] |1950| 
        MOVL      XAR0,#44              ; [CPU_] |1950| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1950| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1950| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1950| 
        MOVL      XAR4,XAR1             ; [CPU_] |1950| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_sprintf")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1950| 
        ; call occurs [#_sprintf] ; [] |1950| 
	.dwpsn	file "../Source/prod.c",line 1953,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1953| 
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1950| 
	.dwpsn	file "../Source/prod.c",line 1953,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1953| 
        MOV       AL,#1024              ; [CPU_] |1953| 
        MOVL      XAR5,XAR1             ; [CPU_] |1953| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1953| 
        ; call occurs [#_scia_getparam] ; [] |1953| 
	.dwpsn	file "../Source/prod.c",line 1954,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1954| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1954| 
        ; call occurs [#_scia_puts] ; [] |1954| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_strtod")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1956,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1956| 
        MOV       AH,#0                 ; [CPU_] |1956| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1956| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1956| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1956| 
        ; call occurs [#FS$$CMP] ; [] |1956| 
        CMPB      AL,#0                 ; [CPU_] |1956| 
        B         $C$L553,NEQ           ; [CPU_] |1956| 
        ; branchcc occurs ; [] |1956| 
	.dwpsn	file "../Source/prod.c",line 1957,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1957| 
        MOV       AH,#16314             ; [CPU_] |1957| 
	.dwpsn	file "../Source/prod.c",line 1958,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1958| 
	.dwpsn	file "../Source/prod.c",line 1957,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1957| 
	.dwpsn	file "../Source/prod.c",line 1958,column 7,is_stmt,isa 0
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1958| 
        ; call occurs [#_scia_puts] ; [] |1958| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1960| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1960| 
        ; call occurs [#_scia_puts] ; [] |1960| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1962| 
        MOV       AL,#1024              ; [CPU_] |1962| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1962| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1962| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1962| 
        ; call occurs [#_scia_getparam] ; [] |1962| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1965| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1965| 
        ; call occurs [#_scia_puts] ; [] |1965| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1967,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1967| 
        MOV       *-SP[48],AL           ; [CPU_] |1967| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1968,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1968| 
        B         $C$L556,LEQ           ; [CPU_] |1968| 
        ; branchcc occurs ; [] |1968| 
	.dwpsn	file "../Source/prod.c",line 1970,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1970| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1970| 
        ; call occurs [#_shunt_switch] ; [] |1970| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1972,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1972| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_delay_us")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1972| 
        ; call occurs [#_delay_us] ; [] |1972| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1972| 
	.dwpsn	file "../Source/prod.c",line 1971,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1971| 
        MOVZ      AR0,AR6               ; [CPU_] |1971| 
        MOV       *-SP[47],AR6          ; [CPU_] |1971| 
        CMP       AR0,#-1               ; [CPU_] |1971| 
        B         $C$L555,NEQ           ; [CPU_] |1971| 
        ; branchcc occurs ; [] |1971| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1975,column 8,is_stmt,isa 0
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1975| 
        ; call occurs [#_maf_rst] ; [] |1975| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1977,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1977| 
        SPM       #0                    ; [CPU_] 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_delay_us")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1977| 
        ; call occurs [#_delay_us] ; [] |1977| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1980| 
	.dwpsn	file "../Source/prod.c",line 1981,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1981| 
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1980| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1980| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1981,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1981| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1982| 
        MOVB      ACC,#0                ; [CPU_] |1982| 
        SUBB      ACC,#1                ; [CPU_] |1982| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1982| 
        B         $C$L558,EQ            ; [CPU_] |1982| 
        ; branchcc occurs ; [] |1982| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1983,column 15,is_stmt,isa 0
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1983| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1983| 
        CMPB      AL,#0                 ; [CPU_] |1983| 
        B         $C$L560,EQ            ; [CPU_] |1983| 
        ; branchcc occurs ; [] |1983| 
	.dwpsn	file "../Source/prod.c",line 1987,column 8,is_stmt,isa 0
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1987| 
        ; call occurs [#_ad7738_getraw] ; [] |1987| 
	.dwpsn	file "../Source/prod.c",line 1988,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1988| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1988| 
        ADDL      XAR4,ACC              ; [CPU_] |1988| 
        MOVL      XAR0,#18              ; [CPU_] |1988| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1988| 
        MOVL      XAR0,#18              ; [CPU_] |1988| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1988| 
        ASR64     ACC:P,16              ; [CPU_] |1988| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1988| 
        MOVL      XAR0,#18              ; [CPU_] |1988| 
        ASR64     ACC:P,16              ; [CPU_] |1988| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1988| 
        MOVL      XAR0,#18              ; [CPU_] |1988| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1988| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1988| 
        MOVL      XAR0,#18              ; [CPU_] |1988| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1988| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1988| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1988| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1988| 
	.dwpsn	file "../Source/prod.c",line 1982,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1982| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1982| 
        MOVB      ACC,#0                ; [CPU_] |1982| 
        SUBB      ACC,#1                ; [CPU_] |1982| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1982| 
        B         $C$L557,NEQ           ; [CPU_] |1982| 
        ; branchcc occurs ; [] |1982| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1967,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1967| 
        ADDB      XAR1,#4               ; [CPU_] |1967| 
        MOV       AL,*-SP[48]           ; [CPU_] |1967| 
        CMPB      AL,#2                 ; [CPU_] |1967| 
        B         $C$L554,LT            ; [CPU_] |1967| 
        ; branchcc occurs ; [] |1967| 
	.dwpsn	file "../Source/prod.c",line 1992,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1992| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1992| 
        ; call occurs [#_shunt_switch] ; [] |1992| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1994,column 6,is_stmt,isa 0
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1994| 
        ; call occurs [#_maf_rst] ; [] |1994| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1997,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1997| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1997| 
        ; call occurs [#_scia_puts] ; [] |1997| 
	.dwpsn	file "../Source/prod.c",line 1999,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1999| 
        MOVB      AL,#10                ; [CPU_] |1999| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1999| 
        MOV       T,*-SP[58]            ; [CPU_] |1999| 
        MPYU      ACC,T,AL              ; [CPU_] |1999| 
        MOVL      XAR0,#88              ; [CPU_] |1999| 
        ADDL      ACC,XAR6              ; [CPU_] |1999| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1999| 
        MOV       AL,#16384             ; [CPU_] |1999| 
        MOV       AH,#17948             ; [CPU_] |1999| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1999| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1999| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1999| 
        ; call occurs [#FS$$MPY] ; [] |1999| 
        MOVL      XAR3,ACC              ; [CPU_] |1999| 
        MOVL      P,*-SP[28]            ; [CPU_] |1999| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1999| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1999| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1999| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1999| 
        ; call occurs [#LL$$TOFS] ; [] |1999| 
        MOVL      XAR0,#88              ; [CPU_] |1999| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1999| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1999| 
        MOVB      XAR1,#44              ; [CPU_] |1999| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1999| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1999| 
        ; call occurs [#FS$$MPY] ; [] |1999| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1999| 
        MOVL      ACC,XAR3              ; [CPU_] |1999| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1999| 
        ; call occurs [#FS$$DIV] ; [] |1999| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1999| 
        MOVB      XAR0,#96              ; [CPU_] |1999| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1999| 
	.dwpsn	file "../Source/prod.c",line 2001,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |2001| 
        MOVL      ACC,XAR1              ; [CPU_] |2001| 
        ADDB      ACC,#96               ; [CPU_] |2001| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2001| 
        MOVL      XAR0,#88              ; [CPU_] |2001| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2001| 
        MOVL      XAR0,#42              ; [CPU_] |2001| 
        ADDB      XAR4,#42              ; [CPU_] |2001| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2001| 
$C$L559:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2001| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |2001| 
        ; call occurs [#FS$$NEG] ; [] |2001| 
        MOVB      XAR0,#96              ; [CPU_] |2001| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |2001| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2001| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2001| 
        ; call occurs [#FS$$MPY] ; [] |2001| 
        MOVL      XAR0,#88              ; [CPU_] |2001| 
        MOVL      P,*-SP[32]            ; [CPU_] |2001| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2001| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2001| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2001| 
        ; call occurs [#LL$$TOFS] ; [] |2001| 
        MOVL      XAR0,#88              ; [CPU_] |2001| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2001| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2001| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2001| 
        ; call occurs [#FS$$MPY] ; [] |2001| 
        MOVL      XAR6,ACC              ; [CPU_] |2001| 
        MOV       AL,#16384             ; [CPU_] |2001| 
        MOV       AH,#17948             ; [CPU_] |2001| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2001| 
        MOVL      ACC,XAR6              ; [CPU_] |2001| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2001| 
        ; call occurs [#FS$$DIV] ; [] |2001| 
        MOVB      XAR0,#118             ; [CPU_] |2001| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2001| 
	.dwpsn	file "../Source/prod.c",line 2003,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |2003| 
        ; branch occurs ; [] |2003| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1984,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1984| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_delay_us")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1984| 
        ; call occurs [#_delay_us] ; [] |1984| 
	.dwpsn	file "../Source/prod.c",line 1983,column 15,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |1983| 
        ; branch occurs ; [] |1983| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1866,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1866| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1871,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1871| 
        MOVL      XAR0,#44              ; [CPU_] |1871| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1871| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1871| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1871| 
        MOVL      XAR4,XAR1             ; [CPU_] |1871| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_sprintf")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1871| 
        ; call occurs [#_sprintf] ; [] |1871| 
	.dwpsn	file "../Source/prod.c",line 1872,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1872| 
	.dwpsn	file "../Source/prod.c",line 1871,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1871| 
	.dwpsn	file "../Source/prod.c",line 1872,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1872| 
        MOV       AL,#1024              ; [CPU_] |1872| 
        MOVL      XAR5,XAR1             ; [CPU_] |1872| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1872| 
        ; call occurs [#_scia_getparam] ; [] |1872| 
        MOVL      XAR4,XAR1             ; [CPU_] |1872| 
	.dwpsn	file "../Source/prod.c",line 1873,column 7,is_stmt,isa 0
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_atoi")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1873| 
        ; call occurs [#_atoi] ; [] |1873| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1873| 
        MOVB      XAR0,#46              ; [CPU_] |1873| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1873| 
        MOVL      XAR0,#86              ; [CPU_] |1873| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1873| 
	.dwpsn	file "../Source/prod.c",line 1874,column 7,is_stmt,isa 0
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1874| 
        ; call occurs [#_scia_puts] ; [] |1874| 
	.dwpsn	file "../Source/prod.c",line 1876,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1876| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1876| 
        CMPB      AL,#2                 ; [CPU_] |1876| 
        B         $C$L587,LT            ; [CPU_] |1876| 
        ; branchcc occurs ; [] |1876| 
        CMPB      AL,#12                ; [CPU_] |1876| 
        B         $C$L587,GT            ; [CPU_] |1876| 
        ; branchcc occurs ; [] |1876| 
	.dwpsn	file "../Source/prod.c",line 1881,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1881| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1881| 
        ; call occurs [#_scia_puts] ; [] |1881| 
	.dwpsn	file "../Source/prod.c",line 1883,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1883| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1883| 
        MOVL      XAR0,#44              ; [CPU_] |1883| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1883| 
        ADDB      XAR7,#46              ; [CPU_] |1883| 
        MOV       AL,*XAR7              ; [CPU_] |1883| 
        MOV       *-SP[3],AL            ; [CPU_] |1883| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1883| 
        MOVL      XAR4,XAR1             ; [CPU_] |1883| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_sprintf")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1883| 
        ; call occurs [#_sprintf] ; [] |1883| 
	.dwpsn	file "../Source/prod.c",line 1884,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1884| 
	.dwpsn	file "../Source/prod.c",line 1883,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1883| 
	.dwpsn	file "../Source/prod.c",line 1884,column 6,is_stmt,isa 0
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1884| 
        ; call occurs [#_lcd_puts] ; [] |1884| 
	.dwpsn	file "../Source/prod.c",line 1887,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1887| 
	.dwpsn	file "../Source/prod.c",line 1887,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1887| 
	.dwpsn	file "../Source/prod.c",line 1887,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1887| 
        ; branch occurs ; [] |1887| 
$C$L563:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1888,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1888| 
        SUB       AL,*-SP[47]           ; [CPU_] |1888| 
        ADDB      AL,#1                 ; [CPU_] |1888| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1888| 
        ; call occurs [#I$$TOFS] ; [] |1888| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1888| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1888| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1888| 
        ; call occurs [#FS$$MPY] ; [] |1888| 
        MOVL      XAR0,#88              ; [CPU_] |1888| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1888| 
        MOV       AL,*-SP[47]           ; [CPU_] |1888| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1888| 
        ; call occurs [#I$$TOFS] ; [] |1888| 
        MOVL      XAR0,#88              ; [CPU_] |1888| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1888| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1888| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1888| 
        ; call occurs [#FS$$DIV] ; [] |1888| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1888| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1888| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1888| 
        ADDL      ACC,XAR1              ; [CPU_] |1888| 
        MOVL      XAR4,ACC              ; [CPU_] |1888| 
        MOVB      XAR0,#48              ; [CPU_] |1888| 
	.dwpsn	file "../Source/prod.c",line 1887,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1887| 
	.dwpsn	file "../Source/prod.c",line 1888,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1888| 
	.dwpsn	file "../Source/prod.c",line 1887,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1887| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1887,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1887| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1887| 
        MOV       *-SP[47],AL           ; [CPU_] |1887| 
        CMP       AL,*-SP[48]           ; [CPU_] |1887| 
        B         $C$L563,GT            ; [CPU_] |1887| 
        ; branchcc occurs ; [] |1887| 
	.dwpsn	file "../Source/prod.c",line 1893,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1893| 
        B         $C$L567,UNC           ; [CPU_] |1893| 
        ; branch occurs ; [] |1893| 
$C$L565:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1894| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1894| 
        MOVL      XAR0,#44              ; [CPU_] |1894| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1894| 
        ADDL      ACC,XAR1              ; [CPU_] |1894| 
        ADDB      ACC,#48               ; [CPU_] |1894| 
        MOVL      XAR1,ACC              ; [CPU_] |1894| 
        MOVB      AL,#1                 ; [CPU_] |1894| 
        ADD       AL,AR6                ; [CPU_] |1894| 
        MOV       *-SP[3],AL            ; [CPU_] |1894| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1894| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1894| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1894| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_sprintf")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1894| 
        ; call occurs [#_sprintf] ; [] |1894| 
        MOVL      XAR0,#44              ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1896,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1896| 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1896,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1896| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1896| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1896| 
        ; call occurs [#_scia_getparam] ; [] |1896| 
        CMPB      AL,#0                 ; [CPU_] |1896| 
        B         $C$L566,EQ            ; [CPU_] |1896| 
        ; branchcc occurs ; [] |1896| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_strtod")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1900,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1900| 
$C$L566:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1902| 
        ; call occurs [#_scia_puts] ; [] |1902| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1903| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1903| 
        ; call occurs [#_scia_puts] ; [] |1903| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1893,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1893| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1893,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1893| 
        B         $C$L565,GT            ; [CPU_] |1893| 
        ; branchcc occurs ; [] |1893| 
	.dwpsn	file "../Source/prod.c",line 1909,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1909| 
        B         $C$L572,UNC           ; [CPU_] |1909| 
        ; branch occurs ; [] |1909| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1910,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1910| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1910| 
        ADDL      ACC,XAR1              ; [CPU_] |1910| 
        ADDB      ACC,#48               ; [CPU_] |1910| 
        MOVL      XAR1,ACC              ; [CPU_] |1910| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1910| 
        MOVL      XAR0,#70              ; [CPU_] |1910| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1910| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1910| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1910| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1910| 
        ANDB      AL,#0x0f              ; [CPU_] |1910| 
        MOV       ACC,AL << 1           ; [CPU_] |1910| 
        ADDL      ACC,XAR7              ; [CPU_] |1910| 
        MOVL      XAR4,ACC              ; [CPU_] |1910| 
        MOVL      XAR0,#44              ; [CPU_] |1910| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1910| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1910| 
        MOVB      AL,#1                 ; [CPU_] |1910| 
        ADD       AL,AR6                ; [CPU_] |1910| 
        MOV       *-SP[7],AL            ; [CPU_] |1910| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1910| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_sprintf")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1910| 
        ; call occurs [#_sprintf] ; [] |1910| 
        MOVL      XAR0,#44              ; [CPU_] |1910| 
	.dwpsn	file "../Source/prod.c",line 1914,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1914| 
	.dwpsn	file "../Source/prod.c",line 1910,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1910| 
	.dwpsn	file "../Source/prod.c",line 1914,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1914| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1914| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1914| 
        ; call occurs [#_scia_getparam] ; [] |1914| 
	.dwpsn	file "../Source/prod.c",line 1915,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1915| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1915| 
        ; call occurs [#_scia_puts] ; [] |1915| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1918,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1918| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1918,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1918| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1919,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1919| 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1919,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1919| 
        MOVB      ACC,#0                ; [CPU_] |1919| 
        SUBB      ACC,#1                ; [CPU_] |1919| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1919| 
        B         $C$L571,EQ            ; [CPU_] |1919| 
        ; branchcc occurs ; [] |1919| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1920,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1920| 
        ; branch occurs ; [] |1920| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1921,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1921| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_delay_us")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1921| 
        ; call occurs [#_delay_us] ; [] |1921| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1920,column 15,is_stmt,isa 0
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1920| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1920| 
        CMPB      AL,#0                 ; [CPU_] |1920| 
        B         $C$L569,EQ            ; [CPU_] |1920| 
        ; branchcc occurs ; [] |1920| 
	.dwpsn	file "../Source/prod.c",line 1924,column 8,is_stmt,isa 0
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1924| 
        ; call occurs [#_ad7738_getraw] ; [] |1924| 
	.dwpsn	file "../Source/prod.c",line 1925,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1925| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1925| 
        ADDL      XAR4,ACC              ; [CPU_] |1925| 
        MOVL      XAR0,#16              ; [CPU_] |1925| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1925| 
        MOVL      XAR0,#16              ; [CPU_] |1925| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1925| 
        ASR64     ACC:P,16              ; [CPU_] |1925| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1925| 
        MOVL      XAR0,#16              ; [CPU_] |1925| 
        ASR64     ACC:P,16              ; [CPU_] |1925| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1925| 
        MOVL      XAR0,#16              ; [CPU_] |1925| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1925| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1925| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1925| 
        MOVL      *-SP[32],P            ; [CPU_] |1925| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1925| 
	.dwpsn	file "../Source/prod.c",line 1919,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1919| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1919| 
        MOVB      ACC,#0                ; [CPU_] |1919| 
        SUBB      ACC,#1                ; [CPU_] |1919| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1919| 
        B         $C$L570,NEQ           ; [CPU_] |1919| 
        ; branchcc occurs ; [] |1919| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1927,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1927| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1927| 
        ; call occurs [#_scia_puts] ; [] |1927| 
	.dwpsn	file "../Source/prod.c",line 1928,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1928| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1928| 
        MOV       *-SP[2],#0            ; [CPU_] |1928| 
        MOV       *-SP[1],#0            ; [CPU_] |1928| 
        MOVL      P,*-SP[32]            ; [CPU_] |1928| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1928| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1928| 
        ; call occurs [#LL$$DIV] ; [] |1928| 
        ADDB      XAR1,#24              ; [CPU_] |1928| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1928| 
	.dwpsn	file "../Source/prod.c",line 1909,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1909| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1909,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1909| 
        B         $C$L568,GT            ; [CPU_] |1909| 
        ; branchcc occurs ; [] |1909| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1932,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1932| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1932| 
        ; branch occurs ; [] |1932| 
$C$L573:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1933,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1933| 
        ADDL      XAR1,ACC              ; [CPU_] |1933| 
        MOVB      XAR0,#48              ; [CPU_] |1933| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1933| 
        MOVB      XAR0,#50              ; [CPU_] |1933| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1933| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1933| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1933| 
        ; call occurs [#FS$$SUB] ; [] |1933| 
        MOVL      XAR0,#88              ; [CPU_] |1933| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1933| 
        MOVB      XAR0,#74              ; [CPU_] |1933| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1933| 
        MOVB      XAR0,#72              ; [CPU_] |1933| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1933| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1933| 
        ; call occurs [#L$$TOFS] ; [] |1933| 
        MOVL      XAR0,#88              ; [CPU_] |1933| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1933| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1933| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1933| 
        ; call occurs [#FS$$DIV] ; [] |1933| 
        MOVL      XAR0,#42              ; [CPU_] |1933| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1933| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1933| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1933| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1933| 
        ; call occurs [#FS$$DIV] ; [] |1933| 
        MOVB      XAR0,#96              ; [CPU_] |1933| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1933| 
	.dwpsn	file "../Source/prod.c",line 1937,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1937| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1937| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1937| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1937| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1937| 
        ; call occurs [#FS$$MPY] ; [] |1937| 
        MOVL      XAR0,#88              ; [CPU_] |1937| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1937| 
        MOVB      XAR0,#72              ; [CPU_] |1937| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1937| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1937| 
        ; call occurs [#L$$TOFS] ; [] |1937| 
        MOVL      XAR0,#88              ; [CPU_] |1937| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1937| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1937| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1937| 
        ; call occurs [#FS$$MPY] ; [] |1937| 
        MOVB      XAR0,#48              ; [CPU_] |1937| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1937| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1937| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1937| 
        ; call occurs [#FS$$SUB] ; [] |1937| 
        MOVB      XAR0,#118             ; [CPU_] |1937| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1937| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1932,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1932| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1941,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1941| 
        CMP       AL,*-SP[48]           ; [CPU_] |1941| 
        B         $C$L573,GT            ; [CPU_] |1941| 
        ; branchcc occurs ; [] |1941| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 2012,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2012| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |2012| 
        MOV       AL,#1024              ; [CPU_] |2012| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2012| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2012| 
        ; call occurs [#_scia_getparam] ; [] |2012| 
	.dwpsn	file "../Source/prod.c",line 2015,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |2015| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2015| 
        ; call occurs [#_scia_puts] ; [] |2015| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2017,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2017| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |2017| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 2018,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2018| 
        B         $C$L578,LEQ           ; [CPU_] |2018| 
        ; branchcc occurs ; [] |2018| 
	.dwpsn	file "../Source/prod.c",line 2020,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2020| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2020| 
        ; call occurs [#_shunt_switch] ; [] |2020| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 2022,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2022| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_delay_us")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2022| 
        ; call occurs [#_delay_us] ; [] |2022| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2022| 
	.dwpsn	file "../Source/prod.c",line 2021,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2021| 
        MOVZ      AR0,AR6               ; [CPU_] |2021| 
        MOV       *-SP[47],AR6          ; [CPU_] |2021| 
        CMP       AR0,#-1               ; [CPU_] |2021| 
        B         $C$L577,NEQ           ; [CPU_] |2021| 
        ; branchcc occurs ; [] |2021| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2025,column 7,is_stmt,isa 0
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2025| 
        ; call occurs [#_maf_rst] ; [] |2025| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2027,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2027| 
        SPM       #0                    ; [CPU_] 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_delay_us")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2027| 
        ; call occurs [#_delay_us] ; [] |2027| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 2030,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |2030| 
	.dwpsn	file "../Source/prod.c",line 2031,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2031| 
	.dwpsn	file "../Source/prod.c",line 2030,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2030| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2030| 
	.dwpsn	file "../Source/prod.c",line 2032,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2032| 
	.dwpsn	file "../Source/prod.c",line 2031,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2031| 
	.dwpsn	file "../Source/prod.c",line 2032,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2032| 
        MOVB      ACC,#0                ; [CPU_] |2032| 
        SUBB      ACC,#1                ; [CPU_] |2032| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2032| 
        B         $C$L580,EQ            ; [CPU_] |2032| 
        ; branchcc occurs ; [] |2032| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 2033,column 14,is_stmt,isa 0
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2033| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2033| 
        CMPB      AL,#0                 ; [CPU_] |2033| 
        B         $C$L586,EQ            ; [CPU_] |2033| 
        ; branchcc occurs ; [] |2033| 
	.dwpsn	file "../Source/prod.c",line 2037,column 7,is_stmt,isa 0
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2037| 
        ; call occurs [#_ad7738_getraw] ; [] |2037| 
	.dwpsn	file "../Source/prod.c",line 2038,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2038| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2038| 
        ADDL      XAR4,ACC              ; [CPU_] |2038| 
        MOVL      XAR0,#14              ; [CPU_] |2038| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2038| 
        MOVL      XAR0,#14              ; [CPU_] |2038| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2038| 
        ASR64     ACC:P,16              ; [CPU_] |2038| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2038| 
        MOVL      XAR0,#14              ; [CPU_] |2038| 
        ASR64     ACC:P,16              ; [CPU_] |2038| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2038| 
        MOVL      XAR0,#14              ; [CPU_] |2038| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2038| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2038| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2038| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2038| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2038| 
	.dwpsn	file "../Source/prod.c",line 2032,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2032| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2032| 
        MOVB      ACC,#0                ; [CPU_] |2032| 
        SUBB      ACC,#1                ; [CPU_] |2032| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2032| 
        B         $C$L579,NEQ           ; [CPU_] |2032| 
        ; branchcc occurs ; [] |2032| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2040,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2040| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2040| 
        MOV       *-SP[2],#0            ; [CPU_] |2040| 
        MOV       *-SP[1],#0            ; [CPU_] |2040| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2040| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2040| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2040| 
        ; call occurs [#LL$$DIV] ; [] |2040| 
	.dwpsn	file "../Source/prod.c",line 2043,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2043| 
        MOVB      XAR0,#46              ; [CPU_] |2043| 
	.dwpsn	file "../Source/prod.c",line 2040,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2040| 
	.dwpsn	file "../Source/prod.c",line 2042,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2042| 
	.dwpsn	file "../Source/prod.c",line 2040,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2040| 
	.dwpsn	file "../Source/prod.c",line 2043,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2043| 
        CMPB      AL,#2                 ; [CPU_] |2043| 
        B         $C$L583,LEQ           ; [CPU_] |2043| 
        ; branchcc occurs ; [] |2043| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2044,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2044| 
        ; branch occurs ; [] |2044| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2045,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2045| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2044,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2044| 
        B         $C$L583,HIS           ; [CPU_] |2044| 
        ; branchcc occurs ; [] |2044| 
        MOVB      AL,#1                 ; [CPU_] |2044| 
        ADD       AL,AR4                ; [CPU_] |2044| 
        MOVZ      AR5,AL                ; [CPU_] |2044| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2044| 
        ADDL      ACC,XAR1              ; [CPU_] |2044| 
        MOVL      XAR6,ACC              ; [CPU_] |2044| 
        MOVB      XAR0,#72              ; [CPU_] |2044| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2044| 
        MOVL      XAR0,#12              ; [CPU_] |2044| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2044| 
        MOVL      XAR0,#12              ; [CPU_] |2044| 
        ASR64     ACC:P,16              ; [CPU_] |2044| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2044| 
        MOVL      XAR0,#12              ; [CPU_] |2044| 
        ASR64     ACC:P,16              ; [CPU_] |2044| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2044| 
        MOVL      *-SP[4],P             ; [CPU_] |2044| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2044| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2044| 
        MOVL      P,*-SP[32]            ; [CPU_] |2044| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1277, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2044| 
        ; call occurs [#LL$$CMP] ; [] |2044| 
        CMPB      AL,#0                 ; [CPU_] |2044| 
        B         $C$L581,GT            ; [CPU_] |2044| 
        ; branchcc occurs ; [] |2044| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2048,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2048| 
        ADDL      ACC,XAR1              ; [CPU_] |2048| 
        MOVL      XAR4,ACC              ; [CPU_] |2048| 
        MOVL      XAR0,#88              ; [CPU_] |2048| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2048| 
        MOVB      XAR0,#96              ; [CPU_] |2048| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2048| 
        MOVL      XAR0,#42              ; [CPU_] |2048| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2048| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2048| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2048| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2048| 
        ; call occurs [#FS$$MPY] ; [] |2048| 
        MOVL      XAR0,#36              ; [CPU_] |2048| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2048| 
        MOVL      P,*XAR3++             ; [CPU_] |2048| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2048| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2048| 
        ; call occurs [#LL$$TOFS] ; [] |2048| 
        MOVL      XAR0,#36              ; [CPU_] |2048| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2048| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2048| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2048| 
        ; call occurs [#FS$$MPY] ; [] |2048| 
        MOVL      XAR0,#88              ; [CPU_] |2048| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2048| 
        MOVB      XAR1,#118             ; [CPU_] |2048| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2048| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2048| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2048| 
        ; call occurs [#FS$$ADD] ; [] |2048| 
        MOVL      XAR0,#38              ; [CPU_] |2048| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2048| 
        MOVL      XAR0,#38              ; [CPU_] |2048| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2048| 
	.dwpsn	file "../Source/prod.c",line 2017,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |2017| 
	.dwpsn	file "../Source/prod.c",line 2048,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2048| 
        MOV       AL,*-SP[48]           ; [CPU_] |2048| 
	.dwpsn	file "../Source/prod.c",line 2017,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2017| 
        B         $C$L576,LT            ; [CPU_] |2017| 
        ; branchcc occurs ; [] |2017| 
	.dwpsn	file "../Source/prod.c",line 2052,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2052| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2052| 
        ; call occurs [#_shunt_switch] ; [] |2052| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2054,column 5,is_stmt,isa 0
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2054| 
        ; call occurs [#_maf_rst] ; [] |2054| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2057,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2057| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2057| 
        ; call occurs [#_scia_puts] ; [] |2057| 
	.dwpsn	file "../Source/prod.c",line 2059,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2059| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2059| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2059| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2059| 
        ; call occurs [#FS$$SUB] ; [] |2059| 
        MOVL      XAR0,#36              ; [CPU_] |2059| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2059| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2059| 
        MOVB      XAR0,#140             ; [CPU_] |2059| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2059| 
	.dwpsn	file "../Source/prod.c",line 2062,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2062| 
        MOV       AL,#0                 ; [CPU_] |2062| 
        MOV       AH,#0                 ; [CPU_] |2062| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2062| 
	.dwpsn	file "../Source/prod.c",line 2063,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2063| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2063| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2063| 
	.dwpsn	file "../Source/prod.c",line 2064,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2064| 
        MOV       AL,#0                 ; [CPU_] |2064| 
        MOV       AH,#0                 ; [CPU_] |2064| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2064| 
	.dwpsn	file "../Source/prod.c",line 2065,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2065| 
        MOV       AL,*-SP[58]           ; [CPU_] |2065| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2065| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2068,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2068| 
        MOVB      AL,#152               ; [CPU_] |2068| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2068| 
        MOV       T,*-SP[57]            ; [CPU_] |2068| 
        MOVL      XAR7,XAR4             ; [CPU_] |2068| 
        MPYU      ACC,T,AL              ; [CPU_] |2068| 
        ADDL      ACC,XAR6              ; [CPU_] |2068| 
        ADDB      ACC,#82               ; [CPU_] |2068| 
        MOVL      XAR5,ACC              ; [CPU_] |2068| 
        MOVL      XAR0,#42              ; [CPU_] |2068| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2068| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2068| 
        MOV       AL,*-SP[57]           ; [CPU_] |2068| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2071,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2071| 
	.dwpsn	file "../Source/prod.c",line 2073,column 5,is_stmt,isa 0
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2073| 
        ; call occurs [#_ad7738_setcal] ; [] |2073| 
        MOVL      XAR0,#78              ; [CPU_] |2073| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2073| 
	.dwpsn	file "../Source/prod.c",line 2074,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2074| 
        MOVL      XAR1,ACC              ; [CPU_] |2074| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2074| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2074| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2074| 
	.dwpsn	file "../Source/prod.c",line 2075,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2075| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2075| 
        ; call occurs [#_ad7738_resetvall] ; [] |2075| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2078,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2078| 
        MOV       AL,*-SP[60]           ; [CPU_] |2078| 
        MOVL      XAR0,#44              ; [CPU_] |2078| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2078| 
        MOV       *-SP[3],AL            ; [CPU_] |2078| 
        MOV       AL,*-SP[59]           ; [CPU_] |2078| 
        MOV       *-SP[4],AL            ; [CPU_] |2078| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2078| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2078| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_sprintf")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2078| 
        ; call occurs [#_sprintf] ; [] |2078| 
        MOVL      XAR4,XAR1             ; [CPU_] |2078| 
	.dwpsn	file "../Source/prod.c",line 2080,column 5,is_stmt,isa 0
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2080| 
        ; call occurs [#_scia_puts] ; [] |2080| 
        MOV       AL,*-SP[57]           ; [CPU_] |2080| 
	.dwpsn	file "../Source/prod.c",line 2081,column 5,is_stmt,isa 0
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2081| 
        ; call occurs [#_print_sensor] ; [] |2081| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2084,column 5,is_stmt,isa 0
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2084| 
        ; call occurs [#_lcd_clear] ; [] |2084| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2085,column 5,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_update_units")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2085| 
        ; call occurs [#_update_units] ; [] |2085| 
	.dwpsn	file "../Source/prod.c",line 2086,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2086| 
        ; branch occurs ; [] |2086| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 2034,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2034| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_delay_us")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2034| 
        ; call occurs [#_delay_us] ; [] |2034| 
	.dwpsn	file "../Source/prod.c",line 2033,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |2033| 
        ; branch occurs ; [] |2033| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1878| 
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1878| 
        ; call occurs [#_scia_puts] ; [] |1878| 
	.dwpsn	file "../Source/prod.c",line 1870,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1870| 
        ; branch occurs ; [] |1870| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1808,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1808| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1808| 
        ; call occurs [#_scia_puts] ; [] |1808| 
	.dwpsn	file "../Source/prod.c",line 1802,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1802| 
        ; branch occurs ; [] |1802| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1723| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1723| 
        ; call occurs [#_scia_puts] ; [] |1723| 
	.dwpsn	file "../Source/prod.c",line 1713,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1713| 
        ; branch occurs ; [] |1713| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1706,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1706| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1706| 
        ; call occurs [#_scia_puts] ; [] |1706| 
	.dwpsn	file "../Source/prod.c",line 1698,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1698| 
        ; branch occurs ; [] |1698| 
$C$L591:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1420,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1420| 
        B         $C$L625,LO            ; [CPU_] |1420| 
        ; branchcc occurs ; [] |1420| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1424,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1424| 
        CMPB      AL,#67                ; [CPU_] |1424| 
        B         $C$L592,EQ            ; [CPU_] |1424| 
        ; branchcc occurs ; [] |1424| 
        CMPB      AL,#68                ; [CPU_] |1424| 
        B         $C$L625,NEQ           ; [CPU_] |1424| 
        ; branchcc occurs ; [] |1424| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1429,column 5,is_stmt,isa 0
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_atoi")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1429| 
        ; call occurs [#_atoi] ; [] |1429| 
        MOV       *-SP[58],AL           ; [CPU_] |1429| 
	.dwpsn	file "../Source/prod.c",line 1431,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1431| 
        CMPB      AL,#4                 ; [CPU_] |1431| 
        B         $C$L625,HIS           ; [CPU_] |1431| 
        ; branchcc occurs ; [] |1431| 
	.dwpsn	file "../Source/prod.c",line 1436,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1436| 
        MOV       AH,#0                 ; [CPU_] |1436| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1436| 
	.dwpsn	file "../Source/prod.c",line 1437,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1437| 
        MOV       AH,#0                 ; [CPU_] |1437| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1437| 
        MOV       AL,*-SP[59]           ; [CPU_] |1437| 
	.dwpsn	file "../Source/prod.c",line 1438,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1438| 
        B         $C$L596,LOS           ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1438,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1438| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1439,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1439| 
        CMPB      AL,#88                ; [CPU_] |1439| 
        B         $C$L594,NEQ           ; [CPU_] |1439| 
        ; branchcc occurs ; [] |1439| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_strtod")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1441,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1441| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1444,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1444| 
        B         $C$L595,NEQ           ; [CPU_] |1444| 
        ; branchcc occurs ; [] |1444| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_strtod")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1446,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1446| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1438,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1438| 
        MOV       AL,*-SP[59]           ; [CPU_] |1438| 
        ADDB      XAR1,#1               ; [CPU_] |1438| 
        CMP       AL,*-SP[47]           ; [CPU_] |1438| 
        B         $C$L593,HI            ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1451| 
	.dwpsn	file "../Source/prod.c",line 1434,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1434| 
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1451| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1451| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1451| 
        ; call occurs [#FS$$CMP] ; [] |1451| 
        CMPB      AL,#0                 ; [CPU_] |1451| 
        B         $C$L625,EQ            ; [CPU_] |1451| 
        ; branchcc occurs ; [] |1451| 
	.dwpsn	file "../Source/prod.c",line 1455,column 5,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1455| 
        ; call occurs [#_lcd_clear] ; [] |1455| 
	.dwpsn	file "../Source/prod.c",line 1456,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1456| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1456| 
        MOVL      XAR0,#44              ; [CPU_] |1456| 
        ADD       AL,*-SP[58]           ; [CPU_] |1456| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1456| 
        MOVZ      AR1,AL                ; [CPU_] |1456| 
        MOV       *-SP[59],AL           ; [CPU_] |1456| 
        MOV       *-SP[3],AL            ; [CPU_] |1456| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1456| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_sprintf")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1456| 
        ; call occurs [#_sprintf] ; [] |1456| 
        MOVL      XAR0,#44              ; [CPU_] |1456| 
	.dwpsn	file "../Source/prod.c",line 1457,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1457| 
	.dwpsn	file "../Source/prod.c",line 1456,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1456| 
	.dwpsn	file "../Source/prod.c",line 1457,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1457| 
        ; call occurs [#_lcd_puts] ; [] |1457| 
	.dwpsn	file "../Source/prod.c",line 1458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1458| 
        MOVL      XAR0,#44              ; [CPU_] |1458| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1458| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1458| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1458| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1458| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_sprintf")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1458| 
        ; call occurs [#_sprintf] ; [] |1458| 
        MOVL      XAR0,#44              ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1459,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1459| 
	.dwpsn	file "../Source/prod.c",line 1458,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1459,column 5,is_stmt,isa 0
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1459| 
        ; call occurs [#_lcd_puts] ; [] |1459| 
	.dwpsn	file "../Source/prod.c",line 1460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1460| 
        MOVL      XAR0,#44              ; [CPU_] |1460| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1460| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1460| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1460| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1460| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_sprintf")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1460| 
        ; call occurs [#_sprintf] ; [] |1460| 
        MOVL      XAR0,#44              ; [CPU_] |1460| 
	.dwpsn	file "../Source/prod.c",line 1461,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1461| 
	.dwpsn	file "../Source/prod.c",line 1460,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1460| 
	.dwpsn	file "../Source/prod.c",line 1461,column 5,is_stmt,isa 0
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1461| 
        ; call occurs [#_lcd_puts] ; [] |1461| 
	.dwpsn	file "../Source/prod.c",line 1463,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1463| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1463| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1463| 
        MOVL      XAR0,#38              ; [CPU_] |1463| 
        ADDB      ACC,#1                ; [CPU_] |1463| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1463| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1463| 
        CMPB      AL,#67                ; [CPU_] |1463| 
        B         $C$L619,EQ            ; [CPU_] |1463| 
        ; branchcc occurs ; [] |1463| 
        CMPB      AL,#68                ; [CPU_] |1463| 
        B         $C$L625,NEQ           ; [CPU_] |1463| 
        ; branchcc occurs ; [] |1463| 
	.dwpsn	file "../Source/prod.c",line 1516,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1516| 
        MOV       AH,#16672             ; [CPU_] |1516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1516| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1516| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1516| 
        ; call occurs [#FS$$CMP] ; [] |1516| 
        CMPB      AL,#0                 ; [CPU_] |1516| 
        B         $C$L618,GT            ; [CPU_] |1516| 
        ; branchcc occurs ; [] |1516| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1516| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1516| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1516| 
        ; call occurs [#FS$$CMP] ; [] |1516| 
        CMPB      AL,#0                 ; [CPU_] |1516| 
        B         $C$L618,LT            ; [CPU_] |1516| 
        ; branchcc occurs ; [] |1516| 
        MOV       AL,#0                 ; [CPU_] |1516| 
        MOV       AH,#16672             ; [CPU_] |1516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1516| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1516| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1516| 
        ; call occurs [#FS$$CMP] ; [] |1516| 
        CMPB      AL,#0                 ; [CPU_] |1516| 
        B         $C$L618,GT            ; [CPU_] |1516| 
        ; branchcc occurs ; [] |1516| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1516| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1516| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1516| 
        ; call occurs [#FS$$CMP] ; [] |1516| 
        CMPB      AL,#0                 ; [CPU_] |1516| 
        B         $C$L618,LT            ; [CPU_] |1516| 
        ; branchcc occurs ; [] |1516| 
	.dwpsn	file "../Source/prod.c",line 1524,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1524| 
        MOVB      AL,#0                 ; [CPU_] |1524| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1524| 
        ; call occurs [#_lcd_puts] ; [] |1524| 
	.dwpsn	file "../Source/prod.c",line 1526,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1526| 
        MOVL      XAR0,#44              ; [CPU_] |1526| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1526| 
        MOV       *-SP[3],AR1           ; [CPU_] |1526| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1526| 
        MOVL      XAR4,XAR1             ; [CPU_] |1526| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("_sprintf")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1526| 
        ; call occurs [#_sprintf] ; [] |1526| 
        MOVL      XAR4,XAR1             ; [CPU_] |1526| 
	.dwpsn	file "../Source/prod.c",line 1529,column 6,is_stmt,isa 0
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1529| 
        ; call occurs [#_scia_puts] ; [] |1529| 
	.dwpsn	file "../Source/prod.c",line 1530,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1530| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1530| 
        ; call occurs [#_scia_puts] ; [] |1530| 
	.dwpsn	file "../Source/prod.c",line 1531,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1531| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1531| 
        ; call occurs [#_dac_setmode] ; [] |1531| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1534,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1534| 
	.dwpsn	file "../Source/prod.c",line 1535,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1535| 
        MOV       AH,#0                 ; [CPU_] |1535| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1535| 
        MOVL      ACC,XAR1              ; [CPU_] |1535| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1535| 
        ; call occurs [#FS$$CMP] ; [] |1535| 
        CMPB      AL,#0                 ; [CPU_] |1535| 
        B         $C$L598,GEQ           ; [CPU_] |1535| 
        ; branchcc occurs ; [] |1535| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1535| 
        MOVL      XAR0,#88              ; [CPU_] |1535| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1535| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1535| 
        B         $C$L599,UNC           ; [CPU_] |1535| 
        ; branch occurs ; [] |1535| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1535| 
        MOVL      XAR0,#88              ; [CPU_] |1535| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1535| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1535| 
$C$L599:    
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1535| 
        ; call occurs [#FS$$MPY] ; [] |1535| 
        MOVL      XAR0,#88              ; [CPU_] |1535| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1535| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1535| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1535| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1535| 
        ; call occurs [#FS$$ADD] ; [] |1535| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1535| 
        ; call occurs [#FS$$TOLL] ; [] |1535| 
	.dwpsn	file "../Source/prod.c",line 1541,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1541| 
	.dwpsn	file "../Source/prod.c",line 1535,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1535| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1535| 
	.dwpsn	file "../Source/prod.c",line 1541,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1541| 
        CMP64     ACC:P                 ; [CPU_] |1541| 
        B         $C$L601,LEQ           ; [CPU_] |1541| 
        ; branchcc occurs ; [] |1541| 
	.dwpsn	file "../Source/prod.c",line 1543,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1543| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1543| 
        MOV       *-SP[2],#0            ; [CPU_] |1543| 
        MOV       *-SP[1],#0            ; [CPU_] |1543| 
        MOVL      P,*-SP[32]            ; [CPU_] |1543| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1543| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1323, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1543| 
        ; call occurs [#LL$$CMP] ; [] |1543| 
        CMPB      AL,#0                 ; [CPU_] |1543| 
        B         $C$L600,GEQ           ; [CPU_] |1543| 
        ; branchcc occurs ; [] |1543| 
	.dwpsn	file "../Source/prod.c",line 1546,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1546| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1546| 
        MOV       AL,*-SP[32]           ; [CPU_] |1546| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1546| 
        B         $C$L602,UNC           ; [CPU_] |1546| 
        ; branch occurs ; [] |1546| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1544,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1544| 
	.dwpsn	file "../Source/prod.c",line 1545,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1545| 
        ; branch occurs ; [] |1545| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1542,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1542| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1549,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1549| 
        MOVL      XAR0,#44              ; [CPU_] |1549| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1549| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1549| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1549| 
        MOVL      XAR4,XAR1             ; [CPU_] |1549| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_sprintf")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1549| 
        ; call occurs [#_sprintf] ; [] |1549| 
        MOVL      XAR4,XAR1             ; [CPU_] |1549| 
	.dwpsn	file "../Source/prod.c",line 1550,column 7,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1550| 
        ; call occurs [#_scia_puts] ; [] |1550| 
	.dwpsn	file "../Source/prod.c",line 1551,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1551| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1551| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1554,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1554| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1554| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1554| 
        ; call occurs [#_mcbsp_xmit] ; [] |1554| 
	.dwpsn	file "../Source/prod.c",line 1555,column 8,is_stmt,isa 0
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1555| 
        ; call occurs [#_latch_dac] ; [] |1555| 
	.dwpsn	file "../Source/prod.c",line 1558,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1558| 
        MOVL      XAR4,XAR1             ; [CPU_] |1558| 
        MOVL      XAR5,XAR1             ; [CPU_] |1558| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1558| 
        ; call occurs [#_scia_getparam] ; [] |1558| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1560,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1560| 
        CMPB      AL,#45                ; [CPU_] |1560| 
        B         $C$L604,EQ            ; [CPU_] |1560| 
        ; branchcc occurs ; [] |1560| 
        CMPB      AL,#83                ; [CPU_] |1560| 
        B         $C$L609,EQ            ; [CPU_] |1560| 
        ; branchcc occurs ; [] |1560| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1567,column 8,is_stmt,isa 0
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_atoi")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1567| 
        ; call occurs [#_atoi] ; [] |1567| 
        CMPB      AL,#0                 ; [CPU_] |1567| 
	.dwpsn	file "../Source/prod.c",line 1569,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1569| 
	.dwpsn	file "../Source/prod.c",line 1572,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1572| 
        CMPB      AH,#43                ; [CPU_] |1572| 
        B         $C$L605,EQ            ; [CPU_] |1572| 
        ; branchcc occurs ; [] |1572| 
	.dwpsn	file "../Source/prod.c",line 1579,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1579| 
        B         $C$L608,NEQ           ; [CPU_] |1579| 
        ; branchcc occurs ; [] |1579| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1581,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1581| 
        B         $C$L606,HI            ; [CPU_] |1581| 
        ; branchcc occurs ; [] |1581| 
	.dwpsn	file "../Source/prod.c",line 1582,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1582| 
	.dwpsn	file "../Source/prod.c",line 1583,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1583| 
        ; branch occurs ; [] |1583| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1574,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1574| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1574| 
        MOV       AH,#65535             ; [CPU_] |1574| 
        SUB       AH,AL                 ; [CPU_] |1574| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1574| 
        B         $C$L607,HIS           ; [CPU_] |1574| 
        ; branchcc occurs ; [] |1574| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1577,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1577| 
        B         $C$L608,UNC           ; [CPU_] |1577| 
        ; branch occurs ; [] |1577| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1575,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1575| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1553,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1553| 
        B         $C$L603,NEQ           ; [CPU_] |1553| 
        ; branchcc occurs ; [] |1553| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1589,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1589| 
        MOVL      XAR0,#86              ; [CPU_] |1589| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1589| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1589| 
        MOVL      XAR0,#86              ; [CPU_] |1589| 
        MOV       AL,*XAR7              ; [CPU_] |1589| 
        MOV       *-SP[3],AL            ; [CPU_] |1589| 
        ADDB      XAR7,#1               ; [CPU_] |1589| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1589| 
        MOVL      XAR0,#44              ; [CPU_] |1589| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1589| 
        MOVL      XAR4,XAR1             ; [CPU_] |1589| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_sprintf")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1589| 
        ; call occurs [#_sprintf] ; [] |1589| 
        MOVL      XAR4,XAR1             ; [CPU_] |1589| 
	.dwpsn	file "../Source/prod.c",line 1590,column 7,is_stmt,isa 0
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1590| 
        ; call occurs [#_scia_puts] ; [] |1590| 
	.dwpsn	file "../Source/prod.c",line 1533,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1590,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1590| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1590| 
	.dwpsn	file "../Source/prod.c",line 1533,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1533| 
        SUBB      XAR6,#1               ; [CPU_U] |1533| 
        ADDB      ACC,#2                ; [CPU_] |1533| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1533| 
        MOVZ      AR0,AR6               ; [CPU_] |1533| 
        MOV       *-SP[47],AR6          ; [CPU_] |1533| 
        CMP       AR0,#-1               ; [CPU_] |1533| 
        B         $C$L597,NEQ           ; [CPU_] |1533| 
        ; branchcc occurs ; [] |1533| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1593,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1593| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1593| 
        ; call occurs [#FS$$TOU] ; [] |1593| 
        MOV       *-SP[33],AL           ; [CPU_] |1593| 
	.dwpsn	file "../Source/prod.c",line 1595,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1595| 
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1595| 
        ; call occurs [#_scia_puts] ; [] |1595| 
	.dwpsn	file "../Source/prod.c",line 1596,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1596| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1596| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1596| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1596| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1599,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1599| 
        MOV       AH,*-SP[48]           ; [CPU_] |1599| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1599| 
        ; call occurs [#_mcbsp_xmit] ; [] |1599| 
	.dwpsn	file "../Source/prod.c",line 1600,column 7,is_stmt,isa 0
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1600| 
        ; call occurs [#_latch_dac] ; [] |1600| 
        MOVL      XAR0,#86              ; [CPU_] |1600| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1600| 
	.dwpsn	file "../Source/prod.c",line 1603,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1603| 
        MOVL      XAR4,XAR5             ; [CPU_] |1603| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1603| 
        ; call occurs [#_scia_getparam] ; [] |1603| 
	.dwpsn	file "../Source/prod.c",line 1608,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1608| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1608| 
        CMPB      AL,#83                ; [CPU_] |1608| 
        B         $C$L615,EQ            ; [CPU_] |1608| 
        ; branchcc occurs ; [] |1608| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1611,column 7,is_stmt,isa 0
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("_atoi")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1611| 
        ; call occurs [#_atoi] ; [] |1611| 
        CMPB      AL,#0                 ; [CPU_] |1611| 
	.dwpsn	file "../Source/prod.c",line 1616,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1616| 
	.dwpsn	file "../Source/prod.c",line 1613,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1613| 
	.dwpsn	file "../Source/prod.c",line 1616,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1616| 
        CMPB      AH,#43                ; [CPU_] |1616| 
        B         $C$L611,EQ            ; [CPU_] |1616| 
        ; branchcc occurs ; [] |1616| 
	.dwpsn	file "../Source/prod.c",line 1623,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1623| 
        B         $C$L614,NEQ           ; [CPU_] |1623| 
        ; branchcc occurs ; [] |1623| 
	.dwpsn	file "../Source/prod.c",line 1625,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1625| 
        B         $C$L612,HI            ; [CPU_] |1625| 
        ; branchcc occurs ; [] |1625| 
	.dwpsn	file "../Source/prod.c",line 1626,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1626| 
	.dwpsn	file "../Source/prod.c",line 1627,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1627| 
        ; branch occurs ; [] |1627| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1618,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1618| 
        SUB       AH,AL                 ; [CPU_] |1618| 
        CMP       AH,*-SP[33]           ; [CPU_] |1618| 
        B         $C$L613,HIS           ; [CPU_] |1618| 
        ; branchcc occurs ; [] |1618| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1621,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1621| 
        B         $C$L614,UNC           ; [CPU_] |1621| 
        ; branch occurs ; [] |1621| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1619,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1619| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1598,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1598| 
        B         $C$L610,NEQ           ; [CPU_] |1598| 
        ; branchcc occurs ; [] |1598| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1633,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1633| 
        MOV       AL,*-SP[33]           ; [CPU_] |1633| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1633| 
        MOV       *-SP[3],AL            ; [CPU_] |1633| 
        MOVL      XAR4,XAR1             ; [CPU_] |1633| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("_sprintf")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1633| 
        ; call occurs [#_sprintf] ; [] |1633| 
        MOVL      XAR4,XAR1             ; [CPU_] |1633| 
	.dwpsn	file "../Source/prod.c",line 1634,column 6,is_stmt,isa 0
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1634| 
        ; call occurs [#_scia_puts] ; [] |1634| 
	.dwpsn	file "../Source/prod.c",line 1637,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1637| 
        MOV       AH,#0                 ; [CPU_] |1637| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1637| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1637| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1637| 
        ; call occurs [#FS$$CMP] ; [] |1637| 
        CMPB      AL,#0                 ; [CPU_] |1637| 
        B         $C$L616,LT            ; [CPU_] |1637| 
        ; branchcc occurs ; [] |1637| 
	.dwpsn	file "../Source/prod.c",line 1643,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1643| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1643| 
        ; call occurs [#U$$TOFS] ; [] |1643| 
        MOVL      XAR1,ACC              ; [CPU_] |1643| 
        MOV       AL,*-SP[35]           ; [CPU_] |1643| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1643| 
        ; call occurs [#U$$TOFS] ; [] |1643| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1643| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1643| 
        ; call occurs [#FS$$SUB] ; [] |1643| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1643| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1643| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1643| 
        ; call occurs [#FS$$DIV] ; [] |1643| 
        MOVL      XAR0,#88              ; [CPU_] |1643| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1643| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1643| 
	.dwpsn	file "../Source/prod.c",line 1645,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1645| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1645| 
        ; call occurs [#U$$TOFS] ; [] |1645| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1645| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1645| 
        ; call occurs [#FS$$SUB] ; [] |1645| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1645| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1645| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1645| 
        ; call occurs [#FS$$DIV] ; [] |1645| 
        MOVL      XAR0,#88              ; [CPU_] |1645| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1645| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1645| 
        B         $C$L617,UNC           ; [CPU_] |1645| 
        ; branch occurs ; [] |1645| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1638,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1638| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1638| 
        ; call occurs [#U$$TOFS] ; [] |1638| 
        MOVL      XAR1,ACC              ; [CPU_] |1638| 
        MOV       AL,*-SP[35]           ; [CPU_] |1638| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1638| 
        ; call occurs [#U$$TOFS] ; [] |1638| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1638| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1638| 
        ; call occurs [#FS$$SUB] ; [] |1638| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1638| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1638| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1638| 
        ; call occurs [#FS$$DIV] ; [] |1638| 
        MOVL      XAR0,#88              ; [CPU_] |1638| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1638| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1638| 
	.dwpsn	file "../Source/prod.c",line 1640,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1640| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1640| 
        ; call occurs [#U$$TOFS] ; [] |1640| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1640| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1640| 
        ; call occurs [#FS$$SUB] ; [] |1640| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1640| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1640| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1640| 
        ; call occurs [#FS$$DIV] ; [] |1640| 
        MOVL      XAR0,#88              ; [CPU_] |1640| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1640| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1640| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1648,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1648| 
	.dwpsn	file "../Source/prod.c",line 1650,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1650| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1650| 
        ; call occurs [#_dac_setmode] ; [] |1650| 
	.dwpsn	file "../Source/prod.c",line 1652,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1652| 
        MOVL      XAR0,#88              ; [CPU_] |1652| 
        MOV       AL,*-SP[59]           ; [CPU_] |1652| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1652| 
        MOV       *-SP[3],AL            ; [CPU_] |1652| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1652| 
        MOVL      XAR0,#44              ; [CPU_] |1652| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1652| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1652| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1652| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1652| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1652| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1652| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1652| 
        MOVL      XAR4,XAR1             ; [CPU_] |1652| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_sprintf")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1652| 
        ; call occurs [#_sprintf] ; [] |1652| 
        MOVL      XAR4,XAR1             ; [CPU_] |1652| 
	.dwpsn	file "../Source/prod.c",line 1656,column 6,is_stmt,isa 0
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1656| 
        ; call occurs [#_scia_puts] ; [] |1656| 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1658| 
	.dwpsn	file "../Source/prod.c",line 1659,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1659| 
        ; branch occurs ; [] |1659| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1518,column 7,is_stmt,isa 0
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1518| 
        ; call occurs [#_lcd_clear] ; [] |1518| 
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_update_units")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1519| 
        ; call occurs [#_update_units] ; [] |1519| 
	.dwpsn	file "../Source/prod.c",line 1520,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1520| 
        ; branch occurs ; [] |1520| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1468,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1468| 
        MOVB      AL,#0                 ; [CPU_] |1468| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1468| 
        ; call occurs [#_lcd_puts] ; [] |1468| 
	.dwpsn	file "../Source/prod.c",line 1470,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1470| 
        MOVL      XAR0,#44              ; [CPU_] |1470| 
        MOV       AL,*-SP[59]           ; [CPU_] |1470| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1470| 
        MOV       *-SP[3],AL            ; [CPU_] |1470| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1470| 
        MOVL      XAR4,XAR1             ; [CPU_] |1470| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_sprintf")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1470| 
        ; call occurs [#_sprintf] ; [] |1470| 
        MOVL      XAR4,XAR1             ; [CPU_] |1470| 
	.dwpsn	file "../Source/prod.c",line 1473,column 6,is_stmt,isa 0
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1473| 
        ; call occurs [#_scia_puts] ; [] |1473| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1486,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1486| 
        MOVL      XAR0,#42              ; [CPU_] |1486| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1486| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1486| 
        MOVL      XAR0,#44              ; [CPU_] |1486| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1486| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1486| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1486| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_sprintf")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1486| 
        ; call occurs [#_sprintf] ; [] |1486| 
        MOVL      XAR0,#44              ; [CPU_] |1486| 
	.dwpsn	file "../Source/prod.c",line 1489,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1489| 
	.dwpsn	file "../Source/prod.c",line 1486,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1486| 
	.dwpsn	file "../Source/prod.c",line 1489,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1489| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1489| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1489| 
        ; call occurs [#_scia_getparam] ; [] |1489| 
	.dwpsn	file "../Source/prod.c",line 1490,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1490| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1490| 
        ; call occurs [#_scia_puts] ; [] |1490| 
	.dwpsn	file "../Source/prod.c",line 1493,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1493| 
	.dwpsn	file "../Source/prod.c",line 1492,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1492| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1492| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1492| 
	.dwpsn	file "../Source/prod.c",line 1494,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1494| 
	.dwpsn	file "../Source/prod.c",line 1493,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1493| 
	.dwpsn	file "../Source/prod.c",line 1494,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1494| 
        MOVB      ACC,#0                ; [CPU_] |1494| 
        SUBB      ACC,#1                ; [CPU_] |1494| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1494| 
        B         $C$L622,EQ            ; [CPU_] |1494| 
        ; branchcc occurs ; [] |1494| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1495,column 15,is_stmt,isa 0
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1495| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1495| 
        CMPB      AL,#0                 ; [CPU_] |1495| 
        B         $C$L624,EQ            ; [CPU_] |1495| 
        ; branchcc occurs ; [] |1495| 
	.dwpsn	file "../Source/prod.c",line 1498,column 8,is_stmt,isa 0
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1498| 
        ; call occurs [#_ad7738_getraw] ; [] |1498| 
	.dwpsn	file "../Source/prod.c",line 1499,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1499| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1499| 
        ADDL      XAR4,ACC              ; [CPU_] |1499| 
        MOVL      XAR0,#10              ; [CPU_] |1499| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1499| 
        MOVL      XAR0,#10              ; [CPU_] |1499| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1499| 
        ASR64     ACC:P,16              ; [CPU_] |1499| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1499| 
        MOVL      XAR0,#10              ; [CPU_] |1499| 
        ASR64     ACC:P,16              ; [CPU_] |1499| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1499| 
        MOVL      XAR0,#10              ; [CPU_] |1499| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1499| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1499| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1499| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1499| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1499| 
	.dwpsn	file "../Source/prod.c",line 1494,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1494| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1494| 
        MOVB      ACC,#0                ; [CPU_] |1494| 
        SUBB      ACC,#1                ; [CPU_] |1494| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1494| 
        B         $C$L621,NEQ           ; [CPU_] |1494| 
        ; branchcc occurs ; [] |1494| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1502,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1502| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1502| 
        ; call occurs [#_scia_puts] ; [] |1502| 
	.dwpsn	file "../Source/prod.c",line 1485,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1485| 
        MOVL      XAR0,#42              ; [CPU_] |1485| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1485| 
        MOVL      XAR0,#42              ; [CPU_] |1485| 
        SUBB      XAR6,#1               ; [CPU_U] |1485| 
        ADDB      ACC,#2                ; [CPU_] |1485| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1485| 
        MOVZ      AR0,AR6               ; [CPU_] |1485| 
        MOV       *-SP[47],AR6          ; [CPU_] |1485| 
        ADDB      XAR1,#4               ; [CPU_] |1485| 
        CMP       AR0,#-1               ; [CPU_] |1485| 
        B         $C$L620,NEQ           ; [CPU_] |1485| 
        ; branchcc occurs ; [] |1485| 
	.dwpsn	file "../Source/prod.c",line 1505,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1505| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1505| 
        MOVB      AL,#10                ; [CPU_] |1505| 
        MOV       T,*-SP[58]            ; [CPU_] |1505| 
        MPYU      ACC,T,AL              ; [CPU_] |1505| 
        ADDL      ACC,XAR6              ; [CPU_] |1505| 
        MOVL      XAR1,ACC              ; [CPU_] |1505| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1505| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1505| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1505| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1505| 
        ; call occurs [#FS$$SUB] ; [] |1505| 
        MOVL      XAR6,ACC              ; [CPU_] |1505| 
        MOV       AL,#16384             ; [CPU_] |1505| 
        MOV       AH,#17948             ; [CPU_] |1505| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1505| 
        MOVL      ACC,XAR6              ; [CPU_] |1505| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1505| 
        ; call occurs [#FS$$MPY] ; [] |1505| 
        MOVL      XAR0,#88              ; [CPU_] |1505| 
        MOVL      P,*-SP[28]            ; [CPU_] |1505| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1505| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1505| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1505| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1505| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1505| 
        ; call occurs [#LL$$TOFS] ; [] |1505| 
        MOVL      XAR0,#88              ; [CPU_] |1505| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1505| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1505| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1505| 
        ; call occurs [#FS$$DIV] ; [] |1505| 
        MOVB      XAR0,#44              ; [CPU_] |1505| 
	.dwpsn	file "../Source/prod.c",line 1508,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1508| 
	.dwpsn	file "../Source/prod.c",line 1505,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1505| 
	.dwpsn	file "../Source/prod.c",line 1508,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1508| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1508| 
        MOV       AL,*-SP[59]           ; [CPU_] |1508| 
        MOV       *-SP[3],AL            ; [CPU_] |1508| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1508| 
        MOVL      XAR0,#44              ; [CPU_] |1508| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1508| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1508| 
        MOVL      XAR4,XAR1             ; [CPU_] |1508| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_sprintf")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1508| 
        ; call occurs [#_sprintf] ; [] |1508| 
        MOVL      XAR4,XAR1             ; [CPU_] |1508| 
	.dwpsn	file "../Source/prod.c",line 1510,column 6,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1510| 
        ; call occurs [#_scia_puts] ; [] |1510| 
	.dwpsn	file "../Source/prod.c",line 1511,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1511| 
$C$L623:    
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1511| 
        ; call occurs [#_scia_puts] ; [] |1511| 
	.dwpsn	file "../Source/prod.c",line 1666,column 5,is_stmt,isa 0
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1666| 
        ; call occurs [#_lcd_clear] ; [] |1666| 
	.dwpsn	file "../Source/prod.c",line 1667,column 5,is_stmt,isa 0
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_update_units")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1667| 
        ; call occurs [#_update_units] ; [] |1667| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1670,column 5,is_stmt,isa 0
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1670| 
        ; call occurs [#_ad7738_setcal] ; [] |1670| 
        MOVL      XAR0,#78              ; [CPU_] |1670| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1670| 
	.dwpsn	file "../Source/prod.c",line 1671,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1671| 
        MOVL      XAR1,ACC              ; [CPU_] |1671| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1671| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1671| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1671| 
	.dwpsn	file "../Source/prod.c",line 1672,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1672| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1672| 
        ; call occurs [#_ad7738_resetvall] ; [] |1672| 
	.dwpsn	file "../Source/prod.c",line 1674,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1674| 
        ; branch occurs ; [] |1674| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1496,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1496| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_delay_us")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1496| 
        ; call occurs [#_delay_us] ; [] |1496| 
	.dwpsn	file "../Source/prod.c",line 1495,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1495| 
        ; branch occurs ; [] |1495| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3625,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3625| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3625| 
        ; call occurs [#_scia_puts] ; [] |3625| 
        MOVL      XAR0,#86              ; [CPU_] |3625| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3625| 
	.dwpsn	file "../Source/prod.c",line 3626,column 5,is_stmt,isa 0
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3626| 
        ; call occurs [#_scia_puts] ; [] |3626| 
	.dwpsn	file "../Source/prod.c",line 3627,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3627| 
	.dwpsn	file "../Source/prod.c",line 3628,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3628| 
        ; branch occurs ; [] |3628| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3586,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3586| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3586| 
        ; call occurs [#_scia_puts] ; [] |3586| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3590,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3590| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_delay_us")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3590| 
        ; call occurs [#_delay_us] ; [] |3590| 
	.dwpsn	file "../Source/prod.c",line 3588,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3588| 
        ; branchcc occurs ; [] |3588| 
	.dwpsn	file "../Source/prod.c",line 3593,column 5,is_stmt,isa 0
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_reboot")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3593| 
        ; call occurs [#_reboot] ; [] |3593| 
	.dwpsn	file "../Source/prod.c",line 3594,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3594| 
        ; branch occurs ; [] |3594| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3570,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3570| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3570| 
        ; call occurs [#_scia_puts] ; [] |3570| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3574,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3574| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_delay_us")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3574| 
        ; call occurs [#_delay_us] ; [] |3574| 
	.dwpsn	file "../Source/prod.c",line 3572,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3572| 
        ; branchcc occurs ; [] |3572| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3578,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3578| 
	.dwpsn	file "../Source/prod.c",line 3577,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3577| 
	.dwpsn	file "../Source/prod.c",line 3578,column 5,is_stmt,isa 0
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3578| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3578| 
	.dwpsn	file "../Source/prod.c",line 3582,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3582| 
        ; branch occurs ; [] |3582| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3481,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3481| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3481| 
        ; call occurs [#_scia_puts] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3483,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3483| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3483| 
        ; call occurs [#_scia_puts] ; [] |3483| 
	.dwpsn	file "../Source/prod.c",line 3484,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3484| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3484| 
        ; call occurs [#_scia_puts] ; [] |3484| 
	.dwpsn	file "../Source/prod.c",line 3486,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3486| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3486| 
        ; call occurs [#_scia_puts] ; [] |3486| 
	.dwpsn	file "../Source/prod.c",line 3487,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3487| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3487| 
        ; call occurs [#_scia_puts] ; [] |3487| 
	.dwpsn	file "../Source/prod.c",line 3488,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3488| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3488| 
        ; call occurs [#_scia_puts] ; [] |3488| 
	.dwpsn	file "../Source/prod.c",line 3489,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3489| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3489| 
        ; call occurs [#_scia_puts] ; [] |3489| 
	.dwpsn	file "../Source/prod.c",line 3491,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3491| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3491| 
        ; call occurs [#_scia_puts] ; [] |3491| 
	.dwpsn	file "../Source/prod.c",line 3492,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3492| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3492| 
        ; call occurs [#_scia_puts] ; [] |3492| 
	.dwpsn	file "../Source/prod.c",line 3493,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3493| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3493| 
        ; call occurs [#_scia_puts] ; [] |3493| 
	.dwpsn	file "../Source/prod.c",line 3494,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3494| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3495,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3495| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3495| 
        ; call occurs [#_scia_puts] ; [] |3495| 
	.dwpsn	file "../Source/prod.c",line 3496,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3496| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3496| 
        ; call occurs [#_scia_puts] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3497| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3497| 
        ; call occurs [#_scia_puts] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3499| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3499| 
        ; call occurs [#_scia_puts] ; [] |3499| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3501| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3501| 
        ; call occurs [#_scia_puts] ; [] |3501| 
	.dwpsn	file "../Source/prod.c",line 3503,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3503| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3503| 
        ; call occurs [#_scia_puts] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3505,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3505| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3505| 
        ; call occurs [#_scia_puts] ; [] |3505| 
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3506| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3506| 
        ; call occurs [#_scia_puts] ; [] |3506| 
	.dwpsn	file "../Source/prod.c",line 3507,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3507| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3507| 
        ; call occurs [#_scia_puts] ; [] |3507| 
	.dwpsn	file "../Source/prod.c",line 3508,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3508| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3508| 
        ; call occurs [#_scia_puts] ; [] |3508| 
	.dwpsn	file "../Source/prod.c",line 3510,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3510| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3510| 
        ; call occurs [#_scia_puts] ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3511,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3511| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3511| 
        ; call occurs [#_scia_puts] ; [] |3511| 
	.dwpsn	file "../Source/prod.c",line 3512,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3512| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3512| 
        ; call occurs [#_scia_puts] ; [] |3512| 
	.dwpsn	file "../Source/prod.c",line 3513,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3513| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3513| 
        ; call occurs [#_scia_puts] ; [] |3513| 
	.dwpsn	file "../Source/prod.c",line 3514,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3514| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3514| 
        ; call occurs [#_scia_puts] ; [] |3514| 
	.dwpsn	file "../Source/prod.c",line 3516,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3516| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3516| 
        ; call occurs [#_scia_puts] ; [] |3516| 
	.dwpsn	file "../Source/prod.c",line 3517,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3517| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3517| 
        ; call occurs [#_scia_puts] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3519,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3519| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3519| 
        ; call occurs [#_scia_puts] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3521| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3521| 
        ; call occurs [#_scia_puts] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3522,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3522| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3522| 
        ; call occurs [#_scia_puts] ; [] |3522| 
	.dwpsn	file "../Source/prod.c",line 3524,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3524| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3524| 
        ; call occurs [#_scia_puts] ; [] |3524| 
	.dwpsn	file "../Source/prod.c",line 3526,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3526| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3526| 
        ; call occurs [#_scia_puts] ; [] |3526| 
	.dwpsn	file "../Source/prod.c",line 3528,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3528| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3528| 
        ; call occurs [#_scia_puts] ; [] |3528| 
	.dwpsn	file "../Source/prod.c",line 3530,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3530| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3530| 
        ; call occurs [#_scia_puts] ; [] |3530| 
	.dwpsn	file "../Source/prod.c",line 3531,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3531| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3531| 
        ; call occurs [#_scia_puts] ; [] |3531| 
	.dwpsn	file "../Source/prod.c",line 3533,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3533| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3533| 
        ; call occurs [#_scia_puts] ; [] |3533| 
	.dwpsn	file "../Source/prod.c",line 3534,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3534| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3534| 
        ; call occurs [#_scia_puts] ; [] |3534| 
	.dwpsn	file "../Source/prod.c",line 3535,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3535| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3535| 
        ; call occurs [#_scia_puts] ; [] |3535| 
	.dwpsn	file "../Source/prod.c",line 3536,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3536| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3536| 
        ; call occurs [#_scia_puts] ; [] |3536| 
	.dwpsn	file "../Source/prod.c",line 3537,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3537| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3537| 
        ; call occurs [#_scia_puts] ; [] |3537| 
	.dwpsn	file "../Source/prod.c",line 3538,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3538| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3538| 
        ; call occurs [#_scia_puts] ; [] |3538| 
	.dwpsn	file "../Source/prod.c",line 3539,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3539| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3539| 
        ; call occurs [#_scia_puts] ; [] |3539| 
	.dwpsn	file "../Source/prod.c",line 3540,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3540| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3540| 
        ; call occurs [#_scia_puts] ; [] |3540| 
	.dwpsn	file "../Source/prod.c",line 3551,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3551| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3551| 
        ; call occurs [#_scia_puts] ; [] |3551| 
	.dwpsn	file "../Source/prod.c",line 3553,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3553| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3553| 
        ; call occurs [#_scia_puts] ; [] |3553| 
	.dwpsn	file "../Source/prod.c",line 3555,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3555| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3555| 
        ; call occurs [#_scia_puts] ; [] |3555| 
	.dwpsn	file "../Source/prod.c",line 3557,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3557| 
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3557| 
        ; call occurs [#_scia_puts] ; [] |3557| 
	.dwpsn	file "../Source/prod.c",line 3559,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3559| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3559| 
        ; call occurs [#_scia_puts] ; [] |3559| 
	.dwpsn	file "../Source/prod.c",line 3564,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3564| 
$C$L631:    
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3564| 
        ; call occurs [#_scia_puts] ; [] |3564| 
$C$L632:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3632,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3632| 
        ; branchcc occurs ; [] |3632| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3633,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3633| 
        SPM       #0                    ; [CPU_] 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3633| 
        ; call occurs [#_scia_puts] ; [] |3633| 
$C$L634:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 645,column 3,is_stmt,isa 0
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_SPICANRoutine")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_SPICANRoutine       ; [CPU_] |645| 
        ; call occurs [#_SPICANRoutine] ; [] |645| 
	.dwpsn	file "../Source/prod.c",line 675,column 3,is_stmt,isa 0
        MOVB      AL,#45                ; [CPU_] |675| 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |675| 
        ; call occurs [#_SPICANRead] ; [] |675| 
        MOV       *-SP[40],AL           ; [CPU_] |675| 
	.dwpsn	file "../Source/prod.c",line 678,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |678| 
        TBIT      AL,#4                 ; [CPU_] |678| 
        B         $C$L635,TC            ; [CPU_] |678| 
        ; branchcc occurs ; [] |678| 
	.dwpsn	file "../Source/prod.c",line 680,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |680| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |680| 
        ; call occurs [#_ad7738_resettare] ; [] |680| 
	.dwpsn	file "../Source/prod.c",line 681,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |681| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |681| 
        ; call occurs [#_ad7738_resetpeak] ; [] |681| 
	.dwpsn	file "../Source/prod.c",line 682,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |682| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |682| 
        ; call occurs [#_ad7738_resetvall] ; [] |682| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 760,column 3,is_stmt,isa 0
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |760| 
        ; call occurs [#_ad7738_monrdy] ; [] |760| 
        CMPB      AL,#0                 ; [CPU_] |760| 
        B         $C$L661,EQ            ; [CPU_] |760| 
        ; branchcc occurs ; [] |760| 
	.dwpsn	file "../Source/prod.c",line 762,column 4,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |762| 
        ; call occurs [#_ad7738_monclr] ; [] |762| 
        MOVL      XAR0,#84              ; [CPU_] |762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |762| 
	.dwpsn	file "../Source/prod.c",line 765,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |765| 
        CMPB      AL,#3                 ; [CPU_] |765| 
        B         $C$L636,GT            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        CMPB      AL,#3                 ; [CPU_] |765| 
        B         $C$L642,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        CMPB      AL,#0                 ; [CPU_] |765| 
        B         $C$L646,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        CMPB      AL,#1                 ; [CPU_] |765| 
        B         $C$L645,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        CMPB      AL,#2                 ; [CPU_] |765| 
        B         $C$L644,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        B         $C$L658,UNC           ; [CPU_] |765| 
        ; branch occurs ; [] |765| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |765| 
        B         $C$L641,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        CMPB      AL,#5                 ; [CPU_] |765| 
        B         $C$L637,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
        CMPB      AL,#6                 ; [CPU_] |765| 
        B         $C$L658,NEQ           ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
	.dwpsn	file "../Source/prod.c",line 820,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |820| 
        MOVL      XAR0,#46              ; [CPU_] |820| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |820| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |820| 
	.dwpsn	file "../Source/prod.c",line 821,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |821| 
        ; branch occurs ; [] |821| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 815,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |815| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |815| 
        ; call occurs [#_ad7738_getlimitst] ; [] |815| 
	.dwpsn	file "../Source/prod.c",line 816,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |816| 
        B         $C$L639,NTC           ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
        TBIT      AL,#0                 ; [CPU_] |816| 
        B         $C$L638,NTC           ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |816| 
        B         $C$L640,UNC           ; [CPU_] |816| 
        ; branch occurs ; [] |816| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |816| 
        B         $C$L640,UNC           ; [CPU_] |816| 
        ; branch occurs ; [] |816| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |816| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |816| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |816| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |816| 
	.dwpsn	file "../Source/prod.c",line 818,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |818| 
        ; branch occurs ; [] |818| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 787,column 5,is_stmt,isa 0
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |787| 
        ; call occurs [#_ad7738_getmon] ; [] |787| 
        MOVL      XAR0,#84              ; [CPU_] |787| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |787| 
	.dwpsn	file "../Source/prod.c",line 789,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |789| 
        B         $C$L643,UNC           ; [CPU_] |789| 
        ; branch occurs ; [] |789| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 782,column 5,is_stmt,isa 0
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |782| 
        ; call occurs [#_ad7738_getmon] ; [] |782| 
        MOVL      XAR0,#84              ; [CPU_] |782| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |782| 
	.dwpsn	file "../Source/prod.c",line 783,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |783| 
$C$L643:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |783| 
        ADDL      XAR4,ACC              ; [CPU_] |783| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |783| 
	.dwpsn	file "../Source/prod.c",line 784,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |784| 
        ; branch occurs ; [] |784| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 777,column 5,is_stmt,isa 0
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |777| 
        ; call occurs [#_ad7738_getvall] ; [] |777| 
	.dwpsn	file "../Source/prod.c",line 779,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |779| 
        ; branch occurs ; [] |779| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 772,column 5,is_stmt,isa 0
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |772| 
        ; call occurs [#_ad7738_getpeak] ; [] |772| 
	.dwpsn	file "../Source/prod.c",line 774,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |774| 
        ; branch occurs ; [] |774| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 767,column 5,is_stmt,isa 0
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |767| 
        ; call occurs [#_ad7738_getmon] ; [] |767| 
$C$L647:    
        MOVL      XAR0,#84              ; [CPU_] |767| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |767| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 768,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |768| 
        ADDL      XAR4,ACC              ; [CPU_] |768| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |768| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |768| 
	.dwpsn	file "../Source/prod.c",line 792,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |792| 
        CMPB      AL,#3                 ; [CPU_] |792| 
        B         $C$L649,GT            ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        CMPB      AL,#3                 ; [CPU_] |792| 
        B         $C$L651,EQ            ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        CMPB      AL,#0                 ; [CPU_] |792| 
        B         $C$L654,EQ            ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        CMPB      AL,#1                 ; [CPU_] |792| 
        B         $C$L653,EQ            ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        CMPB      AL,#2                 ; [CPU_] |792| 
        B         $C$L652,EQ            ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        B         $C$L658,UNC           ; [CPU_] |792| 
        ; branch occurs ; [] |792| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |792| 
        B         $C$L650,EQ            ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        CMPB      AL,#5                 ; [CPU_] |792| 
        B         $C$L658,NEQ           ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
	.dwpsn	file "../Source/prod.c",line 809,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |809| 
	.dwpsn	file "../Source/prod.c",line 810,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |810| 
        ; branch occurs ; [] |810| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 806,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |806| 
	.dwpsn	file "../Source/prod.c",line 807,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |807| 
        ; branch occurs ; [] |807| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 803,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |803| 
	.dwpsn	file "../Source/prod.c",line 804,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |804| 
        ; branch occurs ; [] |804| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 800,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |800| 
	.dwpsn	file "../Source/prod.c",line 801,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |801| 
        ; branch occurs ; [] |801| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 797,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |797| 
	.dwpsn	file "../Source/prod.c",line 798,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |798| 
        ; branch occurs ; [] |798| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 794,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |794| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |794| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |794| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |794| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |794| 
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_sprintf")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |794| 
        ; call occurs [#_sprintf] ; [] |794| 
$C$L658:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 825,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |825| 
        MPYB      ACC,T,#20             ; [CPU_] |825| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |825| 
        ADDB      AL,#7                 ; [CPU_] |825| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |825| 
        ; call occurs [#_lcd_puts] ; [] |825| 
	.dwpsn	file "../Source/prod.c",line 828,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |828| 
	.dwpsn	file "../Source/prod.c",line 825,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |825| 
	.dwpsn	file "../Source/prod.c",line 828,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |828| 
        B         $C$L659,HIS           ; [CPU_] |828| 
        ; branchcc occurs ; [] |828| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |828| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 829,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |829| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 838,column 3,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |838| 
        ; call occurs [#_ad7738_tempstart] ; [] |838| 
        CMPB      AL,#0                 ; [CPU_] |838| 
        B         $C$L662,NEQ           ; [CPU_] |838| 
        ; branchcc occurs ; [] |838| 
	.dwpsn	file "../Source/prod.c",line 843,column 8,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |843| 
        ; call occurs [#_ad7738_tempread] ; [] |843| 
        CMPB      AL,#0                 ; [CPU_] |843| 
        B         $C$L663,EQ            ; [CPU_] |843| 
        ; branchcc occurs ; [] |843| 
	.dwpsn	file "../Source/prod.c",line 844,column 4,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |844| 
        ; call occurs [#_ds1820read] ; [] |844| 
        MOVL      XAR0,#46              ; [CPU_] |844| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |844| 
	.dwpsn	file "../Source/prod.c",line 845,column 4,is_stmt,isa 0
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |845| 
        ; call occurs [#_ad7738_settemp] ; [] |845| 
        B         $C$L663,UNC           ; [CPU_] |845| 
        ; branch occurs ; [] |845| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 839,column 4,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |839| 
        ; call occurs [#_ds1820start] ; [] |839| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 852,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |852| 
        MOVB      XAR0,#36              ; [CPU_] |852| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |852| 
        B         $C$L668,EQ            ; [CPU_] |852| 
        ; branchcc occurs ; [] |852| 
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |852| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |852| 
        CMPB      AL,#0                 ; [CPU_] |852| 
        B         $C$L668,EQ            ; [CPU_] |852| 
        ; branchcc occurs ; [] |852| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 853,column 4,is_stmt,isa 0
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |853| 
        ; call occurs [#_tagdetect] ; [] |853| 
        CMPB      AL,#0                 ; [CPU_] |853| 
        B         $C$L664,NEQ           ; [CPU_] |853| 
        ; branchcc occurs ; [] |853| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 876,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |876| 
        MOV       *+XAR4[0],#0          ; [CPU_] |876| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 878,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |878| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |878| 
        MOVL      XAR4,ACC              ; [CPU_] |878| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |878| 
        B         $C$L666,EQ            ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
	.dwpsn	file "../Source/prod.c",line 879,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |879| 
	.dwpsn	file "../Source/prod.c",line 880,column 6,is_stmt,isa 0
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |880| 
        ; call occurs [#_lcd_clear] ; [] |880| 
	.dwpsn	file "../Source/prod.c",line 881,column 6,is_stmt,isa 0
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_update_units")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |881| 
        ; call occurs [#_update_units] ; [] |881| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 882,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |882| 
        B         $C$L666,UNC           ; [CPU_] |882| 
        ; branch occurs ; [] |882| 
$C$L664:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 855,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |855| 
        B         $C$L665,NEQ           ; [CPU_] |855| 
        ; branchcc occurs ; [] |855| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 858,column 6,is_stmt,isa 0
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_matchTag")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |858| 
        ; call occurs [#_matchTag] ; [] |858| 
        MOVL      XAR0,#80              ; [CPU_] |858| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |858| 
        MOVL      XAR0,#9               ; [CPU_] |858| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |858| 
	.dwpsn	file "../Source/prod.c",line 859,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |859| 
        B         $C$L665,EQ            ; [CPU_] |859| 
        ; branchcc occurs ; [] |859| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 862,column 7,is_stmt,isa 0
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |862| 
        ; call occurs [#_maf_rst] ; [] |862| 
	.dwpsn	file "../Source/prod.c",line 863,column 7,is_stmt,isa 0
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |863| 
        ; call occurs [#_ad7738_setcal] ; [] |863| 
        MOVL      XAR0,#78              ; [CPU_] |863| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |863| 
	.dwpsn	file "../Source/prod.c",line 864,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |864| 
        MOVL      XAR1,ACC              ; [CPU_] |864| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |864| 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |864| 
        ; call occurs [#_ad7738_resetpeak] ; [] |864| 
	.dwpsn	file "../Source/prod.c",line 865,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |865| 
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |865| 
        ; call occurs [#_ad7738_resetvall] ; [] |865| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 868,column 7,is_stmt,isa 0
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |868| 
        ; call occurs [#_lcd_clear] ; [] |868| 
	.dwpsn	file "../Source/prod.c",line 869,column 7,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_update_units")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |869| 
        ; call occurs [#_update_units] ; [] |869| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 870,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |870| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 873,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |873| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 887,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |887| 
        ADDB      AL,#1                 ; [CPU_] |887| 
        MOV       *+FP[AR0],AL          ; [CPU_] |887| 
        CMPB      AL,#4                 ; [CPU_] |887| 
        B         $C$L667,HIS           ; [CPU_] |887| 
        ; branchcc occurs ; [] |887| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |887| 
        ADDB      ACC,#1                ; [CPU_] |887| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |887| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 888,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |888| 
        MOV       *+FP[AR0],#0          ; [CPU_] |888| 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 896,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |896| 
        CMPB      AL,#1                 ; [CPU_] |896| 
        B         $C$L686,NEQ           ; [CPU_] |896| 
        ; branchcc occurs ; [] |896| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |896| 
        ; branchcc occurs ; [] |896| 
	.dwpsn	file "../Source/prod.c",line 899,column 4,is_stmt,isa 0
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |899| 
        ; call occurs [#_prod_getavail] ; [] |899| 
        MOVL      XAR6,ACC              ; [CPU_] |899| 
        MOV       T,*-SP[51]            ; [CPU_] |899| 
        MPY       P,T,*-SP[52]          ; [CPU_] |899| 
        MOVU      ACC,PL                ; [CPU_] |899| 
        CMPL      ACC,XAR6              ; [CPU_] |899| 
        B         $C$L671,LOS           ; [CPU_] |899| 
        ; branchcc occurs ; [] |899| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |899| 
        ; branchcc occurs ; [] |899| 
	.dwpsn	file "../Source/prod.c",line 969,column 11,is_stmt,isa 0
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |969| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |969| 
        CMPB      AL,#0                 ; [CPU_] |969| 
        B         $C$L669,NEQ           ; [CPU_] |969| 
        ; branchcc occurs ; [] |969| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 977,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |977| 
        B         $C$L686,EQ            ; [CPU_] |977| 
        ; branchcc occurs ; [] |977| 
	.dwpsn	file "../Source/prod.c",line 978,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |978| 
	.dwpsn	file "../Source/prod.c",line 981,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |981| 
	.dwpsn	file "../Source/prod.c",line 983,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |983| 
        MOVB      XAR0,#36              ; [CPU_] |983| 
	.dwpsn	file "../Source/prod.c",line 981,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |981| 
	.dwpsn	file "../Source/prod.c",line 982,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |982| 
	.dwpsn	file "../Source/prod.c",line 983,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |983| 
        MOVL      XAR0,#80              ; [CPU_] |983| 
        MOV       *+XAR4[2],AL          ; [CPU_] |983| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |983| 
	.dwpsn	file "../Source/prod.c",line 987,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |987| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 985,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |985| 
	.dwpsn	file "../Source/prod.c",line 987,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |987| 
        ; branch occurs ; [] |987| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 971,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |971| 
        MOV       *+XAR4[0],#0          ; [CPU_] |971| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 973,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |973| 
	.dwpsn	file "../Source/prod.c",line 972,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |972| 
	.dwpsn	file "../Source/prod.c",line 973,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |973| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 974,column 6,is_stmt,isa 0
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |974| 
        ; call occurs [#_ad7738_getlimitst] ; [] |974| 
        MOV       *XAR1++,AL            ; [CPU_] |974| 
	.dwpsn	file "../Source/prod.c",line 973,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |973| 
	.dwpsn	file "../Source/prod.c",line 974,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |974| 
	.dwpsn	file "../Source/prod.c",line 973,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |973| 
        B         $C$L670,LT            ; [CPU_] |973| 
        ; branchcc occurs ; [] |973| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 976,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |976| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 977,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |977| 
        ; branch occurs ; [] |977| 
$C$L671:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 906,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |906| 
        MOVL      XAR0,#88              ; [CPU_] |906| 
	.dwpsn	file "../Source/prod.c",line 904,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 906,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |906| 
        MOV       *+XAR4[0],#0          ; [CPU_] |906| 
	.dwpsn	file "../Source/prod.c",line 912,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |912| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |907| 
        MOV       AL,*-SP[52]           ; [CPU_] |907| 
	.dwpsn	file "../Source/prod.c",line 908,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |908| 
        MOV       AL,*-SP[59]           ; [CPU_] |908| 
	.dwpsn	file "../Source/prod.c",line 909,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |909| 
        MOV       *+XAR4[3],AL          ; [CPU_] |909| 
        MOV       AL,*-SP[59]           ; [CPU_] |909| 
	.dwpsn	file "../Source/prod.c",line 910,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |910| 
        MOV       *+XAR4[4],AL          ; [CPU_] |910| 
        MOV       AL,*-SP[50]           ; [CPU_] |910| 
	.dwpsn	file "../Source/prod.c",line 911,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |911| 
        MOV       AH,*-SP[49]           ; [CPU_] |911| 
	.dwpsn	file "../Source/prod.c",line 912,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |912| 
        MOV       *+XAR4[6],AL          ; [CPU_] |912| 
        MOV       AL,AH                 ; [CPU_] |912| 
        ADDB      AL,#1                 ; [CPU_] |912| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 912,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |912| 
	.dwpsn	file "../Source/prod.c",line 914,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |914| 
        ; branch occurs ; [] |914| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 915,column 6,is_stmt,isa 0
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |915| 
        ; call occurs [#_prod_getnext] ; [] |915| 
	.dwpsn	file "../Source/prod.c",line 917,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |917| 
        B         $C$L682,NEQ           ; [CPU_] |917| 
        ; branchcc occurs ; [] |917| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 919,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |919| 
	.dwpsn	file "../Source/prod.c",line 923,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |923| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 922,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |922| 
        MOV       *-SP[58],AL           ; [CPU_] |922| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 924,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |924| 
        B         $C$L675,EQ            ; [CPU_] |924| 
        ; branchcc occurs ; [] |924| 
	.dwpsn	file "../Source/prod.c",line 925,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |925| 
        MOVL      XAR0,#88              ; [CPU_] |925| 
        ADDL      ACC,XAR4              ; [CPU_] |925| 
        MOVL      XAR3,ACC              ; [CPU_] |925| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |925| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 928,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |928| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 926,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |926| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 927,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |927| 
        ANDB      AL,#0xff              ; [CPU_] |927| 
        MOV       *XAR5++,AL            ; [CPU_] |927| 
	.dwpsn	file "../Source/prod.c",line 928,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |928| 
        LSR       AL,8                  ; [CPU_] |928| 
        MOV       *XAR5++,AL            ; [CPU_] |928| 
	.dwpsn	file "../Source/prod.c",line 926,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR0--         ; [CPU_] |926| 
        ; branchcc occurs ; [] |926| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 923,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |923| 
        ADDB      XAR7,#1               ; [CPU_] |923| 
	.dwpsn	file "../Source/prod.c",line 932,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |932| 
        MOV       *-SP[58],AL           ; [CPU_] |932| 
	.dwpsn	file "../Source/prod.c",line 923,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR6--         ; [CPU_] |923| 
        ; branchcc occurs ; [] |923| 
	.dwpsn	file "../Source/prod.c",line 935,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |935| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 936,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |936| 
        B         $C$L678,EQ            ; [CPU_] |936| 
        ; branchcc occurs ; [] |936| 
	.dwpsn	file "../Source/prod.c",line 937,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |937| 
        MOVL      XAR0,#88              ; [CPU_] |937| 
        ADDL      ACC,XAR4              ; [CPU_] |937| 
        ADDB      ACC,#8                ; [CPU_] |937| 
        MOVL      XAR3,ACC              ; [CPU_] |937| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |937| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 940,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |940| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 938,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |938| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 939,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |939| 
        ANDB      AL,#0xff              ; [CPU_] |939| 
        MOV       *XAR5++,AL            ; [CPU_] |939| 
	.dwpsn	file "../Source/prod.c",line 940,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |940| 
        LSR       AL,8                  ; [CPU_] |940| 
        MOV       *XAR5++,AL            ; [CPU_] |940| 
	.dwpsn	file "../Source/prod.c",line 938,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR0--         ; [CPU_] |938| 
        ; branchcc occurs ; [] |938| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 935,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |935| 
        ADDB      XAR7,#1               ; [CPU_] |935| 
	.dwpsn	file "../Source/prod.c",line 944,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |944| 
        MOV       *-SP[58],AL           ; [CPU_] |944| 
	.dwpsn	file "../Source/prod.c",line 935,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR6--         ; [CPU_] |935| 
        ; branchcc occurs ; [] |935| 
	.dwpsn	file "../Source/prod.c",line 920,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |920| 
	.dwpsn	file "../Source/prod.c",line 947,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |947| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 948,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |948| 
        B         $C$L681,EQ            ; [CPU_] |948| 
        ; branchcc occurs ; [] |948| 
	.dwpsn	file "../Source/prod.c",line 949,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |949| 
        MOVL      XAR0,#88              ; [CPU_] |949| 
        ADDL      ACC,XAR4              ; [CPU_] |949| 
        ADDB      ACC,#12               ; [CPU_] |949| 
        MOVL      XAR6,ACC              ; [CPU_] |949| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |949| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 952,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |952| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 950,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |950| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 951,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |951| 
        ANDB      AL,#0xff              ; [CPU_] |951| 
        MOV       *XAR5++,AL            ; [CPU_] |951| 
	.dwpsn	file "../Source/prod.c",line 952,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |952| 
        LSR       AL,8                  ; [CPU_] |952| 
        MOV       *XAR5++,AL            ; [CPU_] |952| 
	.dwpsn	file "../Source/prod.c",line 950,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR0--         ; [CPU_] |950| 
        ; branchcc occurs ; [] |950| 
$C$L681:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 947,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 956,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |956| 
        MOV       *-SP[58],AL           ; [CPU_] |956| 
	.dwpsn	file "../Source/prod.c",line 947,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |947| 
        CMPB      AL,#2                 ; [CPU_] |947| 
        B         $C$L679,LT            ; [CPU_] |947| 
        ; branchcc occurs ; [] |947| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 914,column 12,is_stmt,isa 0
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |914| 
        ; call occurs [#_prod_getavail] ; [] |914| 
        TEST      ACC                   ; [CPU_] |914| 
        B         $C$L683,EQ            ; [CPU_] |914| 
        ; branchcc occurs ; [] |914| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |914| 
        B         $C$L672,HI            ; [CPU_] |914| 
        ; branchcc occurs ; [] |914| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 960,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |960| 
        MOV       AL,*-SP[47]           ; [CPU_] |960| 
        MOV       *+XAR4[2],AL          ; [CPU_] |960| 
        MOV       AL,*-SP[53]           ; [CPU_] |960| 
	.dwpsn	file "../Source/prod.c",line 962,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |962| 
        ; branchcc occurs ; [] |962| 
	.dwpsn	file "../Source/prod.c",line 963,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |963| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 966,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |966| 
$C$L685:    
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |966| 
        ; call occurs [#_scia_send_bin] ; [] |966| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 1001,column 4,is_stmt,isa 0
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |1001| 
        ; call occurs [#_scia_rx_getcmds] ; [] |1001| 
        CMPB      AL,#0                 ; [CPU_] |1001| 
        B         $C$L634,EQ            ; [CPU_] |1001| 
        ; branchcc occurs ; [] |1001| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1007,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |1007| 
        ; call occurs [#_scia_rx_getcmd] ; [] |1007| 
        MOV       *-SP[59],AL           ; [CPU_] |1007| 
        CMPB      AL,#0                 ; [CPU_] |1007| 
        B         $C$L634,EQ            ; [CPU_] |1007| 
        ; branchcc occurs ; [] |1007| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1024,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |1024| 
        B         $C$L322,EQ            ; [CPU_] |1024| 
        ; branchcc occurs ; [] |1024| 
	.dwpsn	file "../Source/prod.c",line 3637,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3637| 
        B         $C$L634,NEQ           ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3637| 
        B         $C$L634,LO            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3671,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3671| 
	.dwpsn	file "../Source/prod.c",line 3664,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3664| 
	.dwpsn	file "../Source/prod.c",line 3660,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3660| 
	.dwpsn	file "../Source/prod.c",line 3664,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3664| 
	.dwpsn	file "../Source/prod.c",line 3663,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3663| 
	.dwpsn	file "../Source/prod.c",line 3671,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3671| 
	.dwpsn	file "../Source/prod.c",line 3664,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3664| 
	.dwpsn	file "../Source/prod.c",line 3671,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3671| 
        CMPB      AL,#146               ; [CPU_] |3671| 
        B         $C$L694,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#146               ; [CPU_] |3671| 
        B         $C$L231,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#54                ; [CPU_] |3671| 
        B         $C$L690,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#54                ; [CPU_] |3671| 
        B         $C$L725,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#36                ; [CPU_] |3671| 
        B         $C$L688,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#36                ; [CPU_] |3671| 
        B         $C$L287,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#33                ; [CPU_] |3671| 
        B         $C$L687,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#33                ; [CPU_] |3671| 
        B         $C$L302,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#16                ; [CPU_] |3671| 
        B         $C$L741,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        MOV       AH,AL                 ; [CPU_] |3671| 
        ADDB      AH,#-17               ; [CPU_] |3671| 
        CMPB      AH,#1                 ; [CPU_] |3671| 
        B         $C$L740,LOS           ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#32                ; [CPU_] |3671| 
        B         $C$L736,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3671| 
        B         $C$L298,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#35                ; [CPU_] |3671| 
        B         $C$L295,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3671| 
        B         $C$L689,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#51                ; [CPU_] |3671| 
        B         $C$L730,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#48                ; [CPU_] |3671| 
        B         $C$L281,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#49                ; [CPU_] |3671| 
        B         $C$L256,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#50                ; [CPU_] |3671| 
        B         $C$L732,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3671| 
        B         $C$L728,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#53                ; [CPU_] |3671| 
        B         $C$L727,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3671| 
        B         $C$L692,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#71                ; [CPU_] |3671| 
        B         $C$L252,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#68                ; [CPU_] |3671| 
        B         $C$L691,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#65                ; [CPU_] |3671| 
        B         $C$L710,GEQ           ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#55                ; [CPU_] |3671| 
        B         $C$L718,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#56                ; [CPU_] |3671| 
        B         $C$L714,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#57                ; [CPU_] |3671| 
        B         $C$L712,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3671| 
        B         $C$L709,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#70                ; [CPU_] |3671| 
        B         $C$L702,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3671| 
        B         $C$L693,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#132               ; [CPU_] |3671| 
        B         $C$L310,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#72                ; [CPU_] |3671| 
        B         $C$L245,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#130               ; [CPU_] |3671| 
        B         $C$L240,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#131               ; [CPU_] |3671| 
        B         $C$L311,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3671| 
        B         $C$L236,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#145               ; [CPU_] |3671| 
        B         $C$L235,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3671| 
        B         $C$L698,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#169               ; [CPU_] |3671| 
        B         $C$L168,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#161               ; [CPU_] |3671| 
        B         $C$L696,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#161               ; [CPU_] |3671| 
        B         $C$L194,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#150               ; [CPU_] |3671| 
        B         $C$L695,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#150               ; [CPU_] |3671| 
        B         $C$L224,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#147               ; [CPU_] |3671| 
        B         $C$L230,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#148               ; [CPU_] |3671| 
        B         $C$L229,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#149               ; [CPU_] |3671| 
        B         $C$L228,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3671| 
        B         $C$L215,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#160               ; [CPU_] |3671| 
        B         $C$L210,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3671| 
        B         $C$L697,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#166               ; [CPU_] |3671| 
        B         $C$L182,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#162               ; [CPU_] |3671| 
        B         $C$L189,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#163               ; [CPU_] |3671| 
        B         $C$L185,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#165               ; [CPU_] |3671| 
        B         $C$L184,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3671| 
        B         $C$L179,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#168               ; [CPU_] |3671| 
        B         $C$L177,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3671| 
        B         $C$L700,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#195               ; [CPU_] |3671| 
        B         $C$L143,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#192               ; [CPU_] |3671| 
        B         $C$L699,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#192               ; [CPU_] |3671| 
        B         $C$L160,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#170               ; [CPU_] |3671| 
        B         $C$L164,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#186               ; [CPU_] |3671| 
        B         $C$L308,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#187               ; [CPU_] |3671| 
        B         $C$L307,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3671| 
        B         $C$L153,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#194               ; [CPU_] |3671| 
        B         $C$L150,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3671| 
        B         $C$L701,GT            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#210               ; [CPU_] |3671| 
        B         $C$L79,EQ             ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#196               ; [CPU_] |3671| 
        B         $C$L115,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#197               ; [CPU_] |3671| 
        B         $C$L91,EQ             ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#198               ; [CPU_] |3671| 
        B         $C$L80,EQ             ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3671| 
        B         $C$L306,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        CMPB      AL,#240               ; [CPU_] |3671| 
        B         $C$L305,EQ            ; [CPU_] |3671| 
        ; branchcc occurs ; [] |3671| 
        B         $C$L317,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4335,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4335| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4335| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4337,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4337| 
        ANDB      AL,#0xff              ; [CPU_] |4337| 
        MOV       *XAR1++,AL            ; [CPU_] |4337| 
	.dwpsn	file "../Source/prod.c",line 4338,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4338| 
        LSR       AL,8                  ; [CPU_] |4338| 
        MOV       *XAR1++,AL            ; [CPU_] |4338| 
	.dwpsn	file "../Source/prod.c",line 4336,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4336| 
        ; branchcc occurs ; [] |4336| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4338,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4338| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4344,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4344| 
        MOV       AH,#0                 ; [CPU_] |4344| 
        MOVL      XAR0,#88              ; [CPU_] |4344| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4344| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4344| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4344| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4344| 
        ; call occurs [#FS$$CMP] ; [] |4344| 
        CMPB      AL,#0                 ; [CPU_] |4344| 
        B         $C$L705,NEQ           ; [CPU_] |4344| 
        ; branchcc occurs ; [] |4344| 
	.dwpsn	file "../Source/prod.c",line 4343,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4343| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4345,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4345| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4347,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4347| 
        MOV       AH,#0                 ; [CPU_] |4347| 
        MOVL      XAR0,#88              ; [CPU_] |4347| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4347| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4347| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4347| 
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4347| 
        ; call occurs [#FS$$CMP] ; [] |4347| 
        CMPB      AL,#0                 ; [CPU_] |4347| 
        B         $C$L707,EQ            ; [CPU_] |4347| 
        ; branchcc occurs ; [] |4347| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4348,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4348| 
        MOV       *-SP[59],AL           ; [CPU_] |4348| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4350,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4350| 
        MOVL      XAR0,#88              ; [CPU_] |4350| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4350| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4350| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4350| 
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4350| 
        ; call occurs [#FS$$CMP] ; [] |4350| 
        CMPB      AL,#0                 ; [CPU_] |4350| 
        B         $C$L708,EQ            ; [CPU_] |4350| 
        ; branchcc occurs ; [] |4350| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4351,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4351| 
        MOV       *-SP[59],AL           ; [CPU_] |4351| 
$C$L708:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4353,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4353| 
        MOV       *XAR1++,AL            ; [CPU_] |4353| 
	.dwpsn	file "../Source/prod.c",line 4342,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4342| 
	.dwpsn	file "../Source/prod.c",line 4353,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4353| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4353| 
	.dwpsn	file "../Source/prod.c",line 4342,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4342| 
        SUBB      XAR6,#1               ; [CPU_U] |4342| 
        ADDB      ACC,#10               ; [CPU_] |4342| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4342| 
        MOVZ      AR0,AR6               ; [CPU_] |4342| 
        MOV       *-SP[47],AR6          ; [CPU_] |4342| 
        CMP       AR0,#-1               ; [CPU_] |4342| 
        B         $C$L704,NEQ           ; [CPU_] |4342| 
        ; branchcc occurs ; [] |4342| 
        B         $C$L743,UNC           ; [CPU_] |4342| 
        ; branch occurs ; [] |4342| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4328,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4328| 
        MOV       AH,#16672             ; [CPU_] |4328| 
        MOVL      XAR0,#46              ; [CPU_] |4328| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4328| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4328| 
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4328| 
        ; call occurs [#FS$$MPY] ; [] |4328| 
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4328| 
        ; call occurs [#FS$$TOU] ; [] |4328| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4328| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4328| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4328,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4328| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4329| 
        MOV       *-SP[61],#4           ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4331,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4331| 
        ; branch occurs ; [] |4331| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4310,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4310| 
        MOV       AH,#16672             ; [CPU_] |4310| 
        MOVL      XAR0,#46              ; [CPU_] |4310| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4310| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4310| 
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4310| 
        ; call occurs [#FS$$MPY] ; [] |4310| 
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4310| 
        ; call occurs [#FS$$TOU] ; [] |4310| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4310| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4310| 
	.dwpsn	file "../Source/prod.c",line 4311,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4310,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4310| 
	.dwpsn	file "../Source/prod.c",line 4311,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4313| 
        ; call occurs [#_ad7738_getmon] ; [] |4313| 
	.dwpsn	file "../Source/prod.c",line 4314,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4314| 
        MOV       AH,#18371             ; [CPU_] |4314| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4314| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4314| 
        ADDL      ACC,XAR4              ; [CPU_] |4314| 
        SUBB      ACC,#130              ; [CPU_] |4314| 
        MOVL      XAR4,ACC              ; [CPU_] |4314| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4314| 
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4314| 
        ; call occurs [#FS$$MPY] ; [] |4314| 
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4314| 
        ; call occurs [#FS$$TOL] ; [] |4314| 
	.dwpsn	file "../Source/prod.c",line 4315,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4315| 
	.dwpsn	file "../Source/prod.c",line 4314,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4314| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4314| 
	.dwpsn	file "../Source/prod.c",line 4315,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4315| 
	.dwpsn	file "../Source/prod.c",line 4314,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4314| 
	.dwpsn	file "../Source/prod.c",line 4315,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4315| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4318,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4318| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4317,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4317| 
        ANDB      AL,#0xff              ; [CPU_] |4317| 
        MOV       *XAR4++,AL            ; [CPU_] |4317| 
	.dwpsn	file "../Source/prod.c",line 4318,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4318| 
        LSR       AL,8                  ; [CPU_] |4318| 
        MOV       *XAR4++,AL            ; [CPU_] |4318| 
	.dwpsn	file "../Source/prod.c",line 4316,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4316| 
        ; branchcc occurs ; [] |4316| 
        B         $C$L743,UNC           ; [CPU_] |4316| 
        ; branch occurs ; [] |4316| 
$C$L712:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4297,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4297| 
        MOV       *-SP[61],AL           ; [CPU_] |4297| 
	.dwpsn	file "../Source/prod.c",line 4296,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4296| 
        MOV       *-SP[47],AL           ; [CPU_] |4296| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4297,column 6,is_stmt,isa 0
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4297| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4297| 
        MOV       *XAR1++,AL            ; [CPU_] |4297| 
	.dwpsn	file "../Source/prod.c",line 4296,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4296| 
	.dwpsn	file "../Source/prod.c",line 4297,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4297| 
	.dwpsn	file "../Source/prod.c",line 4296,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4296| 
        B         $C$L713,LT            ; [CPU_] |4296| 
        ; branchcc occurs ; [] |4296| 
        B         $C$L743,UNC           ; [CPU_] |4296| 
        ; branch occurs ; [] |4296| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4274,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4274| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4274| 
        MOVL      XAR6,ACC              ; [CPU_] |4274| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4274| 
        MOV       *XAR4++,AL            ; [CPU_] |4274| 
	.dwpsn	file "../Source/prod.c",line 4275,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4275| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4275| 
        MOVL      XAR6,ACC              ; [CPU_] |4275| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4275| 
        MOV       *XAR4++,AL            ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4276,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4276| 
        ADD       ACC,#199 << 4         ; [CPU_] |4276| 
        MOVL      XAR6,ACC              ; [CPU_] |4276| 
	.dwpsn	file "../Source/prod.c",line 4278,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4278| 
	.dwpsn	file "../Source/prod.c",line 4276,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4276| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4276| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4280,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4280| 
        ANDB      AL,#0xff              ; [CPU_] |4280| 
        MOV       *XAR4++,AL            ; [CPU_] |4280| 
	.dwpsn	file "../Source/prod.c",line 4281,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4281| 
        LSR       AL,8                  ; [CPU_] |4281| 
        MOV       *XAR4++,AL            ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4279,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4279| 
        ; branchcc occurs ; [] |4279| 
	.dwpsn	file "../Source/prod.c",line 4284,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4284| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4286,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4286| 
        ANDB      AL,#0xff              ; [CPU_] |4286| 
        MOV       *XAR4++,AL            ; [CPU_] |4286| 
	.dwpsn	file "../Source/prod.c",line 4287,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4287| 
        LSR       AL,8                  ; [CPU_] |4287| 
        MOV       *XAR4++,AL            ; [CPU_] |4287| 
	.dwpsn	file "../Source/prod.c",line 4285,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4285| 
        ; branchcc occurs ; [] |4285| 
	.dwpsn	file "../Source/prod.c",line 4275,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4275| 
        ADD       *-SP[61],#11          ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4273,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4273| 
        ADDB      XAR0,#8               ; [CPU_] |4273| 
        ADDB      XAR7,#8               ; [CPU_] |4273| 
        SUBB      XAR6,#1               ; [CPU_U] |4273| 
        MOVZ      AR3,AR6               ; [CPU_] |4273| 
        CMP       AR6,#-1               ; [CPU_] |4273| 
        B         $C$L715,NEQ           ; [CPU_] |4273| 
        ; branchcc occurs ; [] |4273| 
        B         $C$L743,UNC           ; [CPU_] |4273| 
        ; branch occurs ; [] |4273| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4220,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4220| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4220| 
        MOVL      XAR6,ACC              ; [CPU_] |4220| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4220| 
        MOV       *XAR4++,AL            ; [CPU_] |4220| 
	.dwpsn	file "../Source/prod.c",line 4221,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4221| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4221| 
        MOVL      XAR6,ACC              ; [CPU_] |4221| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4221| 
	.dwpsn	file "../Source/prod.c",line 4225,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4225| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4221,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4221| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4232,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4232| 
        ANDB      AL,#0xff              ; [CPU_] |4232| 
        MOV       *XAR4++,AL            ; [CPU_] |4232| 
	.dwpsn	file "../Source/prod.c",line 4233,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4233| 
        LSR       AL,8                  ; [CPU_] |4233| 
        MOV       *XAR4++,AL            ; [CPU_] |4233| 
	.dwpsn	file "../Source/prod.c",line 4231,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR0--         ; [CPU_] |4231| 
        ; branchcc occurs ; [] |4231| 
	.dwpsn	file "../Source/prod.c",line 4238,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4238| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4245,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4245| 
        ANDB      AL,#0xff              ; [CPU_] |4245| 
        MOV       *XAR4++,AL            ; [CPU_] |4245| 
	.dwpsn	file "../Source/prod.c",line 4246,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4246| 
        LSR       AL,8                  ; [CPU_] |4246| 
        MOV       *XAR4++,AL            ; [CPU_] |4246| 
	.dwpsn	file "../Source/prod.c",line 4244,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4244| 
        ; branchcc occurs ; [] |4244| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4251,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4251| 
        ANDB      AL,#0xff              ; [CPU_] |4251| 
        MOV       *XAR4++,AL            ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4252,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4252| 
        LSR       AL,8                  ; [CPU_] |4252| 
        MOV       *XAR4++,AL            ; [CPU_] |4252| 
	.dwpsn	file "../Source/prod.c",line 4250,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4250| 
        ; branchcc occurs ; [] |4250| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4257,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4257| 
        ANDB      AL,#0xff              ; [CPU_] |4257| 
        MOV       *XAR4++,AL            ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4258| 
        LSR       AL,8                  ; [CPU_] |4258| 
        MOV       *XAR4++,AL            ; [CPU_] |4258| 
	.dwpsn	file "../Source/prod.c",line 4256,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4256| 
        ; branchcc occurs ; [] |4256| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4263,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4263| 
        ANDB      AL,#0xff              ; [CPU_] |4263| 
        MOV       *XAR4++,AL            ; [CPU_] |4263| 
	.dwpsn	file "../Source/prod.c",line 4264,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4264| 
        LSR       AL,8                  ; [CPU_] |4264| 
        MOV       *XAR4++,AL            ; [CPU_] |4264| 
	.dwpsn	file "../Source/prod.c",line 4262,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4262| 
        ; branchcc occurs ; [] |4262| 
	.dwpsn	file "../Source/prod.c",line 4219,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4219| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4219| 
        MOVL      XAR0,#88              ; [CPU_] |4219| 
        ADDB      ACC,#12               ; [CPU_] |4219| 
        ADDB      XAR1,#12              ; [CPU_] |4219| 
        ADDB      XAR7,#12              ; [CPU_] |4219| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4221,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4221| 
	.dwpsn	file "../Source/prod.c",line 4219,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4221,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4221| 
	.dwpsn	file "../Source/prod.c",line 4219,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4219| 
        SUBB      XAR0,#1               ; [CPU_U] |4219| 
        ADDB      ACC,#12               ; [CPU_] |4219| 
        MOVL      XT,ACC                ; [CPU_] |4219| 
        MOV       *-SP[47],AR0          ; [CPU_] |4219| 
        MOVL      ACC,P                 ; [CPU_] |4219| 
        ADDB      ACC,#12               ; [CPU_] |4219| 
        MOVL      P,ACC                 ; [CPU_] |4219| 
        CMP       AR0,#-1               ; [CPU_] |4219| 
        B         $C$L719,NEQ           ; [CPU_] |4219| 
        ; branchcc occurs ; [] |4219| 
        B         $C$L743,UNC           ; [CPU_] |4219| 
        ; branch occurs ; [] |4219| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4212,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4212| 
        MOV       *-SP[61],AL           ; [CPU_] |4212| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4210,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4210| 
        MOV       *XAR4++,AL            ; [CPU_] |4210| 
	.dwpsn	file "../Source/prod.c",line 4211,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4211| 
        MOV       *XAR4++,AL            ; [CPU_] |4211| 
	.dwpsn	file "../Source/prod.c",line 4212,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4212| 
	.dwpsn	file "../Source/prod.c",line 4209,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4209| 
	.dwpsn	file "../Source/prod.c",line 4212,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4212| 
	.dwpsn	file "../Source/prod.c",line 4209,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4209| 
        ; branchcc occurs ; [] |4209| 
        B         $C$L743,UNC           ; [CPU_] |4209| 
        ; branch occurs ; [] |4209| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4200,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4200| 
        MOVB      XAR0,#36              ; [CPU_] |4200| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4200| 
        MOVL      XAR0,#80              ; [CPU_] |4200| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4200| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4202,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4200,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4200| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4202,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4201,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4201| 
        ; branch occurs ; [] |4201| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4186,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4186| 
        MOVB      XAR0,#38              ; [CPU_] |4186| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4186| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4187,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4186,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4186| 
	.dwpsn	file "../Source/prod.c",line 4187,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4186,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4187,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4187| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4192,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4192| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4191,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4191| 
        ANDB      AL,#0xff              ; [CPU_] |4191| 
        MOV       *XAR4++,AL            ; [CPU_] |4191| 
	.dwpsn	file "../Source/prod.c",line 4192,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4192| 
        LSR       AL,8                  ; [CPU_] |4192| 
        MOV       *XAR4++,AL            ; [CPU_] |4192| 
	.dwpsn	file "../Source/prod.c",line 4190,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4190| 
        ; branchcc occurs ; [] |4190| 
        B         $C$L743,UNC           ; [CPU_] |4190| 
        ; branch occurs ; [] |4190| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4176| 
        MOV       *-SP[61],AL           ; [CPU_] |4176| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4175,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4175,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4175| 
        ; branchcc occurs ; [] |4175| 
        B         $C$L743,UNC           ; [CPU_] |4175| 
        ; branch occurs ; [] |4175| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4159,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4159| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4161,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4161| 
        ANDB      AL,#0xff              ; [CPU_] |4161| 
        MOV       *XAR4++,AL            ; [CPU_] |4161| 
	.dwpsn	file "../Source/prod.c",line 4162,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4162| 
        LSR       AL,8                  ; [CPU_] |4162| 
        MOV       *XAR4++,AL            ; [CPU_] |4162| 
	.dwpsn	file "../Source/prod.c",line 4160,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4160| 
        ; branchcc occurs ; [] |4160| 
	.dwpsn	file "../Source/prod.c",line 4158,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4158| 
	.dwpsn	file "../Source/prod.c",line 4162,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4162| 
	.dwpsn	file "../Source/prod.c",line 4158,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4158| 
        ; branchcc occurs ; [] |4158| 
	.dwpsn	file "../Source/prod.c",line 4167,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4167| 
        MOVL      ACC,XAR5              ; [CPU_] |4167| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4167| 
        MOVL      XAR6,ACC              ; [CPU_] |4167| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4167| 
        ANDB      AL,#0xff              ; [CPU_] |4167| 
        MOV       *XAR4++,AL            ; [CPU_] |4167| 
	.dwpsn	file "../Source/prod.c",line 4168,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4168| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4168| 
        MOVL      XAR5,ACC              ; [CPU_] |4168| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4168| 
        LSR       AL,8                  ; [CPU_] |4168| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4168| 
$C$L735:    
        ADD       *-SP[61],#2           ; [CPU_] |4168| 
	.dwpsn	file "../Source/prod.c",line 4171,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4171| 
        ; branch occurs ; [] |4171| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3813,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3813| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3813| 
        MOVZ      AR4,AR4               ; [CPU_] |3813| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3815,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3815| 
        ANDB      AL,#0xff              ; [CPU_] |3815| 
        MOV       *XAR1++,AL            ; [CPU_] |3815| 
	.dwpsn	file "../Source/prod.c",line 3816,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3816| 
        LSR       AL,8                  ; [CPU_] |3816| 
        MOV       *XAR1++,AL            ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3814,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3814| 
        ; branchcc occurs ; [] |3814| 
	.dwpsn	file "../Source/prod.c",line 3820,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3820| 
        ANDB      AL,#0xff              ; [CPU_] |3820| 
	.dwpsn	file "../Source/prod.c",line 3821,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3821| 
	.dwpsn	file "../Source/prod.c",line 3820,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3820| 
	.dwpsn	file "../Source/prod.c",line 3821,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3821| 
        LSR       AL,8                  ; [CPU_] |3821| 
        MOV       *XAR1++,AL            ; [CPU_] |3821| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3821| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3825,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3825| 
        ANDB      AL,#0xff              ; [CPU_] |3825| 
        MOV       *XAR1++,AL            ; [CPU_] |3825| 
	.dwpsn	file "../Source/prod.c",line 3826,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3826| 
        LSR       AL,8                  ; [CPU_] |3826| 
        MOV       *XAR1++,AL            ; [CPU_] |3826| 
	.dwpsn	file "../Source/prod.c",line 3824,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3824| 
        ; branchcc occurs ; [] |3824| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3830,column 5,is_stmt,isa 0
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("_strlen")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3830| 
        ; call occurs [#_strlen] ; [] |3830| 
	.dwpsn	file "../Source/prod.c",line 3831,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3816,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3832,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3832| 
        B         $C$L743,EQ            ; [CPU_] |3832| 
        ; branchcc occurs ; [] |3832| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3831,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3832,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3832| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3833,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3833| 
	.dwpsn	file "../Source/prod.c",line 3832,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3832| 
	.dwpsn	file "../Source/prod.c",line 3833,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3833| 
        INC       *-SP[61]              ; [CPU_] |3833| 
	.dwpsn	file "../Source/prod.c",line 3832,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3832| 
        B         $C$L739,HI            ; [CPU_] |3832| 
        ; branchcc occurs ; [] |3832| 
        B         $C$L743,UNC           ; [CPU_] |3832| 
        ; branch occurs ; [] |3832| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3799,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3799| 
        MOVL      XAR0,#66              ; [CPU_] |3799| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3799| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3799| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3799| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3799| 
	.dwpsn	file "../Source/prod.c",line 3802,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3802| 
        ; branch occurs ; [] |3802| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3793,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3793| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3793| 
$C$L742:    
        MOV       *-SP[61],#3           ; [CPU_] |3793| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5784,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5784| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1492, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5784| 
        ; call occurs [#_scia_send_bin] ; [] |5784| 
	.dwpsn	file "../Source/prod.c",line 5786,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5786| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5786| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5786| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5786| 
        CMPB      AL,#240               ; [CPU_] |5786| 
        B         $C$L634,NEQ           ; [CPU_] |5786| 
        ; branchcc occurs ; [] |5786| 
	.dwpsn	file "../Source/prod.c",line 5787,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5787| 
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_name("_delay_us")
	.dwattr $C$DW$1493, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5787| 
        ; call occurs [#_delay_us] ; [] |5787| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5788,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5788| 
$C$DW$1494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1494, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1494, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5788| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5788| 
        B         $C$L634,UNC           ; [CPU_] |5788| 
        ; branch occurs ; [] |5788| 
	.dwattr $C$DW$281, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$281, DW_AT_TI_end_line(0x16bb)
	.dwattr $C$DW$281, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$281

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1495	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1495, DW_AT_name("get_fattime")
	.dwattr $C$DW$1495, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1495, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1495, DW_AT_external
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1495, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1495, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1495, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1495, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1496, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1495, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1495, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1495, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1495

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 19 2019",0
	.align	2
$C$FSL62:	.string	"14:16:02",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_ad7738_resettare
	.global	_ad7738_monclr
	.global	_ad7738_resetpeak
	.global	_ad7738_settemp
	.global	_mcbsp_xmit
	.global	_ad7738_resetlimit
	.global	_ad7738_setcal
	.global	_SPICANCheckInts
	.global	_conf_default
	.global	_SPICANWaitForTXBuf
	.global	_SPICANRoutine
	.global	_velf_rst
	.global	_dac_setmode
	.global	_ad7738_init
	.global	_maf_rst
	.global	_SPICANReadSetT0Message
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_latch_dac
	.global	_SPICANInit
	.global	_extio_init
	.global	_gpio_init
	.global	_ssr_set
	.global	_uart_set_dir
	.global	_lcd_init
	.global	_lcd_clear
	.global	_led_init
	.global	_led_set
	.global	_InitPieVectTable
	.global	_delay_us
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_sys_init
	.global	_lcd_dputs
	.global	_lcd_puts
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_scia_getparam
	.global	_SPICANRead
	.global	_scia_puts
	.global	_sprintf
	.global	_scia_send_bin
	.global	_SPICANReadStat
	.global	_port4004
	.global	_secureRamFuncs_runstart
	.global	_atoi
	.global	_port400e
	.global	_Flash28_API_LoadEnd
	.global	_Flash28_API_LoadStart
	.global	_secureRamFuncs_loadstart
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadend
	.global	_ad7738_tempstart
	.global	_conf_write
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_getlimitchgd
	.global	_ad7738_getlimitst
	.global	_conf_read
	.global	_tagdetect
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_strtod
	.global	_atol
	.global	_ad7738_getmon
	.global	_ds1820read
	.global	_prod_getnext
	.global	_Flash_CPUScaleFactor
	.global	_Flash_CallbackPtr
	.global	_ad7738_getvall
	.global	_ad7738_getpeak
	.global	_strlen
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("fs_type")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("drv")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1499, DW_AT_name("csize")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1500, DW_AT_name("n_fats")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1501, DW_AT_name("wflag")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1502, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1503, DW_AT_name("id")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1504, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1505, DW_AT_name("last_clust")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1506, DW_AT_name("free_clust")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1507, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1508, DW_AT_name("cdir")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1509, DW_AT_name("n_fatent")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1510, DW_AT_name("fsize")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1511, DW_AT_name("fatbase")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1512, DW_AT_name("dirbase")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1513, DW_AT_name("database")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1514, DW_AT_name("winsect")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1515, DW_AT_name("win")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1516, DW_AT_name("fs")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1517, DW_AT_name("id")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1518, DW_AT_name("flag")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1519, DW_AT_name("pad1")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1520, DW_AT_name("fptr")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1521, DW_AT_name("fsize")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1522, DW_AT_name("org_clust")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1523, DW_AT_name("curr_clust")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1524, DW_AT_name("dsect")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1525, DW_AT_name("dir_sect")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1526, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1527, DW_AT_name("cltbl")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1528, DW_AT_name("buf")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1529, DW_AT_name("year")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1530, DW_AT_name("month")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1531, DW_AT_name("mday")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1532, DW_AT_name("wday")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1533, DW_AT_name("hour")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1534, DW_AT_name("min")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1535, DW_AT_name("sec")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1536, DW_AT_name("adc")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1537, DW_AT_name("adw")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1538, DW_AT_name("pos")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1539, DW_AT_name("vel")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1540, DW_AT_name("ci")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1541, DW_AT_name("bslope")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1542, DW_AT_name("tcx")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1543, DW_AT_name("tcy")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1544, DW_AT_name("tcz")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1545	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1545, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("what")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("ch")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1548, DW_AT_name("dslopep")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1549, DW_AT_name("dslopen")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1550, DW_AT_name("dint")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1551, DW_AT_name("gain")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1552, DW_AT_name("offset")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1553	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1553, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("what")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("ch")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("adec")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1557	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1557, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("all")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1575, DW_AT_name("bit")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("all")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1593, DW_AT_name("bit")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("all")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1611, DW_AT_name("bit")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("all")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1629, DW_AT_name("bit")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("all")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1647, DW_AT_name("bit")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("all")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1665, DW_AT_name("bit")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("all")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1683, DW_AT_name("bit")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("all")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1701, DW_AT_name("bit")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("rsvd1")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("rsvd2")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("all")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1709, DW_AT_name("bit")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("rsvd1")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("rsvd2")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("all")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1717, DW_AT_name("bit")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("rsvd1")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("rsvd2")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("all")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1725, DW_AT_name("bit")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("rsvd1")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("rsvd2")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("all")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1733, DW_AT_name("bit")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("rsvd1")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("all")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1739, DW_AT_name("bit")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("rsvd1")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("all")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1745, DW_AT_name("bit")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("rsvd1")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("all")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1751, DW_AT_name("bit")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("rsvd1")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("all")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1757, DW_AT_name("bit")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("all")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1775, DW_AT_name("bit")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("all")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1793, DW_AT_name("bit")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("all")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1811, DW_AT_name("bit")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1825, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1825, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("all")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1829, DW_AT_name("bit")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("rsvd1")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1831, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1831, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("rsvd2")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("all")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1835, DW_AT_name("bit")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("rsvd1")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1837, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1837, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("rsvd2")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("all")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1841, DW_AT_name("bit")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("rsvd1")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1842, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1842, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1843, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1843, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1844, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1844, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("rsvd2")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("all")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1847, DW_AT_name("bit")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("rsvd1")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1848, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1848, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1849, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1849, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1850, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1850, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1851, DW_AT_name("rsvd2")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1851, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1851, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1852, DW_AT_name("all")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1853, DW_AT_name("bit")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1854, DW_AT_name("GPADAT")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1855, DW_AT_name("GPASET")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1856, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1857, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1858, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1859, DW_AT_name("GPBSET")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1860, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1861, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1862, DW_AT_name("rsvd1")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1863, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1864, DW_AT_name("GPDSET")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1865, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1866, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1867, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1868, DW_AT_name("GPESET")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1869, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1870, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1871, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1872, DW_AT_name("GPFSET")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1873, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1874, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1875, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1876, DW_AT_name("GPGSET")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1877, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1878, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1879, DW_AT_name("rsvd2")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1880	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1880)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1881, DW_AT_name("what")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1882, DW_AT_name("ch")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1883, DW_AT_name("limit")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1884, DW_AT_name("limits")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1885, DW_AT_name("limitr")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1886	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1886, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1887, DW_AT_name("usn")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1888, DW_AT_name("uname")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1889, DW_AT_name("rxdir")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1890, DW_AT_name("baud")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1891, DW_AT_name("tagiden")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1892, DW_AT_name("tarepersist")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1893, DW_AT_name("filter")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1894, DW_AT_name("diffwin")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1895, DW_AT_name("ch")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1896, DW_AT_name("sensor")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1897, DW_AT_name("vfd")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1898, DW_AT_name("dac")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1899, DW_AT_name("lim")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1900, DW_AT_name("velfilter")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1901, DW_AT_name("cntperin")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1902, DW_AT_name("magic")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1903	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1903)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1904, DW_AT_name("ssn")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1905, DW_AT_name("slbl")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1906, DW_AT_name("tagid")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1907, DW_AT_name("method")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1908, DW_AT_name("date")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1909, DW_AT_name("range")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1910, DW_AT_name("unit")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1911, DW_AT_name("ounit")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1912, DW_AT_name("ufactor")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1913, DW_AT_name("points")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1914, DW_AT_name("mass")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1915, DW_AT_name("adc")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1916, DW_AT_name("slope")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1917, DW_AT_name("intercept")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1918, DW_AT_name("shunt")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1919, DW_AT_name("base")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1920	.dwtag  DW_TAG_member
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1920, DW_AT_name("tare")
	.dwattr $C$DW$1920, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1920, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1920, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1921	.dwtag  DW_TAG_member
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1921, DW_AT_name("dacgain")
	.dwattr $C$DW$1921, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1921, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1921, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1922	.dwtag  DW_TAG_member
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1922, DW_AT_name("dacoff")
	.dwattr $C$DW$1922, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1922, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1922, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1923	.dwtag  DW_TAG_member
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1923, DW_AT_name("ch")
	.dwattr $C$DW$1923, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1923, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1923, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1924	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1924, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1925	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1925)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1926	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1926, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1927	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$6)

$C$DW$T$175	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$1927)


$C$DW$T$176	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_byte_size(0x101)
$C$DW$1928	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1928, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$176

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1929	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$10)

$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$1929)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1930	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$36)

$C$DW$1931	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1931, DW_AT_type(*$C$DW$1930)

$C$DW$T$298	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1931)

$C$DW$1932	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1932, DW_AT_type(*$C$DW$T$36)

$C$DW$T$299	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$1932)


$C$DW$T$300	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$300, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$T$300, DW_AT_language(DW_LANG_C)
$C$DW$1933	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$300


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1934	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1934, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87

$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)


$C$DW$T$307	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$307, DW_AT_byte_size(0x03)
$C$DW$1935	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1935, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$307


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x08)
$C$DW$1936	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1936, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$308

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1937	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1937, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1938	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1938, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1939	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1939, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1940	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1940, DW_AT_type(*$C$DW$T$12)

$C$DW$T$335	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$335, DW_AT_type(*$C$DW$1940)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1941	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1941, DW_AT_type(*$C$DW$T$90)

$C$DW$T$338	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$338, DW_AT_type(*$C$DW$1941)


$C$DW$T$339	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$339, DW_AT_type(*$C$DW$T$338)
	.dwattr $C$DW$T$339, DW_AT_language(DW_LANG_C)
$C$DW$1942	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$339

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$354	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$354, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$354, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$354, DW_AT_byte_size(0x08)
$C$DW$1943	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1943, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$354

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1944	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1944, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1945	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1945, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1946	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1946, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1947	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1947, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x06)
$C$DW$1948	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1948, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$373

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1949	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1949, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1950	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1950, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$359	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$359, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$359, DW_AT_address_class(0x20)

$C$DW$1951	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1951, DW_AT_type(*$C$DW$T$5)

$C$DW$T$179	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$1951)

$C$DW$T$180	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_address_class(0x20)


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
$C$DW$1952	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$374


$C$DW$T$375	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$375, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$375, DW_AT_byte_size(0x400)
$C$DW$1953	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1953, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$375


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x08)
$C$DW$1954	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1954, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$380


$C$DW$T$381	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$381, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$381, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$381, DW_AT_byte_size(0x64)
$C$DW$1955	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1955, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$381


$C$DW$T$382	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$382, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$382, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$382, DW_AT_byte_size(0x40)
$C$DW$1956	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1956, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$382

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("AL")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg0]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("AH")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg1]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("PL")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg2]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("PH")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_reg3]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("SP")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_reg20]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("XT")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_reg21]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("T")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_reg22]

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("ST0")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_reg23]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("ST1")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_reg24]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("PC")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_reg25]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("RPC")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_reg26]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("FP")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_reg28]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("DP")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_reg29]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("SXM")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_reg30]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("PM")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_reg31]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("OVM")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("PAGE0")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("AMODE")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("INTM")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("IFR")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("IER")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("V")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1980	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1980, DW_AT_name("VOL")
	.dwattr $C$DW$1980, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1981	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1981, DW_AT_name("AR0")
	.dwattr $C$DW$1981, DW_AT_location[DW_OP_reg4]

$C$DW$1982	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1982, DW_AT_name("XAR0")
	.dwattr $C$DW$1982, DW_AT_location[DW_OP_reg5]

$C$DW$1983	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1983, DW_AT_name("AR1")
	.dwattr $C$DW$1983, DW_AT_location[DW_OP_reg6]

$C$DW$1984	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1984, DW_AT_name("XAR1")
	.dwattr $C$DW$1984, DW_AT_location[DW_OP_reg7]

$C$DW$1985	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1985, DW_AT_name("AR2")
	.dwattr $C$DW$1985, DW_AT_location[DW_OP_reg8]

$C$DW$1986	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1986, DW_AT_name("XAR2")
	.dwattr $C$DW$1986, DW_AT_location[DW_OP_reg9]

$C$DW$1987	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1987, DW_AT_name("AR3")
	.dwattr $C$DW$1987, DW_AT_location[DW_OP_reg10]

$C$DW$1988	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1988, DW_AT_name("XAR3")
	.dwattr $C$DW$1988, DW_AT_location[DW_OP_reg11]

$C$DW$1989	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1989, DW_AT_name("AR4")
	.dwattr $C$DW$1989, DW_AT_location[DW_OP_reg12]

$C$DW$1990	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1990, DW_AT_name("XAR4")
	.dwattr $C$DW$1990, DW_AT_location[DW_OP_reg13]

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("AR5")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg14]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("XAR5")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg15]

$C$DW$1993	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1993, DW_AT_name("AR6")
	.dwattr $C$DW$1993, DW_AT_location[DW_OP_reg16]

$C$DW$1994	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1994, DW_AT_name("XAR6")
	.dwattr $C$DW$1994, DW_AT_location[DW_OP_reg17]

$C$DW$1995	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1995, DW_AT_name("AR7")
	.dwattr $C$DW$1995, DW_AT_location[DW_OP_reg18]

$C$DW$1996	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1996, DW_AT_name("XAR7")
	.dwattr $C$DW$1996, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

