;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Wed Dec 04 14:28:58 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("conf_default")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwendtag $C$DW$1


$C$DW$2	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$2, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$2, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$2, DW_AT_declaration
	.dwattr $C$DW$2, DW_AT_external
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$2


$C$DW$4	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$4, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwendtag $C$DW$4


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$5


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("scia_init")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$9


$C$DW$11	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$11, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("lcd_puts")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$163)

$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("configCAN")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$163)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$19


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("maf_rst")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwendtag $C$DW$23


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("velf_rst")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ds1820start")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("ad7738_init")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("dac_setmode")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$27


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("InitECan")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29


$C$DW$30	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$30, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwendtag $C$DW$30

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("METHOD")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external


$C$DW$32	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$32, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("delay_us")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$34

$C$DW$36	.dwtag  DW_TAG_variable
	.dwattr $C$DW$36, DW_AT_name("UNITS")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external

$C$DW$37	.dwtag  DW_TAG_variable
	.dwattr $C$DW$37, DW_AT_name("BITMAP")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external

$C$DW$38	.dwtag  DW_TAG_variable
	.dwattr $C$DW$38, DW_AT_name("BAUD")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$329)
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("latch_dac")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39

$C$DW$40	.dwtag  DW_TAG_variable
	.dwattr $C$DW$40, DW_AT_name("LPV")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwendtag $C$DW$41


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$11)

$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$42

$C$DW$45	.dwtag  DW_TAG_variable
	.dwattr $C$DW$45, DW_AT_name("INTERFACE")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("gpio_init")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("extio_init")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwendtag $C$DW$47


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("led_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("lcd_init")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwendtag $C$DW$49


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("led_set")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$36)

$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$50


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("lcd_clear")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwendtag $C$DW$53


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("flash_init")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("shunt_switch")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("reboot")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwendtag $C$DW$57


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("ssr_set")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$36)

$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$58


$C$DW$61	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$61, DW_AT_name("sys_init")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwendtag $C$DW$61


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$62


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("tagdetect")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64

$C$DW$66	.dwtag  DW_TAG_variable
	.dwattr $C$DW$66, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external

$C$DW$67	.dwtag  DW_TAG_variable
	.dwattr $C$DW$67, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external

$C$DW$68	.dwtag  DW_TAG_variable
	.dwattr $C$DW$68, DW_AT_name("port4004")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$295)
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$69	.dwtag  DW_TAG_variable
	.dwattr $C$DW$69, DW_AT_name("autoidchanged")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$69, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$69, DW_AT_external

$C$DW$70	.dwtag  DW_TAG_variable
	.dwattr $C$DW$70, DW_AT_name("port400e")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$295)
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$71	.dwtag  DW_TAG_variable
	.dwattr $C$DW$71, DW_AT_name("cmd_mode")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$71, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$71, DW_AT_external

$C$DW$72	.dwtag  DW_TAG_variable
	.dwattr $C$DW$72, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external

$C$DW$73	.dwtag  DW_TAG_variable
	.dwattr $C$DW$73, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external

$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external

$C$DW$75	.dwtag  DW_TAG_variable
	.dwattr $C$DW$75, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external


$C$DW$76	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$76, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$163)

$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$76


$C$DW$79	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$79, DW_AT_name("scia_puts")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$79


$C$DW$81	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$81, DW_AT_name("scia_getparam")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$163)

$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$163)

$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$81


$C$DW$85	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$85, DW_AT_name("conf_write")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwendtag $C$DW$85


$C$DW$86	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$86, DW_AT_name("conf_read")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwendtag $C$DW$86


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("sprintf")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$163)

$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$177)

$C$DW$90	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$87


$C$DW$91	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$91, DW_AT_name("atoi")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$91


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$163)

$C$DW$95	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$93


$C$DW$96	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$96, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
	.dwendtag $C$DW$96


$C$DW$97	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$97, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwendtag $C$DW$97


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$101


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ds1820read")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$106	.dwtag  DW_TAG_variable
	.dwattr $C$DW$106, DW_AT_name("VEL_U")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$106, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$106, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$107	.dwtag  DW_TAG_variable
	.dwattr $C$DW$107, DW_AT_name("POS_U")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$107, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$107, DW_AT_external


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("memcpy")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$3)

$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$148)

$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$108


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("strtod")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$177)

$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$349)

	.dwendtag $C$DW$112


$C$DW$115	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$115, DW_AT_name("strlen")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$115


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
$C$DW$118	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$117


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("atol")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$119

$C$DW$121	.dwtag  DW_TAG_variable
	.dwattr $C$DW$121, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$121, DW_AT_declaration
	.dwattr $C$DW$121, DW_AT_external


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("prod_getnext")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
	.dwendtag $C$DW$122


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
	.dwendtag $C$DW$123

$C$DW$124	.dwtag  DW_TAG_variable
	.dwattr $C$DW$124, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$124, DW_AT_declaration
	.dwattr $C$DW$124, DW_AT_external


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
	.dwendtag $C$DW$125


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
	.dwendtag $C$DW$126


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("prod_getavail")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
	.dwendtag $C$DW$127


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
	.dwendtag $C$DW$128

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$129	.dwtag  DW_TAG_variable
	.dwattr $C$DW$129, DW_AT_name("tagwasthere")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$129, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$129, DW_AT_external

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$130	.dwtag  DW_TAG_variable
	.dwattr $C$DW$130, DW_AT_name("autoid")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$130, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$130, DW_AT_external


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("tagid")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
$C$DW$132	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$131

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$133	.dwtag  DW_TAG_variable
	.dwattr $C$DW$133, DW_AT_name("rtc")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$133, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$133, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$134	.dwtag  DW_TAG_variable
	.dwattr $C$DW$134, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$4:	.usect	".ebss",100,1,0
_buff$3:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$135	.dwtag  DW_TAG_variable
	.dwattr $C$DW$135, DW_AT_name("tsensor")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$135, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$135, DW_AT_external

$C$DW$136	.dwtag  DW_TAG_variable
	.dwattr $C$DW$136, DW_AT_name("_ctypes_")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$173)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$137	.dwtag  DW_TAG_variable
	.dwattr $C$DW$137, DW_AT_name("fileOb")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$137, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$137, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$138	.dwtag  DW_TAG_variable
	.dwattr $C$DW$138, DW_AT_name("Fatfs")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$138, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$138, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("conf_data")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$139, DW_AT_declaration
	.dwattr $C$DW$139, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\046442 C:\\Users\\ebenton\\AppData\\Local\\Temp\\046444 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\0464412 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("update_units")
	.dwattr $C$DW$140, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$140, DW_AT_high_pc(0x00)
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$140, DW_AT_external
	.dwattr $C$DW$140, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$140, DW_AT_TI_begin_line(0x177d)
	.dwattr $C$DW$140, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$140, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6013,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$141	.dwtag  DW_TAG_variable
	.dwattr $C$DW$141, DW_AT_name("buff")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$370)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6013 | void update_units(void) {                                              
; 6015 | int l;                                                                 
; 6016 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6018,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6018 | lcd_clear();                                                           
; 6019 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$142, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$142, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6018| 
        ; call occurs [#_lcd_clear] ; [] |6018| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6020,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6020 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6020| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6020| 
        ADDL      XAR4,ACC              ; [CPU_] |6020| 
        MOV       AL,AR1                ; [CPU_] |6020| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6020| 
$C$DW$143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$143, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$143, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6020| 
        ; call occurs [#_lcd_puts] ; [] |6020| 
	.dwpsn	file "../Source/prod.c",line 6021,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6021 | switch (conf_data.vfd[l].what) {                                       
; 6022 | case VFD_LOAD:                                                         
; 6023 | case VFD_PEAK:                                                         
; 6024 | case VFD_VALL:                                                         
; 6025 | case VFD_POSI:                                                         
; 6026 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6021| 
        CMPB      AL,#4                 ; [CPU_] |6021| 
        B         $C$L2,LOS             ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        CMPB      AL,#5                 ; [CPU_] |6021| 
        B         $C$L8,EQ              ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        CMPB      AL,#6                 ; [CPU_] |6021| 
        B         $C$L7,EQ              ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        B         $C$L10,UNC            ; [CPU_] |6021| 
        ; branch occurs ; [] |6021| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6027,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6027| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6027| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6027| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6027| 
        ADDB      AL,#1                 ; [CPU_] |6027| 
        MOVL      XAR4,XAR3             ; [CPU_] |6027| 
        MOV       *-SP[3],AL            ; [CPU_] |6027| 
$C$DW$144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$144, DW_AT_name("_sprintf")
	.dwattr $C$DW$144, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6027| 
        ; call occurs [#_sprintf] ; [] |6027| 
	.dwpsn	file "../Source/prod.c",line 6028,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6028| 
        ADD       AL,AR1                ; [CPU_] |6028| 
        MOVL      XAR4,XAR3             ; [CPU_] |6028| 
$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$145, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$145, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6028| 
        ; call occurs [#_lcd_puts] ; [] |6028| 
	.dwpsn	file "../Source/prod.c",line 6029,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6029 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6029| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6029| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6029| 
        B         $C$L3,EQ              ; [CPU_] |6029| 
        ; branchcc occurs ; [] |6029| 
	.dwpsn	file "../Source/prod.c",line 6030,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6030 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6030| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6030| 
        ADD       AL,AR1                ; [CPU_] |6030| 
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$146, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6030| 
        ; call occurs [#_lcd_puts] ; [] |6030| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6033,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6033 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6034 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6033| 
        CMPB      AL,#3                 ; [CPU_] |6033| 
        B         $C$L6,EQ              ; [CPU_] |6033| 
        ; branchcc occurs ; [] |6033| 
	.dwpsn	file "../Source/prod.c",line 6035,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6035 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6036 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6037 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6035| 
        CMPB      AL,#4                 ; [CPU_] |6035| 
        B         $C$L5,EQ              ; [CPU_] |6035| 
        ; branchcc occurs ; [] |6035| 
	.dwpsn	file "../Source/prod.c",line 6038,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6038 | lcd_puts(                                                              
; 6039 |                 (char*) UNITS[0x0f                                     
; 6040 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6041 |                 18 + 20 * l);                                          
; 6043 | break;                                                                 
; 6044 | case VFD_LIMIT:                                                        
; 6045 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6046 | lcd_puts(buff, 5 + 20 * l);                                            
; 6047 | break;                                                                 
; 6048 | case VFD_TEMP:                                                         
; 6049 | #if(VFD==1)                                                            
; 6050 | buff[0] = 0xb0;                                                        
; 6051 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6038| 
        MOV       T,#10                 ; [CPU_] |6038| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6038| 
        ADDL      ACC,XAR6              ; [CPU_] |6038| 
        MOVL      XAR4,ACC              ; [CPU_] |6038| 
        MOVB      XAR0,#42              ; [CPU_] |6038| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6038| 
        MPYB      ACC,T,#152            ; [CPU_] |6038| 
        ADDL      ACC,XAR6              ; [CPU_] |6038| 
        MOVL      XAR4,ACC              ; [CPU_] |6038| 
        MOVB      XAR0,#125             ; [CPU_] |6038| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6038| 
        ANDB      AL,#0x0f              ; [CPU_] |6038| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6038| 
        MOV       ACC,AL << 1           ; [CPU_] |6038| 
        ADDL      XAR4,ACC              ; [CPU_] |6038| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6038| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6038| 
        B         $C$L9,UNC             ; [CPU_] |6038| 
        ; branch occurs ; [] |6038| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6036,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6036| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6036| 
	.dwpsn	file "../Source/prod.c",line 6037,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6037| 
        ; branch occurs ; [] |6037| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6034,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6034| 
	.dwpsn	file "../Source/prod.c",line 6035,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6035| 
        ; branch occurs ; [] |6035| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6052,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6052 | buff[0] = 0xdf;                                                        
; 6053 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6052| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6052| 
	.dwpsn	file "../Source/prod.c",line 6054,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6054 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6054| 
	.dwpsn	file "../Source/prod.c",line 6055,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6055 | buff[2] = '\0';                                                        
; 6056 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6055| 
	.dwpsn	file "../Source/prod.c",line 6057,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6057 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6057| 
        ; branch occurs ; [] |6057| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6045,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6045| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6045| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6045| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6045| 
        ADDB      AL,#1                 ; [CPU_] |6045| 
        MOVL      XAR4,XAR3             ; [CPU_] |6045| 
        MOV       *-SP[3],AL            ; [CPU_] |6045| 
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("_sprintf")
	.dwattr $C$DW$147, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6045| 
        ; call occurs [#_sprintf] ; [] |6045| 
	.dwpsn	file "../Source/prod.c",line 6046,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6046| 
        MOVL      XAR4,XAR3             ; [CPU_] |6046| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6046| 
$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$148, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6046| 
        ; call occurs [#_lcd_puts] ; [] |6046| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6019,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6019| 
        SUBB      XAR6,#1               ; [CPU_U] |6019| 
        MOVZ      AR0,AR6               ; [CPU_] |6019| 
        ADDB      XAR2,#3               ; [CPU_] |6019| 
        ADDB      XAR1,#20              ; [CPU_] |6019| 
        MOV       *-SP[4],AR6           ; [CPU_] |6019| 
        CMP       AR0,#-1               ; [CPU_] |6019| 
        B         $C$L1,NEQ             ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$140, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$140, DW_AT_TI_end_line(0x17ac)
	.dwattr $C$DW$140, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$140

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$150	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$150, DW_AT_name("print_vfd")
	.dwattr $C$DW$150, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$150, DW_AT_high_pc(0x00)
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$150, DW_AT_external
	.dwattr $C$DW$150, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$150, DW_AT_TI_begin_line(0x1708)
	.dwattr $C$DW$150, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$150, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5896,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("buff")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5896 | void print_vfd(void) {                                                 
; 5897 | int l;                                                                 
; 5898 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("l")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5900,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5900 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5900| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("_scia_puts")
	.dwattr $C$DW$153, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5900| 
        ; call occurs [#_scia_puts] ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5901,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5901 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5901| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5902,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5902 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5902| 
        MOVB      AL,#1                 ; [CPU_] |5902| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5902| 
        ADD       AL,AR1                ; [CPU_] |5902| 
        MOV       *-SP[3],AL            ; [CPU_] |5902| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5902| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5902| 
        ADDL      XAR4,ACC              ; [CPU_] |5902| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5902| 
        MOVL      XAR4,XAR3             ; [CPU_] |5902| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5902| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_sprintf")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5902| 
        ; call occurs [#_sprintf] ; [] |5902| 
	.dwpsn	file "../Source/prod.c",line 5903,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5903 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5903| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5903| 
        ; call occurs [#_scia_puts] ; [] |5903| 
	.dwpsn	file "../Source/prod.c",line 5905,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5905 | switch (conf_data.vfd[l].what) {                                       
; 5906 | case VFD_LOAD:                                                         
; 5907 | case VFD_PEAK:                                                         
; 5908 | case VFD_VALL:                                                         
; 5909 | case VFD_POSI:                                                         
; 5910 | case VFD_VELO:                                                         
; 5911 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5912 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5913 |         scia_puts(buff);                                               
; 5914 |         break;                                                         
; 5915 | case VFD_LIMIT:                                                        
; 5916 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5917 |         scia_puts(buff);                                               
; 5918 |         break;                                                         
; 5919 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5905| 
        CMPB      AL,#4                 ; [CPU_] |5905| 
        B         $C$L13,LOS            ; [CPU_] |5905| 
        ; branchcc occurs ; [] |5905| 
        CMPB      AL,#5                 ; [CPU_] |5905| 
        B         $C$L12,EQ             ; [CPU_] |5905| 
        ; branchcc occurs ; [] |5905| 
        CMPB      AL,#6                 ; [CPU_] |5905| 
        B         $C$L16,NEQ            ; [CPU_] |5905| 
        ; branchcc occurs ; [] |5905| 
	.dwpsn	file "../Source/prod.c",line 5920,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5920 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5920| 
	.dwpsn	file "../Source/prod.c",line 5921,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5921 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5921| 
        ; branch occurs ; [] |5921| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5916,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5916| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5916| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5916| 
        ADDB      AL,#1                 ; [CPU_] |5916| 
        MOV       *-SP[3],AL            ; [CPU_] |5916| 
	.dwpsn	file "../Source/prod.c",line 5918,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5918| 
        ; branch occurs ; [] |5918| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5911,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5911| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5911| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5911| 
        ADDB      AL,#1                 ; [CPU_] |5911| 
        MOV       *-SP[3],AL            ; [CPU_] |5911| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5911| 
        MOV       *-SP[4],AL            ; [CPU_] |5911| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5911| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_sprintf")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5911| 
        ; call occurs [#_sprintf] ; [] |5911| 
	.dwpsn	file "../Source/prod.c",line 5913,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5913| 
$C$L15:    
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_scia_puts")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5913| 
        ; call occurs [#_scia_puts] ; [] |5913| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5923,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5923 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5923| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_scia_puts")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5923| 
        ; call occurs [#_scia_puts] ; [] |5923| 
	.dwpsn	file "../Source/prod.c",line 5901,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5901| 
        ADDB      XAR2,#3               ; [CPU_] |5901| 
        MOV       AL,AR1                ; [CPU_] |5901| 
        CMPB      AL,#4                 ; [CPU_] |5901| 
        B         $C$L11,LT             ; [CPU_] |5901| 
        ; branchcc occurs ; [] |5901| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$150, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$150, DW_AT_TI_end_line(0x1725)
	.dwattr $C$DW$150, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$150

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$160	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$160, DW_AT_name("print_sensor")
	.dwattr $C$DW$160, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$160, DW_AT_high_pc(0x00)
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$160, DW_AT_external
	.dwattr $C$DW$160, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$160, DW_AT_TI_begin_line(0x16b1)
	.dwattr $C$DW$160, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$160, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5809,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$161	.dwtag  DW_TAG_variable
	.dwattr $C$DW$161, DW_AT_name("buff")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$162	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$162, DW_AT_name("ss")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$163	.dwtag  DW_TAG_variable
	.dwattr $C$DW$163, DW_AT_name("ss")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$195)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("j")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg0]

$C$DW$165	.dwtag  DW_TAG_variable
	.dwattr $C$DW$165, DW_AT_name("j")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_breg20 -7]

$C$DW$166	.dwtag  DW_TAG_variable
	.dwattr $C$DW$166, DW_AT_name("j")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_breg20 -7]

$C$DW$167	.dwtag  DW_TAG_variable
	.dwattr $C$DW$167, DW_AT_name("j")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_breg20 -7]

$C$DW$168	.dwtag  DW_TAG_variable
	.dwattr $C$DW$168, DW_AT_name("j")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5809 | void print_sensor(int ss) {                                            
; 5810 | int j;                                                                 
; 5811 | static char buff[100];                                                 
; 5813 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5809| 
	.dwpsn	file "../Source/prod.c",line 5814,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5814 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5815 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5816 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5814| 
        MPYB      P,T,#152              ; [CPU_] |5814| 
        MOVL      ACC,XAR3              ; [CPU_] |5814| 
        ADDL      ACC,P                 ; [CPU_] |5814| 
        MOVL      XAR2,ACC              ; [CPU_] |5814| 
        MOVB      XAR0,#118             ; [CPU_] |5814| 
        MOVL      *-SP[12],P            ; [CPU_] |5814| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5814| 
        B         $C$L28,EQ             ; [CPU_] |5814| 
        ; branchcc occurs ; [] |5814| 
	.dwpsn	file "../Source/prod.c",line 5817,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5817 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5817| 
        MOVL      ACC,XAR2              ; [CPU_] |5817| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5817| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5817| 
        ADDB      ACC,#82               ; [CPU_] |5817| 
        MOVL      XAR4,XAR1             ; [CPU_] |5817| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5817| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_sprintf")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5817| 
        ; call occurs [#_sprintf] ; [] |5817| 
	.dwpsn	file "../Source/prod.c",line 5818,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5818 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5818| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5818| 
        ; call occurs [#_scia_puts] ; [] |5818| 
	.dwpsn	file "../Source/prod.c",line 5819,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5819 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5819| 
        MOVL      ACC,XAR2              ; [CPU_] |5819| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5819| 
        ADDB      ACC,#98               ; [CPU_] |5819| 
        MOVL      XAR4,XAR1             ; [CPU_] |5819| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5819| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_sprintf")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5819| 
        ; call occurs [#_sprintf] ; [] |5819| 
	.dwpsn	file "../Source/prod.c",line 5820,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5820 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5820| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5820| 
        ; call occurs [#_scia_puts] ; [] |5820| 
	.dwpsn	file "../Source/prod.c",line 5821,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5821 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5822 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5821| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5821| 
        MOVL      XAR4,XAR2             ; [CPU_] |5821| 
        ADDB      XAR4,#114             ; [CPU_] |5821| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5821| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5821| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5821| 
        MOVL      XAR4,XAR1             ; [CPU_] |5821| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5821| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("_sprintf")
	.dwattr $C$DW$173, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5821| 
        ; call occurs [#_sprintf] ; [] |5821| 
	.dwpsn	file "../Source/prod.c",line 5823,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5823 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5823| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("_scia_puts")
	.dwattr $C$DW$174, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5823| 
        ; call occurs [#_scia_puts] ; [] |5823| 
	.dwpsn	file "../Source/prod.c",line 5824,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5824 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5825 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5824| 
        MOVB      XAR0,#118             ; [CPU_] |5824| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5824| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5824| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5824| 
        ADDL      XAR4,ACC              ; [CPU_] |5824| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5824| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5824| 
        MOVL      XAR4,XAR1             ; [CPU_] |5824| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("_sprintf")
	.dwattr $C$DW$175, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5824| 
        ; call occurs [#_sprintf] ; [] |5824| 
	.dwpsn	file "../Source/prod.c",line 5826,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5826 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5826| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5826| 
        ; call occurs [#_scia_puts] ; [] |5826| 
	.dwpsn	file "../Source/prod.c",line 5827,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5827 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5828 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5827| 
        MOVB      XAR0,#124             ; [CPU_] |5827| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5827| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5827| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5827| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5827| 
        ANDB      AL,#0x0f              ; [CPU_] |5827| 
        MOV       ACC,AL << 1           ; [CPU_] |5827| 
        ADDL      XAR4,ACC              ; [CPU_] |5827| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5827| 
        MOVL      XAR4,XAR1             ; [CPU_] |5827| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5827| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("_sprintf")
	.dwattr $C$DW$177, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5827| 
        ; call occurs [#_sprintf] ; [] |5827| 
	.dwpsn	file "../Source/prod.c",line 5829,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5829 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5829| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5829| 
        ; call occurs [#_scia_puts] ; [] |5829| 
	.dwpsn	file "../Source/prod.c",line 5830,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5831 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5830| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5830| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5830| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5830| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5830| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5830| 
        MOV       ACC,AL << 1           ; [CPU_] |5830| 
        ADDL      ACC,XAR6              ; [CPU_] |5830| 
        MOVL      XAR4,ACC              ; [CPU_] |5830| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5830| 
        MOVL      XAR4,XAR1             ; [CPU_] |5830| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5830| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_sprintf")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5830| 
        ; call occurs [#_sprintf] ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5832,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5832 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5832| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5832| 
        ; call occurs [#_scia_puts] ; [] |5832| 
	.dwpsn	file "../Source/prod.c",line 5833,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5833 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5834 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5833| 
        MOVB      XAR0,#126             ; [CPU_] |5833| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5833| 
        MOVL      XAR4,XAR1             ; [CPU_] |5833| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5833| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5833| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_sprintf")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5833| 
        ; call occurs [#_sprintf] ; [] |5833| 
	.dwpsn	file "../Source/prod.c",line 5835,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5835 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5835| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_scia_puts")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5835| 
        ; call occurs [#_scia_puts] ; [] |5835| 
	.dwpsn	file "../Source/prod.c",line 5836,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5836 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5837 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5836| 
        MOVB      XAR0,#122             ; [CPU_] |5836| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5836| 
        MOVL      XAR4,XAR1             ; [CPU_] |5836| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5836| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5836| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_sprintf")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5836| 
        ; call occurs [#_sprintf] ; [] |5836| 
	.dwpsn	file "../Source/prod.c",line 5838,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5838 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5838| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5838| 
        ; call occurs [#_scia_puts] ; [] |5838| 
	.dwpsn	file "../Source/prod.c",line 5839,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5840 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5839| 
        MOVB      XAR0,#222             ; [CPU_] |5839| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5839| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5839| 
        MOVL      XAR4,XAR1             ; [CPU_] |5839| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5839| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_sprintf")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5839| 
        ; call occurs [#_sprintf] ; [] |5839| 
	.dwpsn	file "../Source/prod.c",line 5841,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5841 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5841| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5841| 
        ; call occurs [#_scia_puts] ; [] |5841| 
	.dwpsn	file "../Source/prod.c",line 5842,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5843 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5842| 
        MOVB      XAR0,#224             ; [CPU_] |5842| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5842| 
        MOVL      XAR4,XAR1             ; [CPU_] |5842| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5842| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5842| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_sprintf")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5842| 
        ; call occurs [#_sprintf] ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5844,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5844 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5844| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5844| 
        ; call occurs [#_scia_puts] ; [] |5844| 
	.dwpsn	file "../Source/prod.c",line 5845,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5846 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5845| 
        MOVB      XAR0,#228             ; [CPU_] |5845| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5845| 
        MOVL      XAR4,XAR1             ; [CPU_] |5845| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5845| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5845| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_sprintf")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5845| 
        ; call occurs [#_sprintf] ; [] |5845| 
	.dwpsn	file "../Source/prod.c",line 5847,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5847 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5847| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5847| 
        ; call occurs [#_scia_puts] ; [] |5847| 
	.dwpsn	file "../Source/prod.c",line 5848,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5848 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5849 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5848| 
        MOVB      XAR0,#230             ; [CPU_] |5848| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5848| 
        MOVL      XAR4,XAR1             ; [CPU_] |5848| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5848| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5848| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_sprintf")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5848| 
        ; call occurs [#_sprintf] ; [] |5848| 
	.dwpsn	file "../Source/prod.c",line 5850,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5850 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5850| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5850| 
        ; call occurs [#_scia_puts] ; [] |5850| 
	.dwpsn	file "../Source/prod.c",line 5852,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5852 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5853 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5854 |                         conf_data.sensor[ss].points);                  
; 5855 |         scia_puts(buff);                                               
; 5857 |         scia_puts("  Point:");                                         
; 5858 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5859 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5860 |                 scia_puts(buff);                                       
; 5862 |         scia_puts("\r\n  Mass: ");                                     
; 5863 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5864 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5865 |                 scia_puts(buff);                                       
; 5867 |         scia_puts("\r\n  Count:");                                     
; 5868 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5869 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5870 |                 scia_puts(buff);                                       
; 5872 |         scia_puts("\r\n  Slope:    ");                                 
; 5873 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5874 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5875 |                 scia_puts(buff);                                       
; 5877 |         scia_puts("\r\n  Intercept:");                                 
; 5878 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5879 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5880 |                 scia_puts(buff);                                       
; 5882 |         scia_puts("\r\n");                                             
; 5883 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5852| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5852| 
        CMPB      AL,#2                 ; [CPU_] |5852| 
        B         $C$L17,EQ             ; [CPU_] |5852| 
        ; branchcc occurs ; [] |5852| 
	.dwpsn	file "../Source/prod.c",line 5884,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5884 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5885 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5884| 
        MOVB      XAR0,#178             ; [CPU_] |5884| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5884| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5884| 
        MOVL      XAR4,XAR1             ; [CPU_] |5884| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5884| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_sprintf")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5884| 
        ; call occurs [#_sprintf] ; [] |5884| 
	.dwpsn	file "../Source/prod.c",line 5886,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5886 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_scia_puts")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5886| 
        ; call occurs [#_scia_puts] ; [] |5886| 
	.dwpsn	file "../Source/prod.c",line 5887,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5887 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5888 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5887| 
        MOVB      XAR0,#200             ; [CPU_] |5887| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5887| 
        MOVL      XAR4,XAR1             ; [CPU_] |5887| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5887| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5887| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_sprintf")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5887| 
        ; call occurs [#_sprintf] ; [] |5887| 
	.dwpsn	file "../Source/prod.c",line 5889,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5889 | scia_puts(buff);                                                       
; 5892 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5889| 
        B         $C$L29,UNC            ; [CPU_] |5889| 
        ; branch occurs ; [] |5889| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5853,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5853| 
        MOVB      XAR0,#128             ; [CPU_] |5853| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5853| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5853| 
        MOVL      XAR4,XAR1             ; [CPU_] |5853| 
        MOV       *-SP[3],AL            ; [CPU_] |5853| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5853| 
        ; call occurs [#_sprintf] ; [] |5853| 
	.dwpsn	file "../Source/prod.c",line 5855,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5855| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5855| 
        ; call occurs [#_scia_puts] ; [] |5855| 
	.dwpsn	file "../Source/prod.c",line 5857,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5857| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5857| 
        ; call occurs [#_scia_puts] ; [] |5857| 
	.dwpsn	file "../Source/prod.c",line 5858,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5858| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5858,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5858| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5858| 
        B         $C$L27,LT             ; [CPU_] |5858| 
        ; branchcc occurs ; [] |5858| 
	.dwpsn	file "../Source/prod.c",line 5862,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5862| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5863,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5863| 
        MOV       *-SP[7],AL            ; [CPU_] |5863| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5863,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5863| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5863| 
        B         $C$L26,LT             ; [CPU_] |5863| 
        ; branchcc occurs ; [] |5863| 
	.dwpsn	file "../Source/prod.c",line 5867,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5867| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5867| 
        ; call occurs [#_scia_puts] ; [] |5867| 
	.dwpsn	file "../Source/prod.c",line 5868,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5868| 
        MOV       *-SP[7],AL            ; [CPU_] |5868| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5868,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5868| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5868| 
        B         $C$L25,LT             ; [CPU_] |5868| 
        ; branchcc occurs ; [] |5868| 
	.dwpsn	file "../Source/prod.c",line 5872,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5872| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5872| 
        ; call occurs [#_scia_puts] ; [] |5872| 
	.dwpsn	file "../Source/prod.c",line 5873,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5873| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5873,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5873| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5873| 
        ADDB      AL,#-1                ; [CPU_] |5873| 
        CMP       AL,*-SP[7]            ; [CPU_] |5873| 
        B         $C$L24,GT             ; [CPU_] |5873| 
        ; branchcc occurs ; [] |5873| 
	.dwpsn	file "../Source/prod.c",line 5877,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5877| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5877| 
        ; call occurs [#_scia_puts] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5878,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5878| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5878,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5878| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5878| 
        ADDB      AL,#-1                ; [CPU_] |5878| 
        CMP       AL,*-SP[7]            ; [CPU_] |5878| 
        B         $C$L23,GT             ; [CPU_] |5878| 
        ; branchcc occurs ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5882,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5882| 
	.dwpsn	file "../Source/prod.c",line 5883,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5883| 
        ; branch occurs ; [] |5883| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5879,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5879| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5879| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5879| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5879| 
        MOV       ACC,AL << 1           ; [CPU_] |5879| 
        ADDL      ACC,XAR6              ; [CPU_] |5879| 
        ADDL      ACC,XAR3              ; [CPU_] |5879| 
        MOVL      XAR4,ACC              ; [CPU_] |5879| 
        MOVB      XAR0,#200             ; [CPU_] |5879| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5879| 
        MOVL      XAR4,XAR1             ; [CPU_] |5879| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5879| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_sprintf")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5879| 
        ; call occurs [#_sprintf] ; [] |5879| 
	.dwpsn	file "../Source/prod.c",line 5880,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5880| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5880| 
        ; call occurs [#_scia_puts] ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5878,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5878| 
        B         $C$L22,UNC            ; [CPU_] |5878| 
        ; branch occurs ; [] |5878| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5874,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5874| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5874| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5874| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5874| 
        MOV       ACC,AL << 1           ; [CPU_] |5874| 
        ADDL      ACC,XAR6              ; [CPU_] |5874| 
        ADDL      ACC,XAR3              ; [CPU_] |5874| 
        MOVL      XAR4,ACC              ; [CPU_] |5874| 
        MOVB      XAR0,#178             ; [CPU_] |5874| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5874| 
        MOVL      XAR4,XAR1             ; [CPU_] |5874| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5874| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5874| 
        ; call occurs [#_sprintf] ; [] |5874| 
	.dwpsn	file "../Source/prod.c",line 5875,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5875| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5875| 
        ; call occurs [#_scia_puts] ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5873,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5873| 
        B         $C$L21,UNC            ; [CPU_] |5873| 
        ; branch occurs ; [] |5873| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5869,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5869| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5869| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5869| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5869| 
        ADDL      ACC,XAR6              ; [CPU_] |5869| 
        ADDL      ACC,XAR3              ; [CPU_] |5869| 
        MOVL      XAR4,ACC              ; [CPU_] |5869| 
        MOVB      XAR0,#154             ; [CPU_] |5869| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5869| 
        MOVL      XAR4,XAR1             ; [CPU_] |5869| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5869| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_sprintf")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5869| 
        ; call occurs [#_sprintf] ; [] |5869| 
	.dwpsn	file "../Source/prod.c",line 5870,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5870| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5870| 
        ; call occurs [#_scia_puts] ; [] |5870| 
	.dwpsn	file "../Source/prod.c",line 5868,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5868| 
	.dwpsn	file "../Source/prod.c",line 5870,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5870| 
	.dwpsn	file "../Source/prod.c",line 5868,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5868| 
        ; branch occurs ; [] |5868| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5864,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5864| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5864| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5864| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5864| 
        ADDL      ACC,XAR6              ; [CPU_] |5864| 
        ADDL      ACC,XAR3              ; [CPU_] |5864| 
        MOVL      XAR4,ACC              ; [CPU_] |5864| 
        MOVB      XAR0,#130             ; [CPU_] |5864| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5864| 
        MOVL      XAR4,XAR1             ; [CPU_] |5864| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5864| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_sprintf")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5864| 
        ; call occurs [#_sprintf] ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5865,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5865| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5865| 
        ; call occurs [#_scia_puts] ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5863,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5863| 
	.dwpsn	file "../Source/prod.c",line 5865,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5865| 
	.dwpsn	file "../Source/prod.c",line 5863,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5863| 
        ; branch occurs ; [] |5863| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5859,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5859| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5859| 
        ADD       AH,AL                 ; [CPU_] |5859| 
        MOV       *-SP[7],AH            ; [CPU_] |5859| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5859| 
        MOVL      XAR4,XAR1             ; [CPU_] |5859| 
        MOV       *-SP[3],AH            ; [CPU_] |5859| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_sprintf")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5859| 
        ; call occurs [#_sprintf] ; [] |5859| 
	.dwpsn	file "../Source/prod.c",line 5860,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5860| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5860| 
        ; call occurs [#_scia_puts] ; [] |5860| 
        MOV       AL,*-SP[7]            ; [CPU_] |5860| 
	.dwpsn	file "../Source/prod.c",line 5858,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5858| 
        ; branch occurs ; [] |5858| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5815,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5815| 
$C$L29:    
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5815| 
        ; call occurs [#_scia_puts] ; [] |5815| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$160, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$160, DW_AT_TI_end_line(0x1705)
	.dwattr $C$DW$160, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$160

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$215	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$215, DW_AT_name("print_limits")
	.dwattr $C$DW$215, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$215, DW_AT_high_pc(0x00)
	.dwattr $C$DW$215, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$215, DW_AT_external
	.dwattr $C$DW$215, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$215, DW_AT_TI_begin_line(0x174c)
	.dwattr $C$DW$215, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$215, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5964,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$216	.dwtag  DW_TAG_variable
	.dwattr $C$DW$216, DW_AT_name("buff")
	.dwattr $C$DW$216, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$216, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$216, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 5964 | void print_limits(void) {                                              
; 5965 | int ii;                                                                
; 5966 | static char buff[64];                                                  
; 5967 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$217	.dwtag  DW_TAG_variable
	.dwattr $C$DW$217, DW_AT_name("ii")
	.dwattr $C$DW$217, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$217, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$217, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$218	.dwtag  DW_TAG_variable
	.dwattr $C$DW$218, DW_AT_name("up")
	.dwattr $C$DW$218, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$218, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$218, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 5969,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5969 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |5969| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5969| 
        ; call occurs [#_scia_puts] ; [] |5969| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5971,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5971 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |5971| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 5972,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5972 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |5972| 
        MOVB      AL,#1                 ; [CPU_] |5972| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5972| 
        ADD       AL,*-SP[9]            ; [CPU_] |5972| 
        MOVL      XAR4,XAR2             ; [CPU_] |5972| 
        MOV       *-SP[3],AL            ; [CPU_] |5972| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5972| 
        ; call occurs [#_sprintf] ; [] |5972| 
	.dwpsn	file "../Source/prod.c",line 5973,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5973 | scia_puts(buff);                                                       
; 5975 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5973| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5973| 
        ; call occurs [#_scia_puts] ; [] |5973| 
	.dwpsn	file "../Source/prod.c",line 5977,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5977 | switch (conf_data.lim[ii].what) {                                      
; 5978 | case VFD_LOAD:                                                         
; 5979 | case VFD_PEAK:                                                         
; 5980 | case VFD_VALL:                                                         
; 5981 |         up =                                                           
; 5982 |                         UNITS[0x0f                                     
; 5983 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 5984 |         break;                                                         
; 5985 | case VFD_POSI:                                                         
; 5986 |         up = POS_U;                                                    
; 5987 |         break;                                                         
; 5988 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |5977| 
        B         $C$L40,NTC            ; [CPU_] |5977| 
        ; branchcc occurs ; [] |5977| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5977| 
        CMPB      AL,#2                 ; [CPU_] |5977| 
        B         $C$L32,LOS            ; [CPU_] |5977| 
        ; branchcc occurs ; [] |5977| 
        CMPB      AL,#3                 ; [CPU_] |5977| 
        B         $C$L31,EQ             ; [CPU_] |5977| 
        ; branchcc occurs ; [] |5977| 
        CMPB      AL,#4                 ; [CPU_] |5977| 
        B         $C$L33,NEQ            ; [CPU_] |5977| 
        ; branchcc occurs ; [] |5977| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5989,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5989 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |5989| 
	.dwpsn	file "../Source/prod.c",line 5990,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5990 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |5990| 
        ; branch occurs ; [] |5990| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5986,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |5986| 
	.dwpsn	file "../Source/prod.c",line 5987,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |5987| 
        ; branch occurs ; [] |5987| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 5981,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5981| 
        MOV       T,#10                 ; [CPU_] |5981| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |5981| 
        ADDL      ACC,XAR6              ; [CPU_] |5981| 
        MOVL      XAR4,ACC              ; [CPU_] |5981| 
        MOVB      XAR0,#42              ; [CPU_] |5981| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |5981| 
        MPYB      ACC,T,#152            ; [CPU_] |5981| 
        ADDL      ACC,XAR6              ; [CPU_] |5981| 
        MOVL      XAR4,ACC              ; [CPU_] |5981| 
        MOVB      XAR0,#125             ; [CPU_] |5981| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5981| 
        ANDB      AL,#0x0f              ; [CPU_] |5981| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5981| 
        MOV       ACC,AL << 1           ; [CPU_] |5981| 
        ADDL      XAR4,ACC              ; [CPU_] |5981| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |5981| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 5993,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 5994 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |5993| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5993| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |5993| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5993| 
        ADDL      XAR4,ACC              ; [CPU_] |5993| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5993| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5993| 
        MOVL      XAR4,XAR2             ; [CPU_] |5993| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5993| 
        ADDB      AL,#1                 ; [CPU_] |5993| 
        MOV       *-SP[5],AL            ; [CPU_] |5993| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_sprintf")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5993| 
        ; call occurs [#_sprintf] ; [] |5993| 
	.dwpsn	file "../Source/prod.c",line 5995,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5995 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5995| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5995| 
        ; call occurs [#_scia_puts] ; [] |5995| 
	.dwpsn	file "../Source/prod.c",line 5996,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5996 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 5997 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 5998 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 5999 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |5996| 
        B         $C$L34,TC             ; [CPU_] |5996| 
        ; branchcc occurs ; [] |5996| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |5996| 
        B         $C$L35,UNC            ; [CPU_] |5996| 
        ; branch occurs ; [] |5996| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |5996| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |5996| 
        B         $C$L36,TC             ; [CPU_] |5996| 
        ; branchcc occurs ; [] |5996| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |5996| 
        B         $C$L37,UNC            ; [CPU_] |5996| 
        ; branch occurs ; [] |5996| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |5996| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |5996| 
        B         $C$L38,TC             ; [CPU_] |5996| 
        ; branchcc occurs ; [] |5996| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |5996| 
        B         $C$L39,UNC            ; [CPU_] |5996| 
        ; branch occurs ; [] |5996| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |5996| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |5996| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5996| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5996| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |5996| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |5996| 
        MOVL      XAR4,XAR2             ; [CPU_] |5996| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_sprintf")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5996| 
        ; call occurs [#_sprintf] ; [] |5996| 
	.dwpsn	file "../Source/prod.c",line 6000,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6000 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6000| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6000| 
        ; call occurs [#_scia_puts] ; [] |6000| 
	.dwpsn	file "../Source/prod.c",line 6001,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6001 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6002 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6001| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6001| 
        MOVL      XAR4,XAR2             ; [CPU_] |6001| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6001| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6001| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6001| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_sprintf")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6001| 
        ; call occurs [#_sprintf] ; [] |6001| 
	.dwpsn	file "../Source/prod.c",line 6003,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6003 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6003| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6003| 
        ; call occurs [#_scia_puts] ; [] |6003| 
	.dwpsn	file "../Source/prod.c",line 6004,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6004 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6005 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6004| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6004| 
        MOVL      XAR4,XAR2             ; [CPU_] |6004| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6004| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6004| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6004| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_sprintf")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6004| 
        ; call occurs [#_sprintf] ; [] |6004| 
	.dwpsn	file "../Source/prod.c",line 6006,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6006 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6006| 
	.dwpsn	file "../Source/prod.c",line 6007,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6007 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6007| 
        ; branch occurs ; [] |6007| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6008,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6008 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6008| 
$C$L41:    
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_scia_puts")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6008| 
        ; call occurs [#_scia_puts] ; [] |6008| 
	.dwpsn	file "../Source/prod.c",line 5971,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |5971| 
        INC       *-SP[9]               ; [CPU_] |5971| 
        MOV       AL,*-SP[9]            ; [CPU_] |5971| 
        CMPB      AL,#4                 ; [CPU_] |5971| 
        B         $C$L30,LT             ; [CPU_] |5971| 
        ; branchcc occurs ; [] |5971| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$215, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$215, DW_AT_TI_end_line(0x177b)
	.dwattr $C$DW$215, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$215

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$231	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$231, DW_AT_name("print_dac")
	.dwattr $C$DW$231, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$231, DW_AT_high_pc(0x00)
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$231, DW_AT_external
	.dwattr $C$DW$231, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$231, DW_AT_TI_begin_line(0x1728)
	.dwattr $C$DW$231, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$231, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5928,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$232	.dwtag  DW_TAG_variable
	.dwattr $C$DW$232, DW_AT_name("buff")
	.dwattr $C$DW$232, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$232, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$232, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5928 | void print_dac(void) {                                                 
; 5929 | int l;                                                                 
; 5930 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$233	.dwtag  DW_TAG_variable
	.dwattr $C$DW$233, DW_AT_name("l")
	.dwattr $C$DW$233, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$233, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$233, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5932,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5932 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5932| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5932| 
        ; call occurs [#_scia_puts] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5934,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5934 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5934| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5935,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5935 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5935| 
        MOVB      AL,#1                 ; [CPU_] |5935| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5935| 
        ADD       AL,AR1                ; [CPU_] |5935| 
        MOV       *-SP[3],AL            ; [CPU_] |5935| 
        MOVL      XAR4,XAR3             ; [CPU_] |5935| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5935| 
        ; call occurs [#_sprintf] ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5936,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5936 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5936| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5936| 
        ; call occurs [#_scia_puts] ; [] |5936| 
	.dwpsn	file "../Source/prod.c",line 5938,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5938 | sprintf(buff,                                                          
; 5939 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5940 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5941 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5938| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5938| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5938| 
        MOVL      XAR4,XAR3             ; [CPU_] |5938| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5938| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5938| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5938| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5938| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5938| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5938| 
        ; call occurs [#_sprintf] ; [] |5938| 
	.dwpsn	file "../Source/prod.c",line 5942,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5942| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5942| 
        ; call occurs [#_scia_puts] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5944,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5944 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5944| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5944| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5944| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5944| 
        ADDL      XAR4,ACC              ; [CPU_] |5944| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5944| 
        MOVL      XAR4,XAR3             ; [CPU_] |5944| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5944| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_sprintf")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5944| 
        ; call occurs [#_sprintf] ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5945,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5945| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5945| 
        ; call occurs [#_scia_puts] ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5947,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5947 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5947| 
        CMPB      AL,#7                 ; [CPU_] |5947| 
        B         $C$L43,EQ             ; [CPU_] |5947| 
        ; branchcc occurs ; [] |5947| 
	.dwpsn	file "../Source/prod.c",line 5948,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5948 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5948| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5948| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5948| 
        ADDB      AL,#1                 ; [CPU_] |5948| 
        MOVL      XAR4,XAR3             ; [CPU_] |5948| 
        MOV       *-SP[3],AL            ; [CPU_] |5948| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_sprintf")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5948| 
        ; call occurs [#_sprintf] ; [] |5948| 
	.dwpsn	file "../Source/prod.c",line 5949,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5949 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5949| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5949| 
        ; call occurs [#_scia_puts] ; [] |5949| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5952,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5952 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5953 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5954 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5955 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 5956 |         scia_puts(buff);                                               
; 5957 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5952| 
        CMPB      AL,#3                 ; [CPU_] |5952| 
        B         $C$L44,EQ             ; [CPU_] |5952| 
        ; branchcc occurs ; [] |5952| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5952| 
        CMPB      AL,#4                 ; [CPU_] |5952| 
        B         $C$L44,EQ             ; [CPU_] |5952| 
        ; branchcc occurs ; [] |5952| 
	.dwpsn	file "../Source/prod.c",line 5958,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5958 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5958| 
        B         $C$L45,UNC            ; [CPU_] |5958| 
        ; branch occurs ; [] |5958| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5954,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5954| 
        MOVB      XAR0,#8               ; [CPU_] |5954| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5954| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5954| 
        MOVB      XAR0,#10              ; [CPU_] |5954| 
        MOVL      XAR4,XAR3             ; [CPU_] |5954| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5954| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5954| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5954| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_sprintf")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5954| 
        ; call occurs [#_sprintf] ; [] |5954| 
	.dwpsn	file "../Source/prod.c",line 5956,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5956| 
$C$L45:    
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5956| 
        ; call occurs [#_scia_puts] ; [] |5956| 
	.dwpsn	file "../Source/prod.c",line 5934,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5934| 
        ADDB      XAR2,#12              ; [CPU_] |5934| 
        MOV       AL,AR1                ; [CPU_] |5934| 
        CMPB      AL,#4                 ; [CPU_] |5934| 
        B         $C$L42,LT             ; [CPU_] |5934| 
        ; branchcc occurs ; [] |5934| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$231, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$231, DW_AT_TI_end_line(0x1749)
	.dwattr $C$DW$231, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$231

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$246	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$246, DW_AT_name("print_channel")
	.dwattr $C$DW$246, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$246, DW_AT_high_pc(0x00)
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$246, DW_AT_external
	.dwattr $C$DW$246, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$246, DW_AT_TI_begin_line(0x1696)
	.dwattr $C$DW$246, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$246, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5782,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$247	.dwtag  DW_TAG_variable
	.dwattr $C$DW$247, DW_AT_name("buff")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$247, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$248	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$248, DW_AT_name("ch")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$248, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$249	.dwtag  DW_TAG_variable
	.dwattr $C$DW$249, DW_AT_name("ch")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$249, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5782 | void print_channel(Uint16 ch) {                                        
; 5783 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5782| 
	.dwpsn	file "../Source/prod.c",line 5785,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5785 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5785| 
        MOVZ      AR1,AR2               ; [CPU_] |5785| 
        MOVB      AH,#1                 ; [CPU_] |5785| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5785| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5785| 
        ADD       AH,AR1                ; [CPU_] |5785| 
        MOVL      XAR4,XAR3             ; [CPU_] |5785| 
        MOV       *-SP[3],AH            ; [CPU_] |5785| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5785| 
        ; call occurs [#_sprintf] ; [] |5785| 
	.dwpsn	file "../Source/prod.c",line 5786,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5786 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5786| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5786| 
        ; call occurs [#_scia_puts] ; [] |5786| 
	.dwpsn	file "../Source/prod.c",line 5788,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5788 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5788| 
        MOV       T,AR1                 ; [CPU_] |5788| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5788| 
        MPYU      ACC,T,AL              ; [CPU_] |5788| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5788| 
        ADDL      XAR1,ACC              ; [CPU_] |5788| 
        MOVB      XAR0,#44              ; [CPU_] |5788| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5788| 
        MOVL      XAR4,XAR3             ; [CPU_] |5788| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5788| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5788| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5788| 
        ; call occurs [#_sprintf] ; [] |5788| 
	.dwpsn	file "../Source/prod.c",line 5789,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5789 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5789| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5789| 
        ; call occurs [#_scia_puts] ; [] |5789| 
	.dwpsn	file "../Source/prod.c",line 5799,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5799 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5799| 
        MOVB      XAR0,#42              ; [CPU_] |5799| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5799| 
        MOVL      XAR4,XAR3             ; [CPU_] |5799| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5799| 
        ADDB      AL,#1                 ; [CPU_] |5799| 
        MOV       *-SP[3],AL            ; [CPU_] |5799| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_sprintf")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5799| 
        ; call occurs [#_sprintf] ; [] |5799| 
	.dwpsn	file "../Source/prod.c",line 5800,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5800 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5800| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5800| 
        ; call occurs [#_scia_puts] ; [] |5800| 
	.dwpsn	file "../Source/prod.c",line 5802,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5802 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5802| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5802| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5802| 
        B         $C$L46,EQ             ; [CPU_] |5802| 
        ; branchcc occurs ; [] |5802| 
	.dwpsn	file "../Source/prod.c",line 5803,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5803 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5803| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5803| 
        ; call occurs [#_scia_puts] ; [] |5803| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$246, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$246, DW_AT_TI_end_line(0x16ad)
	.dwattr $C$DW$246, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$246

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$258	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$258, DW_AT_name("matchTag")
	.dwattr $C$DW$258, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$258, DW_AT_high_pc(0x00)
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$258, DW_AT_external
	.dwattr $C$DW$258, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$258, DW_AT_TI_begin_line(0x1672)
	.dwattr $C$DW$258, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$258, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5746,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$259	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$259, DW_AT_name("ch")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$259, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5746 | void matchTag(Uint16 ch) {                                             
; 5747 | Uint16 sns;                                                            
; 5748 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$260	.dwtag  DW_TAG_variable
	.dwattr $C$DW$260, DW_AT_name("ch")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$261	.dwtag  DW_TAG_variable
	.dwattr $C$DW$261, DW_AT_name("sns")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$262	.dwtag  DW_TAG_variable
	.dwattr $C$DW$262, DW_AT_name("tag")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5750,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5750 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5750| 
	.dwpsn	file "../Source/prod.c",line 5746,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5746| 
	.dwpsn	file "../Source/prod.c",line 5750,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5750| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5750| 
        MOVL      XAR1,ACC              ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5752,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5752 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5752| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5752| 
	.dwpsn	file "../Source/prod.c",line 5750,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5752,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5753 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5752| 
        B         $C$L50,EQ             ; [CPU_] |5752| 
        ; branchcc occurs ; [] |5752| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5752| 
        B         $C$L50,HIS            ; [CPU_] |5752| 
        ; branchcc occurs ; [] |5752| 
	.dwpsn	file "../Source/prod.c",line 5756,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5756 | tag = tagid(ch);                                                       
; 5757 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5758 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_tagid")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5756| 
        ; call occurs [#_tagid] ; [] |5756| 
        MOVB      XAR6,#0               ; [CPU_] |5756| 
        MOVL      XAR3,ACC              ; [CPU_] |5756| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5756| 
        MOV       *-SP[2],#0            ; [CPU_] |5756| 
        MOV       *-SP[1],#0            ; [CPU_] |5756| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$264, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5756| 
        ; call occurs [#ULL$$CMP] ; [] |5756| 
        CMPB      AL,#0                 ; [CPU_] |5756| 
        B         $C$L50,EQ             ; [CPU_] |5756| 
        ; branchcc occurs ; [] |5756| 
        MOVB      ACC,#0                ; [CPU_] |5756| 
        SUBB      ACC,#1                ; [CPU_] |5756| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5756| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5756| 
        MOVL      ACC,XAR3              ; [CPU_] |5756| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$265, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5756| 
        ; call occurs [#ULL$$CMP] ; [] |5756| 
        CMPB      AL,#0                 ; [CPU_] |5756| 
        B         $C$L50,EQ             ; [CPU_] |5756| 
        ; branchcc occurs ; [] |5756| 
	.dwpsn	file "../Source/prod.c",line 5759,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5759 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5759| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5759| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5759| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5761,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5761 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5763 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5761| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5764,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5764 | continue;                       // not calibrated                      
; 5767 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5764| 
        B         $C$L48,EQ             ; [CPU_] |5764| 
        ; branchcc occurs ; [] |5764| 
	.dwpsn	file "../Source/prod.c",line 5768,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5768 | continue;                       // doesn't match, skip                 
; 5771 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5768| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5768| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5768| 
        MOVL      ACC,XAR3              ; [CPU_] |5768| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5768| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$266, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5768| 
        ; call occurs [#ULL$$CMP] ; [] |5768| 
        CMPB      AL,#0                 ; [CPU_] |5768| 
        B         $C$L49,EQ             ; [CPU_] |5768| 
        ; branchcc occurs ; [] |5768| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5761,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5761| 
        MOVL      XAR0,ACC              ; [CPU_] |5761| 
        ADDB      XAR4,#1               ; [CPU_] |5761| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5761| 
        ; branchcc occurs ; [] |5761| 
        B         $C$L50,UNC            ; [CPU_] |5761| 
        ; branch occurs ; [] |5761| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5772,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5772 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5772| 
	.dwpsn	file "../Source/prod.c",line 5773,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5773 | conf_data.ch[ch].ci = sns;                                             
; 5775 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5773| 
        MOV       T,*-SP[5]             ; [CPU_] |5773| 
        MPYU      ACC,T,AL              ; [CPU_] |5773| 
        ADDL      ACC,XAR2              ; [CPU_] |5773| 
        MOVL      XAR5,ACC              ; [CPU_] |5773| 
        MOVB      XAR0,#42              ; [CPU_] |5773| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5773| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$258, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$258, DW_AT_TI_end_line(0x1692)
	.dwattr $C$DW$258, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$258

	.sect	".text"
	.clink
	.global	_main

$C$DW$268	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$268, DW_AT_name("main")
	.dwattr $C$DW$268, DW_AT_low_pc(_main)
	.dwattr $C$DW$268, DW_AT_high_pc(0x00)
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$268, DW_AT_external
	.dwattr $C$DW$268, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$268, DW_AT_TI_begin_line(0x7d)
	.dwattr $C$DW$268, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$268, DW_AT_TI_max_frame_size(-144)
	.dwpsn	file "../Source/prod.c",line 125,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$269	.dwtag  DW_TAG_variable
	.dwattr $C$DW$269, DW_AT_name("buff")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$365)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("cmdbuff")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$365)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 125 | void main(void) {                                                      
; 126 | int i, j, k;                            // general purpose indics      
; 128 | double version;                 // for firmware version print          
; 130 | static char buff[1024];         // output buffer                       
; 132 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 133 | Uint16 cmdlen;                  // the length of the command           
; 135 | adccnt_t* cntp;                 // point to ad7738 count data          
; 136 | adcwt_t* wtp;                           // point to ad7738 load data   
; 138 | Uint16 ch;                              // channel number              
; 139 | Uint16 ss;                              // sensor number               
; 140 | Uint16 pt;                              // point number                
; 142 | Uint16 tagch = 0;                       // channel number for autoid   
; 144 | char unsaved = 0;                       // change to setup not saved   
; 146 | Uint16 slen;                            // string lenght               
; 148 | double scale;                           // input float value           
; 150 | Uint16 flash_ret;                       // return value of flash access
; 151 | double tempvalue;                       // temperature value in F      
; 153 | double volt[3];                 // input value in mv/v                 
; 154 | long long dsum[2];                      // read count for input value  
; 155 | Uint16 dacc[3];                 // dac out count                       
; 156 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 158 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 160 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 162 | Uint16 line;                            // vfd diplay line             
; 164 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 166 | int ds_en = 0;                  // enabled for data streamming         
; 167 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 168 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 169 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 171 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 172 | Uint16 ds_sn = 0;                       // data packet serial number   
; 173 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 175 | Uint32 temp32;                                                         
; 176 | float ftemp;                                                           
; 177 | long templg;                                                           
; 178 | Uint16 temp16;                                                         
; 179 | int tempint;                                                           
; 180 | double tempft;                                                         
; 182 | Uint16 *intp;                                                          
; 184 | const char *ccp;                                                       
; 186 | #ifdef SDHCCARD                                                        
; 187 | FATFS *fs;                              // pointer to fatfs            
; 189 | FRESULT res;// Fatfs reseult code                                      
; 190 | FIL *fp;// pointer to file object                                      
; 192 | Uint32 fsize;                                                          
; 194 | char sd_write;// should write to SD card                               
; 195 | char sd_close;// file need to be closed                                
; 196 | Uint32 sd_cnt;                                                         
; 198 | FILINFO Finfo;                                                         
; 199 | DIR dir;// Directory object                                            
; 200 | long p1;                                                               
; 201 | UINT s1, s2;                                                           
; 203 | rtc.year = 2010;                                                       
; 204 | rtc.month = 8;                                                         
; 205 | rtc.mday = 27;                                                         
; 206 | rtc.hour = 12;                                                         
; 207 | rtc.min = 0;                                                           
; 208 | rtc.sec = 0;                                                           
; 209 | #endif                                                                 
; 211 | // KS - 2014-02-11                                                     
; 212 | //DownloadFlag = 0;     // removed for release                         
; 214 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 142           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 125 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR1   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR1   assigned to $O$U293
;* AR1   assigned to $O$U322
;* AR1   assigned to $O$U534
;* AR1   assigned to $O$U662
;* AR1   assigned to $O$U761
;* AR1   assigned to $O$U798
;* AR5   assigned to $O$U814
;* AL    assigned to $O$U974
;* AR1   assigned to $O$U952
;* AR1   assigned to $O$U1044
;* AR1   assigned to $O$U942
;* AR6   assigned to $O$U1245
;* AR1   assigned to $O$U1271
;* AR7   assigned to $O$U1508
;* XT    assigned to $O$U1535
;* PL    assigned to $O$U1536
;* AR5   assigned to $O$U1560
;* PL    assigned to $O$U1565
;* PL    assigned to $O$U1572
;* AR7   assigned to $O$U1574
;* AR5   assigned to $O$U1575
;* AR5   assigned to $O$U1589
;* XT    assigned to $O$U1631
;* PL    assigned to $O$U1632
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L41
;* AR3   assigned to $O$L53
;* AR3   assigned to $O$L56
;* AR3   assigned to $O$L110
$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("ccp")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_breg20 -96]

$C$DW$272	.dwtag  DW_TAG_variable
	.dwattr $C$DW$272, DW_AT_name("tempft")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_breg20 -12]

$C$DW$273	.dwtag  DW_TAG_variable
	.dwattr $C$DW$273, DW_AT_name("templg")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_breg20 -14]

$C$DW$274	.dwtag  DW_TAG_variable
	.dwattr $C$DW$274, DW_AT_name("ds_ct")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_breg20 -39]

$C$DW$275	.dwtag  DW_TAG_variable
	.dwattr $C$DW$275, DW_AT_name("ds_sn")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_breg20 -41]

$C$DW$276	.dwtag  DW_TAG_variable
	.dwattr $C$DW$276, DW_AT_name("ds_bm")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$276, DW_AT_location[DW_OP_breg20 -42]

$C$DW$277	.dwtag  DW_TAG_variable
	.dwattr $C$DW$277, DW_AT_name("ds_dec")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$277, DW_AT_location[DW_OP_breg20 -43]

$C$DW$278	.dwtag  DW_TAG_variable
	.dwattr $C$DW$278, DW_AT_name("ds_dn")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$278, DW_AT_location[DW_OP_breg20 -44]

$C$DW$279	.dwtag  DW_TAG_variable
	.dwattr $C$DW$279, DW_AT_name("ds_stop")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_breg20 -45]

$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("ds_en")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_breg20 -46]

$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("bincmdresult")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -39]

$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("line")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -47]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("daccbm")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -48]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("tempvalue")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -98]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("scale")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -16]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("unsaved")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -40]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("tagch")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -135]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ss")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -49]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ch")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -50]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("version")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR5   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR7   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR4   assigned to $O$U219
;* AR1   assigned to $O$U219
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U391
;* AR1   assigned to $O$U391
;* AR1   assigned to $O$U391
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR1   assigned to $O$U368
;* AR5   assigned to $O$U368
;* AR7   assigned to $O$U368
;* AR1   assigned to $O$U259
;* AR1   assigned to $O$U555
;* AR1   assigned to $O$U555
;* AR1   assigned to $O$U600
;* AR1   assigned to $O$U600
;* AR4   assigned to $O$K789
;* AR4   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR4   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR3   assigned to $O$K789
;* AR3   assigned to $O$K789
;* AR5   assigned to $O$K789
;* AR5   assigned to $O$K789
;* AR1   assigned to $O$K789
;* AR1   assigned to $O$U844
;* AR1   assigned to $O$U844
;* AR1   assigned to $O$U867
;* AR1   assigned to $O$U867
;* AR1   assigned to $O$U867
;* AR6   assigned to $O$U823
;* AL    assigned to $O$U823
;* AR1   assigned to $O$U893
;* AR1   assigned to $O$U893
;* AR1   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR4   assigned to $O$U973
;* AR4   assigned to $O$U973
;* AR7   assigned to $O$U973
;* AR5   assigned to $O$U973
;* AR1   assigned to $O$K276
;* AR7   assigned to $O$U1110
;* AR7   assigned to $O$U1110
;* AR7   assigned to $O$U1110
;* AR7   assigned to $O$U1110
;* AR4   assigned to $O$U1112
;* AR4   assigned to $O$U1112
;* AR4   assigned to $O$U1112
;* AR4   assigned to $O$U1112
;* AR1   assigned to $O$U1146
;* AR1   assigned to $O$U1146
;* AR1   assigned to $O$U1146
;* AR1   assigned to $O$U1152
;* AR4   assigned to $O$U1164
;* AR4   assigned to $O$U1161
;* AR7   assigned to $O$U1161
;* PL    assigned to $O$U1161
;* AR7   assigned to $O$U1161
;* AR4   assigned to $O$U1161
;* AR5   assigned to $O$U1221
;* AR4   assigned to $O$U1221
;* AR5   assigned to $O$U1300
;* AR5   assigned to $O$U1300
;* AR4   assigned to $O$U1296
;* AR4   assigned to $O$U1296
;* AR5   assigned to $O$U1355
;* AR5   assigned to $O$U1355
;* PL    assigned to $O$U1361
;* AR0   assigned to $O$U1361
;* AR1   assigned to $O$U1362
;* AR7   assigned to $O$U1362
;* AR0   assigned to $O$U1398
;* AR5   assigned to $O$U1398
;* PL    assigned to $O$U1401
;* AR1   assigned to $O$U1401
;* AR1   assigned to $O$U1402
;* AR0   assigned to $O$U1402
;* AR5   assigned to $O$U1440
;* AR5   assigned to $O$U1440
;* AR0   assigned to $O$U1476
;* AR5   assigned to $O$U1476
;* AR4   assigned to $O$U1511
;* AR1   assigned to $O$U1511
;* AR5   assigned to $O$U1511
;* AR5   assigned to $O$U1511
;* AR4   assigned to $O$U1600
;* AR5   assigned to $O$U1600
;* AR4   assigned to $O$U1600
;* AR5   assigned to $O$U1609
;* AR0   assigned to _intp
$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("intp")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("intp")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("intp")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("intp")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("intp")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("intp")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("intp")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("intp")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("intp")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("intp")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("intp")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("tempint")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("tempint")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("temp16")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg10]

$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("temp16")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_breg20 -51]

$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("temp32")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_breg20 -56]

;* AL    assigned to _temp32
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("temp32")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("cmethod")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg6]

$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("cmethod")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_breg20 -39]

;* AL    assigned to _flash_ret
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("flash_ret")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("flash_ret")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("flash_ret")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("flash_ret")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("slen")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("slen")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("slen")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("slen")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("slen")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("slen")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("pt")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("pt")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("pt")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_breg20 -51]

$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("pt")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_breg20 -51]

;* AL    assigned to _pt
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("pt")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("pt")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("pt")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg12]

$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("pt")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _pt
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("pt")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("wtp")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("wtp")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg12]

;* PL    assigned to _wtp
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("wtp")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg2]

;* AR4   assigned to _wtp
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("wtp")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg12]

$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("cmdlen")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_breg20 -51]

;* AL    assigned to _cmdlen
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("cmdlen")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg0]

$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("cmdlen")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_breg20 -39]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("cmdlen")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _cmdlen
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("cmdlen")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("cmdlen")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("cmdlen")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg0]

$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("k")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_breg20 -51]

$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("k")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_breg20 -52]

$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("k")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_breg20 -52]

$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("k")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _k
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("k")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg16]

$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("k")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_breg20 -51]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("k")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -39]

;* PL    assigned to _k
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("k")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg2]

$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("k")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_breg20 -39]

;* PL    assigned to _k
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("k")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("k")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("j")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg10]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("j")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -39]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("j")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -39]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("j")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -39]

;* AR1   assigned to _j
$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("j")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_reg6]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("j")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -39]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("j")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -39]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("j")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -39]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("j")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -39]

$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("j")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_breg20 -52]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("j")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -52]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -39]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -51]

$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_breg20 -53]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -40]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -40]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -40]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -40]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -40]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -40]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -39]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -53]

;* AR1   assigned to _i
$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("i")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("i")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("i")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_reg0]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("i")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -39]

;* AR7   assigned to _i
$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("i")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("i")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _i
$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("i")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_reg12]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("i")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -39]

;* AL    assigned to _i
$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("i")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("i")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("i")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg0]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -39]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -39]

$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_breg20 -40]

;* AL    assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg16]

$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_breg20 -39]

;* AR6   assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg16]

$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("volt")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$363)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_breg20 -24]

$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("dsum")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$344)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_breg20 -32]

$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("dacc")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_breg20 -35]

$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("sampcnt")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$325)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_breg20 -38]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#136               ; [CPU_] 
	.dwcfi	cfa_offset, -144
	.dwpsn	file "../Source/prod.c",line 215,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 215 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$462, DW_AT_name("_sys_init")
	.dwattr $C$DW$462, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |215| 
        ; call occurs [#_sys_init] ; [] |215| 
	.dwpsn	file "../Source/prod.c",line 217,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 217 | delay_us(30000);                        // delay for 30 ms             
; 219 | // Clear all interrupts and initialize PIE vector table:               
; 220 | // Disable CPU interrupts                                              
; 221 | DINT;                                                                  
; 222 | // Initialize PIE control registers to their default state.            
; 223 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 224 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |217| 
$C$DW$463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$463, DW_AT_name("_delay_us")
	.dwattr $C$DW$463, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |217| 
        ; call occurs [#_delay_us] ; [] |217| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 225,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 225 | InitPieCtrl();                                                         
; 226 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$464, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$464, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |225| 
        ; call occurs [#_InitPieCtrl] ; [] |225| 
	.dwpsn	file "../Source/prod.c",line 227,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 227 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |227| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IFR = 0x0000;                                                          
; 229 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 230 | // Service Routines (ISR).                                             
; 231 | // This will populate the entire table, even if the interrupt          
; 232 | // is not used in this example.  This is useful for debug purposes.    
; 233 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 234 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 235,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 235 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$465, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$465, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |235| 
        ; call occurs [#_InitPieVectTable] ; [] |235| 
	.dwpsn	file "../Source/prod.c",line 237,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 237 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$466, DW_AT_name("_gpio_init")
	.dwattr $C$DW$466, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |237| 
        ; call occurs [#_gpio_init] ; [] |237| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$467, DW_AT_name("_extio_init")
	.dwattr $C$DW$467, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |238| 
        ; call occurs [#_extio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$468, DW_AT_name("_InitECan")
	.dwattr $C$DW$468, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |239| 
        ; call occurs [#_InitECan] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | configCAN();                                                           
; 242 | // Set SD select output as appropriate (Usually high)                  
; 243 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 256 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$469, DW_AT_name("_configCAN")
	.dwattr $C$DW$469, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |240| 
        ; call occurs [#_configCAN] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 257,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 257 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 258 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 260 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |257| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |257| 
        MOVL      ACC,XAR5              ; [CPU_] |257| 
        SUBL      XAR4,ACC              ; [CPU_] |257| 
        MOVL      ACC,XAR4              ; [CPU_] |257| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |257| 
$C$DW$470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$470, DW_AT_name("_memcpy")
	.dwattr $C$DW$470, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |257| 
        ; call occurs [#_memcpy] ; [] |257| 
	.dwpsn	file "../Source/prod.c",line 261,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 261 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 262 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |261| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |261| 
        MOVL      ACC,XAR5              ; [CPU_] |261| 
        SUBL      XAR4,ACC              ; [CPU_] |261| 
        MOVL      ACC,XAR4              ; [CPU_] |261| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |261| 
$C$DW$471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$471, DW_AT_name("_memcpy")
	.dwattr $C$DW$471, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |261| 
        ; call occurs [#_memcpy] ; [] |261| 
	.dwpsn	file "../Source/prod.c",line 279,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 279 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |279| 
        MOV       AH,#479               ; [CPU_] |279| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |279| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 289,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 289 | Flash_CallbackPtr = NULL;                                              
; 291 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |289| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |289| 
	.dwpsn	file "../Source/prod.c",line 292,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 292 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$472, DW_AT_name("_flash_init")
	.dwattr $C$DW$472, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |292| 
        ; call occurs [#_flash_init] ; [] |292| 
	.dwpsn	file "../Source/prod.c",line 294,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 294 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$473, DW_AT_name("_led_init")
	.dwattr $C$DW$473, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |294| 
        ; call occurs [#_led_init] ; [] |294| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | lcd_init();                             // lcd/vfd display             
; 297 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_lcd_init")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |295| 
        ; call occurs [#_lcd_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 299,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 299 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |299| 
        MOVB      AH,#0                 ; [CPU_] |299| 
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_ssr_set")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |299| 
        ; call occurs [#_ssr_set] ; [] |299| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_ssr_set")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_ssr_set")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(3, 0);                  // indicate gui not connected          
; 304 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_ssr_set")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 317,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 317 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_conf_read")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |317| 
        ; call occurs [#_conf_read] ; [] |317| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |318| 
        MOV       AH,#21930             ; [CPU_] |318| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |318| 
        B         $C$L51,EQ             ; [CPU_] |318| 
        ; branchcc occurs ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_conf_default")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |319| 
        ; call occurs [#_conf_default] ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_conf_write")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |320| 
        ; call occurs [#_conf_write] ; [] |320| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 323,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 323 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |323| 
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |323| 
        ; call occurs [#_shunt_switch] ; [] |323| 
	.dwpsn	file "../Source/prod.c",line 325,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 325 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |325| 
        ; call occurs [#_ad7738_init] ; [] |325| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_setcal();                                                       
; 328 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |326| 
        ; call occurs [#_ad7738_setcal] ; [] |326| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 329,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 329 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |329| 
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | tagwasthere[i] = 0;                                                    
; 332 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 328,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |328| 
        ; branchcc occurs ; [] |328| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 334,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 334 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |334| 
	.dwpsn	file "../Source/prod.c",line 332,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |332| 
	.dwpsn	file "../Source/prod.c",line 334,column 2,is_stmt,isa 0
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_delay_us")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |334| 
        ; call occurs [#_delay_us] ; [] |334| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 336 | lcd_clear();                                                           
; 337 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |336| 
        ; call occurs [#_lcd_clear] ; [] |336| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 338 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |338| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |337| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |338| 
        MOVL      XAR0,#44              ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |337| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |338| 
        MOVL      *-SP[4],ACC           ; [CPU_] |338| 
        MOVL      XAR4,XAR1             ; [CPU_] |338| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |338| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_sprintf")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |338| 
        ; call occurs [#_sprintf] ; [] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |339| 
        ; call occurs [#_lcd_dputs] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |340| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |340| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |340| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |340| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |340| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_sprintf")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |340| 
        ; call occurs [#_sprintf] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |341| 
        ; call occurs [#_lcd_dputs] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |342| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |342| 
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 344,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 344 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |344| 
	.dwpsn	file "../Source/prod.c",line 345,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |345| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 347,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 347 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |347| 
        TBIT      AL,#4                 ; [CPU_] |347| 
        B         $C$L54,TC             ; [CPU_] |347| 
        ; branchcc occurs ; [] |347| 
	.dwpsn	file "../Source/prod.c",line 348,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |348| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 351,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 351 | if (1 & i) {                                                           
; 352 |         led_set( LED1, LED_RED);                                       
; 353 |         led_set( LED2, LED_RED);                                       
; 354 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |351| 
        B         $C$L55,TC             ; [CPU_] |351| 
        ; branchcc occurs ; [] |351| 
	.dwpsn	file "../Source/prod.c",line 355,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 355 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |355| 
        MOVB      AH,#2                 ; [CPU_] |355| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_led_set")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |355| 
        ; call occurs [#_led_set] ; [] |355| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |356| 
        B         $C$L56,UNC            ; [CPU_] |356| 
        ; branch occurs ; [] |356| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 352,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |352| 
        MOVB      AH,#1                 ; [CPU_] |352| 
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_led_set")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |352| 
        ; call occurs [#_led_set] ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |353| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_led_set")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 358,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 358 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |358| 
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_delay_us")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |358| 
        ; call occurs [#_delay_us] ; [] |358| 
	.dwpsn	file "../Source/prod.c",line 345,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |345| 
        MOV       AL,AR1                ; [CPU_] |345| 
        CMPB      AL,#100               ; [CPU_] |345| 
        B         $C$L53,LT             ; [CPU_] |345| 
        ; branchcc occurs ; [] |345| 
	.dwpsn	file "../Source/prod.c",line 361,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 361 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |361| 
        MOVB      AH,#0                 ; [CPU_] |361| 
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_led_set")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |361| 
        ; call occurs [#_led_set] ; [] |361| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_led_set")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
        MOV       AL,AR1                ; [CPU_] |362| 
	.dwpsn	file "../Source/prod.c",line 364,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 364 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |364| 
        CMPB      AL,#20                ; [CPU_] |364| 
        B         $C$L58,GEQ            ; [CPU_] |364| 
        ; branchcc occurs ; [] |364| 
	.dwpsn	file "../Source/prod.c",line 365,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |365| 
        MOVL      XAR4,XAR5             ; [CPU_] |365| 
	.dwpsn	file "../Source/prod.c",line 367,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 367 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |367| 
	.dwpsn	file "../Source/prod.c",line 365,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |365| 
        INC       *+XAR4[0]             ; [CPU_] |365| 
	.dwpsn	file "../Source/prod.c",line 367,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |367| 
        CMPB      AL,#4                 ; [CPU_] |367| 
        B         $C$L57,LT             ; [CPU_] |367| 
        ; branchcc occurs ; [] |367| 
	.dwpsn	file "../Source/prod.c",line 368,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |368| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 371,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 371 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |371| 
        MOVB      AL,#40                ; [CPU_] |371| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |371| 
        ; call occurs [#_lcd_dputs] ; [] |371| 
	.dwpsn	file "../Source/prod.c",line 373,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 373 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_conf_write")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |373| 
        ; call occurs [#_conf_write] ; [] |373| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 376,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 376 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |376| 
        MOVL      XAR0,#74              ; [CPU_] |376| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |376| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |376| 
        MOVB      XAR0,#35              ; [CPU_] |376| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |376| 
        ADDL      XAR4,ACC              ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 142,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |142| 
	.dwpsn	file "../Source/prod.c",line 376,column 2,is_stmt,isa 0
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 144,column 15,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |144| 
	.dwpsn	file "../Source/prod.c",line 156,column 13,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |156| 
	.dwpsn	file "../Source/prod.c",line 166,column 12,is_stmt,isa 0
        MOV       *-SP[46],#0           ; [CPU_] |166| 
	.dwpsn	file "../Source/prod.c",line 167,column 14,is_stmt,isa 0
        MOV       *-SP[45],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 169,column 15,is_stmt,isa 0
        MOV       *-SP[44],#60          ; [CPU_] |169| 
	.dwpsn	file "../Source/prod.c",line 170,column 16,is_stmt,isa 0
        MOV       *-SP[43],#1           ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 15,is_stmt,isa 0
        MOV       *-SP[42],#15          ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 142,column 15,is_stmt,isa 0
        MOV       *+FP[AR0],#0          ; [CPU_] |142| 
	.dwpsn	file "../Source/prod.c",line 376,column 2,is_stmt,isa 0
        MOVL      *-SP[56],ACC          ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 378,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 378 | switch (conf_data.rxdir) {                                             
; 379 | case SDIR_RS232:                        // RS232, 0                    
; 380 |         led_set( LED1, LED_RED);                                       
; 381 |         led_set( LED2, LED_RED);                                       
; 382 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 383 |         scia_init(temp32);                                             
; 384 |         break;                                                         
; 385 | case SDIR_RS485:                        // RS485, 1                    
; 386 |         led_set( LED1, LED_GREEN);                                     
; 387 |         led_set( LED2, LED_RED);                                       
; 388 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 389 |         scia_init(temp32);                                             
; 390 |         break;                                                         
; 391 | case SDIR_ENET:                 // Ethernet, 2                         
; 392 |         led_set( LED1, LED_RED);                                       
; 393 |         led_set( LED2, LED_GREEN);                                     
; 394 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 395 |         scia_init(921600L);                                            
; 396 |         //scia_init( 460800L );                                        
; 397 |         break;                                                         
; 398 | case SDIR_USB:                  // USB, 3                              
; 399 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 400 |         led_set( LED1, LED_GREEN);                                     
; 401 |         led_set( LED2, LED_GREEN);                                     
; 402 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 403 |         // the USB chip can't handle 921600bps without dropping bytes  
; 404 |         // it seems 460800bps is fine so far.                          
; 405 |         // the client (PC Host) side can use any baudrate.             
; 406 |         scia_init(460800L);                                            
; 407 |         break;                                                         
; 408 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |378| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |378| 
        B         $C$L64,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
        CMPB      AL,#1                 ; [CPU_] |378| 
        B         $C$L63,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
        CMPB      AL,#2                 ; [CPU_] |378| 
        B         $C$L60,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
        CMPB      AL,#3                 ; [CPU_] |378| 
        B         $C$L59,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 409 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |410| 
        MOVB      AH,#1                 ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_led_set")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |410| 
        ; call occurs [#_led_set] ; [] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |411| 
        MOVB      AH,#2                 ; [CPU_] |411| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_led_set")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 413 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |412| 
        MOVL      XAR0,#72              ; [CPU_] |412| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |412| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |412| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |412| 
        MOVB      XAR0,#34              ; [CPU_] |412| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |412| 
	.dwpsn	file "../Source/prod.c",line 414,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 414 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |414| 
        ; branch occurs ; [] |414| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |400| 
        MOVB      AH,#2                 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 399,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |399| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_led_set")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |400| 
        ; call occurs [#_led_set] ; [] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_led_set")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |402| 
        MOVL      XAR0,#72              ; [CPU_] |402| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |402| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |402| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |402| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |402| 
        ADDL      XAR4,ACC              ; [CPU_] |402| 
        MOVL      XAR0,#44              ; [CPU_] |402| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |402| 
        MOVL      *-SP[4],ACC           ; [CPU_] |402| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |402| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_sprintf")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |402| 
        ; call occurs [#_sprintf] ; [] |402| 
	.dwpsn	file "../Source/prod.c",line 406,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |406| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |407| 
        ; branch occurs ; [] |407| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 392,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |392| 
        MOVB      AH,#1                 ; [CPU_] |392| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_led_set")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |392| 
        ; call occurs [#_led_set] ; [] |392| 
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |393| 
        MOVB      AH,#2                 ; [CPU_] |393| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |394| 
        MOVL      XAR0,#72              ; [CPU_] |394| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |394| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |394| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |394| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |394| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |394| 
        MOVL      XAR0,#44              ; [CPU_] |394| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |394| 
        MOVL      *-SP[4],ACC           ; [CPU_] |394| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |394| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_sprintf")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |394| 
        ; call occurs [#_sprintf] ; [] |394| 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |395| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |395| 
	.dwpsn	file "../Source/prod.c",line 397,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |397| 
        ; branch occurs ; [] |397| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 386,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |386| 
	.dwpsn	file "../Source/prod.c",line 390,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |390| 
        ; branch occurs ; [] |390| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 380,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |380| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |380| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |380| 
        ; call occurs [#_led_set] ; [] |380| 
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |381| 
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_led_set")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |382| 
        MOVL      XAR0,#72              ; [CPU_] |382| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |382| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |382| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |382| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |382| 
        ADDL      XAR4,ACC              ; [CPU_] |382| 
        MOVL      XAR1,*-SP[56]         ; [CPU_] |382| 
        MOVL      XAR0,#44              ; [CPU_] |382| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |382| 
        MOVL      *-SP[4],ACC           ; [CPU_] |382| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |382| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |382| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_sprintf")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |382| 
        ; call occurs [#_sprintf] ; [] |382| 
        MOVL      ACC,XAR1              ; [CPU_] |382| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_scia_init")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |383| 
        ; call occurs [#_scia_init] ; [] |383| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 416 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |416| 
        ; call occurs [#_lcd_clear] ; [] |416| 
        MOVL      XAR0,#44              ; [CPU_] |416| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |416| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 419 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |417| 
        ; call occurs [#_lcd_dputs] ; [] |417| 
	.dwpsn	file "../Source/prod.c",line 420,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | uart_set_dir(conf_data.rxdir);                                         
; 422 | // initalize hardware and SFCLIB buffers                               
; 423 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 425 | // Enable global Interrupts and higher priority real-time debug events:
; 426 | EINT;                                                                  
; 427 | // Enable Global interrupt INTM                                        
; 428 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |420| 
        MOVL      XAR0,#40              ; [CPU_] |420| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |420| 
        MOVB      XAR0,#34              ; [CPU_] |420| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |420| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |420| 
        ; call occurs [#_uart_set_dir] ; [] |420| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 430,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 430 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 432 |         for (i = 0; i < 50; i++)                // 1s                  
; 434 |                 delay_us(20000);                // delay for 20ms      
; 436 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |430| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |430| 
        CMPB      AL,#3                 ; [CPU_] |430| 
        B         $C$L76,NEQ            ; [CPU_] |430| 
        ; branchcc occurs ; [] |430| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 438,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 438 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |438| 
        MOVL      *-SP[56],XAR4         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 440,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 440 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 442 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |440| 
        ; branch occurs ; [] |440| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 443 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |443| 
        ; call occurs [#_scia_rx_getcmds] ; [] |443| 
        CMPB      AL,#0                 ; [CPU_] |443| 
        B         $C$L70,EQ             ; [CPU_] |443| 
        ; branchcc occurs ; [] |443| 
	.dwpsn	file "../Source/prod.c",line 442,column 4,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |442| 
$C$L68:    
        MOVL      XAR1,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |444| 
        MOVL      XAR4,XAR1             ; [CPU_] |444| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmd] ; [] |444| 
        MOV       T,*-SP[39]            ; [CPU_] |444| 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | lcd_puts(cmdbuff, 20 * j);                                             
; 446 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |445| 
        ; call occurs [#_lcd_puts] ; [] |445| 
	.dwpsn	file "../Source/prod.c",line 447,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 447 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[39]              ; [CPU_] |447| 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 447,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |447| 
        B         $C$L69,LT             ; [CPU_] |447| 
        ; branchcc occurs ; [] |447| 
	.dwpsn	file "../Source/prod.c",line 448,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[39],#0           ; [CPU_] |448| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |443| 
        ; call occurs [#_scia_rx_getcmds] ; [] |443| 
        CMPB      AL,#0                 ; [CPU_] |443| 
        B         $C$L68,NEQ            ; [CPU_] |443| 
        ; branchcc occurs ; [] |443| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 440,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |440| 
        TBIT      AL,#5                 ; [CPU_] |440| 
        B         $C$L67,NTC            ; [CPU_] |440| 
        ; branchcc occurs ; [] |440| 
	.dwpsn	file "../Source/prod.c",line 452,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 452 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |452| 
        SPM       #0                    ; [CPU_] 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_scia_puts")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |452| 
        ; call occurs [#_scia_puts] ; [] |452| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |453| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_delay_us")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |453| 
        ; call occurs [#_delay_us] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | scia_puts("E\r");                                                      
; 455 | j = 0;                                                                 
; 456 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |454| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_scia_puts")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |454| 
        ; call occurs [#_scia_puts] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 457,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 457 | for (i = 0; i < WTT; i++)               // 10s                         
; 459 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |457| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |455| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 460,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 460 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |460| 
        ; call occurs [#_scia_rx_getcmds] ; [] |460| 
        CMPB      AL,#0                 ; [CPU_] |460| 
        B         $C$L72,EQ             ; [CPU_] |460| 
        ; branchcc occurs ; [] |460| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 461,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |461| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmd] ; [] |461| 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[39]              ; [CPU_] |462| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 464,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 464 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |464| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_delay_us")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |464| 
        ; call occurs [#_delay_us] ; [] |464| 
        MOV       AL,*-SP[39]           ; [CPU_] |464| 
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |465| 
        B         $C$L73,LT             ; [CPU_] |465| 
        ; branchcc occurs ; [] |465| 
	.dwpsn	file "../Source/prod.c",line 467,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 467 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[39],#0           ; [CPU_] |467| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | i = WTT - 10;                                                          
; 472 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |468| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 457,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |457| 
        CMP       AR1,#500              ; [CPU_] |457| 
        B         $C$L71,LT             ; [CPU_] |457| 
        ; branchcc occurs ; [] |457| 
	.dwpsn	file "../Source/prod.c",line 473,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 473 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |473| 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_puts")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |473| 
        ; call occurs [#_scia_puts] ; [] |473| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |474| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_delay_us")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |474| 
        ; call occurs [#_delay_us] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |475| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_scia_puts")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |475| 
        ; call occurs [#_scia_puts] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |476| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_delay_us")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |476| 
        ; call occurs [#_delay_us] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |477| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_puts")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |477| 
        ; call occurs [#_scia_puts] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |478| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_delay_us")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |478| 
        ; call occurs [#_delay_us] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |479| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_scia_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |479| 
        ; call occurs [#_scia_puts] ; [] |479| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 481,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 481 | j = 0;                                                                 
; 482 | for (i = 0; i < 100; i++)               // 2s                          
; 484 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[39],#0           ; [CPU_] |481| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 485,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 485 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |485| 
        ; call occurs [#_scia_rx_getcmds] ; [] |485| 
        CMPB      AL,#0                 ; [CPU_] |485| 
        B         $C$L75,EQ             ; [CPU_] |485| 
        ; branchcc occurs ; [] |485| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |486| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmd] ; [] |486| 
        MOV       T,*-SP[39]            ; [CPU_] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR4,*-SP[56]         ; [CPU_] |487| 
        MPYB      ACC,T,#20             ; [CPU_] |487| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |487| 
        ; call occurs [#_lcd_puts] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[39]              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |488| 
        B         $C$L75,LT             ; [CPU_] |488| 
        ; branchcc occurs ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[39],#1           ; [CPU_] |489| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 492,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 492 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |492| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_delay_us")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |492| 
        ; call occurs [#_delay_us] ; [] |492| 
	.dwpsn	file "../Source/prod.c",line 482,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |482| 
        ; branchcc occurs ; [] |482| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 495,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 495 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |495| 
        B         $C$L78,UNC            ; [CPU_] |495| 
        ; branch occurs ; [] |495| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 434,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |434| 
        SPM       #0                    ; [CPU_] 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_delay_us")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |434| 
        ; call occurs [#_delay_us] ; [] |434| 
	.dwpsn	file "../Source/prod.c",line 432,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |432| 
        ; branchcc occurs ; [] |432| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 498,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 498 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 500 | #ifdef SDHCCARD                                                        
; 502 | // check SD card                                                       
; 503 | lcd_puts( "SD Card Testing...", 0 );                                   
; 504 | sd_write = 0;                                                          
; 505 | sd_close = 0;                                                          
; 506 | sd_cnt = 0;                                                            
; 507 | fp = NULL;                                                             
; 509 | f_mount( 0, &Fatfs );                                                  
; 511 | res = f_getfree( "0:", &fsize, &fs );                                  
; 513 | sprintf( buff, "%02X", res );                                          
; 514 | lcd_puts( buff, 18 );                                                  
; 516 | if( !res )                                                             
; 518 |         switch( fs->fs_type & 3 )                                      
; 520 |                 case 1:                                                
; 521 |                 lcd_puts( "FAT12", 20 );                               
; 522 |                 break;                                                 
; 523 |                 case 2:                                                
; 524 |                 lcd_puts( "FAT16", 20 );                               
; 525 |                 break;                                                 
; 526 |                 case 3:                                                
; 527 |                 lcd_puts( "FAT32", 20 );                               
; 528 |                 break;                                                 
; 531 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 532 |         lcd_puts( buff, 40 );                                          
; 534 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 535 |         lcd_puts( buff, 60 );                                          
; 537 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 539 |                 switch( res )                                          
; 541 |                         case CT_MMC:                                   
; 542 |                         lcd_puts( "on MMC", 26 );                      
; 543 |                         break;                                         
; 544 |                         case CT_SD1:                                   
; 545 |                         lcd_puts( "on SDV1", 26 );                     
; 546 |                         break;                                         
; 547 |                         case CT_SD2:                                   
; 548 |                         lcd_puts( "on SDV2", 26 );                     
; 549 |                         break;                                         
; 550 |                         case CT_SD2|CT_BLOCK:                          
; 551 |                         lcd_puts( "on SDHC", 26 );                     
; 552 |                         break;                                         
; 553 |                         default:                                       
; 554 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 555 |                         break;                                         
; 560 | else                                                                   
; 562 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 578 | for( i = 0; i < 100; i++ )                      // 2s                  
; 580 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 582 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |498| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |498| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |498| 
	.dwpsn	file "../Source/prod.c",line 584,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 584 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |584| 
        MOVB      AH,#2                 ; [CPU_] |584| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_led_set")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |584| 
        ; call occurs [#_led_set] ; [] |584| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |585| 
        MOVB      AH,#0                 ; [CPU_] |585| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_led_set")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 587,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 587 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_update_units")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |587| 
        ; call occurs [#_update_units] ; [] |587| 
	.dwpsn	file "../Source/prod.c",line 589,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 589 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |589| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |589| 
        ; call occurs [#_ad7738_resetpeak] ; [] |589| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetvall( BM_ALL);              // reset valley                
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetvall] ; [] |590| 
        MOVL      XAR0,#40              ; [CPU_] |590| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |590| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *-SP[60],ACC          ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | line = 0;                                                              
; 593 | //=====================================================================
;     | =====//                                                                
; 594 | // main loop                                                           
; 595 | //=====================================================================
;     | =====//                                                                
; 596 | //      spi_init();                                                    
; 597 | for (;;) {                                                             
; 599 |         // check SW2 for reset command                                 
; 600 |         if (!(0x0010 & INBTTN)) {                                      
; 602 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 603 |                 ad7738_resetpeak(0x0f);                                
; 604 |                 ad7738_resetvall(0x0f);                                
; 606 | #if(0)                                                                 
; 607 |                 // DEBUG: tagid                                        
; 608 |                 lcd_clear();                                           
; 609 |                 for( i = 0; i < 4; i++ )                               
; 611 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 612 |                         lcd_puts( buff, i * 20 );                      
; 614 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 616 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 618 |                 // DEBUG: tagid                                        
; 619 |                 update_units();                                        
; 620 | #endif                                                                 
; 624 | #ifdef SDHCCARD                                                        
; 625 |         // write to SD card file if flag set                           
; 626 |         if( sd_write && fp )                                           
; 628 |                 if( prod_getavail() > 31 || sd_close )                 
; 630 |                         led_set( LED2, LED_RED );                      
; 632 |                         k = 32;                                        
; 634 |                         while( prod_getavail() && k-- )                
; 636 |                                 wtp = prod_getnext();                  
; 638 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 640 |                                         intp = (Uint16*)&wtp->adw[i];  
; 642 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 644 |                                         for( j = 0; j < 2; j++ )       
; 646 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 647 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 648 |                                                 intp++;                
; 651 |                                 sd_cnt++;                              
; 654 |                         if( sd_close )                                 
; 656 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 657 |                                 if( res )                              
; 659 |                                         sprintf( buff, "%02X ", res ); 
; 660 |                                         scia_puts( buff );             
; 663 |                                 res = f_close( fp );                   
; 664 |                                 fp = NULL;                             
; 666 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 667 |                                 scia_puts( buff );                     
; 669 |                                 sd_write = 0;                          
; 670 |                                 sd_close = 0;                          
; 673 |                         led_set( LED2, LED_OFF );                      
; 676 | #endif                                                                 
; 678 |         //=============================================================
;     | =====================//                                                
; 679 |         // update the vfd
;     |                          //                                            
; 680 |         //=============================================================
;     | =====================//                                                
; 681 |         // if there is new "monitor data" ready                        
; 682 |         if (ad7738_monrdy()) {                                         
; 683 |                 // clear the ready flag                                
; 684 |                 ad7738_monclr();                                       
; 686 |                 // display the appropriate data                        
; 687 |                 switch (conf_data.vfd[line].what) {                    
; 688 |                 case VFD_LOAD:                                         
; 689 |                         wtp = ad7738_getmon();                         
; 690 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 691 |                         goto VFD_LINE_BUFF;                            
; 693 |                 case VFD_PEAK:                                         
; 694 |                         wtp = ad7738_getpeak();                        
; 695 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 696 |                         goto VFD_LINE_BUFF;                            
; 698 |                 case VFD_VALL:                                         
; 699 |                         wtp = ad7738_getvall();                        
; 700 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 701 |                         goto VFD_LINE_BUFF;                            
; 703 |                 case VFD_POSI:                                         
; 704 |                         wtp = ad7738_getmon();                         
; 705 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 706 |                         goto VFD_LINE_BUFF;                            
; 708 |                 case VFD_VELO:                                         
; 709 |                         wtp = ad7738_getmon();                         
; 710 |                         //wtp = ad7738_getpeak();                      
; 711 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 713 |                         // display appropriate decimal points          
; 714 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 715 |                         case 0:                                        
; 716 |                                 sprintf(buff, "%10.0f", tempft);       
; 717 |                                 break;                                 
; 718 |                         case 1:                                        
; 719 |                                 sprintf(buff, "%10.1f", tempft);       
; 720 |                                 break;                                 
; 721 |                         case 2:                                        
; 722 |                                 sprintf(buff, "%10.2f", tempft);       
; 723 |                                 break;                                 
; 724 |                         case 3:                                        
; 725 |                                 sprintf(buff, "%10.3f", tempft);       
; 726 |                                 break;                                 
; 727 |                         case 4:                                        
; 728 |                                 sprintf(buff, "%10.4f", tempft);       
; 729 |                                 break;                                 
; 730 |                         case 5:                                        
; 731 |                                 sprintf(buff, "%10.5f", tempft);       
; 732 |                                 break;                                 
; 734 |                         break;                                         
; 736 |                 case VFD_LIMIT:                                        
; 737 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 738 |                         sprintf(buff, "  %s",                          
; 739 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 740 |                         break;                                         
; 741 |                 case VFD_TEMP:                                         
; 742 |                         sprintf(buff, "%10.1f", tempvalue);            
; 743 |                         break;                                         
; 746 |                 // print to LCD                                        
; 747 |                 lcd_puts(buff, 7 + 20 * line);                         
; 749 |                 line++;                                                
; 750 |                 if (line >= VFD_MAX) {                                 
; 751 |                         line = 0;                                      
; 755 |         //=============================================================
;     | =====================//                                                
; 756 |         // temperature sensor reading
;     |                  //                                                    
; 757 |         //=============================================================
;     | =====================//                                                
; 759 |         // if its time to start a temp conversion...                   
; 760 |         if (ad7738_tempstart()) {                                      
; 761 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 764 |         // if its time to start a temp reading...                      
; 765 |         else if (ad7738_tempread()) {                                  
; 766 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 767 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 770 |         //=============================================================
;     | =====================//                                                
; 771 |         // Auto ID detection
;     |                  //                                                    
; 772 |         //=============================================================
;     | =====================//                                                
; 773 |         // check for changes in the load cells connected by "TAG ID"   
; 774 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 775 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 777 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 779 |                                 // new loadcell just plugged in        
; 780 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 781 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 783 |                                         DINT;                          
; 784 |                                         maf_rst();                     
; 785 |                                         ad7738_setcal();               
; 786 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 787 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 788 |                                         EINT;                          
; 790 |                                         lcd_clear();                   
; 791 |                                         update_units();                
; 792 |                                         autoidchanged = 1;             
; 795 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 796 |                 } else {                                               
; 798 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 800 |                         if (autoid[tagch]) {                           
; 801 |                                 autoid[tagch] = 0;                     
; 802 |                                 lcd_clear();                           
; 803 |                                 update_units();                        
; 804 |                                 autoidchanged = 1;                     
; 808 |                 tagch++;                                               
; 809 |                 if (tagch >= CHS_MAX) {                                
; 810 |                         tagch = 0;                                     
; 814 |         //=============================================================
;     | =====================//                                                
; 815 |         // Data streamming
;     |                          //                                            
; 816 |         //=============================================================
;     | =====================//                                                
; 817 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 818 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 819 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 820 |                 //      taking into account decimation, etc.           
; 821 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 823 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 825 |                         ds_ct = 0;                                     
; 826 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 827 |                         j = 0;                                         
; 828 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 829 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 830 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 831 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 832 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 833 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 834 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 836 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 837 |                                 wtp = prod_getnext();                  
; 838 |                                 if (--k) {                             
; 839 |                                         continue;
;     |          // decimation                                                 
; 841 |                                 k = ds_dec;                            
; 842 |                                 ds_ct++;                               
; 844 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 845 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 846 |                                         if (ds_bm & ch) {              
; 847 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 848 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 849 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 850 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 851 |                                                         intp++;        
; 854 |                                         ch <<= 1;
;     |          // next channel                                               
; 857 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 858 |                                         if (ds_bm & ch) {              
; 859 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 860 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 861 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 862 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 863 |                                                         intp++;        
; 866 |                                         ch <<= 1;
;     |          // next channel                                               
; 869 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 870 |                                         if (ds_bm & ch) {              
; 871 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 872 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 873 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 874 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 875 |                                                         intp++;        
; 878 |                                         ch <<= 1;
;     |          // next channel                                               
; 882 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 884 |                         if (ds_stop) {                                 
; 885 |                                 ds_en = 0;                             
; 888 |                         scia_send_bin(buff, j);         // send data   
; 890 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 891 |                 } else if (ad7738_getlimitchgd()) {                    
; 892 |                         j = 0;                                         
; 893 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 894 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 895 |                         for (i = 0; i < LIM_MAX; i++) {                
; 896 |                                 buff[j++] = ad7738_getlimitst(i);      
; 898 |                         scia_send_bin(buff, j);         // send data   
; 899 |                 } else if (autoidchanged) {                            
; 900 |                         autoidchanged = 0;                             
; 902 |                         j = 0;                                         
; 903 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 904 |                         buff[j++] = GetAutoId;                  // 1,  
; 905 |                         buff[j++] = conf_data.tagiden;                 
; 906 |                         for (i = 0; i < CHS_MAX; i++) {                
; 907 |                                 buff[j++] = autoid[i];                 
; 909 |                         scia_send_bin(buff, j);         // send data   
; 915 |         //=============================================================
;     | =====================//                                                
; 916 |         // serial command processing
;     |                  //                                                    
; 917 |         //=============================================================
;     | =====================//                                                
; 919 |         //=============================================================
;     | =====================//                                                
; 920 |         // Check for available command in the command buffer
;     |                  //                                                    
; 921 |         //=============================================================
;     | =====================//                                                
; 922 |         if (0 == scia_rx_getcmds()) {                                  
; 923 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 926 |         //=============================================================
;     | =====================//                                                
; 927 |         // Read one command from command buffer
;     |                  //                                                    
; 928 |         //=============================================================
;     | =====================//                                                
; 929 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 931 |         //=============================================================
;     | =====================//                                                
; 932 |         // Empty command
;     |                          //                                            
; 933 |         //=============================================================
;     | =====================//                                                
; 934 |         if (0 == cmdlen) {                                             
; 935 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 936 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 937 |                 continue;                                              
; 940 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 942 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 943 |                 // ASCII command mode processing
;     |                                  //                                    
; 944 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 946 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 949 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 950 |                 // Current configuration print out
;     |                          //                                            
; 951 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 953 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1017 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1019 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1021 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1024 |                         case 'A':                               // all 
; 1026 |                                 version = VERSION;                     
; 1027 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1028 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1029 |                                 scia_puts(buff);                       
; 1030 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1031 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1032 |                                 scia_puts(buff);                       
; 1033 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1034 |                                 scia_puts(buff);                       
; 1035 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1036 |                                                 conf_data.uname);      
; 1037 |                                 scia_puts(buff);                       
; 1039 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1040 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1041 |                                 scia_puts(buff);                       
; 1042 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1043 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1044 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1045 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1046 |                                         scia_puts(buff);               
; 1048 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1049 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1050 |                                 scia_puts(buff);                       
; 1052 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1053 |                                                 conf_data.filter);     
; 1054 |                                 scia_puts(buff);                       
; 1056 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1057 |                                         scia_puts("\r\n");             
; 1058 |                                         print_channel(ch);
;     |          // channel info                                               
; 1059 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1062 |                                 scia_puts("\r\n");                     
; 1063 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1064 |                                                 conf_data.velfilter);  
; 1065 |                                 scia_puts(buff);                       
; 1066 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1067 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1068 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1069 |                                         scia_puts(buff);               
; 1071 |                                 print_vfd();                           
; 1072 |                                 print_dac();                           
; 1073 |                                 print_limits();                        
; 1074 |                                 break;                                 
; 1076 |                         case 'S':
;     |  // sensor list                                                        
; 1078 |                                 scia_puts("\r\n");                     
; 1080 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1081 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1082 |                                         scia_puts(buff);               
; 1083 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1085 |                                 break;                                 
; 1087 |                         case 'D':
;     |  // Display settings                                                   
; 1089 |                                 print_vfd();                           
; 1090 |                                 break;                                 
; 1092 |                         case 'O':
;     |  // DAC settings                                                       
; 1094 |                                 print_dac();                           
; 1095 |                                 break;                                 
; 1097 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1099 |                                 print_limits();                        
; 1100 |                                 break;                                 
; 1102 |                         default:                                       
; 1103 |                                 goto INVALIDCMD;                       
; 1106 |                         break;                                         
; 1108 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1109 |                         // Unit config commands
;     |                                  //                                    
; 1110 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1111 |                 case 'U':                                       // Unit
; 1113 |                         if (cmdlen < 2) {                              
; 1114 |                                 goto INVALIDCMD;                       
; 1117 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1120 |                         case 'S':
;     |  // unit serial number                                                 
; 1122 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1123 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1124 |                                 conf_data.usn = atol(cmdbuff);         
; 1126 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1127 |                                 scia_puts(buff);                       
; 1128 |                                 unsaved = 1;                           
; 1129 |                                 break;                                 
; 1131 |                         case 'N':
;     |  // unit name                                                          
; 1133 |                                 j = sizeof(conf_data.uname) - 1;       
; 1134 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1135 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1136 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1138 |                                         cmdlen = j;                    
; 1139 |                                         cmdbuff[j] = '\0';             
; 1141 |                                 // also copy the null terminater       
; 1142 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1143 |                                                 cmdlen + 1);           
; 1144 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1146 |                                 scia_puts(cmdbuff);                    
; 1147 |                                 scia_puts("\r\n");                     
; 1148 |                                 unsaved = 1;                           
; 1149 |                                 break;                                 
; 1151 |                         case 'C':
;     |  // current sensor                                                     
; 1153 |                                 // channel number                      
; 1154 |                                 j = CHS_MAX;                           
; 1155 |                                 do {                                   
; 1156 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1157 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1158 |                                         ch = atoi(cmdbuff);            
; 1159 |                                         scia_puts(cmdbuff);            
; 1160 |                                         if (ch > 0 && ch <= j) {       
; 1161 |                                                 break;
;     |          // valid input channel number                                 
; 1163 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1164 |                                 } while (j);                           
; 1165 |                                 scia_puts("\r\n");                     
; 1166 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1168 |                                 // sensor number                       
; 1169 |                                 j = SENSPCH;                           
; 1170 |                                 do {                                   
; 1171 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1172 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1173 |                                         ss = atoi(cmdbuff);            
; 1174 |                                         scia_puts(cmdbuff);            
; 1175 |                                         if (ss > 0 && ss <= j) {       
; 1176 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1178 |                                                 break;                 
; 1180 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1181 |                                 } while (j);                           
; 1182 |                                 scia_puts("\r\n");                     
; 1183 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1185 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1186 |                                                 ch + 1, ss + 1);       
; 1187 |                                 scia_puts(buff);                       
; 1188 |                                 print_sensor(ss);                      
; 1189 |                                 unsaved = 1;                           
; 1191 |                                 DINT;                                  
; 1192 |                                 conf_data.ch[ch].ci = ss;              
; 1193 |                                 ad7738_setcal();                       
; 1195 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1196 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1197 |                                 EINT;                                  
; 1199 |                                 update_units();                        
; 1200 |                                 break;                                 
; 1202 |                         case 'I':
;     |  // interface                                                          
; 1204 |                                 for (j = 0; j < 4; j++) {              
; 1205 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1206 |                                         scia_puts(buff);               
; 1207 |                                         if (j < 3) {                   
; 1208 |                                                 scia_puts(", ");       
; 1211 |                                 scia_puts("\r\n");                     
; 1212 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1213 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1214 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1215 |                                 scia_puts(cmdbuff);                    
; 1216 |                                 scia_puts("\r\n");                     
; 1217 |                                 if (cmdlen == 0) {                     
; 1218 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1219 |                                         break;                         
; 1221 |                                 pt = atoi(cmdbuff);                    
; 1222 |                                 if (pt > 3) {                          
; 1223 |                                         scia_puts(                     
; 1224 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1225 |                                         break;                         
; 1227 |                                 conf_data.rxdir = pt;                  
; 1228 |                                 sprintf(buff,                          
; 1229 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1230 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1231 |                                 scia_puts(buff);                       
; 1232 |                                 scia_puts(                             
; 1233 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1234 |                                 unsaved = 1;                           
; 1235 |                                 break;                                 
; 1237 |                         case 'B':
;     |  // baudrate                                                           
; 1239 |                                 if (conf_data.rxdir == SDIR_USB        
; 1240 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1241 |                                         scia_puts(                     
; 1242 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1243 |                                         break;                         
; 1246 |                                 for (j = 0; j < 8; j++) {              
; 1247 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1248 |                                         scia_puts(buff);               
; 1249 |                                         if (j < 7) {                   
; 1250 |                                                 scia_puts(", ");       
; 1253 |                                 scia_puts("\r\n");                     
; 1254 |                                 cmdlen = sprintf(buff,                 
; 1255 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1256 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1257 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1258 |                                 scia_puts(cmdbuff);                    
; 1259 |                                 scia_puts("\r\n");                     
; 1260 |                                 if (cmdlen == 0) {                     
; 1261 |                                         scia_puts(                     
; 1262 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1263 |                                         break;                         
; 1265 |                                 pt = atoi(cmdbuff);                    
; 1266 |                                 if (pt > 7) {                          
; 1267 |                                         scia_puts(                     
; 1268 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1269 |                                         break;                         
; 1271 |                                 conf_data.baud = pt;                   
; 1272 |                                 sprintf(buff,                          
; 1273 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1274 |                                                 BAUD[conf_data.baud]); 
; 1275 |                                 scia_puts(buff);                       
; 1276 |                                 scia_puts(                             
; 1277 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1278 |                                 unsaved = 1;                           
; 1279 |                                 break;                                 
; 1281 |                         case 'F':
;     |  // averaging filter size                                              
; 1283 |                                 j = MAF_MAX;                           
; 1284 |                                 do {                                   
; 1285 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1286 |                                                         j);            
; 1287 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1288 |                                         i = atoi(cmdbuff);             
; 1289 |                                         scia_puts(cmdbuff);            
; 1290 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1291 |                                                 break;
;     |          // valid number input                                         
; 1293 |                                         scia_puts(                     
; 1294 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1295 |                                 } while (j);                           
; 1296 |                                 scia_puts("\r\n");                     
; 1298 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1299 |                                                 i);                    
; 1300 |                                 scia_puts(buff);                       
; 1301 |                                 unsaved = 1;                           
; 1303 |                                 // update new value                    
; 1304 |                                 DINT;                                  
; 1305 |                                 conf_data.filter = i;                  
; 1306 |                                 maf_rst();                             
; 1307 |                                 EINT;                                  
; 1308 |                                 break;                                 
; 1310 |                         case 'W':
;     |  // diff window ratio                                                  
; 1312 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1313 |                                                 conf_data.diffwin);    
; 1314 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1315 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1316 |                                 scia_puts(cmdbuff);                    
; 1317 |                                 scia_puts("\r\n");                     
; 1319 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1320 |                                                 conf_data.diffwin);    
; 1321 |                                 scia_puts(buff);                       
; 1322 |                                 unsaved = 1;                           
; 1324 |                                 DINT;                                  
; 1325 |                                 ad7738_setcal();                       
; 1326 |                                 maf_rst();                             
; 1327 |                                 EINT;                                  
; 1328 |                                 break;                                 
; 1330 |                         default:                                       
; 1331 |                                 goto INVALIDCMD;                       
; 1334 |                         break;                                         
; 1336 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1337 |                         // Board calibration
;     |                                  //                                    
; 1338 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1339 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1341 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1342 |                                 goto INVALIDCMD;                       
; 1345 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1346 |                                 goto INVALIDCMD;                       
; 1347 |                                 // invalid calibration method          
; 1350 |                         // channel index                               
; 1351 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1352 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1353 |                                 goto INVALIDCMD;                       
; 1354 |                                 // invalid channel number              
; 1356 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1358 |                         volt[0] = 0;                                   
; 1359 |                         volt[1] = 0;                                   
; 1360 |                         for (j = 3; j < cmdlen; j++) {                 
; 1361 |                                 if (cmdbuff[j] == 'X') {               
; 1362 |                                         j++;                           
; 1363 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1366 |                                 if (cmdbuff[j] == 'Y') {               
; 1367 |                                         j++;                           
; 1368 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1372 |                         if (volt[0] == volt[1]) {                      
; 1373 |                                 goto INVALIDCMD;                       
; 1374 |                                 // invalid parameters                  
; 1377 |                         lcd_clear();                                   
; 1378 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1379 |                         lcd_puts(buff, 20);                            
; 1380 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1381 |                         lcd_puts(buff, 40);                            
; 1382 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1383 |                         lcd_puts(buff, 60);                            
; 1385 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1388 |                         case 'C':
;     |  // board ADC calibration                                              
; 1390 |                                 lcd_puts("Board Calibration...", 0);   
; 1392 |                                 sprintf(buff,                          
; 1393 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1394 |                                                 ch + 1);               
; 1395 |                                 scia_puts(buff);                       
; 1407 |                                 for (j = 0; j < 2; j++) {              
; 1408 |                                         sprintf(buff,                  
; 1409 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1410 |                                                         volt[j]);      
; 1411 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1412 |                                         scia_puts("Reading ... ");     
; 1414 |                                         dsum[j] = 0;                   
; 1415 |                                         sampcnt = CAL_SAMPLES;         
; 1416 |                                         while (sampcnt--) {            
; 1417 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1418 |                                                         delay_us(1);
;     |                  // wait                                               
; 1420 |                                                 cntp = ad7738_getraw();
; 1421 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1424 |                                         scia_puts("done\r\n");         
; 1427 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1428 |                                                 / (dsum[1] - dsum[0]); 
; 1430 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1431 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1432 |                                 scia_puts(buff);                       
; 1433 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1434 |                                 break;                                 
; 1436 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1438 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1439 |                                                 || volt[1] < -10) {    
; 1440 |                                         lcd_clear();                   
; 1441 |                                         update_units();                
; 1442 |                                         goto INVALIDCMD;               
; 1443 |                                         // invalid parameters          
; 1446 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1448 |                                 sprintf(buff,                          
; 1449 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1450 |                                                 ch + 1);               
; 1451 |                                 scia_puts(buff);                       
; 1452 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1453 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1455 |                                 for (j = 0; j < 2; j++) {              
; 1456 |                                         if (volt[j] < 0) {             
; 1457 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1458 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1459 |                                         } else {                       
; 1460 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1461 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1463 |                                         if (dsum[0] <= 0) {            
; 1464 |                                                 dacc[j] = 0;           
; 1465 |                                         } else if (dsum[0] >= 0xffff) {
; 1466 |                                                 dacc[j] = 0xffff;      
; 1467 |                                         } else {                       
; 1468 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1471 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1472 |                                         scia_puts(buff);               
; 1473 |                                         cmdbuff[0] = '\0';             
; 1475 |                                         do {                           
; 1476 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1477 |                                                 latch_dac();           
; 1479 |                                                 do {                   
; 1480 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1481 | 
;     |  sizeof(cmdbuff));                                                     
; 1482 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1483 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1485 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1486 |                                                         break;
;     |                  // done                                               
; 1489 |                                                 i = atoi(cmdbuff + 1); 
; 1490 |                                                 if (i == 0) {          
; 1491 |                                                         i = 1;         
; 1494 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1496 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1497 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1498 |                                                         } else {       
; 1499 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1501 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1503 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1504 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1505 |                                                         } else {       
; 1506 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1509 |                                         } while (i);                   
; 1511 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1512 |                                         scia_puts(buff);               
; 1515 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1517 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1518 |                                 cmdbuff[0] = '\0';                     
; 1520 |                                 do {                                   
; 1521 |                                         mcbsp_xmit(dacc[2], ch);       
; 1522 |                                         latch_dac();                   
; 1524 |                                         do {                           
; 1525 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1526 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1527 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1529 |                                         if ('S' == cmdbuff[0]) {       
; 1530 |                                                 break;
;     |          // done                                                       
; 1533 |                                         i = atoi(cmdbuff + 1);         
; 1534 |                                         if (i == 0) {                  
; 1535 |                                                 i = 1;                 
; 1538 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1540 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1541 |                                                         dacc[2] += i;  
; 1542 |                                                 } else {               
; 1543 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1545 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1547 |                                                 if (dacc[2] >= i) {    
; 1548 |                                                         dacc[2] -= i;  
; 1549 |                                                 } else {               
; 1550 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1553 |                                 } while (i);                           
; 1555 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1556 |                                 scia_puts(buff);                       
; 1558 |                                 // do the calculations                 
; 1559 |                                 if (volt[0] < 0) {                     
; 1560 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1561 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1562 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1563 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1564 |                                 } else {                               
; 1565 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1566 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1567 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1568 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1570 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1572 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1574 |                                 sprintf(buff,                          
; 1575 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1576 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1577 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1578 |                                 scia_puts(buff);                       
; 1580 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1581 |                                 break;                                 
; 1583 |                         default:                                       
; 1584 |                                 goto INVALIDCMD;                       
; 1587 |                         unsaved = 1;                                   
; 1588 |                         lcd_clear();                                   
; 1589 |                         update_units();                                
; 1591 |                         DINT;                                          
; 1592 |                         ad7738_setcal();                               
; 1593 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1594 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1595 |                         EINT;                                          
; 1596 |                         break;                                         
; 1598 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1599 |                         // Channel sensor calibration
;     |                                  //                                    
; 1600 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1601 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1603 |                         if (cmdlen < 2) {                              
; 1604 |                                 goto INVALIDCMD;                       
; 1607 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1608 |                                         && 'S' != cmdbuff[1]) {        
; 1609 |                                 goto INVALIDCMD;                       
; 1610 |                                 // invalid calibration method          
; 1612 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1614 |                         lcd_clear();                                   
; 1615 |                         lcd_puts("Sensor Calibration..", 0);           
; 1617 |                         // === read informations ====                  
; 1618 |                         // channel number                              
; 1619 |                         j = CHS_MAX;                                   
; 1620 |                         do {                                           
; 1621 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1622 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1623 |                                 ch = atoi(cmdbuff);                    
; 1624 |                                 scia_puts(cmdbuff);                    
; 1625 |                                 if (ch > 0 && ch <= j) {               
; 1626 |                                         break;
;     |  // valid input channel number                                         
; 1628 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1629 |                         } while (j);                                   
; 1630 |                         scia_puts("\r\n");                             
; 1631 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1633 |                         // sensor number                               
; 1634 |                         j = SENSPCH;                                   
; 1635 |                         do {                                           
; 1636 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1637 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1638 |                                 ss = atoi(cmdbuff);                    
; 1639 |                                 scia_puts(cmdbuff);                    
; 1640 |                                 if (ss > 0 && ss <= j) {               
; 1641 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1643 |                                         break;                         
; 1645 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1646 |                         } while (j);                                   
; 1647 |                         scia_puts("\r\n");                             
; 1648 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1650 |                         // put on the vfd                              
; 1651 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1652 |                         lcd_puts(buff, 20);                            
; 1654 |                         // sensor serial number                        
; 1655 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1656 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1657 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1658 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1660 |                                 cmdlen = j;                            
; 1661 |                                 cmdbuff[j] = '\0';                     
; 1663 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1664 |                         scia_puts(cmdbuff);                            
; 1665 |                         scia_puts("\r\n");                             
; 1667 |                         // sensor label                                
; 1668 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1669 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1670 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1671 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1673 |                                 cmdlen = j;                            
; 1674 |                                 cmdbuff[j] = '\0';                     
; 1676 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1677 |                         scia_puts(cmdbuff);                            
; 1678 |                         scia_puts("\r\n");                             
; 1680 |                         // unit                                        
; 1681 |                         for (j = 0; j < 7; j++) {                      
; 1682 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1684 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1685 |                         scia_puts(buff);                               
; 1686 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1687 |                                         sizeof(cmdbuff));              
; 1688 |                         tsensor.unit = atoi(cmdbuff);                  
; 1690 |                         switch (tsensor.unit) {                        
; 1691 |                         case 0:                                 // lb  
; 1692 |                         case 1:                                 // kg  
; 1693 |                                 tsensor.unit |= 0x10;                  
; 1694 |                                 break;                                 
; 1695 |                         case 2:                                 // in  
; 1696 |                         case 3:                                 // cm  
; 1697 |                         case 4:                                 // mm  
; 1698 |                                 tsensor.unit |= 0x20;                  
; 1699 |                                 break;                                 
; 1700 |                         case 5:                                 // ps  
; 1701 |                                 tsensor.unit |= 0x30;                  
; 1702 |                                 break;                                 
; 1703 |                         case 6:                                 // nm  
; 1704 |                                 tsensor.unit |= 0x40;                  
; 1705 |                                 break;                                 
; 1706 |                         case 7:                                        
; 1707 |                         case 8:                                        
; 1708 |                         case 15:                                       
; 1709 |                                 tsensor.unit |= 0xf0;                  
; 1710 |                                 break;                                 
; 1711 |                         default:                                       
; 1712 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1713 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1714 |                                 break;                                 
; 1716 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1717 |                         tsensor.ufactor = 1;                    // 1:1 
; 1719 |                         scia_puts(cmdbuff);                            
; 1720 |                         scia_puts("\r\n");                             
; 1722 |                         // range                                       
; 1723 |                         j = 1;                                         
; 1724 |                         do {                                           
; 1725 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1726 |                                 tsensor.range = atof(cmdbuff);         
; 1727 |                                 if (tsensor.range != 0) {              
; 1728 |                                         break;                         
; 1730 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1731 |                         } while (j);                                   
; 1732 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1733 |                         scia_puts(cmdbuff);                            
; 1734 |                         scia_puts("\r\n");                             
; 1736 |                         tsensor.tagid = tagid(ch);                     
; 1738 |                         if (tsensor.tagid == 0) {                      
; 1739 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1740 |                         } else {                                       
; 1741 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1743 |                         scia_puts(buff);                               
; 1745 |                         switch (cmethod)
;     |  // on method code                                                     
; 1748 |                         case 'V':
;     |  // mv/v cal                                                           
; 1750 |                                 lcd_puts("Method: mv/v", 40);          
; 1752 |                                 tsensor.method = MD_RUN_MVV;           
; 1753 |                                 tsensor.points = 1;                    
; 1755 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1756 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1757 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1758 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1759 |                                 if (tsensor.slope[0] == 0) {           
; 1760 |                                         tsensor.slope[0] = 1;          
; 1762 |                                 scia_puts(cmdbuff);                    
; 1763 |                                 scia_puts("\r\n");                     
; 1765 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1766 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1768 |                                 scia_puts("Reading ... ");             
; 1770 |                                 dsum[0] = 0;                           
; 1771 |                                 sampcnt = CAL_SAMPLES;                 
; 1772 |                                 while (sampcnt--) {                    
; 1773 |                                         while (0 == ad7738_rawrdy()) { 
; 1774 |                                                 delay_us(1);
;     |          // wait                                                       
; 1777 |                                         cntp = ad7738_getraw();        
; 1778 |                                         dsum[0] += cntp->adc[ch];      
; 1780 |                                 scia_puts("done\r\n");                 
; 1782 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1783 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1784 |                                 break;                                 
; 1786 |                         case 'M':
;     |  // mass cal                                                           
; 1788 |                                 tsensor.method = MD_RUN_MAS;           
; 1790 |                                 // calibration points for mass cal only
; 1791 |                                 j = PNT_MAX;                           
; 1792 |                                 do {                                   
; 1793 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1794 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1795 |                                         tsensor.points = atoi(cmdbuff);
; 1796 |                                         scia_puts(cmdbuff);            
; 1797 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1798 |                                                 break;                 
; 1800 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1802 |                                 } while (j);                           
; 1803 |                                 scia_puts("\r\n");                     
; 1805 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1806 |                                 lcd_puts(buff, 40);                    
; 1808 |                                 // calculate the default point values  
; 1809 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1810 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1811 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1814 |                                 // read in value with default provided 
; 1815 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1816 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1817 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1818 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1820 |                                         // zero length response set the
;     |  default                                                               
; 1821 |                                         if (cmdlen > 0) {              
; 1822 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1824 |                                         scia_puts(cmdbuff);            
; 1825 |                                         scia_puts("\r\n");             
; 1828 |                                 // TODO: sort the list of points       
; 1830 |                                 // read adc count for each point       
; 1831 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1832 |                                         sprintf(buff,                  
; 1833 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1834 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1835 |                                                         j + 1);        
; 1836 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1837 |                                         scia_puts("Reading ... ");     
; 1839 |                                         dsum[0] = 0;                   
; 1840 |                                         sampcnt = CAL_SAMPLES;         
; 1841 |                                         while (sampcnt--) {            
; 1842 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1843 |                                                         delay_us(1);
;     |                  // wait                                               
; 1846 |                                                 cntp = ad7738_getraw();
; 1847 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1849 |                                         scia_puts("done\r\n");         
; 1850 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1853 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1854 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1855 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1856 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1857 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1858 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1859 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1860 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1861 | 
;     |  * tsensor.adc[j];                                                     
; 1863 |                                 break;                                 
; 1865 |                         case 'S':
;     |  // shunt cal                                                          
; 1867 |                                 lcd_puts("Method: shunt", 40);         
; 1869 |                                 tsensor.method = MD_RUN_SHT;           
; 1870 |                                 tsensor.points = 1;                    
; 1872 |                                 sprintf(buff,                          
; 1873 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1874 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1875 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1876 |                                 scia_puts(cmdbuff);                    
; 1877 |                                 scale = atof(cmdbuff);                 
; 1878 |                                 if (scale == 0) {                      
; 1879 |                                         scale = 1.46;                  
; 1880 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1882 |                                 scia_puts("\r\n");                     
; 1884 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1885 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1887 |                                 scia_puts("Reading ... ");             
; 1889 |                                 for (j = 0; j < 2; j++) {              
; 1890 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1892 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1893 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1894 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1896 |                                                 DINT;                  
; 1897 |                                                 maf_rst();             
; 1898 |                                                 EINT;                  
; 1899 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1902 |                                         dsum[j] = 0;                   
; 1903 |                                         sampcnt = CAL_SAMPLES;         
; 1904 |                                         while (sampcnt--) {            
; 1905 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1906 |                                                         delay_us(1);
;     |                  // wait                                               
; 1909 |                                                 cntp = ad7738_getraw();
; 1910 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1914 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1915 |                                 DINT;                                  
; 1916 |                                 maf_rst();                             
; 1917 |                                 EINT;                                  
; 1919 |                                 scia_puts("done\r\n");                 
; 1921 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1922 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1923 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1924 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1925 |                                 break;                                 
; 1927 |                         default:                                       
; 1928 |                                 lcd_clear();                           
; 1929 |                                 update_units();                        
; 1930 |                                 goto INVALIDCMD;                       
; 1933 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1934 |                         scia_getparam(                                 
; 1935 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1936 |                                         cmdbuff, sizeof(cmdbuff));     
; 1937 |                         scia_puts("Reading ... ");                     
; 1939 |                         for (j = 0; j < 2; j++) {                      
; 1940 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1942 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1943 |                                         for (i = 0; i < 50; i++) {     
; 1944 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1946 |                                         DINT;                          
; 1947 |                                         maf_rst();                     
; 1948 |                                         EINT;                          
; 1949 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1952 |                                 dsum[j] = 0;                           
; 1953 |                                 sampcnt = CAL_SAMPLES;                 
; 1954 |                                 while (sampcnt--) {                    
; 1955 |                                         while (0 == ad7738_rawrdy()) { 
; 1956 |                                                 delay_us(1);
;     |          // wait                                                       
; 1959 |                                         cntp = ad7738_getraw();        
; 1960 |                                         dsum[j] += cntp->adc[ch];      
; 1962 |                                 dsum[j] /= CAL_SAMPLES;                
; 1964 |                                 pt = 0;                                
; 1965 |                                 if (tsensor.points > 2) {              
; 1966 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 1967 |                                                 pt++;                  
; 1970 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 1971 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 1974 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 1975 |                         DINT;                                          
; 1976 |                         maf_rst();                                     
; 1977 |                         EINT;                                          
; 1979 |                         scia_puts("done\r\n");                         
; 1981 |                         tsensor.shunt = volt[1] - volt[0];             
; 1983 |                         // setup some other members of the structure   
; 1984 |                         tsensor.tare = 0;                              
; 1985 |                         tsensor.dacgain = 1;                           
; 1986 |                         tsensor.dacoff = 0;                            
; 1987 |                         tsensor.ch = ch;                               
; 1989 |                         DINT;                                          
; 1990 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 1991 |                                         sizeof(sconf_t));              
; 1993 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 1995 |                         ad7738_setcal();                               
; 1996 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1997 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1998 |                         EINT;                                          
; 2000 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2001 |                                         ch + 1, ss + 1);               
; 2002 |                         scia_puts(buff);                               
; 2003 |                         print_sensor(ss);                              
; 2005 |                         unsaved = 1;                                   
; 2006 |                         lcd_clear();                                   
; 2007 |                         update_units();                                
; 2008 |                         break;                                         
; 2010 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2011 |                         // sensor config commands
;     |                                          //                            
; 2012 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2013 |                 case 'S':                               // sensor      
; 2015 |                         if (cmdlen < 2) {                              
; 2016 |                                 goto INVALIDCMD;                       
; 2019 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2020 |                                         && 'D' != cmdbuff[1]) {        
; 2021 |                                 goto INVALIDCMD;                       
; 2022 |                                 // invalid command                     
; 2024 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2044 |                         // sensor number                               
; 2045 |                         j = SENSPCH;                                   
; 2046 |                         do {                                           
; 2047 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2048 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2049 |                                 ss = atoi(cmdbuff);                    
; 2050 |                                 scia_puts(cmdbuff);                    
; 2051 |                                 if (ss > 0 && ss <= j) {               
; 2052 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2054 |                                         break;                         
; 2056 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2057 |                         } while (j);                                   
; 2058 |                         scia_puts("\r\n");                             
; 2059 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2061 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2064 |                         case 'N':
;     |  // change sensor label                                                
; 2066 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2067 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2068 |                                                 ss + 1, j);            
; 2069 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2070 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2072 |                                         cmdlen = j;                    
; 2073 |                                         cmdbuff[j] = '\0';             
; 2075 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2076 |                                                 cmdlen + 1);           
; 2077 |                                 scia_puts(cmdbuff);                    
; 2078 |                                 scia_puts("\r\n");                     
; 2079 |                                 unsaved = 1;                           
; 2081 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2082 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2083 |                                 scia_puts(buff);                       
; 2084 |                                 break;                                 
; 2086 |                         case 'U':
;     |  // change the output unit                                             
; 2088 |                                 scale = 0;                             
; 2090 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2091 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2093 |                                         do {                           
; 2094 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2095 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2096 |                                                 j = atoi(cmdbuff);     
; 2097 |                                                 scia_puts(cmdbuff);    
; 2098 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2099 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2101 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2102 |                                         scia_puts("\r\n");             
; 2104 |                                         switch (j) {                   
; 2105 |                                         case 0:                        
; 2106 |                                                 scale = 1;             
; 2107 |                                                 j |= 0x10;             
; 2108 |                                                 break;                 
; 2109 |                                         case 1:                        
; 2110 |                                                 scale = LB_TO_KG;      
; 2111 |                                                 j |= 0x10;             
; 2112 |                                                 break;                 
; 2113 |                                         case 7:                        
; 2114 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2115 |                                                 j |= 0xf0;             
; 2116 |                                                 break;                 
; 2118 |                                         break;                         
; 2120 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2122 |                                         do {                           
; 2123 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2124 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2125 |                                                 j = atoi(cmdbuff);     
; 2126 |                                                 scia_puts(cmdbuff);    
; 2127 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2128 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2130 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2131 |                                         scia_puts("\r\n");             
; 2133 |                                         switch (j) {                   
; 2134 |                                         case 0:                        
; 2135 |                                                 scale = 1.0 / LB_TO_KG;
; 2136 |                                                 j |= 0x10;             
; 2137 |                                                 break;                 
; 2138 |                                         case 1:                        
; 2139 |                                                 scale = 1;             
; 2140 |                                                 j |= 0x10;             
; 2141 |                                                 break;                 
; 2142 |                                         case 7:                        
; 2143 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2144 |                                                 j |= 0xf0;             
; 2145 |                                                 break;                 
; 2147 |                                         break;                         
; 2149 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2151 |                                         do {                           
; 2152 |                                                 scia_getparam(         
; 2153 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2154 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2155 |                                                 j = atoi(cmdbuff);     
; 2156 |                                                 scia_puts(cmdbuff);    
; 2157 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2158 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2160 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2161 |                                         scia_puts("\r\n");             
; 2163 |                                         switch (j) {                   
; 2164 |                                         case 2:                        
; 2165 |                                                 scale = 1;             
; 2166 |                                                 j |= 0x20;             
; 2167 |                                                 break;                 
; 2168 |                                         case 3:                        
; 2169 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2170 |                                                 j |= 0x20;             
; 2171 |                                                 break;                 
; 2172 |                                         case 4:                        
; 2173 |                                                 scale = IN_TO_MM;      
; 2174 |                                                 j |= 0x20;             
; 2175 |                                                 break;                 
; 2176 |                                         case 7:                        
; 2177 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2178 |                                                 j |= 0xf0;             
; 2179 |                                                 break;                 
; 2181 |                                         break;                         
; 2183 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2185 |                                         do {                           
; 2186 |                                                 scia_getparam(         
; 2187 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2188 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2189 |                                                 j = atoi(cmdbuff);     
; 2190 |                                                 scia_puts(cmdbuff);    
; 2191 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2192 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2194 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2195 |                                         scia_puts("\r\n");             
; 2197 |                                         switch (j) {                   
; 2198 |                                         case 2:                        
; 2199 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2200 |                                                 j |= 0x20;             
; 2201 |                                                 break;                 
; 2202 |                                         case 3:                        
; 2203 |                                                 scale = 1;             
; 2204 |                                                 j |= 0x20;             
; 2205 |                                                 break;                 
; 2206 |                                         case 4:                        
; 2207 |                                                 scale = 10;            
; 2208 |                                                 j |= 0x20;             
; 2209 |                                                 break;                 
; 2210 |                                         case 7:                        
; 2211 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2212 |                                                 j |= 0xf0;             
; 2213 |                                                 break;                 
; 2215 |                                         break;                         
; 2217 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2219 |                                         do {                           
; 2220 |                                                 scia_getparam(         
; 2221 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2222 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2223 |                                                 j = atoi(cmdbuff);     
; 2224 |                                                 scia_puts(cmdbuff);    
; 2225 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2226 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2228 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2229 |                                         scia_puts("\r\n");             
; 2231 |                                         switch (j) {                   
; 2232 |                                         case 2:                        
; 2233 |                                                 scale = 1.0 / IN_TO_MM;
; 2234 |                                                 j |= 0x20;             
; 2235 |                                                 break;                 
; 2236 |                                         case 3:                        
; 2237 |                                                 scale = 0.1;           
; 2238 |                                                 j |= 0x20;             
; 2239 |                                                 break;                 
; 2240 |                                         case 4:                        
; 2241 |                                                 scale = 1;             
; 2242 |                                                 j |= 0x20;             
; 2243 |                                                 break;                 
; 2244 |                                         case 7:                        
; 2245 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2246 |                                                 j |= 0xf0;             
; 2247 |                                                 break;                 
; 2249 |                                         break;                         
; 2251 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2253 |                                         do {                           
; 2254 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2255 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2256 |                                                 j = atoi(cmdbuff);     
; 2257 |                                                 scia_puts(cmdbuff);    
; 2258 |                                                 if (j != 5 && j != 7) {
; 2259 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2261 |                                         } while (j != 5 && j != 7);    
; 2262 |                                         scia_puts("\r\n");             
; 2264 |                                         switch (j) {                   
; 2265 |                                         case 5:                        
; 2266 |                                                 scale = 1;             
; 2267 |                                                 j |= 0x30;             
; 2268 |                                                 break;                 
; 2269 |                                         case 7:                        
; 2270 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2271 |                                                 j |= 0xf0;             
; 2272 |                                                 break;                 
; 2274 |                                         break;                         
; 2276 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2278 |                                         do {                           
; 2279 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2280 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2281 |                                                 j = atoi(cmdbuff);     
; 2282 |                                                 scia_puts(cmdbuff);    
; 2283 |                                                 if (j != 6 && j != 7) {
; 2284 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2286 |                                         } while (j != 6 && j != 7);    
; 2287 |                                         scia_puts("\r\n");             
; 2289 |                                         switch (j) {                   
; 2290 |                                         case 6:                        
; 2291 |                                                 scale = 1;             
; 2292 |                                                 j |= 0x40;             
; 2293 |                                                 break;                 
; 2294 |                                         case 7:                        
; 2295 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2296 |                                                 j |= 0xf0;             
; 2297 |                                                 break;                 
; 2299 |                                         break;                         
; 2301 |                                 default:                               
; 2302 |                                         break;                         
; 2305 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2306 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2307 |                                         break;                         
; 2310 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2311 |                                         scia_puts(                     
; 2312 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2313 |                                         break;                         
; 2316 |                                 conf_data.sensor[ss].ounit = j;        
; 2317 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2318 |                                 unsaved = 1;                           
; 2320 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2321 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2322 |                                 scia_puts(buff);                       
; 2324 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2325 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2326 |                                                 update_units();        
; 2327 |                                                 DINT;                  
; 2328 |                                                 ad7738_setcal();       
; 2329 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2330 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2331 |                                                 EINT;                  
; 2334 |                                 break;                                 
; 2336 |                         case 'B':
;     |  // change percent base                                                
; 2338 |                                 // base                                
; 2339 |                                 j = 1;                                 
; 2340 |                                 do {                                   
; 2341 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2342 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2343 |                                         scale = atof(cmdbuff);         
; 2344 |                                         scia_puts(cmdbuff);            
; 2345 |                                         if (scale != 0) {              
; 2346 |                                                 break;                 
; 2348 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2349 |                                 } while (j);                           
; 2350 |                                 scia_puts("\r\n");                     
; 2351 |                                 conf_data.sensor[ss].base = scale;     
; 2352 |                                 unsaved = 1;                           
; 2354 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2355 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2356 |                                 scia_puts(buff);                       
; 2358 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2359 |                                         // output unit is percent      
; 2360 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2361 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2363 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2364 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2365 |                                                         // changed is f
;     | or the current sensor                                                  
; 2366 |                                                         DINT;          
; 2367 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2368 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2369 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2370 |                                                         EINT;          
; 2374 |                                 break;                                 
; 2376 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2378 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2379 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2380 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2381 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2382 |                                 scia_puts(cmdbuff);                    
; 2383 |                                 scia_puts("\r\n");                     
; 2385 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2386 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2387 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2388 |                                 scia_puts(cmdbuff);                    
; 2389 |                                 scia_puts("\r\n");                     
; 2390 |                                 unsaved = 1;                           
; 2392 |                                 sprintf(buff,                          
; 2393 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2394 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2395 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2396 |                                 scia_puts(buff);                       
; 2398 |                                 DINT;                                  
; 2399 |                                 ad7738_setcal();                       
; 2400 |                                 EINT;                                  
; 2401 |                                 break;                                 
; 2403 |                         default:                                       
; 2404 |                                 goto INVALIDCMD;                       
; 2407 |                         break;                                         
; 2409 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2410 |                         // Encoder config commands
;     |                                  //                                    
; 2411 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2412 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2414 |                         if (cmdlen < 2) {                              
; 2415 |                                 goto INVALIDCMD;                       
; 2418 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2421 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2423 |                                 j = MAF_MAX;                           
; 2424 |                                 do {                                   
; 2425 |                                         sprintf(buff,                  
; 2426 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2427 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2428 |                                         i = atoi(cmdbuff);             
; 2429 |                                         scia_puts(cmdbuff);            
; 2430 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2431 |                                                 break;
;     |          // valid number input                                         
; 2433 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2434 |                                 } while (j);                           
; 2435 |                                 scia_puts("\r\n");                     
; 2437 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2438 |                                                 i);                    
; 2439 |                                 scia_puts(buff);                       
; 2440 |                                 unsaved = 1;                           
; 2442 |                                 // update new value                    
; 2443 |                                 DINT;                                  
; 2444 |                                 conf_data.velfilter = i;               
; 2445 |                                 ad7738_setcal();                       
; 2446 |                                 velf_rst();                            
; 2447 |                                 EINT;                                  
; 2448 |                                 break;                                 
; 2450 |                         case 'P':
;     |  // count per inch                                                     
; 2452 |                                 // channel number                      
; 2453 |                                 j = ENC_MAX;                           
; 2454 |                                 do {                                   
; 2455 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2456 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2457 |                                         ss = atoi(cmdbuff);            
; 2458 |                                         scia_puts(cmdbuff);            
; 2459 |                                         if (ss > 0 && ss <= j) {       
; 2460 |                                                 break;
;     |          // valid input line number                                    
; 2462 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2463 |                                 } while (j);                           
; 2464 |                                 scia_puts("\r\n");                     
; 2465 |                                 ss--;
;     |  // line number, convert to index                                      
; 2467 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2468 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2469 |                                 templg = atol(cmdbuff);                
; 2470 |                                 scia_puts(cmdbuff);                    
; 2471 |                                 scia_puts("\r\n");                     
; 2472 |                                 if (templg == 0) {                     
; 2473 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2474 |                                         break;                         
; 2476 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2477 |                                                 ss + 1, templg);       
; 2478 |                                 scia_puts(buff);                       
; 2479 |                                 unsaved = 1;                           
; 2481 |                                 // update new value                    
; 2482 |                                 DINT;                                  
; 2483 |                                 conf_data.cntperin[ss] = templg;       
; 2484 |                                 ad7738_setcal();                       
; 2485 |                                 velf_rst();                            
; 2486 |                                 EINT;                                  
; 2487 |                                 break;                                 
; 2489 |                         break;                                         
; 2491 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2492 |                         // Display command
;     |                                  //                                    
; 2493 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2494 |                 case 'D':                                              
; 2496 |                         if (cmdlen < 2) {                              
; 2497 |                                 goto INVALIDCMD;                       
; 2500 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2502 |                         case 'S':
;     |  // selection                                                          
; 2504 |                                 // line number                         
; 2505 |                                 j = VFD_MAX;                           
; 2506 |                                 do {                                   
; 2507 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2508 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2509 |                                         ss = atoi(cmdbuff);            
; 2510 |                                         scia_puts(cmdbuff);            
; 2511 |                                         if (ss > 0 && ss <= j) {       
; 2512 |                                                 break;
;     |          // valid input line number                                    
; 2514 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2515 |                                 } while (j);                           
; 2516 |                                 scia_puts("\r\n");                     
; 2517 |                                 ss--;
;     |  // line number, convert to index                                      
; 2519 |                                 // what                                
; 2520 |                                 for (j = 0; j < 7; j++) {              
; 2521 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2522 |                                         scia_puts(buff);               
; 2523 |                                         if (j < 6) {                   
; 2524 |                                                 scia_puts(", ");       
; 2527 |                                 scia_puts("\r\n");                     
; 2528 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2529 |                                                 ss + 1);               
; 2530 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2531 |                                 pt = atoi(cmdbuff);                    
; 2532 |                                 if (pt >= 7) {                         
; 2533 |                                         pt = 0;                        
; 2534 |                                         scia_puts(                     
; 2535 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2537 |                                 scia_puts(cmdbuff);                    
; 2538 |                                 scia_puts("\r\n");                     
; 2539 |                                 conf_data.vfd[ss].what = pt;           
; 2541 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2543 |                                 case VFD_LOAD:                         
; 2544 |                                 case VFD_PEAK:                         
; 2545 |                                 case VFD_VALL:                         
; 2547 |                                         j = CHS_MAX;                   
; 2548 |                                         goto VFD_CHANNEL;              
; 2550 |                                 case VFD_POSI:                         
; 2551 |                                 case VFD_VELO:                         
; 2553 |                                         j = ENC_MAX;                   
; 2555 |                                         VFD_CHANNEL:                   
; 2556 |                                         // channel number              
; 2557 |                                         do {                           
; 2558 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2559 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2560 |                                                 ch = atoi(cmdbuff);    
; 2561 |                                                 scia_puts(cmdbuff);    
; 2562 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2563 |                                                         break;
;     |          // valid input channel number                                 
; 2565 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2566 |                                         } while (j);                   
; 2567 |                                         scia_puts("\r\n");             
; 2568 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2569 |                                         conf_data.vfd[ss].ch = ch;     
; 2571 |                                         // digits after decimal point  
; 2572 |                                         j = 1;                         
; 2573 |                                         do {                           
; 2574 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2575 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2576 |                                                 i = atoi(cmdbuff);     
; 2577 |                                                 if (i >= 0 && i <= 5) {
; 2578 |                                                         break;         
; 2580 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2581 |                                         } while (j);                   
; 2582 |                                         scia_puts(cmdbuff);            
; 2583 |                                         scia_puts("\r\n");             
; 2584 |                                         conf_data.vfd[ss].adec = i;    
; 2586 |                                         sprintf(buff,                  
; 2587 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2588 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2589 |                                         scia_puts(buff);               
; 2590 |                                         break;                         
; 2592 |                                 case VFD_LIMIT:                        
; 2593 |                                         // channel number              
; 2594 |                                         j = CHS_MAX;                   
; 2595 |                                         do {                           
; 2596 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2597 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2598 |                                                 ch = atoi(cmdbuff);    
; 2599 |                                                 scia_puts(cmdbuff);    
; 2600 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2601 |                                                         break;
;     |          // valid input channel number                                 
; 2603 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2604 |                                         } while (j);                   
; 2605 |                                         scia_puts("\r\n");             
; 2606 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2607 |                                         conf_data.vfd[ss].ch = ch;     
; 2609 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2610 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2611 |                                         scia_puts(buff);               
; 2612 |                                         break;                         
; 2613 |                                 case VFD_TEMP:                         
; 2614 |                                         // no more info                
; 2615 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2616 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2617 |                                         scia_puts(buff);               
; 2618 |                                         break;                         
; 2621 |                                 lcd_clear();                           
; 2622 |                                 update_units();                        
; 2623 |                                 unsaved = 1;                           
; 2624 |                                 break;                                 
; 2626 |                         default:                                       
; 2627 |                                 goto INVALIDCMD;                       
; 2630 |                         break;                                         
; 2632 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2633 |                         // DAC out command
;     |                                  //                                    
; 2634 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2635 |                 case 'O':                                              
; 2637 |                         if (cmdlen < 2) {                              
; 2638 |                                 goto INVALIDCMD;                       
; 2641 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2643 |                         case 'S':
;     |  // selection                                                          
; 2645 |                                 // DAC channel number                  
; 2646 |                                 j = DAC_MAX;                           
; 2647 |                                 do {                                   
; 2648 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2649 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2650 |                                         ss = atoi(cmdbuff);            
; 2651 |                                         scia_puts(cmdbuff);            
; 2652 |                                         if (ss > 0 && ss <= j) {       
; 2653 |                                                 break;
;     |          // valid input channel number                                 
; 2655 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2656 |                                 } while (j);                           
; 2657 |                                 scia_puts("\r\n");                     
; 2658 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2660 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2661 |                                 for (j = 0; j < 5; j++) {              
; 2662 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2663 |                                         scia_puts(buff);               
; 2664 |                                         scia_puts(", ");               
; 2666 |                                 j = 7;                                 
; 2667 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2668 |                                 scia_puts(buff);                       
; 2669 |                                 scia_puts("\r\n");                     
; 2670 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2671 |                                                 ss + 1);               
; 2672 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2673 |                                 pt = atoi(cmdbuff);                    
; 2674 |                                 if (pt >= 5 && pt != 7) {              
; 2675 |                                         pt = 0;                        
; 2676 |                                         scia_puts(                     
; 2677 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2679 |                                 scia_puts(cmdbuff);                    
; 2680 |                                 scia_puts("\r\n");                     
; 2681 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2683 |                                 if ( VFD_VOLT != pt) {                 
; 2685 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2686 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2687 |                                                 j = CHS_MAX;           
; 2688 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2689 |                                                 j = ENC_MAX;           
; 2692 |                                         // linked load/... channel numb
;     | er                                                                     
; 2693 |                                         do {                           
; 2694 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2695 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2696 |                                                 ch = atoi(cmdbuff);    
; 2697 |                                                 scia_puts(cmdbuff);    
; 2698 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2699 |                                                         break;
;     |          // valid input channel number                                 
; 2701 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2702 |                                         } while (j);                   
; 2703 |                                         scia_puts("\r\n");             
; 2704 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2705 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2707 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2708 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2709 |                                                 // gain                
; 2710 |                                                 if ( VFD_POSI == pt) { 
; 2711 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2712 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2713 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2715 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2716 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2717 |                                                 scia_puts(cmdbuff);    
; 2718 |                                                 scia_puts("\r\n");     
; 2720 |                                                 // offset              
; 2721 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2722 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2723 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2724 |                                                 scia_puts(cmdbuff);    
; 2725 |                                                 scia_puts("\r\n");     
; 2729 |                                 unsaved = 1;                           
; 2731 |                                 // print result                        
; 2732 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2733 |                                                 LPV[pt]);              
; 2734 |                                 scia_puts(buff);                       
; 2736 |                                 if ( VFD_VOLT == pt) {                 
; 2737 |                                         scia_puts("\r\n");             
; 2738 |                                 } else {                               
; 2739 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2740 |                                         scia_puts(buff);               
; 2742 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2743 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2744 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2745 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2746 |                                                 scia_puts(buff);       
; 2750 |                                 DINT;                                  
; 2751 |                                 ad7738_setcal();                       
; 2752 |                                 EINT;                                  
; 2753 |                                 break;                                 
; 2755 |                         case 'D':
;     |  // direct voltage output                                              
; 2757 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2758 |                                                 || 'V' != cmdbuff[3]) {
; 2759 |                                         goto INVALIDCMD;               
; 2762 |                                 // channel index                       
; 2763 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2764 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2765 |                                         goto INVALIDCMD;               
; 2766 |                                         // invalid channel number      
; 2768 |                                 ss--;
;     |  // change to zero based index                                         
; 2770 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2771 |                                         goto INVALIDCMD;               
; 2772 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2775 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2776 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2777 |                                         goto INVALIDCMD;               
; 2778 |                                         // invalid voltage             
; 2781 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2782 |                                 if (volt[0] < 0) {                     
; 2783 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2784 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2785 |                                 } else {                               
; 2786 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2787 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2790 |                                 if (dsum[0] <= 0) {                    
; 2791 |                                         dacc[0] = 0;                   
; 2792 |                                 } else if (dsum[0] >= 0xffff) {        
; 2793 |                                         dacc[0] = 0xffff;              
; 2794 |                                 } else {                               
; 2795 |                                         dacc[0] = (Uint16) dsum[0];    
; 2798 |                                 mcbsp_xmit(dacc[0], ss);               
; 2799 |                                 latch_dac();                           
; 2801 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2802 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2803 |                                 scia_puts(buff);                       
; 2805 |                                 break;                                 
; 2807 |                         default:                                       
; 2808 |                                 goto INVALIDCMD;                       
; 2811 |                         break;                                         
; 2813 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2814 |                         // LIMIT command
;     |                                          //                            
; 2815 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2816 |                 case 'L':                                              
; 2818 |                         if (cmdlen < 2) {                              
; 2819 |                                 goto INVALIDCMD;                       
; 2822 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2824 |                         case 'S':
;     |  // selection                                                          
; 2826 |                                 // LIMIT channel number                
; 2827 |                                 j = LIM_MAX;                           
; 2828 |                                 do {                                   
; 2829 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2830 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2831 |                                         ss = atoi(cmdbuff);            
; 2832 |                                         scia_puts(cmdbuff);            
; 2833 |                                         if (ss > 0 && ss <= j) {       
; 2834 |                                                 break;
;     |          // valid input channel number                                 
; 2836 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2837 |                                 } while (j);                           
; 2838 |                                 scia_puts("\r\n");                     
; 2839 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2841 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2842 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2843 |                                 scia_puts(cmdbuff);                    
; 2844 |                                 scia_puts("\r\n");                     
; 2846 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2848 |                                         // set on flag                 
; 2849 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2851 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2852 |                                         for (j = 0; j < 5; j++) {      
; 2853 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2854 |                                                 scia_puts(buff);       
; 2855 |                                                 if (j < 4) {           
; 2856 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2859 |                                         scia_puts("\r\n");             
; 2860 |                                         sprintf(buff,                  
; 2861 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2862 |                                                         ss + 1);       
; 2863 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2864 |                                         pt = atoi(cmdbuff);            
; 2865 |                                         if (pt >= 5) {                 
; 2866 |                                                 pt = 0;                
; 2867 |                                                 scia_puts(             
; 2868 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2870 |                                         scia_puts(cmdbuff);            
; 2871 |                                         scia_puts("\r\n");             
; 2872 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2874 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2875 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2876 |                                                 j = CHS_MAX;           
; 2877 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2878 |                                                 j = ENC_MAX;           
; 2881 |                                         // linked load/... channel numb
;     | er                                                                     
; 2882 |                                         do {                           
; 2883 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2884 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2885 |                                                 ch = atoi(cmdbuff);    
; 2886 |                                                 scia_puts(cmdbuff);    
; 2887 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2888 |                                                         break;
;     |          // valid input channel number                                 
; 2890 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2891 |                                         } while (j);                   
; 2892 |                                         scia_puts("\r\n");             
; 2893 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2894 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2896 |                                         // NO/NC                       
; 2897 |                                         scia_getparam(                 
; 2898 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2899 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2900 |                                         scia_puts(cmdbuff);            
; 2901 |                                         scia_puts("\r\n");             
; 2903 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2905 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2906 |                                         } else {                       
; 2907 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2910 |                                         scia_getparam(                 
; 2911 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2912 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2913 |                                         scia_puts(cmdbuff);            
; 2914 |                                         scia_puts("\r\n");             
; 2916 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2918 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2919 |                                         } else {                       
; 2920 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2923 |                                         scia_getparam(                 
; 2924 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2925 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2926 |                                         scia_puts(cmdbuff);            
; 2927 |                                         scia_puts("\r\n");             
; 2929 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2931 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2932 |                                         } else {                       
; 2933 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2936 |                                         // unit (output)               
; 2937 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2938 |                                         case VFD_LOAD:                 
; 2939 |                                         case VFD_PEAK:                 
; 2940 |                                         case VFD_VALL:                 
; 2941 |                                                 ccp =                  
; 2942 |                                                                 UNITS[0
;     | x0f                                                                    
; 2943 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2944 |                                                 break;                 
; 2945 |                                         case VFD_POSI:                 
; 2946 |                                                 ccp = POS_U;           
; 2947 |                                                 break;                 
; 2948 |                                         case VFD_VELO:                 
; 2949 |                                                 ccp = VEL_U;           
; 2950 |                                                 break;                 
; 2953 |                                         // set value                   
; 2954 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2955 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2956 |                                         scia_puts(cmdbuff);            
; 2957 |                                         scia_puts("\r\n");             
; 2959 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 2960 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2961 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2963 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 2964 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2965 |                                         scia_puts(cmdbuff);            
; 2966 |                                         scia_puts("\r\n");             
; 2968 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 2969 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2970 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2971 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 2973 |                                         // print result                
; 2974 |                                         sprintf(buff,                  
; 2975 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 2976 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 2977 |                                         scia_puts(buff);               
; 2979 |                                         sprintf(buff,                  
; 2980 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 2981 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 2982 | 
;     |  "NC" : "NO",                                                          
; 2983 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 2984 | 
;     |  "ON" : "OFF",                                                         
; 2985 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 2986 |                                         scia_puts(buff);               
; 2987 |                                         sprintf(buff,                  
; 2988 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 2989 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 2990 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 2991 |                                         scia_puts(buff);               
; 2993 |                                 } else
;     |  // turn off                                                           
; 2995 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 2996 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 2999 |                                 unsaved = 1;                           
; 3001 |                                 DINT;                                  
; 3002 |                                 ad7738_setcal();                       
; 3003 |                                 EINT;                                  
; 3004 |                                 break;                                 
; 3006 |                         default:                                       
; 3007 |                                 goto INVALIDCMD;                       
; 3010 |                         break;                                         
; 3012 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3013 |                         // reset commands
;     |                                          //                            
; 3014 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3015 |                 case 'R':                                              
; 3017 |                         if (cmdlen < 2) {                              
; 3018 |                                 goto INVALIDCMD;                       
; 3021 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3023 |                         case 'T':
;     |  // tare                                                               
; 3025 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3026 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3027 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3028 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3029 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3030 |                                 } else {                               
; 3031 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3032 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3033 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3035 |                                 break;                                 
; 3037 |                         case 'P':
;     |  // peak                                                               
; 3039 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3040 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3041 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3042 |                                 } else {                               
; 3043 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3045 |                                 break;                                 
; 3047 |                         case 'V':
;     |  // valley                                                             
; 3049 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3050 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3051 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3052 |                                 } else {                               
; 3053 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3055 |                                 break;                                 
; 3057 |                         case 'S':
;     |  // shunt switch                                                       
; 3059 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3060 |                                         shunt_switch(1);               
; 3061 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3062 |                                 } else {                               
; 3063 |                                         shunt_switch(0);               
; 3064 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3066 |                                 break;                                 
; 3068 |                         case 'L':
;     |  // limit                                                              
; 3070 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3071 |                                 ch--;                                  
; 3073 |                                 ad7738_resetlimit(ch);                 
; 3074 |                                 break;                                 
; 3076 |                         case 'I':
;     |  // posItion                                                           
; 3078 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3079 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3080 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3081 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3082 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3083 |                                 } else {                               
; 3084 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3085 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3086 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3088 |                                 break;                                 
; 3090 |                         default:                                       
; 3091 |                                 goto INVALIDCMD;                       
; 3093 |                         break;                                         
; 3095 | #ifdef SDHCCARD                                                        
; 3097 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3098 |                         // Stream to SD Card
;     |                                  //                                    
; 3099 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3100 |                         case 'W':// Write control                      
; 3102 |                         if( cmdlen < 2 )                               
; 3104 |                                 goto INVALIDCMD;                       
; 3107 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3109 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3111 |                                 if( cmdlen < 3 )                       
; 3113 |                                         goto INVALIDCMD;               
; 3116 |                                 if( sd_write )                         
; 3118 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3119 |                                         break;                         
; 3122 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3123 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3125 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3127 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3128 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3130 |                                 if( !res )                             
; 3132 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3133 |                                         if( res || cmdlen != temp16 )  
; 3135 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3136 |                                                 scia_puts( buff );     
; 3137 |                                                 f_close( fp );         
; 3138 |                                                 fp = NULL;             
; 3139 |                                                 break;                 
; 3156 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3158 |                                         if( res )                      
; 3160 |                                                 f_close( fp );         
; 3161 |                                                 fp = NULL;             
; 3162 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3163 |                                                 break;                 
; 3166 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3167 |                                         scia_puts( buff );             
; 3169 |                                         prod_init();                   
; 3170 |                                         sd_write = 1;                  
; 3171 |                                         sd_cnt = 0;                    
; 3172 |                                         break;                         
; 3175 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3176 |                                 scia_puts( buff );                     
; 3177 |                                 break;                                 
; 3179 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3181 |                                 if( sd_write )                         
; 3183 |                                         sd_close = 1;                  
; 3184 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3185 |                                         break;                         
; 3187 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3188 |                                 break;                                 
; 3190 |                                 case 'L':
;     |          // list files                                                 
; 3192 |                                 if( sd_write )                         
; 3194 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3195 |                                         break;                         
; 3198 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3199 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3201 |                                 res = f_opendir(&dir, "0:");           
; 3202 |                                 if (res)                               
; 3204 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3205 |                                         scia_puts( buff );             
; 3206 |                                         break;                         
; 3209 |                                 p1 = s1 = s2 = 0;                      
; 3210 |                                 for(;;)                                
; 3212 |                                         res = f_readdir(&dir, &Finfo); 
; 3213 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3214 |                                         break;                         
; 3215 |                                         if (Finfo.fattrib & AM_DIR)    
; 3217 |                                                 s2++;                  
; 3219 |                                         else                           
; 3221 |                                                 s1++;                  
; 3222 |                                                 p1 += Finfo.fsize;     
; 3224 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3225 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3226 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3227 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3228 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3229 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3230 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3231 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3232 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3233 |                                         scia_puts( buff );             
; 3235 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3236 |                                 scia_puts( buff );                     
; 3237 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3239 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3240 |                                         scia_puts( buff );             
; 3242 |                                 break;                                 
; 3244 |                                 case 'G':
;     |          // get a file                                                 
; 3246 |                                 if( sd_write )                         
; 3248 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3249 |                                         break;                         
; 3252 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3253 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3255 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3257 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3258 |                                 res = f_open( fp, buff, FA_READ );     
; 3259 |                                 if (res)                               
; 3261 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3262 |                                         scia_puts( buff );             
; 3263 |                                         break;                         
; 3266 |                                 do                                     
; 3268 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3269 |                                         scia_send( buff, temp16 );     
; 3270 |                                 }while( !res && temp16 == 512 );       
; 3272 |                                 f_close( fp );                         
; 3273 |                                 fp = NULL;                             
; 3274 |                                 break;                                 
; 3276 |                                 case 'R':
;     |          // remove a file                                              
; 3278 |                                 if( sd_write )                         
; 3280 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3281 |                                         break;                         
; 3284 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3285 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3287 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3289 |                                 res = f_unlink( buff );                
; 3291 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3292 |                                 scia_puts( buff );                     
; 3293 |                                 break;                                 
; 3295 |                                 default:                               
; 3296 |                                 goto INVALIDCMD;                       
; 3299 |                         break;                                         
; 3300 | #endif                                                                 
; 3302 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3303 |                         // Flash memory access commands
;     |                                    //                                  
; 3304 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3305 |                 case 'F':                                       // flas
;     | h access                                                               
; 3307 |                         if (cmdlen < 2) {                              
; 3308 |                                 goto INVALIDCMD;                       
; 3311 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3313 |                         case 'W':
;     |  // write flash                                                        
; 3315 |                                 if (unsaved) {                         
; 3316 |                                         // flash writing               
; 3317 |                                         lcd_clear();                   
; 3318 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3319 |                                         scia_puts("Flash writing..."); 
; 3321 |                                         for (i = 0; i < 50; i++) {     
; 3322 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3325 |                                         DINT;                          
; 3326 |                                         flash_ret = conf_write();      
; 3327 |                                         EINT;                          
; 3329 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3330 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3331 |                                                 unsaved = 0;           
; 3332 |                                         } else {                       
; 3333 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3335 |                                         lcd_clear();                   
; 3336 |                                         update_units();                
; 3337 |                                         break;                         
; 3339 |                                 scia_puts(                             
; 3340 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3341 |                                 break;                                 
; 3343 |                         case 'R':
;     |  // read flash                                                         
; 3345 |                                 // flash reading                       
; 3346 |                                 conf_read();                           
; 3348 |                                 DINT;                                  
; 3349 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3350 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3351 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3352 |                                 EINT;                                  
; 3354 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3355 |                                 unsaved = 0;                           
; 3357 |                                 update_units();                        
; 3359 |                                 break;                                 
; 3361 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3363 |                                 conf_default();                        
; 3365 |                                 // flash writing                       
; 3366 |                                 lcd_clear();                           
; 3367 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3368 |                                 scia_puts("Flash write...");           
; 3370 |                                 for (i = 0; i < 50; i++) {             
; 3371 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3374 |                                 DINT;                                  
; 3375 |                                 flash_ret = conf_write();              
; 3376 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3377 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3378 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3379 |                                 EINT;                                  
; 3381 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3382 |                                         scia_puts(                     
; 3383 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3384 |                                         unsaved = 0;                   
; 3385 |                                 } else {                               
; 3386 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3388 |                                 lcd_clear();                           
; 3389 |                                 update_units();                        
; 3390 |                                 break;                                 
; 3392 |                         default:                                       
; 3393 |                                 goto INVALIDCMD;                       
; 3396 |                         break;                                         
; 3398 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3399 |                         // Help manu
;     |                                  //                                    
; 3400 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3401 |                 case 'H':                               // help menu   
; 3403 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3405 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3406 |                         scia_puts(                                     
; 3407 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3408 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3409 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3410 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3411 |                         scia_puts("\r\n");                             
; 3413 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3414 |                         scia_puts("UN          Set unit name.\r\n");   
; 3415 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3416 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3417 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3418 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3419 |                         scia_puts("\r\n");                             
; 3421 |                         scia_puts(                                     
; 3422 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3423 |                         scia_puts(                                     
; 3424 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3425 |                         scia_puts("\r\n");                             
; 3427 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3428 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3429 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3430 |                         scia_puts("\r\n");                             
; 3432 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3433 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3434 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3435 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3436 |                         scia_puts("\r\n");                             
; 3438 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3439 |                         scia_puts(                                     
; 3440 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3441 |                         scia_puts("\r\n");                             
; 3443 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3444 |                         scia_puts("\r\n");                             
; 3446 |                         scia_puts(                                     
; 3447 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3448 |                         scia_puts(                                     
; 3449 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3450 |                         scia_puts("\r\n");                             
; 3452 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3453 |                         scia_puts("\r\n");                             
; 3455 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3456 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3457 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3458 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3459 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3460 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3461 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3462 |                         scia_puts("\r\n");                             
; 3464 | #ifdef SDHCCARD                                                        
; 3465 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3466 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3467 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3468 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3469 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3470 |                         scia_puts( "\r\n" );                           
; 3471 | #endif                                                                 
; 3473 |                         scia_puts(                                     
; 3474 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3475 |                         scia_puts(                                     
; 3476 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3477 |                         scia_puts(                                     
; 3478 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3479 |                         scia_puts("\r\n");                             
; 3481 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3483 |                         // not implemented                             
; 3484 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3486 |                         scia_puts("\r\n");                             
; 3488 |                         break;                                         
; 3490 |                 case 'X':                                              
; 3492 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3494 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3496 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3499 |                         cmd_mode = SCI_MODE_BIN;                       
; 3500 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3502 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3504 |                         break;                                         
; 3506 |                 case 'Z':                                              
; 3508 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3510 |                         for (i = 0; i < 100; i++)       // 2s          
; 3512 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3515 |                         reboot();                                      
; 3516 |                         break;                                         
; 3540 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3541 |                         // Invalid commands
;     |                                  //                                    
; 3542 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3543 |                 default:                                               
; 3545 |                         INVALIDCMD:                                    
; 3547 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3548 |                         scia_puts(cmdbuff);                            
; 3549 |                         scia_puts("\", ignored.\r\n");                 
; 3550 |                         break;                                         
; 3552 |                 } // switch on 1st byte                                
; 3554 |                 if (unsaved) {                                         
; 3555 |                         scia_puts(                                     
; 3556 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3559 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3560 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3561 |                 // BIN command mode processing
;     |                          //                                            
; 3562 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3564 |                 // ------------------------------------------------    
; 3565 |                 // DEBUG: put received command on LCD                  
; 3574 |                 // ------------------------------------------------    
; 3575 |                 if (cmdlen < 2) {                                      
; 3576 |                         // INVALID COMMAND, less than 2 byte           
; 3577 |                         // may need to send NACK back                  
; 3578 |                         continue;                                      
; 3581 |                 for (i = 0; i < 2; i++) {                              
; 3582 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3585 |                 j = 2;                                  // buff length 
; 3586 |                 bincmdresult = Error_UnImpl;                           
; 3588 |                 // DEBUG, sending the command back                     
; 3589 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3591 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3593 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3596 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3711 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3713 |                 case CheckAddress:                                     
; 3715 |                         buff[j++] = 0;                                 
; 3716 |                         bincmdresult = OK_SendResult;                  
; 3717 |                         break;                                         
; 3719 |                 case SetAddress:                                       
; 3721 |                         buff[j] = cmdbuff[j];                          
; 3722 |                         j++;                                           
; 3723 |                         bincmdresult = OK_SendResult;                  
; 3724 |                         break;                                         
; 3726 |                 case RemoveAddress:                                    
; 3728 |                         buff[j] = cmdbuff[j];                          
; 3729 |                         j++;                                           
; 3730 |                         bincmdresult = OK_SendResult;                  
; 3731 |                         break;                                         
; 3733 |                 case GetUnitInfo:                                      
; 3735 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3736 |                         for (i = 0; i < 2; i++) {                      
; 3737 |                                 buff[j++] = 0xff & *intp;              
; 3738 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3739 |                                 intp++;                                
; 3742 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3743 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3745 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3746 |                         for (i = 0; i < 2; i++) {                      
; 3747 |                                 buff[j++] = 0xff & *intp;              
; 3748 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3749 |                                 intp++;                                
; 3752 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3753 |                         buff[j++] = slen;                              
; 3754 |                         for (i = 0; i < slen; i++) {                   
; 3755 |                                 buff[j++] = conf_data.uname[i]; // name
; 3757 |                         bincmdresult = OK_SendResult;                  
; 3759 |                         break;                                         
; 3761 |                 case SetUnitSN:                                        
; 3763 |                         if (cmdlen < 6) {                              
; 3764 |                                 bincmdresult = Error_Invalid;          
; 3765 |                                 break;                                 
; 3768 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3769 |                         for (i = 0; i < 2; i++) {                      
; 3770 |                                 *intp = cmdbuff[j];                    
; 3771 |                                 buff[j++] = 0xff & *intp;              
; 3772 |                                 *intp += cmdbuff[j] << 8;              
; 3773 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3774 |                                 intp++;                                
; 3776 |                         unsaved = 1;                                   
; 3778 |                         bincmdresult = OK_SendResult;                  
; 3779 |                         break;                                         
; 3781 |                 case SetUnitName:                                      
; 3783 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3784 |                                 bincmdresult = Error_Invalid;          
; 3785 |                                 break;                                 
; 3788 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3789 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3791 |                         conf_data.uname[i] = '\0';                     
; 3792 |                         unsaved = 1;                                   
; 3794 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3795 |                         buff[j++] = slen;                              
; 3796 |                         for (i = 0; i < slen; i++) {                   
; 3797 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3799 |                         bincmdresult = OK_SendResult;                  
; 3800 |                         break;                                         
; 3802 |                 case GetInterface:                                     
; 3804 |                         buff[j++] = conf_data.rxdir;                   
; 3806 |                         if (conf_data.rxdir == SDIR_RS485              
; 3807 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3808 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3809 |                                 for (i = 0; i < 2; i++) {              
; 3810 |                                         buff[j++] = 0xff & *intp;      
; 3811 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3812 |                                         intp++;                        
; 3815 |                         bincmdresult = OK_SendResult;                  
; 3816 |                         break;                                         
; 3818 |                 case SetInterface:                                     
; 3820 |                         if (cmdlen < 3) {                              
; 3821 |                                 bincmdresult = Error_Invalid;          
; 3822 |                                 break;                                 
; 3824 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3825 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3826 |                                 bincmdresult = Error_Invalid;          
; 3827 |                                 break;                                 
; 3830 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3831 |                                 if (cmdlen < 7) {                      
; 3832 |                                         bincmdresult = Error_Invalid;  
; 3833 |                                         break;                         
; 3836 |                                 temp32 = 0;                            
; 3837 |                                 for (k = 6; k > 2; k--) {              
; 3838 |                                         temp32 += cmdbuff[k];          
; 3839 |                                         temp32 <<= 8;                  
; 3842 |                                 for (i = 0; i < 8; i++) {              
; 3843 |                                         if (temp32 == BAUD[i]) {       
; 3844 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3845 |                                                 break;                 
; 3848 |                                 if (i == 8) {                          
; 3849 |                                         bincmdresult = Error_Invalid;  
; 3850 |                                         break;                         
; 3854 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3856 |                         while (j < cmdlen) {                           
; 3857 |                                 buff[j] = cmdbuff[j];                  
; 3858 |                                 j++;                                   
; 3860 |                         unsaved = 1;                                   
; 3861 |                         bincmdresult = OK_SendResult;                  
; 3862 |                         break;                                         
; 3864 |                 case GetChannel:                                       
; 3866 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3867 |                                 bincmdresult = Error_Invalid;          
; 3868 |                                 break;                                 
; 3870 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3872 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3874 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3876 |                                 buff[j++] = 0;                         
; 3879 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3880 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3882 |                                 buff[j++] = 0xff & *intp;              
; 3883 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3884 |                                 intp++;                                
; 3887 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3888 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3890 |                                 buff[j++] = 0xff & *intp;              
; 3891 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3892 |                                 intp++;                                
; 3895 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3896 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3898 |                                 buff[j++] = 0xff & *intp;              
; 3899 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3900 |                                 intp++;                                
; 3903 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3904 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3906 |                                 buff[j++] = 0xff & *intp;              
; 3907 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3908 |                                 intp++;                                
; 3911 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3912 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3914 |                                 buff[j++] = 0xff & *intp;              
; 3915 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3916 |                                 intp++;                                
; 3919 |                         bincmdresult = OK_SendResult;                  
; 3920 |                         break;                                         
; 3922 |                 case GetSensor:                                        
; 3924 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3925 |                                 bincmdresult = Error_Invalid;          
; 3926 |                                 break;                                 
; 3928 |                         ss = cmdbuff[2];                               
; 3929 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3931 |                         // sensor serial name                          
; 3932 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3933 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3934 |                         for (i = 0; i < slen; i++) {                   
; 3935 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3938 |                         // sensor name/label                           
; 3939 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3940 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3941 |                         for (i = 0; i < slen; i++) {                   
; 3942 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3945 |                         // TAGID                                       
; 3946 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3947 |                         for (i = 0; i < 4; i++) {                      
; 3948 |                                 buff[j++] = 0xff & *intp;              
; 3949 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3950 |                                 intp++;                                
; 3953 |                         // Method                                      
; 3954 |                         buff[j++] = conf_data.sensor[ss].method;       
; 3956 |                         // Date                                        
; 3957 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 3958 |                         for (i = 0; i < 2; i++) {                      
; 3959 |                                 buff[j++] = 0xff & *intp;              
; 3960 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3961 |                                 intp++;                                
; 3964 |                         // Range                                       
; 3965 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 3966 |                         for (i = 0; i < 2; i++) {                      
; 3967 |                                 buff[j++] = 0xff & *intp;              
; 3968 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3969 |                                 intp++;                                
; 3972 |                         // Unit                                        
; 3973 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 3975 |                         // Output Unit                                 
; 3976 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 3978 |                         // Unit Factor                                 
; 3979 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 3980 |                         for (i = 0; i < 2; i++) {                      
; 3981 |                                 buff[j++] = 0xff & *intp;              
; 3982 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3983 |                                 intp++;                                
; 3986 |                         // calibration points.                         
; 3987 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 3988 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 3989 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 3990 |                                         // mass point                  
; 3991 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 3992 |                                         for (i = 0; i < 2; i++) {      
; 3993 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 3994 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 3995 |                                                 intp++;                
; 3997 |                                         // adc counts point            
; 3998 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 3999 |                                         for (i = 0; i < 2; i++) {      
; 4000 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4001 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4002 |                                                 intp++;                
; 4006 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4007 |                                         // slope point                 
; 4008 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4009 |                                         for (i = 0; i < 2; i++) {      
; 4010 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4011 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4012 |                                                 intp++;                
; 4014 |                                         // intercept point             
; 4015 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4016 |                                         for (i = 0; i < 2; i++) {      
; 4017 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4018 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4019 |                                                 intp++;                
; 4022 |                         } else {                                       
; 4023 |                                 buff[j++] = 0;                         
; 4024 |                                 // slope                               
; 4025 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4026 |                                 for (i = 0; i < 2; i++) {              
; 4027 |                                         buff[j++] = 0xff & *intp;      
; 4028 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4029 |                                         intp++;                        
; 4031 |                                 // intercept                           
; 4032 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4033 |                                 for (i = 0; i < 2; i++) {              
; 4034 |                                         buff[j++] = 0xff & *intp;      
; 4035 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4036 |                                         intp++;                        
; 4040 |                         // shunt                                       
; 4041 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4042 |                         for (i = 0; i < 2; i++) {                      
; 4043 |                                 buff[j++] = 0xff & *intp;              
; 4044 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4045 |                                 intp++;                                
; 4048 |                         // base                                        
; 4049 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4050 |                         for (i = 0; i < 2; i++) {                      
; 4051 |                                 buff[j++] = 0xff & *intp;              
; 4052 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4053 |                                 intp++;                                
; 4056 |                         // DAC calibration gain                        
; 4057 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4058 |                         for (i = 0; i < 2; i++) {                      
; 4059 |                                 buff[j++] = 0xff & *intp;              
; 4060 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4061 |                                 intp++;                                
; 4064 |                         // DAC calibration offset                      
; 4065 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4066 |                         for (i = 0; i < 2; i++) {                      
; 4067 |                                 buff[j++] = 0xff & *intp;              
; 4068 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4069 |                                 intp++;                                
; 4072 |                         // channel calibrated on                       
; 4073 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4075 |                         bincmdresult = OK_SendResult;                  
; 4076 |                         break;                                         
; 4078 |                 case GetQEPChannels:                                   
; 4080 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4081 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4082 |                                 for (i = 0; i < 2; i++) {              
; 4083 |                                         buff[j++] = 0xff & *intp;      
; 4084 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4085 |                                         intp++;                        
; 4089 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4090 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4092 |                         bincmdresult = OK_SendResult;                  
; 4093 |                         break;                                         
; 4095 |                 case GetCurSensor:                                     
; 4097 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4098 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4101 |                         bincmdresult = OK_SendResult;                  
; 4102 |                         break;                                         
; 4104 |                 case GetAFilterSize:                                   
; 4106 |                         // filter size                                 
; 4107 |                         intp = (Uint16*) &conf_data.filter;            
; 4108 |                         buff[j++] = 0xff & *intp;                      
; 4109 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4110 |                         // filter window                               
; 4111 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4112 |                         for (i = 0; i < 2; i++) {                      
; 4113 |                                 buff[j++] = 0xff & *intp;              
; 4114 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4115 |                                 intp++;                                
; 4117 |                         bincmdresult = OK_SendResult;                  
; 4118 |                         break;                                         
; 4120 |                 case GetAutoId:                                        
; 4122 |                         buff[j++] = conf_data.tagiden;                 
; 4123 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4124 |                                 buff[j++] = autoid[i];                 
; 4126 |                         bincmdresult = OK_SendResult;                  
; 4127 |                         break;                                         
; 4129 |                 case GetDisplay:                                       
; 4131 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4132 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4133 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4134 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4136 |                         bincmdresult = OK_SendResult;                  
; 4137 |                         break;                                         
; 4139 |                 case GetDAC:                                           
; 4141 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4142 |                                 buff[j++] = conf_data.dac[i].what;     
; 4143 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4145 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4146 |                                 //{                                    
; 4147 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4148 |                                 //}                                    
; 4149 |                                 //else                                 
; 4150 |                                 //{                                    
; 4151 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4152 |                                 //}                                    
; 4153 |                                 for (k = 0; k < 2; k++) {              
; 4154 |                                         buff[j++] = 0xff & *intp;      
; 4155 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4156 |                                         intp++;                        
; 4158 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4159 |                                 //{                                    
; 4160 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4161 |                                 //}                                    
; 4162 |                                 //else                                 
; 4163 |                                 //{                                    
; 4164 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4165 |                                 //}                                    
; 4166 |                                 for (k = 0; k < 2; k++) {              
; 4167 |                                         buff[j++] = 0xff & *intp;      
; 4168 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4169 |                                         intp++;                        
; 4171 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4172 |                                 for (k = 0; k < 2; k++) {              
; 4173 |                                         buff[j++] = 0xff & *intp;      
; 4174 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4175 |                                         intp++;                        
; 4177 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4178 |                                 for (k = 0; k < 2; k++) {              
; 4179 |                                         buff[j++] = 0xff & *intp;      
; 4180 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4181 |                                         intp++;                        
; 4183 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4184 |                                 for (k = 0; k < 2; k++) {              
; 4185 |                                         buff[j++] = 0xff & *intp;      
; 4186 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4187 |                                         intp++;                        
; 4190 |                         bincmdresult = OK_SendResult;                  
; 4191 |                         break;                                         
; 4193 |                 case GetLIMIT:                                         
; 4195 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4196 |                                 buff[j++] = conf_data.lim[i].what;     
; 4197 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4198 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4200 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4201 |                                 for (k = 0; k < 2; k++) {              
; 4202 |                                         buff[j++] = 0xff & *intp;      
; 4203 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4204 |                                         intp++;                        
; 4206 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4207 |                                 for (k = 0; k < 2; k++) {              
; 4208 |                                         buff[j++] = 0xff & *intp;      
; 4209 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4210 |                                         intp++;                        
; 4213 |                         bincmdresult = OK_SendResult;                  
; 4214 |                         break;                                         
; 4216 |                 case GetLIMITStatus:                                   
; 4218 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4219 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4221 |                         bincmdresult = OK_SendResult;                  
; 4222 |                         break;                                         
; 4224 |                         // Heat Cal commands.                          
; 4225 |                 case GetTCLoadA:                                       
; 4226 |                 case GetTCLoadB:                                       
; 4227 |                 case GetTCLoadC:                                       
; 4228 |                 case GetTCLoadD:                                       
; 4230 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4231 |                         intp = (Uint16*) &temp16;                      
; 4232 |                         buff[j++] = 0xff & *intp;                      
; 4233 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4235 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4236 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4237 |                         intp = (Uint16*) &templg;                      
; 4238 |                         for (i = 0; i < 2; i++) {                      
; 4239 |                                 buff[j++] = 0xff & *intp;              
; 4240 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4241 |                                 intp++;                                
; 4243 |                         bincmdresult = OK_SendResult;                  
; 4244 |                         break;                                         
; 4246 |                 case GetTCTemp:                                        
; 4248 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4249 |                         intp = (Uint16*) &temp16;                      
; 4250 |                         buff[j++] = 0xff & *intp;                      
; 4251 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4252 |                         bincmdresult = OK_SendResult;                  
; 4253 |                         break;                                         
; 4255 |                 case GetTCStatus:                                      
; 4257 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4258 |                         for (i = 0; i < 2; i++) {                      
; 4259 |                                 buff[j++] = 0xff & *intp;              
; 4260 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4261 |                                 intp++;                                
; 4264 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4265 |                                 temp16 = 0x80;                         
; 4266 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4267 |                                         temp16 |= 0x01;                
; 4269 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4270 |                                         temp16 |= 0x02;                
; 4272 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4273 |                                         temp16 |= 0x04;                
; 4275 |                                 buff[j++] = 0xff & temp16;             
; 4277 |                         bincmdresult = OK_SendResult;                  
; 4278 |                         break;                                         
; 4280 |                 case GetTCParam:                                       
; 4282 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4283 |                                 bincmdresult = Error_Invalid;          
; 4284 |                                 break;                                 
; 4287 |                         ch = cmdbuff[2];                               
; 4288 |                         buff[j++] = ch;                                
; 4290 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4291 |                         for (k = 0; k < 2; k++) {                      
; 4292 |                                 buff[j++] = 0xff & *intp;              
; 4293 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4294 |                                 intp++;                                
; 4296 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4297 |                         for (k = 0; k < 2; k++) {                      
; 4298 |                                 buff[j++] = 0xff & *intp;              
; 4299 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4300 |                                 intp++;                                
; 4302 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4303 |                         for (k = 0; k < 2; k++) {                      
; 4304 |                                 buff[j++] = 0xff & *intp;              
; 4305 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4306 |                                 intp++;                                
; 4308 |                         bincmdresult = OK_SendResult;                  
; 4309 |                         break;                                         
; 4311 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4312 | #if 1                                                                  
; 4313 |                 case Open_SSR_IN1:                                     
; 4314 |                         ssr_set(0, SSR_OPEN);                          
; 4315 |                         break;                                         
; 4317 |                 case Close_SSR_IN1:                                    
; 4318 |                         ssr_set(0, SSR_CLOSE);                         
; 4319 |                         break;                                         
; 4320 | #endif                                                                 
; 4322 |                 case SetTCParam:                                       
; 4324 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4325 |                                 bincmdresult = Error_Invalid;          
; 4326 |                                 break;                                 
; 4329 |                         ch = cmdbuff[2];                               
; 4330 |                         buff[j++] = ch;                                
; 4332 |                         k = 3;                                         
; 4333 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4334 |                         for (i = 0; i < 2; i++) {                      
; 4335 |                                 *intp = cmdbuff[k++];                  
; 4336 |                                 *intp += cmdbuff[k++] << 8;            
; 4337 |                                 intp++;                                
; 4339 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4340 |                         for (i = 0; i < 2; i++) {                      
; 4341 |                                 *intp = cmdbuff[k++];                  
; 4342 |                                 *intp += cmdbuff[k++] << 8;            
; 4343 |                                 intp++;                                
; 4345 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4346 |                         for (i = 0; i < 2; i++) {                      
; 4347 |                                 *intp = cmdbuff[k++];                  
; 4348 |                                 *intp += cmdbuff[k++] << 8;            
; 4349 |                                 intp++;                                
; 4352 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4353 |                         for (k = 0; k < 2; k++) {                      
; 4354 |                                 buff[j++] = 0xff & *intp;              
; 4355 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4356 |                                 intp++;                                
; 4358 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4359 |                         for (k = 0; k < 2; k++) {                      
; 4360 |                                 buff[j++] = 0xff & *intp;              
; 4361 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4362 |                                 intp++;                                
; 4364 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4365 |                         for (k = 0; k < 2; k++) {                      
; 4366 |                                 buff[j++] = 0xff & *intp;              
; 4367 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4368 |                                 intp++;                                
; 4370 |                         unsaved = 1;                                   
; 4371 |                         bincmdresult = OK_SendResult;                  
; 4372 |                         break;                                         
; 4374 |                 case SetBCalParam:                                     
; 4376 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4377 |                                         || cmdbuff[3] != 2) {          
; 4378 |                                 bincmdresult = Error_Invalid;          
; 4379 |                                 break;                                 
; 4382 |                         ch = cmdbuff[2];                               
; 4383 |                         buff[j++] = ch;                                
; 4384 |                         buff[j] = cmdbuff[j++];                        
; 4386 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4387 |                                 intp = (Uint16*) &volt[k];             
; 4388 |                                 for (i = 0; i < 2; i++) {              
; 4389 |                                         *intp = cmdbuff[j];            
; 4390 |                                         buff[j++] = 0xff & *intp;      
; 4391 |                                         *intp += cmdbuff[j] << 8;      
; 4392 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4393 |                                         intp++;                        
; 4396 |                         bincmdresult = OK_SendResult;                  
; 4397 |                         break;                                         
; 4399 |                 case StartBCRead:                                      
; 4401 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4402 |                                         || cmdbuff[3] >= 2) {          
; 4403 |                                 bincmdresult = Error_Invalid;          
; 4404 |                                 break;                                 
; 4407 |                         k = cmdbuff[3];                                
; 4408 |                         intp = (Uint16*) &tempft;                      
; 4409 |                         for (i = 0; i < 2; i++) {                      
; 4410 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4411 |                                 intp++;                                
; 4413 |                         if (volt[k] != tempft) {                       
; 4414 |                                 bincmdresult = Error_Invalid;          
; 4415 |                                 break;                                 
; 4417 |                         lcd_clear();                                   
; 4418 |                         lcd_puts("Board Calibration...", 0);           
; 4419 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4420 |                         lcd_puts(buff, 20);                            
; 4421 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4422 |                         lcd_puts(buff, 40);                            
; 4423 |                         lcd_puts("Reading ... ", 60);                  
; 4425 |                         dsum[k] = 0;                                   
; 4426 |                         sampcnt = CAL_SAMPLES;                         
; 4427 |                         while (sampcnt--) {                            
; 4428 |                                 while (0 == ad7738_rawrdy()) {         
; 4429 |                                         delay_us(1);
;     |  // wait                                                               
; 4431 |                                 cntp = ad7738_getraw();                
; 4432 |                                 dsum[k] += cntp->adc[ch];              
; 4434 |                         if (1 == k) {                                  
; 4435 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4436 |                                                 / (dsum[1] - dsum[0]); 
; 4438 |                                 unsaved = 1;                           
; 4439 |                                 DINT;                                  
; 4440 |                                 ad7738_setcal();                       
; 4441 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4442 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4443 |                                 EINT;                                  
; 4445 |                         for (i = 0; i < cmdlen; i++) {                 
; 4446 |                                 buff[i] = cmdbuff[i];                  
; 4448 |                         j = cmdlen;                                    
; 4449 |                         bincmdresult = OK_SendResult;                  
; 4451 |                         lcd_clear();                                   
; 4452 |                         update_units();                                
; 4453 |                         break;                                         
; 4455 |                 case SetDCalParam:                                     
; 4457 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4458 |                                         || (0x07 | daccbm) != 0x07) {  
; 4459 |                                 bincmdresult = Error_Invalid;          
; 4460 |                                 break;                                 
; 4462 |                         ch = cmdbuff[2];                               
; 4463 |                         buff[j++] = ch;                                
; 4465 |                         for (k = 0; k < 3; k++) {                      
; 4466 |                                 intp = (Uint16*) &volt[k];             
; 4467 |                                 for (i = 0; i < 2; i++) {              
; 4468 |                                         *intp = cmdbuff[j];            
; 4469 |                                         buff[j++] = 0xff & *intp;      
; 4470 |                                         *intp += cmdbuff[j] << 8;      
; 4471 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4472 |                                         intp++;                        
; 4476 |                         // order: - o +                                
; 4477 |                         // do the calculations                         
; 4478 |                         conf_data.dac[ch].dslopen =                    
; 4479 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4480 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4481 |                         conf_data.dac[ch].dslopep =                    
; 4482 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4483 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4484 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4485 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4487 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4488 |                         daccbm = 0;                                    
; 4490 |                         unsaved = 1;                                   
; 4492 |                         DINT;                                          
; 4493 |                         ad7738_setcal();                               
; 4494 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4495 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4496 |                         EINT;                                          
; 4498 |                         bincmdresult = OK_SendResult;                  
; 4499 |                         break;                                         
; 4501 |                 case StartDCRead:                                      
; 4503 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4504 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4505 |                                 bincmdresult = Error_Invalid;          
; 4506 |                                 break;                                 
; 4509 |                         if (daccbm == 0) {                             
; 4510 |                                 ch = cmdbuff[2];                       
; 4511 |                         } else {                                       
; 4512 |                                 if (ch != cmdbuff[2]) {                
; 4513 |                                         bincmdresult = Error_Invalid;  
; 4514 |                                         break;                         
; 4517 |                         buff[j++] = ch;                                
; 4518 |                         k = cmdbuff[j];                                
; 4519 |                         buff[j++] = k;                                 
; 4521 |                         intp = (Uint16*) &volt[k];                     
; 4522 |                         for (i = 0; i < 2; i++) {                      
; 4523 |                                 *intp = cmdbuff[j];                    
; 4524 |                                 buff[j++] = 0xff & *intp;              
; 4525 |                                 *intp += cmdbuff[j] << 8;              
; 4526 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4527 |                                 intp++;                                
; 4529 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4530 |                                 bincmdresult = Error_Invalid;          
; 4531 |                                 break;                                 
; 4534 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4535 |                         if (dsum[0] <= 0) {                            
; 4536 |                                 dacc[k] = 0;                           
; 4537 |                         } else if (dsum[0] >= 0xffff) {                
; 4538 |                                 dacc[k] = 0xffff;                      
; 4539 |                         } else {                                       
; 4540 |                                 dacc[k] = (Uint16) dsum[0];            
; 4543 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4545 |                         mcbsp_xmit(dacc[k], ch);                       
; 4546 |                         latch_dac();                                   
; 4548 |                         daccbm |= (0x1 << k);                          
; 4550 |                         bincmdresult = OK_SendResult;                  
; 4551 |                         break;                                         
; 4553 |                 case SetSensorCalPa:                                   
; 4555 |                         if (cmdlen < 20) {                             
; 4556 |                                 bincmdresult = Error_Invalid;          
; 4557 |                                 break;                                 
; 4559 |                         k = 2;                                         
; 4560 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4561 |                         ss = cmdbuff[k++];              // sensor index
; 4562 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4563 |                                 bincmdresult = Error_Invalid;          
; 4564 |                                 break;                                 
; 4567 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4568 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4569 |                                 bincmdresult = Error_Invalid;          
; 4570 |                                 break;                                 
; 4572 |                         for (i = 0; i < tempint; i++) {                
; 4573 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4575 |                         tsensor.ssn[i] = '\0';                         
; 4577 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4578 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4579 |                                 bincmdresult = Error_Invalid;          
; 4580 |                                 break;                                 
; 4582 |                         for (i = 0; i < tempint; i++) {                
; 4583 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4585 |                         tsensor.slbl[i] = '\0';                        
; 4587 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4589 |                         intp = (Uint16*) &tsensor.date; // date        
; 4590 |                         for (i = 0; i < 2; i++) {                      
; 4591 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4592 |                                 k += 2;                                
; 4593 |                                 intp++;                                
; 4596 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4597 |                         for (i = 0; i < 2; i++) {                      
; 4598 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4599 |                                 k += 2;                                
; 4600 |                                 intp++;                                
; 4602 |                         tsensor.base = tsensor.range;                  
; 4604 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4605 |                         switch (tsensor.unit) {                        
; 4606 |                         case 0:                                 // lb  
; 4607 |                         case 1:                                 // kg  
; 4608 |                                 tsensor.unit |= UNIT_WT;               
; 4609 |                                 break;                                 
; 4610 |                         case 2:                                 // in  
; 4611 |                         case 3:                                 // cm  
; 4612 |                         case 4:                                 // mm  
; 4613 |                                 tsensor.unit |= UNIT_LT;               
; 4614 |                                 break;                                 
; 4615 |                         case 5:                                 // ps  
; 4616 |                                 tsensor.unit |= UNIT_PR;               
; 4617 |                                 break;                                 
; 4618 |                         case 6:                                 // nm  
; 4619 |                                 tsensor.unit |= UNIT_TQ;               
; 4620 |                                 break;                                 
; 4621 |                         case 7:                                        
; 4622 |                         case 8:                                        
; 4623 |                         case 15:                                       
; 4624 |                                 tsensor.unit |= 0xf0;                  
; 4625 |                                 break;                                 
; 4626 |                         default:                                       
; 4627 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4628 |                                 break;                                 
; 4630 |                         tsensor.ounit = tsensor.unit;                  
; 4631 |                         tsensor.ufactor = 1;                           
; 4633 |                         switch (tsensor.method) {                      
; 4634 |                         case MD_RUN_MVV:                               
; 4636 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4637 |                                 for (i = 0; i < 2; i++) {              
; 4638 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4639 |                                         k += 2;                        
; 4640 |                                         intp++;                        
; 4642 |                                 if (tsensor.slope[0] == 0) {           
; 4643 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4645 |                                 tsensor.points = 1;                    
; 4646 |                                 break;                                 
; 4648 |                         case MD_RUN_MAS:                               
; 4650 |                                 tsensor.points = cmdbuff[k++];         
; 4651 |                                 if (tsensor.points > PNT_MAX) {        
; 4652 |                                         tsensor.method = MD_UNCALED;   
; 4653 |                                         break;                         
; 4656 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4657 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4658 |                                         for (i = 0; i < 2; i++) {      
; 4659 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4660 |                                                 k += 2;                
; 4661 |                                                 intp++;                
; 4664 |                                 break;                                 
; 4666 |                         case MD_RUN_SHT:                               
; 4668 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4669 |                                 for (i = 0; i < 2; i++) {              
; 4670 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4671 |                                         k += 2;                        
; 4672 |                                         intp++;                        
; 4674 |                                 if (scale == 0) {                      
; 4675 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4677 |                                 tsensor.points = 1;                    
; 4678 |                                 break;                                 
; 4680 |                         default:                                       
; 4682 |                                 tsensor.method = MD_UNCALED;           
; 4683 |                                 break;                                 
; 4686 |                         if (tsensor.method == MD_UNCALED) {            
; 4687 |                                 bincmdresult = Error_Invalid;          
; 4688 |                                 break;                                 
; 4690 |                         tsensor.tare = 0;                              
; 4691 |                         tsensor.dacgain = 1;                           
; 4692 |                         tsensor.dacoff = 0;                            
; 4693 |                         tsensor.ch = ch;                               
; 4695 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4696 |                                 buff[j] = cmdbuff[j++];                
; 4698 |                         bincmdresult = OK_SendResult;                  
; 4699 |                         break;                                         
; 4701 |                 case StartSCRead:                                      
; 4703 |                         if (cmdlen < 5) {                              
; 4704 |                                 bincmdresult = Error_Invalid;          
; 4705 |                                 break;                                 
; 4707 |                         k = 2;                                         
; 4708 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4709 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4710 |                                 bincmdresult = Error_Invalid;          
; 4711 |                                 break;                                 
; 4714 |                         lcd_clear();                                   
; 4715 |                         lcd_puts("Sensor Calibration..", 0);           
; 4716 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4717 |                         lcd_puts(buff, 20);                            
; 4718 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4719 |                         lcd_puts(buff, 40);                            
; 4721 |                         switch (tsensor.method) {                      
; 4723 |                         case MD_RUN_MVV:                               
; 4725 |                                 lcd_puts("Reading zero point...", 60); 
; 4727 |                                 dsum[0] = 0;                           
; 4728 |                                 sampcnt = CAL_SAMPLES;                 
; 4729 |                                 while (sampcnt--) {                    
; 4730 |                                         while (0 == ad7738_rawrdy()) { 
; 4731 |                                                 delay_us(1);
;     |          // wait                                                       
; 4734 |                                         cntp = ad7738_getraw();        
; 4735 |                                         dsum[0] += cntp->adc[ch];      
; 4737 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4738 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4740 |                                 bincmdresult = OK_SendResult;          
; 4741 |                                 break;                                 
; 4743 |                         case MD_RUN_MAS:                               
; 4745 |                                 pt = cmdbuff[k++];                     
; 4746 |                                 intp = (Uint16*) &scale;               
; 4747 |                                 for (i = 0; i < 2; i++) {              
; 4748 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4749 |                                         k += 2;                        
; 4750 |                                         intp++;                        
; 4752 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4753 |                                         bincmdresult = Error_Invalid;  
; 4754 |                                         break;                         
; 4756 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4757 |                                 lcd_puts(buff, 60);                    
; 4759 |                                 dsum[0] = 0;                           
; 4760 |                                 sampcnt = CAL_SAMPLES;                 
; 4761 |                                 while (sampcnt--) {                    
; 4762 |                                         while (0 == ad7738_rawrdy()) { 
; 4763 |                                                 delay_us(1);
;     |          // wait                                                       
; 4766 |                                         cntp = ad7738_getraw();        
; 4767 |                                         dsum[0] += cntp->adc[ch];      
; 4769 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4771 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4773 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4774 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4775 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4776 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4777 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4778 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4779 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4780 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4781 | 
;     |          * tsensor.adc[k];                                             
; 4785 |                                 bincmdresult = OK_SendResult;          
; 4786 |                                 break;                                 
; 4788 |                         case MD_RUN_SHT:                               
; 4790 |                                 lcd_puts("Reading zero point...", 60); 
; 4792 |                                 for (k = 0; k < 2; k++) {              
; 4793 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4795 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4796 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4797 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4799 |                                                 DINT;                  
; 4800 |                                                 maf_rst();             
; 4801 |                                                 EINT;                  
; 4802 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4805 |                                         dsum[k] = 0;                   
; 4806 |                                         sampcnt = CAL_SAMPLES;         
; 4807 |                                         while (sampcnt--) {            
; 4808 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4809 |                                                         delay_us(1);
;     |                  // wait                                               
; 4812 |                                                 cntp = ad7738_getraw();
; 4813 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4817 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4818 |                                 DINT;                                  
; 4819 |                                 maf_rst();                             
; 4820 |                                 EINT;                                  
; 4822 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4823 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4824 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4825 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4827 |                                 bincmdresult = OK_SendResult;          
; 4828 |                                 break;                                 
; 4830 |                         default:                                       
; 4832 |                                 bincmdresult = Error_Invalid;          
; 4833 |                                 break;                                 
; 4835 |                         lcd_clear();                                   
; 4836 |                         update_units();                                
; 4838 |                         if (bincmdresult != OK_SendResult) {           
; 4839 |                                 break;                                 
; 4841 |                         for (i = 0; i < cmdlen; i++) {                 
; 4842 |                                 buff[i] = cmdbuff[i];                  
; 4844 |                         j = cmdlen;                                    
; 4845 |                         break;                                         
; 4847 |                 case StartSCShuntRd:                                   
; 4849 |                         if (cmdlen < 5) {                              
; 4850 |                                 bincmdresult = Error_Invalid;          
; 4851 |                                 break;                                 
; 4853 |                         k = 2;                                         
; 4854 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4855 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4856 |                                 bincmdresult = Error_Invalid;          
; 4857 |                                 break;                                 
; 4860 |                         lcd_clear();                                   
; 4861 |                         lcd_puts("Sensor Calibration..", 0);           
; 4862 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4863 |                         lcd_puts(buff, 20);                            
; 4864 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4865 |                         lcd_puts(buff, 40);                            
; 4866 |                         lcd_puts("Reading shunt value...", 60);        
; 4868 |                         for (k = 0; k < 2; k++) {                      
; 4869 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4871 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4872 |                                         for (i = 0; i < 50; i++) {     
; 4873 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4875 |                                         DINT;                          
; 4876 |                                         maf_rst();                     
; 4877 |                                         EINT;                          
; 4878 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4881 |                                 dsum[k] = 0;                           
; 4882 |                                 sampcnt = CAL_SAMPLES;                 
; 4883 |                                 while (sampcnt--) {                    
; 4884 |                                         while (0 == ad7738_rawrdy()) { 
; 4885 |                                                 delay_us(1);
;     |          // wait                                                       
; 4888 |                                         cntp = ad7738_getraw();        
; 4889 |                                         dsum[k] += cntp->adc[ch];      
; 4891 |                                 dsum[k] /= CAL_SAMPLES;                
; 4893 |                                 pt = 0;                                
; 4894 |                                 if (tsensor.points > 2) {              
; 4895 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4896 |                                                 pt++;                  
; 4899 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4900 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4903 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4904 |                         DINT;                                          
; 4905 |                         maf_rst();                                     
; 4906 |                         EINT;                                          
; 4908 |                         tsensor.shunt = volt[1] - volt[0];             
; 4910 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4912 |                         DINT;                                          
; 4913 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4914 |                                         sizeof(sconf_t));              
; 4916 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4918 |                         ad7738_setcal();                               
; 4919 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4920 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4921 |                         EINT;                                          
; 4923 |                         unsaved = 1;                                   
; 4925 |                         lcd_clear();                                   
; 4926 |                         update_units();                                
; 4928 |                         for (i = 0; i < cmdlen; i++) {                 
; 4929 |                                 buff[i] = cmdbuff[i];                  
; 4931 |                         j = cmdlen;                                    
; 4932 |                         bincmdresult = OK_SendResult;                  
; 4933 |                         break;                                         
; 4935 |                 case SetSensorName:                                    
; 4937 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4938 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4939 |                                 bincmdresult = Error_Invalid;          
; 4940 |                                 break;                                 
; 4942 |                         ss = cmdbuff[2];                               
; 4943 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4945 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4946 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4947 |                         for (i = 0; i < slen; i++) {                   
; 4948 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4950 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4951 |                         unsaved = 1;                                   
; 4953 |                         // sensor name/label                           
; 4954 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4955 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4956 |                         for (i = 0; i < slen; i++) {                   
; 4957 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4960 |                         bincmdresult = OK_SendResult;                  
; 4961 |                         break;                                         
; 4963 |                 case SetSensorOUnit:                                   
; 4965 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4966 |                                 bincmdresult = Error_Invalid;          
; 4967 |                                 break;                                 
; 4970 |                         ss = cmdbuff[2];                               
; 4971 |                         pt = cmdbuff[3];                               
; 4973 |                         if (pt != UNIT_PC                              
; 4974 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 4975 |                                 bincmdresult = Error_Invalid;          
; 4976 |                                 break;                                 
; 4979 |                         conf_data.sensor[ss].ounit = pt;               
; 4980 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4981 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 4983 |                         if (pt == UNIT_PC) {                           
; 4984 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 4985 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 4986 |                         } else if (conf_data.sensor[ss].ounit          
; 4987 |                                         == conf_data.sensor[ss].unit) {
; 4988 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 4989 |                         } else {                                       
; 4990 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 4991 |                                 case UNIT_LB:
;     |  // pond                                                               
; 4993 |                                         if (pt == UNIT_KG) {           
; 4994 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 4996 |                                         break;                         
; 4998 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5000 |                                         if (pt == UNIT_LB) {           
; 5001 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5003 |                                         break;                         
; 5005 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5007 |                                         switch (pt) {                  
; 5008 |                                         case UNIT_CM:                  
; 5009 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5010 |                                                 break;                 
; 5011 |                                         case UNIT_MM:                  
; 5012 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5013 |                                                 break;                 
; 5015 |                                         break;                         
; 5017 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5019 |                                         switch (pt) {                  
; 5020 |                                         case UNIT_IN:                  
; 5021 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5022 |                                                 break;                 
; 5023 |                                         case UNIT_MM:                  
; 5024 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5025 |                                                 break;                 
; 5027 |                                         break;                         
; 5029 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5031 |                                         switch (pt) {                  
; 5032 |                                         case UNIT_IN:                  
; 5033 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5034 |                                                 break;                 
; 5035 |                                         case UNIT_CM:                  
; 5036 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5037 |                                                 break;                 
; 5039 |                                         break;                         
; 5041 |                                 default:                               
; 5043 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5044 |                                         break;                         
; 5048 |                         unsaved = 1;                                   
; 5050 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5051 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5052 |                                         update_units();                
; 5053 |                                         DINT;                          
; 5054 |                                         ad7738_setcal();               
; 5055 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5056 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5057 |                                         EINT;                          
; 5061 |                         bincmdresult = OK_SendResult;                  
; 5062 |                         break;                                         
; 5064 |                 case SetSensorBase:                                    
; 5066 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5067 |                                 bincmdresult = Error_Invalid;          
; 5068 |                                 break;                                 
; 5070 |                         ss = cmdbuff[2];                               
; 5071 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5073 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5074 |                         for (i = 0; i < 2; i++) {                      
; 5075 |                                 *intp = cmdbuff[j];                    
; 5076 |                                 buff[j++] = 0xff & *intp;              
; 5077 |                                 *intp += cmdbuff[j] << 8;              
; 5078 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5079 |                                 intp++;                                
; 5081 |                         unsaved = 1;                                   
; 5083 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5084 |                                 // output unit is percent              
; 5085 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5086 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5088 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5089 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5090 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5091 |                                                 DINT;                  
; 5092 |                                                 ad7738_setcal();       
; 5093 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5094 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5095 |                                                 EINT;                  
; 5100 |                         bincmdresult = OK_SendResult;                  
; 5101 |                         break;                                         
; 5103 |                 case SetQEPChannels:                                   
; 5105 |                         if (cmdlen < 6) {                              
; 5106 |                                 bincmdresult = Error_Invalid;          
; 5107 |                                 break;                                 
; 5110 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5111 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5112 |                                 for (i = 0; i < 2; i++) {              
; 5113 |                                         *intp = cmdbuff[j];            
; 5114 |                                         buff[j++] = 0xff & *intp;      
; 5115 |                                         *intp += cmdbuff[j] << 8;      
; 5116 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5117 |                                         intp++;                        
; 5121 |                         conf_data.velfilter = cmdbuff[j];              
; 5122 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5123 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5124 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5126 |                         unsaved = 1;                                   
; 5128 |                         DINT;                                          
; 5129 |                         ad7738_setcal();                               
; 5130 |                         velf_rst();                                    
; 5131 |                         EINT;                                          
; 5133 |                         bincmdresult = OK_SendResult;                  
; 5134 |                         break;                                         
; 5136 |                         //case SetEnCntperin: // not needed            
; 5137 |                         //break;                                       
; 5139 |                 case SetCurSensor:                                     
; 5141 |                         if (cmdlen < 4||                               
; 5142 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5143 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5144 |                                 bincmdresult = Error_Invalid;          
; 5145 |                                 break;                                 
; 5148 |                         ch = cmdbuff[2];                               
; 5149 |                         ss = cmdbuff[3];                               
; 5151 |                         if (autoid[ch]) {                              
; 5152 |                                 bincmdresult = Error_Exe;              
; 5153 |                                 break;                                 
; 5156 |                         DINT;                                          
; 5157 |                         conf_data.ch[ch].ci = ss;                      
; 5158 |                         ad7738_setcal();                               
; 5160 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5161 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5162 |                         EINT;                                          
; 5164 |                         update_units();                                
; 5165 |                         unsaved = 1;                                   
; 5167 |                         buff[j++] = ch;                                
; 5168 |                         buff[j++] = ss;                                
; 5169 |                         bincmdresult = OK_SendResult;                  
; 5170 |                         break;                                         
; 5172 |                 case SetAFilterSize:                                   
; 5174 |                         if (cmdlen < 4) {                              
; 5175 |                                 bincmdresult = Error_Invalid;          
; 5176 |                                 break;                                 
; 5179 |                         // filter length                               
; 5180 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5181 |                         if (temp16 > MAF_MAX) {                        
; 5182 |                                 bincmdresult = Error_Invalid;          
; 5183 |                                 break;                                 
; 5186 |                         // filter diff window                          
; 5187 |                         intp = (Uint16*) &tempft;                      
; 5188 |                         for (i = 0; i < 2; i++) {                      
; 5189 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5190 |                                 intp++;                                
; 5193 |                         DINT;                                          
; 5194 |                         conf_data.filter = temp16;                     
; 5195 |                         conf_data.diffwin = tempft;                    
; 5196 |                         maf_rst();                                     
; 5197 |                         EINT;                                          
; 5199 |                         unsaved = 1;                                   
; 5201 |                         buff[j++] = 0xff & temp16;                     
; 5202 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5204 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5205 |                         buff[j++] = 0xff & intp[0];                    
; 5206 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5207 |                         buff[j++] = 0xff & intp[1];                    
; 5208 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5210 |                         bincmdresult = OK_SendResult;                  
; 5211 |                         break;                                         
; 5213 |                 case SetAutoId:                                        
; 5215 |                         if (cmdlen < 3) {                              
; 5216 |                                 bincmdresult = Error_Invalid;          
; 5217 |                                 break;                                 
; 5220 |                         conf_data.tagiden = cmdbuff[2];                
; 5221 |                         if (!conf_data.tagiden) {                      
; 5222 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5223 |                                         tagwasthere[i] = 0;            
; 5224 |                                         autoid[i] = 0;                 
; 5226 |                                 update_units();                        
; 5228 |                         unsaved = 1;                                   
; 5230 |                         buff[j] = cmdbuff[j++];                        
; 5231 |                         bincmdresult = OK_SendResult;                  
; 5232 |                         break;                                         
; 5234 |                 case SetDisplayLine:                                   
; 5236 |                         if (cmdlen < 14) {                             
; 5237 |                                 bincmdresult = Error_Invalid;          
; 5238 |                                 break;                                 
; 5241 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5242 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5243 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5244 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5245 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5246 |                                         || cmdbuff[13] > 5) {          
; 5247 |                                 bincmdresult = Error_Invalid;          
; 5248 |                                 break;                                 
; 5251 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5252 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5253 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5254 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5255 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5256 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5257 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5259 |                         unsaved = 1;                                   
; 5261 |                         lcd_clear();                                   
; 5262 |                         update_units();                                
; 5263 |                         bincmdresult = OK_SendResult;                  
; 5264 |                         break;                                         
; 5266 |                 case SetDACCh:                                         
; 5268 |                         if (cmdlen < 42) {                             
; 5269 |                                 bincmdresult = Error_Invalid;          
; 5270 |                                 break;                                 
; 5273 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5274 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5275 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5276 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5277 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5278 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5279 |                                 bincmdresult = Error_Invalid;          
; 5280 |                                 break;                                 
; 5283 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5284 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5285 |                                 buff[j++] = conf_data.dac[i].what;     
; 5286 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5287 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5289 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5290 |                                 //{                                    
; 5291 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5292 |                                 //}                                    
; 5293 |                                 //else                                 
; 5294 |                                 //{                                    
; 5295 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5296 |                                 //}                                    
; 5297 |                                 for (k = 0; k < 2; k++) {              
; 5298 |                                         *intp = cmdbuff[j];            
; 5299 |                                         buff[j++] = 0xff & *intp;      
; 5300 |                                         *intp += cmdbuff[j] << 8;      
; 5301 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5302 |                                         intp++;                        
; 5305 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5306 |                                 //{                                    
; 5307 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5308 |                                 //}                                    
; 5309 |                                 //else                                 
; 5310 |                                 //{                                    
; 5311 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5312 |                                 //}                                    
; 5313 |                                 for (k = 0; k < 2; k++) {              
; 5314 |                                         *intp = cmdbuff[j];            
; 5315 |                                         buff[j++] = 0xff & *intp;      
; 5316 |                                         *intp += cmdbuff[j] << 8;      
; 5317 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5318 |                                         intp++;                        
; 5321 |                         unsaved = 1;                                   
; 5323 |                         DINT;                                          
; 5324 |                         ad7738_setcal();                               
; 5325 |                         EINT;                                          
; 5326 |                         bincmdresult = OK_SendResult;                  
; 5327 |                         break;                                         
; 5329 |                 case SetLIMITCh:                                       
; 5331 |                         if (cmdlen < 46) {                             
; 5332 |                                 bincmdresult = Error_Invalid;          
; 5333 |                                 break;                                 
; 5336 |                         if (cmdbuff[2]                                 
; 5337 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5338 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5339 |                                 bincmdresult = Error_Invalid;          
; 5340 |                                 break;                                 
; 5343 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5344 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5345 |                                 buff[j++] = conf_data.lim[i].what;     
; 5346 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5347 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5348 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5349 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5351 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5352 |                                 for (k = 0; k < 2; k++) {              
; 5353 |                                         *intp = cmdbuff[j];            
; 5354 |                                         buff[j++] = 0xff & *intp;      
; 5355 |                                         *intp += cmdbuff[j] << 8;      
; 5356 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5357 |                                         intp++;                        
; 5359 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5360 |                                 for (k = 0; k < 2; k++) {              
; 5361 |                                         *intp = cmdbuff[j];            
; 5362 |                                         buff[j++] = 0xff & *intp;      
; 5363 |                                         *intp += cmdbuff[j] << 8;      
; 5364 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5365 |                                         intp++;                        
; 5368 |                         unsaved = 1;                                   
; 5370 |                         DINT;                                          
; 5371 |                         ad7738_setcal();                               
; 5372 |                         EINT;                                          
; 5374 |                         bincmdresult = OK_SendResult;                  
; 5375 |                         break;                                         
; 5377 |                 case Tare:                                             
; 5379 |                         if (cmdlen < 3) {                              
; 5380 |                                 //bincmdresult = Error_Invalid;        
; 5381 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5382 |                                 ad7738_resetpeak(0xff);                
; 5383 |                                 ad7738_resetvall(0xff);                
; 5384 |                                 unsaved = 1;                           
; 5386 |                                 buff[j++] = 0xff;                      
; 5387 |                                 bincmdresult = OK_SendResult;          
; 5388 |                                 break;                                 
; 5391 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5392 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5393 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5394 |                         unsaved = 1;                                   
; 5396 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5397 |                         bincmdresult = OK_SendResult;                  
; 5398 |                         break;                                         
; 5400 |                 case ResetPkVly:                                       
; 5402 |                         if (cmdlen < 3) {                              
; 5403 |                                 bincmdresult = Error_Invalid;          
; 5404 |                                 break;                                 
; 5407 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5408 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5409 |                         unsaved = 1;                                   
; 5411 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5412 |                         bincmdresult = OK_SendResult;                  
; 5413 |                         break;                                         
; 5415 |                 case ResetPk:                                          
; 5417 |                         if (cmdlen < 3) {                              
; 5418 |                                 bincmdresult = Error_Invalid;          
; 5419 |                                 break;                                 
; 5422 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5423 |                         unsaved = 1;                                   
; 5425 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5426 |                         bincmdresult = OK_SendResult;                  
; 5427 |                         break;                                         
; 5429 |                 case ResetVly:                                         
; 5431 |                         if (cmdlen < 3) {                              
; 5432 |                                 bincmdresult = Error_Invalid;          
; 5433 |                                 break;                                 
; 5436 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5437 |                         unsaved = 1;                                   
; 5439 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5440 |                         bincmdresult = OK_SendResult;                  
; 5441 |                         break;                                         
; 5443 |                 case ResetLIMIT:                                       
; 5445 |                         if (cmdlen < 3) {                              
; 5446 |                                 bincmdresult = Error_Invalid;          
; 5447 |                                 break;                                 
; 5450 |                         k = 0x01;                                      
; 5451 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5452 |                                 if (k & cmdbuff[2]) {                  
; 5453 |                                         ad7738_resetlimit(i);          
; 5455 |                                 k <<= 1;                               
; 5457 |                         unsaved = 1;                                   
; 5459 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5460 |                         bincmdresult = OK_SendResult;                  
; 5461 |                         break;                                         
; 5463 |                 case ResetPosition:                                    
; 5465 |                         if (cmdlen < 3) {                              
; 5466 |                                 bincmdresult = Error_Invalid;          
; 5467 |                                 break;                                 
; 5470 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5471 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5472 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5473 |                         unsaved = 1;                                   
; 5475 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5476 |                         bincmdresult = OK_SendResult;                  
; 5477 |                         break;                                         
; 5479 |                 case SetShuntSwitch:                                   
; 5481 |                         if (cmdlen < 3) {                              
; 5482 |                                 bincmdresult = Error_Invalid;          
; 5483 |                                 break;                                 
; 5486 |                         shunt_switch(cmdbuff[2]);                      
; 5487 |                         unsaved = 1;                                   
; 5489 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5490 |                         bincmdresult = OK_SendResult;                  
; 5491 |                         break;                                         
; 5493 |                 case SetDirectVolt:                                    
; 5495 |                         if (cmdlen < 7) {                              
; 5496 |                                 bincmdresult = Error_Invalid;          
; 5497 |                                 break;                                 
; 5500 |                         ss = cmdbuff[j];                               
; 5501 |                         buff[j++] = ss;                                
; 5503 |                         intp = (Uint16*) &volt[0];                     
; 5504 |                         for (k = 0; k < 2; k++) {                      
; 5505 |                                 *intp = cmdbuff[j];                    
; 5506 |                                 buff[j++] = 0xff & *intp;              
; 5507 |                                 *intp += cmdbuff[j] << 8;              
; 5508 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5509 |                                 intp++;                                
; 5512 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5513 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5514 |                                 bincmdresult = Error_Invalid;          
; 5515 |                                 break;                                 
; 5518 |                         if (volt[0] < 0) {                             
; 5519 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5520 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5521 |                         } else {                                       
; 5522 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5523 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5526 |                         if (dsum[0] <= 0) {                            
; 5527 |                                 dacc[0] = 0;                           
; 5528 |                         } else if (dsum[0] >= 0xffff) {                
; 5529 |                                 dacc[0] = 0xffff;                      
; 5530 |                         } else {                                       
; 5531 |                                 dacc[0] = (Uint16) dsum[0];            
; 5534 |                         mcbsp_xmit(dacc[0], ss);                       
; 5535 |                         latch_dac();                                   
; 5537 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5538 |                         buff[j++] = 0xff & dacc[0];                    
; 5539 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5541 |                         bincmdresult = OK_SendResult;                  
; 5542 |                         break;                                         
; 5544 |                 case GetAllFlash:                                      
; 5546 |                         break;                                         
; 5548 |                 case SetAllFlash:                                      
; 5550 |                         break;                                         
; 5552 |                 case FlashMemWrite:                                    
; 5554 |                         bincmdresult = OK_SendResult;                  
; 5555 |                         if (unsaved) {                                 
; 5556 |                                 // flash writing                       
; 5557 |                                 lcd_clear();                           
; 5558 |                                 lcd_puts("Flash writing...", 0);       
; 5560 |                                 for (i = 0; i < 50; i++) {             
; 5561 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5564 |                                 DINT;                                  
; 5565 |                                 flash_ret = conf_write();              
; 5566 |                                 EINT;                                  
; 5568 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5569 |                                         lcd_puts("Done", 16);          
; 5570 |                                         unsaved = 0;                   
; 5571 |                                 } else {                               
; 5572 |                                         lcd_puts("Fail", 16);          
; 5573 |                                         bincmdresult = Error_Exe;      
; 5576 |                                 for (i = 0; i < 50; i++) {             
; 5577 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5579 |                                 lcd_clear();                           
; 5580 |                                 update_units();                        
; 5582 |                         break;                                         
; 5584 |                 case FlashMemDefault:                                  
; 5586 |                         conf_default();                                
; 5588 |                         // flash writing                               
; 5589 |                         lcd_clear();                                   
; 5590 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5592 |                         for (i = 0; i < 50; i++) {                     
; 5593 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5596 |                         DINT;                                          
; 5597 |                         flash_ret = conf_write();                      
; 5598 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5599 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5600 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5601 |                         EINT;                                          
; 5603 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5604 |                                 lcd_puts("Done", 31);                  
; 5605 |                                 unsaved = 0;                           
; 5606 |                                 bincmdresult = OK_SendResult;          
; 5607 |                         } else {                                       
; 5608 |                                 lcd_puts("Fail", 31);                  
; 5609 |                                 bincmdresult = Error_Exe;              
; 5611 |                         for (i = 0; i < 50; i++) {                     
; 5612 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5614 |                         lcd_clear();                                   
; 5615 |                         update_units();                                
; 5617 |                         break;                                         
; 5619 |                 case FlashMemRead:                                     
; 5621 |                         // flash reading                               
; 5622 |                         conf_read();                                   
; 5624 |                         DINT;                                          
; 5625 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5626 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5627 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5628 |                         EINT;                                          
; 5630 |                         unsaved = 0;                                   
; 5631 |                         update_units();                                
; 5632 |                         bincmdresult = OK_SendResult;                  
; 5633 |                         break;                                         
; 5635 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |591| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      *-SP[58],XAR4         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5637,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5637 | if (cmdlen < 6) {                                                      
; 5638 |         bincmdresult = Error_Invalid;                                  
; 5639 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5637| 
        B         $C$L320,LO            ; [CPU_] |5637| 
        ; branchcc occurs ; [] |5637| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5642 | ds_dn = cmdbuff[2];                                                    
; 5643 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5642| 
        MOVL      ACC,XAR7              ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5644 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |5642| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5645 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5642| 
        MOV       *-SP[44],AL           ; [CPU_] |5642| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5644| 
        ADDB      ACC,#4                ; [CPU_] |5644| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5646,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5646 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5646| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5644| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5644| 
        MOV       *-SP[43],AL           ; [CPU_] |5644| 
	.dwpsn	file "../Source/prod.c",line 5646,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5648 | tempint = 0;                                                           
; 5649 | k = 0x01;                                                              
; 5650 | for (i = 0; i < 8; i++) {                                              
; 5651 |         if (ds_bm & k) {                                               
; 5652 |                 tempint++;                                             
; 5654 |         k <<= 1;                                                       
; 5657 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5658 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5659 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5660 | //                                      ds_en = 0;                     
; 5661 | //                                      bincmdresult = Error_Invalid;  
; 5662 | //                                      break;                         
; 5663 | //                              }                                      
; 5665 | ds_en = 1;                                                             
; 5666 | ds_stop = 0;                                                           
; 5667 | ds_sn = 0;                                                             
; 5669 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5670 | //                              ad7738_setlimitchgd();                 
; 5672 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5646| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5646| 
        MOV       *-SP[42],AL           ; [CPU_] |5646| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5673,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5673 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5673| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
        MOV       *-SP[46],#1           ; [CPU_] |5665| 
	.dwpsn	file "../Source/prod.c",line 5666,column 5,is_stmt,isa 0
        MOV       *-SP[45],#0           ; [CPU_] |5666| 
	.dwpsn	file "../Source/prod.c",line 5667,column 5,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |5667| 
	.dwpsn	file "../Source/prod.c",line 5674,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5674 | j++;                                                                   
; 5676 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[53],#6           ; [CPU_] |5674| 
	.dwpsn	file "../Source/prod.c",line 5677,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5677 | break;                                                                 
; 5679 | case StopStream:                                                       
; 5681 | ds_stop = 1;                                                           
; 5682 | bincmdresult = OK_SendResult;                                          
; 5683 | break;                                                                 
; 5685 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5687 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5677| 
        ; branch occurs ; [] |5677| 
$C$L80:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4849,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4849| 
        B         $C$L320,LO            ; [CPU_] |4849| 
        ; branchcc occurs ; [] |4849| 
	.dwpsn	file "../Source/prod.c",line 4854,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4854| 
        MOVL      ACC,XAR4              ; [CPU_] |4854| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4854| 
        MOVZ      AR6,*-SP[50]          ; [CPU_] |4854| 
        MOVL      XAR0,#66              ; [CPU_] |4854| 
        ADDB      ACC,#2                ; [CPU_] |4854| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4854| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4854| 
        CMPL      ACC,XAR6              ; [CPU_] |4854| 
        B         $C$L320,NEQ           ; [CPU_] |4854| 
        ; branchcc occurs ; [] |4854| 
        MOVZ      AR6,*-SP[49]          ; [CPU_] |4854| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4854| 
        CMPL      ACC,XAR6              ; [CPU_] |4854| 
        B         $C$L320,NEQ           ; [CPU_] |4854| 
        ; branchcc occurs ; [] |4854| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4854| 
        MOVL      XAR0,#64              ; [CPU_] |4854| 
        MOVL      ACC,XAR5              ; [CPU_] |4854| 
        ADDB      ACC,#4                ; [CPU_] |4854| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4854| 
        MOVB      XAR0,#36              ; [CPU_] |4854| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4854| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4854| 
        B         $C$L320,NEQ           ; [CPU_] |4854| 
        ; branchcc occurs ; [] |4854| 
	.dwpsn	file "../Source/prod.c",line 4860,column 5,is_stmt,isa 0
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4860| 
        ; call occurs [#_lcd_clear] ; [] |4860| 
	.dwpsn	file "../Source/prod.c",line 4861,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4861| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4861| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4861| 
        ; call occurs [#_lcd_puts] ; [] |4861| 
	.dwpsn	file "../Source/prod.c",line 4862,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4862| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4862| 
        MOVL      XAR0,#44              ; [CPU_] |4862| 
        ADD       AL,*-SP[50]           ; [CPU_] |4862| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4862| 
        MOV       *-SP[3],AL            ; [CPU_] |4862| 
        MOVB      AL,#1                 ; [CPU_] |4862| 
        ADD       AL,*-SP[49]           ; [CPU_] |4862| 
        MOV       *-SP[4],AL            ; [CPU_] |4862| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4862| 
        MOVL      XAR4,XAR3             ; [CPU_] |4862| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_sprintf")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4862| 
        ; call occurs [#_sprintf] ; [] |4862| 
	.dwpsn	file "../Source/prod.c",line 4863,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4863| 
        MOVL      XAR4,XAR3             ; [CPU_] |4863| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4863| 
        ; call occurs [#_lcd_puts] ; [] |4863| 
	.dwpsn	file "../Source/prod.c",line 4864,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4864| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4864| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4864| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4864| 
        MOVL      XAR0,#58              ; [CPU_] |4864| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4864| 
        MOVB      XAR1,#36              ; [CPU_] |4864| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4864| 
        ADDL      ACC,XAR6              ; [CPU_] |4864| 
        MOVL      XAR4,ACC              ; [CPU_] |4864| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4864| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4864| 
        MOVL      XAR4,XAR3             ; [CPU_] |4864| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_sprintf")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4864| 
        ; call occurs [#_sprintf] ; [] |4864| 
	.dwpsn	file "../Source/prod.c",line 4865,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4865| 
        MOVL      XAR4,XAR3             ; [CPU_] |4865| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4865| 
        ; call occurs [#_lcd_puts] ; [] |4865| 
	.dwpsn	file "../Source/prod.c",line 4866,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4866| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4866| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4866| 
        ; call occurs [#_lcd_puts] ; [] |4866| 
        MOVL      XAR0,#78              ; [CPU_] |4866| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4866| 
        MOVZ      AR0,*-SP[50]          ; [CPU_] |4866| 
        MOV       T,*-SP[50]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[49]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4894,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |4894| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4868,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4868| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[52],AL           ; [CPU_] |4868| 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4869,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4869| 
        B         $C$L83,LEQ            ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
	.dwpsn	file "../Source/prod.c",line 4871,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4871| 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4871| 
        ; call occurs [#_shunt_switch] ; [] |4871| 
        MOV       *-SP[40],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4873,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4873| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_delay_us")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4873| 
        ; call occurs [#_delay_us] ; [] |4873| 
        MOVZ      AR6,*-SP[40]          ; [CPU_] |4873| 
	.dwpsn	file "../Source/prod.c",line 4872,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4872| 
        MOVZ      AR0,AR6               ; [CPU_] |4872| 
        MOV       *-SP[40],AR6          ; [CPU_] |4872| 
        CMP       AR0,#-1               ; [CPU_] |4872| 
        B         $C$L82,NEQ            ; [CPU_] |4872| 
        ; branchcc occurs ; [] |4872| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4876,column 7,is_stmt,isa 0
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_maf_rst")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4876| 
        ; call occurs [#_maf_rst] ; [] |4876| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4878,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4878| 
        SPM       #0                    ; [CPU_] 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_delay_us")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4878| 
        ; call occurs [#_delay_us] ; [] |4878| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4881| 
	.dwpsn	file "../Source/prod.c",line 4882,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4882| 
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4881| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4881| 
	.dwpsn	file "../Source/prod.c",line 4883,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4882,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4882| 
	.dwpsn	file "../Source/prod.c",line 4883,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4883| 
        MOVB      ACC,#0                ; [CPU_] |4883| 
        SUBB      ACC,#1                ; [CPU_] |4883| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4883| 
        B         $C$L86,EQ             ; [CPU_] |4883| 
        ; branchcc occurs ; [] |4883| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4884,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4884| 
        ; branch occurs ; [] |4884| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4885,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4885| 
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_delay_us")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4885| 
        ; call occurs [#_delay_us] ; [] |4885| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4884,column 14,is_stmt,isa 0
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4884| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4884| 
        CMPB      AL,#0                 ; [CPU_] |4884| 
        B         $C$L84,EQ             ; [CPU_] |4884| 
        ; branchcc occurs ; [] |4884| 
	.dwpsn	file "../Source/prod.c",line 4888,column 7,is_stmt,isa 0
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4888| 
        ; call occurs [#_ad7738_getraw] ; [] |4888| 
	.dwpsn	file "../Source/prod.c",line 4889,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4889| 
        ADDL      XAR4,ACC              ; [CPU_] |4889| 
        MOVL      XAR0,#34              ; [CPU_] |4889| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4889| 
        MOVL      XAR0,#34              ; [CPU_] |4889| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4889| 
        ASR64     ACC:P,16              ; [CPU_] |4889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4889| 
        MOVL      XAR0,#34              ; [CPU_] |4889| 
        ASR64     ACC:P,16              ; [CPU_] |4889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4889| 
        MOVL      XAR0,#34              ; [CPU_] |4889| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4889| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4889| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4889| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4883,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4883| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4883| 
        MOVB      ACC,#0                ; [CPU_] |4883| 
        SUBB      ACC,#1                ; [CPU_] |4883| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4883| 
        B         $C$L85,NEQ            ; [CPU_] |4883| 
        ; branchcc occurs ; [] |4883| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4891| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4891| 
        MOV       *-SP[2],#0            ; [CPU_] |4891| 
        MOV       *-SP[1],#0            ; [CPU_] |4891| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |4891| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |4891| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4891| 
        ; call occurs [#LL$$DIV] ; [] |4891| 
	.dwpsn	file "../Source/prod.c",line 4894,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4894| 
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4891| 
	.dwpsn	file "../Source/prod.c",line 4893,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4893| 
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4891| 
	.dwpsn	file "../Source/prod.c",line 4894,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |4894| 
        CMPB      AL,#2                 ; [CPU_] |4894| 
        B         $C$L89,LEQ            ; [CPU_] |4894| 
        ; branchcc occurs ; [] |4894| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4895,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4895| 
        ; branch occurs ; [] |4895| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4896,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4896| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4895,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4895| 
        B         $C$L89,HIS            ; [CPU_] |4895| 
        ; branchcc occurs ; [] |4895| 
        MOVB      AL,#1                 ; [CPU_] |4895| 
        ADD       AL,AR4                ; [CPU_] |4895| 
        MOVZ      AR5,AL                ; [CPU_] |4895| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4895| 
        ADDL      ACC,XAR3              ; [CPU_] |4895| 
        MOVL      XAR6,ACC              ; [CPU_] |4895| 
        MOVB      XAR0,#72              ; [CPU_] |4895| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4895| 
        MOVL      XAR0,#32              ; [CPU_] |4895| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4895| 
        MOVL      XAR0,#32              ; [CPU_] |4895| 
        ASR64     ACC:P,16              ; [CPU_] |4895| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4895| 
        MOVL      XAR0,#32              ; [CPU_] |4895| 
        ASR64     ACC:P,16              ; [CPU_] |4895| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4895| 
        MOVL      *-SP[4],P             ; [CPU_] |4895| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4895| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4895| 
        MOVL      P,*-SP[32]            ; [CPU_] |4895| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$558, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4895| 
        ; call occurs [#LL$$CMP] ; [] |4895| 
        CMPB      AL,#0                 ; [CPU_] |4895| 
        B         $C$L87,GT             ; [CPU_] |4895| 
        ; branchcc occurs ; [] |4895| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4899,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4899| 
        ADDL      ACC,XAR3              ; [CPU_] |4899| 
        MOVL      XAR4,ACC              ; [CPU_] |4899| 
        MOVB      XAR0,#96              ; [CPU_] |4899| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4899| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4899| 
        MOVL      XAR0,#38              ; [CPU_] |4899| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4899| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4899| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4899| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4899| 
        ; call occurs [#FS$$MPY] ; [] |4899| 
        MOVL      XAR0,#30              ; [CPU_] |4899| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4899| 
        MOVL      P,*XAR1++             ; [CPU_] |4899| 
        MOVL      ACC,*XAR1++           ; [CPU_] |4899| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4899| 
        ; call occurs [#LL$$TOFS] ; [] |4899| 
        MOVL      XAR0,#30              ; [CPU_] |4899| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4899| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4899| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4899| 
        ; call occurs [#FS$$MPY] ; [] |4899| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4899| 
        MOVB      XAR0,#118             ; [CPU_] |4899| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4899| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4899| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4899| 
        ; call occurs [#FS$$ADD] ; [] |4899| 
        MOVL      XAR0,#36              ; [CPU_] |4899| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4899| 
        MOVL      XAR0,#36              ; [CPU_] |4899| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4899| 
	.dwpsn	file "../Source/prod.c",line 4868,column 17,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |4868| 
	.dwpsn	file "../Source/prod.c",line 4899,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4899| 
        MOV       AL,*-SP[52]           ; [CPU_] |4899| 
	.dwpsn	file "../Source/prod.c",line 4868,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4868| 
        B         $C$L81,LT             ; [CPU_] |4868| 
        ; branchcc occurs ; [] |4868| 
	.dwpsn	file "../Source/prod.c",line 4903,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4903| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4903| 
        ; call occurs [#_shunt_switch] ; [] |4903| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4905,column 5,is_stmt,isa 0
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_maf_rst")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4905| 
        ; call occurs [#_maf_rst] ; [] |4905| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4908,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4908| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4908| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4908| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4908| 
        ; call occurs [#FS$$SUB] ; [] |4908| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4908| 
        MOVL      XAR0,#36              ; [CPU_] |4908| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4908| 
        MOVB      XAR0,#140             ; [CPU_] |4908| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4908| 
        MOV       AL,*-SP[50]           ; [CPU_] |4908| 
	.dwpsn	file "../Source/prod.c",line 4910,column 5,is_stmt,isa 0
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_tagid")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4910| 
        ; call occurs [#_tagid] ; [] |4910| 
        MOVL      XAR4,XAR1             ; [CPU_] |4910| 
        ADDB      XAR4,#32              ; [CPU_] |4910| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4910| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4910| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4913,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4913| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4913| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4913| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4913| 
        MOV       AL,*-SP[49]           ; [CPU_] |4913| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4916,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4916| 
	.dwpsn	file "../Source/prod.c",line 4918,column 5,is_stmt,isa 0
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4918| 
        ; call occurs [#_ad7738_setcal] ; [] |4918| 
        MOVZ      AR1,*-SP[39]          ; [CPU_] |4918| 
	.dwpsn	file "../Source/prod.c",line 4919,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4919| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4919| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4919| 
        MOV       AL,AR1                ; [CPU_] |4919| 
	.dwpsn	file "../Source/prod.c",line 4920,column 5,is_stmt,isa 0
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4920| 
        ; call occurs [#_ad7738_resetvall] ; [] |4920| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4925,column 5,is_stmt,isa 0
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4925| 
        ; call occurs [#_lcd_clear] ; [] |4925| 
	.dwpsn	file "../Source/prod.c",line 4926,column 5,is_stmt,isa 0
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_update_units")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4926| 
        ; call occurs [#_update_units] ; [] |4926| 
        MOVL      XAR0,#42              ; [CPU_] |4926| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4926| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4928,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4928| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4929,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4929| 
	.dwpsn	file "../Source/prod.c",line 4928,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4928| 
	.dwpsn	file "../Source/prod.c",line 4929,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4929| 
	.dwpsn	file "../Source/prod.c",line 4928,column 17,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4928| 
	.dwpsn	file "../Source/prod.c",line 4929,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4929| 
	.dwpsn	file "../Source/prod.c",line 4928,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4928| 
        B         $C$L90,HI             ; [CPU_] |4928| 
        ; branchcc occurs ; [] |4928| 
	.dwpsn	file "../Source/prod.c",line 4931,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4931| 
	.dwpsn	file "../Source/prod.c",line 4933,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4933| 
        ; branch occurs ; [] |4933| 
$C$L91:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4703,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4703| 
        B         $C$L320,LO            ; [CPU_] |4703| 
        ; branchcc occurs ; [] |4703| 
	.dwpsn	file "../Source/prod.c",line 4708,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4708| 
        MOVL      XAR0,#66              ; [CPU_] |4708| 
        MOVZ      AR6,*-SP[50]          ; [CPU_] |4708| 
        ADDB      ACC,#2                ; [CPU_] |4708| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4708| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4708| 
        CMPL      ACC,XAR6              ; [CPU_] |4708| 
        B         $C$L320,NEQ           ; [CPU_] |4708| 
        ; branchcc occurs ; [] |4708| 
        MOVZ      AR6,*-SP[49]          ; [CPU_] |4708| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4708| 
        CMPL      ACC,XAR6              ; [CPU_] |4708| 
        B         $C$L320,NEQ           ; [CPU_] |4708| 
        ; branchcc occurs ; [] |4708| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] |4708| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4708| 
        MOVL      ACC,XAR5              ; [CPU_] |4708| 
        ADDB      ACC,#4                ; [CPU_] |4708| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4708| 
        MOVB      XAR0,#36              ; [CPU_] |4708| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4708| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4708| 
        B         $C$L320,NEQ           ; [CPU_] |4708| 
        ; branchcc occurs ; [] |4708| 
	.dwpsn	file "../Source/prod.c",line 4714,column 5,is_stmt,isa 0
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4714| 
        ; call occurs [#_lcd_clear] ; [] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4715| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4715| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4715| 
        ; call occurs [#_lcd_puts] ; [] |4715| 
	.dwpsn	file "../Source/prod.c",line 4716,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4716| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4716| 
        MOVL      XAR0,#44              ; [CPU_] |4716| 
        ADD       AL,*-SP[50]           ; [CPU_] |4716| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4716| 
        MOV       *-SP[3],AL            ; [CPU_] |4716| 
        MOVB      AL,#1                 ; [CPU_] |4716| 
        ADD       AL,*-SP[49]           ; [CPU_] |4716| 
        MOV       *-SP[4],AL            ; [CPU_] |4716| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4716| 
        MOVL      XAR4,XAR1             ; [CPU_] |4716| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_sprintf")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4716| 
        ; call occurs [#_sprintf] ; [] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4717| 
	.dwpsn	file "../Source/prod.c",line 4716,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 5,is_stmt,isa 0
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4717| 
        ; call occurs [#_lcd_puts] ; [] |4717| 
	.dwpsn	file "../Source/prod.c",line 4718,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4718| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4718| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4718| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4718| 
        MOVL      XAR0,#58              ; [CPU_] |4718| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4718| 
        MOVB      XAR1,#36              ; [CPU_] |4718| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4718| 
        ADDL      ACC,XAR6              ; [CPU_] |4718| 
        MOVL      XAR4,ACC              ; [CPU_] |4718| 
        MOVL      XAR0,#44              ; [CPU_] |4718| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4718| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4718| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4718| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_sprintf")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4718| 
        ; call occurs [#_sprintf] ; [] |4718| 
        MOVL      XAR0,#44              ; [CPU_] |4718| 
	.dwpsn	file "../Source/prod.c",line 4719,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4719| 
	.dwpsn	file "../Source/prod.c",line 4718,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4718| 
	.dwpsn	file "../Source/prod.c",line 4719,column 5,is_stmt,isa 0
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4719| 
        ; call occurs [#_lcd_puts] ; [] |4719| 
	.dwpsn	file "../Source/prod.c",line 4721,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4721| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4721| 
        MOVB      XAR1,#36              ; [CPU_] |4721| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4721| 
        CMPB      AL,#1                 ; [CPU_] |4721| 
        B         $C$L92,EQ             ; [CPU_] |4721| 
        ; branchcc occurs ; [] |4721| 
        CMPB      AL,#2                 ; [CPU_] |4721| 
        B         $C$L105,EQ            ; [CPU_] |4721| 
        ; branchcc occurs ; [] |4721| 
        CMPB      AL,#3                 ; [CPU_] |4721| 
        B         $C$L96,EQ             ; [CPU_] |4721| 
        ; branchcc occurs ; [] |4721| 
        B         $C$L112,UNC           ; [CPU_] |4721| 
        ; branch occurs ; [] |4721| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4725| 
        MOVB      AL,#60                ; [CPU_] |4725| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4725| 
        ; call occurs [#_lcd_puts] ; [] |4725| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4728| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4729,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4729| 
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4728| 
        MOV       T,*-SP[50]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4729,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4729| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4729| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4729,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4729| 
        SUBB      ACC,#1                ; [CPU_] |4729| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4729| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4729| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4729| 
        ; branchcc occurs ; [] |4729| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4730,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4730| 
        ; branch occurs ; [] |4730| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4731,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4731| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_delay_us")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4731| 
        ; call occurs [#_delay_us] ; [] |4731| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4730,column 14,is_stmt,isa 0
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4730| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4730| 
        CMPB      AL,#0                 ; [CPU_] |4730| 
        B         $C$L93,EQ             ; [CPU_] |4730| 
        ; branchcc occurs ; [] |4730| 
	.dwpsn	file "../Source/prod.c",line 4734,column 7,is_stmt,isa 0
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4734| 
        ; call occurs [#_ad7738_getraw] ; [] |4734| 
	.dwpsn	file "../Source/prod.c",line 4735,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4735| 
        ADDL      XAR4,ACC              ; [CPU_] |4735| 
        MOVL      XAR0,#28              ; [CPU_] |4735| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4735| 
        MOVL      XAR0,#28              ; [CPU_] |4735| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4735| 
        ASR64     ACC:P,16              ; [CPU_] |4735| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4735| 
        MOVL      XAR0,#28              ; [CPU_] |4735| 
        ASR64     ACC:P,16              ; [CPU_] |4735| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4735| 
        MOVL      XAR0,#28              ; [CPU_] |4735| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4735| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4735| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4735| 
        MOVL      *-SP[32],P            ; [CPU_] |4735| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4729,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4729| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4729| 
        MOVB      ACC,#0                ; [CPU_] |4729| 
        SUBB      ACC,#1                ; [CPU_] |4729| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4729| 
        B         $C$L94,NEQ            ; [CPU_] |4729| 
        ; branchcc occurs ; [] |4729| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4737,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4737| 
	.dwpsn	file "../Source/prod.c",line 4741,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4741| 
        ; branch occurs ; [] |4741| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4790| 
        MOVB      AL,#60                ; [CPU_] |4790| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4790| 
        ; call occurs [#_lcd_puts] ; [] |4790| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[50]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4792,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4792| 
        MOV       *-SP[52],AL           ; [CPU_] |4792| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4793,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4793| 
        B         $C$L99,LEQ            ; [CPU_] |4793| 
        ; branchcc occurs ; [] |4793| 
	.dwpsn	file "../Source/prod.c",line 4795,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4795| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4795| 
        ; call occurs [#_shunt_switch] ; [] |4795| 
        MOV       *-SP[39],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4797,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4797| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_delay_us")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4797| 
        ; call occurs [#_delay_us] ; [] |4797| 
        MOVZ      AR6,*-SP[39]          ; [CPU_] |4797| 
	.dwpsn	file "../Source/prod.c",line 4796,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4796| 
        MOVZ      AR0,AR6               ; [CPU_] |4796| 
        MOV       *-SP[39],AR6          ; [CPU_] |4796| 
        CMP       AR0,#-1               ; [CPU_] |4796| 
        B         $C$L98,NEQ            ; [CPU_] |4796| 
        ; branchcc occurs ; [] |4796| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4800,column 8,is_stmt,isa 0
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_maf_rst")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4800| 
        ; call occurs [#_maf_rst] ; [] |4800| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4802,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4802| 
        SPM       #0                    ; [CPU_] 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_delay_us")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4802| 
        ; call occurs [#_delay_us] ; [] |4802| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4805,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4806,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4806| 
	.dwpsn	file "../Source/prod.c",line 4805,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4805| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4807,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4807| 
	.dwpsn	file "../Source/prod.c",line 4806,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4806| 
	.dwpsn	file "../Source/prod.c",line 4807,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4807| 
        MOVB      ACC,#0                ; [CPU_] |4807| 
        SUBB      ACC,#1                ; [CPU_] |4807| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4807| 
        B         $C$L101,EQ            ; [CPU_] |4807| 
        ; branchcc occurs ; [] |4807| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4808,column 15,is_stmt,isa 0
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4808| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4808| 
        CMPB      AL,#0                 ; [CPU_] |4808| 
        B         $C$L104,EQ            ; [CPU_] |4808| 
        ; branchcc occurs ; [] |4808| 
	.dwpsn	file "../Source/prod.c",line 4812,column 8,is_stmt,isa 0
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4812| 
        ; call occurs [#_ad7738_getraw] ; [] |4812| 
	.dwpsn	file "../Source/prod.c",line 4813,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4813| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4813| 
        ADDL      XAR4,ACC              ; [CPU_] |4813| 
        MOVL      XAR0,#26              ; [CPU_] |4813| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4813| 
        MOVL      XAR0,#26              ; [CPU_] |4813| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4813| 
        ASR64     ACC:P,16              ; [CPU_] |4813| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4813| 
        MOVL      XAR0,#26              ; [CPU_] |4813| 
        ASR64     ACC:P,16              ; [CPU_] |4813| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4813| 
        MOVL      XAR0,#26              ; [CPU_] |4813| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4813| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4813| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4813| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4813| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4807,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4807| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4807| 
        MOVB      ACC,#0                ; [CPU_] |4807| 
        SUBB      ACC,#1                ; [CPU_] |4807| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4807| 
        B         $C$L100,NEQ           ; [CPU_] |4807| 
        ; branchcc occurs ; [] |4807| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4792,column 18,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |4792| 
        ADDB      XAR1,#4               ; [CPU_] |4792| 
        MOV       AL,*-SP[52]           ; [CPU_] |4792| 
        CMPB      AL,#2                 ; [CPU_] |4792| 
        B         $C$L97,LT             ; [CPU_] |4792| 
        ; branchcc occurs ; [] |4792| 
	.dwpsn	file "../Source/prod.c",line 4817,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4817| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4817| 
        ; call occurs [#_shunt_switch] ; [] |4817| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4819,column 6,is_stmt,isa 0
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_maf_rst")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4819| 
        ; call occurs [#_maf_rst] ; [] |4819| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4822| 
        MOV       AH,#17948             ; [CPU_] |4822| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4822| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4822| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4822| 
        ; call occurs [#FS$$MPY] ; [] |4822| 
        MOVL      XAR1,ACC              ; [CPU_] |4822| 
        MOVL      P,*-SP[28]            ; [CPU_] |4822| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4822| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4822| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4822| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4822| 
        ; call occurs [#LL$$TOFS] ; [] |4822| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4822| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4822| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4822| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4822| 
        ; call occurs [#FS$$MPY] ; [] |4822| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4822| 
        MOVL      ACC,XAR1              ; [CPU_] |4822| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4822| 
        ; call occurs [#FS$$DIV] ; [] |4822| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4822| 
        MOVB      XAR0,#96              ; [CPU_] |4822| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4822| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4824,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4824| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4824| 
        MOVL      XAR0,#52              ; [CPU_] |4824| 
        ADDB      ACC,#96               ; [CPU_] |4824| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4824| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4824| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4824| 
        ; call occurs [#FS$$NEG] ; [] |4824| 
        MOVB      XAR0,#96              ; [CPU_] |4824| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4824| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4824| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4824| 
        ; call occurs [#FS$$MPY] ; [] |4824| 
        MOVL      XAR1,ACC              ; [CPU_] |4824| 
        MOVL      P,*-SP[32]            ; [CPU_] |4824| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4824| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4824| 
        ; call occurs [#LL$$TOFS] ; [] |4824| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4824| 
        MOVL      ACC,XAR1              ; [CPU_] |4824| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4824| 
        ; call occurs [#FS$$MPY] ; [] |4824| 
        MOVL      XAR6,ACC              ; [CPU_] |4824| 
        MOV       AL,#16384             ; [CPU_] |4824| 
        MOV       AH,#17948             ; [CPU_] |4824| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4824| 
        MOVL      ACC,XAR6              ; [CPU_] |4824| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4824| 
        ; call occurs [#FS$$DIV] ; [] |4824| 
        MOVL      XAR0,#36              ; [CPU_] |4824| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4824| 
        MOVB      XAR1,#118             ; [CPU_] |4824| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4824| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4827,column 6,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |4827| 
	.dwpsn	file "../Source/prod.c",line 4828,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4828| 
        ; branch occurs ; [] |4828| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4809,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4809| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_delay_us")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4809| 
        ; call occurs [#_delay_us] ; [] |4809| 
	.dwpsn	file "../Source/prod.c",line 4808,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4808| 
        ; branch occurs ; [] |4808| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4745,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4745| 
	.dwpsn	file "../Source/prod.c",line 4746,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4745,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4745| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] |4745| 
	.dwpsn	file "../Source/prod.c",line 4746,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4746| 
        MOVZ      AR5,AR5               ; [CPU_] |4746| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4748,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4748| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4748| 
        MOV       *XAR5++,AL            ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4749,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4749| 
	.dwpsn	file "../Source/prod.c",line 4747,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4747| 
        ; branchcc occurs ; [] |4747| 
	.dwpsn	file "../Source/prod.c",line 4752,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4752| 
        MOVB      XAR0,#46              ; [CPU_] |4752| 
        MOV       AL,*-SP[39]           ; [CPU_] |4752| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4752| 
        B         $C$L112,HIS           ; [CPU_] |4752| 
        ; branchcc occurs ; [] |4752| 
        MOVL      XAR0,#36              ; [CPU_] |4752| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4752| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4752| 
        ADDL      ACC,XAR6              ; [CPU_] |4752| 
        ADDB      ACC,#48               ; [CPU_] |4752| 
        MOVL      XAR1,ACC              ; [CPU_] |4752| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4752| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4752| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4752| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4752| 
        ; call occurs [#FS$$CMP] ; [] |4752| 
        CMPB      AL,#0                 ; [CPU_] |4752| 
        B         $C$L112,NEQ           ; [CPU_] |4752| 
        ; branchcc occurs ; [] |4752| 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4756| 
        MOVB      AL,#1                 ; [CPU_] |4756| 
        MOVL      XAR0,#44              ; [CPU_] |4756| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4756| 
        ADD       AL,*-SP[39]           ; [CPU_] |4756| 
        MOV       *-SP[3],AL            ; [CPU_] |4756| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4756| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_sprintf")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4756| 
        ; call occurs [#_sprintf] ; [] |4756| 
        MOVL      XAR0,#44              ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4757| 
        ; call occurs [#_lcd_puts] ; [] |4757| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4760,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4760| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4760,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4760| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4761,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4761| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4761,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4761| 
        MOVB      ACC,#0                ; [CPU_] |4761| 
        SUBB      ACC,#1                ; [CPU_] |4761| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4761| 
        B         $C$L108,EQ            ; [CPU_] |4761| 
        ; branchcc occurs ; [] |4761| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4762,column 14,is_stmt,isa 0
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4762| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4762| 
        CMPB      AL,#0                 ; [CPU_] |4762| 
        B         $C$L111,EQ            ; [CPU_] |4762| 
        ; branchcc occurs ; [] |4762| 
	.dwpsn	file "../Source/prod.c",line 4766,column 7,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4766| 
        ; call occurs [#_ad7738_getraw] ; [] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4767| 
        ADDL      XAR4,ACC              ; [CPU_] |4767| 
        MOVL      XAR0,#24              ; [CPU_] |4767| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4767| 
        MOVL      XAR0,#24              ; [CPU_] |4767| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4767| 
        ASR64     ACC:P,16              ; [CPU_] |4767| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4767| 
        MOVL      XAR0,#24              ; [CPU_] |4767| 
        ASR64     ACC:P,16              ; [CPU_] |4767| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4767| 
        MOVL      XAR0,#24              ; [CPU_] |4767| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4767| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4767| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4767| 
        MOVL      *-SP[32],P            ; [CPU_] |4767| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4761,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4761| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4761| 
        MOVB      ACC,#0                ; [CPU_] |4761| 
        SUBB      ACC,#1                ; [CPU_] |4761| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4761| 
        B         $C$L107,NEQ           ; [CPU_] |4761| 
        ; branchcc occurs ; [] |4761| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4769| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4769| 
        MOV       *-SP[2],#0            ; [CPU_] |4769| 
        MOV       *-SP[1],#0            ; [CPU_] |4769| 
        MOVL      P,*-SP[32]            ; [CPU_] |4769| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4769| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4769| 
        ; call occurs [#LL$$DIV] ; [] |4769| 
        ADDB      XAR1,#24              ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4771| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4771| 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4771| 
        MOV       AL,*-SP[39]           ; [CPU_] |4771| 
        SUB       AL,AR6                ; [CPU_] |4771| 
        MOVZ      AR7,AL                ; [CPU_] |4771| 
        MOVL      XAR4,#65535           ; [CPU_U] |4771| 
        MOVL      ACC,XAR4              ; [CPU_] |4771| 
        CMPL      ACC,XAR7              ; [CPU_] |4771| 
        B         $C$L103,NEQ           ; [CPU_] |4771| 
        ; branchcc occurs ; [] |4771| 
	.dwpsn	file "../Source/prod.c",line 4774,column 12,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |4774| 
        B         $C$L110,UNC           ; [CPU_] |4774| 
        ; branch occurs ; [] |4774| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4775,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4775| 
        MOVB      AL,#10                ; [CPU_] |4775| 
        MOV       T,*-SP[50]            ; [CPU_] |4775| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4775| 
        SETC      SXM                   ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] |4775| 
        MOVL      XAR0,#36              ; [CPU_] |4775| 
        ADDL      ACC,XAR6              ; [CPU_] |4775| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4775| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4775| 
        MOV       AL,*-SP[39]           ; [CPU_] |4775| 
        MOV       ACC,AL << 1           ; [CPU_] |4775| 
        ADDL      ACC,XAR6              ; [CPU_] |4775| 
        MOVL      XAR1,ACC              ; [CPU_] |4775| 
        MOVB      XAR0,#48              ; [CPU_] |4775| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4775| 
        MOVB      XAR0,#50              ; [CPU_] |4775| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4775| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4775| 
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4775| 
        ; call occurs [#FS$$SUB] ; [] |4775| 
        MOVL      XAR0,#42              ; [CPU_] |4775| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4775| 
        MOVB      XAR0,#74              ; [CPU_] |4775| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4775| 
        MOVB      XAR0,#72              ; [CPU_] |4775| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |4775| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4775| 
        ; call occurs [#L$$TOFS] ; [] |4775| 
        MOVL      XAR0,#42              ; [CPU_] |4775| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4775| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4775| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4775| 
        ; call occurs [#FS$$DIV] ; [] |4775| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4775| 
        MOVB      XAR0,#44              ; [CPU_] |4775| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4775| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4775| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4775| 
        ; call occurs [#FS$$DIV] ; [] |4775| 
        MOVB      XAR0,#96              ; [CPU_] |4775| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4775| 
	.dwpsn	file "../Source/prod.c",line 4779,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4779| 
        MOVB      XAR0,#44              ; [CPU_] |4779| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4779| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4779| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4779| 
        ; call occurs [#FS$$MPY] ; [] |4779| 
        MOVB      XAR0,#72              ; [CPU_] |4779| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4779| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4779| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4779| 
        ; call occurs [#L$$TOFS] ; [] |4779| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4779| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |4779| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4779| 
        ; call occurs [#FS$$MPY] ; [] |4779| 
        MOVB      XAR0,#48              ; [CPU_] |4779| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4779| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4779| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4779| 
        ; call occurs [#FS$$SUB] ; [] |4779| 
        MOVB      XAR0,#118             ; [CPU_] |4779| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4779| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4774,column 43,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |4774| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4774,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4774| 
        ADDB      AL,#-1                ; [CPU_] |4774| 
        CMP       AL,*-SP[39]           ; [CPU_] |4774| 
        B         $C$L109,GT            ; [CPU_] |4774| 
        ; branchcc occurs ; [] |4774| 
	.dwpsn	file "../Source/prod.c",line 4786,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4786| 
        ; branch occurs ; [] |4786| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4763,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4763| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_delay_us")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4763| 
        ; call occurs [#_delay_us] ; [] |4763| 
	.dwpsn	file "../Source/prod.c",line 4762,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4762| 
        ; branch occurs ; [] |4762| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4753,column 7,is_stmt,isa 0
        MOV       *-SP[39],#2           ; [CPU_] |4753| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4835,column 5,is_stmt,isa 0
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4835| 
        ; call occurs [#_lcd_clear] ; [] |4835| 
	.dwpsn	file "../Source/prod.c",line 4836,column 5,is_stmt,isa 0
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_update_units")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4836| 
        ; call occurs [#_update_units] ; [] |4836| 
        MOV       AL,*-SP[39]           ; [CPU_] |4836| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4839| 
        ; branchcc occurs ; [] |4839| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4841,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4841| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4842,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4842| 
	.dwpsn	file "../Source/prod.c",line 4841,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4841| 
	.dwpsn	file "../Source/prod.c",line 4842,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4842| 
	.dwpsn	file "../Source/prod.c",line 4841,column 17,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4841| 
	.dwpsn	file "../Source/prod.c",line 4842,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4842| 
	.dwpsn	file "../Source/prod.c",line 4841,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4841| 
        B         $C$L114,HI            ; [CPU_] |4841| 
        ; branchcc occurs ; [] |4841| 
	.dwpsn	file "../Source/prod.c",line 4844,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4844| 
	.dwpsn	file "../Source/prod.c",line 4845,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4845| 
        ; branch occurs ; [] |4845| 
$C$L115:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4555| 
        B         $C$L320,LO            ; [CPU_] |4555| 
        ; branchcc occurs ; [] |4555| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4560| 
        MOV       *-SP[50],AL           ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4561,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4561| 
        MOV       *-SP[49],AL           ; [CPU_] |4561| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4562| 
        MOV       AL,*-SP[50]           ; [CPU_] |4562| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4562| 
        CMPB      AL,#4                 ; [CPU_] |4562| 
        B         $C$L320,HIS           ; [CPU_] |4562| 
        ; branchcc occurs ; [] |4562| 
        MOV       AL,*-SP[49]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4562| 
        B         $C$L320,HIS           ; [CPU_] |4562| 
        ; branchcc occurs ; [] |4562| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4568,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4568| 
        MOVL      ACC,XAR4              ; [CPU_] |4568| 
        ADDB      ACC,#4                ; [CPU_] |4568| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4568| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4568| 
        CMPB      AL,#16                ; [CPU_] |4568| 
        B         $C$L320,HIS           ; [CPU_] |4568| 
        ; branchcc occurs ; [] |4568| 
	.dwpsn	file "../Source/prod.c",line 4572,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4572| 
        MOVL      XAR0,#64              ; [CPU_] |4572| 
        CMPB      AL,#0                 ; [CPU_] |4572| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4572| 
        B         $C$L116,LEQ           ; [CPU_] |4572| 
        ; branchcc occurs ; [] |4572| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4572| 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4572| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4572| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4572| 
        MOVL      XAR0,ACC              ; [CPU_] |4572| 
	.dwpsn	file "../Source/prod.c",line 4573,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4573| 
        ADD       AL,AR4                ; [CPU_] |4573| 
        MOVZ      AR6,AL                ; [CPU_] |4573| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4573| 
	.dwpsn	file "../Source/prod.c",line 4572,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4572| 
        ; branch occurs ; [] |4572| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4567,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4567| 
	.dwpsn	file "../Source/prod.c",line 4572,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4572| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4575,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4575| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4575| 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4577| 
        MOVL      XAR4,ACC              ; [CPU_] |4577| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4577| 
        CMPB      AL,#16                ; [CPU_] |4577| 
        B         $C$L320,HIS           ; [CPU_] |4577| 
        ; branchcc occurs ; [] |4577| 
        ADDB      XAR4,#1               ; [CPU_] |4577| 
	.dwpsn	file "../Source/prod.c",line 4582,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4582| 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4577| 
        MOVL      P,XAR4                ; [CPU_] |4577| 
	.dwpsn	file "../Source/prod.c",line 4582,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4582| 
        ; branchcc occurs ; [] |4582| 
        MOVZ      AR5,AL                ; [CPU_] |4582| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4583,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4583| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4583| 
        MOV       *XAR4++,AL            ; [CPU_] |4583| 
        ADDB      XAR7,#1               ; [CPU_] |4583| 
        MOVL      P,XAR7                ; [CPU_] |4583| 
	.dwpsn	file "../Source/prod.c",line 4582,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4582| 
        ; branchcc occurs ; [] |4582| 
        B         $C$L120,UNC           ; [CPU_] |4582| 
        ; branch occurs ; [] |4582| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4582,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4582| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4585,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4585| 
        ADD       ACC,AR5               ; [CPU_] |4585| 
        MOVL      XAR4,ACC              ; [CPU_] |4585| 
        MOVB      XAR0,#16              ; [CPU_] |4585| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4585| 
	.dwpsn	file "../Source/prod.c",line 4587,column 5,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4587| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4587| 
        ADDB      XAR7,#1               ; [CPU_] |4587| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4587| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] |4587| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4587| 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4591,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4591| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4591| 
	.dwpsn	file "../Source/prod.c",line 4592,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4591,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4591| 
        MOV       *XAR5++,AL            ; [CPU_] |4591| 
	.dwpsn	file "../Source/prod.c",line 4592,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4592| 
        MOVL      P,XAR7                ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4590,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4590| 
        ; branchcc occurs ; [] |4590| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4598,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4598| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4598| 
	.dwpsn	file "../Source/prod.c",line 4599,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4598,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4598| 
        MOV       *XAR0++,AL            ; [CPU_] |4598| 
	.dwpsn	file "../Source/prod.c",line 4599,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4599| 
        MOVL      P,XAR5                ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4597,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4597| 
        ; branchcc occurs ; [] |4597| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4602| 
        MOVB      XAR0,#40              ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4602| 
        MOVB      XAR0,#142             ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4604| 
        MOV       AL,*XAR7              ; [CPU_] |4604| 
        ADDB      XAR7,#1               ; [CPU_] |4604| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4605,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4605| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4605,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4605| 
        CMPB      AL,#6                 ; [CPU_] |4605| 
        B         $C$L123,GT            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        CMPB      AL,#6                 ; [CPU_] |4605| 
        B         $C$L126,EQ            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        CMPB      AL,#1                 ; [CPU_] |4605| 
        B         $C$L129,LOS           ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        MOV       AH,AL                 ; [CPU_] |4605| 
        ADDB      AH,#-2                ; [CPU_] |4605| 
        CMPB      AH,#2                 ; [CPU_] |4605| 
        B         $C$L128,LOS           ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        CMPB      AL,#5                 ; [CPU_] |4605| 
        B         $C$L127,EQ            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        B         $C$L124,UNC           ; [CPU_] |4605| 
        ; branch occurs ; [] |4605| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4605| 
        ADDB      AH,#-7                ; [CPU_] |4605| 
        CMPB      AH,#1                 ; [CPU_] |4605| 
        B         $C$L125,LOS           ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        CMPB      AL,#15                ; [CPU_] |4605| 
        B         $C$L125,EQ            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4627,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4627| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4628,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4628| 
        ; branch occurs ; [] |4628| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4624,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4624| 
	.dwpsn	file "../Source/prod.c",line 4625,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4625| 
        ; branch occurs ; [] |4625| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4619,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4620,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4620| 
        ; branch occurs ; [] |4620| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4616,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4616| 
	.dwpsn	file "../Source/prod.c",line 4617,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4617| 
        ; branch occurs ; [] |4617| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4613,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4613| 
	.dwpsn	file "../Source/prod.c",line 4614,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4614| 
        ; branch occurs ; [] |4614| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4608,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4608| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4630,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4630| 
        MOVB      XAR0,#43              ; [CPU_] |4630| 
        ADDB      XAR7,#42              ; [CPU_] |4630| 
        MOV       AL,*XAR7              ; [CPU_] |4630| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4630| 
	.dwpsn	file "../Source/prod.c",line 4631,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4631| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4631| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4631| 
	.dwpsn	file "../Source/prod.c",line 4633,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4633| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4633| 
        CMPB      AL,#1                 ; [CPU_] |4633| 
        B         $C$L137,EQ            ; [CPU_] |4633| 
        ; branchcc occurs ; [] |4633| 
        CMPB      AL,#2                 ; [CPU_] |4633| 
        B         $C$L131,EQ            ; [CPU_] |4633| 
        ; branchcc occurs ; [] |4633| 
        CMPB      AL,#3                 ; [CPU_] |4633| 
        B         $C$L135,EQ            ; [CPU_] |4633| 
        ; branchcc occurs ; [] |4633| 
        B         $C$L134,UNC           ; [CPU_] |4633| 
        ; branch occurs ; [] |4633| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4650,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4650| 
        MOVB      XAR0,#46              ; [CPU_] |4650| 
        MOV       AL,*XAR7              ; [CPU_] |4650| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4650| 
	.dwpsn	file "../Source/prod.c",line 4651,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4651| 
	.dwpsn	file "../Source/prod.c",line 4650,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4650| 
	.dwpsn	file "../Source/prod.c",line 4651,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4651| 
        CMPB      AL,#12                ; [CPU_] |4651| 
        B         $C$L134,GT            ; [CPU_] |4651| 
        ; branchcc occurs ; [] |4651| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4650,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4650| 
	.dwpsn	file "../Source/prod.c",line 4656,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4656| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4650,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4650| 
        MOVL      P,XAR6                ; [CPU_] |4650| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4664,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4664| 
        B         $C$L140,LEQ           ; [CPU_] |4664| 
        ; branchcc occurs ; [] |4664| 
	.dwpsn	file "../Source/prod.c",line 4657,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4657| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4657| 
        ADDB      ACC,#48               ; [CPU_] |4657| 
        MOVL      XAR0,ACC              ; [CPU_] |4657| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4659,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4659| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4659| 
	.dwpsn	file "../Source/prod.c",line 4660,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4659,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4659| 
        MOV       *XAR0++,AL            ; [CPU_] |4659| 
	.dwpsn	file "../Source/prod.c",line 4660,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4660| 
        MOVL      P,XAR5                ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4658,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4658| 
        ; branchcc occurs ; [] |4658| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4656,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4656| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4656| 
        ; branch occurs ; [] |4656| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4682,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4683,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4683| 
        ; branch occurs ; [] |4683| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4668,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4668| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4668| 
        MOVZ      AR0,AR5               ; [CPU_] |4668| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4670,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4670| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4671,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4671| 
	.dwpsn	file "../Source/prod.c",line 4670,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4670| 
        MOV       *XAR0++,AL            ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4671,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4671| 
        MOVL      P,XAR5                ; [CPU_] |4671| 
	.dwpsn	file "../Source/prod.c",line 4669,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4669| 
        ; branchcc occurs ; [] |4669| 
	.dwpsn	file "../Source/prod.c",line 4674,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4674| 
        MOV       AH,#0                 ; [CPU_] |4674| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4674| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4674| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4674| 
        ; call occurs [#FS$$CMP] ; [] |4674| 
        CMPB      AL,#0                 ; [CPU_] |4674| 
        B         $C$L139,NEQ           ; [CPU_] |4674| 
        ; branchcc occurs ; [] |4674| 
	.dwpsn	file "../Source/prod.c",line 4675,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4675| 
        MOV       AH,#16314             ; [CPU_] |4675| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4675| 
        B         $C$L139,UNC           ; [CPU_] |4675| 
        ; branch occurs ; [] |4675| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4638,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4638| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4638| 
	.dwpsn	file "../Source/prod.c",line 4639,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4639| 
	.dwpsn	file "../Source/prod.c",line 4638,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4638| 
        MOV       *XAR0++,AL            ; [CPU_] |4638| 
	.dwpsn	file "../Source/prod.c",line 4639,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4639| 
        MOVL      P,XAR5                ; [CPU_] |4639| 
	.dwpsn	file "../Source/prod.c",line 4637,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4637| 
        ; branchcc occurs ; [] |4637| 
	.dwpsn	file "../Source/prod.c",line 4642,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4642| 
        MOVL      XAR0,#52              ; [CPU_] |4642| 
        MOVL      ACC,XAR1              ; [CPU_] |4642| 
        ADDB      ACC,#96               ; [CPU_] |4642| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4642| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4642| 
        MOV       AL,#0                 ; [CPU_] |4642| 
        MOV       AH,#0                 ; [CPU_] |4642| 
        MOVB      XAR0,#96              ; [CPU_] |4642| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4642| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4642| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4642| 
        ; call occurs [#FS$$CMP] ; [] |4642| 
        CMPB      AL,#0                 ; [CPU_] |4642| 
        B         $C$L139,NEQ           ; [CPU_] |4642| 
        ; branchcc occurs ; [] |4642| 
	.dwpsn	file "../Source/prod.c",line 4643,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4643| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4643| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4643| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4645,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4645| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4686,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4686| 
        MOVB      XAR0,#36              ; [CPU_] |4686| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4686| 
        B         $C$L320,EQ            ; [CPU_] |4686| 
        ; branchcc occurs ; [] |4686| 
	.dwpsn	file "../Source/prod.c",line 4690,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4690| 
        MOV       AL,#0                 ; [CPU_] |4690| 
        MOV       AH,#0                 ; [CPU_] |4690| 
	.dwpsn	file "../Source/prod.c",line 4691,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4690,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4690| 
	.dwpsn	file "../Source/prod.c",line 4691,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4691| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4692,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4692| 
        MOV       AL,#0                 ; [CPU_] |4692| 
        MOV       AH,#0                 ; [CPU_] |4692| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4693,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4693| 
        MOV       AL,*-SP[50]           ; [CPU_] |4693| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4693| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |4693| 
	.dwpsn	file "../Source/prod.c",line 4695,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4695| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4695| 
        ; branch occurs ; [] |4695| 
$C$L141:    
        MOVL      ACC,*-SP[58]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4696,column 6,is_stmt,isa 0
        MOV       PL,*-SP[53]           ; [CPU_] |4696| 
        MOVL      XAR0,#44              ; [CPU_] |4696| 
        ADD       ACC,PL                ; [CPU_] |4696| 
        MOVL      XAR7,ACC              ; [CPU_] |4696| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4696| 
        ADD       ACC,PL                ; [CPU_] |4696| 
        MOVL      XAR4,ACC              ; [CPU_] |4696| 
	.dwpsn	file "../Source/prod.c",line 4695,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4695| 
	.dwpsn	file "../Source/prod.c",line 4696,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4696| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4696| 
        MOV       AL,PL                 ; [CPU_] |4696| 
        ADDB      AL,#1                 ; [CPU_] |4696| 
        MOV       *-SP[53],AL           ; [CPU_] |4696| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4695,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4695| 
        B         $C$L141,HI            ; [CPU_] |4695| 
        ; branchcc occurs ; [] |4695| 
        B         $C$L743,UNC           ; [CPU_] |4695| 
        ; branch occurs ; [] |4695| 
$C$L143:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4503,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4503| 
        B         $C$L320,LO            ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
        MOVL      ACC,XAR4              ; [CPU_] |4503| 
        MOVL      XAR0,#66              ; [CPU_] |4503| 
        ADDB      ACC,#2                ; [CPU_] |4503| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4503| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4503| 
        B         $C$L320,LT            ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
        MOVL      XAR5,XAR4             ; [CPU_] |4503| 
        MOVL      XAR0,#66              ; [CPU_] |4503| 
        CMPB      AL,#4                 ; [CPU_] |4503| 
        ADDB      XAR5,#2               ; [CPU_] |4503| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4503| 
        B         $C$L320,GEQ           ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4503| 
        B         $C$L320,LT            ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
        CMPB      AH,#2                 ; [CPU_] |4503| 
        B         $C$L320,GT            ; [CPU_] |4503| 
        ; branchcc occurs ; [] |4503| 
        MOV       AH,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4509,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
	.dwpsn	file "../Source/prod.c",line 4512,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4512| 
        MOVZ      AR6,*-SP[50]          ; [CPU_] |4512| 
        MOVL      XAR0,#66              ; [CPU_] |4512| 
        MOVU      ACC,AL                ; [CPU_] |4512| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4512| 
        CMPL      ACC,XAR6              ; [CPU_] |4512| 
        B         $C$L145,EQ            ; [CPU_] |4512| 
        ; branchcc occurs ; [] |4512| 
        B         $C$L320,UNC           ; [CPU_] |4512| 
        ; branch occurs ; [] |4512| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4510,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4510| 
        MOVL      XAR0,#66              ; [CPU_] |4510| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4510| 
        MOV       *-SP[50],AL           ; [CPU_] |4510| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4510| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4518| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4517,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4517| 
        MOV       *-SP[39],AL           ; [CPU_] |4517| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4517| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4518| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4521,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4521| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4521,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4521| 
        MOVZ      AR4,AR4               ; [CPU_] |4521| 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4519| 
	.dwpsn	file "../Source/prod.c",line 4521,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4521| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4521| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4523,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4523| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4524,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4524| 
        MOV       *XAR7++,AL            ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4525,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4525| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4525| 
        MOV       *XAR4++,AL            ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4526,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4526| 
        MOV       *XAR7++,AL            ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4522,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4522| 
        ; branchcc occurs ; [] |4522| 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4529| 
        SUBB      XAR4,#24              ; [CPU_U] |4529| 
        MOVZ      AR4,AR4               ; [CPU_] |4529| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4529| 
        ADDL      XAR4,ACC              ; [CPU_] |4529| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4529| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4529| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4529| 
        MOVL      ACC,XAR1              ; [CPU_] |4529| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4529| 
        ; call occurs [#FS$$CMP] ; [] |4529| 
        CMPB      AL,#0                 ; [CPU_] |4529| 
        B         $C$L320,LT            ; [CPU_] |4529| 
        ; branchcc occurs ; [] |4529| 
        MOV       AL,#0                 ; [CPU_] |4529| 
        MOV       AH,#16672             ; [CPU_] |4529| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4529| 
        MOVL      ACC,XAR1              ; [CPU_] |4529| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4529| 
        ; call occurs [#FS$$CMP] ; [] |4529| 
        CMPB      AL,#0                 ; [CPU_] |4529| 
        B         $C$L320,GT            ; [CPU_] |4529| 
        ; branchcc occurs ; [] |4529| 
	.dwpsn	file "../Source/prod.c",line 4534,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4534| 
        MOV       AH,#16672             ; [CPU_] |4534| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4534| 
        MOVL      ACC,XAR1              ; [CPU_] |4534| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4534| 
        ; call occurs [#FS$$ADD] ; [] |4534| 
        MOVL      XAR6,ACC              ; [CPU_] |4534| 
        MOV       AL,#65024             ; [CPU_] |4534| 
        MOV       AH,#18175             ; [CPU_] |4534| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4534| 
        MOVL      ACC,XAR6              ; [CPU_] |4534| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4534| 
        ; call occurs [#FS$$MPY] ; [] |4534| 
        MOVL      XAR6,ACC              ; [CPU_] |4534| 
        MOV       AL,#0                 ; [CPU_] |4534| 
        MOV       AH,#16672             ; [CPU_] |4534| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4534| 
        MOVL      ACC,XAR6              ; [CPU_] |4534| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4534| 
        ; call occurs [#FS$$DIV] ; [] |4534| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4534| 
        ; call occurs [#FS$$TOLL] ; [] |4534| 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4535| 
	.dwpsn	file "../Source/prod.c",line 4534,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4534| 
	.dwpsn	file "../Source/prod.c",line 4525,column 6,is_stmt,isa 0
        MOV       *-SP[53],#8           ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4534,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4534| 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4535| 
        CMP64     ACC:P                 ; [CPU_] |4535| 
        B         $C$L148,LEQ           ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
	.dwpsn	file "../Source/prod.c",line 4537,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4537| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4537| 
        MOV       *-SP[2],#0            ; [CPU_] |4537| 
        MOV       *-SP[1],#0            ; [CPU_] |4537| 
        MOVL      P,*-SP[32]            ; [CPU_] |4537| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4537| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$626, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4537| 
        ; call occurs [#LL$$CMP] ; [] |4537| 
        CMPB      AL,#0                 ; [CPU_] |4537| 
        B         $C$L147,GEQ           ; [CPU_] |4537| 
        ; branchcc occurs ; [] |4537| 
	.dwpsn	file "../Source/prod.c",line 4540,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4540| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4540| 
        MOVU      ACC,AR4               ; [CPU_] |4540| 
        ADD       ACC,*-SP[51]          ; [CPU_] |4540| 
        MOVL      XAR1,ACC              ; [CPU_] |4540| 
        MOV       AL,*-SP[32]           ; [CPU_] |4540| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4540| 
        B         $C$L149,UNC           ; [CPU_] |4540| 
        ; branch occurs ; [] |4540| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4538,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4538| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4538| 
        MOVU      ACC,AR4               ; [CPU_] |4538| 
        ADD       ACC,*-SP[51]          ; [CPU_] |4538| 
        MOVL      XAR1,ACC              ; [CPU_] |4538| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4538| 
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4539| 
        ; branch occurs ; [] |4539| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4536,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4536| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4536| 
        MOVU      ACC,AR4               ; [CPU_] |4536| 
        ADD       ACC,*-SP[51]          ; [CPU_] |4536| 
        MOVL      XAR1,ACC              ; [CPU_] |4536| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4536| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4543,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4543| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4543| 
        ; call occurs [#_dac_setmode] ; [] |4543| 
	.dwpsn	file "../Source/prod.c",line 4545,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4545| 
        MOV       AH,*-SP[39]           ; [CPU_] |4545| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4545| 
        ; call occurs [#_mcbsp_xmit] ; [] |4545| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("_latch_dac")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4546| 
        ; call occurs [#_latch_dac] ; [] |4546| 
	.dwpsn	file "../Source/prod.c",line 4548,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4548| 
        MOV       T,*-SP[51]            ; [CPU_] |4548| 
        LSL       AL,T                  ; [CPU_] |4548| 
        OR        *-SP[48],AL           ; [CPU_] |4548| 
	.dwpsn	file "../Source/prod.c",line 4551,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4551| 
        ; branch occurs ; [] |4551| 
$C$L150:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4457,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4457| 
        B         $C$L320,LO            ; [CPU_] |4457| 
        ; branchcc occurs ; [] |4457| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4457| 
        MOVL      XAR0,#66              ; [CPU_] |4457| 
        MOVL      ACC,XAR5              ; [CPU_] |4457| 
        ADDB      ACC,#2                ; [CPU_] |4457| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4457| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4457| 
        MOVZ      AR7,AR6               ; [CPU_] |4457| 
        MOV       AL,*-SP[50]           ; [CPU_] |4457| 
        MOVU      ACC,AL                ; [CPU_] |4457| 
        CMPL      ACC,XAR7              ; [CPU_] |4457| 
        B         $C$L320,NEQ           ; [CPU_] |4457| 
        ; branchcc occurs ; [] |4457| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4457| 
        CMPB      AL,#7                 ; [CPU_] |4457| 
        B         $C$L320,NEQ           ; [CPU_] |4457| 
        ; branchcc occurs ; [] |4457| 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4463| 
        MOVL      ACC,XAR5              ; [CPU_] |4463| 
        MOVL      XAR0,#66              ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4462,column 5,is_stmt,isa 0
        MOV       *-SP[50],AR6          ; [CPU_] |4462| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4463| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4463| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4463| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[53],#3           ; [CPU_] |4463| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4466,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4466| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4468| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4469,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4469| 
        MOV       *XAR7++,AL            ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4470,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4470| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4470| 
        MOV       *XAR0++,AL            ; [CPU_] |4470| 
	.dwpsn	file "../Source/prod.c",line 4471,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4471| 
        MOV       *XAR7++,AL            ; [CPU_] |4471| 
	.dwpsn	file "../Source/prod.c",line 4467,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4467| 
        ; branchcc occurs ; [] |4467| 
	.dwpsn	file "../Source/prod.c",line 4465,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4465| 
	.dwpsn	file "../Source/prod.c",line 4471,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |4471| 
	.dwpsn	file "../Source/prod.c",line 4465,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4465| 
        ; branchcc occurs ; [] |4465| 
	.dwpsn	file "../Source/prod.c",line 4478,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4478| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4478| 
        ; call occurs [#U$$TOFS] ; [] |4478| 
        MOVL      XAR1,ACC              ; [CPU_] |4478| 
        MOV       AL,*-SP[35]           ; [CPU_] |4478| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4478| 
        ; call occurs [#U$$TOFS] ; [] |4478| 
        MOVL      XAR0,#40              ; [CPU_] |4478| 
        MOV       T,*-SP[50]            ; [CPU_] |4478| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4478| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4478| 
        MOVB      AL,#12                ; [CPU_] |4478| 
        MPYU      ACC,T,AL              ; [CPU_] |4478| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4478| 
        ADDL      ACC,XAR6              ; [CPU_] |4478| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4478| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4478| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4478| 
        ; call occurs [#FS$$SUB] ; [] |4478| 
        MOVL      XAR0,#42              ; [CPU_] |4478| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4478| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4478| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4478| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4478| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4478| 
        ; call occurs [#FS$$SUB] ; [] |4478| 
        MOVL      XAR0,#42              ; [CPU_] |4478| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4478| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4478| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4478| 
        ; call occurs [#FS$$DIV] ; [] |4478| 
        MOVL      XAR6,ACC              ; [CPU_] |4478| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |4478| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4478| 
        MOVL      XAR4,ACC              ; [CPU_] |4478| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4478| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4481| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4481| 
        ; call occurs [#U$$TOFS] ; [] |4481| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4481| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4481| 
        ; call occurs [#FS$$SUB] ; [] |4481| 
        MOVL      XAR1,ACC              ; [CPU_] |4481| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4481| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4481| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4481| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4481| 
        ; call occurs [#FS$$SUB] ; [] |4481| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4481| 
        MOVL      ACC,XAR1              ; [CPU_] |4481| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4481| 
        ; call occurs [#FS$$DIV] ; [] |4481| 
        MOVL      XAR1,*-SP[56]         ; [CPU_] |4481| 
        MOVL      XAR6,ACC              ; [CPU_] |4481| 
        MOVL      ACC,XAR1              ; [CPU_] |4481| 
        ADD       ACC,#49 << 6          ; [CPU_] |4481| 
        MOVL      XAR4,ACC              ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4484| 
        MOVL      XAR4,ACC              ; [CPU_] |4484| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4484| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4484| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4484| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4484| 
        ; call occurs [#FS$$MPY] ; [] |4484| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4484| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4484| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4484| 
        ; call occurs [#FS$$SUB] ; [] |4484| 
        MOVL      XAR6,ACC              ; [CPU_] |4484| 
        MOVL      ACC,XAR1              ; [CPU_] |4484| 
        ADD       ACC,#785 << 2         ; [CPU_] |4484| 
        MOVL      XAR4,ACC              ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4487,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4487| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4487,column 5,is_stmt,isa 0
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4487| 
        ; call occurs [#_dac_setmode] ; [] |4487| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4493,column 5,is_stmt,isa 0
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4493| 
        ; call occurs [#_ad7738_setcal] ; [] |4493| 
        MOVL      XAR0,#78              ; [CPU_] |4493| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4493| 
	.dwpsn	file "../Source/prod.c",line 4494,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |4494| 
        MOVL      XAR1,ACC              ; [CPU_] |4494| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4494| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4494| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4494| 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4495| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4495| 
        ; call occurs [#_ad7738_resetvall] ; [] |4495| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4488,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4499| 
        ; branch occurs ; [] |4499| 
$C$L153:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4401,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4401| 
        B         $C$L320,LO            ; [CPU_] |4401| 
        ; branchcc occurs ; [] |4401| 
        MOVL      ACC,XAR4              ; [CPU_] |4401| 
        MOVL      XAR0,#66              ; [CPU_] |4401| 
        MOVL      *-SP[56],XAR4         ; [CPU_] |4401| 
        ADDB      ACC,#2                ; [CPU_] |4401| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4401| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4401| 
        MOV       AL,*-SP[50]           ; [CPU_] |4401| 
        MOVU      ACC,AL                ; [CPU_] |4401| 
        CMPL      ACC,XAR6              ; [CPU_] |4401| 
        B         $C$L320,NEQ           ; [CPU_] |4401| 
        ; branchcc occurs ; [] |4401| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4401| 
        B         $C$L320,LT            ; [CPU_] |4401| 
        ; branchcc occurs ; [] |4401| 
        CMPB      AL,#2                 ; [CPU_] |4401| 
        B         $C$L320,GEQ           ; [CPU_] |4401| 
        ; branchcc occurs ; [] |4401| 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4408| 
	.dwpsn	file "../Source/prod.c",line 4407,column 5,is_stmt,isa 0
        MOVL      XAR5,*-SP[56]         ; [CPU_] |4407| 
        MOV       *-SP[39],AL           ; [CPU_] |4407| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4408| 
        MOVZ      AR7,AR6               ; [CPU_] |4408| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4410,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4410| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4410| 
	.dwpsn	file "../Source/prod.c",line 4409,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4409| 
        ADDB      XAR4,#2               ; [CPU_] |4409| 
	.dwpsn	file "../Source/prod.c",line 4410,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4410| 
	.dwpsn	file "../Source/prod.c",line 4409,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4409| 
        ; branchcc occurs ; [] |4409| 
	.dwpsn	file "../Source/prod.c",line 4413,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4413| 
        SUBB      XAR4,#24              ; [CPU_U] |4413| 
        MOVZ      AR1,AR4               ; [CPU_] |4413| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4413| 
        ADDL      XAR1,ACC              ; [CPU_] |4413| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4413| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4413| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4413| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4413| 
        ; call occurs [#FS$$CMP] ; [] |4413| 
        CMPB      AL,#0                 ; [CPU_] |4413| 
        B         $C$L320,NEQ           ; [CPU_] |4413| 
        ; branchcc occurs ; [] |4413| 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4417| 
        ; call occurs [#_lcd_clear] ; [] |4417| 
	.dwpsn	file "../Source/prod.c",line 4418,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4418| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4418| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4418| 
        ; call occurs [#_lcd_puts] ; [] |4418| 
	.dwpsn	file "../Source/prod.c",line 4419,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4419| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4419| 
        MOVL      XAR0,#44              ; [CPU_] |4419| 
        ADD       AL,*-SP[50]           ; [CPU_] |4419| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4419| 
        MOV       *-SP[3],AL            ; [CPU_] |4419| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4419| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("_sprintf")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4419| 
        ; call occurs [#_sprintf] ; [] |4419| 
        MOVL      XAR0,#44              ; [CPU_] |4419| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4420| 
	.dwpsn	file "../Source/prod.c",line 4419,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4419| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4420| 
        ; call occurs [#_lcd_puts] ; [] |4420| 
	.dwpsn	file "../Source/prod.c",line 4421,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4421| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4421| 
        MOVL      XAR0,#44              ; [CPU_] |4421| 
        ADD       AL,*-SP[39]           ; [CPU_] |4421| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4421| 
        MOV       *-SP[3],AL            ; [CPU_] |4421| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4421| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4421| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4421| 
        MOVL      XAR4,XAR1             ; [CPU_] |4421| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("_sprintf")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4421| 
        ; call occurs [#_sprintf] ; [] |4421| 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4422| 
	.dwpsn	file "../Source/prod.c",line 4421,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4421| 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4422| 
        ; call occurs [#_lcd_puts] ; [] |4422| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4423| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4423| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4423| 
        ; call occurs [#_lcd_puts] ; [] |4423| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4425| 
        SUBB      XAR4,#32              ; [CPU_U] |4425| 
        MOVZ      AR1,AR4               ; [CPU_] |4425| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4425| 
        ADDL      XAR1,ACC              ; [CPU_] |4425| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4426| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4425| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4425| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4425| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4427| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4427| 
        MOVB      ACC,#0                ; [CPU_] |4427| 
        SUBB      ACC,#1                ; [CPU_] |4427| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4427| 
        B         $C$L157,EQ            ; [CPU_] |4427| 
        ; branchcc occurs ; [] |4427| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4428,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4428| 
        ; branch occurs ; [] |4428| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4429,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4429| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("_delay_us")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4429| 
        ; call occurs [#_delay_us] ; [] |4429| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4428,column 13,is_stmt,isa 0
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4428| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4428| 
        CMPB      AL,#0                 ; [CPU_] |4428| 
        B         $C$L155,EQ            ; [CPU_] |4428| 
        ; branchcc occurs ; [] |4428| 
	.dwpsn	file "../Source/prod.c",line 4431,column 6,is_stmt,isa 0
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4431| 
        ; call occurs [#_ad7738_getraw] ; [] |4431| 
	.dwpsn	file "../Source/prod.c",line 4432,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |4432| 
        ADDL      XAR4,ACC              ; [CPU_] |4432| 
        MOVL      XAR0,#22              ; [CPU_] |4432| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4432| 
        MOVL      XAR0,#22              ; [CPU_] |4432| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4432| 
        ASR64     ACC:P,16              ; [CPU_] |4432| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4432| 
        MOVL      XAR0,#22              ; [CPU_] |4432| 
        ASR64     ACC:P,16              ; [CPU_] |4432| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4432| 
        MOVL      XAR0,#22              ; [CPU_] |4432| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4432| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4432| 
        MOVL      XAR0,#22              ; [CPU_] |4432| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4432| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4432| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4432| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4432| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4427| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4427| 
        MOVB      ACC,#0                ; [CPU_] |4427| 
        SUBB      ACC,#1                ; [CPU_] |4427| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4427| 
        B         $C$L156,NEQ           ; [CPU_] |4427| 
        ; branchcc occurs ; [] |4427| 
$C$L157:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4434| 
        B         $C$L158,NEQ           ; [CPU_] |4434| 
        ; branchcc occurs ; [] |4434| 
	.dwpsn	file "../Source/prod.c",line 4435,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4435| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4435| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4435| 
        ; call occurs [#FS$$SUB] ; [] |4435| 
        MOVL      XAR6,ACC              ; [CPU_] |4435| 
        MOV       AL,#16384             ; [CPU_] |4435| 
        MOV       AH,#17948             ; [CPU_] |4435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4435| 
        MOVL      ACC,XAR6              ; [CPU_] |4435| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4435| 
        ; call occurs [#FS$$MPY] ; [] |4435| 
        MOVL      XAR1,ACC              ; [CPU_] |4435| 
        MOVL      P,*-SP[28]            ; [CPU_] |4435| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4435| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4435| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4435| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4435| 
        ; call occurs [#LL$$TOFS] ; [] |4435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4435| 
        MOVL      ACC,XAR1              ; [CPU_] |4435| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4435| 
        ; call occurs [#FS$$DIV] ; [] |4435| 
        MOVL      XAR0,#40              ; [CPU_] |4435| 
        MOV       T,*-SP[50]            ; [CPU_] |4435| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4435| 
        MOVL      XAR6,ACC              ; [CPU_] |4435| 
        MOVB      AL,#10                ; [CPU_] |4435| 
        MPYU      ACC,T,AL              ; [CPU_] |4435| 
        ADDL      ACC,XAR7              ; [CPU_] |4435| 
        MOVL      XAR4,ACC              ; [CPU_] |4435| 
        MOVB      XAR0,#44              ; [CPU_] |4435| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4435| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4440,column 6,is_stmt,isa 0
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4440| 
        ; call occurs [#_ad7738_setcal] ; [] |4440| 
        MOVL      XAR0,#78              ; [CPU_] |4440| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4440| 
	.dwpsn	file "../Source/prod.c",line 4441,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |4441| 
        MOVL      XAR1,ACC              ; [CPU_] |4441| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4441| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4441| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4441| 
	.dwpsn	file "../Source/prod.c",line 4442,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4442| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4442| 
        ; call occurs [#_ad7738_resetvall] ; [] |4442| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4438,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |4438| 
$C$L158:    
        MOVL      XAR7,*-SP[56]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4445,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4445| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4446,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4446| 
	.dwpsn	file "../Source/prod.c",line 4445,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4446,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4446| 
	.dwpsn	file "../Source/prod.c",line 4445,column 17,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4446,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4446| 
	.dwpsn	file "../Source/prod.c",line 4445,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4445| 
        B         $C$L159,HI            ; [CPU_] |4445| 
        ; branchcc occurs ; [] |4445| 
	.dwpsn	file "../Source/prod.c",line 4448,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4448| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4451,column 5,is_stmt,isa 0
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4451| 
        ; call occurs [#_lcd_clear] ; [] |4451| 
	.dwpsn	file "../Source/prod.c",line 4452,column 5,is_stmt,isa 0
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("_update_units")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4452| 
        ; call occurs [#_update_units] ; [] |4452| 
	.dwpsn	file "../Source/prod.c",line 4453,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4453| 
        ; branch occurs ; [] |4453| 
$C$L160:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4376,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4376| 
        B         $C$L320,LO            ; [CPU_] |4376| 
        ; branchcc occurs ; [] |4376| 
        MOVL      ACC,XAR4              ; [CPU_] |4376| 
        MOVL      XAR0,#66              ; [CPU_] |4376| 
        ADDB      ACC,#2                ; [CPU_] |4376| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4376| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4376| 
        B         $C$L320,LT            ; [CPU_] |4376| 
        ; branchcc occurs ; [] |4376| 
        MOVL      XAR5,XAR4             ; [CPU_] |4376| 
        MOVL      XAR0,#66              ; [CPU_] |4376| 
        CMPB      AL,#4                 ; [CPU_] |4376| 
        ADDB      XAR5,#2               ; [CPU_] |4376| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4376| 
        B         $C$L320,GEQ           ; [CPU_] |4376| 
        ; branchcc occurs ; [] |4376| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4376| 
        CMPB      AH,#2                 ; [CPU_] |4376| 
        B         $C$L320,NEQ           ; [CPU_] |4376| 
        ; branchcc occurs ; [] |4376| 
	.dwpsn	file "../Source/prod.c",line 4383,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4383| 
        MOVL      XAR0,#66              ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4382,column 5,is_stmt,isa 0
        MOV       *-SP[50],AL           ; [CPU_] |4382| 
	.dwpsn	file "../Source/prod.c",line 4386,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4386| 
	.dwpsn	file "../Source/prod.c",line 4383,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4383| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4383| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4384,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4384| 
        MOV       *-SP[53],#4           ; [CPU_] |4384| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4386,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4386| 
        ; branch occurs ; [] |4386| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4387,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4387| 
        SUBB      XAR4,#24              ; [CPU_U] |4387| 
        MOVZ      AR4,AR4               ; [CPU_] |4387| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4387| 
        MOVL      XAR0,#44              ; [CPU_] |4387| 
        ADDL      XAR4,ACC              ; [CPU_] |4387| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4387| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4389,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4389| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4389| 
	.dwpsn	file "../Source/prod.c",line 4390,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4390| 
        MOV       *XAR7++,AL            ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4391,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4391| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4391| 
        MOV       *XAR4++,AL            ; [CPU_] |4391| 
	.dwpsn	file "../Source/prod.c",line 4392,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4392| 
        MOV       *XAR7++,AL            ; [CPU_] |4392| 
	.dwpsn	file "../Source/prod.c",line 4388,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4388| 
        ; branchcc occurs ; [] |4388| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4392,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |4392| 
	.dwpsn	file "../Source/prod.c",line 4386,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4386| 
        MOV       PL,AL                 ; [CPU_] |4386| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4386,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4386| 
        MOV       AL,PL                 ; [CPU_] |4386| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4386| 
        B         $C$L161,LT            ; [CPU_] |4386| 
        ; branchcc occurs ; [] |4386| 
        B         $C$L743,UNC           ; [CPU_] |4386| 
        ; branch occurs ; [] |4386| 
$C$L164:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5331,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5331| 
        B         $C$L320,LO            ; [CPU_] |5331| 
        ; branchcc occurs ; [] |5331| 
	.dwpsn	file "../Source/prod.c",line 5336,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5336| 
        MOVL      XAR0,#66              ; [CPU_] |5336| 
        MOVL      ACC,XAR7              ; [CPU_] |5336| 
        ADDB      ACC,#2                ; [CPU_] |5336| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5336| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GT            ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVB      XAR0,#13              ; [CPU_] |5336| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GT            ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVB      XAR0,#24              ; [CPU_] |5336| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GT            ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVB      XAR0,#35              ; [CPU_] |5336| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GT            ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GEQ           ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVB      XAR0,#14              ; [CPU_] |5336| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GEQ           ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVB      XAR0,#25              ; [CPU_] |5336| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GEQ           ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVB      XAR0,#36              ; [CPU_] |5336| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5336| 
        CMPB      AL,#4                 ; [CPU_] |5336| 
        B         $C$L320,GEQ           ; [CPU_] |5336| 
        ; branchcc occurs ; [] |5336| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5344| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5344| 
        MOVL      XAR6,ACC              ; [CPU_] |5344| 
        MOV       AL,*XAR7              ; [CPU_] |5344| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5345| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5345| 
        MOVL      XAR6,ACC              ; [CPU_] |5345| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5345| 
        MOV       *XAR4++,AL            ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5346| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5346| 
        MOVL      XAR6,ACC              ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5346| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5347,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5347| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5347| 
        MOVL      XAR6,ACC              ; [CPU_] |5347| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5347,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5347| 
        MOV       *XAR4++,AL            ; [CPU_] |5347| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5348| 
        ANDB      AL,#0xfe              ; [CPU_] |5348| 
        MOVZ      AR0,AL                ; [CPU_] |5348| 
        MOVL      ACC,XAR5              ; [CPU_] |5348| 
        ADD       ACC,#199 << 4         ; [CPU_] |5348| 
        MOVL      XAR6,ACC              ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5349| 
        ADD       ACC,#199 << 4         ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5349| 
        MOVL      XAR0,P                ; [CPU_] |5349| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5349| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5349| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5353,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5353| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5354,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5354| 
        MOV       *XAR4++,AL            ; [CPU_] |5354| 
	.dwpsn	file "../Source/prod.c",line 5355,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5355| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5355| 
        MOV       *XAR0++,AL            ; [CPU_] |5355| 
	.dwpsn	file "../Source/prod.c",line 5356,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5356| 
        MOV       *XAR4++,AL            ; [CPU_] |5356| 
	.dwpsn	file "../Source/prod.c",line 5352,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5352| 
        ; branchcc occurs ; [] |5352| 
	.dwpsn	file "../Source/prod.c",line 5359,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5359| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5361,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5361| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5362,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5362| 
        MOV       *XAR4++,AL            ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5363| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5363| 
        MOV       *XAR0++,AL            ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5364,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5364| 
        MOV       *XAR4++,AL            ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5360,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5360| 
        ; branchcc occurs ; [] |5360| 
	.dwpsn	file "../Source/prod.c",line 5343,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5346| 
        ADD       *-SP[53],#11          ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5343,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5343| 
        ADDB      XAR1,#8               ; [CPU_] |5343| 
        ADDB      ACC,#8                ; [CPU_] |5343| 
        SUBB      XAR6,#1               ; [CPU_U] |5343| 
        MOVZ      AR3,AR6               ; [CPU_] |5343| 
        MOVL      P,ACC                 ; [CPU_] |5343| 
        CMP       AR6,#-1               ; [CPU_] |5343| 
        B         $C$L165,NEQ           ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        B         $C$L176,UNC           ; [CPU_] |5343| 
        ; branch occurs ; [] |5343| 
$C$L168:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5268| 
        B         $C$L320,LO            ; [CPU_] |5268| 
        ; branchcc occurs ; [] |5268| 
	.dwpsn	file "../Source/prod.c",line 5273,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5273| 
        MOVL      XAR0,#66              ; [CPU_] |5273| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5273| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L169,LEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        CMPB      AL,#7                 ; [CPU_] |5273| 
        B         $C$L320,NEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5273| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L170,LEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        CMPB      AL,#7                 ; [CPU_] |5273| 
        B         $C$L320,NEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5273| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L171,LEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        CMPB      AL,#7                 ; [CPU_] |5273| 
        B         $C$L320,NEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5273| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L172,LEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        CMPB      AL,#7                 ; [CPU_] |5273| 
        B         $C$L320,NEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5273| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L320,GEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        MOVB      XAR0,#13              ; [CPU_] |5273| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L320,GEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        MOVB      XAR0,#23              ; [CPU_] |5273| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L320,GEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        MOVB      XAR0,#33              ; [CPU_] |5273| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5273| 
        CMPB      AL,#4                 ; [CPU_] |5273| 
        B         $C$L320,GEQ           ; [CPU_] |5273| 
        ; branchcc occurs ; [] |5273| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5284| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5284| 
        MOVL      XAR5,ACC              ; [CPU_] |5284| 
        MOV       AL,*XAR7              ; [CPU_] |5284| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5285,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5285| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5285| 
        MOVL      XAR5,ACC              ; [CPU_] |5285| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5285| 
        MOV       *XAR4++,AL            ; [CPU_] |5285| 
	.dwpsn	file "../Source/prod.c",line 5286,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5286| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5286| 
        MOVL      XAR5,ACC              ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5286,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5286| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5287,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5287| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5287| 
        MOVL      XAR5,ACC              ; [CPU_] |5287| 
	.dwpsn	file "../Source/prod.c",line 5286,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5287,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5287| 
        MOVL      XAR5,P                ; [CPU_] |5287| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5287| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5298,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5298| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5299| 
        MOV       *XAR4++,AL            ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5300,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5300| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5300| 
        MOV       *XAR5++,AL            ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5301,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5301| 
        MOV       *XAR4++,AL            ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5297,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5297| 
        ; branchcc occurs ; [] |5297| 
	.dwpsn	file "../Source/prod.c",line 5307,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5307| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5314,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5314| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5315,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5315| 
        MOV       *XAR4++,AL            ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5316,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5316| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5316| 
        MOV       *XAR5++,AL            ; [CPU_] |5316| 
	.dwpsn	file "../Source/prod.c",line 5317,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5317| 
        MOV       *XAR4++,AL            ; [CPU_] |5317| 
	.dwpsn	file "../Source/prod.c",line 5313,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5313| 
        ; branchcc occurs ; [] |5313| 
	.dwpsn	file "../Source/prod.c",line 5283,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5286,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5286| 
        ADD       *-SP[53],#10          ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5283,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5283| 
        ADDB      XAR1,#12              ; [CPU_] |5283| 
        ADDB      ACC,#12               ; [CPU_] |5283| 
        SUBB      XAR6,#1               ; [CPU_U] |5283| 
        MOVZ      AR3,AR6               ; [CPU_] |5283| 
        MOVL      P,ACC                 ; [CPU_] |5283| 
        CMP       AR6,#-1               ; [CPU_] |5283| 
        B         $C$L173,NEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5324,column 5,is_stmt,isa 0
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5324| 
        ; call occurs [#_ad7738_setcal] ; [] |5324| 
	.dwpsn	file "../Source/prod.c",line 5327,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5327| 
        ; branch occurs ; [] |5327| 
$C$L177:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5236,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5236| 
        B         $C$L320,LO            ; [CPU_] |5236| 
        ; branchcc occurs ; [] |5236| 
	.dwpsn	file "../Source/prod.c",line 5241,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5241| 
        MOVL      XAR0,#66              ; [CPU_] |5241| 
        MOVL      ACC,XAR7              ; [CPU_] |5241| 
        ADDB      ACC,#2                ; [CPU_] |5241| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5241| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GT            ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GT            ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVB      XAR0,#8               ; [CPU_] |5241| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GT            ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVB      XAR0,#11              ; [CPU_] |5241| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GT            ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5241| 
        CMPB      AL,#4                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5241| 
        CMPB      AL,#4                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVB      XAR0,#9               ; [CPU_] |5241| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5241| 
        CMPB      AL,#4                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVB      XAR0,#12              ; [CPU_] |5241| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5241| 
        CMPB      AL,#4                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVL      ACC,XAR7              ; [CPU_] |5241| 
        MOVL      XAR0,#64              ; [CPU_] |5241| 
        ADDB      ACC,#4                ; [CPU_] |5241| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5241| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVB      XAR0,#10              ; [CPU_] |5241| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVB      XAR0,#13              ; [CPU_] |5241| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5241| 
        CMPB      AL,#6                 ; [CPU_] |5241| 
        B         $C$L320,GEQ           ; [CPU_] |5241| 
        ; branchcc occurs ; [] |5241| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5252,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5252| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5252| 
	.dwpsn	file "../Source/prod.c",line 5253,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5253| 
	.dwpsn	file "../Source/prod.c",line 5252,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5252| 
	.dwpsn	file "../Source/prod.c",line 5253,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5253| 
	.dwpsn	file "../Source/prod.c",line 5254,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5254| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5254| 
        ADDB      XAR7,#1               ; [CPU_] |5254| 
	.dwpsn	file "../Source/prod.c",line 5255,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5255| 
        MOV       *XAR4++,AL            ; [CPU_] |5255| 
	.dwpsn	file "../Source/prod.c",line 5256,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5256| 
        ADDB      XAR7,#1               ; [CPU_] |5256| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5256| 
	.dwpsn	file "../Source/prod.c",line 5257,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5257| 
	.dwpsn	file "../Source/prod.c",line 5251,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5257,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5257| 
	.dwpsn	file "../Source/prod.c",line 5251,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5251| 
        ; branchcc occurs ; [] |5251| 
	.dwpsn	file "../Source/prod.c",line 5261,column 5,is_stmt,isa 0
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5261| 
        ; call occurs [#_lcd_clear] ; [] |5261| 
	.dwpsn	file "../Source/prod.c",line 5262,column 5,is_stmt,isa 0
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("_update_units")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5262| 
        ; call occurs [#_update_units] ; [] |5262| 
	.dwpsn	file "../Source/prod.c",line 5257,column 6,is_stmt,isa 0
        ADD       *-SP[53],#12          ; [CPU_] |5257| 
	.dwpsn	file "../Source/prod.c",line 5264,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5264| 
        ; branch occurs ; [] |5264| 
$C$L179:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5215,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5215| 
        B         $C$L320,LO            ; [CPU_] |5215| 
        ; branchcc occurs ; [] |5215| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5220,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5220| 
        MOVB      XAR0,#36              ; [CPU_] |5220| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5220| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5220| 
	.dwpsn	file "../Source/prod.c",line 5221,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5221| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5221| 
        B         $C$L181,NEQ           ; [CPU_] |5221| 
        ; branchcc occurs ; [] |5221| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5223,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5223| 
	.dwpsn	file "../Source/prod.c",line 5224,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5224| 
	.dwpsn	file "../Source/prod.c",line 5222,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5222| 
        ; branchcc occurs ; [] |5222| 
	.dwpsn	file "../Source/prod.c",line 5226,column 6,is_stmt,isa 0
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("_update_units")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5226| 
        ; call occurs [#_update_units] ; [] |5226| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5230,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5230| 
	.dwpsn	file "../Source/prod.c",line 5232,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5232| 
        ; branch occurs ; [] |5232| 
$C$L182:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5174,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5174| 
        B         $C$L320,LO            ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
	.dwpsn	file "../Source/prod.c",line 5180,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5180| 
        ADDB      XAR4,#2               ; [CPU_] |5180| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5180| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5180| 
        MOVZ      AR3,AL                ; [CPU_] |5180| 
	.dwpsn	file "../Source/prod.c",line 5181,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5181| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5181| 
        CMP       AR3,#4096             ; [CPU_] |5181| 
        B         $C$L320,HI            ; [CPU_] |5181| 
        ; branchcc occurs ; [] |5181| 
	.dwpsn	file "../Source/prod.c",line 5187,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5187| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5187| 
        MOVZ      AR7,AR6               ; [CPU_] |5187| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5189,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5189| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5189| 
	.dwpsn	file "../Source/prod.c",line 5188,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5188| 
        ADDB      XAR4,#2               ; [CPU_] |5188| 
	.dwpsn	file "../Source/prod.c",line 5189,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5189| 
	.dwpsn	file "../Source/prod.c",line 5188,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5188| 
        ; branchcc occurs ; [] |5188| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5194,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5194| 
        MOVB      XAR1,#38              ; [CPU_] |5194| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5194| 
	.dwpsn	file "../Source/prod.c",line 5195,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5195| 
        MOVB      XAR1,#40              ; [CPU_] |5195| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5195| 
	.dwpsn	file "../Source/prod.c",line 5196,column 5,is_stmt,isa 0
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("_maf_rst")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5196| 
        ; call occurs [#_maf_rst] ; [] |5196| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5201| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5201| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5202| 
        LSR       AL,8                  ; [CPU_] |5202| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5205| 
        MOVB      XAR1,#40              ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5206| 
        MOVL      XAR0,#50              ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5205| 
        ANDB      AL,#0xff              ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5207,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5207| 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5206| 
        LSR       AL,8                  ; [CPU_] |5206| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5207,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5207| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5207| 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5208| 
	.dwpsn	file "../Source/prod.c",line 5207,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5207| 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5208| 
        MOV       *-SP[53],#8           ; [CPU_] |5208| 
	.dwpsn	file "../Source/prod.c",line 5211,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5211| 
        ; branch occurs ; [] |5211| 
$C$L184:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5141,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5141| 
        B         $C$L320,LO            ; [CPU_] |5141| 
        ; branchcc occurs ; [] |5141| 
        MOVL      ACC,XAR4              ; [CPU_] |5141| 
        MOVL      XAR0,#66              ; [CPU_] |5141| 
        ADDB      ACC,#2                ; [CPU_] |5141| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5141| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5141| 
        B         $C$L320,LT            ; [CPU_] |5141| 
        ; branchcc occurs ; [] |5141| 
        MOVL      XAR5,XAR4             ; [CPU_] |5141| 
        MOVL      XAR0,#66              ; [CPU_] |5141| 
        CMPB      AL,#4                 ; [CPU_] |5141| 
        ADDB      XAR5,#2               ; [CPU_] |5141| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5141| 
        B         $C$L320,GEQ           ; [CPU_] |5141| 
        ; branchcc occurs ; [] |5141| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5141| 
        B         $C$L320,LT            ; [CPU_] |5141| 
        ; branchcc occurs ; [] |5141| 
        CMPB      AH,#20                ; [CPU_] |5141| 
        B         $C$L320,GEQ           ; [CPU_] |5141| 
        ; branchcc occurs ; [] |5141| 
	.dwpsn	file "../Source/prod.c",line 5151,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5151| 
        MOVL      XAR0,#66              ; [CPU_] |5151| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5151| 
        MOVL      XAR0,#80              ; [CPU_] |5151| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5151| 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        MOVL      *-SP[50],ACC          ; [CPU_] |5149| 
	.dwpsn	file "../Source/prod.c",line 5151,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[50]          ; [CPU_] |5151| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5151| 
        B         $C$L318,NEQ           ; [CPU_] |5151| 
        ; branchcc occurs ; [] |5151| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5157,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5157| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5157| 
        MOVB      AL,#10                ; [CPU_] |5157| 
        MOV       T,*-SP[50]            ; [CPU_] |5157| 
        MPYU      ACC,T,AL              ; [CPU_] |5157| 
        ADDL      ACC,XAR6              ; [CPU_] |5157| 
        MOVL      XAR4,ACC              ; [CPU_] |5157| 
        MOVB      XAR0,#42              ; [CPU_] |5157| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[49]           ; [CPU_] |5157| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5157| 
	.dwpsn	file "../Source/prod.c",line 5158,column 5,is_stmt,isa 0
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5158| 
        ; call occurs [#_ad7738_setcal] ; [] |5158| 
        MOVL      XAR0,#78              ; [CPU_] |5158| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5158| 
	.dwpsn	file "../Source/prod.c",line 5160,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |5160| 
        MOVL      XAR1,ACC              ; [CPU_] |5160| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5160| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5160| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5160| 
	.dwpsn	file "../Source/prod.c",line 5161,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5161| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5161| 
        ; call occurs [#_ad7738_resetvall] ; [] |5161| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5164,column 5,is_stmt,isa 0
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_update_units")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5164| 
        ; call occurs [#_update_units] ; [] |5164| 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5167| 
        MOV       AL,*-SP[50]           ; [CPU_] |5167| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5167| 
        MOV       AL,*-SP[49]           ; [CPU_] |5167| 
	.dwpsn	file "../Source/prod.c",line 5168,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5168| 
        MOV       *-SP[53],#4           ; [CPU_] |5168| 
	.dwpsn	file "../Source/prod.c",line 5170,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5170| 
        ; branch occurs ; [] |5170| 
$C$L185:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5105,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5105| 
        B         $C$L320,LO            ; [CPU_] |5105| 
        ; branchcc occurs ; [] |5105| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5111,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5111| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5113,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5113| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5114,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5114| 
        MOV       *XAR5++,AL            ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5115,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5115| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5115| 
        MOV       *XAR1++,AL            ; [CPU_] |5115| 
	.dwpsn	file "../Source/prod.c",line 5116,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5116| 
        MOV       *XAR5++,AL            ; [CPU_] |5116| 
	.dwpsn	file "../Source/prod.c",line 5112,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5112| 
        ; branchcc occurs ; [] |5112| 
	.dwpsn	file "../Source/prod.c",line 5110,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5110| 
	.dwpsn	file "../Source/prod.c",line 5116,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |5116| 
	.dwpsn	file "../Source/prod.c",line 5110,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5110| 
        ; branchcc occurs ; [] |5110| 
	.dwpsn	file "../Source/prod.c",line 5121,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5121| 
        MOVL      ACC,XAR4              ; [CPU_] |5121| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5121| 
        MOVL      XAR6,ACC              ; [CPU_] |5121| 
        MOV       AL,*XAR7              ; [CPU_] |5121| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5122,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5122| 
        MOVL      XAR6,XAR4             ; [CPU_] |5122| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5122| 
        MOVL      XAR4,ACC              ; [CPU_] |5122| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5122| 
        ANDB      AL,#0xff              ; [CPU_] |5122| 
        MOV       *XAR5++,AL            ; [CPU_] |5122| 
	.dwpsn	file "../Source/prod.c",line 5123,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5123| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5123| 
        MOVL      XAR4,ACC              ; [CPU_] |5123| 
	.dwpsn	file "../Source/prod.c",line 5121,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5123,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5123| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5123| 
	.dwpsn	file "../Source/prod.c",line 5124,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5124| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5124| 
        MOVL      XAR4,ACC              ; [CPU_] |5124| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5124| 
        LSR       AL,8                  ; [CPU_] |5124| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5124| 
	.dwpsn	file "../Source/prod.c",line 5123,column 5,is_stmt,isa 0
        ADD       *-SP[53],#2           ; [CPU_] |5123| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5129,column 5,is_stmt,isa 0
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5129| 
        ; call occurs [#_ad7738_setcal] ; [] |5129| 
	.dwpsn	file "../Source/prod.c",line 5130,column 5,is_stmt,isa 0
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_velf_rst")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5130| 
        ; call occurs [#_velf_rst] ; [] |5130| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5134,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5134| 
        ; branch occurs ; [] |5134| 
$C$L189:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5066,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5066| 
        B         $C$L320,LO            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        MOVL      ACC,XAR4              ; [CPU_] |5066| 
        MOVL      XAR0,#66              ; [CPU_] |5066| 
        ADDB      ACC,#2                ; [CPU_] |5066| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5066| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5066| 
        B         $C$L320,LT            ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
        MOVL      XAR5,XAR4             ; [CPU_] |5066| 
        MOVL      XAR0,#66              ; [CPU_] |5066| 
        CMPB      AL,#20                ; [CPU_] |5066| 
        ADDB      XAR5,#2               ; [CPU_] |5066| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5066| 
        B         $C$L320,GEQ           ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
	.dwpsn	file "../Source/prod.c",line 5070,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |5070| 
	.dwpsn	file "../Source/prod.c",line 5071,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5071| 
	.dwpsn	file "../Source/prod.c",line 5073,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5073| 
	.dwpsn	file "../Source/prod.c",line 5071,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5071| 
	.dwpsn	file "../Source/prod.c",line 5073,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5073| 
        ADDB      ACC,#2                ; [CPU_] |5073| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5073| 
        MOVL      XAR0,#40              ; [CPU_] |5073| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5073| 
        MOV       T,*-SP[49]            ; [CPU_] |5073| 
        MOVB      AL,#152               ; [CPU_] |5073| 
        MPYU      ACC,T,AL              ; [CPU_] |5073| 
        ADDL      ACC,XAR6              ; [CPU_] |5073| 
        ADDB      ACC,#224              ; [CPU_] |5073| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5073| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5075,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5075| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5075| 
	.dwpsn	file "../Source/prod.c",line 5076,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5076| 
        MOV       *XAR5++,AL            ; [CPU_] |5076| 
	.dwpsn	file "../Source/prod.c",line 5077,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5077| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5077| 
        MOV       *XAR7++,AL            ; [CPU_] |5077| 
	.dwpsn	file "../Source/prod.c",line 5078,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5078| 
        MOV       *XAR5++,AL            ; [CPU_] |5078| 
	.dwpsn	file "../Source/prod.c",line 5074,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5074| 
        ; branchcc occurs ; [] |5074| 
	.dwpsn	file "../Source/prod.c",line 5083,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5083| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5083| 
        MOVB      AL,#152               ; [CPU_] |5083| 
        MPYU      ACC,T,AL              ; [CPU_] |5083| 
        ADDL      ACC,XAR6              ; [CPU_] |5083| 
        MOVL      XAR1,ACC              ; [CPU_] |5083| 
        MOVB      XAR0,#125             ; [CPU_] |5083| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5083| 
        CMPB      AL,#247               ; [CPU_] |5083| 
        B         $C$L193,NEQ           ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
	.dwpsn	file "../Source/prod.c",line 5085,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5085| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5085| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5085| 
        MOV       AL,#0                 ; [CPU_] |5085| 
        MOV       AH,#17096             ; [CPU_] |5085| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5085| 
        ; call occurs [#FS$$DIV] ; [] |5085| 
        MOVB      XAR0,#126             ; [CPU_] |5085| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5085| 
        MOVL      XAR0,#40              ; [CPU_] |5085| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5085| 
	.dwpsn	file "../Source/prod.c",line 5088,column 11,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |5088| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5089,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |5089| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5089| 
        CMPL      ACC,XAR6              ; [CPU_] |5089| 
        B         $C$L192,NEQ           ; [CPU_] |5089| 
        ; branchcc occurs ; [] |5089| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5092,column 8,is_stmt,isa 0
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5092| 
        ; call occurs [#_ad7738_setcal] ; [] |5092| 
        MOVL      XAR0,#78              ; [CPU_] |5092| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5092| 
	.dwpsn	file "../Source/prod.c",line 5093,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |5093| 
        MOVL      XAR4,ACC              ; [CPU_] |5093| 
        MOVL      *-SP[56],ACC          ; [CPU_] |5093| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5093| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5093| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5093| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5093| 
	.dwpsn	file "../Source/prod.c",line 5094,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5094| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5094| 
        ; call occurs [#_ad7738_resetvall] ; [] |5094| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5088,column 19,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |5088| 
        ADDB      XAR1,#10              ; [CPU_] |5088| 
        MOV       AL,*-SP[50]           ; [CPU_] |5088| 
        CMPB      AL,#4                 ; [CPU_] |5088| 
        B         $C$L191,LO            ; [CPU_] |5088| 
        ; branchcc occurs ; [] |5088| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5077,column 6,is_stmt,isa 0
        MOV       *-SP[53],#7           ; [CPU_] |5077| 
	.dwpsn	file "../Source/prod.c",line 5101,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5101| 
        ; branch occurs ; [] |5101| 
$C$L194:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4965,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4965| 
        B         $C$L320,LO            ; [CPU_] |4965| 
        ; branchcc occurs ; [] |4965| 
        MOVL      ACC,XAR4              ; [CPU_] |4965| 
        MOVL      XAR0,#66              ; [CPU_] |4965| 
        ADDB      ACC,#2                ; [CPU_] |4965| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4965| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4965| 
        B         $C$L320,LT            ; [CPU_] |4965| 
        ; branchcc occurs ; [] |4965| 
        MOVL      XAR5,XAR4             ; [CPU_] |4965| 
        MOVL      XAR0,#66              ; [CPU_] |4965| 
        CMPB      AL,#20                ; [CPU_] |4965| 
        ADDB      XAR5,#2               ; [CPU_] |4965| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4965| 
        B         $C$L320,GEQ           ; [CPU_] |4965| 
        ; branchcc occurs ; [] |4965| 
	.dwpsn	file "../Source/prod.c",line 4970,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |4970| 
        MOVL      XAR0,#66              ; [CPU_] |4970| 
        MOV       *-SP[49],AL           ; [CPU_] |4970| 
        ADDB      XAR5,#2               ; [CPU_] |4970| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4970| 
	.dwpsn	file "../Source/prod.c",line 4971,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |4971| 
        MOV       AL,AR6                ; [CPU_] |4971| 
        CMPB      AL,#247               ; [CPU_] |4971| 
        B         $C$L195,EQ            ; [CPU_] |4971| 
        ; branchcc occurs ; [] |4971| 
	.dwpsn	file "../Source/prod.c",line 4973,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4973| 
        MOVL      XAR0,#66              ; [CPU_] |4973| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4973| 
        MOVL      XAR0,#40              ; [CPU_] |4973| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4973| 
        MOVB      AL,#152               ; [CPU_] |4973| 
        MOV       T,*-SP[49]            ; [CPU_] |4973| 
        MPYU      ACC,T,AL              ; [CPU_] |4973| 
        ADDL      ACC,XAR7              ; [CPU_] |4973| 
        MOVL      XAR4,ACC              ; [CPU_] |4973| 
        MOVB      XAR0,#124             ; [CPU_] |4973| 
        MOV       PH,#0                 ; [CPU_] |4973| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4973| 
        ANDB      AL,#0xf0              ; [CPU_] |4973| 
        MOVU      ACC,AL                ; [CPU_] |4973| 
        MOVL      XAR7,ACC              ; [CPU_] |4973| 
        MOV       AL,AR6                ; [CPU_] |4973| 
        ANDB      AL,#240               ; [CPU_] |4973| 
        MOV       PL,AL                 ; [CPU_] |4973| 
        MOVL      ACC,XAR7              ; [CPU_] |4973| 
        CMPL      ACC,P                 ; [CPU_] |4973| 
        B         $C$L320,NEQ           ; [CPU_] |4973| 
        ; branchcc occurs ; [] |4973| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 4979,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4979| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4979| 
        MOVB      AL,#152               ; [CPU_] |4979| 
        MOV       T,*-SP[49]            ; [CPU_] |4979| 
        MPYU      ACC,T,AL              ; [CPU_] |4979| 
        ADDL      ACC,XAR7              ; [CPU_] |4979| 
        MOVL      XAR1,ACC              ; [CPU_] |4979| 
        MOVB      XAR0,#125             ; [CPU_] |4979| 
	.dwpsn	file "../Source/prod.c",line 4980,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4980| 
	.dwpsn	file "../Source/prod.c",line 4979,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |4979| 
	.dwpsn	file "../Source/prod.c",line 4980,column 5,is_stmt,isa 0
        MOV       AL,*-SP[49]           ; [CPU_] |4980| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4980| 
	.dwpsn	file "../Source/prod.c",line 4981,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |4981| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |4981| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4981| 
        MOV       AL,AR6                ; [CPU_] |4981| 
        MOV       *-SP[53],#4           ; [CPU_] |4981| 
	.dwpsn	file "../Source/prod.c",line 4983,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |4983| 
        B         $C$L205,EQ            ; [CPU_] |4983| 
        ; branchcc occurs ; [] |4983| 
	.dwpsn	file "../Source/prod.c",line 4986,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4986| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |4986| 
        B         $C$L204,EQ            ; [CPU_] |4986| 
        ; branchcc occurs ; [] |4986| 
	.dwpsn	file "../Source/prod.c",line 4990,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4990| 
        CMPB      AL,#34                ; [CPU_] |4990| 
        B         $C$L196,GT            ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
        CMPB      AL,#34                ; [CPU_] |4990| 
        B         $C$L200,EQ            ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
        CMPB      AL,#16                ; [CPU_] |4990| 
        B         $C$L203,EQ            ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
        CMPB      AL,#17                ; [CPU_] |4990| 
        B         $C$L202,EQ            ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
        B         $C$L204,UNC           ; [CPU_] |4990| 
        ; branch occurs ; [] |4990| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |4990| 
        B         $C$L198,EQ            ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
        CMPB      AL,#36                ; [CPU_] |4990| 
        B         $C$L204,NEQ           ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5031,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5031| 
        B         $C$L197,EQ            ; [CPU_] |5031| 
        ; branchcc occurs ; [] |5031| 
        CMPB      AL,#35                ; [CPU_] |5031| 
        B         $C$L207,NEQ           ; [CPU_] |5031| 
        ; branchcc occurs ; [] |5031| 
	.dwpsn	file "../Source/prod.c",line 5036,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5036| 
        MOV       AH,#15820             ; [CPU_] |5036| 
	.dwpsn	file "../Source/prod.c",line 5037,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5037| 
        ; branch occurs ; [] |5037| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5033,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5033| 
        MOV       AH,#15649             ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5034,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5034| 
        ; branch occurs ; [] |5034| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5019,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5019| 
        B         $C$L199,EQ            ; [CPU_] |5019| 
        ; branchcc occurs ; [] |5019| 
        CMPB      AL,#36                ; [CPU_] |5019| 
        B         $C$L207,NEQ           ; [CPU_] |5019| 
        ; branchcc occurs ; [] |5019| 
	.dwpsn	file "../Source/prod.c",line 5024,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5024| 
        MOV       AH,#16672             ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5025,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5025| 
        ; branch occurs ; [] |5025| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5021,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5021| 
        MOV       AH,#16073             ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5022| 
        ; branch occurs ; [] |5022| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5007,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5007| 
        B         $C$L201,EQ            ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
        CMPB      AL,#36                ; [CPU_] |5007| 
        B         $C$L207,NEQ           ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
	.dwpsn	file "../Source/prod.c",line 5012,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5012| 
        MOV       AH,#16843             ; [CPU_] |5012| 
	.dwpsn	file "../Source/prod.c",line 5013,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5013| 
        ; branch occurs ; [] |5013| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5009,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5009| 
        MOV       AH,#16418             ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5010,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5010| 
        ; branch occurs ; [] |5010| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5000,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5000| 
        B         $C$L207,NEQ           ; [CPU_] |5000| 
        ; branchcc occurs ; [] |5000| 
	.dwpsn	file "../Source/prod.c",line 5001,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5001| 
        MOV       AH,#16397             ; [CPU_] |5001| 
        B         $C$L206,UNC           ; [CPU_] |5001| 
        ; branch occurs ; [] |5001| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4993,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |4993| 
        B         $C$L207,NEQ           ; [CPU_] |4993| 
        ; branchcc occurs ; [] |4993| 
	.dwpsn	file "../Source/prod.c",line 4994,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |4994| 
        MOV       AH,#16104             ; [CPU_] |4994| 
        B         $C$L206,UNC           ; [CPU_] |4994| 
        ; branch occurs ; [] |4994| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 4988,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4988| 
	.dwpsn	file "../Source/prod.c",line 4989,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |4989| 
        ; branch occurs ; [] |4989| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 4984,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |4984| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4984| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4984| 
        MOV       AL,#0                 ; [CPU_] |4984| 
        MOV       AH,#17096             ; [CPU_] |4984| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4984| 
        ; call occurs [#FS$$DIV] ; [] |4984| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4984| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5050,column 10,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |5050| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5051,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |5051| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5051| 
        CMPL      ACC,XAR6              ; [CPU_] |5051| 
        B         $C$L209,NEQ           ; [CPU_] |5051| 
        ; branchcc occurs ; [] |5051| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5052,column 7,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_update_units")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5052| 
        ; call occurs [#_update_units] ; [] |5052| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5054,column 7,is_stmt,isa 0
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5054| 
        ; call occurs [#_ad7738_setcal] ; [] |5054| 
        MOVL      XAR0,#78              ; [CPU_] |5054| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5054| 
	.dwpsn	file "../Source/prod.c",line 5055,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |5055| 
        MOVL      XAR4,ACC              ; [CPU_] |5055| 
        MOVL      *-SP[56],ACC          ; [CPU_] |5055| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5055| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5055| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5055| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5055| 
	.dwpsn	file "../Source/prod.c",line 5056,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5056| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5056| 
        ; call occurs [#_ad7738_resetvall] ; [] |5056| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5050,column 18,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |5050| 
        ADDB      XAR1,#10              ; [CPU_] |5050| 
        MOV       AL,*-SP[50]           ; [CPU_] |5050| 
        CMPB      AL,#4                 ; [CPU_] |5050| 
        B         $C$L208,LO            ; [CPU_] |5050| 
        ; branchcc occurs ; [] |5050| 
        B         $C$L304,UNC           ; [CPU_] |5050| 
        ; branch occurs ; [] |5050| 
$C$L210:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4937,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4937| 
        B         $C$L320,LO            ; [CPU_] |4937| 
        ; branchcc occurs ; [] |4937| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4937| 
        MOVL      XAR0,#66              ; [CPU_] |4937| 
        MOVL      ACC,XAR7              ; [CPU_] |4937| 
        ADDB      ACC,#2                ; [CPU_] |4937| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4937| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4937| 
        B         $C$L320,LT            ; [CPU_] |4937| 
        ; branchcc occurs ; [] |4937| 
        ADDB      XAR4,#2               ; [CPU_] |4937| 
        MOVL      XAR0,#66              ; [CPU_] |4937| 
        CMPB      AL,#20                ; [CPU_] |4937| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4937| 
        B         $C$L320,GEQ           ; [CPU_] |4937| 
        ; branchcc occurs ; [] |4937| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4937| 
        MOVB      AH,#4                 ; [CPU_] |4937| 
        ADD       AH,AR6                ; [CPU_] |4937| 
        CMP       AH,*-SP[51]           ; [CPU_] |4937| 
        B         $C$L320,HI            ; [CPU_] |4937| 
        ; branchcc occurs ; [] |4937| 
	.dwpsn	file "../Source/prod.c",line 4942,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |4942| 
	.dwpsn	file "../Source/prod.c",line 4943,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4943| 
        MOVL      XAR0,#66              ; [CPU_] |4943| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4943| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4943| 
        MOV       AL,*-SP[49]           ; [CPU_] |4943| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4943| 
        MOV       AL,AR6                ; [CPU_] |4943| 
	.dwpsn	file "../Source/prod.c",line 4945,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4945| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4945| 
        B         $C$L211,HIS           ; [CPU_] |4945| 
        ; branchcc occurs ; [] |4945| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4945| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 4947,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4947| 
        MOVB      XAR5,#0               ; [CPU_] |4947| 
	.dwpsn	file "../Source/prod.c",line 4947,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[49]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4948,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4947,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4947| 
	.dwpsn	file "../Source/prod.c",line 4948,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4947,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4947| 
	.dwpsn	file "../Source/prod.c",line 4948,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4948| 
	.dwpsn	file "../Source/prod.c",line 4947,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4947| 
        B         $C$L212,HI            ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 4950,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4950| 
        MOVB      AL,#152               ; [CPU_] |4950| 
        MOV       T,*-SP[49]            ; [CPU_] |4950| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4950| 
        MPYU      P,T,AL                ; [CPU_] |4950| 
        MOVL      ACC,P                 ; [CPU_] |4950| 
        ADD       ACC,AR5               ; [CPU_] |4950| 
        ADDL      ACC,XAR6              ; [CPU_] |4950| 
        MOVL      XAR4,ACC              ; [CPU_] |4950| 
        MOVB      XAR0,#98              ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4954,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4950,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4954,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4954| 
        MOVL      XAR4,ACC              ; [CPU_] |4954| 
        MOVL      XAR1,ACC              ; [CPU_] |4954| 
        ADDB      XAR4,#98              ; [CPU_] |4954| 
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_strlen")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4954| 
        ; call occurs [#_strlen] ; [] |4954| 
	.dwpsn	file "../Source/prod.c",line 4955,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4955| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4956,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4956| 
	.dwpsn	file "../Source/prod.c",line 4955,column 5,is_stmt,isa 0
        MOV       *-SP[53],#4           ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4956,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |4956| 
        ; branchcc occurs ; [] |4956| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4956,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4956| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 4957,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |4957| 
	.dwpsn	file "../Source/prod.c",line 4956,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4956| 
	.dwpsn	file "../Source/prod.c",line 4957,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |4957| 
        INC       *-SP[53]              ; [CPU_] |4957| 
	.dwpsn	file "../Source/prod.c",line 4956,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |4956| 
        B         $C$L214,HI            ; [CPU_] |4956| 
        ; branchcc occurs ; [] |4956| 
        B         $C$L304,UNC           ; [CPU_] |4956| 
        ; branch occurs ; [] |4956| 
$C$L215:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5495,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5495| 
        B         $C$L320,LO            ; [CPU_] |5495| 
        ; branchcc occurs ; [] |5495| 
	.dwpsn	file "../Source/prod.c",line 5500,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5500| 
	.dwpsn	file "../Source/prod.c",line 5501,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5501| 
	.dwpsn	file "../Source/prod.c",line 5500,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5500| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5500| 
        MOV       *-SP[49],AL           ; [CPU_] |5500| 
	.dwpsn	file "../Source/prod.c",line 5501,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5501| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5501| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5501| 
	.dwpsn	file "../Source/prod.c",line 5503,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5503| 
        SUBB      XAR5,#24              ; [CPU_U] |5503| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5503| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5505,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5505| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5505| 
	.dwpsn	file "../Source/prod.c",line 5506,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5506| 
        MOV       *XAR1++,AL            ; [CPU_] |5506| 
	.dwpsn	file "../Source/prod.c",line 5507,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5507| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5507| 
        MOV       *XAR5++,AL            ; [CPU_] |5507| 
	.dwpsn	file "../Source/prod.c",line 5508,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5508| 
        MOV       *XAR1++,AL            ; [CPU_] |5508| 
	.dwpsn	file "../Source/prod.c",line 5504,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5504| 
        ; branchcc occurs ; [] |5504| 
        MOV       AL,*-SP[49]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5512,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5512| 
        B         $C$L320,HIS           ; [CPU_] |5512| 
        ; branchcc occurs ; [] |5512| 
        MOVL      XAR0,#40              ; [CPU_] |5512| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5512| 
        MOVB      AL,#12                ; [CPU_] |5512| 
        MOV       T,*-SP[49]            ; [CPU_] |5512| 
        MPYU      ACC,T,AL              ; [CPU_] |5512| 
        ADDL      ACC,XAR6              ; [CPU_] |5512| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5512| 
        MOVL      XAR4,ACC              ; [CPU_] |5512| 
        MOVL      *-SP[56],ACC          ; [CPU_] |5512| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5512| 
        CMPB      AL,#7                 ; [CPU_] |5512| 
        B         $C$L320,NEQ           ; [CPU_] |5512| 
        ; branchcc occurs ; [] |5512| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5512| 
        MOV       *-SP[39],#0           ; [CPU_] |5512| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5512| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5512| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5512| 
        ; call occurs [#FS$$CMP] ; [] |5512| 
        CMPB      AL,#0                 ; [CPU_] |5512| 
        B         $C$L217,GEQ           ; [CPU_] |5512| 
        ; branchcc occurs ; [] |5512| 
        MOV       *-SP[39],#1           ; [CPU_] |5512| 
$C$L217:    
        MOV       AL,*-SP[39]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5512| 
        ; branchcc occurs ; [] |5512| 
        MOV       AL,#0                 ; [CPU_] |5512| 
        MOV       AH,#16672             ; [CPU_] |5512| 
        MOV       *-SP[39],#0           ; [CPU_] |5512| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5512| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5512| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5512| 
        ; call occurs [#FS$$CMP] ; [] |5512| 
        CMPB      AL,#0                 ; [CPU_] |5512| 
        B         $C$L218,LEQ           ; [CPU_] |5512| 
        ; branchcc occurs ; [] |5512| 
        MOV       *-SP[39],#1           ; [CPU_] |5512| 
$C$L218:    
        MOV       AL,*-SP[39]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5512| 
        ; branchcc occurs ; [] |5512| 
	.dwpsn	file "../Source/prod.c",line 5519,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5519| 
        MOV       AH,#0                 ; [CPU_] |5519| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5519| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5519| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5519| 
        ; call occurs [#FS$$CMP] ; [] |5519| 
        CMPB      AL,#0                 ; [CPU_] |5519| 
        B         $C$L219,GEQ           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5519| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5519| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5519| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5519| 
        B         $C$L220,UNC           ; [CPU_] |5519| 
        ; branch occurs ; [] |5519| 
$C$L219:    
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5519| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5519| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5519| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5519| 
$C$L220:    
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5519| 
        ; call occurs [#FS$$MPY] ; [] |5519| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |5519| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5519| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5519| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5519| 
        ; call occurs [#FS$$ADD] ; [] |5519| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5519| 
        ; call occurs [#FS$$TOLL] ; [] |5519| 
	.dwpsn	file "../Source/prod.c",line 5526,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5526| 
	.dwpsn	file "../Source/prod.c",line 5519,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5519| 
	.dwpsn	file "../Source/prod.c",line 5507,column 6,is_stmt,isa 0
        MOV       *-SP[53],#7           ; [CPU_] |5507| 
	.dwpsn	file "../Source/prod.c",line 5519,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5519| 
	.dwpsn	file "../Source/prod.c",line 5526,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5526| 
        CMP64     ACC:P                 ; [CPU_] |5526| 
        B         $C$L222,LEQ           ; [CPU_] |5526| 
        ; branchcc occurs ; [] |5526| 
	.dwpsn	file "../Source/prod.c",line 5528,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5528| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5528| 
        MOV       *-SP[2],#0            ; [CPU_] |5528| 
        MOV       *-SP[1],#0            ; [CPU_] |5528| 
        MOVL      P,*-SP[32]            ; [CPU_] |5528| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5528| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$692, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5528| 
        ; call occurs [#LL$$CMP] ; [] |5528| 
        CMPB      AL,#0                 ; [CPU_] |5528| 
        B         $C$L221,GEQ           ; [CPU_] |5528| 
        ; branchcc occurs ; [] |5528| 
	.dwpsn	file "../Source/prod.c",line 5531,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5531| 
        MOV       *-SP[35],AL           ; [CPU_] |5531| 
        B         $C$L223,UNC           ; [CPU_] |5531| 
        ; branch occurs ; [] |5531| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5529,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5529| 
	.dwpsn	file "../Source/prod.c",line 5530,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5530| 
        ; branch occurs ; [] |5530| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5527,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5527| 
$C$L223:    
        MOV       AH,*-SP[49]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5534,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5534| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5534| 
        ; call occurs [#_mcbsp_xmit] ; [] |5534| 
	.dwpsn	file "../Source/prod.c",line 5535,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_latch_dac")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5535| 
        ; call occurs [#_latch_dac] ; [] |5535| 
	.dwpsn	file "../Source/prod.c",line 5538,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5538| 
        ANDB      AL,#0xff              ; [CPU_] |5538| 
        MOV       *XAR1++,AL            ; [CPU_] |5538| 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5539| 
        LSR       AL,8                  ; [CPU_] |5539| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5539| 
	.dwpsn	file "../Source/prod.c",line 5542,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5542| 
        ; branch occurs ; [] |5542| 
$C$L224:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5431,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5431| 
        B         $C$L320,LO            ; [CPU_] |5431| 
        ; branchcc occurs ; [] |5431| 
	.dwpsn	file "../Source/prod.c",line 5436,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5436| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5436| 
$C$L226:    
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5436| 
        ; call occurs [#_ad7738_resetvall] ; [] |5436| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5439,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5439| 
        MOVL      XAR0,#66              ; [CPU_] |5439| 
        ADDB      ACC,#2                ; [CPU_] |5439| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5439| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5439| 
        ANDB      AL,#0x0f              ; [CPU_] |5439| 
	.dwpsn	file "../Source/prod.c",line 5441,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5441| 
        ; branch occurs ; [] |5441| 
$C$L228:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5417,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5417| 
        B         $C$L320,LO            ; [CPU_] |5417| 
        ; branchcc occurs ; [] |5417| 
	.dwpsn	file "../Source/prod.c",line 5422,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5422| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5422| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5422| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5422| 
	.dwpsn	file "../Source/prod.c",line 5427,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5427| 
        ; branch occurs ; [] |5427| 
$C$L229:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5481,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5481| 
        B         $C$L320,LO            ; [CPU_] |5481| 
        ; branchcc occurs ; [] |5481| 
	.dwpsn	file "../Source/prod.c",line 5486,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5486| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5486| 
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5486| 
        ; call occurs [#_shunt_switch] ; [] |5486| 
	.dwpsn	file "../Source/prod.c",line 5491,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5491| 
        ; branch occurs ; [] |5491| 
$C$L230:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5465,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5465| 
        B         $C$L320,LO            ; [CPU_] |5465| 
        ; branchcc occurs ; [] |5465| 
	.dwpsn	file "../Source/prod.c",line 5470,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5470| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5470| 
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5470| 
        ; call occurs [#_ad7738_resettare] ; [] |5470| 
	.dwpsn	file "../Source/prod.c",line 5471,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5471| 
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5471| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5471| 
	.dwpsn	file "../Source/prod.c",line 5472,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5472| 
	.dwpsn	file "../Source/prod.c",line 5477,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5477| 
        ; branch occurs ; [] |5477| 
$C$L231:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5445,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5445| 
        B         $C$L320,LO            ; [CPU_] |5445| 
        ; branchcc occurs ; [] |5445| 
	.dwpsn	file "../Source/prod.c",line 5450,column 5,is_stmt,isa 0
        MOV       *-SP[39],#1           ; [CPU_] |5450| 
	.dwpsn	file "../Source/prod.c",line 5451,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5451| 
$C$L232:    
        MOV       AL,*-SP[39]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5452,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5452| 
        B         $C$L233,EQ            ; [CPU_] |5452| 
        ; branchcc occurs ; [] |5452| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5453,column 7,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5453| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5453| 
$C$L233:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5451,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5451| 
	.dwpsn	file "../Source/prod.c",line 5455,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5455| 
        MOV       *-SP[39],AL           ; [CPU_] |5455| 
	.dwpsn	file "../Source/prod.c",line 5451,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5451| 
        CMPB      AL,#4                 ; [CPU_] |5451| 
        B         $C$L232,LT            ; [CPU_] |5451| 
        ; branchcc occurs ; [] |5451| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5459,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5459| 
        ANDB      AL,#0x0f              ; [CPU_] |5459| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5459| 
        MOVL      XAR0,#66              ; [CPU_] |5459| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5459| 
	.dwpsn	file "../Source/prod.c",line 5461,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5461| 
        ; branch occurs ; [] |5461| 
$C$L235:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5402,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5402| 
        B         $C$L320,LO            ; [CPU_] |5402| 
        ; branchcc occurs ; [] |5402| 
	.dwpsn	file "../Source/prod.c",line 5407,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5407| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5407| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5407| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5407| 
	.dwpsn	file "../Source/prod.c",line 5413,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5413| 
        ; branch occurs ; [] |5413| 
$C$L236:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5379,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5379| 
        B         $C$L239,LO            ; [CPU_] |5379| 
        ; branchcc occurs ; [] |5379| 
	.dwpsn	file "../Source/prod.c",line 5391,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5391| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5391| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5391| 
        ; call occurs [#_ad7738_resettare] ; [] |5391| 
	.dwpsn	file "../Source/prod.c",line 5392,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5392| 
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5392| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5393| 
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5393| 
        ; call occurs [#_ad7738_resetvall] ; [] |5393| 
	.dwpsn	file "../Source/prod.c",line 5396,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5396| 
        MOVL      ACC,XAR1              ; [CPU_] |5396| 
        ADDB      ACC,#2                ; [CPU_] |5396| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5396| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5396| 
        ANDB      AL,#0xff              ; [CPU_] |5396| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5396| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5396| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5394,column 5,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5398,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5398| 
        ; branch occurs ; [] |5398| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5381,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5381| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5381| 
        ; call occurs [#_ad7738_resettare] ; [] |5381| 
	.dwpsn	file "../Source/prod.c",line 5382,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5382| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5382| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5382| 
	.dwpsn	file "../Source/prod.c",line 5383,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5383| 
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5383| 
        ; call occurs [#_ad7738_resetvall] ; [] |5383| 
	.dwpsn	file "../Source/prod.c",line 5386,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5386| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5386| 
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5388| 
        ; branch occurs ; [] |5388| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5554,column 5,is_stmt,isa 0
        MOV       AL,*-SP[40]           ; [CPU_] |5554| 
        MOV       *-SP[39],#0           ; [CPU_] |5554| 
	.dwpsn	file "../Source/prod.c",line 5555,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5555| 
        ; branchcc occurs ; [] |5555| 
	.dwpsn	file "../Source/prod.c",line 5557,column 6,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5557| 
        ; call occurs [#_lcd_clear] ; [] |5557| 
	.dwpsn	file "../Source/prod.c",line 5558,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5558| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5558| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5558| 
        ; call occurs [#_lcd_puts] ; [] |5558| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5561,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5561| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_delay_us")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5561| 
        ; call occurs [#_delay_us] ; [] |5561| 
	.dwpsn	file "../Source/prod.c",line 5560,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5560| 
        ; branchcc occurs ; [] |5560| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5565,column 6,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_conf_write")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5565| 
        ; call occurs [#_conf_write] ; [] |5565| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5568,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5568| 
        B         $C$L242,NEQ           ; [CPU_] |5568| 
        ; branchcc occurs ; [] |5568| 
	.dwpsn	file "../Source/prod.c",line 5569,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5569| 
        MOVB      AL,#16                ; [CPU_] |5569| 
        SPM       #0                    ; [CPU_] 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5569| 
        ; call occurs [#_lcd_puts] ; [] |5569| 
	.dwpsn	file "../Source/prod.c",line 5570,column 7,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |5570| 
	.dwpsn	file "../Source/prod.c",line 5571,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5571| 
        ; branch occurs ; [] |5571| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5572,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5572| 
        MOVB      AL,#16                ; [CPU_] |5572| 
        SPM       #0                    ; [CPU_] 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5572| 
        ; call occurs [#_lcd_puts] ; [] |5572| 
	.dwpsn	file "../Source/prod.c",line 5573,column 7,is_stmt,isa 0
        MOV       *-SP[39],#3           ; [CPU_] |5573| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5577,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5577| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_delay_us")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5577| 
        ; call occurs [#_delay_us] ; [] |5577| 
	.dwpsn	file "../Source/prod.c",line 5576,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5576| 
        ; branchcc occurs ; [] |5576| 
        B         $C$L316,UNC           ; [CPU_] |5576| 
        ; branch occurs ; [] |5576| 
$C$L245:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4324,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4324| 
        B         $C$L320,LO            ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4324| 
        MOVL      XAR0,#66              ; [CPU_] |4324| 
        MOVL      ACC,XAR7              ; [CPU_] |4324| 
        ADDB      ACC,#2                ; [CPU_] |4324| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4324| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4324| 
        B         $C$L320,LT            ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
        ADDB      XAR4,#2               ; [CPU_] |4324| 
        MOVL      XAR0,#66              ; [CPU_] |4324| 
        CMPB      AL,#4                 ; [CPU_] |4324| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4324| 
        B         $C$L320,GEQ           ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        MOV       *-SP[50],AL           ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4330| 
	.dwpsn	file "../Source/prod.c",line 4333,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4333| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4330| 
	.dwpsn	file "../Source/prod.c",line 4333,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4333| 
        ADDB      ACC,#2                ; [CPU_] |4333| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4333| 
        MOVL      XAR0,#40              ; [CPU_] |4333| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4333| 
        MOV       T,*-SP[50]            ; [CPU_] |4333| 
        MOVB      AL,#10                ; [CPU_] |4333| 
        MPYU      ACC,T,AL              ; [CPU_] |4333| 
        ADDL      ACC,XAR6              ; [CPU_] |4333| 
        ADDB      ACC,#46               ; [CPU_] |4333| 
        MOVL      XAR4,ACC              ; [CPU_] |4333| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4335,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4335| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4335| 
        ADDB      XAR7,#1               ; [CPU_] |4335| 
	.dwpsn	file "../Source/prod.c",line 4336,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4336| 
        ADD       *XAR4++,AL            ; [CPU_] |4336| 
	.dwpsn	file "../Source/prod.c",line 4334,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4334| 
        ; branchcc occurs ; [] |4334| 
	.dwpsn	file "../Source/prod.c",line 4339,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4339| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4339| 
        MOVB      AL,#10                ; [CPU_] |4339| 
        MPYU      ACC,T,AL              ; [CPU_] |4339| 
        ADDL      ACC,XAR6              ; [CPU_] |4339| 
        MOVL      XAR5,ACC              ; [CPU_] |4339| 
        ADDB      ACC,#48               ; [CPU_] |4339| 
        MOVL      XAR4,ACC              ; [CPU_] |4339| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4339| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4341,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4341| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4341| 
        ADDB      XAR7,#1               ; [CPU_] |4341| 
	.dwpsn	file "../Source/prod.c",line 4342,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4342| 
        ADD       *XAR4++,AL            ; [CPU_] |4342| 
	.dwpsn	file "../Source/prod.c",line 4340,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4340| 
        ; branchcc occurs ; [] |4340| 
	.dwpsn	file "../Source/prod.c",line 4345,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4345| 
        ADDB      ACC,#50               ; [CPU_] |4345| 
        MOVL      XAR4,ACC              ; [CPU_] |4345| 
        MOVL      P,ACC                 ; [CPU_] |4345| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4347,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4347| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4347| 
        ADDB      XAR7,#1               ; [CPU_] |4347| 
	.dwpsn	file "../Source/prod.c",line 4348,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4348| 
        ADD       *XAR4++,AL            ; [CPU_] |4348| 
	.dwpsn	file "../Source/prod.c",line 4346,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4346| 
        ; branchcc occurs ; [] |4346| 
	.dwpsn	file "../Source/prod.c",line 4352,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4352| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4352| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4352| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4354,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4354| 
        ANDB      AL,#0xff              ; [CPU_] |4354| 
        MOV       *XAR4++,AL            ; [CPU_] |4354| 
	.dwpsn	file "../Source/prod.c",line 4355,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4355| 
        LSR       AL,8                  ; [CPU_] |4355| 
        MOV       *XAR4++,AL            ; [CPU_] |4355| 
	.dwpsn	file "../Source/prod.c",line 4353,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4353| 
        ; branchcc occurs ; [] |4353| 
	.dwpsn	file "../Source/prod.c",line 4358,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4358| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4360,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4360| 
        ANDB      AL,#0xff              ; [CPU_] |4360| 
        MOV       *XAR4++,AL            ; [CPU_] |4360| 
	.dwpsn	file "../Source/prod.c",line 4361,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4361| 
        LSR       AL,8                  ; [CPU_] |4361| 
        MOV       *XAR4++,AL            ; [CPU_] |4361| 
	.dwpsn	file "../Source/prod.c",line 4359,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4359| 
        ; branchcc occurs ; [] |4359| 
	.dwpsn	file "../Source/prod.c",line 4364,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4364| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4366,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4366| 
        ANDB      AL,#0xff              ; [CPU_] |4366| 
        MOV       *XAR4++,AL            ; [CPU_] |4366| 
	.dwpsn	file "../Source/prod.c",line 4367,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4367| 
        LSR       AL,8                  ; [CPU_] |4367| 
        MOV       *XAR4++,AL            ; [CPU_] |4367| 
	.dwpsn	file "../Source/prod.c",line 4365,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4365| 
        ; branchcc occurs ; [] |4365| 
	.dwpsn	file "../Source/prod.c",line 4355,column 6,is_stmt,isa 0
        MOV       *-SP[53],#15          ; [CPU_] |4355| 
	.dwpsn	file "../Source/prod.c",line 4372,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4372| 
        ; branch occurs ; [] |4372| 
$C$L252:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4282,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4282| 
        B         $C$L320,LO            ; [CPU_] |4282| 
        ; branchcc occurs ; [] |4282| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4282| 
        MOVL      XAR0,#66              ; [CPU_] |4282| 
        MOVL      ACC,XAR5              ; [CPU_] |4282| 
        ADDB      ACC,#2                ; [CPU_] |4282| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4282| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4282| 
        B         $C$L320,LT            ; [CPU_] |4282| 
        ; branchcc occurs ; [] |4282| 
        ADDB      XAR4,#2               ; [CPU_] |4282| 
        MOVL      XAR0,#66              ; [CPU_] |4282| 
        CMPB      AL,#4                 ; [CPU_] |4282| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4282| 
        B         $C$L320,GEQ           ; [CPU_] |4282| 
        ; branchcc occurs ; [] |4282| 
	.dwpsn	file "../Source/prod.c",line 4287,column 5,is_stmt,isa 0
        MOV       *-SP[50],AL           ; [CPU_] |4287| 
	.dwpsn	file "../Source/prod.c",line 4288,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4288| 
	.dwpsn	file "../Source/prod.c",line 4290,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4290| 
        MOVL      XAR0,#66              ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4288,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4288| 
	.dwpsn	file "../Source/prod.c",line 4290,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4290| 
        MOVL      XAR0,#40              ; [CPU_] |4290| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4290| 
        MOVB      AL,#10                ; [CPU_] |4290| 
        MOV       T,*-SP[50]            ; [CPU_] |4290| 
        MPYU      ACC,T,AL              ; [CPU_] |4290| 
        ADDL      ACC,XAR6              ; [CPU_] |4290| 
        ADDB      ACC,#46               ; [CPU_] |4290| 
        MOVL      XAR5,ACC              ; [CPU_] |4290| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4292,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4292| 
        ANDB      AL,#0xff              ; [CPU_] |4292| 
        MOV       *XAR4++,AL            ; [CPU_] |4292| 
	.dwpsn	file "../Source/prod.c",line 4293,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4293| 
        LSR       AL,8                  ; [CPU_] |4293| 
        MOV       *XAR4++,AL            ; [CPU_] |4293| 
	.dwpsn	file "../Source/prod.c",line 4291,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4291| 
        ; branchcc occurs ; [] |4291| 
	.dwpsn	file "../Source/prod.c",line 4296,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4296| 
        MPYU      ACC,T,AL              ; [CPU_] |4296| 
        ADDL      ACC,XAR6              ; [CPU_] |4296| 
        MOVL      XAR5,ACC              ; [CPU_] |4296| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4296| 
        ADDB      XAR5,#48              ; [CPU_] |4296| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4298,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4298| 
        ANDB      AL,#0xff              ; [CPU_] |4298| 
        MOV       *XAR4++,AL            ; [CPU_] |4298| 
	.dwpsn	file "../Source/prod.c",line 4299,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4299| 
        LSR       AL,8                  ; [CPU_] |4299| 
        MOV       *XAR4++,AL            ; [CPU_] |4299| 
	.dwpsn	file "../Source/prod.c",line 4297,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4297| 
        ; branchcc occurs ; [] |4297| 
	.dwpsn	file "../Source/prod.c",line 4302,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4293,column 6,is_stmt,isa 0
        MOV       *-SP[53],#15          ; [CPU_] |4293| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4302,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4302| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4304,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4304| 
        ANDB      AL,#0xff              ; [CPU_] |4304| 
        MOV       *XAR4++,AL            ; [CPU_] |4304| 
	.dwpsn	file "../Source/prod.c",line 4305,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4305| 
        LSR       AL,8                  ; [CPU_] |4305| 
        MOV       *XAR4++,AL            ; [CPU_] |4305| 
	.dwpsn	file "../Source/prod.c",line 4303,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4303| 
        ; branchcc occurs ; [] |4303| 
        B         $C$L743,UNC           ; [CPU_] |4303| 
        ; branch occurs ; [] |4303| 
$C$L256:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3924,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3924| 
        B         $C$L320,LO            ; [CPU_] |3924| 
        ; branchcc occurs ; [] |3924| 
        MOVL      ACC,XAR4              ; [CPU_] |3924| 
        MOVL      XAR0,#66              ; [CPU_] |3924| 
        ADDB      ACC,#2                ; [CPU_] |3924| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3924| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3924| 
        B         $C$L320,LT            ; [CPU_] |3924| 
        ; branchcc occurs ; [] |3924| 
        MOVL      XAR5,XAR4             ; [CPU_] |3924| 
        MOVL      XAR0,#66              ; [CPU_] |3924| 
        CMPB      AL,#20                ; [CPU_] |3924| 
        ADDB      XAR5,#2               ; [CPU_] |3924| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3924| 
        B         $C$L320,GEQ           ; [CPU_] |3924| 
        ; branchcc occurs ; [] |3924| 
	.dwpsn	file "../Source/prod.c",line 3928,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |3928| 
	.dwpsn	file "../Source/prod.c",line 3929,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3929| 
	.dwpsn	file "../Source/prod.c",line 3932,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3932| 
        MOVL      XAR0,#66              ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3929,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3929| 
	.dwpsn	file "../Source/prod.c",line 3932,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3932| 
        MOVL      XAR0,#40              ; [CPU_] |3932| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3932| 
        MOVB      AL,#152               ; [CPU_] |3932| 
        MOV       T,*-SP[49]            ; [CPU_] |3932| 
        MPYU      ACC,T,AL              ; [CPU_] |3932| 
        ADDL      ACC,XAR6              ; [CPU_] |3932| 
        ADDB      ACC,#82               ; [CPU_] |3932| 
        MOVL      XAR4,ACC              ; [CPU_] |3932| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_strlen")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3932| 
        ; call occurs [#_strlen] ; [] |3932| 
        MOVZ      AR6,AL                ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3933,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3934,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3933,column 5,is_stmt,isa 0
        MOV       *-SP[53],#4           ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3934,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |3934| 
        ; branchcc occurs ; [] |3934| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[49]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3934,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3934| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3934,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3934,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3934,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3934| 
        B         $C$L257,HI            ; [CPU_] |3934| 
        ; branchcc occurs ; [] |3934| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3939,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3939| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3939| 
        MOVB      AL,#152               ; [CPU_] |3939| 
        MOV       T,*-SP[49]            ; [CPU_] |3939| 
        MPYU      ACC,T,AL              ; [CPU_] |3939| 
        ADDL      ACC,XAR6              ; [CPU_] |3939| 
        MOVL      XAR4,ACC              ; [CPU_] |3939| 
        MOVL      XAR1,ACC              ; [CPU_] |3939| 
        ADDB      XAR4,#98              ; [CPU_] |3939| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_strlen")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3939| 
        ; call occurs [#_strlen] ; [] |3939| 
        MOVL      XAR0,#44              ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3940,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[53]          ; [CPU_] |3940| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3939,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |3939| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3940,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |3940| 
        MOVL      XAR4,ACC              ; [CPU_] |3940| 
        MOV       AL,AR7                ; [CPU_] |3940| 
        ADDB      AL,#1                 ; [CPU_] |3940| 
        MOV       *XAR4++,AR6           ; [CPU_] |3940| 
        MOV       *-SP[53],AL           ; [CPU_] |3940| 
        MOV       AL,AR6                ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |3941| 
        ; branchcc occurs ; [] |3941| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3941,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3941| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 3942,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3942| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3941| 
	.dwpsn	file "../Source/prod.c",line 3942,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3942| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3941| 
	.dwpsn	file "../Source/prod.c",line 3942,column 6,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |3942| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3941| 
        B         $C$L259,HI            ; [CPU_] |3941| 
        ; branchcc occurs ; [] |3941| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3946,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3946| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |3946| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3948,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3948| 
        ANDB      AL,#0xff              ; [CPU_] |3948| 
        MOV       *XAR4++,AL            ; [CPU_] |3948| 
	.dwpsn	file "../Source/prod.c",line 3949,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3949| 
        LSR       AL,8                  ; [CPU_] |3949| 
        MOV       *XAR4++,AL            ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3947,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |3947| 
        ; branchcc occurs ; [] |3947| 
	.dwpsn	file "../Source/prod.c",line 3954,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3954| 
	.dwpsn	file "../Source/prod.c",line 3957,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3957| 
	.dwpsn	file "../Source/prod.c",line 3954,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3954| 
        MOV       *XAR4++,AL            ; [CPU_] |3954| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3957,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |3957| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 3959,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3959| 
        ANDB      AL,#0xff              ; [CPU_] |3959| 
        MOV       *XAR4++,AL            ; [CPU_] |3959| 
	.dwpsn	file "../Source/prod.c",line 3960,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3960| 
        LSR       AL,8                  ; [CPU_] |3960| 
        MOV       *XAR4++,AL            ; [CPU_] |3960| 
	.dwpsn	file "../Source/prod.c",line 3958,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |3958| 
        ; branchcc occurs ; [] |3958| 
	.dwpsn	file "../Source/prod.c",line 3965,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3965| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |3965| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 3967,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3967| 
        ANDB      AL,#0xff              ; [CPU_] |3967| 
        MOV       *XAR4++,AL            ; [CPU_] |3967| 
	.dwpsn	file "../Source/prod.c",line 3968,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3968| 
        LSR       AL,8                  ; [CPU_] |3968| 
        MOV       *XAR4++,AL            ; [CPU_] |3968| 
	.dwpsn	file "../Source/prod.c",line 3966,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |3966| 
        ; branchcc occurs ; [] |3966| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |3973| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3973| 
	.dwpsn	file "../Source/prod.c",line 3979,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3973| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3973| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3979,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3976| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |3976| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 3981,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3981| 
        ANDB      AL,#0xff              ; [CPU_] |3981| 
        MOV       *XAR4++,AL            ; [CPU_] |3981| 
	.dwpsn	file "../Source/prod.c",line 3982,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3982| 
        LSR       AL,8                  ; [CPU_] |3982| 
        MOV       *XAR4++,AL            ; [CPU_] |3982| 
	.dwpsn	file "../Source/prod.c",line 3980,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |3980| 
        ; branchcc occurs ; [] |3980| 
	.dwpsn	file "../Source/prod.c",line 3949,column 6,is_stmt,isa 0
        ADD       *-SP[53],#23          ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3987,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3987| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3987| 
        CMPB      AL,#2                 ; [CPU_] |3987| 
        B         $C$L267,EQ            ; [CPU_] |3987| 
        ; branchcc occurs ; [] |3987| 
	.dwpsn	file "../Source/prod.c",line 4025,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4025| 
        ADDB      ACC,#178              ; [CPU_] |4025| 
        MOVL      XAR5,ACC              ; [CPU_] |4025| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4023,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4023| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4027,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4027| 
        ANDB      AL,#0xff              ; [CPU_] |4027| 
        MOV       *XAR4++,AL            ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4028,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4028| 
        LSR       AL,8                  ; [CPU_] |4028| 
        MOV       *XAR4++,AL            ; [CPU_] |4028| 
	.dwpsn	file "../Source/prod.c",line 4026,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4026| 
        ; branchcc occurs ; [] |4026| 
	.dwpsn	file "../Source/prod.c",line 4032,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4032| 
        ADDB      ACC,#200              ; [CPU_] |4032| 
        MOVL      XAR5,ACC              ; [CPU_] |4032| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4023,column 6,is_stmt,isa 0
        ADD       *-SP[53],#9           ; [CPU_] |4023| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4034,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4034| 
        ANDB      AL,#0xff              ; [CPU_] |4034| 
        MOV       *XAR4++,AL            ; [CPU_] |4034| 
	.dwpsn	file "../Source/prod.c",line 4035,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4035| 
        LSR       AL,8                  ; [CPU_] |4035| 
        MOV       *XAR4++,AL            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4033,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4033| 
        ; branchcc occurs ; [] |4033| 
        B         $C$L276,UNC           ; [CPU_] |4033| 
        ; branch occurs ; [] |4033| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 3988,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |3988| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3988| 
	.dwpsn	file "../Source/prod.c",line 3989,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |3989| 
	.dwpsn	file "../Source/prod.c",line 3988,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3988| 
        INC       *-SP[53]              ; [CPU_] |3988| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3989,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |3989| 
        ; branch occurs ; [] |3989| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 3991,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |3991| 
        MOVL      XAR0,#40              ; [CPU_] |3991| 
        MOV       T,*-SP[49]            ; [CPU_] |3991| 
        MOVL      XAR6,ACC              ; [CPU_] |3991| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |3991| 
        MOVB      AL,#76                ; [CPU_] |3991| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |3991| 
        ADDL      ACC,XAR6              ; [CPU_] |3991| 
        LSL       ACC,1                 ; [CPU_] |3991| 
        ADDL      ACC,XAR7              ; [CPU_] |3991| 
        ADDB      ACC,#130              ; [CPU_] |3991| 
        MOVL      XAR7,ACC              ; [CPU_] |3991| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 3993,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3993| 
        ANDB      AL,#0xff              ; [CPU_] |3993| 
        MOV       *XAR4++,AL            ; [CPU_] |3993| 
	.dwpsn	file "../Source/prod.c",line 3994,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3994| 
        LSR       AL,8                  ; [CPU_] |3994| 
        MOV       *XAR4++,AL            ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 3992,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |3992| 
        ; branchcc occurs ; [] |3992| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4000,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4000| 
        ANDB      AL,#0xff              ; [CPU_] |4000| 
        MOV       *XAR4++,AL            ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 4001,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4001| 
        LSR       AL,8                  ; [CPU_] |4001| 
        MOV       *XAR4++,AL            ; [CPU_] |4001| 
	.dwpsn	file "../Source/prod.c",line 3999,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |3999| 
        ; branchcc occurs ; [] |3999| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3994,column 8,is_stmt,isa 0
        ADD       *-SP[53],#8           ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 3989,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |3989| 
        MOV       PL,AL                 ; [CPU_] |3989| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 3989,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |3989| 
        MOV       AL,PL                 ; [CPU_] |3989| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |3989| 
        B         $C$L268,LT            ; [CPU_] |3989| 
        ; branchcc occurs ; [] |3989| 
	.dwpsn	file "../Source/prod.c",line 4006,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4006| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4006| 
        ; branch occurs ; [] |4006| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4008,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4008| 
        MOVL      XAR0,#40              ; [CPU_] |4008| 
        MOV       T,*-SP[49]            ; [CPU_] |4008| 
        MOVL      P,ACC                 ; [CPU_] |4008| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4008| 
        MOVB      AL,#76                ; [CPU_] |4008| 
        MPYU      ACC,T,AL              ; [CPU_] |4008| 
        ADDL      ACC,P                 ; [CPU_] |4008| 
        LSL       ACC,1                 ; [CPU_] |4008| 
        ADDL      ACC,XAR6              ; [CPU_] |4008| 
        ADDB      ACC,#178              ; [CPU_] |4008| 
        MOVL      XAR7,ACC              ; [CPU_] |4008| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4010,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4010| 
        ANDB      AL,#0xff              ; [CPU_] |4010| 
        MOV       *XAR4++,AL            ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4011,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4011| 
        LSR       AL,8                  ; [CPU_] |4011| 
        MOV       *XAR4++,AL            ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4009,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4009| 
        ; branchcc occurs ; [] |4009| 
	.dwpsn	file "../Source/prod.c",line 4015,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4015| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4017,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4017| 
        ANDB      AL,#0xff              ; [CPU_] |4017| 
        MOV       *XAR4++,AL            ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4018,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4018| 
        LSR       AL,8                  ; [CPU_] |4018| 
        MOV       *XAR4++,AL            ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4016,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4016| 
        ; branchcc occurs ; [] |4016| 
	.dwpsn	file "../Source/prod.c",line 4006,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4006| 
	.dwpsn	file "../Source/prod.c",line 4011,column 8,is_stmt,isa 0
        ADD       *-SP[53],#8           ; [CPU_] |4011| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4022,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4022| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4022| 
        ADDB      AL,#-1                ; [CPU_] |4022| 
        CMP       AL,AR5                ; [CPU_] |4022| 
        B         $C$L272,GT            ; [CPU_] |4022| 
        ; branchcc occurs ; [] |4022| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4041,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4041| 
        ADDB      ACC,#222              ; [CPU_] |4041| 
        MOVL      XAR5,ACC              ; [CPU_] |4041| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4043,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4043| 
        ANDB      AL,#0xff              ; [CPU_] |4043| 
        MOV       *XAR4++,AL            ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4044,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4044| 
        LSR       AL,8                  ; [CPU_] |4044| 
        MOV       *XAR4++,AL            ; [CPU_] |4044| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4042| 
        ; branchcc occurs ; [] |4042| 
	.dwpsn	file "../Source/prod.c",line 4049,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4049| 
        ADDB      ACC,#224              ; [CPU_] |4049| 
        MOVL      XAR5,ACC              ; [CPU_] |4049| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4051,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4051| 
        ANDB      AL,#0xff              ; [CPU_] |4051| 
        MOV       *XAR4++,AL            ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4052,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4052| 
        LSR       AL,8                  ; [CPU_] |4052| 
        MOV       *XAR4++,AL            ; [CPU_] |4052| 
	.dwpsn	file "../Source/prod.c",line 4050,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4050| 
        ; branchcc occurs ; [] |4050| 
	.dwpsn	file "../Source/prod.c",line 4057,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4057| 
        ADDB      ACC,#228              ; [CPU_] |4057| 
        MOVL      XAR5,ACC              ; [CPU_] |4057| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4059,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4059| 
        ANDB      AL,#0xff              ; [CPU_] |4059| 
        MOV       *XAR4++,AL            ; [CPU_] |4059| 
	.dwpsn	file "../Source/prod.c",line 4060,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4060| 
        LSR       AL,8                  ; [CPU_] |4060| 
        MOV       *XAR4++,AL            ; [CPU_] |4060| 
	.dwpsn	file "../Source/prod.c",line 4058,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4058| 
        ; branchcc occurs ; [] |4058| 
	.dwpsn	file "../Source/prod.c",line 4065,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4065| 
        ADDB      ACC,#230              ; [CPU_] |4065| 
        MOVL      XAR5,ACC              ; [CPU_] |4065| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4067,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4067| 
        ANDB      AL,#0xff              ; [CPU_] |4067| 
        MOV       *XAR4++,AL            ; [CPU_] |4067| 
	.dwpsn	file "../Source/prod.c",line 4068,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4068| 
        LSR       AL,8                  ; [CPU_] |4068| 
        MOV       *XAR4++,AL            ; [CPU_] |4068| 
	.dwpsn	file "../Source/prod.c",line 4066,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4066| 
        ; branchcc occurs ; [] |4066| 
	.dwpsn	file "../Source/prod.c",line 4073,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4073| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4073| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4073| 
	.dwpsn	file "../Source/prod.c",line 4044,column 6,is_stmt,isa 0
        ADD       *-SP[53],#17          ; [CPU_] |4044| 
	.dwpsn	file "../Source/prod.c",line 4076,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4076| 
        ; branch occurs ; [] |4076| 
$C$L281:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3866,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3866| 
        B         $C$L320,LO            ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3866| 
        MOVL      XAR0,#66              ; [CPU_] |3866| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3866| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3866| 
        B         $C$L320,LT            ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
        CMPB      AL,#4                 ; [CPU_] |3866| 
        B         $C$L320,GEQ           ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
	.dwpsn	file "../Source/prod.c",line 3870,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3870| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3870| 
	.dwpsn	file "../Source/prod.c",line 3872,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3872| 
        MOVL      XAR0,#40              ; [CPU_] |3872| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3872| 
        MPYB      ACC,T,#10             ; [CPU_] |3872| 
        ADDL      ACC,XAR6              ; [CPU_] |3872| 
        MOVL      XAR4,ACC              ; [CPU_] |3872| 
        MOVL      XAR7,ACC              ; [CPU_] |3872| 
        MOVB      XAR0,#42              ; [CPU_] |3872| 
        MOVL      P,ACC                 ; [CPU_] |3872| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3872| 
	.dwpsn	file "../Source/prod.c",line 3879,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3879| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3879| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3872,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3872| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3876,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3876| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3882,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3882| 
        ANDB      AL,#0xff              ; [CPU_] |3882| 
        MOV       *XAR4++,AL            ; [CPU_] |3882| 
	.dwpsn	file "../Source/prod.c",line 3883,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3883| 
        LSR       AL,8                  ; [CPU_] |3883| 
        MOV       *XAR4++,AL            ; [CPU_] |3883| 
	.dwpsn	file "../Source/prod.c",line 3880,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3880| 
        ; branchcc occurs ; [] |3880| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3890,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3890| 
        ANDB      AL,#0xff              ; [CPU_] |3890| 
        MOV       *XAR4++,AL            ; [CPU_] |3890| 
	.dwpsn	file "../Source/prod.c",line 3891,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3891| 
        LSR       AL,8                  ; [CPU_] |3891| 
        MOV       *XAR4++,AL            ; [CPU_] |3891| 
	.dwpsn	file "../Source/prod.c",line 3888,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3888| 
        ; branchcc occurs ; [] |3888| 
	.dwpsn	file "../Source/prod.c",line 3895,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3895| 
        ADDB      XAR5,#46              ; [CPU_] |3895| 
        MOVL      XAR7,XAR5             ; [CPU_] |3895| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3898,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3898| 
        ANDB      AL,#0xff              ; [CPU_] |3898| 
        MOV       *XAR4++,AL            ; [CPU_] |3898| 
	.dwpsn	file "../Source/prod.c",line 3899,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3899| 
        LSR       AL,8                  ; [CPU_] |3899| 
        MOV       *XAR4++,AL            ; [CPU_] |3899| 
	.dwpsn	file "../Source/prod.c",line 3896,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3896| 
        ; branchcc occurs ; [] |3896| 
	.dwpsn	file "../Source/prod.c",line 3903,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3903| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3906,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3906| 
        ANDB      AL,#0xff              ; [CPU_] |3906| 
        MOV       *XAR4++,AL            ; [CPU_] |3906| 
	.dwpsn	file "../Source/prod.c",line 3907,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3907| 
        LSR       AL,8                  ; [CPU_] |3907| 
        MOV       *XAR4++,AL            ; [CPU_] |3907| 
	.dwpsn	file "../Source/prod.c",line 3904,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3904| 
        ; branchcc occurs ; [] |3904| 
	.dwpsn	file "../Source/prod.c",line 3876,column 6,is_stmt,isa 0
        MOV       *-SP[53],#28          ; [CPU_] |3876| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3914,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3914| 
        ANDB      AL,#0xff              ; [CPU_] |3914| 
        MOV       *XAR4++,AL            ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3915,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3915| 
        LSR       AL,8                  ; [CPU_] |3915| 
        MOV       *XAR4++,AL            ; [CPU_] |3915| 
	.dwpsn	file "../Source/prod.c",line 3912,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3912| 
        ; branchcc occurs ; [] |3912| 
        B         $C$L743,UNC           ; [CPU_] |3912| 
        ; branch occurs ; [] |3912| 
$C$L287:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3820,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3820| 
        B         $C$L320,LO            ; [CPU_] |3820| 
        ; branchcc occurs ; [] |3820| 
	.dwpsn	file "../Source/prod.c",line 3824,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3824| 
        B         $C$L288,EQ            ; [CPU_] |3824| 
        ; branchcc occurs ; [] |3824| 
        CMPB      AL,#1                 ; [CPU_] |3824| 
        B         $C$L288,EQ            ; [CPU_] |3824| 
        ; branchcc occurs ; [] |3824| 
        CMPB      AL,#2                 ; [CPU_] |3824| 
        B         $C$L288,EQ            ; [CPU_] |3824| 
        ; branchcc occurs ; [] |3824| 
        ADDB      XAR4,#2               ; [CPU_] |3824| 
        MOVL      XAR0,#66              ; [CPU_] |3824| 
        CMPB      AL,#3                 ; [CPU_] |3824| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3824| 
        B         $C$L320,NEQ           ; [CPU_] |3824| 
        ; branchcc occurs ; [] |3824| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3830,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3830| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3830| 
        MOVL      XAR4,XAR5             ; [CPU_] |3830| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3830| 
        ADDB      XAR5,#2               ; [CPU_] |3830| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3830| 
        ADDB      XAR4,#6               ; [CPU_] |3830| 
        B         $C$L293,NEQ           ; [CPU_] |3830| 
        ; branchcc occurs ; [] |3830| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3831| 
        B         $C$L320,LO            ; [CPU_] |3831| 
        ; branchcc occurs ; [] |3831| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3836,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3836| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3838,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3838| 
        ADDL      ACC,XT                ; [CPU_] |3838| 
	.dwpsn	file "../Source/prod.c",line 3839,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3839| 
	.dwpsn	file "../Source/prod.c",line 3837,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3837| 
        ; branchcc occurs ; [] |3837| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3842,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3842| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3843,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3843| 
        B         $C$L291,EQ            ; [CPU_] |3843| 
        ; branchcc occurs ; [] |3843| 
	.dwpsn	file "../Source/prod.c",line 3842,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3842| 
        ADDB      XAR4,#1               ; [CPU_] |3842| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3842| 
        ; branchcc occurs ; [] |3842| 
        B         $C$L292,UNC           ; [CPU_] |3842| 
        ; branch occurs ; [] |3842| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3844,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3844| 
        MOVB      XAR0,#35              ; [CPU_] |3844| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3844| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3848,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3848| 
        B         $C$L320,EQ            ; [CPU_] |3848| 
        ; branchcc occurs ; [] |3848| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3854,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3854| 
        MOVL      XAR0,#66              ; [CPU_] |3854| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3854| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3854| 
        ADDB      ACC,#2                ; [CPU_] |3854| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3854| 
        MOVB      XAR0,#34              ; [CPU_] |3854| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3854| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3854| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3854| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3854| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3857,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3857| 
        MOV       *XAR4++,AL            ; [CPU_] |3857| 
	.dwpsn	file "../Source/prod.c",line 3856,column 12,is_stmt,isa 0
        INC       *-SP[53]              ; [CPU_] |3856| 
        MOV       AL,*-SP[51]           ; [CPU_] |3856| 
	.dwpsn	file "../Source/prod.c",line 3857,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3857| 
	.dwpsn	file "../Source/prod.c",line 3856,column 12,is_stmt,isa 0
        CMP       AL,*-SP[53]           ; [CPU_] |3856| 
        B         $C$L294,HI            ; [CPU_] |3856| 
        ; branchcc occurs ; [] |3856| 
        B         $C$L304,UNC           ; [CPU_] |3856| 
        ; branch occurs ; [] |3856| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3804| 
        MOVB      XAR0,#34              ; [CPU_] |3804| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3804| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3806,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3806| 
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3804| 
        MOV       *-SP[53],#3           ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3806,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3806| 
        CMPB      AL,#1                 ; [CPU_] |3806| 
        B         $C$L296,EQ            ; [CPU_] |3806| 
        ; branchcc occurs ; [] |3806| 
        MOVB      XAR1,#34              ; [CPU_] |3806| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3806| 
        B         $C$L743,NEQ           ; [CPU_] |3806| 
        ; branchcc occurs ; [] |3806| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3808,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3808| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3808| 
        MOVL      XAR0,#74              ; [CPU_] |3808| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3808| 
        MOVL      XAR0,#44              ; [CPU_] |3808| 
        ADDL      ACC,XAR6              ; [CPU_] |3808| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3808| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3808| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3811,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3811| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[53],AL           ; [CPU_] |3811| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3810,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3810| 
        ANDB      AL,#0xff              ; [CPU_] |3810| 
        MOV       *XAR4++,AL            ; [CPU_] |3810| 
	.dwpsn	file "../Source/prod.c",line 3811,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3811| 
        LSR       AL,8                  ; [CPU_] |3811| 
        MOV       *XAR4++,AL            ; [CPU_] |3811| 
	.dwpsn	file "../Source/prod.c",line 3809,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3809| 
        ; branchcc occurs ; [] |3809| 
        B         $C$L743,UNC           ; [CPU_] |3809| 
        ; branch occurs ; [] |3809| 
$C$L298:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3783,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3783| 
        B         $C$L320,LO            ; [CPU_] |3783| 
        ; branchcc occurs ; [] |3783| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3783| 
        MOVL      XAR0,#66              ; [CPU_] |3783| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3783| 
        ADDB      AL,#3                 ; [CPU_] |3783| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3783| 
        CMP       AL,*-SP[51]           ; [CPU_] |3783| 
        B         $C$L320,HI            ; [CPU_] |3783| 
        ; branchcc occurs ; [] |3783| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3788,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3788| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3788| 
        ; branch occurs ; [] |3788| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3789,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3789| 
        ADD       PL,AL                 ; [CPU_] |3789| 
        MOVL      ACC,XAR7              ; [CPU_] |3789| 
        ADD       ACC,PL                ; [CPU_] |3789| 
        MOVL      XAR7,ACC              ; [CPU_] |3789| 
	.dwpsn	file "../Source/prod.c",line 3788,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3788| 
	.dwpsn	file "../Source/prod.c",line 3789,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3789| 
        MOV       *XAR4++,AL            ; [CPU_] |3789| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3788,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3788| 
        MOVL      XAR0,#66              ; [CPU_] |3788| 
        MOVL      ACC,XAR7              ; [CPU_] |3788| 
        ADDB      ACC,#2                ; [CPU_] |3788| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3788| 
        MOV       AL,AR6                ; [CPU_] |3788| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3788| 
        B         $C$L299,LT            ; [CPU_] |3788| 
        ; branchcc occurs ; [] |3788| 
	.dwpsn	file "../Source/prod.c",line 3791,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3791| 
        MOVL      XAR0,#76              ; [CPU_] |3791| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3791| 
	.dwpsn	file "../Source/prod.c",line 3794,column 5,is_stmt,isa 0
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_strlen")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3794| 
        ; call occurs [#_strlen] ; [] |3794| 
	.dwpsn	file "../Source/prod.c",line 3795,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3795| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3796| 
	.dwpsn	file "../Source/prod.c",line 3795,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3795| 
        MOV       *-SP[53],#3           ; [CPU_] |3795| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3796| 
        ; branchcc occurs ; [] |3796| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3796,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3796| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3797,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3796| 
	.dwpsn	file "../Source/prod.c",line 3797,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3797| 
        INC       *-SP[53]              ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3796| 
        B         $C$L301,HI            ; [CPU_] |3796| 
        ; branchcc occurs ; [] |3796| 
	.dwpsn	file "../Source/prod.c",line 3800,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3800| 
        ; branch occurs ; [] |3800| 
$C$L302:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3763,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3763| 
        B         $C$L320,LO            ; [CPU_] |3763| 
        ; branchcc occurs ; [] |3763| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3768,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3768| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3768| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3770,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3770| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3770| 
	.dwpsn	file "../Source/prod.c",line 3771,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3771| 
        MOV       *XAR7++,AL            ; [CPU_] |3771| 
	.dwpsn	file "../Source/prod.c",line 3772,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |3772| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3772| 
        MOV       *XAR4++,AL            ; [CPU_] |3772| 
	.dwpsn	file "../Source/prod.c",line 3773,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3773| 
        MOV       *XAR7++,AL            ; [CPU_] |3773| 
	.dwpsn	file "../Source/prod.c",line 3769,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3769| 
        ; branchcc occurs ; [] |3769| 
	.dwpsn	file "../Source/prod.c",line 3773,column 6,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |3773| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3776,column 5,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |3776| 
	.dwpsn	file "../Source/prod.c",line 3779,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3779| 
        ; branch occurs ; [] |3779| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5688 | cmd_mode = SCI_MODE_ASCII;                                             
; 5689 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5690 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5691 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5694,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5694 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_update_units")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5694| 
        ; call occurs [#_update_units] ; [] |5694| 
	.dwpsn	file "../Source/prod.c",line 5687,column 5,is_stmt,isa 0
        MOV       *-SP[46],#0           ; [CPU_] |5687| 
	.dwpsn	file "../Source/prod.c",line 5695,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5695 | break;                                                                 
; 5697 | default:                                                               
; 5699 | // send back NACK?                                                     
; 5701 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5695| 
        ; branch occurs ; [] |5695| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5681,column 5,is_stmt,isa 0
        MOV       *-SP[45],#1           ; [CPU_] |5681| 
	.dwpsn	file "../Source/prod.c",line 5683,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5683| 
        ; branch occurs ; [] |5683| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4318,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4318| 
	.dwpsn	file "../Source/prod.c",line 4319,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4319| 
        ; branch occurs ; [] |4319| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4314,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4314| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4314| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_ssr_set")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4314| 
        ; call occurs [#_ssr_set] ; [] |4314| 
	.dwpsn	file "../Source/prod.c",line 4315,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4315| 
        ; branch occurs ; [] |4315| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5622,column 5,is_stmt,isa 0
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_conf_read")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5622| 
        ; call occurs [#_conf_read] ; [] |5622| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5625,column 5,is_stmt,isa 0
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5625| 
        ; call occurs [#_ad7738_setcal] ; [] |5625| 
	.dwpsn	file "../Source/prod.c",line 5626,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5626| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5626| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5626| 
	.dwpsn	file "../Source/prod.c",line 5627,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5627| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5627| 
        ; call occurs [#_ad7738_resetvall] ; [] |5627| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5631,column 5,is_stmt,isa 0
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_update_units")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5631| 
        ; call occurs [#_update_units] ; [] |5631| 
	.dwpsn	file "../Source/prod.c",line 5630,column 5,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |5630| 
	.dwpsn	file "../Source/prod.c",line 5633,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5633| 
        ; branch occurs ; [] |5633| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5586,column 5,is_stmt,isa 0
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_conf_default")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5586| 
        ; call occurs [#_conf_default] ; [] |5586| 
	.dwpsn	file "../Source/prod.c",line 5589,column 5,is_stmt,isa 0
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5589| 
        ; call occurs [#_lcd_clear] ; [] |5589| 
	.dwpsn	file "../Source/prod.c",line 5590,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5590| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5590| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5590| 
        ; call occurs [#_lcd_puts] ; [] |5590| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5593,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5593| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_delay_us")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5593| 
        ; call occurs [#_delay_us] ; [] |5593| 
	.dwpsn	file "../Source/prod.c",line 5592,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5592| 
        ; branchcc occurs ; [] |5592| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5597,column 5,is_stmt,isa 0
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_conf_write")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5597| 
        ; call occurs [#_conf_write] ; [] |5597| 
        MOVZ      AR1,AL                ; [CPU_] |5597| 
	.dwpsn	file "../Source/prod.c",line 5598,column 5,is_stmt,isa 0
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5598| 
        ; call occurs [#_ad7738_setcal] ; [] |5598| 
	.dwpsn	file "../Source/prod.c",line 5599,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5599| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5599| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5599| 
	.dwpsn	file "../Source/prod.c",line 5600,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5600| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5600| 
        ; call occurs [#_ad7738_resetvall] ; [] |5600| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5603,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5603| 
        ; branchcc occurs ; [] |5603| 
	.dwpsn	file "../Source/prod.c",line 5604,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5604| 
        MOVB      AL,#31                ; [CPU_] |5604| 
        SPM       #0                    ; [CPU_] 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5604| 
        ; call occurs [#_lcd_puts] ; [] |5604| 
	.dwpsn	file "../Source/prod.c",line 5605,column 6,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |5605| 
	.dwpsn	file "../Source/prod.c",line 5606,column 6,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |5606| 
	.dwpsn	file "../Source/prod.c",line 5607,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5607| 
        ; branch occurs ; [] |5607| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5608,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5608| 
        MOVB      AL,#31                ; [CPU_] |5608| 
        SPM       #0                    ; [CPU_] 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5608| 
        ; call occurs [#_lcd_puts] ; [] |5608| 
	.dwpsn	file "../Source/prod.c",line 5609,column 6,is_stmt,isa 0
        MOV       *-SP[39],#3           ; [CPU_] |5609| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5612,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5612| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_delay_us")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5612| 
        ; call occurs [#_delay_us] ; [] |5612| 
	.dwpsn	file "../Source/prod.c",line 5611,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5611| 
        ; branchcc occurs ; [] |5611| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5614,column 5,is_stmt,isa 0
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5614| 
        ; call occurs [#_lcd_clear] ; [] |5614| 
	.dwpsn	file "../Source/prod.c",line 5615,column 5,is_stmt,isa 0
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_update_units")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5615| 
        ; call occurs [#_update_units] ; [] |5615| 
$C$L317:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5704,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5704 | switch (bincmdresult) {                                                
; 5705 | case OK_SendResult:                                                    
; 5706 |         scia_send_bin(buff, j);         // send back                   
; 5708 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5709 |                 delay_us(2000);                 // 2ms                 
; 5710 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5712 |         break;                                                         
; 5714 | case Error_UnImpl:                                                     
; 5716 |         buff[1] = CmdUnImpl;                                           
; 5717 |         buff[2] = cmdbuff[1];                                          
; 5718 |         scia_send_bin(buff, 3);         // send back                   
; 5719 |         break;                                                         
; 5721 | case Error_Invalid:                                                    
; 5723 |         buff[1] = CmdInvalid;                                          
; 5724 |         buff[2] = cmdbuff[1];                                          
; 5725 |         scia_send_bin(buff, 3);         // send back                   
; 5726 |         break;                                                         
; 5728 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5704| 
        ; branchcc occurs ; [] |5704| 
        CMPB      AL,#1                 ; [CPU_] |5704| 
        B         $C$L321,EQ            ; [CPU_] |5704| 
        ; branchcc occurs ; [] |5704| 
        CMPB      AL,#2                 ; [CPU_] |5704| 
        B         $C$L320,EQ            ; [CPU_] |5704| 
        ; branchcc occurs ; [] |5704| 
        CMPB      AL,#3                 ; [CPU_] |5704| 
        B         $C$L634,NEQ           ; [CPU_] |5704| 
        ; branchcc occurs ; [] |5704| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5730 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5730| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5730| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5731,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5731 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5731| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5731| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5731| 
	.dwpsn	file "../Source/prod.c",line 5732,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5732 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5732| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5732| 
        ; call occurs [#_scia_send_bin] ; [] |5732| 
	.dwpsn	file "../Source/prod.c",line 5733,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5733 | break;                                                                 
; 5735 | default:                                                               
; 5737 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5733| 
        ; branch occurs ; [] |5733| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5723,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5723| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5723| 
	.dwpsn	file "../Source/prod.c",line 5726,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5726| 
        ; branch occurs ; [] |5726| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5716,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5716| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5716| 
	.dwpsn	file "../Source/prod.c",line 5719,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5719| 
        ; branch occurs ; [] |5719| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 946,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |946| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |946| 
        CMPB      AL,#79                ; [CPU_] |946| 
        B         $C$L324,GT            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#79                ; [CPU_] |946| 
        B         $C$L443,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#69                ; [CPU_] |946| 
        B         $C$L323,GT            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#69                ; [CPU_] |946| 
        B         $C$L507,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#66                ; [CPU_] |946| 
        B         $C$L591,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#67                ; [CPU_] |946| 
        B         $C$L530,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#68                ; [CPU_] |946| 
        B         $C$L514,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        B         $C$L625,UNC           ; [CPU_] |946| 
        ; branch occurs ; [] |946| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |946| 
        B         $C$L498,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#72                ; [CPU_] |946| 
        B         $C$L630,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#76                ; [CPU_] |946| 
        B         $C$L466,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        B         $C$L625,UNC           ; [CPU_] |946| 
        ; branch occurs ; [] |946| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |946| 
        B         $C$L325,GT            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#85                ; [CPU_] |946| 
        B         $C$L326,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#80                ; [CPU_] |946| 
        B         $C$L429,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#82                ; [CPU_] |946| 
        B         $C$L414,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#83                ; [CPU_] |946| 
        B         $C$L351,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        B         $C$L625,UNC           ; [CPU_] |946| 
        ; branch occurs ; [] |946| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |946| 
        B         $C$L628,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        CMPB      AL,#90                ; [CPU_] |946| 
        B         $C$L626,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
        B         $C$L625,UNC           ; [CPU_] |946| 
        ; branch occurs ; [] |946| 
$C$L326:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1114,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1114| 
        B         $C$L625,LO            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
	.dwpsn	file "../Source/prod.c",line 1117,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1117| 
        CMPB      AL,#73                ; [CPU_] |1117| 
        B         $C$L327,GT            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        CMPB      AL,#73                ; [CPU_] |1117| 
        B         $C$L338,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        CMPB      AL,#66                ; [CPU_] |1117| 
        B         $C$L330,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        CMPB      AL,#67                ; [CPU_] |1117| 
        B         $C$L347,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        CMPB      AL,#70                ; [CPU_] |1117| 
        B         $C$L344,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        B         $C$L625,UNC           ; [CPU_] |1117| 
        ; branch occurs ; [] |1117| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1117| 
        B         $C$L328,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        CMPB      AL,#83                ; [CPU_] |1117| 
        B         $C$L337,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        CMPB      AL,#87                ; [CPU_] |1117| 
        B         $C$L336,EQ            ; [CPU_] |1117| 
        ; branchcc occurs ; [] |1117| 
        B         $C$L625,UNC           ; [CPU_] |1117| 
        ; branch occurs ; [] |1117| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1134| 
        MOVL      XAR0,#44              ; [CPU_] |1134| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1134| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1134| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1134| 
        MOVL      XAR4,XAR1             ; [CPU_] |1134| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_sprintf")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1134| 
        ; call occurs [#_sprintf] ; [] |1134| 
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1135| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1135| 
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1134| 
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1135| 
        ; call occurs [#_scia_getparam] ; [] |1135| 
        CMPB      AL,#31                ; [CPU_] |1135| 
        B         $C$L329,LOS           ; [CPU_] |1135| 
        ; branchcc occurs ; [] |1135| 
	.dwpsn	file "../Source/prod.c",line 1139,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1139| 
        MOVB      XAR0,#31              ; [CPU_] |1139| 
	.dwpsn	file "../Source/prod.c",line 1138,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1138| 
	.dwpsn	file "../Source/prod.c",line 1139,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1139| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1142,column 6,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1142| 
        MOVL      XAR0,#76              ; [CPU_] |1142| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1142| 
        ADD       AH,AL                 ; [CPU_] |1142| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1142| 
        MOVU      ACC,AH                ; [CPU_] |1142| 
        MOVL      XAR5,XAR1             ; [CPU_] |1142| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_memcpy")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1142| 
        ; call occurs [#_memcpy] ; [] |1142| 
        MOVL      XAR4,XAR1             ; [CPU_] |1142| 
	.dwpsn	file "../Source/prod.c",line 1146,column 6,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_scia_puts")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1146| 
        ; call occurs [#_scia_puts] ; [] |1146| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1147| 
	.dwpsn	file "../Source/prod.c",line 1149,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1149| 
        ; branch occurs ; [] |1149| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1239,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1239| 
        MOVB      XAR0,#34              ; [CPU_] |1239| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1239| 
        CMPB      AL,#3                 ; [CPU_] |1239| 
        B         $C$L335,EQ            ; [CPU_] |1239| 
        ; branchcc occurs ; [] |1239| 
        MOVB      XAR1,#34              ; [CPU_] |1239| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1239| 
        CMPB      AL,#2                 ; [CPU_] |1239| 
        B         $C$L335,EQ            ; [CPU_] |1239| 
        ; branchcc occurs ; [] |1239| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1246,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1246| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] |1246| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1247| 
        MOVL      XAR0,#44              ; [CPU_] |1247| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1247| 
        MOV       *-SP[3],AL            ; [CPU_] |1247| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1247| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1247| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1247| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_sprintf")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1247| 
        ; call occurs [#_sprintf] ; [] |1247| 
        MOVL      XAR0,#44              ; [CPU_] |1247| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1247| 
	.dwpsn	file "../Source/prod.c",line 1248,column 7,is_stmt,isa 0
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_scia_puts")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1248| 
        ; call occurs [#_scia_puts] ; [] |1248| 
        MOV       AL,*-SP[39]           ; [CPU_] |1248| 
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1249| 
        B         $C$L332,GEQ           ; [CPU_] |1249| 
        ; branchcc occurs ; [] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1250| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_scia_puts")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1250| 
        ; call occurs [#_scia_puts] ; [] |1250| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1246,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1246| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1246| 
        B         $C$L331,LT            ; [CPU_] |1246| 
        ; branchcc occurs ; [] |1246| 
	.dwpsn	file "../Source/prod.c",line 1253,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1253| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_scia_puts")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1253| 
        ; call occurs [#_scia_puts] ; [] |1253| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1254| 
        MOVB      XAR0,#35              ; [CPU_] |1254| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1254| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1254| 
        MOV       *-SP[3],AL            ; [CPU_] |1254| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1254| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1254| 
        MOVL      XAR0,#74              ; [CPU_] |1254| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1254| 
        ADDL      ACC,XAR6              ; [CPU_] |1254| 
        MOVL      XAR4,ACC              ; [CPU_] |1254| 
        MOVL      XAR0,#44              ; [CPU_] |1254| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1254| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1254| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1254| 
        MOVL      XAR4,XAR1             ; [CPU_] |1254| 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_sprintf")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1254| 
        ; call occurs [#_sprintf] ; [] |1254| 
        MOVL      XAR4,XAR1             ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1257| 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1257| 
        MOVL      XAR5,XAR1             ; [CPU_] |1257| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1257| 
        ; call occurs [#_scia_getparam] ; [] |1257| 
        MOVL      XAR4,XAR1             ; [CPU_] |1257| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_scia_puts")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1258| 
        ; call occurs [#_scia_puts] ; [] |1258| 
	.dwpsn	file "../Source/prod.c",line 1259,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1259| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_scia_puts")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1259| 
        ; call occurs [#_scia_puts] ; [] |1259| 
        MOV       AL,*-SP[39]           ; [CPU_] |1259| 
	.dwpsn	file "../Source/prod.c",line 1260,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1265,column 6,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_atoi")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1265| 
        ; call occurs [#_atoi] ; [] |1265| 
        CMPB      AL,#7                 ; [CPU_] |1265| 
        B         $C$L333,HI            ; [CPU_] |1265| 
        ; branchcc occurs ; [] |1265| 
	.dwpsn	file "../Source/prod.c",line 1271,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1271| 
        MOVB      XAR1,#35              ; [CPU_] |1271| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1271| 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1272| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1272| 
	.dwpsn	file "../Source/prod.c",line 1271,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1271| 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1272| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1272| 
        MOVL      XAR0,#74              ; [CPU_] |1272| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1272| 
	.dwpsn	file "../Source/prod.c",line 1279,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1279| 
        ; branch occurs ; [] |1279| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1267| 
	.dwpsn	file "../Source/prod.c",line 1269,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1269| 
        ; branch occurs ; [] |1269| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1261,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1261| 
	.dwpsn	file "../Source/prod.c",line 1263,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1263| 
        ; branch occurs ; [] |1263| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1241,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1241| 
	.dwpsn	file "../Source/prod.c",line 1243,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1243| 
        ; branch occurs ; [] |1243| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1312| 
        MOVB      XAR0,#40              ; [CPU_] |1312| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1312| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1312| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1312| 
        MOVL      XAR0,#44              ; [CPU_] |1312| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1312| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1312| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_sprintf")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1312| 
        ; call occurs [#_sprintf] ; [] |1312| 
        MOVL      XAR0,#44              ; [CPU_] |1312| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1314| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1314| 
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1312| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1314| 
        ; call occurs [#_scia_getparam] ; [] |1314| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1314| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_strtod")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1315| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1315| 
        MOVB      XAR1,#40              ; [CPU_] |1315| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1315| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1315| 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_scia_puts")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1316| 
        ; call occurs [#_scia_puts] ; [] |1316| 
	.dwpsn	file "../Source/prod.c",line 1317,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1317| 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_scia_puts")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1317| 
        ; call occurs [#_scia_puts] ; [] |1317| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1319| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1319| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1319| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1319| 
        MOVB      XAR1,#40              ; [CPU_] |1319| 
        MOVL      XAR0,#44              ; [CPU_] |1319| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1319| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1319| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1319| 
        MOVL      XAR4,XAR1             ; [CPU_] |1319| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_sprintf")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1319| 
        ; call occurs [#_sprintf] ; [] |1319| 
        MOVL      XAR4,XAR1             ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_scia_puts")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1321| 
        ; call occurs [#_scia_puts] ; [] |1321| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1325,column 6,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1325| 
        ; call occurs [#_ad7738_setcal] ; [] |1325| 
	.dwpsn	file "../Source/prod.c",line 1328,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1328| 
        ; branch occurs ; [] |1328| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1122,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1122| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1122| 
        MOV       AL,#1024              ; [CPU_] |1122| 
        MOVL      XAR5,XAR1             ; [CPU_] |1122| 
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1122| 
        ; call occurs [#_scia_getparam] ; [] |1122| 
        MOVL      XAR4,XAR1             ; [CPU_] |1122| 
	.dwpsn	file "../Source/prod.c",line 1124,column 6,is_stmt,isa 0
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_atol")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1124| 
        ; call occurs [#_atol] ; [] |1124| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1124| 
	.dwpsn	file "../Source/prod.c",line 1126,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1126| 
	.dwpsn	file "../Source/prod.c",line 1124,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1124| 
	.dwpsn	file "../Source/prod.c",line 1126,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1126| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1126| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1126| 
	.dwpsn	file "../Source/prod.c",line 1129,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1129| 
        ; branch occurs ; [] |1129| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1204,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1204| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] |1204| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1205,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1205| 
        MOVL      XAR0,#44              ; [CPU_] |1205| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1205| 
        MOV       *-SP[3],AL            ; [CPU_] |1205| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1205| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1205| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_sprintf")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1205| 
        ; call occurs [#_sprintf] ; [] |1205| 
        MOVL      XAR0,#44              ; [CPU_] |1205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1205| 
	.dwpsn	file "../Source/prod.c",line 1206,column 7,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_scia_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1206| 
        ; call occurs [#_scia_puts] ; [] |1206| 
        MOV       AL,*-SP[39]           ; [CPU_] |1206| 
	.dwpsn	file "../Source/prod.c",line 1207,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1207| 
        B         $C$L340,GEQ           ; [CPU_] |1207| 
        ; branchcc occurs ; [] |1207| 
	.dwpsn	file "../Source/prod.c",line 1208,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1208| 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_scia_puts")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1208| 
        ; call occurs [#_scia_puts] ; [] |1208| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1204,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1204| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1204| 
        B         $C$L339,LT            ; [CPU_] |1204| 
        ; branchcc occurs ; [] |1204| 
	.dwpsn	file "../Source/prod.c",line 1211,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1211| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_scia_puts")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1211| 
        ; call occurs [#_scia_puts] ; [] |1211| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1212,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1212| 
        MOVB      XAR0,#34              ; [CPU_] |1212| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1212| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1212| 
        MOV       *-SP[3],AL            ; [CPU_] |1212| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1212| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1212| 
        MOVL      XAR0,#72              ; [CPU_] |1212| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1212| 
        ADDL      ACC,XAR6              ; [CPU_] |1212| 
        MOVL      XAR4,ACC              ; [CPU_] |1212| 
        MOVL      XAR0,#44              ; [CPU_] |1212| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1212| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1212| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1212| 
        MOVL      XAR4,XAR1             ; [CPU_] |1212| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_sprintf")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1212| 
        ; call occurs [#_sprintf] ; [] |1212| 
        MOVL      XAR4,XAR1             ; [CPU_] |1212| 
	.dwpsn	file "../Source/prod.c",line 1214,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1214| 
        MOV       AL,#1024              ; [CPU_] |1214| 
        MOVL      XAR5,XAR1             ; [CPU_] |1214| 
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1214| 
        ; call occurs [#_scia_getparam] ; [] |1214| 
        MOV       *-SP[39],AL           ; [CPU_] |1214| 
        MOVL      XAR4,XAR1             ; [CPU_] |1214| 
	.dwpsn	file "../Source/prod.c",line 1215,column 6,is_stmt,isa 0
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_scia_puts")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1215| 
        ; call occurs [#_scia_puts] ; [] |1215| 
	.dwpsn	file "../Source/prod.c",line 1216,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1216| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_scia_puts")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1216| 
        ; call occurs [#_scia_puts] ; [] |1216| 
        MOV       AL,*-SP[39]           ; [CPU_] |1216| 
	.dwpsn	file "../Source/prod.c",line 1217,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1217| 
        ; branchcc occurs ; [] |1217| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1221,column 6,is_stmt,isa 0
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_atoi")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1221| 
        ; call occurs [#_atoi] ; [] |1221| 
        CMPB      AL,#3                 ; [CPU_] |1221| 
        B         $C$L342,HI            ; [CPU_] |1221| 
        ; branchcc occurs ; [] |1221| 
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1227| 
        MOVB      XAR1,#34              ; [CPU_] |1227| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1227| 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1228| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1228| 
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1227| 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1228| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1228| 
        MOVL      XAR0,#72              ; [CPU_] |1228| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1228| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1228| 
        MOVL      XAR4,ACC              ; [CPU_] |1228| 
        MOVL      XAR0,#44              ; [CPU_] |1228| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1228| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1228| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1228| 
        MOVL      XAR4,XAR1             ; [CPU_] |1228| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_sprintf")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1228| 
        ; call occurs [#_sprintf] ; [] |1228| 
        MOVL      XAR4,XAR1             ; [CPU_] |1228| 
	.dwpsn	file "../Source/prod.c",line 1231,column 6,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_puts")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1231| 
        ; call occurs [#_scia_puts] ; [] |1231| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1232| 
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1235| 
        ; branch occurs ; [] |1235| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1223,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1223| 
	.dwpsn	file "../Source/prod.c",line 1225,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1225| 
        ; branch occurs ; [] |1225| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1218,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1218| 
	.dwpsn	file "../Source/prod.c",line 1219,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1219| 
        ; branch occurs ; [] |1219| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1285| 
        MOVL      XAR0,#44              ; [CPU_] |1285| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1285| 
        MOV       *-SP[3],#4096         ; [CPU_] |1285| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1285| 
        MOVL      XAR4,XAR1             ; [CPU_] |1285| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_sprintf")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1285| 
        ; call occurs [#_sprintf] ; [] |1285| 
        MOVL      XAR4,XAR1             ; [CPU_] |1285| 
	.dwpsn	file "../Source/prod.c",line 1287,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1287| 
        MOV       AL,#1024              ; [CPU_] |1287| 
        MOVL      XAR5,XAR1             ; [CPU_] |1287| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1287| 
        ; call occurs [#_scia_getparam] ; [] |1287| 
	.dwpsn	file "../Source/prod.c",line 1288,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1288| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_atoi")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1288| 
        ; call occurs [#_atoi] ; [] |1288| 
        MOV       *-SP[39],AL           ; [CPU_] |1288| 
	.dwpsn	file "../Source/prod.c",line 1289,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1289| 
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1289| 
        ; call occurs [#_scia_puts] ; [] |1289| 
        MOV       AL,*-SP[39]           ; [CPU_] |1289| 
	.dwpsn	file "../Source/prod.c",line 1291,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1291| 
        ; branchcc occurs ; [] |1291| 
        CMP       AL,#4096              ; [CPU_] |1291| 
        B         $C$L346,GT            ; [CPU_] |1291| 
        ; branchcc occurs ; [] |1291| 
	.dwpsn	file "../Source/prod.c",line 1296,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1296| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_scia_puts")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1296| 
        ; call occurs [#_scia_puts] ; [] |1296| 
	.dwpsn	file "../Source/prod.c",line 1298,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1298| 
        MOVL      XAR0,#44              ; [CPU_] |1298| 
        MOV       AL,*-SP[39]           ; [CPU_] |1298| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1298| 
        MOV       *-SP[3],AL            ; [CPU_] |1298| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1298| 
        MOVL      XAR4,XAR1             ; [CPU_] |1298| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_sprintf")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1298| 
        ; call occurs [#_sprintf] ; [] |1298| 
        MOVL      XAR4,XAR1             ; [CPU_] |1298| 
	.dwpsn	file "../Source/prod.c",line 1300,column 6,is_stmt,isa 0
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_scia_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1300| 
        ; call occurs [#_scia_puts] ; [] |1300| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1305| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1305| 
        MOV       AL,*-SP[39]           ; [CPU_] |1305| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1305| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1306,column 6,is_stmt,isa 0
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_maf_rst")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1306| 
        ; call occurs [#_maf_rst] ; [] |1306| 
	.dwpsn	file "../Source/prod.c",line 1308,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1308| 
        ; branch occurs ; [] |1308| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1293,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1293| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_scia_puts")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1293| 
        ; call occurs [#_scia_puts] ; [] |1293| 
	.dwpsn	file "../Source/prod.c",line 1284,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1284| 
        ; branch occurs ; [] |1284| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1156,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1156| 
        MOVL      XAR0,#44              ; [CPU_] |1156| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1156| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1156| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1156| 
        MOVL      XAR4,XAR1             ; [CPU_] |1156| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_sprintf")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1156| 
        ; call occurs [#_sprintf] ; [] |1156| 
        MOVL      XAR4,XAR1             ; [CPU_] |1156| 
	.dwpsn	file "../Source/prod.c",line 1157,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1157| 
        MOV       AL,#1024              ; [CPU_] |1157| 
        MOVL      XAR5,XAR1             ; [CPU_] |1157| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1157| 
        ; call occurs [#_scia_getparam] ; [] |1157| 
	.dwpsn	file "../Source/prod.c",line 1158,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1158| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_atoi")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1158| 
        ; call occurs [#_atoi] ; [] |1158| 
        MOV       *-SP[50],AL           ; [CPU_] |1158| 
	.dwpsn	file "../Source/prod.c",line 1159,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1159| 
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1159| 
        ; call occurs [#_scia_puts] ; [] |1159| 
        MOV       AL,*-SP[50]           ; [CPU_] |1159| 
	.dwpsn	file "../Source/prod.c",line 1161,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1161| 
        CMPB      AL,#4                 ; [CPU_] |1161| 
        B         $C$L350,HIS           ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
	.dwpsn	file "../Source/prod.c",line 1165,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1165| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1165| 
        ; call occurs [#_scia_puts] ; [] |1165| 
	.dwpsn	file "../Source/prod.c",line 1166,column 6,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |1166| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1171,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1171| 
        MOVL      XAR0,#44              ; [CPU_] |1171| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1171| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1171| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1171| 
        MOVL      XAR4,XAR1             ; [CPU_] |1171| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_sprintf")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1171| 
        ; call occurs [#_sprintf] ; [] |1171| 
        MOVL      XAR4,XAR1             ; [CPU_] |1171| 
	.dwpsn	file "../Source/prod.c",line 1172,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1172| 
        MOV       AL,#1024              ; [CPU_] |1172| 
        MOVL      XAR5,XAR1             ; [CPU_] |1172| 
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1172| 
        ; call occurs [#_scia_getparam] ; [] |1172| 
	.dwpsn	file "../Source/prod.c",line 1173,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1173| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_atoi")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1173| 
        ; call occurs [#_atoi] ; [] |1173| 
        MOV       *-SP[49],AL           ; [CPU_] |1173| 
	.dwpsn	file "../Source/prod.c",line 1174,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1174| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1174| 
        ; call occurs [#_scia_puts] ; [] |1174| 
        MOV       AL,*-SP[49]           ; [CPU_] |1174| 
	.dwpsn	file "../Source/prod.c",line 1178,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1178| 
        CMPB      AL,#20                ; [CPU_] |1178| 
        B         $C$L349,HIS           ; [CPU_] |1178| 
        ; branchcc occurs ; [] |1178| 
	.dwpsn	file "../Source/prod.c",line 1182,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1182| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_scia_puts")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1182| 
        ; call occurs [#_scia_puts] ; [] |1182| 
	.dwpsn	file "../Source/prod.c",line 1185,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1185| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1185| 
        MOVL      XAR0,#44              ; [CPU_] |1185| 
        MOV       AH,*-SP[49]           ; [CPU_] |1185| 
        ADD       AL,*-SP[50]           ; [CPU_] |1185| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1185| 
        MOV       *-SP[3],AL            ; [CPU_] |1185| 
        MOV       *-SP[4],AH            ; [CPU_] |1185| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1185| 
        DEC       *-SP[49]              ; [CPU_] |1185| 
        MOVL      XAR4,XAR1             ; [CPU_] |1185| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_sprintf")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1185| 
        ; call occurs [#_sprintf] ; [] |1185| 
        MOVL      XAR4,XAR1             ; [CPU_] |1185| 
	.dwpsn	file "../Source/prod.c",line 1187,column 6,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_scia_puts")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1187| 
        ; call occurs [#_scia_puts] ; [] |1187| 
        MOV       AL,*-SP[49]           ; [CPU_] |1187| 
	.dwpsn	file "../Source/prod.c",line 1188,column 6,is_stmt,isa 0
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_print_sensor")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1188| 
        ; call occurs [#_print_sensor] ; [] |1188| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1192,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1192| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1192| 
        MOVB      AL,#10                ; [CPU_] |1192| 
        MOV       T,*-SP[50]            ; [CPU_] |1192| 
        MPYU      ACC,T,AL              ; [CPU_] |1192| 
        ADDL      ACC,XAR6              ; [CPU_] |1192| 
        MOVL      XAR4,ACC              ; [CPU_] |1192| 
        MOVB      XAR0,#42              ; [CPU_] |1192| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[49]           ; [CPU_] |1192| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1192| 
	.dwpsn	file "../Source/prod.c",line 1193,column 6,is_stmt,isa 0
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1193| 
        ; call occurs [#_ad7738_setcal] ; [] |1193| 
        MOVL      XAR0,#78              ; [CPU_] |1193| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1193| 
	.dwpsn	file "../Source/prod.c",line 1195,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |1195| 
        MOVL      XAR1,ACC              ; [CPU_] |1195| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1195| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1195| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1195| 
	.dwpsn	file "../Source/prod.c",line 1196,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1196| 
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1196| 
        ; call occurs [#_ad7738_resetvall] ; [] |1196| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1200,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1200| 
        ; branch occurs ; [] |1200| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1180,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1180| 
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1180| 
        ; call occurs [#_scia_puts] ; [] |1180| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1170| 
        ; branch occurs ; [] |1170| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1163,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1163| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1163| 
        ; call occurs [#_scia_puts] ; [] |1163| 
	.dwpsn	file "../Source/prod.c",line 1155,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1155| 
        ; branch occurs ; [] |1155| 
$C$L351:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2016,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2016| 
        B         $C$L625,LO            ; [CPU_] |2016| 
        ; branchcc occurs ; [] |2016| 
	.dwpsn	file "../Source/prod.c",line 2021,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2021| 
        CMPB      AL,#78                ; [CPU_] |2021| 
        B         $C$L352,EQ            ; [CPU_] |2021| 
        ; branchcc occurs ; [] |2021| 
        CMPB      AL,#85                ; [CPU_] |2021| 
        B         $C$L352,EQ            ; [CPU_] |2021| 
        ; branchcc occurs ; [] |2021| 
        CMPB      AL,#66                ; [CPU_] |2021| 
        B         $C$L352,EQ            ; [CPU_] |2021| 
        ; branchcc occurs ; [] |2021| 
        CMPB      AL,#68                ; [CPU_] |2021| 
        B         $C$L625,NEQ           ; [CPU_] |2021| 
        ; branchcc occurs ; [] |2021| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2024,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2024| 
	.dwpsn	file "../Source/prod.c",line 2045,column 5,is_stmt,isa 0
        MOV       *-SP[39],#20          ; [CPU_] |2045| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2047| 
        MOVL      XAR0,#44              ; [CPU_] |2047| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2047| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2047| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2047| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_sprintf")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2047| 
        ; call occurs [#_sprintf] ; [] |2047| 
        MOVL      XAR0,#44              ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2048,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2048| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2048| 
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2048,column 6,is_stmt,isa 0
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2048| 
        ; call occurs [#_scia_getparam] ; [] |2048| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2048| 
	.dwpsn	file "../Source/prod.c",line 2049,column 6,is_stmt,isa 0
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_atoi")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2049| 
        ; call occurs [#_atoi] ; [] |2049| 
        MOV       *-SP[49],AL           ; [CPU_] |2049| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2049| 
	.dwpsn	file "../Source/prod.c",line 2050,column 6,is_stmt,isa 0
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_puts")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2050| 
        ; call occurs [#_scia_puts] ; [] |2050| 
        MOV       AL,*-SP[49]           ; [CPU_] |2050| 
	.dwpsn	file "../Source/prod.c",line 2054,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2054| 
        CMPB      AL,#20                ; [CPU_] |2054| 
        B         $C$L413,HIS           ; [CPU_] |2054| 
        ; branchcc occurs ; [] |2054| 
	.dwpsn	file "../Source/prod.c",line 2058,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2058| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_puts")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2058| 
        ; call occurs [#_scia_puts] ; [] |2058| 
	.dwpsn	file "../Source/prod.c",line 2059,column 5,is_stmt,isa 0
        DEC       *-SP[49]              ; [CPU_] |2059| 
	.dwpsn	file "../Source/prod.c",line 2061,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2061| 
        CMPB      AL,#66                ; [CPU_] |2061| 
        B         $C$L408,EQ            ; [CPU_] |2061| 
        ; branchcc occurs ; [] |2061| 
        CMPB      AL,#68                ; [CPU_] |2061| 
        B         $C$L407,EQ            ; [CPU_] |2061| 
        ; branchcc occurs ; [] |2061| 
        CMPB      AL,#78                ; [CPU_] |2061| 
        B         $C$L403,EQ            ; [CPU_] |2061| 
        ; branchcc occurs ; [] |2061| 
        CMPB      AL,#85                ; [CPU_] |2061| 
        B         $C$L625,NEQ           ; [CPU_] |2061| 
        ; branchcc occurs ; [] |2061| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2090| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2088| 
        MOV       AH,#0                 ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
        MOV       T,*-SP[49]            ; [CPU_] |2090| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2090| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2090| 
        MPYU      ACC,T,AL              ; [CPU_] |2090| 
        ADDL      ACC,XAR6              ; [CPU_] |2090| 
        ADDB      ACC,#124              ; [CPU_] |2090| 
        MOVL      XAR1,ACC              ; [CPU_] |2090| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2090| 
        CMPB      AL,#35                ; [CPU_] |2090| 
        B         $C$L354,GT            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        CMPB      AL,#35                ; [CPU_] |2090| 
        B         $C$L370,EQ            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        CMPB      AL,#16                ; [CPU_] |2090| 
        B         $C$L390,EQ            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        CMPB      AL,#17                ; [CPU_] |2090| 
        B         $C$L386,EQ            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        CMPB      AL,#34                ; [CPU_] |2090| 
        B         $C$L377,EQ            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        B         $C$L394,UNC           ; [CPU_] |2090| 
        ; branch occurs ; [] |2090| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2090| 
        B         $C$L363,EQ            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        CMPB      AL,#53                ; [CPU_] |2090| 
        B         $C$L359,EQ            ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
        CMPB      AL,#70                ; [CPU_] |2090| 
        B         $C$L394,NEQ           ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2279| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2279| 
        MOV       AL,#1024              ; [CPU_] |2279| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2279| 
        ; call occurs [#_scia_getparam] ; [] |2279| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2279| 
	.dwpsn	file "../Source/prod.c",line 2281,column 8,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_atoi")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2281| 
        ; call occurs [#_atoi] ; [] |2281| 
        MOV       *-SP[39],AL           ; [CPU_] |2281| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2281| 
	.dwpsn	file "../Source/prod.c",line 2282,column 8,is_stmt,isa 0
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2282| 
        ; call occurs [#_scia_puts] ; [] |2282| 
        MOV       AL,*-SP[39]           ; [CPU_] |2282| 
	.dwpsn	file "../Source/prod.c",line 2283,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2283| 
        B         $C$L356,EQ            ; [CPU_] |2283| 
        ; branchcc occurs ; [] |2283| 
        CMPB      AL,#7                 ; [CPU_] |2283| 
        B         $C$L357,EQ            ; [CPU_] |2283| 
        ; branchcc occurs ; [] |2283| 
	.dwpsn	file "../Source/prod.c",line 2284,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2284| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2284| 
        ; call occurs [#_scia_puts] ; [] |2284| 
$C$L356:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2286,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2286| 
        B         $C$L357,EQ            ; [CPU_] |2286| 
        ; branchcc occurs ; [] |2286| 
        CMPB      AL,#7                 ; [CPU_] |2286| 
        B         $C$L355,NEQ           ; [CPU_] |2286| 
        ; branchcc occurs ; [] |2286| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2287,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2287| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2287| 
        ; call occurs [#_scia_puts] ; [] |2287| 
        MOV       AL,*-SP[39]           ; [CPU_] |2287| 
	.dwpsn	file "../Source/prod.c",line 2289,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2289| 
        B         $C$L358,EQ            ; [CPU_] |2289| 
        ; branchcc occurs ; [] |2289| 
        CMPB      AL,#7                 ; [CPU_] |2289| 
        B         $C$L393,EQ            ; [CPU_] |2289| 
        ; branchcc occurs ; [] |2289| 
        B         $C$L394,UNC           ; [CPU_] |2289| 
        ; branch occurs ; [] |2289| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2291,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2291| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2291| 
        MOV       AL,*-SP[39]           ; [CPU_] |2291| 
	.dwpsn	file "../Source/prod.c",line 2292,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2292| 
	.dwpsn	file "../Source/prod.c",line 2293,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2293| 
        ; branch occurs ; [] |2293| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2254,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2254| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2254| 
        MOV       AL,#1024              ; [CPU_] |2254| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2254| 
        ; call occurs [#_scia_getparam] ; [] |2254| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2254| 
	.dwpsn	file "../Source/prod.c",line 2256,column 8,is_stmt,isa 0
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_atoi")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2256| 
        ; call occurs [#_atoi] ; [] |2256| 
        MOV       *-SP[39],AL           ; [CPU_] |2256| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2256| 
	.dwpsn	file "../Source/prod.c",line 2257,column 8,is_stmt,isa 0
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_scia_puts")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2257| 
        ; call occurs [#_scia_puts] ; [] |2257| 
        MOV       AL,*-SP[39]           ; [CPU_] |2257| 
	.dwpsn	file "../Source/prod.c",line 2258,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2258| 
        B         $C$L360,EQ            ; [CPU_] |2258| 
        ; branchcc occurs ; [] |2258| 
        CMPB      AL,#7                 ; [CPU_] |2258| 
        B         $C$L361,EQ            ; [CPU_] |2258| 
        ; branchcc occurs ; [] |2258| 
	.dwpsn	file "../Source/prod.c",line 2259,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2259| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_puts")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2259| 
        ; call occurs [#_scia_puts] ; [] |2259| 
$C$L360:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2261,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2261| 
        B         $C$L361,EQ            ; [CPU_] |2261| 
        ; branchcc occurs ; [] |2261| 
        CMPB      AL,#7                 ; [CPU_] |2261| 
        B         $C$L359,NEQ           ; [CPU_] |2261| 
        ; branchcc occurs ; [] |2261| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2262,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2262| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_scia_puts")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2262| 
        ; call occurs [#_scia_puts] ; [] |2262| 
        MOV       AL,*-SP[39]           ; [CPU_] |2262| 
	.dwpsn	file "../Source/prod.c",line 2264,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2264| 
        B         $C$L362,EQ            ; [CPU_] |2264| 
        ; branchcc occurs ; [] |2264| 
        CMPB      AL,#7                 ; [CPU_] |2264| 
        B         $C$L393,EQ            ; [CPU_] |2264| 
        ; branchcc occurs ; [] |2264| 
        B         $C$L394,UNC           ; [CPU_] |2264| 
        ; branch occurs ; [] |2264| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2266,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2266| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2266| 
        MOV       AL,*-SP[39]           ; [CPU_] |2266| 
	.dwpsn	file "../Source/prod.c",line 2267,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2267| 
	.dwpsn	file "../Source/prod.c",line 2268,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2268| 
        ; branch occurs ; [] |2268| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2220,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2220| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2220| 
        MOV       AL,#1024              ; [CPU_] |2220| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2220| 
        ; call occurs [#_scia_getparam] ; [] |2220| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2220| 
	.dwpsn	file "../Source/prod.c",line 2223,column 8,is_stmt,isa 0
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_atoi")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2223| 
        ; call occurs [#_atoi] ; [] |2223| 
        MOV       *-SP[39],AL           ; [CPU_] |2223| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2223| 
	.dwpsn	file "../Source/prod.c",line 2224,column 8,is_stmt,isa 0
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2224| 
        ; call occurs [#_scia_puts] ; [] |2224| 
        MOV       AL,*-SP[39]           ; [CPU_] |2224| 
	.dwpsn	file "../Source/prod.c",line 2225,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2225| 
        B         $C$L364,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#3                 ; [CPU_] |2225| 
        B         $C$L365,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#4                 ; [CPU_] |2225| 
        B         $C$L366,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#7                 ; [CPU_] |2225| 
        B         $C$L367,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
	.dwpsn	file "../Source/prod.c",line 2226,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2226| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_puts")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2226| 
        ; call occurs [#_scia_puts] ; [] |2226| 
$C$L364:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2228,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2228| 
        B         $C$L367,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2228| 
        B         $C$L367,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2228| 
        B         $C$L367,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
        CMPB      AL,#7                 ; [CPU_] |2228| 
        B         $C$L363,NEQ           ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2229,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2229| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_puts")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2229| 
        ; call occurs [#_scia_puts] ; [] |2229| 
        MOV       AL,*-SP[39]           ; [CPU_] |2229| 
	.dwpsn	file "../Source/prod.c",line 2231,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2231| 
        B         $C$L369,EQ            ; [CPU_] |2231| 
        ; branchcc occurs ; [] |2231| 
        CMPB      AL,#3                 ; [CPU_] |2231| 
        B         $C$L368,EQ            ; [CPU_] |2231| 
        ; branchcc occurs ; [] |2231| 
        CMPB      AL,#4                 ; [CPU_] |2231| 
        B         $C$L385,EQ            ; [CPU_] |2231| 
        ; branchcc occurs ; [] |2231| 
        CMPB      AL,#7                 ; [CPU_] |2231| 
        B         $C$L393,EQ            ; [CPU_] |2231| 
        ; branchcc occurs ; [] |2231| 
        B         $C$L394,UNC           ; [CPU_] |2231| 
        ; branch occurs ; [] |2231| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2237,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2237| 
        MOV       AH,#15820             ; [CPU_] |2237| 
	.dwpsn	file "../Source/prod.c",line 2239,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2239| 
        ; branch occurs ; [] |2239| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2233| 
        MOV       AH,#15649             ; [CPU_] |2233| 
	.dwpsn	file "../Source/prod.c",line 2235,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2235| 
        ; branch occurs ; [] |2235| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2186,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2186| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2186| 
        MOV       AL,#1024              ; [CPU_] |2186| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2186| 
        ; call occurs [#_scia_getparam] ; [] |2186| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2186| 
	.dwpsn	file "../Source/prod.c",line 2189,column 8,is_stmt,isa 0
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_atoi")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2189| 
        ; call occurs [#_atoi] ; [] |2189| 
        MOV       *-SP[39],AL           ; [CPU_] |2189| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2189| 
	.dwpsn	file "../Source/prod.c",line 2190,column 8,is_stmt,isa 0
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2190| 
        ; call occurs [#_scia_puts] ; [] |2190| 
        MOV       AL,*-SP[39]           ; [CPU_] |2190| 
	.dwpsn	file "../Source/prod.c",line 2191,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2191| 
        B         $C$L371,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
        CMPB      AL,#3                 ; [CPU_] |2191| 
        B         $C$L372,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
        CMPB      AL,#4                 ; [CPU_] |2191| 
        B         $C$L373,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
        CMPB      AL,#7                 ; [CPU_] |2191| 
        B         $C$L374,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
	.dwpsn	file "../Source/prod.c",line 2192,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2192| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2192| 
        ; call occurs [#_scia_puts] ; [] |2192| 
$C$L371:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2194,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2194| 
        B         $C$L374,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2194| 
        B         $C$L374,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2194| 
        B         $C$L374,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
        CMPB      AL,#7                 ; [CPU_] |2194| 
        B         $C$L370,NEQ           ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2195,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2195| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_scia_puts")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2195| 
        ; call occurs [#_scia_puts] ; [] |2195| 
        MOV       AL,*-SP[39]           ; [CPU_] |2195| 
	.dwpsn	file "../Source/prod.c",line 2197,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2197| 
        B         $C$L376,EQ            ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
        CMPB      AL,#3                 ; [CPU_] |2197| 
        B         $C$L385,EQ            ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
        CMPB      AL,#4                 ; [CPU_] |2197| 
        B         $C$L375,EQ            ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
        CMPB      AL,#7                 ; [CPU_] |2197| 
        B         $C$L393,EQ            ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
        B         $C$L394,UNC           ; [CPU_] |2197| 
        ; branch occurs ; [] |2197| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2207,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2207| 
        MOV       AH,#16672             ; [CPU_] |2207| 
	.dwpsn	file "../Source/prod.c",line 2209,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2209| 
        ; branch occurs ; [] |2209| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2199| 
        MOV       AH,#16073             ; [CPU_] |2199| 
	.dwpsn	file "../Source/prod.c",line 2201,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2201| 
        ; branch occurs ; [] |2201| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2152,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2152| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2152| 
        MOV       AL,#1024              ; [CPU_] |2152| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2152| 
        ; call occurs [#_scia_getparam] ; [] |2152| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2155,column 8,is_stmt,isa 0
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_atoi")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2155| 
        ; call occurs [#_atoi] ; [] |2155| 
        MOV       *-SP[39],AL           ; [CPU_] |2155| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2155| 
	.dwpsn	file "../Source/prod.c",line 2156,column 8,is_stmt,isa 0
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2156| 
        ; call occurs [#_scia_puts] ; [] |2156| 
        MOV       AL,*-SP[39]           ; [CPU_] |2156| 
	.dwpsn	file "../Source/prod.c",line 2157,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2157| 
        B         $C$L378,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
        CMPB      AL,#3                 ; [CPU_] |2157| 
        B         $C$L379,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
        CMPB      AL,#4                 ; [CPU_] |2157| 
        B         $C$L380,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
        CMPB      AL,#7                 ; [CPU_] |2157| 
        B         $C$L381,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
	.dwpsn	file "../Source/prod.c",line 2158,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2158| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2158| 
        ; call occurs [#_scia_puts] ; [] |2158| 
$C$L378:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2160,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2160| 
        B         $C$L381,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2160| 
        B         $C$L381,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2160| 
        B         $C$L381,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
        CMPB      AL,#7                 ; [CPU_] |2160| 
        B         $C$L377,NEQ           ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2161,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2161| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_puts")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2161| 
        ; call occurs [#_scia_puts] ; [] |2161| 
        MOV       AL,*-SP[39]           ; [CPU_] |2161| 
	.dwpsn	file "../Source/prod.c",line 2163,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2163| 
        B         $C$L385,EQ            ; [CPU_] |2163| 
        ; branchcc occurs ; [] |2163| 
        CMPB      AL,#3                 ; [CPU_] |2163| 
        B         $C$L384,EQ            ; [CPU_] |2163| 
        ; branchcc occurs ; [] |2163| 
        CMPB      AL,#4                 ; [CPU_] |2163| 
        B         $C$L382,EQ            ; [CPU_] |2163| 
        ; branchcc occurs ; [] |2163| 
        CMPB      AL,#7                 ; [CPU_] |2163| 
        B         $C$L393,EQ            ; [CPU_] |2163| 
        ; branchcc occurs ; [] |2163| 
        B         $C$L394,UNC           ; [CPU_] |2163| 
        ; branch occurs ; [] |2163| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2173,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2173| 
        MOV       AH,#16843             ; [CPU_] |2173| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2173| 
        MOV       AL,*-SP[39]           ; [CPU_] |2173| 
	.dwpsn	file "../Source/prod.c",line 2174,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2174| 
	.dwpsn	file "../Source/prod.c",line 2175,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2175| 
        ; branch occurs ; [] |2175| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2169,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2169| 
        MOV       AH,#16418             ; [CPU_] |2169| 
	.dwpsn	file "../Source/prod.c",line 2171,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2171| 
        ; branch occurs ; [] |2171| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2165,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2165| 
	.dwpsn	file "../Source/prod.c",line 2167,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2167| 
        ; branch occurs ; [] |2167| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2123,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2123| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2123| 
        MOV       AL,#1024              ; [CPU_] |2123| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2123| 
        ; call occurs [#_scia_getparam] ; [] |2123| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2123| 
	.dwpsn	file "../Source/prod.c",line 2125,column 8,is_stmt,isa 0
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_atoi")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2125| 
        ; call occurs [#_atoi] ; [] |2125| 
        MOV       *-SP[39],AL           ; [CPU_] |2125| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2125| 
	.dwpsn	file "../Source/prod.c",line 2126,column 8,is_stmt,isa 0
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2126| 
        ; call occurs [#_scia_puts] ; [] |2126| 
        MOV       AL,*-SP[39]           ; [CPU_] |2126| 
	.dwpsn	file "../Source/prod.c",line 2127,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2127| 
        B         $C$L388,EQ            ; [CPU_] |2127| 
        ; branchcc occurs ; [] |2127| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2127| 
        B         $C$L387,EQ            ; [CPU_] |2127| 
        ; branchcc occurs ; [] |2127| 
	.dwpsn	file "../Source/prod.c",line 2128,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2128| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2128| 
        ; call occurs [#_scia_puts] ; [] |2128| 
$C$L387:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2130,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2130| 
        B         $C$L388,EQ            ; [CPU_] |2130| 
        ; branchcc occurs ; [] |2130| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2130| 
        B         $C$L386,NEQ           ; [CPU_] |2130| 
        ; branchcc occurs ; [] |2130| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2131,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2131| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2131| 
        ; call occurs [#_scia_puts] ; [] |2131| 
        MOV       AL,*-SP[39]           ; [CPU_] |2131| 
	.dwpsn	file "../Source/prod.c",line 2133,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2133| 
        ; branchcc occurs ; [] |2133| 
        CMPB      AL,#1                 ; [CPU_] |2133| 
        B         $C$L396,EQ            ; [CPU_] |2133| 
        ; branchcc occurs ; [] |2133| 
        CMPB      AL,#7                 ; [CPU_] |2133| 
        B         $C$L393,EQ            ; [CPU_] |2133| 
        ; branchcc occurs ; [] |2133| 
        B         $C$L394,UNC           ; [CPU_] |2133| 
        ; branch occurs ; [] |2133| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2135,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2135| 
        MOV       AH,#16397             ; [CPU_] |2135| 
	.dwpsn	file "../Source/prod.c",line 2137,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2137| 
        ; branch occurs ; [] |2137| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2094,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2094| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2094| 
        MOV       AL,#1024              ; [CPU_] |2094| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2094| 
        ; call occurs [#_scia_getparam] ; [] |2094| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2094| 
	.dwpsn	file "../Source/prod.c",line 2096,column 8,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_atoi")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2096| 
        ; call occurs [#_atoi] ; [] |2096| 
        MOV       *-SP[39],AL           ; [CPU_] |2096| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2096| 
	.dwpsn	file "../Source/prod.c",line 2097,column 8,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2097| 
        ; call occurs [#_scia_puts] ; [] |2097| 
        MOV       AL,*-SP[39]           ; [CPU_] |2097| 
	.dwpsn	file "../Source/prod.c",line 2098,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2098| 
        B         $C$L392,EQ            ; [CPU_] |2098| 
        ; branchcc occurs ; [] |2098| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2098| 
        B         $C$L391,EQ            ; [CPU_] |2098| 
        ; branchcc occurs ; [] |2098| 
	.dwpsn	file "../Source/prod.c",line 2099,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2099| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_puts")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2099| 
        ; call occurs [#_scia_puts] ; [] |2099| 
$C$L391:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2101,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2101| 
        B         $C$L392,EQ            ; [CPU_] |2101| 
        ; branchcc occurs ; [] |2101| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2101| 
        B         $C$L390,NEQ           ; [CPU_] |2101| 
        ; branchcc occurs ; [] |2101| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2102,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2102| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2102| 
        ; call occurs [#_scia_puts] ; [] |2102| 
        MOV       AL,*-SP[39]           ; [CPU_] |2102| 
	.dwpsn	file "../Source/prod.c",line 2104,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2104| 
        ; branchcc occurs ; [] |2104| 
        CMPB      AL,#1                 ; [CPU_] |2104| 
        B         $C$L395,EQ            ; [CPU_] |2104| 
        ; branchcc occurs ; [] |2104| 
        CMPB      AL,#7                 ; [CPU_] |2104| 
        B         $C$L394,NEQ           ; [CPU_] |2104| 
        ; branchcc occurs ; [] |2104| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2114,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2114| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2114| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2114| 
        MOV       AL,#0                 ; [CPU_] |2114| 
        MOV       AH,#17096             ; [CPU_] |2114| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2114| 
        ; call occurs [#FS$$DIV] ; [] |2114| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2114| 
        MOV       AL,*-SP[39]           ; [CPU_] |2114| 
	.dwpsn	file "../Source/prod.c",line 2115,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2115| 
        MOV       *-SP[39],AL           ; [CPU_] |2115| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2305,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2305| 
        MOV       AH,#0                 ; [CPU_] |2305| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2305| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2305| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2305| 
        ; call occurs [#FS$$CMP] ; [] |2305| 
        CMPB      AL,#0                 ; [CPU_] |2305| 
        B         $C$L399,NEQ           ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
	.dwpsn	file "../Source/prod.c",line 2306,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2306| 
	.dwpsn	file "../Source/prod.c",line 2307,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2307| 
        ; branch occurs ; [] |2307| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2110,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2110| 
        MOV       AH,#16104             ; [CPU_] |2110| 
	.dwpsn	file "../Source/prod.c",line 2112,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2112| 
        ; branch occurs ; [] |2112| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2106,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2106| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2106| 
        MOV       AL,*-SP[39]           ; [CPU_] |2106| 
	.dwpsn	file "../Source/prod.c",line 2107,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2107| 
$C$L398:    
        MOV       *-SP[39],AL           ; [CPU_] |2107| 
$C$L399:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2310,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2310| 
        B         $C$L402,EQ            ; [CPU_] |2310| 
        ; branchcc occurs ; [] |2310| 
	.dwpsn	file "../Source/prod.c",line 2316,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2316| 
	.dwpsn	file "../Source/prod.c",line 2320,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2320| 
	.dwpsn	file "../Source/prod.c",line 2317,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2317| 
	.dwpsn	file "../Source/prod.c",line 2320,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2320| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2317,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2317| 
	.dwpsn	file "../Source/prod.c",line 2320,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2320| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2320| 
        ADD       AL,*-SP[49]           ; [CPU_] |2320| 
        MOV       *-SP[3],AL            ; [CPU_] |2320| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2320| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2320| 
        ANDB      AL,#0x0f              ; [CPU_] |2320| 
        MOV       ACC,AL << 1           ; [CPU_] |2320| 
        ADDL      ACC,XAR6              ; [CPU_] |2320| 
        MOVL      XAR4,ACC              ; [CPU_] |2320| 
        MOVL      XAR0,#44              ; [CPU_] |2320| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2320| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2320| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2320| 
        MOVL      XAR4,XAR1             ; [CPU_] |2320| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_sprintf")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2320| 
        ; call occurs [#_sprintf] ; [] |2320| 
        MOVL      XAR4,XAR1             ; [CPU_] |2320| 
	.dwpsn	file "../Source/prod.c",line 2322,column 6,is_stmt,isa 0
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_puts")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2322| 
        ; call occurs [#_scia_puts] ; [] |2322| 
        MOVL      XAR0,#40              ; [CPU_] |2322| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2322| 
	.dwpsn	file "../Source/prod.c",line 2324,column 11,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |2324| 
	.dwpsn	file "../Source/prod.c",line 2318,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2318| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2325,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |2325| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2325| 
        CMPL      ACC,XAR6              ; [CPU_] |2325| 
        B         $C$L401,NEQ           ; [CPU_] |2325| 
        ; branchcc occurs ; [] |2325| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2326,column 8,is_stmt,isa 0
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_update_units")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2326| 
        ; call occurs [#_update_units] ; [] |2326| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2328,column 8,is_stmt,isa 0
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2328| 
        ; call occurs [#_ad7738_setcal] ; [] |2328| 
        MOVL      XAR0,#78              ; [CPU_] |2328| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2328| 
	.dwpsn	file "../Source/prod.c",line 2329,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |2329| 
        MOVL      XAR4,ACC              ; [CPU_] |2329| 
        MOVL      *-SP[56],ACC          ; [CPU_] |2329| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2329| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2329| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2329| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |2329| 
	.dwpsn	file "../Source/prod.c",line 2330,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2330| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2330| 
        ; call occurs [#_ad7738_resetvall] ; [] |2330| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2324,column 19,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |2324| 
        ADDB      XAR1,#10              ; [CPU_] |2324| 
        MOV       AL,*-SP[50]           ; [CPU_] |2324| 
        CMPB      AL,#4                 ; [CPU_] |2324| 
        B         $C$L400,LO            ; [CPU_] |2324| 
        ; branchcc occurs ; [] |2324| 
        B         $C$L632,UNC           ; [CPU_] |2324| 
        ; branch occurs ; [] |2324| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2311,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2311| 
	.dwpsn	file "../Source/prod.c",line 2313,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2313| 
        ; branch occurs ; [] |2313| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2067,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2067| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2067| 
        MOVL      XAR0,#44              ; [CPU_] |2067| 
        ADD       AL,*-SP[49]           ; [CPU_] |2067| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2067| 
        MOV       *-SP[3],AL            ; [CPU_] |2067| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2067| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2067| 
        MOV       *-SP[39],AL           ; [CPU_] |2067| 
        MOVL      XAR4,XAR1             ; [CPU_] |2067| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_sprintf")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2067| 
        ; call occurs [#_sprintf] ; [] |2067| 
	.dwpsn	file "../Source/prod.c",line 2069,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2069| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2069| 
	.dwpsn	file "../Source/prod.c",line 2067,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2067| 
	.dwpsn	file "../Source/prod.c",line 2069,column 6,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2069| 
        ; call occurs [#_scia_getparam] ; [] |2069| 
        MOVZ      AR6,AL                ; [CPU_] |2069| 
        CMPB      AL,#15                ; [CPU_] |2069| 
        B         $C$L404,LOS           ; [CPU_] |2069| 
        ; branchcc occurs ; [] |2069| 
	.dwpsn	file "../Source/prod.c",line 2073,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2073| 
        MOVB      XAR0,#15              ; [CPU_] |2073| 
	.dwpsn	file "../Source/prod.c",line 2072,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2072| 
	.dwpsn	file "../Source/prod.c",line 2073,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2073| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2075,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2075| 
        MOVB      AL,#152               ; [CPU_] |2075| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2075| 
        MOV       T,*-SP[49]            ; [CPU_] |2075| 
        MPYU      ACC,T,AL              ; [CPU_] |2075| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2075| 
        ADDL      ACC,XAR7              ; [CPU_] |2075| 
        ADDB      ACC,#98               ; [CPU_] |2075| 
        MOVL      XAR1,ACC              ; [CPU_] |2075| 
        MOVL      XAR4,ACC              ; [CPU_] |2075| 
        MOVB      AH,#1                 ; [CPU_] |2075| 
        ADD       AH,AR6                ; [CPU_] |2075| 
        MOVU      ACC,AH                ; [CPU_] |2075| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_memcpy")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2075| 
        ; call occurs [#_memcpy] ; [] |2075| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2075| 
	.dwpsn	file "../Source/prod.c",line 2077,column 6,is_stmt,isa 0
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2077| 
        ; call occurs [#_scia_puts] ; [] |2077| 
	.dwpsn	file "../Source/prod.c",line 2078,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2078| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2078| 
        ; call occurs [#_scia_puts] ; [] |2078| 
	.dwpsn	file "../Source/prod.c",line 2081,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2081| 
        MOV       AL,*-SP[39]           ; [CPU_] |2081| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2081| 
        MOV       *-SP[3],AL            ; [CPU_] |2081| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2081| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2081| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2081| 
        MOVL      XAR4,XAR1             ; [CPU_] |2081| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_sprintf")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2081| 
        ; call occurs [#_sprintf] ; [] |2081| 
        MOVL      XAR4,XAR1             ; [CPU_] |2081| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2083,column 6,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2083| 
        ; call occurs [#_scia_puts] ; [] |2083| 
	.dwpsn	file "../Source/prod.c",line 2084,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2084| 
        ; branch occurs ; [] |2084| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2378| 
        MOVB      AL,#152               ; [CPU_] |2378| 
        MOV       T,*-SP[49]            ; [CPU_] |2378| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2378| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2378| 
        MPYU      ACC,T,AL              ; [CPU_] |2378| 
        MOVB      XAR0,#124             ; [CPU_] |2378| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2378| 
        ADDL      ACC,XAR6              ; [CPU_] |2378| 
        MOVL      XAR1,ACC              ; [CPU_] |2378| 
        MOVB      AL,#1                 ; [CPU_] |2378| 
        ADD       AL,*-SP[49]           ; [CPU_] |2378| 
        MOV       *-SP[39],AL           ; [CPU_] |2378| 
        MOV       *-SP[3],AL            ; [CPU_] |2378| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2378| 
        MOVL      XAR0,#70              ; [CPU_] |2378| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2378| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2378| 
        MOV       ACC,AL << 1           ; [CPU_] |2378| 
        ADDL      ACC,XAR6              ; [CPU_] |2378| 
        MOVL      XAR4,ACC              ; [CPU_] |2378| 
        MOVL      XAR0,#44              ; [CPU_] |2378| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2378| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2378| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2378| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_sprintf")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2378| 
        ; call occurs [#_sprintf] ; [] |2378| 
        MOVL      XAR0,#44              ; [CPU_] |2378| 
	.dwpsn	file "../Source/prod.c",line 2380,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2380| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2380| 
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2378| 
	.dwpsn	file "../Source/prod.c",line 2380,column 6,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2380| 
        ; call occurs [#_scia_getparam] ; [] |2380| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2380,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2380| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_strtod")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2381,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2381| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2381| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2381| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2382| 
        ; call occurs [#_scia_puts] ; [] |2382| 
	.dwpsn	file "../Source/prod.c",line 2383,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2383| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2383| 
        ; call occurs [#_scia_puts] ; [] |2383| 
	.dwpsn	file "../Source/prod.c",line 2385,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2385| 
        MOVL      XAR0,#44              ; [CPU_] |2385| 
        MOV       AL,*-SP[39]           ; [CPU_] |2385| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2385| 
        MOV       *-SP[3],AL            ; [CPU_] |2385| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2385| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_sprintf")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2385| 
        ; call occurs [#_sprintf] ; [] |2385| 
        MOVL      XAR0,#44              ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2386| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2386| 
	.dwpsn	file "../Source/prod.c",line 2385,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 6,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2386| 
        ; call occurs [#_scia_getparam] ; [] |2386| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_strtod")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2387,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2387| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2387| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2387| 
	.dwpsn	file "../Source/prod.c",line 2388,column 6,is_stmt,isa 0
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2388| 
        ; call occurs [#_scia_puts] ; [] |2388| 
	.dwpsn	file "../Source/prod.c",line 2389,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2389| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2389| 
        ; call occurs [#_scia_puts] ; [] |2389| 
	.dwpsn	file "../Source/prod.c",line 2392,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2392| 
        MOVB      XAR0,#228             ; [CPU_] |2392| 
        MOV       AL,*-SP[39]           ; [CPU_] |2392| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2392| 
        MOV       *-SP[3],AL            ; [CPU_] |2392| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2392| 
        MOVB      XAR0,#230             ; [CPU_] |2392| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2392| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2392| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2392| 
	.dwpsn	file "../Source/prod.c",line 2401,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2401| 
        ; branch occurs ; [] |2401| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[49]           ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2341,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2341| 
        MOV       AL,*-SP[39]           ; [CPU_] |2341| 
        MOVL      XAR0,#44              ; [CPU_] |2341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2341| 
        MOV       *-SP[3],AL            ; [CPU_] |2341| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2341| 
        MOVL      XAR4,XAR1             ; [CPU_] |2341| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_sprintf")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2341| 
        ; call occurs [#_sprintf] ; [] |2341| 
        MOVL      XAR4,XAR1             ; [CPU_] |2341| 
	.dwpsn	file "../Source/prod.c",line 2342,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2342| 
        MOV       AL,#1024              ; [CPU_] |2342| 
        MOVL      XAR5,XAR1             ; [CPU_] |2342| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2342| 
        ; call occurs [#_scia_getparam] ; [] |2342| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_strtod")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2344,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2344| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2344| 
        ; call occurs [#_scia_puts] ; [] |2344| 
	.dwpsn	file "../Source/prod.c",line 2346,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2346| 
        MOV       AH,#0                 ; [CPU_] |2346| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2346| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2346| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2346| 
        ; call occurs [#FS$$CMP] ; [] |2346| 
        CMPB      AL,#0                 ; [CPU_] |2346| 
        B         $C$L412,EQ            ; [CPU_] |2346| 
        ; branchcc occurs ; [] |2346| 
	.dwpsn	file "../Source/prod.c",line 2350,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2350| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2350| 
        ; call occurs [#_scia_puts] ; [] |2350| 
	.dwpsn	file "../Source/prod.c",line 2351,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2351| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2351| 
        MOVB      AL,#152               ; [CPU_] |2351| 
        MOV       T,*-SP[49]            ; [CPU_] |2351| 
        MPYU      ACC,T,AL              ; [CPU_] |2351| 
        ADDL      ACC,XAR6              ; [CPU_] |2351| 
        MOVL      XAR1,ACC              ; [CPU_] |2351| 
        MOVB      XAR0,#224             ; [CPU_] |2351| 
	.dwpsn	file "../Source/prod.c",line 2354,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2354| 
	.dwpsn	file "../Source/prod.c",line 2351,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2351| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2351| 
	.dwpsn	file "../Source/prod.c",line 2354,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2354| 
        MOV       AL,*-SP[39]           ; [CPU_] |2354| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2354| 
        MOV       *-SP[3],AL            ; [CPU_] |2354| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2354| 
        MOVL      XAR0,#44              ; [CPU_] |2354| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2354| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2354| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_sprintf")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2354| 
        ; call occurs [#_sprintf] ; [] |2354| 
        MOVL      XAR0,#44              ; [CPU_] |2354| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2354| 
	.dwpsn	file "../Source/prod.c",line 2356,column 6,is_stmt,isa 0
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2356| 
        ; call occurs [#_scia_puts] ; [] |2356| 
	.dwpsn	file "../Source/prod.c",line 2352,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2352| 
	.dwpsn	file "../Source/prod.c",line 2358,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2358| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2358| 
        CMPB      AL,#247               ; [CPU_] |2358| 
        B         $C$L632,NEQ           ; [CPU_] |2358| 
        ; branchcc occurs ; [] |2358| 
	.dwpsn	file "../Source/prod.c",line 2360,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2360| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2360| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2360| 
        MOV       AL,#0                 ; [CPU_] |2360| 
        MOV       AH,#17096             ; [CPU_] |2360| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2360| 
        ; call occurs [#FS$$DIV] ; [] |2360| 
        MOVB      XAR0,#126             ; [CPU_] |2360| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2360| 
        MOVL      XAR0,#40              ; [CPU_] |2360| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2360| 
	.dwpsn	file "../Source/prod.c",line 2363,column 12,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |2363| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2364,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[49]          ; [CPU_] |2364| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2364| 
        CMPL      ACC,XAR6              ; [CPU_] |2364| 
        B         $C$L411,NEQ           ; [CPU_] |2364| 
        ; branchcc occurs ; [] |2364| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2367,column 9,is_stmt,isa 0
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2367| 
        ; call occurs [#_ad7738_setcal] ; [] |2367| 
        MOVL      XAR0,#78              ; [CPU_] |2367| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2367| 
	.dwpsn	file "../Source/prod.c",line 2368,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |2368| 
        MOVL      XAR4,ACC              ; [CPU_] |2368| 
        MOVL      *-SP[56],ACC          ; [CPU_] |2368| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2368| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2368| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2368| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |2368| 
	.dwpsn	file "../Source/prod.c",line 2369,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2369| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2369| 
        ; call occurs [#_ad7738_resetvall] ; [] |2369| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2363,column 20,is_stmt,isa 0
        INC       *-SP[50]              ; [CPU_] |2363| 
        ADDB      XAR1,#10              ; [CPU_] |2363| 
        MOV       AL,*-SP[50]           ; [CPU_] |2363| 
        CMPB      AL,#4                 ; [CPU_] |2363| 
        B         $C$L410,LO            ; [CPU_] |2363| 
        ; branchcc occurs ; [] |2363| 
        B         $C$L632,UNC           ; [CPU_] |2363| 
        ; branch occurs ; [] |2363| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2348,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2348| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2348| 
        ; call occurs [#_scia_puts] ; [] |2348| 
	.dwpsn	file "../Source/prod.c",line 2340,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2340| 
        ; branch occurs ; [] |2340| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2056,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2056| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_scia_puts")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2056| 
        ; call occurs [#_scia_puts] ; [] |2056| 
	.dwpsn	file "../Source/prod.c",line 2046,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2046| 
        ; branch occurs ; [] |2046| 
$C$L414:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3018,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3018| 
        B         $C$L625,LO            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
	.dwpsn	file "../Source/prod.c",line 3021,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3021| 
        CMPB      AL,#83                ; [CPU_] |3021| 
        B         $C$L415,GT            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        CMPB      AL,#83                ; [CPU_] |3021| 
        B         $C$L419,EQ            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        CMPB      AL,#73                ; [CPU_] |3021| 
        B         $C$L424,EQ            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        CMPB      AL,#76                ; [CPU_] |3021| 
        B         $C$L428,EQ            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        CMPB      AL,#80                ; [CPU_] |3021| 
        B         $C$L421,EQ            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        B         $C$L625,UNC           ; [CPU_] |3021| 
        ; branch occurs ; [] |3021| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3021| 
        B         $C$L417,EQ            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        CMPB      AL,#86                ; [CPU_] |3021| 
        B         $C$L625,NEQ           ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3049,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3049| 
        B         $C$L416,LOS           ; [CPU_] |3049| 
        ; branchcc occurs ; [] |3049| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3049,column 6,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_atoi")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3049| 
        ; call occurs [#_atoi] ; [] |3049| 
        CMPB      AL,#4                 ; [CPU_] |3049| 
        B         $C$L416,GT            ; [CPU_] |3049| 
        ; branchcc occurs ; [] |3049| 
        CMPB      AL,#0                 ; [CPU_] |3049| 
        B         $C$L416,LEQ           ; [CPU_] |3049| 
        ; branchcc occurs ; [] |3049| 
	.dwpsn	file "../Source/prod.c",line 3051,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3051| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3051| 
        ADD       ACC,AR5               ; [CPU_] |3051| 
        MOVL      XAR4,ACC              ; [CPU_] |3051| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3051| 
	.dwpsn	file "../Source/prod.c",line 3052,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3052| 
        ; branch occurs ; [] |3052| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3053,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3053| 
        B         $C$L426,UNC           ; [CPU_] |3053| 
        ; branch occurs ; [] |3053| 
$C$L417:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3025,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3025| 
        B         $C$L418,LOS           ; [CPU_] |3025| 
        ; branchcc occurs ; [] |3025| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3025,column 6,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_atoi")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3025| 
        ; call occurs [#_atoi] ; [] |3025| 
        CMPB      AL,#4                 ; [CPU_] |3025| 
        MOVZ      AR4,AL                ; [CPU_] |3025| 
        B         $C$L418,GT            ; [CPU_] |3025| 
        ; branchcc occurs ; [] |3025| 
        CMPB      AL,#0                 ; [CPU_] |3025| 
        B         $C$L418,LEQ           ; [CPU_] |3025| 
        ; branchcc occurs ; [] |3025| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3027,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3027| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3027| 
	.dwpsn	file "../Source/prod.c",line 3030,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3030| 
        ; branch occurs ; [] |3030| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3031,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3031| 
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3031| 
        ; call occurs [#_ad7738_resettare] ; [] |3031| 
	.dwpsn	file "../Source/prod.c",line 3032,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3032| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3032| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3032| 
	.dwpsn	file "../Source/prod.c",line 3033,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3033| 
        B         $C$L426,UNC           ; [CPU_] |3033| 
        ; branch occurs ; [] |3033| 
$C$L419:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3059,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3059| 
        B         $C$L420,LOS           ; [CPU_] |3059| 
        ; branchcc occurs ; [] |3059| 
        MOVL      ACC,XAR4              ; [CPU_] |3059| 
        MOVL      XAR0,#66              ; [CPU_] |3059| 
        ADDB      ACC,#2                ; [CPU_] |3059| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3059| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3059| 
        CMPB      AL,#67                ; [CPU_] |3059| 
        B         $C$L420,NEQ           ; [CPU_] |3059| 
        ; branchcc occurs ; [] |3059| 
	.dwpsn	file "../Source/prod.c",line 3060,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3060| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3060| 
        ; call occurs [#_shunt_switch] ; [] |3060| 
	.dwpsn	file "../Source/prod.c",line 3061,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3061| 
	.dwpsn	file "../Source/prod.c",line 3062,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3062| 
        ; branch occurs ; [] |3062| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3063,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3063| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3063| 
        ; call occurs [#_shunt_switch] ; [] |3063| 
	.dwpsn	file "../Source/prod.c",line 3064,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3064| 
        B         $C$L631,UNC           ; [CPU_] |3064| 
        ; branch occurs ; [] |3064| 
$C$L421:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3039,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3039| 
        B         $C$L423,LOS           ; [CPU_] |3039| 
        ; branchcc occurs ; [] |3039| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3039,column 6,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_atoi")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3039| 
        ; call occurs [#_atoi] ; [] |3039| 
        CMPB      AL,#4                 ; [CPU_] |3039| 
        B         $C$L423,GT            ; [CPU_] |3039| 
        ; branchcc occurs ; [] |3039| 
        CMPB      AL,#0                 ; [CPU_] |3039| 
        B         $C$L423,LEQ           ; [CPU_] |3039| 
        ; branchcc occurs ; [] |3039| 
	.dwpsn	file "../Source/prod.c",line 3041,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3041| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3041| 
        ADD       ACC,AR5               ; [CPU_] |3041| 
        MOVL      XAR4,ACC              ; [CPU_] |3041| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3041| 
$C$L422:    
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3041| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3041| 
	.dwpsn	file "../Source/prod.c",line 3042,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3042| 
        ; branch occurs ; [] |3042| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3043,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3043| 
        B         $C$L422,UNC           ; [CPU_] |3043| 
        ; branch occurs ; [] |3043| 
$C$L424:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3078,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3078| 
        B         $C$L427,LOS           ; [CPU_] |3078| 
        ; branchcc occurs ; [] |3078| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3078,column 6,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_atoi")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3078| 
        ; call occurs [#_atoi] ; [] |3078| 
        CMPB      AL,#2                 ; [CPU_] |3078| 
        B         $C$L427,GT            ; [CPU_] |3078| 
        ; branchcc occurs ; [] |3078| 
        CMPB      AL,#0                 ; [CPU_] |3078| 
        B         $C$L427,LEQ           ; [CPU_] |3078| 
        ; branchcc occurs ; [] |3078| 
	.dwpsn	file "../Source/prod.c",line 3080,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3080| 
        ADD       AR6,AL                ; [CPU_] |3080| 
        MOVL      XAR0,#78              ; [CPU_] |3080| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3080| 
        ADD       ACC,AR6               ; [CPU_] |3080| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3080| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3080| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3080| 
        ; call occurs [#_ad7738_resettare] ; [] |3080| 
	.dwpsn	file "../Source/prod.c",line 3081,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3081| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3081| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3081| 
	.dwpsn	file "../Source/prod.c",line 3082,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3082| 
$C$L426:    
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3082| 
        ; call occurs [#_ad7738_resetvall] ; [] |3082| 
	.dwpsn	file "../Source/prod.c",line 3083,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3083| 
        ; branch occurs ; [] |3083| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3084,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3084| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3084| 
        ; call occurs [#_ad7738_resettare] ; [] |3084| 
	.dwpsn	file "../Source/prod.c",line 3085,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3085| 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3085| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3085| 
	.dwpsn	file "../Source/prod.c",line 3086,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3086| 
        B         $C$L426,UNC           ; [CPU_] |3086| 
        ; branch occurs ; [] |3086| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3070,column 6,is_stmt,isa 0
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_atoi")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3070| 
        ; call occurs [#_atoi] ; [] |3070| 
	.dwpsn	file "../Source/prod.c",line 3073,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3073| 
        MOV       *-SP[50],AL           ; [CPU_] |3073| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3073| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3073| 
	.dwpsn	file "../Source/prod.c",line 3074,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3074| 
        ; branch occurs ; [] |3074| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1021,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1021| 
        CMPB      AL,#76                ; [CPU_] |1021| 
        B         $C$L430,GT            ; [CPU_] |1021| 
        ; branchcc occurs ; [] |1021| 
        CMPB      AL,#76                ; [CPU_] |1021| 
        B         $C$L438,EQ            ; [CPU_] |1021| 
        ; branchcc occurs ; [] |1021| 
        CMPB      AL,#65                ; [CPU_] |1021| 
        B         $C$L431,EQ            ; [CPU_] |1021| 
        ; branchcc occurs ; [] |1021| 
        CMPB      AL,#68                ; [CPU_] |1021| 
        B         $C$L442,EQ            ; [CPU_] |1021| 
        ; branchcc occurs ; [] |1021| 
        B         $C$L625,UNC           ; [CPU_] |1021| 
        ; branch occurs ; [] |1021| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1021| 
        B         $C$L441,EQ            ; [CPU_] |1021| 
        ; branchcc occurs ; [] |1021| 
        CMPB      AL,#83                ; [CPU_] |1021| 
        B         $C$L439,EQ            ; [CPU_] |1021| 
        ; branchcc occurs ; [] |1021| 
        B         $C$L625,UNC           ; [CPU_] |1021| 
        ; branch occurs ; [] |1021| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1026,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1026| 
	.dwpsn	file "../Source/prod.c",line 1027,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1027| 
	.dwpsn	file "../Source/prod.c",line 1026,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1026| 
	.dwpsn	file "../Source/prod.c",line 1027,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1027| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1027| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1027| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1027| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1027| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1027| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1027| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1027| 
        MOVL      XAR4,XAR1             ; [CPU_] |1027| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_sprintf")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1027| 
        ; call occurs [#_sprintf] ; [] |1027| 
	.dwpsn	file "../Source/prod.c",line 1029,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1029| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_scia_puts")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1029| 
        ; call occurs [#_scia_puts] ; [] |1029| 
	.dwpsn	file "../Source/prod.c",line 1030,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1030| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1030| 
        LSR       AL,8                  ; [CPU_] |1030| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1030| 
        MOV       *-SP[3],AL            ; [CPU_] |1030| 
        IN        AL,*(04004H)          ; [CPU_] |1030| 
        MOVL      XAR4,XAR1             ; [CPU_] |1030| 
        ANDB      AL,#0xff              ; [CPU_] |1030| 
        MOV       *-SP[4],AL            ; [CPU_] |1030| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_sprintf")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1030| 
        ; call occurs [#_sprintf] ; [] |1030| 
	.dwpsn	file "../Source/prod.c",line 1032,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1032| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1032| 
        ; call occurs [#_scia_puts] ; [] |1032| 
	.dwpsn	file "../Source/prod.c",line 1033,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1033| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1033| 
        MOVL      XAR0,#44              ; [CPU_] |1033| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1033| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1033| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1033| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1033| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_sprintf")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1033| 
        ; call occurs [#_sprintf] ; [] |1033| 
        MOVL      XAR0,#44              ; [CPU_] |1033| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1033| 
	.dwpsn	file "../Source/prod.c",line 1034,column 6,is_stmt,isa 0
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_puts")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1034| 
        ; call occurs [#_scia_puts] ; [] |1034| 
	.dwpsn	file "../Source/prod.c",line 1035,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1035| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1035| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1035| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1035| 
        MOVL      XAR0,#44              ; [CPU_] |1035| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1035| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1035| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_sprintf")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1035| 
        ; call occurs [#_sprintf] ; [] |1035| 
        MOVL      XAR0,#44              ; [CPU_] |1035| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1035| 
	.dwpsn	file "../Source/prod.c",line 1037,column 6,is_stmt,isa 0
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1037| 
        ; call occurs [#_scia_puts] ; [] |1037| 
	.dwpsn	file "../Source/prod.c",line 1039,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1039| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1039| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1039| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1039| 
        MOVL      XAR0,#72              ; [CPU_] |1039| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1039| 
        ADDL      ACC,XAR6              ; [CPU_] |1039| 
        MOVL      XAR4,ACC              ; [CPU_] |1039| 
        MOVL      XAR0,#44              ; [CPU_] |1039| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1039| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1039| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1039| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_sprintf")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1039| 
        ; call occurs [#_sprintf] ; [] |1039| 
        MOVL      XAR0,#44              ; [CPU_] |1039| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1039| 
	.dwpsn	file "../Source/prod.c",line 1041,column 6,is_stmt,isa 0
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_scia_puts")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1041| 
        ; call occurs [#_scia_puts] ; [] |1041| 
	.dwpsn	file "../Source/prod.c",line 1042,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1042| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1042| 
        B         $C$L432,EQ            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        MOVB      XAR0,#34              ; [CPU_] |1042| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1042| 
        CMPB      AL,#1                 ; [CPU_] |1042| 
        B         $C$L433,NEQ           ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1044,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1044| 
        MOVL      XAR0,#74              ; [CPU_] |1044| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1044| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1044| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1044| 
        ADDL      ACC,XAR6              ; [CPU_] |1044| 
        MOVL      XAR4,ACC              ; [CPU_] |1044| 
        MOVL      XAR0,#44              ; [CPU_] |1044| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1044| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1044| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1044| 
        MOVL      XAR4,XAR1             ; [CPU_] |1044| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_sprintf")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1044| 
        ; call occurs [#_sprintf] ; [] |1044| 
        MOVL      XAR4,XAR1             ; [CPU_] |1044| 
	.dwpsn	file "../Source/prod.c",line 1046,column 7,is_stmt,isa 0
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_scia_puts")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1046| 
        ; call occurs [#_scia_puts] ; [] |1046| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1048,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1048| 
        B         $C$L434,NEQ           ; [CPU_] |1048| 
        ; branchcc occurs ; [] |1048| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1048| 
        B         $C$L435,UNC           ; [CPU_] |1048| 
        ; branch occurs ; [] |1048| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1048| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1048| 
        MOVL      XAR0,#44              ; [CPU_] |1048| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1048| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1048| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1048| 
        MOVL      XAR4,XAR1             ; [CPU_] |1048| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_sprintf")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1048| 
        ; call occurs [#_sprintf] ; [] |1048| 
        MOVL      XAR4,XAR1             ; [CPU_] |1048| 
	.dwpsn	file "../Source/prod.c",line 1050,column 6,is_stmt,isa 0
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_scia_puts")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1050| 
        ; call occurs [#_scia_puts] ; [] |1050| 
	.dwpsn	file "../Source/prod.c",line 1052,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1052| 
        MOVB      XAR0,#38              ; [CPU_] |1052| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1052| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1052| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1052| 
        MOVL      XAR0,#44              ; [CPU_] |1052| 
        MOV       *-SP[3],AL            ; [CPU_] |1052| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1052| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_sprintf")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1052| 
        ; call occurs [#_sprintf] ; [] |1052| 
        MOVL      XAR0,#44              ; [CPU_] |1052| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1052| 
	.dwpsn	file "../Source/prod.c",line 1054,column 6,is_stmt,isa 0
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_scia_puts")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1054| 
        ; call occurs [#_scia_puts] ; [] |1054| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1056,column 11,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |1056| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1057,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1057| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1057| 
        ; call occurs [#_scia_puts] ; [] |1057| 
        MOV       AL,*-SP[50]           ; [CPU_] |1057| 
	.dwpsn	file "../Source/prod.c",line 1058,column 7,is_stmt,isa 0
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_print_channel")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1058| 
        ; call occurs [#_print_channel] ; [] |1058| 
	.dwpsn	file "../Source/prod.c",line 1059,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1059| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_print_sensor")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1059| 
        ; call occurs [#_print_sensor] ; [] |1059| 
	.dwpsn	file "../Source/prod.c",line 1056,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1056| 
        INC       *-SP[50]              ; [CPU_] |1056| 
        MOV       AL,*-SP[50]           ; [CPU_] |1056| 
        CMPB      AL,#4                 ; [CPU_] |1056| 
        B         $C$L436,LO            ; [CPU_] |1056| 
        ; branchcc occurs ; [] |1056| 
	.dwpsn	file "../Source/prod.c",line 1062,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1062| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_scia_puts")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1062| 
        ; call occurs [#_scia_puts] ; [] |1062| 
	.dwpsn	file "../Source/prod.c",line 1063,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1063| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1063| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1063| 
        MOVL      ACC,XAR4              ; [CPU_] |1063| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1063| 
        MOVL      XAR4,ACC              ; [CPU_] |1063| 
        MOVL      XAR0,#44              ; [CPU_] |1063| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1063| 
        MOV       *-SP[3],AL            ; [CPU_] |1063| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1063| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_sprintf")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1063| 
        ; call occurs [#_sprintf] ; [] |1063| 
        MOVL      XAR0,#44              ; [CPU_] |1063| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1063| 
	.dwpsn	file "../Source/prod.c",line 1065,column 6,is_stmt,isa 0
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1065| 
        ; call occurs [#_scia_puts] ; [] |1065| 
        MOVL      XAR0,#40              ; [CPU_] |1065| 
	.dwpsn	file "../Source/prod.c",line 1066,column 11,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |1066| 
	.dwpsn	file "../Source/prod.c",line 1065,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1065| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1067,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1067| 
        MOVB      AL,#65                ; [CPU_] |1067| 
        MOVL      XAR0,#44              ; [CPU_] |1067| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1067| 
        ADD       AL,*-SP[39]           ; [CPU_] |1067| 
        MOV       *-SP[3],AL            ; [CPU_] |1067| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1067| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1067| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1067| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_sprintf")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1067| 
        ; call occurs [#_sprintf] ; [] |1067| 
        MOVL      XAR0,#44              ; [CPU_] |1067| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1067| 
	.dwpsn	file "../Source/prod.c",line 1069,column 7,is_stmt,isa 0
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_scia_puts")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1069| 
        ; call occurs [#_scia_puts] ; [] |1069| 
	.dwpsn	file "../Source/prod.c",line 1066,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1066| 
	.dwpsn	file "../Source/prod.c",line 1069,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |1069| 
	.dwpsn	file "../Source/prod.c",line 1066,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1066| 
        B         $C$L437,LT            ; [CPU_] |1066| 
        ; branchcc occurs ; [] |1066| 
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_print_vfd")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1071| 
        ; call occurs [#_print_vfd] ; [] |1071| 
	.dwpsn	file "../Source/prod.c",line 1072,column 6,is_stmt,isa 0
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_print_dac")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1072| 
        ; call occurs [#_print_dac] ; [] |1072| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1073,column 6,is_stmt,isa 0
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_print_limits")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1073| 
        ; call occurs [#_print_limits] ; [] |1073| 
	.dwpsn	file "../Source/prod.c",line 1074,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1074| 
        ; branch occurs ; [] |1074| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1078,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1078| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_scia_puts")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1078| 
        ; call occurs [#_scia_puts] ; [] |1078| 
	.dwpsn	file "../Source/prod.c",line 1080,column 11,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |1080| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1081,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1081| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1081| 
        MOVL      XAR0,#44              ; [CPU_] |1081| 
        ADD       AL,*-SP[49]           ; [CPU_] |1081| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1081| 
        MOVZ      AR1,AL                ; [CPU_] |1081| 
        MOV       *-SP[3],AL            ; [CPU_] |1081| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1081| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_sprintf")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1081| 
        ; call occurs [#_sprintf] ; [] |1081| 
        MOVL      XAR0,#44              ; [CPU_] |1081| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1081| 
	.dwpsn	file "../Source/prod.c",line 1082,column 7,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_scia_puts")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1082| 
        ; call occurs [#_scia_puts] ; [] |1082| 
        MOV       AL,*-SP[49]           ; [CPU_] |1082| 
	.dwpsn	file "../Source/prod.c",line 1083,column 7,is_stmt,isa 0
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_print_sensor")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1083| 
        ; call occurs [#_print_sensor] ; [] |1083| 
	.dwpsn	file "../Source/prod.c",line 1080,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1080| 
        MOV       *-SP[49],AR1          ; [CPU_] |1080| 
        CMPB      AL,#20                ; [CPU_] |1080| 
        B         $C$L440,LO            ; [CPU_] |1080| 
        ; branchcc occurs ; [] |1080| 
        B         $C$L632,UNC           ; [CPU_] |1080| 
        ; branch occurs ; [] |1080| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1094,column 6,is_stmt,isa 0
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_print_dac")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1094| 
        ; call occurs [#_print_dac] ; [] |1094| 
	.dwpsn	file "../Source/prod.c",line 1095,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1095| 
        ; branch occurs ; [] |1095| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1089,column 6,is_stmt,isa 0
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_print_vfd")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1089| 
        ; call occurs [#_print_vfd] ; [] |1089| 
	.dwpsn	file "../Source/prod.c",line 1090,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1090| 
        ; branch occurs ; [] |1090| 
$C$L443:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2638,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2638| 
        B         $C$L625,LO            ; [CPU_] |2638| 
        ; branchcc occurs ; [] |2638| 
	.dwpsn	file "../Source/prod.c",line 2641,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2641| 
        CMPB      AL,#68                ; [CPU_] |2641| 
        B         $C$L444,EQ            ; [CPU_] |2641| 
        ; branchcc occurs ; [] |2641| 
        CMPB      AL,#83                ; [CPU_] |2641| 
        B         $C$L450,EQ            ; [CPU_] |2641| 
        ; branchcc occurs ; [] |2641| 
        B         $C$L625,UNC           ; [CPU_] |2641| 
        ; branch occurs ; [] |2641| 
$C$L444:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2759,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2759| 
        B         $C$L625,LO            ; [CPU_] |2759| 
        ; branchcc occurs ; [] |2759| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2763,column 6,is_stmt,isa 0
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_atoi")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2763| 
        ; call occurs [#_atoi] ; [] |2763| 
        MOV       *-SP[49],AL           ; [CPU_] |2763| 
	.dwpsn	file "../Source/prod.c",line 2765,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2765| 
        CMPB      AL,#4                 ; [CPU_] |2765| 
        B         $C$L625,HIS           ; [CPU_] |2765| 
        ; branchcc occurs ; [] |2765| 
	.dwpsn	file "../Source/prod.c",line 2771,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2771| 
        MOV       *-SP[49],AL           ; [CPU_] |2771| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2771| 
        MOV       T,AL                  ; [CPU_] |2771| 
        MOVB      AL,#12                ; [CPU_] |2771| 
        MPYU      ACC,T,AL              ; [CPU_] |2771| 
        ADDL      ACC,XAR6              ; [CPU_] |2771| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2771| 
        MOVL      XAR1,ACC              ; [CPU_] |2771| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2771| 
        CMPB      AL,#7                 ; [CPU_] |2771| 
        B         $C$L625,NEQ           ; [CPU_] |2771| 
        ; branchcc occurs ; [] |2771| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_strtod")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2775,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2775| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *-SP[56],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2777,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2777| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2777| 
        MOVL      ACC,XAR6              ; [CPU_] |2777| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2777| 
        ; call occurs [#FS$$CMP] ; [] |2777| 
        CMPB      AL,#0                 ; [CPU_] |2777| 
        B         $C$L625,LT            ; [CPU_] |2777| 
        ; branchcc occurs ; [] |2777| 
        MOV       AL,#0                 ; [CPU_] |2777| 
        MOV       AH,#16672             ; [CPU_] |2777| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2777| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |2777| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2777| 
        ; call occurs [#FS$$CMP] ; [] |2777| 
        CMPB      AL,#0                 ; [CPU_] |2777| 
        B         $C$L625,GT            ; [CPU_] |2777| 
        ; branchcc occurs ; [] |2777| 
	.dwpsn	file "../Source/prod.c",line 2783,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2783| 
        MOV       AH,#0                 ; [CPU_] |2783| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2783| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |2783| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2783| 
        ; call occurs [#FS$$CMP] ; [] |2783| 
        CMPB      AL,#0                 ; [CPU_] |2783| 
        B         $C$L445,GEQ           ; [CPU_] |2783| 
        ; branchcc occurs ; [] |2783| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2783| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2783| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2783| 
        B         $C$L446,UNC           ; [CPU_] |2783| 
        ; branch occurs ; [] |2783| 
$C$L445:    
        MOVL      ACC,*-SP[56]          ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2783| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2783| 
$C$L446:    
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2783| 
        ; call occurs [#FS$$MPY] ; [] |2783| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2783| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2783| 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2783| 
        ; call occurs [#FS$$ADD] ; [] |2783| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2783| 
        ; call occurs [#FS$$TOLL] ; [] |2783| 
	.dwpsn	file "../Source/prod.c",line 2790,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2790| 
	.dwpsn	file "../Source/prod.c",line 2783,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2783| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2783| 
	.dwpsn	file "../Source/prod.c",line 2790,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2790| 
        CMP64     ACC:P                 ; [CPU_] |2790| 
        B         $C$L448,LEQ           ; [CPU_] |2790| 
        ; branchcc occurs ; [] |2790| 
	.dwpsn	file "../Source/prod.c",line 2792,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2792| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2792| 
        MOV       *-SP[2],#0            ; [CPU_] |2792| 
        MOV       *-SP[1],#0            ; [CPU_] |2792| 
        MOVL      P,*-SP[32]            ; [CPU_] |2792| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2792| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$936, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2792| 
        ; call occurs [#LL$$CMP] ; [] |2792| 
        CMPB      AL,#0                 ; [CPU_] |2792| 
        B         $C$L447,GEQ           ; [CPU_] |2792| 
        ; branchcc occurs ; [] |2792| 
	.dwpsn	file "../Source/prod.c",line 2795,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2795| 
        MOV       *-SP[35],AL           ; [CPU_] |2795| 
        B         $C$L449,UNC           ; [CPU_] |2795| 
        ; branch occurs ; [] |2795| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2793,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2793| 
	.dwpsn	file "../Source/prod.c",line 2794,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2794| 
        ; branch occurs ; [] |2794| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2791,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2791| 
$C$L449:    
        MOV       AH,*-SP[49]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2798,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2798| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2798| 
        ; call occurs [#_mcbsp_xmit] ; [] |2798| 
	.dwpsn	file "../Source/prod.c",line 2799,column 6,is_stmt,isa 0
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_latch_dac")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2799| 
        ; call occurs [#_latch_dac] ; [] |2799| 
	.dwpsn	file "../Source/prod.c",line 2801,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2801| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2801| 
        MOVL      XAR0,#44              ; [CPU_] |2801| 
        ADD       AL,*-SP[49]           ; [CPU_] |2801| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2801| 
        MOV       *-SP[3],AL            ; [CPU_] |2801| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2801| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2801| 
        MOV       AL,*-SP[35]           ; [CPU_] |2801| 
        MOV       *-SP[7],AL            ; [CPU_] |2801| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2801| 
        MOVL      XAR4,XAR1             ; [CPU_] |2801| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_sprintf")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2801| 
        ; call occurs [#_sprintf] ; [] |2801| 
        MOVL      XAR4,XAR1             ; [CPU_] |2801| 
	.dwpsn	file "../Source/prod.c",line 2805,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2805| 
        ; branch occurs ; [] |2805| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2648,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2648| 
        MOVL      XAR0,#44              ; [CPU_] |2648| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2648| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2648| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2648| 
        MOVL      XAR4,XAR1             ; [CPU_] |2648| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_sprintf")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2648| 
        ; call occurs [#_sprintf] ; [] |2648| 
        MOVL      XAR4,XAR1             ; [CPU_] |2648| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2649| 
        MOV       AL,#1024              ; [CPU_] |2649| 
        MOVL      XAR5,XAR1             ; [CPU_] |2649| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2649| 
        ; call occurs [#_scia_getparam] ; [] |2649| 
	.dwpsn	file "../Source/prod.c",line 2650,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2650| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_atoi")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2650| 
        ; call occurs [#_atoi] ; [] |2650| 
        MOV       *-SP[49],AL           ; [CPU_] |2650| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2651| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_scia_puts")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2651| 
        ; call occurs [#_scia_puts] ; [] |2651| 
        MOV       AL,*-SP[49]           ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2653,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2653| 
        CMPB      AL,#4                 ; [CPU_] |2653| 
        B         $C$L465,HIS           ; [CPU_] |2653| 
        ; branchcc occurs ; [] |2653| 
	.dwpsn	file "../Source/prod.c",line 2657,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2657| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_scia_puts")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2657| 
        ; call occurs [#_scia_puts] ; [] |2657| 
        MOVL      XAR0,#62              ; [CPU_] |2657| 
	.dwpsn	file "../Source/prod.c",line 2661,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2661| 
	.dwpsn	file "../Source/prod.c",line 2657,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2657| 
	.dwpsn	file "../Source/prod.c",line 2661,column 11,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |2661| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2662| 
        MOVL      XAR0,#44              ; [CPU_] |2662| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2662| 
        MOV       *-SP[3],AL            ; [CPU_] |2662| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2662| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2662| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2662| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_sprintf")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2662| 
        ; call occurs [#_sprintf] ; [] |2662| 
        MOVL      XAR0,#44              ; [CPU_] |2662| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2662| 
	.dwpsn	file "../Source/prod.c",line 2663,column 7,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_scia_puts")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2663| 
        ; call occurs [#_scia_puts] ; [] |2663| 
	.dwpsn	file "../Source/prod.c",line 2664,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2664| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_scia_puts")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2664| 
        ; call occurs [#_scia_puts] ; [] |2664| 
	.dwpsn	file "../Source/prod.c",line 2661,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |2661| 
	.dwpsn	file "../Source/prod.c",line 2664,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2661,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2661| 
        B         $C$L451,LT            ; [CPU_] |2661| 
        ; branchcc occurs ; [] |2661| 
	.dwpsn	file "../Source/prod.c",line 2667,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2667| 
        MOVB      XAR0,#14              ; [CPU_] |2667| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2667| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2667| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2667| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2667| 
        MOVL      XAR0,#44              ; [CPU_] |2667| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2667| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2667| 
        MOVL      XAR4,XAR1             ; [CPU_] |2667| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_sprintf")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2667| 
        ; call occurs [#_sprintf] ; [] |2667| 
	.dwpsn	file "../Source/prod.c",line 2668,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2668| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_scia_puts")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2668| 
        ; call occurs [#_scia_puts] ; [] |2668| 
	.dwpsn	file "../Source/prod.c",line 2669,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2669| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_scia_puts")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2669| 
        ; call occurs [#_scia_puts] ; [] |2669| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2670| 
	.dwpsn	file "../Source/prod.c",line 2669,column 6,is_stmt,isa 0
        MOV       AH,*-SP[49]           ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2670| 
        DEC       *-SP[49]              ; [CPU_] |2670| 
        MOV       *-SP[39],AH           ; [CPU_] |2670| 
        MOV       *-SP[3],AH            ; [CPU_] |2670| 
        MOVL      XAR4,XAR1             ; [CPU_] |2670| 
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_sprintf")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2670| 
        ; call occurs [#_sprintf] ; [] |2670| 
	.dwpsn	file "../Source/prod.c",line 2672,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2672| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2672| 
        MOV       AL,#1024              ; [CPU_] |2672| 
        MOVL      XAR5,XAR1             ; [CPU_] |2672| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2672| 
        ; call occurs [#_scia_getparam] ; [] |2672| 
        MOVL      XAR4,XAR1             ; [CPU_] |2672| 
	.dwpsn	file "../Source/prod.c",line 2673,column 6,is_stmt,isa 0
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_atoi")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2673| 
        ; call occurs [#_atoi] ; [] |2673| 
	.dwpsn	file "../Source/prod.c",line 2666,column 6,is_stmt,isa 0
        MOV       *-SP[52],#7           ; [CPU_] |2666| 
	.dwpsn	file "../Source/prod.c",line 2673,column 6,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2674,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2674| 
        B         $C$L452,LO            ; [CPU_] |2674| 
        ; branchcc occurs ; [] |2674| 
        CMPB      AL,#7                 ; [CPU_] |2674| 
        B         $C$L452,EQ            ; [CPU_] |2674| 
        ; branchcc occurs ; [] |2674| 
	.dwpsn	file "../Source/prod.c",line 2676,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2676| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2676| 
        ; call occurs [#_scia_puts] ; [] |2676| 
	.dwpsn	file "../Source/prod.c",line 2675,column 7,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |2675| 
$C$L452:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2679,column 6,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2679| 
        ; call occurs [#_scia_puts] ; [] |2679| 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2680| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_scia_puts")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2680| 
        ; call occurs [#_scia_puts] ; [] |2680| 
	.dwpsn	file "../Source/prod.c",line 2681,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2681| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2681| 
        MOVB      AL,#12                ; [CPU_] |2681| 
        MOV       T,*-SP[49]            ; [CPU_] |2681| 
        MPYU      ACC,T,AL              ; [CPU_] |2681| 
        ADDL      ACC,XAR6              ; [CPU_] |2681| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2681| 
        MOVL      XAR1,ACC              ; [CPU_] |2681| 
        MOV       AL,*-SP[51]           ; [CPU_] |2681| 
	.dwpsn	file "../Source/prod.c",line 2683,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2683| 
	.dwpsn	file "../Source/prod.c",line 2681,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2681| 
	.dwpsn	file "../Source/prod.c",line 2683,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2683| 
        ; branchcc occurs ; [] |2683| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2685| 
        B         $C$L454,EQ            ; [CPU_] |2685| 
        ; branchcc occurs ; [] |2685| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2685| 
        B         $C$L454,EQ            ; [CPU_] |2685| 
        ; branchcc occurs ; [] |2685| 
	.dwpsn	file "../Source/prod.c",line 2688,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2688| 
        B         $C$L453,EQ            ; [CPU_] |2688| 
        ; branchcc occurs ; [] |2688| 
        CMPB      AL,#4                 ; [CPU_] |2688| 
        B         $C$L455,NEQ           ; [CPU_] |2688| 
        ; branchcc occurs ; [] |2688| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2689,column 8,is_stmt,isa 0
        MOV       *-SP[52],#2           ; [CPU_] |2689| 
        B         $C$L455,UNC           ; [CPU_] |2689| 
        ; branch occurs ; [] |2689| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2687,column 8,is_stmt,isa 0
        MOV       *-SP[52],#4           ; [CPU_] |2687| 
$C$L455:    
        MOV       AL,*-SP[52]           ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2694,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2694| 
        MOV       AL,*-SP[52]           ; [CPU_] |2694| 
        MOVL      XAR0,#44              ; [CPU_] |2694| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2694| 
        MOV       *-SP[3],AL            ; [CPU_] |2694| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2694| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_sprintf")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2694| 
        ; call occurs [#_sprintf] ; [] |2694| 
        MOVL      XAR0,#44              ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2695,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2695| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2695| 
	.dwpsn	file "../Source/prod.c",line 2694,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2695,column 8,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2695| 
        ; call occurs [#_scia_getparam] ; [] |2695| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2695| 
	.dwpsn	file "../Source/prod.c",line 2696,column 8,is_stmt,isa 0
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_atoi")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2696| 
        ; call occurs [#_atoi] ; [] |2696| 
        MOV       *-SP[50],AL           ; [CPU_] |2696| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2696| 
	.dwpsn	file "../Source/prod.c",line 2697,column 8,is_stmt,isa 0
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_scia_puts")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2697| 
        ; call occurs [#_scia_puts] ; [] |2697| 
        MOV       AL,*-SP[50]           ; [CPU_] |2697| 
	.dwpsn	file "../Source/prod.c",line 2699,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2699| 
        ; branchcc occurs ; [] |2699| 
        MOV       AL,*-SP[40]           ; [CPU_] 
        CMP       AL,*-SP[50]           ; [CPU_] |2699| 
        B         $C$L464,LO            ; [CPU_] |2699| 
        ; branchcc occurs ; [] |2699| 
	.dwpsn	file "../Source/prod.c",line 2703,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2703| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2703| 
        ; call occurs [#_scia_puts] ; [] |2703| 
	.dwpsn	file "../Source/prod.c",line 2705,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2705| 
	.dwpsn	file "../Source/prod.c",line 2703,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2705,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2705| 
        MOV       AL,*-SP[51]           ; [CPU_] |2705| 
	.dwpsn	file "../Source/prod.c",line 2708,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2708| 
        B         $C$L457,EQ            ; [CPU_] |2708| 
        ; branchcc occurs ; [] |2708| 
        CMPB      AL,#4                 ; [CPU_] |2708| 
        B         $C$L459,NEQ           ; [CPU_] |2708| 
        ; branchcc occurs ; [] |2708| 
	.dwpsn	file "../Source/prod.c",line 2713,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2713| 
        B         $C$L458,UNC           ; [CPU_] |2713| 
        ; branch occurs ; [] |2713| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2711,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2711| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2711| 
        MOVL      XAR0,#44              ; [CPU_] |2711| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2711| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_sprintf")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2711| 
        ; call occurs [#_sprintf] ; [] |2711| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2715| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2715| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2715| 
        ; call occurs [#_scia_getparam] ; [] |2715| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2715| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_strtod")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2716,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2716| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2716| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2716| 
	.dwpsn	file "../Source/prod.c",line 2717,column 8,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_scia_puts")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2717| 
        ; call occurs [#_scia_puts] ; [] |2717| 
	.dwpsn	file "../Source/prod.c",line 2718,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2718| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_scia_puts")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2718| 
        ; call occurs [#_scia_puts] ; [] |2718| 
	.dwpsn	file "../Source/prod.c",line 2721,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2721| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2721| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2721| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2721| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_sprintf")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2721| 
        ; call occurs [#_sprintf] ; [] |2721| 
        MOVL      XAR0,#44              ; [CPU_] |2721| 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2722| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2722| 
	.dwpsn	file "../Source/prod.c",line 2721,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2721| 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2722| 
        ; call occurs [#_scia_getparam] ; [] |2722| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2722| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_strtod")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2723,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2723| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2723| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2724,column 8,is_stmt,isa 0
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_scia_puts")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2724| 
        ; call occurs [#_scia_puts] ; [] |2724| 
	.dwpsn	file "../Source/prod.c",line 2725,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2725| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_puts")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2725| 
        ; call occurs [#_scia_puts] ; [] |2725| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2732,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2732| 
        MOV       AL,*-SP[39]           ; [CPU_] |2732| 
        MOVL      XAR0,#62              ; [CPU_] |2732| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2732| 
        MOV       *-SP[3],AL            ; [CPU_] |2732| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2732| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |2732| 
        MOV       ACC,AL << 1           ; [CPU_] |2732| 
        ADDL      ACC,XAR6              ; [CPU_] |2732| 
        MOVL      XAR4,ACC              ; [CPU_] |2732| 
        MOVL      XAR0,#44              ; [CPU_] |2732| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2732| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2732| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2732| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_sprintf")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2732| 
        ; call occurs [#_sprintf] ; [] |2732| 
        MOVL      XAR0,#44              ; [CPU_] |2732| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2732| 
	.dwpsn	file "../Source/prod.c",line 2734,column 6,is_stmt,isa 0
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2734| 
        ; call occurs [#_scia_puts] ; [] |2734| 
	.dwpsn	file "../Source/prod.c",line 2729,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2729| 
        MOV       AL,*-SP[51]           ; [CPU_] |2729| 
	.dwpsn	file "../Source/prod.c",line 2736,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2736| 
        B         $C$L461,EQ            ; [CPU_] |2736| 
        ; branchcc occurs ; [] |2736| 
	.dwpsn	file "../Source/prod.c",line 2739,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2739| 
        MOVB      AL,#1                 ; [CPU_] |2739| 
        MOVL      XAR0,#44              ; [CPU_] |2739| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2739| 
        ADD       AL,*-SP[50]           ; [CPU_] |2739| 
        MOV       *-SP[3],AL            ; [CPU_] |2739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_sprintf")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2739| 
        ; call occurs [#_sprintf] ; [] |2739| 
        MOVL      XAR0,#44              ; [CPU_] |2739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2740,column 7,is_stmt,isa 0
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_scia_puts")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2740| 
        ; call occurs [#_scia_puts] ; [] |2740| 
        MOV       AL,*-SP[51]           ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2742,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2742| 
        B         $C$L460,EQ            ; [CPU_] |2742| 
        ; branchcc occurs ; [] |2742| 
        CMPB      AL,#4                 ; [CPU_] |2742| 
        B         $C$L463,NEQ           ; [CPU_] |2742| 
        ; branchcc occurs ; [] |2742| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2743,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2743| 
        MOVB      XAR0,#8               ; [CPU_] |2743| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2743| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2743| 
        MOVB      XAR0,#10              ; [CPU_] |2743| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2743| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2743| 
        MOVL      XAR0,#44              ; [CPU_] |2743| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2743| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2743| 
        MOVL      XAR4,XAR1             ; [CPU_] |2743| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_sprintf")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2743| 
        ; call occurs [#_sprintf] ; [] |2743| 
        MOVL      XAR4,XAR1             ; [CPU_] |2743| 
	.dwpsn	file "../Source/prod.c",line 2746,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2746| 
        ; branch occurs ; [] |2746| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2737,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2737| 
$C$L462:    
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2737| 
        ; call occurs [#_scia_puts] ; [] |2737| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2751,column 6,is_stmt,isa 0
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2751| 
        ; call occurs [#_ad7738_setcal] ; [] |2751| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2753,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2753| 
        ; branch occurs ; [] |2753| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2701,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2701| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_puts")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2701| 
        ; call occurs [#_scia_puts] ; [] |2701| 
	.dwpsn	file "../Source/prod.c",line 2693,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2693| 
        ; branch occurs ; [] |2693| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2655,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2655| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2655| 
        ; call occurs [#_scia_puts] ; [] |2655| 
	.dwpsn	file "../Source/prod.c",line 2647,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2647| 
        ; branch occurs ; [] |2647| 
$C$L466:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2819,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2819| 
        B         $C$L625,LO            ; [CPU_] |2819| 
        ; branchcc occurs ; [] |2819| 
	.dwpsn	file "../Source/prod.c",line 2822,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2822| 
        CMPB      AL,#83                ; [CPU_] |2822| 
        B         $C$L625,NEQ           ; [CPU_] |2822| 
        ; branchcc occurs ; [] |2822| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2829,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2829| 
        MOVL      XAR0,#44              ; [CPU_] |2829| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2829| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2829| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2829| 
        MOVL      XAR4,XAR1             ; [CPU_] |2829| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_sprintf")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2829| 
        ; call occurs [#_sprintf] ; [] |2829| 
        MOVL      XAR4,XAR1             ; [CPU_] |2829| 
	.dwpsn	file "../Source/prod.c",line 2830,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2830| 
        MOV       AL,#1024              ; [CPU_] |2830| 
        MOVL      XAR5,XAR1             ; [CPU_] |2830| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2830| 
        ; call occurs [#_scia_getparam] ; [] |2830| 
	.dwpsn	file "../Source/prod.c",line 2831,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2831| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_atoi")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2831| 
        ; call occurs [#_atoi] ; [] |2831| 
        MOV       *-SP[49],AL           ; [CPU_] |2831| 
	.dwpsn	file "../Source/prod.c",line 2832,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2832| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2832| 
        ; call occurs [#_scia_puts] ; [] |2832| 
        MOV       AL,*-SP[49]           ; [CPU_] |2832| 
	.dwpsn	file "../Source/prod.c",line 2834,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2834| 
        CMPB      AL,#4                 ; [CPU_] |2834| 
        B         $C$L497,HIS           ; [CPU_] |2834| 
        ; branchcc occurs ; [] |2834| 
	.dwpsn	file "../Source/prod.c",line 2838,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2838| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2838| 
        ; call occurs [#_scia_puts] ; [] |2838| 
        MOVZ      AR1,*-SP[49]          ; [CPU_] |2838| 
	.dwpsn	file "../Source/prod.c",line 2841,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2841| 
        MOVL      XAR0,#44              ; [CPU_] |2841| 
        DEC       *-SP[49]              ; [CPU_] |2841| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2841| 
        MOV       *-SP[39],AR1          ; [CPU_] |2841| 
        MOV       *-SP[3],AR1           ; [CPU_] |2841| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2841| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_sprintf")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2841| 
        ; call occurs [#_sprintf] ; [] |2841| 
        MOVL      XAR0,#44              ; [CPU_] |2841| 
	.dwpsn	file "../Source/prod.c",line 2842,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2842| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2842| 
	.dwpsn	file "../Source/prod.c",line 2841,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2841| 
	.dwpsn	file "../Source/prod.c",line 2842,column 6,is_stmt,isa 0
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2842| 
        ; call occurs [#_scia_getparam] ; [] |2842| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2842| 
	.dwpsn	file "../Source/prod.c",line 2843,column 6,is_stmt,isa 0
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2843| 
        ; call occurs [#_scia_puts] ; [] |2843| 
	.dwpsn	file "../Source/prod.c",line 2844,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2844| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2844| 
        ; call occurs [#_scia_puts] ; [] |2844| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2844| 
	.dwpsn	file "../Source/prod.c",line 2846,column 6,is_stmt,isa 0
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_atoi")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2846| 
        ; call occurs [#_atoi] ; [] |2846| 
        CMPB      AL,#1                 ; [CPU_] |2846| 
        B         $C$L468,EQ            ; [CPU_] |2846| 
        ; branchcc occurs ; [] |2846| 
	.dwpsn	file "../Source/prod.c",line 2995,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2995| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2995| 
        MOV       AL,*-SP[49]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2995| 
        ADDL      ACC,XAR6              ; [CPU_] |2995| 
        ADD       ACC,#199 << 4         ; [CPU_] |2995| 
        MOVL      XAR4,ACC              ; [CPU_] |2995| 
	.dwpsn	file "../Source/prod.c",line 2996,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2996| 
	.dwpsn	file "../Source/prod.c",line 2995,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |2995| 
	.dwpsn	file "../Source/prod.c",line 2996,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |2996| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2996| 
        MOV       *-SP[3],AR1           ; [CPU_] |2996| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2996| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_sprintf")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2996| 
        ; call occurs [#_sprintf] ; [] |2996| 
        B         $C$L493,UNC           ; [CPU_] |2996| 
        ; branch occurs ; [] |2996| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2849,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2849| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2849| 
        MOV       AL,*-SP[49]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2849| 
        ADDL      ACC,XAR6              ; [CPU_] |2849| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2849| 
        MOVL      XAR1,ACC              ; [CPU_] |2849| 
        MOVL      XAR0,#62              ; [CPU_] |2849| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2849| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2849| 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2852,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2852| 
        MOV       *-SP[52],AL           ; [CPU_] |2852| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2853,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2853| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2853| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |2853| 
        MOV       *-SP[3],AL            ; [CPU_] |2853| 
        MOVL      XAR0,#44              ; [CPU_] |2853| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2853| 
        MOVL      *-SP[56],XAR4         ; [CPU_] |2853| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2853| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2853| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_sprintf")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2853| 
        ; call occurs [#_sprintf] ; [] |2853| 
        MOVL      XAR0,#44              ; [CPU_] |2853| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2853| 
	.dwpsn	file "../Source/prod.c",line 2854,column 8,is_stmt,isa 0
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2854| 
        ; call occurs [#_scia_puts] ; [] |2854| 
        MOV       AL,*-SP[52]           ; [CPU_] |2854| 
	.dwpsn	file "../Source/prod.c",line 2855,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2855| 
        B         $C$L470,GEQ           ; [CPU_] |2855| 
        ; branchcc occurs ; [] |2855| 
	.dwpsn	file "../Source/prod.c",line 2856,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2856| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_scia_puts")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2856| 
        ; call occurs [#_scia_puts] ; [] |2856| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2852,column 19,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |2852| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2852| 
        B         $C$L469,LT            ; [CPU_] |2852| 
        ; branchcc occurs ; [] |2852| 
	.dwpsn	file "../Source/prod.c",line 2859,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2859| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2859| 
        ; call occurs [#_scia_puts] ; [] |2859| 
	.dwpsn	file "../Source/prod.c",line 2860,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2860| 
        MOVL      XAR0,#44              ; [CPU_] |2860| 
        MOV       AL,*-SP[39]           ; [CPU_] |2860| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2860| 
        MOV       *-SP[3],AL            ; [CPU_] |2860| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2860| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_sprintf")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2860| 
        ; call occurs [#_sprintf] ; [] |2860| 
        MOVL      XAR0,#44              ; [CPU_] |2860| 
	.dwpsn	file "../Source/prod.c",line 2863,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2863| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2863| 
	.dwpsn	file "../Source/prod.c",line 2860,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2860| 
	.dwpsn	file "../Source/prod.c",line 2863,column 7,is_stmt,isa 0
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2863| 
        ; call occurs [#_scia_getparam] ; [] |2863| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2863| 
	.dwpsn	file "../Source/prod.c",line 2864,column 7,is_stmt,isa 0
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_atoi")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2864| 
        ; call occurs [#_atoi] ; [] |2864| 
        MOV       *-SP[51],AL           ; [CPU_] |2864| 
        CMPB      AL,#5                 ; [CPU_] |2864| 
        B         $C$L471,LO            ; [CPU_] |2864| 
        ; branchcc occurs ; [] |2864| 
	.dwpsn	file "../Source/prod.c",line 2867,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2867| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_scia_puts")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2867| 
        ; call occurs [#_scia_puts] ; [] |2867| 
	.dwpsn	file "../Source/prod.c",line 2866,column 8,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |2866| 
$C$L471:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2870,column 7,is_stmt,isa 0
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2870| 
        ; call occurs [#_scia_puts] ; [] |2870| 
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2871| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2871| 
        ; call occurs [#_scia_puts] ; [] |2871| 
        MOV       AL,*-SP[51]           ; [CPU_] |2871| 
	.dwpsn	file "../Source/prod.c",line 2872,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2872| 
	.dwpsn	file "../Source/prod.c",line 2874,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2874| 
        B         $C$L473,EQ            ; [CPU_] |2874| 
        ; branchcc occurs ; [] |2874| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2874| 
        B         $C$L473,EQ            ; [CPU_] |2874| 
        ; branchcc occurs ; [] |2874| 
	.dwpsn	file "../Source/prod.c",line 2877,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2877| 
        B         $C$L472,EQ            ; [CPU_] |2877| 
        ; branchcc occurs ; [] |2877| 
        CMPB      AL,#4                 ; [CPU_] |2877| 
        B         $C$L474,NEQ           ; [CPU_] |2877| 
        ; branchcc occurs ; [] |2877| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2878,column 8,is_stmt,isa 0
        MOV       *-SP[52],#2           ; [CPU_] |2878| 
        B         $C$L474,UNC           ; [CPU_] |2878| 
        ; branch occurs ; [] |2878| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2876,column 8,is_stmt,isa 0
        MOV       *-SP[52],#4           ; [CPU_] |2876| 
$C$L474:    
        MOV       AL,*-SP[52]           ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2883,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2883| 
        MOV       AL,*-SP[52]           ; [CPU_] |2883| 
        MOVL      XAR0,#44              ; [CPU_] |2883| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2883| 
        MOV       *-SP[3],AL            ; [CPU_] |2883| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2883| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_sprintf")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2883| 
        ; call occurs [#_sprintf] ; [] |2883| 
        MOVL      XAR0,#44              ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2884,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2884| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2883,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2884,column 8,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2884| 
        ; call occurs [#_scia_getparam] ; [] |2884| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2885,column 8,is_stmt,isa 0
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_atoi")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2885| 
        ; call occurs [#_atoi] ; [] |2885| 
        MOV       *-SP[50],AL           ; [CPU_] |2885| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2885| 
	.dwpsn	file "../Source/prod.c",line 2886,column 8,is_stmt,isa 0
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2886| 
        ; call occurs [#_scia_puts] ; [] |2886| 
        MOV       AL,*-SP[50]           ; [CPU_] |2886| 
	.dwpsn	file "../Source/prod.c",line 2888,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2888| 
        ; branchcc occurs ; [] |2888| 
        MOV       AL,*-SP[40]           ; [CPU_] 
        CMP       AL,*-SP[50]           ; [CPU_] |2888| 
        B         $C$L496,LO            ; [CPU_] |2888| 
        ; branchcc occurs ; [] |2888| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2892| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2892| 
        ; call occurs [#_scia_puts] ; [] |2892| 
	.dwpsn	file "../Source/prod.c",line 2894,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2894| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2892| 
	.dwpsn	file "../Source/prod.c",line 2897,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2897| 
	.dwpsn	file "../Source/prod.c",line 2894,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2894| 
	.dwpsn	file "../Source/prod.c",line 2897,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2897| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2897| 
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2897| 
        ; call occurs [#_scia_getparam] ; [] |2897| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2897| 
	.dwpsn	file "../Source/prod.c",line 2900,column 7,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2900| 
        ; call occurs [#_scia_puts] ; [] |2900| 
	.dwpsn	file "../Source/prod.c",line 2901,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2901| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2901| 
        ; call occurs [#_scia_puts] ; [] |2901| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2901| 
	.dwpsn	file "../Source/prod.c",line 2903,column 7,is_stmt,isa 0
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_atoi")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2903| 
        ; call occurs [#_atoi] ; [] |2903| 
        CMPB      AL,#1                 ; [CPU_] |2903| 
        B         $C$L476,EQ            ; [CPU_] |2903| 
        ; branchcc occurs ; [] |2903| 
	.dwpsn	file "../Source/prod.c",line 2907,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2907| 
        B         $C$L477,UNC           ; [CPU_] |2907| 
        ; branch occurs ; [] |2907| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2905,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2905| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2910,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2910| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2910| 
        MOV       AL,#1024              ; [CPU_] |2910| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2910| 
        ; call occurs [#_scia_getparam] ; [] |2910| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2910| 
	.dwpsn	file "../Source/prod.c",line 2913,column 7,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2913| 
        ; call occurs [#_scia_puts] ; [] |2913| 
	.dwpsn	file "../Source/prod.c",line 2914,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2914| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2914| 
        ; call occurs [#_scia_puts] ; [] |2914| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2914| 
	.dwpsn	file "../Source/prod.c",line 2916,column 7,is_stmt,isa 0
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_atoi")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2916| 
        ; call occurs [#_atoi] ; [] |2916| 
        CMPB      AL,#1                 ; [CPU_] |2916| 
        B         $C$L478,EQ            ; [CPU_] |2916| 
        ; branchcc occurs ; [] |2916| 
	.dwpsn	file "../Source/prod.c",line 2920,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2920| 
        B         $C$L479,UNC           ; [CPU_] |2920| 
        ; branch occurs ; [] |2920| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2918,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2918| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2923,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2923| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2923| 
        MOV       AL,#1024              ; [CPU_] |2923| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2923| 
        ; call occurs [#_scia_getparam] ; [] |2923| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2923| 
	.dwpsn	file "../Source/prod.c",line 2926,column 7,is_stmt,isa 0
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2926| 
        ; call occurs [#_scia_puts] ; [] |2926| 
	.dwpsn	file "../Source/prod.c",line 2927,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2927| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2927| 
        ; call occurs [#_scia_puts] ; [] |2927| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2927| 
	.dwpsn	file "../Source/prod.c",line 2929,column 7,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_atoi")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2929| 
        ; call occurs [#_atoi] ; [] |2929| 
        CMPB      AL,#1                 ; [CPU_] |2929| 
        B         $C$L480,EQ            ; [CPU_] |2929| 
        ; branchcc occurs ; [] |2929| 
	.dwpsn	file "../Source/prod.c",line 2933,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2933| 
        B         $C$L481,UNC           ; [CPU_] |2933| 
        ; branch occurs ; [] |2933| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2931,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2931| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2937,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2937| 
        CMPB      AL,#2                 ; [CPU_] |2937| 
        B         $C$L483,LOS           ; [CPU_] |2937| 
        ; branchcc occurs ; [] |2937| 
        CMPB      AL,#3                 ; [CPU_] |2937| 
        B         $C$L482,EQ            ; [CPU_] |2937| 
        ; branchcc occurs ; [] |2937| 
        CMPB      AL,#4                 ; [CPU_] |2937| 
        B         $C$L485,NEQ           ; [CPU_] |2937| 
        ; branchcc occurs ; [] |2937| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2949,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2949| 
	.dwpsn	file "../Source/prod.c",line 2950,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2950| 
        ; branch occurs ; [] |2950| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2946,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2946| 
	.dwpsn	file "../Source/prod.c",line 2947,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2947| 
        ; branch occurs ; [] |2947| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2941,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2941| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2941| 
        MOV       T,#10                 ; [CPU_] |2941| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2941| 
        ADDL      ACC,XAR6              ; [CPU_] |2941| 
        MOVL      XAR4,ACC              ; [CPU_] |2941| 
        MOVB      XAR0,#42              ; [CPU_] |2941| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2941| 
        MPYB      ACC,T,#152            ; [CPU_] |2941| 
        ADDL      ACC,XAR6              ; [CPU_] |2941| 
        MOVL      XAR4,ACC              ; [CPU_] |2941| 
        MOVB      XAR0,#125             ; [CPU_] |2941| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2941| 
        MOVL      XAR0,#70              ; [CPU_] |2941| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2941| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2941| 
        MOV       ACC,AL << 1           ; [CPU_] |2941| 
        ADDL      ACC,XAR6              ; [CPU_] |2941| 
        MOVL      XAR4,ACC              ; [CPU_] |2941| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2941| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |2941| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2941| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2954| 
        MOVL      XAR0,#48              ; [CPU_] |2954| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2954| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2954| 
        MOVL      XAR0,#44              ; [CPU_] |2954| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2954| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2954| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_sprintf")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2954| 
        ; call occurs [#_sprintf] ; [] |2954| 
        MOVL      XAR0,#44              ; [CPU_] |2954| 
	.dwpsn	file "../Source/prod.c",line 2955,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2955| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2955| 
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2954| 
	.dwpsn	file "../Source/prod.c",line 2955,column 7,is_stmt,isa 0
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2955| 
        ; call occurs [#_scia_getparam] ; [] |2955| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2955| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2956| 
        ; call occurs [#_scia_puts] ; [] |2956| 
	.dwpsn	file "../Source/prod.c",line 2957,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2957| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2957| 
        ; call occurs [#_scia_puts] ; [] |2957| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2957,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2957| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_strtod")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |2963| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |2963| 
	.dwpsn	file "../Source/prod.c",line 2959,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |2959| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2963| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2963| 
        MOVL      XAR0,#44              ; [CPU_] |2963| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2963| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2963| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_sprintf")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2963| 
        ; call occurs [#_sprintf] ; [] |2963| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2964,column 7,is_stmt,isa 0
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2964| 
        MOV       AL,#1024              ; [CPU_] |2964| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2964| 
        ; call occurs [#_scia_getparam] ; [] |2964| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2964| 
	.dwpsn	file "../Source/prod.c",line 2965,column 7,is_stmt,isa 0
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2965| 
        ; call occurs [#_scia_puts] ; [] |2965| 
	.dwpsn	file "../Source/prod.c",line 2966,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2966| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2966| 
        ; call occurs [#_scia_puts] ; [] |2966| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2966,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2966| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_strtod")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2974,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |2974| 
        MOVL      XAR0,#62              ; [CPU_] |2974| 
	.dwpsn	file "../Source/prod.c",line 2968,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |2968| 
	.dwpsn	file "../Source/prod.c",line 2974,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2974| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2974| 
        MOV       *-SP[3],AL            ; [CPU_] |2974| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2974| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |2974| 
        MOV       ACC,AL << 1           ; [CPU_] |2974| 
        ADDL      ACC,XAR6              ; [CPU_] |2974| 
        MOVL      XAR4,ACC              ; [CPU_] |2974| 
        MOVL      XAR0,#44              ; [CPU_] |2974| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2974| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2974| 
        MOVB      AL,#1                 ; [CPU_] |2974| 
        ADD       AL,*-SP[50]           ; [CPU_] |2974| 
        MOV       *-SP[7],AL            ; [CPU_] |2974| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2974| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_sprintf")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2974| 
        ; call occurs [#_sprintf] ; [] |2974| 
        MOVL      XAR0,#44              ; [CPU_] |2974| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2974| 
	.dwpsn	file "../Source/prod.c",line 2977,column 7,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2977| 
        ; call occurs [#_scia_puts] ; [] |2977| 
	.dwpsn	file "../Source/prod.c",line 2979,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |2979| 
        B         $C$L486,TC            ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |2979| 
        B         $C$L487,UNC           ; [CPU_] |2979| 
        ; branch occurs ; [] |2979| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |2979| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |2979| 
        B         $C$L488,TC            ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |2979| 
        B         $C$L489,UNC           ; [CPU_] |2979| 
        ; branch occurs ; [] |2979| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |2979| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |2979| 
        B         $C$L490,TC            ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |2979| 
        B         $C$L491,UNC           ; [CPU_] |2979| 
        ; branch occurs ; [] |2979| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |2979| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |2979| 
        MOVL      XAR0,#44              ; [CPU_] |2979| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |2979| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2979| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |2979| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |2979| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2979| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_sprintf")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2979| 
        ; call occurs [#_sprintf] ; [] |2979| 
        MOVL      XAR0,#44              ; [CPU_] |2979| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2979| 
	.dwpsn	file "../Source/prod.c",line 2986,column 7,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2986| 
        ; call occurs [#_scia_puts] ; [] |2986| 
	.dwpsn	file "../Source/prod.c",line 2987,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |2987| 
        MOVL      XAR0,#48              ; [CPU_] |2987| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2987| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2987| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2987| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2987| 
        MOVL      XAR0,#48              ; [CPU_] |2987| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2987| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |2987| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2987| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2987| 
        MOVL      *-SP[10],ACC          ; [CPU_] |2987| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |2987| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2987| 
        MOVL      XAR4,XAR1             ; [CPU_] |2987| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_sprintf")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2987| 
        ; call occurs [#_sprintf] ; [] |2987| 
        MOVL      XAR4,XAR1             ; [CPU_] |2987| 
	.dwpsn	file "../Source/prod.c",line 2991,column 7,is_stmt,isa 0
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2991| 
        ; call occurs [#_scia_puts] ; [] |2991| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3002,column 6,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3002| 
        ; call occurs [#_ad7738_setcal] ; [] |3002| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 2999,column 6,is_stmt,isa 0
        MOV       *-SP[40],#1           ; [CPU_] |2999| 
	.dwpsn	file "../Source/prod.c",line 3004,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3004| 
        ; branch occurs ; [] |3004| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2890,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2890| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2890| 
        ; call occurs [#_scia_puts] ; [] |2890| 
	.dwpsn	file "../Source/prod.c",line 2882,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2882| 
        ; branch occurs ; [] |2882| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2836,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2836| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2836| 
        ; call occurs [#_scia_puts] ; [] |2836| 
	.dwpsn	file "../Source/prod.c",line 2828,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2828| 
        ; branch occurs ; [] |2828| 
$C$L498:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3308,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3308| 
        B         $C$L625,LO            ; [CPU_] |3308| 
        ; branchcc occurs ; [] |3308| 
	.dwpsn	file "../Source/prod.c",line 3311,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3311| 
        CMPB      AL,#68                ; [CPU_] |3311| 
        B         $C$L502,EQ            ; [CPU_] |3311| 
        ; branchcc occurs ; [] |3311| 
        CMPB      AL,#82                ; [CPU_] |3311| 
        B         $C$L501,EQ            ; [CPU_] |3311| 
        ; branchcc occurs ; [] |3311| 
        CMPB      AL,#87                ; [CPU_] |3311| 
        B         $C$L625,NEQ           ; [CPU_] |3311| 
        ; branchcc occurs ; [] |3311| 
        MOV       AL,*-SP[40]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3315,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3315| 
        ; branchcc occurs ; [] |3315| 
	.dwpsn	file "../Source/prod.c",line 3339,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3339| 
	.dwpsn	file "../Source/prod.c",line 3341,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3341| 
        ; branch occurs ; [] |3341| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3317,column 7,is_stmt,isa 0
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3317| 
        ; call occurs [#_lcd_clear] ; [] |3317| 
	.dwpsn	file "../Source/prod.c",line 3318,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3318| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3318| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3318| 
        ; call occurs [#_lcd_puts] ; [] |3318| 
	.dwpsn	file "../Source/prod.c",line 3319,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3319| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3319| 
        ; call occurs [#_scia_puts] ; [] |3319| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3322,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3322| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_delay_us")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3322| 
        ; call occurs [#_delay_us] ; [] |3322| 
	.dwpsn	file "../Source/prod.c",line 3321,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3321| 
        ; branchcc occurs ; [] |3321| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3326,column 7,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_conf_write")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3326| 
        ; call occurs [#_conf_write] ; [] |3326| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3329,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3329| 
        B         $C$L505,NEQ           ; [CPU_] |3329| 
        ; branchcc occurs ; [] |3329| 
	.dwpsn	file "../Source/prod.c",line 3330,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3330| 
	.dwpsn	file "../Source/prod.c",line 3332,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3332| 
        ; branch occurs ; [] |3332| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3346,column 6,is_stmt,isa 0
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_conf_read")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3346| 
        ; call occurs [#_conf_read] ; [] |3346| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3349,column 6,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3349| 
        ; call occurs [#_ad7738_setcal] ; [] |3349| 
	.dwpsn	file "../Source/prod.c",line 3350,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3350| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3350| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3350| 
	.dwpsn	file "../Source/prod.c",line 3351,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3351| 
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3351| 
        ; call occurs [#_ad7738_resetvall] ; [] |3351| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3354,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3354| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3354| 
        ; call occurs [#_scia_puts] ; [] |3354| 
	.dwpsn	file "../Source/prod.c",line 3357,column 6,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_update_units")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3357| 
        ; call occurs [#_update_units] ; [] |3357| 
	.dwpsn	file "../Source/prod.c",line 3355,column 6,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |3355| 
	.dwpsn	file "../Source/prod.c",line 3359,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3359| 
        ; branch occurs ; [] |3359| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3363,column 6,is_stmt,isa 0
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_conf_default")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3363| 
        ; call occurs [#_conf_default] ; [] |3363| 
	.dwpsn	file "../Source/prod.c",line 3366,column 6,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3366| 
        ; call occurs [#_lcd_clear] ; [] |3366| 
	.dwpsn	file "../Source/prod.c",line 3367,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3367| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3367| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3367| 
        ; call occurs [#_lcd_puts] ; [] |3367| 
	.dwpsn	file "../Source/prod.c",line 3368,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3368| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3368| 
        ; call occurs [#_scia_puts] ; [] |3368| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3371,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3371| 
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_delay_us")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3371| 
        ; call occurs [#_delay_us] ; [] |3371| 
	.dwpsn	file "../Source/prod.c",line 3370,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3370| 
        ; branchcc occurs ; [] |3370| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3375,column 6,is_stmt,isa 0
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_conf_write")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3375| 
        ; call occurs [#_conf_write] ; [] |3375| 
        MOVZ      AR1,AL                ; [CPU_] |3375| 
	.dwpsn	file "../Source/prod.c",line 3376,column 6,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3376| 
        ; call occurs [#_ad7738_setcal] ; [] |3376| 
	.dwpsn	file "../Source/prod.c",line 3377,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3377| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3377| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3377| 
	.dwpsn	file "../Source/prod.c",line 3378,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3378| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3378| 
        ; call occurs [#_ad7738_resetvall] ; [] |3378| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3381,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3381| 
        ; branchcc occurs ; [] |3381| 
	.dwpsn	file "../Source/prod.c",line 3382,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3382| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3382| 
        ; call occurs [#_scia_puts] ; [] |3382| 
	.dwpsn	file "../Source/prod.c",line 3384,column 7,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |3384| 
	.dwpsn	file "../Source/prod.c",line 3385,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3385| 
        ; branch occurs ; [] |3385| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3386,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3386| 
        SPM       #0                    ; [CPU_] 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3386| 
        ; call occurs [#_scia_puts] ; [] |3386| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3388,column 6,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3388| 
        ; call occurs [#_lcd_clear] ; [] |3388| 
	.dwpsn	file "../Source/prod.c",line 3389,column 6,is_stmt,isa 0
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_update_units")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3389| 
        ; call occurs [#_update_units] ; [] |3389| 
	.dwpsn	file "../Source/prod.c",line 3390,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3390| 
        ; branch occurs ; [] |3390| 
$C$L507:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2415,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2415| 
        B         $C$L625,LO            ; [CPU_] |2415| 
        ; branchcc occurs ; [] |2415| 
	.dwpsn	file "../Source/prod.c",line 2418,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2418| 
        CMPB      AL,#70                ; [CPU_] |2418| 
        B         $C$L512,EQ            ; [CPU_] |2418| 
        ; branchcc occurs ; [] |2418| 
        CMPB      AL,#80                ; [CPU_] |2418| 
        B         $C$L632,NEQ           ; [CPU_] |2418| 
        ; branchcc occurs ; [] |2418| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2455,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2455| 
        MOVL      XAR0,#44              ; [CPU_] |2455| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2455| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2455| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2455| 
        MOVL      XAR4,XAR1             ; [CPU_] |2455| 
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_sprintf")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2455| 
        ; call occurs [#_sprintf] ; [] |2455| 
        MOVL      XAR4,XAR1             ; [CPU_] |2455| 
	.dwpsn	file "../Source/prod.c",line 2456,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2456| 
        MOV       AL,#1024              ; [CPU_] |2456| 
        MOVL      XAR5,XAR1             ; [CPU_] |2456| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2456| 
        ; call occurs [#_scia_getparam] ; [] |2456| 
	.dwpsn	file "../Source/prod.c",line 2457,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2457| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_atoi")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2457| 
        ; call occurs [#_atoi] ; [] |2457| 
        MOV       *-SP[49],AL           ; [CPU_] |2457| 
	.dwpsn	file "../Source/prod.c",line 2458,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2458| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2458| 
        ; call occurs [#_scia_puts] ; [] |2458| 
        MOV       AL,*-SP[49]           ; [CPU_] |2458| 
	.dwpsn	file "../Source/prod.c",line 2460,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2460| 
        CMPB      AL,#2                 ; [CPU_] |2460| 
        B         $C$L511,HIS           ; [CPU_] |2460| 
        ; branchcc occurs ; [] |2460| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2464| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2464| 
        ; call occurs [#_scia_puts] ; [] |2464| 
        MOVZ      AR1,*-SP[49]          ; [CPU_] |2464| 
	.dwpsn	file "../Source/prod.c",line 2467,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2467| 
        MOVL      XAR0,#44              ; [CPU_] |2467| 
        DEC       *-SP[49]              ; [CPU_] |2467| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2467| 
        MOV       *-SP[3],AR1           ; [CPU_] |2467| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2467| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_sprintf")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2467| 
        ; call occurs [#_sprintf] ; [] |2467| 
        MOVL      XAR0,#44              ; [CPU_] |2467| 
	.dwpsn	file "../Source/prod.c",line 2468,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2468| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2468| 
	.dwpsn	file "../Source/prod.c",line 2467,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2467| 
	.dwpsn	file "../Source/prod.c",line 2468,column 6,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2468| 
        ; call occurs [#_scia_getparam] ; [] |2468| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2468| 
	.dwpsn	file "../Source/prod.c",line 2469,column 6,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_atol")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2469| 
        ; call occurs [#_atol] ; [] |2469| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2469| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2469| 
	.dwpsn	file "../Source/prod.c",line 2470,column 6,is_stmt,isa 0
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2470| 
        ; call occurs [#_scia_puts] ; [] |2470| 
	.dwpsn	file "../Source/prod.c",line 2471,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2471| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2471| 
        ; call occurs [#_scia_puts] ; [] |2471| 
	.dwpsn	file "../Source/prod.c",line 2472,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2472| 
        B         $C$L509,NEQ           ; [CPU_] |2472| 
        ; branchcc occurs ; [] |2472| 
	.dwpsn	file "../Source/prod.c",line 2473,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2473| 
	.dwpsn	file "../Source/prod.c",line 2474,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2474| 
        ; branch occurs ; [] |2474| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2476,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2476| 
        MOVL      XAR0,#44              ; [CPU_] |2476| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2476| 
        MOV       *-SP[3],AR1           ; [CPU_] |2476| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2476| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2476| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2476| 
        MOVL      XAR4,XAR1             ; [CPU_] |2476| 
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_sprintf")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2476| 
        ; call occurs [#_sprintf] ; [] |2476| 
        MOVL      XAR4,XAR1             ; [CPU_] |2476| 
	.dwpsn	file "../Source/prod.c",line 2478,column 6,is_stmt,isa 0
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2478| 
        ; call occurs [#_scia_puts] ; [] |2478| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2483,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2483| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2483| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[49]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2483| 
        ADDL      ACC,XAR6              ; [CPU_] |2483| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2483| 
        ADD       ACC,#201 << 4         ; [CPU_] |2483| 
        MOVL      XAR4,ACC              ; [CPU_] |2483| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2483| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2484,column 6,is_stmt,isa 0
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2484| 
        ; call occurs [#_ad7738_setcal] ; [] |2484| 
	.dwpsn	file "../Source/prod.c",line 2485,column 6,is_stmt,isa 0
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2485| 
        ; call occurs [#_velf_rst] ; [] |2485| 
	.dwpsn	file "../Source/prod.c",line 2487,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2487| 
        ; branch occurs ; [] |2487| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2462,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2462| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2462| 
        ; call occurs [#_scia_puts] ; [] |2462| 
	.dwpsn	file "../Source/prod.c",line 2454,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2454| 
        ; branch occurs ; [] |2454| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2425,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2425| 
        MOVL      XAR0,#44              ; [CPU_] |2425| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2425| 
        MOV       *-SP[3],#4096         ; [CPU_] |2425| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2425| 
        MOVL      XAR4,XAR1             ; [CPU_] |2425| 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_sprintf")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2425| 
        ; call occurs [#_sprintf] ; [] |2425| 
        MOVL      XAR4,XAR1             ; [CPU_] |2425| 
	.dwpsn	file "../Source/prod.c",line 2427,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2427| 
        MOV       AL,#1024              ; [CPU_] |2427| 
        MOVL      XAR5,XAR1             ; [CPU_] |2427| 
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2427| 
        ; call occurs [#_scia_getparam] ; [] |2427| 
	.dwpsn	file "../Source/prod.c",line 2428,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2428| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_atoi")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2428| 
        ; call occurs [#_atoi] ; [] |2428| 
        MOV       *-SP[39],AL           ; [CPU_] |2428| 
	.dwpsn	file "../Source/prod.c",line 2429,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2429| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2429| 
        ; call occurs [#_scia_puts] ; [] |2429| 
        MOV       AL,*-SP[39]           ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2431,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2431| 
        ; branchcc occurs ; [] |2431| 
        CMP       AL,#4096              ; [CPU_] |2431| 
        B         $C$L513,GT            ; [CPU_] |2431| 
        ; branchcc occurs ; [] |2431| 
	.dwpsn	file "../Source/prod.c",line 2435,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2435| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2435| 
        ; call occurs [#_scia_puts] ; [] |2435| 
	.dwpsn	file "../Source/prod.c",line 2437,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2437| 
        MOVL      XAR0,#44              ; [CPU_] |2437| 
        MOV       AL,*-SP[39]           ; [CPU_] |2437| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2437| 
        MOV       *-SP[3],AL            ; [CPU_] |2437| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2437| 
        MOVL      XAR4,XAR1             ; [CPU_] |2437| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_sprintf")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2437| 
        ; call occurs [#_sprintf] ; [] |2437| 
        MOVL      XAR4,XAR1             ; [CPU_] |2437| 
	.dwpsn	file "../Source/prod.c",line 2439,column 6,is_stmt,isa 0
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2439| 
        ; call occurs [#_scia_puts] ; [] |2439| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2444,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2444| 
        MOVL      ACC,XAR4              ; [CPU_] |2444| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2444| 
        MOVL      XAR4,ACC              ; [CPU_] |2444| 
        MOV       AL,*-SP[39]           ; [CPU_] |2444| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2444| 
	.dwpsn	file "../Source/prod.c",line 2448,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2448| 
        ; branch occurs ; [] |2448| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2433,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2433| 
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2433| 
        ; call occurs [#_scia_puts] ; [] |2433| 
	.dwpsn	file "../Source/prod.c",line 2424,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2424| 
        ; branch occurs ; [] |2424| 
$C$L514:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2497,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2497| 
        B         $C$L625,LO            ; [CPU_] |2497| 
        ; branchcc occurs ; [] |2497| 
	.dwpsn	file "../Source/prod.c",line 2500,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2500| 
        CMPB      AL,#83                ; [CPU_] |2500| 
        B         $C$L625,NEQ           ; [CPU_] |2500| 
        ; branchcc occurs ; [] |2500| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2507,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2507| 
        MOVL      XAR0,#44              ; [CPU_] |2507| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2507| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2507| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2507| 
        MOVL      XAR4,XAR1             ; [CPU_] |2507| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_sprintf")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2507| 
        ; call occurs [#_sprintf] ; [] |2507| 
        MOVL      XAR4,XAR1             ; [CPU_] |2507| 
	.dwpsn	file "../Source/prod.c",line 2508,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2508| 
        MOV       AL,#1024              ; [CPU_] |2508| 
        MOVL      XAR5,XAR1             ; [CPU_] |2508| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2508| 
        ; call occurs [#_scia_getparam] ; [] |2508| 
	.dwpsn	file "../Source/prod.c",line 2509,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2509| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_atoi")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2509| 
        ; call occurs [#_atoi] ; [] |2509| 
        MOV       *-SP[49],AL           ; [CPU_] |2509| 
	.dwpsn	file "../Source/prod.c",line 2510,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2510| 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2510| 
        ; call occurs [#_scia_puts] ; [] |2510| 
        MOV       AL,*-SP[49]           ; [CPU_] |2510| 
	.dwpsn	file "../Source/prod.c",line 2512,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2512| 
        CMPB      AL,#4                 ; [CPU_] |2512| 
        B         $C$L529,HIS           ; [CPU_] |2512| 
        ; branchcc occurs ; [] |2512| 
	.dwpsn	file "../Source/prod.c",line 2516,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2516| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2516| 
        ; call occurs [#_scia_puts] ; [] |2516| 
        MOVL      XAR0,#62              ; [CPU_] |2516| 
	.dwpsn	file "../Source/prod.c",line 2520,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2520| 
	.dwpsn	file "../Source/prod.c",line 2516,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2516| 
	.dwpsn	file "../Source/prod.c",line 2520,column 11,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |2520| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2521,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2521| 
        MOVL      XAR0,#44              ; [CPU_] |2521| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2521| 
        MOV       *-SP[3],AL            ; [CPU_] |2521| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2521| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2521| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2521| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_sprintf")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2521| 
        ; call occurs [#_sprintf] ; [] |2521| 
        MOVL      XAR0,#44              ; [CPU_] |2521| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2521| 
	.dwpsn	file "../Source/prod.c",line 2522,column 7,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2522| 
        ; call occurs [#_scia_puts] ; [] |2522| 
        MOV       AL,*-SP[39]           ; [CPU_] |2522| 
	.dwpsn	file "../Source/prod.c",line 2523,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2523| 
        B         $C$L517,GEQ           ; [CPU_] |2523| 
        ; branchcc occurs ; [] |2523| 
	.dwpsn	file "../Source/prod.c",line 2524,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2524| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2524| 
        ; call occurs [#_scia_puts] ; [] |2524| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2520,column 18,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |2520| 
        MOV       AL,*-SP[39]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2520| 
        B         $C$L516,LT            ; [CPU_] |2520| 
        ; branchcc occurs ; [] |2520| 
	.dwpsn	file "../Source/prod.c",line 2527,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2527| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2527| 
        ; call occurs [#_scia_puts] ; [] |2527| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2528| 
        MOVL      XAR0,#44              ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2527,column 6,is_stmt,isa 0
        MOV       AH,*-SP[49]           ; [CPU_] |2527| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2528| 
        MOV       *-SP[3],AH            ; [CPU_] |2528| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2528| 
        DEC       *-SP[49]              ; [CPU_] |2528| 
        MOV       *-SP[39],AH           ; [CPU_] |2528| 
        MOVL      XAR4,XAR1             ; [CPU_] |2528| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_sprintf")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2528| 
        ; call occurs [#_sprintf] ; [] |2528| 
        MOVL      XAR4,XAR1             ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2530,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |2530| 
        MOV       AL,#1024              ; [CPU_] |2530| 
        MOVL      XAR5,XAR1             ; [CPU_] |2530| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2530| 
        ; call occurs [#_scia_getparam] ; [] |2530| 
        MOVL      XAR4,XAR1             ; [CPU_] |2530| 
	.dwpsn	file "../Source/prod.c",line 2531,column 6,is_stmt,isa 0
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_atoi")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2531| 
        ; call occurs [#_atoi] ; [] |2531| 
        MOVZ      AR1,AL                ; [CPU_] |2531| 
        CMPB      AL,#7                 ; [CPU_] |2531| 
        B         $C$L518,LO            ; [CPU_] |2531| 
        ; branchcc occurs ; [] |2531| 
	.dwpsn	file "../Source/prod.c",line 2534,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2534| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2534| 
        ; call occurs [#_scia_puts] ; [] |2534| 
	.dwpsn	file "../Source/prod.c",line 2533,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2533| 
$C$L518:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2537| 
        ; call occurs [#_scia_puts] ; [] |2537| 
	.dwpsn	file "../Source/prod.c",line 2538,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2538| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2538| 
        ; call occurs [#_scia_puts] ; [] |2538| 
	.dwpsn	file "../Source/prod.c",line 2539,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2539| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2539| 
        MOVB      AL,#3                 ; [CPU_] |2539| 
        MOV       T,*-SP[49]            ; [CPU_] |2539| 
        MPYU      ACC,T,AL              ; [CPU_] |2539| 
        ADDL      ACC,XAR6              ; [CPU_] |2539| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2539| 
        MOVL      XAR4,ACC              ; [CPU_] |2539| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2539| 
	.dwpsn	file "../Source/prod.c",line 2541,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2541| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2541| 
        CMPB      AL,#2                 ; [CPU_] |2541| 
        B         $C$L522,LOS           ; [CPU_] |2541| 
        ; branchcc occurs ; [] |2541| 
        MOV       AH,AL                 ; [CPU_] |2541| 
        ADDB      AH,#-3                ; [CPU_] |2541| 
        CMPB      AH,#1                 ; [CPU_] |2541| 
        B         $C$L521,LOS           ; [CPU_] |2541| 
        ; branchcc occurs ; [] |2541| 
        CMPB      AL,#5                 ; [CPU_] |2541| 
        B         $C$L519,EQ            ; [CPU_] |2541| 
        ; branchcc occurs ; [] |2541| 
        CMPB      AL,#6                 ; [CPU_] |2541| 
        B         $C$L584,NEQ           ; [CPU_] |2541| 
        ; branchcc occurs ; [] |2541| 
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2615| 
        MOV       AL,*-SP[39]           ; [CPU_] |2615| 
        MOVL      XAR0,#62              ; [CPU_] |2615| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2615| 
        MOV       *-SP[3],AL            ; [CPU_] |2615| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2615| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2615| 
        ADDL      ACC,XAR6              ; [CPU_] |2615| 
        MOVL      XAR4,ACC              ; [CPU_] |2615| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2615| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2615| 
	.dwpsn	file "../Source/prod.c",line 2618,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2618| 
        ; branch occurs ; [] |2618| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2596,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2596| 
        MOVL      XAR0,#44              ; [CPU_] |2596| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2596| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2596| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2596| 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_sprintf")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2596| 
        ; call occurs [#_sprintf] ; [] |2596| 
        MOVL      XAR0,#44              ; [CPU_] |2596| 
	.dwpsn	file "../Source/prod.c",line 2597,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2597| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2597| 
	.dwpsn	file "../Source/prod.c",line 2596,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2596| 
	.dwpsn	file "../Source/prod.c",line 2597,column 8,is_stmt,isa 0
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2597| 
        ; call occurs [#_scia_getparam] ; [] |2597| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2597| 
	.dwpsn	file "../Source/prod.c",line 2598,column 8,is_stmt,isa 0
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_atoi")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2598| 
        ; call occurs [#_atoi] ; [] |2598| 
        MOV       *-SP[50],AL           ; [CPU_] |2598| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2598| 
	.dwpsn	file "../Source/prod.c",line 2599,column 8,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2599| 
        ; call occurs [#_scia_puts] ; [] |2599| 
        MOV       AL,*-SP[50]           ; [CPU_] |2599| 
	.dwpsn	file "../Source/prod.c",line 2601,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2601| 
        CMPB      AL,#4                 ; [CPU_] |2601| 
        B         $C$L520,HIS           ; [CPU_] |2601| 
        ; branchcc occurs ; [] |2601| 
	.dwpsn	file "../Source/prod.c",line 2605,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2605| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2605| 
        ; call occurs [#_scia_puts] ; [] |2605| 
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2609| 
        MOVL      XAR0,#62              ; [CPU_] |2609| 
	.dwpsn	file "../Source/prod.c",line 2605,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2609| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2609| 
        MOV       *-SP[3],AL            ; [CPU_] |2609| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2609| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2609| 
        ADDL      ACC,XAR6              ; [CPU_] |2609| 
        MOVL      XAR4,ACC              ; [CPU_] |2609| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2609| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2609| 
        MOVB      AL,#1                 ; [CPU_] |2609| 
        ADD       AL,*-SP[50]           ; [CPU_] |2609| 
        MOV       *-SP[7],AL            ; [CPU_] |2609| 
	.dwpsn	file "../Source/prod.c",line 2612,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2612| 
        ; branch occurs ; [] |2612| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2603| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2603| 
        ; call occurs [#_scia_puts] ; [] |2603| 
	.dwpsn	file "../Source/prod.c",line 2595,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2595| 
        ; branch occurs ; [] |2595| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2553,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2553| 
        B         $C$L523,UNC           ; [CPU_] |2553| 
        ; branch occurs ; [] |2553| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2547,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2547| 
$C$L523:    
        MOV       *-SP[51],AL           ; [CPU_] |2547| 
        MOV       *-SP[40],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2558,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2558| 
        MOV       AL,*-SP[51]           ; [CPU_] |2558| 
        MOVL      XAR0,#44              ; [CPU_] |2558| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2558| 
        MOV       *-SP[3],AL            ; [CPU_] |2558| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2558| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_sprintf")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2558| 
        ; call occurs [#_sprintf] ; [] |2558| 
        MOVL      XAR0,#44              ; [CPU_] |2558| 
	.dwpsn	file "../Source/prod.c",line 2559,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2559| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2559| 
	.dwpsn	file "../Source/prod.c",line 2558,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2558| 
	.dwpsn	file "../Source/prod.c",line 2559,column 8,is_stmt,isa 0
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2559| 
        ; call occurs [#_scia_getparam] ; [] |2559| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2559| 
	.dwpsn	file "../Source/prod.c",line 2560,column 8,is_stmt,isa 0
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_atoi")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2560| 
        ; call occurs [#_atoi] ; [] |2560| 
        MOV       *-SP[50],AL           ; [CPU_] |2560| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2560| 
	.dwpsn	file "../Source/prod.c",line 2561,column 8,is_stmt,isa 0
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2561| 
        ; call occurs [#_scia_puts] ; [] |2561| 
        MOV       AL,*-SP[50]           ; [CPU_] |2561| 
	.dwpsn	file "../Source/prod.c",line 2563,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2563| 
        ; branchcc occurs ; [] |2563| 
        MOV       AL,*-SP[40]           ; [CPU_] 
        CMP       AL,*-SP[50]           ; [CPU_] |2563| 
        B         $C$L528,LO            ; [CPU_] |2563| 
        ; branchcc occurs ; [] |2563| 
	.dwpsn	file "../Source/prod.c",line 2567,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2567| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2567| 
        ; call occurs [#_scia_puts] ; [] |2567| 
	.dwpsn	file "../Source/prod.c",line 2569,column 7,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |2569| 
	.dwpsn	file "../Source/prod.c",line 2567,column 7,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |2567| 
	.dwpsn	file "../Source/prod.c",line 2569,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2569| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2574,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2574| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |2574| 
        MOV       AL,#1024              ; [CPU_] |2574| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2574| 
        ; call occurs [#_scia_getparam] ; [] |2574| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2574| 
	.dwpsn	file "../Source/prod.c",line 2576,column 8,is_stmt,isa 0
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_atoi")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2576| 
        ; call occurs [#_atoi] ; [] |2576| 
        MOV       *-SP[40],AL           ; [CPU_] |2576| 
        CMPB      AL,#0                 ; [CPU_] |2576| 
        B         $C$L527,LT            ; [CPU_] |2576| 
        ; branchcc occurs ; [] |2576| 
        CMPB      AL,#6                 ; [CPU_] |2576| 
        B         $C$L527,GEQ           ; [CPU_] |2576| 
        ; branchcc occurs ; [] |2576| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2582,column 7,is_stmt,isa 0
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2582| 
        ; call occurs [#_scia_puts] ; [] |2582| 
	.dwpsn	file "../Source/prod.c",line 2583,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2583| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2583| 
        ; call occurs [#_scia_puts] ; [] |2583| 
        MOV       AL,*-SP[40]           ; [CPU_] |2583| 
	.dwpsn	file "../Source/prod.c",line 2586,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2586| 
        MOVL      XAR0,#62              ; [CPU_] |2586| 
	.dwpsn	file "../Source/prod.c",line 2584,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2584| 
	.dwpsn	file "../Source/prod.c",line 2586,column 7,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |2586| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2586| 
        MOV       *-SP[3],AL            ; [CPU_] |2586| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2586| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2586| 
        ADDL      ACC,XAR6              ; [CPU_] |2586| 
        MOVL      XAR4,ACC              ; [CPU_] |2586| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2586| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2586| 
        MOVB      AL,#1                 ; [CPU_] |2586| 
        ADD       AL,*-SP[50]           ; [CPU_] |2586| 
        MOV       *-SP[7],AL            ; [CPU_] |2586| 
        MOV       AL,*-SP[40]           ; [CPU_] |2586| 
        MOV       *-SP[8],AL            ; [CPU_] |2586| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2586| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2586| 
        MOVL      XAR4,XAR1             ; [CPU_] |2586| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_sprintf")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2586| 
        ; call occurs [#_sprintf] ; [] |2586| 
        MOVL      XAR4,XAR1             ; [CPU_] |2586| 
	.dwpsn	file "../Source/prod.c",line 2589,column 7,is_stmt,isa 0
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2589| 
        ; call occurs [#_scia_puts] ; [] |2589| 
	.dwpsn	file "../Source/prod.c",line 2624,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2624| 
        ; branch occurs ; [] |2624| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2580,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2580| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2580| 
        ; call occurs [#_scia_puts] ; [] |2580| 
	.dwpsn	file "../Source/prod.c",line 2573,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2573| 
        ; branch occurs ; [] |2573| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2565,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2565| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2565| 
        ; call occurs [#_scia_puts] ; [] |2565| 
	.dwpsn	file "../Source/prod.c",line 2557,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2557| 
        ; branch occurs ; [] |2557| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2514,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2514| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2514| 
        ; call occurs [#_scia_puts] ; [] |2514| 
	.dwpsn	file "../Source/prod.c",line 2506,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2506| 
        ; branch occurs ; [] |2506| 
$C$L530:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1604,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1604| 
        B         $C$L625,LO            ; [CPU_] |1604| 
        ; branchcc occurs ; [] |1604| 
	.dwpsn	file "../Source/prod.c",line 1609,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1609| 
        CMPB      AL,#86                ; [CPU_] |1609| 
        B         $C$L531,EQ            ; [CPU_] |1609| 
        ; branchcc occurs ; [] |1609| 
        CMPB      AL,#77                ; [CPU_] |1609| 
        B         $C$L531,EQ            ; [CPU_] |1609| 
        ; branchcc occurs ; [] |1609| 
        CMPB      AL,#83                ; [CPU_] |1609| 
        B         $C$L625,NEQ           ; [CPU_] |1609| 
        ; branchcc occurs ; [] |1609| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1612,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1612| 
        MOV       *-SP[39],AL           ; [CPU_] |1612| 
	.dwpsn	file "../Source/prod.c",line 1614,column 5,is_stmt,isa 0
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1614| 
        ; call occurs [#_lcd_clear] ; [] |1614| 
	.dwpsn	file "../Source/prod.c",line 1615,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1615| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1615| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1615| 
        ; call occurs [#_lcd_puts] ; [] |1615| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1621,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1621| 
        MOVL      XAR0,#44              ; [CPU_] |1621| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1621| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1621| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1621| 
        MOVL      XAR4,XAR1             ; [CPU_] |1621| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_sprintf")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1621| 
        ; call occurs [#_sprintf] ; [] |1621| 
        MOVL      XAR4,XAR1             ; [CPU_] |1621| 
	.dwpsn	file "../Source/prod.c",line 1622,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1622| 
        MOV       AL,#1024              ; [CPU_] |1622| 
        MOVL      XAR5,XAR1             ; [CPU_] |1622| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1622| 
        ; call occurs [#_scia_getparam] ; [] |1622| 
	.dwpsn	file "../Source/prod.c",line 1623,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1623| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_atoi")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1623| 
        ; call occurs [#_atoi] ; [] |1623| 
        MOV       *-SP[50],AL           ; [CPU_] |1623| 
	.dwpsn	file "../Source/prod.c",line 1624,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1624| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1624| 
        ; call occurs [#_scia_puts] ; [] |1624| 
        MOV       AL,*-SP[50]           ; [CPU_] |1624| 
	.dwpsn	file "../Source/prod.c",line 1626,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1626| 
        CMPB      AL,#4                 ; [CPU_] |1626| 
        B         $C$L590,HIS           ; [CPU_] |1626| 
        ; branchcc occurs ; [] |1626| 
	.dwpsn	file "../Source/prod.c",line 1630,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1630| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1630| 
        ; call occurs [#_scia_puts] ; [] |1630| 
	.dwpsn	file "../Source/prod.c",line 1631,column 5,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |1631| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1636,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1636| 
        MOVL      XAR0,#44              ; [CPU_] |1636| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1636| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1636| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1636| 
        MOVL      XAR4,XAR1             ; [CPU_] |1636| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_sprintf")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1636| 
        ; call occurs [#_sprintf] ; [] |1636| 
        MOVL      XAR4,XAR1             ; [CPU_] |1636| 
	.dwpsn	file "../Source/prod.c",line 1637,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1637| 
        MOV       AL,#1024              ; [CPU_] |1637| 
        MOVL      XAR5,XAR1             ; [CPU_] |1637| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1637| 
        ; call occurs [#_scia_getparam] ; [] |1637| 
	.dwpsn	file "../Source/prod.c",line 1638,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1638| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_atoi")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1638| 
        ; call occurs [#_atoi] ; [] |1638| 
        MOV       *-SP[49],AL           ; [CPU_] |1638| 
	.dwpsn	file "../Source/prod.c",line 1639,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1639| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1639| 
        ; call occurs [#_scia_puts] ; [] |1639| 
        MOV       AL,*-SP[49]           ; [CPU_] |1639| 
	.dwpsn	file "../Source/prod.c",line 1643,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1643| 
        CMPB      AL,#20                ; [CPU_] |1643| 
        B         $C$L589,HIS           ; [CPU_] |1643| 
        ; branchcc occurs ; [] |1643| 
	.dwpsn	file "../Source/prod.c",line 1647,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1647| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1647| 
        ; call occurs [#_scia_puts] ; [] |1647| 
	.dwpsn	file "../Source/prod.c",line 1651,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1651| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1651| 
        MOVL      XAR0,#44              ; [CPU_] |1651| 
	.dwpsn	file "../Source/prod.c",line 1647,column 5,is_stmt,isa 0
        MOV       AH,*-SP[49]           ; [CPU_] |1647| 
	.dwpsn	file "../Source/prod.c",line 1651,column 5,is_stmt,isa 0
        ADD       AL,*-SP[50]           ; [CPU_] |1651| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1651| 
        MOV       *-SP[3],AL            ; [CPU_] |1651| 
        MOV       *-SP[4],AH            ; [CPU_] |1651| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1651| 
        DEC       *-SP[49]              ; [CPU_] |1651| 
        MOV       *-SP[51],AH           ; [CPU_] |1651| 
        MOV       *-SP[52],AL           ; [CPU_] |1651| 
        MOVL      XAR4,XAR1             ; [CPU_] |1651| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_sprintf")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1651| 
        ; call occurs [#_sprintf] ; [] |1651| 
	.dwpsn	file "../Source/prod.c",line 1652,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1652| 
        MOVL      XAR4,XAR1             ; [CPU_] |1652| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1652| 
        ; call occurs [#_lcd_puts] ; [] |1652| 
	.dwpsn	file "../Source/prod.c",line 1656,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1656| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1656| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1656| 
        MOVL      XAR4,XAR1             ; [CPU_] |1656| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_sprintf")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1656| 
        ; call occurs [#_sprintf] ; [] |1656| 
	.dwpsn	file "../Source/prod.c",line 1657,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1657| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1657| 
        MOVL      XAR4,XAR1             ; [CPU_] |1657| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1657| 
        ; call occurs [#_scia_getparam] ; [] |1657| 
        CMPB      AL,#15                ; [CPU_] |1657| 
        B         $C$L534,LOS           ; [CPU_] |1657| 
        ; branchcc occurs ; [] |1657| 
	.dwpsn	file "../Source/prod.c",line 1661,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1661| 
        MOVB      XAR0,#15              ; [CPU_] |1661| 
	.dwpsn	file "../Source/prod.c",line 1660,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1660| 
	.dwpsn	file "../Source/prod.c",line 1661,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1661| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1663,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1663| 
        MOVL      XAR0,#36              ; [CPU_] |1663| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1663| 
        ADD       AH,AL                 ; [CPU_] |1663| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1663| 
        MOVU      ACC,AH                ; [CPU_] |1663| 
        MOVL      XAR5,XAR1             ; [CPU_] |1663| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_memcpy")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1663| 
        ; call occurs [#_memcpy] ; [] |1663| 
        MOVL      XAR4,XAR1             ; [CPU_] |1663| 
	.dwpsn	file "../Source/prod.c",line 1664,column 5,is_stmt,isa 0
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1664| 
        ; call occurs [#_scia_puts] ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1665,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1665| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1665| 
        ; call occurs [#_scia_puts] ; [] |1665| 
	.dwpsn	file "../Source/prod.c",line 1669,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1669| 
        MOVL      XAR0,#44              ; [CPU_] |1669| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1669| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1669| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1669| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_sprintf")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1669| 
        ; call occurs [#_sprintf] ; [] |1669| 
        MOVL      XAR0,#44              ; [CPU_] |1669| 
	.dwpsn	file "../Source/prod.c",line 1670,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1670| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1670| 
	.dwpsn	file "../Source/prod.c",line 1669,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1669| 
	.dwpsn	file "../Source/prod.c",line 1670,column 5,is_stmt,isa 0
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1670| 
        ; call occurs [#_scia_getparam] ; [] |1670| 
        CMPB      AL,#15                ; [CPU_] |1670| 
        B         $C$L535,LOS           ; [CPU_] |1670| 
        ; branchcc occurs ; [] |1670| 
	.dwpsn	file "../Source/prod.c",line 1674,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1674| 
        MOVB      XAR0,#15              ; [CPU_] |1674| 
	.dwpsn	file "../Source/prod.c",line 1673,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1673| 
	.dwpsn	file "../Source/prod.c",line 1674,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1674| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1676,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1676| 
        MOVL      XAR0,#60              ; [CPU_] |1676| 
        MOVL      XAR5,XAR1             ; [CPU_] |1676| 
        ADD       AH,AL                 ; [CPU_] |1676| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1676| 
        MOVU      ACC,AH                ; [CPU_] |1676| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_memcpy")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1676| 
        ; call occurs [#_memcpy] ; [] |1676| 
        MOVL      XAR4,XAR1             ; [CPU_] |1676| 
	.dwpsn	file "../Source/prod.c",line 1677,column 5,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1677| 
        ; call occurs [#_scia_puts] ; [] |1677| 
	.dwpsn	file "../Source/prod.c",line 1678,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1678| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1678| 
        ; call occurs [#_scia_puts] ; [] |1678| 
        MOVL      XAR0,#70              ; [CPU_] |1678| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1678| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1681,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1681| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[53],AL           ; [CPU_] |1681| 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1682,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1682| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1682| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1682| 
        MOV       *-SP[3],AL            ; [CPU_] |1682| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1682| 
        MOVL      *-SP[56],XAR4         ; [CPU_] |1682| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1682| 
        MOVL      XAR4,XAR1             ; [CPU_] |1682| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_sprintf")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1682| 
        ; call occurs [#_sprintf] ; [] |1682| 
	.dwpsn	file "../Source/prod.c",line 1681,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1681| 
        INC       *-SP[53]              ; [CPU_] |1681| 
        MOV       AL,*-SP[53]           ; [CPU_] |1681| 
        CMPB      AL,#7                 ; [CPU_] |1681| 
        B         $C$L536,LT            ; [CPU_] |1681| 
        ; branchcc occurs ; [] |1681| 
	.dwpsn	file "../Source/prod.c",line 1684,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1684| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1684| 
        MOVB      XAR1,#54              ; [CPU_] |1684| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1684| 
	.dwpsn	file "../Source/prod.c",line 1685,column 5,is_stmt,isa 0
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1685| 
        ; call occurs [#_scia_puts] ; [] |1685| 
	.dwpsn	file "../Source/prod.c",line 1686,column 5,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1686| 
        MOV       AL,#1024              ; [CPU_] |1686| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1686| 
        MOVL      XAR5,XAR1             ; [CPU_] |1686| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1686| 
        ; call occurs [#_scia_getparam] ; [] |1686| 
        MOVL      XAR4,XAR1             ; [CPU_] |1686| 
	.dwpsn	file "../Source/prod.c",line 1688,column 5,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_atoi")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1688| 
        ; call occurs [#_atoi] ; [] |1688| 
        MOVB      XAR0,#42              ; [CPU_] |1688| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1688| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1688| 
	.dwpsn	file "../Source/prod.c",line 1690,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1690| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1690| 
        CMPB      AL,#6                 ; [CPU_] |1690| 
        B         $C$L537,GT            ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
        CMPB      AL,#6                 ; [CPU_] |1690| 
        B         $C$L540,EQ            ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
        CMPB      AL,#1                 ; [CPU_] |1690| 
        B         $C$L543,LOS           ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
        MOV       AH,AL                 ; [CPU_] |1690| 
        ADDB      AH,#-2                ; [CPU_] |1690| 
        CMPB      AH,#2                 ; [CPU_] |1690| 
        B         $C$L542,LOS           ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
        CMPB      AL,#5                 ; [CPU_] |1690| 
        B         $C$L541,EQ            ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
        B         $C$L538,UNC           ; [CPU_] |1690| 
        ; branch occurs ; [] |1690| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1690| 
        ADDB      AH,#-7                ; [CPU_] |1690| 
        CMPB      AH,#1                 ; [CPU_] |1690| 
        B         $C$L539,LOS           ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
        CMPB      AL,#15                ; [CPU_] |1690| 
        B         $C$L539,EQ            ; [CPU_] |1690| 
        ; branchcc occurs ; [] |1690| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1712,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1712| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1712| 
	.dwpsn	file "../Source/prod.c",line 1713,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1713| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1713| 
        ; call occurs [#_scia_puts] ; [] |1713| 
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1714| 
        ; branch occurs ; [] |1714| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1709,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1709| 
	.dwpsn	file "../Source/prod.c",line 1710,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1710| 
        ; branch occurs ; [] |1710| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1704,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1704| 
	.dwpsn	file "../Source/prod.c",line 1705,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1705| 
        ; branch occurs ; [] |1705| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1701,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1701| 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1702| 
        ; branch occurs ; [] |1702| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1699| 
        ; branch occurs ; [] |1699| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1693,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1693| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1716,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1716| 
        MOVL      XAR4,XAR7             ; [CPU_] |1716| 
        MOVB      XAR0,#43              ; [CPU_] |1716| 
        ADDB      XAR7,#42              ; [CPU_] |1716| 
        MOV       AL,*XAR7              ; [CPU_] |1716| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1716| 
	.dwpsn	file "../Source/prod.c",line 1717,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1717| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1717| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1717| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1717| 
	.dwpsn	file "../Source/prod.c",line 1719,column 5,is_stmt,isa 0
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1719| 
        ; call occurs [#_scia_puts] ; [] |1719| 
	.dwpsn	file "../Source/prod.c",line 1720,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1720| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1720| 
        ; call occurs [#_scia_puts] ; [] |1720| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1725,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1725| 
        MOVL      XAR5,XAR1             ; [CPU_] |1725| 
        MOV       AL,#1024              ; [CPU_] |1725| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1725| 
        ; call occurs [#_scia_getparam] ; [] |1725| 
        MOVL      XAR4,XAR1             ; [CPU_] |1725| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_strtod")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1726,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1726| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1726| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1726,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1726| 
	.dwpsn	file "../Source/prod.c",line 1728,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1728| 
        MOV       AH,#0                 ; [CPU_] |1728| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1728| 
        MOVL      ACC,XAR3              ; [CPU_] |1728| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1728| 
        ; call occurs [#FS$$CMP] ; [] |1728| 
        CMPB      AL,#0                 ; [CPU_] |1728| 
        B         $C$L588,EQ            ; [CPU_] |1728| 
        ; branchcc occurs ; [] |1728| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1732| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1732| 
        MOVB      XAR1,#142             ; [CPU_] |1732| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1732| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1732| 
	.dwpsn	file "../Source/prod.c",line 1733,column 5,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1733| 
        ; call occurs [#_scia_puts] ; [] |1733| 
	.dwpsn	file "../Source/prod.c",line 1734,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1734| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1734| 
        ; call occurs [#_scia_puts] ; [] |1734| 
        MOV       AL,*-SP[50]           ; [CPU_] |1734| 
	.dwpsn	file "../Source/prod.c",line 1736,column 5,is_stmt,isa 0
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_tagid")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1736| 
        ; call occurs [#_tagid] ; [] |1736| 
        MOVL      XAR0,#36              ; [CPU_] |1736| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1736| 
        MOVL      XAR4,XAR5             ; [CPU_] |1736| 
        ADDB      XAR4,#32              ; [CPU_] |1736| 
	.dwpsn	file "../Source/prod.c",line 1738,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1738| 
	.dwpsn	file "../Source/prod.c",line 1736,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1736| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1736| 
	.dwpsn	file "../Source/prod.c",line 1738,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1738| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1738| 
        MOV       *-SP[2],#0            ; [CPU_] |1738| 
        MOV       *-SP[1],#0            ; [CPU_] |1738| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1738| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1738| 
        MOVL      P,XAR4                ; [CPU_] |1738| 
        MOVL      ACC,XAR5              ; [CPU_] |1738| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1157, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1738| 
        ; call occurs [#ULL$$CMP] ; [] |1738| 
        CMPB      AL,#0                 ; [CPU_] |1738| 
        B         $C$L546,NEQ           ; [CPU_] |1738| 
        ; branchcc occurs ; [] |1738| 
	.dwpsn	file "../Source/prod.c",line 1739,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1739| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1739| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1740| 
        ; branch occurs ; [] |1740| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1741,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1741| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1741| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1741| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1741| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1741| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1741| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_sprintf")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1741| 
        ; call occurs [#_sprintf] ; [] |1741| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1743,column 5,is_stmt,isa 0
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1743| 
        ; call occurs [#_scia_puts] ; [] |1743| 
        MOV       AL,*-SP[39]           ; [CPU_] |1743| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1745| 
        B         $C$L561,EQ            ; [CPU_] |1745| 
        ; branchcc occurs ; [] |1745| 
        CMPB      AL,#83                ; [CPU_] |1745| 
        B         $C$L553,EQ            ; [CPU_] |1745| 
        ; branchcc occurs ; [] |1745| 
        CMPB      AL,#86                ; [CPU_] |1745| 
        B         $C$L618,NEQ           ; [CPU_] |1745| 
        ; branchcc occurs ; [] |1745| 
	.dwpsn	file "../Source/prod.c",line 1750,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1750| 
        MOVB      AL,#40                ; [CPU_] |1750| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1750| 
        ; call occurs [#_lcd_puts] ; [] |1750| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1752| 
        MOVB      XAR0,#36              ; [CPU_] |1752| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1755| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1752| 
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1753| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1753| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1755| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1755| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1755| 
        MOVL      XAR0,#70              ; [CPU_] |1755| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1755| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1755| 
        MOV       ACC,AL << 1           ; [CPU_] |1755| 
        ADDL      ACC,XAR6              ; [CPU_] |1755| 
        MOVL      XAR4,ACC              ; [CPU_] |1755| 
        MOVL      XAR0,#44              ; [CPU_] |1755| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1755| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1755| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1755| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_sprintf")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1755| 
        ; call occurs [#_sprintf] ; [] |1755| 
        MOVL      XAR0,#44              ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1757,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1757| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1757| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1757,column 6,is_stmt,isa 0
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1757| 
        ; call occurs [#_scia_getparam] ; [] |1757| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1757,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1757| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_strtod")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1758,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1758| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1758,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1758| 
	.dwpsn	file "../Source/prod.c",line 1759,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1759| 
        MOV       AH,#0                 ; [CPU_] |1759| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1759| 
        MOVL      ACC,XAR6              ; [CPU_] |1759| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1759| 
        ; call occurs [#FS$$CMP] ; [] |1759| 
        CMPB      AL,#0                 ; [CPU_] |1759| 
        B         $C$L548,NEQ           ; [CPU_] |1759| 
        ; branchcc occurs ; [] |1759| 
	.dwpsn	file "../Source/prod.c",line 1760,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1760| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1760| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1760| 
$C$L548:    
        MOVL      XAR1,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1762,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1762| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1762| 
        ; call occurs [#_scia_puts] ; [] |1762| 
	.dwpsn	file "../Source/prod.c",line 1763,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1763| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1763| 
        ; call occurs [#_scia_puts] ; [] |1763| 
	.dwpsn	file "../Source/prod.c",line 1765,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1765| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1765| 
        MOVL      XAR5,XAR1             ; [CPU_] |1765| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1765| 
        ; call occurs [#_scia_getparam] ; [] |1765| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1768| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1768| 
        ; call occurs [#_scia_puts] ; [] |1768| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1770| 
	.dwpsn	file "../Source/prod.c",line 1771,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1771| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1770| 
	.dwpsn	file "../Source/prod.c",line 1771,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1771| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1770| 
	.dwpsn	file "../Source/prod.c",line 1772,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1772| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1770| 
	.dwpsn	file "../Source/prod.c",line 1772,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1772| 
        MOVB      ACC,#0                ; [CPU_] |1772| 
        SUBB      ACC,#1                ; [CPU_] |1772| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1772| 
        B         $C$L551,EQ            ; [CPU_] |1772| 
        ; branchcc occurs ; [] |1772| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1773,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1773| 
        ; branch occurs ; [] |1773| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1774,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1774| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_delay_us")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1774| 
        ; call occurs [#_delay_us] ; [] |1774| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1773,column 14,is_stmt,isa 0
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1773| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1773| 
        CMPB      AL,#0                 ; [CPU_] |1773| 
        B         $C$L549,EQ            ; [CPU_] |1773| 
        ; branchcc occurs ; [] |1773| 
	.dwpsn	file "../Source/prod.c",line 1777,column 7,is_stmt,isa 0
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1777| 
        ; call occurs [#_ad7738_getraw] ; [] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1778| 
        ADDL      XAR4,ACC              ; [CPU_] |1778| 
        MOVL      XAR0,#20              ; [CPU_] |1778| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1778| 
        MOVL      XAR0,#20              ; [CPU_] |1778| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1778| 
        ASR64     ACC:P,16              ; [CPU_] |1778| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1778| 
        MOVL      XAR0,#20              ; [CPU_] |1778| 
        ASR64     ACC:P,16              ; [CPU_] |1778| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1778| 
        MOVL      XAR0,#20              ; [CPU_] |1778| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1778| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1778| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1778| 
        MOVL      *-SP[32],P            ; [CPU_] |1778| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1772,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1772| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1772| 
        MOVB      ACC,#0                ; [CPU_] |1772| 
        SUBB      ACC,#1                ; [CPU_] |1772| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1772| 
        B         $C$L550,NEQ           ; [CPU_] |1772| 
        ; branchcc occurs ; [] |1772| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1780| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1780| 
        ; call occurs [#_scia_puts] ; [] |1780| 
	.dwpsn	file "../Source/prod.c",line 1782,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1782| 
        MOVL      XAR0,#52              ; [CPU_] |1782| 
        MOVL      ACC,XAR1              ; [CPU_] |1782| 
        ADDB      ACC,#96               ; [CPU_] |1782| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1782| 
        MOVL      XAR0,#40              ; [CPU_] |1782| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1782| 
        MOV       T,*-SP[50]            ; [CPU_] |1782| 
        MOVB      AL,#10                ; [CPU_] |1782| 
        MPYU      ACC,T,AL              ; [CPU_] |1782| 
        ADDL      ACC,XAR6              ; [CPU_] |1782| 
        ADDB      ACC,#42               ; [CPU_] |1782| 
        MOVL      XAR4,ACC              ; [CPU_] |1782| 
        MOVL      XAR0,#42              ; [CPU_] |1782| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1782| 
$C$L552:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1782| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1782| 
        ; call occurs [#FS$$NEG] ; [] |1782| 
        MOVB      XAR0,#96              ; [CPU_] |1782| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1782| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1782| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1782| 
        ; call occurs [#FS$$MPY] ; [] |1782| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1782| 
        MOVL      P,*-SP[32]            ; [CPU_] |1782| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1782| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1782| 
        ; call occurs [#LL$$TOFS] ; [] |1782| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1782| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1782| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1782| 
        ; call occurs [#FS$$MPY] ; [] |1782| 
        MOVL      XAR6,ACC              ; [CPU_] |1782| 
        MOV       AL,#16384             ; [CPU_] |1782| 
        MOV       AH,#17948             ; [CPU_] |1782| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1782| 
        MOVL      ACC,XAR6              ; [CPU_] |1782| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1782| 
        ; call occurs [#FS$$DIV] ; [] |1782| 
        MOVB      XAR0,#118             ; [CPU_] |1782| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1782| 
	.dwpsn	file "../Source/prod.c",line 1784,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |1784| 
        ; branch occurs ; [] |1784| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1867| 
        MOVB      AL,#40                ; [CPU_] |1867| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1867| 
        ; call occurs [#_lcd_puts] ; [] |1867| 
	.dwpsn	file "../Source/prod.c",line 1869,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1869| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1869| 
	.dwpsn	file "../Source/prod.c",line 1872,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1872| 
	.dwpsn	file "../Source/prod.c",line 1869,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1869| 
	.dwpsn	file "../Source/prod.c",line 1870,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1870| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1870| 
	.dwpsn	file "../Source/prod.c",line 1872,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1872| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1872| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1872| 
        MOVL      XAR0,#70              ; [CPU_] |1872| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1872| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1872| 
        MOV       ACC,AL << 1           ; [CPU_] |1872| 
        ADDL      ACC,XAR6              ; [CPU_] |1872| 
        MOVL      XAR4,ACC              ; [CPU_] |1872| 
        MOVL      XAR0,#44              ; [CPU_] |1872| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1872| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1872| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1872| 
        MOVL      XAR4,XAR1             ; [CPU_] |1872| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_sprintf")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1872| 
        ; call occurs [#_sprintf] ; [] |1872| 
        MOVL      XAR4,XAR1             ; [CPU_] |1872| 
	.dwpsn	file "../Source/prod.c",line 1875,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1875| 
        MOV       AL,#1024              ; [CPU_] |1875| 
        MOVL      XAR5,XAR1             ; [CPU_] |1875| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1875| 
        ; call occurs [#_scia_getparam] ; [] |1875| 
	.dwpsn	file "../Source/prod.c",line 1876,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1876| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1876| 
        ; call occurs [#_scia_puts] ; [] |1876| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_strtod")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1878,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1878| 
        MOV       AH,#0                 ; [CPU_] |1878| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1878| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1878| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1878| 
        ; call occurs [#FS$$CMP] ; [] |1878| 
        CMPB      AL,#0                 ; [CPU_] |1878| 
        B         $C$L554,NEQ           ; [CPU_] |1878| 
        ; branchcc occurs ; [] |1878| 
	.dwpsn	file "../Source/prod.c",line 1879,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1879| 
        MOV       AH,#16314             ; [CPU_] |1879| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1880| 
	.dwpsn	file "../Source/prod.c",line 1879,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1879| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1880| 
        ; call occurs [#_scia_puts] ; [] |1880| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1882| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1882| 
        ; call occurs [#_scia_puts] ; [] |1882| 
	.dwpsn	file "../Source/prod.c",line 1884,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1884| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1884| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1884| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1884| 
        ; call occurs [#_scia_getparam] ; [] |1884| 
	.dwpsn	file "../Source/prod.c",line 1887,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1887| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1887| 
        ; call occurs [#_scia_puts] ; [] |1887| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1889,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1889| 
        MOV       *-SP[40],AL           ; [CPU_] |1889| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1890,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1890| 
        B         $C$L557,LEQ           ; [CPU_] |1890| 
        ; branchcc occurs ; [] |1890| 
	.dwpsn	file "../Source/prod.c",line 1892,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1892| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1892| 
        ; call occurs [#_shunt_switch] ; [] |1892| 
        MOV       *-SP[39],#49          ; [CPU_] 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1894,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1894| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_delay_us")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1894| 
        ; call occurs [#_delay_us] ; [] |1894| 
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1893,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1893| 
        MOVZ      AR0,AR6               ; [CPU_] |1893| 
        MOV       *-SP[39],AR6          ; [CPU_] |1893| 
        CMP       AR0,#-1               ; [CPU_] |1893| 
        B         $C$L556,NEQ           ; [CPU_] |1893| 
        ; branchcc occurs ; [] |1893| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1897,column 8,is_stmt,isa 0
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1897| 
        ; call occurs [#_maf_rst] ; [] |1897| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1899,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1899| 
        SPM       #0                    ; [CPU_] 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_delay_us")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1899| 
        ; call occurs [#_delay_us] ; [] |1899| 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1903| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1902| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1904,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1904| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1903| 
	.dwpsn	file "../Source/prod.c",line 1904,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1904| 
        MOVB      ACC,#0                ; [CPU_] |1904| 
        SUBB      ACC,#1                ; [CPU_] |1904| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1904| 
        B         $C$L559,EQ            ; [CPU_] |1904| 
        ; branchcc occurs ; [] |1904| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1905,column 15,is_stmt,isa 0
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1905| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1905| 
        CMPB      AL,#0                 ; [CPU_] |1905| 
        B         $C$L560,EQ            ; [CPU_] |1905| 
        ; branchcc occurs ; [] |1905| 
	.dwpsn	file "../Source/prod.c",line 1909,column 8,is_stmt,isa 0
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1909| 
        ; call occurs [#_ad7738_getraw] ; [] |1909| 
	.dwpsn	file "../Source/prod.c",line 1910,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1910| 
        ADDL      XAR4,ACC              ; [CPU_] |1910| 
        MOVL      XAR0,#18              ; [CPU_] |1910| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1910| 
        MOVL      XAR0,#18              ; [CPU_] |1910| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1910| 
        ASR64     ACC:P,16              ; [CPU_] |1910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1910| 
        MOVL      XAR0,#18              ; [CPU_] |1910| 
        ASR64     ACC:P,16              ; [CPU_] |1910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1910| 
        MOVL      XAR0,#18              ; [CPU_] |1910| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1910| 
        MOVL      XAR0,#18              ; [CPU_] |1910| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1910| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1910| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1910| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1910| 
	.dwpsn	file "../Source/prod.c",line 1904,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1904| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1904| 
        MOVB      ACC,#0                ; [CPU_] |1904| 
        SUBB      ACC,#1                ; [CPU_] |1904| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1904| 
        B         $C$L558,NEQ           ; [CPU_] |1904| 
        ; branchcc occurs ; [] |1904| 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 1889,column 18,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1889| 
        ADDB      XAR1,#4               ; [CPU_] |1889| 
        MOV       AL,*-SP[40]           ; [CPU_] |1889| 
        CMPB      AL,#2                 ; [CPU_] |1889| 
        B         $C$L555,LT            ; [CPU_] |1889| 
        ; branchcc occurs ; [] |1889| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1914| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1914| 
        ; call occurs [#_shunt_switch] ; [] |1914| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1916,column 6,is_stmt,isa 0
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1916| 
        ; call occurs [#_maf_rst] ; [] |1916| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1919,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1919| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1919| 
        ; call occurs [#_scia_puts] ; [] |1919| 
	.dwpsn	file "../Source/prod.c",line 1921,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1921| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1921| 
        MOVB      AL,#10                ; [CPU_] |1921| 
        MOV       T,*-SP[50]            ; [CPU_] |1921| 
        MPYU      ACC,T,AL              ; [CPU_] |1921| 
        ADDL      ACC,XAR6              ; [CPU_] |1921| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1921| 
        MOV       AL,#16384             ; [CPU_] |1921| 
        MOV       AH,#17948             ; [CPU_] |1921| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1921| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1921| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1921| 
        ; call occurs [#FS$$MPY] ; [] |1921| 
        MOVL      XAR1,ACC              ; [CPU_] |1921| 
        MOVL      P,*-SP[28]            ; [CPU_] |1921| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1921| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1921| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1921| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1921| 
        ; call occurs [#LL$$TOFS] ; [] |1921| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1921| 
        MOVB      XAR0,#44              ; [CPU_] |1921| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1921| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1921| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1921| 
        ; call occurs [#FS$$MPY] ; [] |1921| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1921| 
        MOVL      ACC,XAR1              ; [CPU_] |1921| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1921| 
        ; call occurs [#FS$$DIV] ; [] |1921| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1921| 
        MOVB      XAR0,#96              ; [CPU_] |1921| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1921| 
	.dwpsn	file "../Source/prod.c",line 1923,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1923| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1923| 
        MOVL      ACC,XAR1              ; [CPU_] |1923| 
        ADDB      ACC,#96               ; [CPU_] |1923| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1923| 
        ADDB      XAR4,#42              ; [CPU_] |1923| 
        MOVL      XAR0,#42              ; [CPU_] |1923| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1923| 
	.dwpsn	file "../Source/prod.c",line 1925,column 6,is_stmt,isa 0
        B         $C$L552,UNC           ; [CPU_] |1925| 
        ; branch occurs ; [] |1925| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1906,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1906| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_delay_us")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1906| 
        ; call occurs [#_delay_us] ; [] |1906| 
	.dwpsn	file "../Source/prod.c",line 1905,column 15,is_stmt,isa 0
        B         $C$L558,UNC           ; [CPU_] |1905| 
        ; branch occurs ; [] |1905| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1788,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1788| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1793,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1793| 
        MOVL      XAR0,#44              ; [CPU_] |1793| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1793| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1793| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1793| 
        MOVL      XAR4,XAR1             ; [CPU_] |1793| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_sprintf")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1793| 
        ; call occurs [#_sprintf] ; [] |1793| 
        MOVL      XAR4,XAR1             ; [CPU_] |1793| 
	.dwpsn	file "../Source/prod.c",line 1794,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[58]         ; [CPU_] |1794| 
        MOV       AL,#1024              ; [CPU_] |1794| 
        MOVL      XAR5,XAR1             ; [CPU_] |1794| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1794| 
        ; call occurs [#_scia_getparam] ; [] |1794| 
        MOVL      XAR4,XAR1             ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1795,column 7,is_stmt,isa 0
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_atoi")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1795| 
        ; call occurs [#_atoi] ; [] |1795| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1795| 
        MOVB      XAR0,#46              ; [CPU_] |1795| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1795| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1795| 
	.dwpsn	file "../Source/prod.c",line 1796,column 7,is_stmt,isa 0
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1796| 
        ; call occurs [#_scia_puts] ; [] |1796| 
	.dwpsn	file "../Source/prod.c",line 1798,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1798| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1798| 
        CMPB      AL,#2                 ; [CPU_] |1798| 
        B         $C$L587,LT            ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        CMPB      AL,#12                ; [CPU_] |1798| 
        B         $C$L587,GT            ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1803| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1803| 
        ; call occurs [#_scia_puts] ; [] |1803| 
	.dwpsn	file "../Source/prod.c",line 1805,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1805| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1805| 
        MOVL      XAR0,#44              ; [CPU_] |1805| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1805| 
        ADDB      XAR7,#46              ; [CPU_] |1805| 
        MOV       AL,*XAR7              ; [CPU_] |1805| 
        MOV       *-SP[3],AL            ; [CPU_] |1805| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1805| 
        MOVL      XAR4,XAR1             ; [CPU_] |1805| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_sprintf")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1805| 
        ; call occurs [#_sprintf] ; [] |1805| 
	.dwpsn	file "../Source/prod.c",line 1806,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1806| 
	.dwpsn	file "../Source/prod.c",line 1805,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1805| 
	.dwpsn	file "../Source/prod.c",line 1806,column 6,is_stmt,isa 0
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1806| 
        ; call occurs [#_lcd_puts] ; [] |1806| 
	.dwpsn	file "../Source/prod.c",line 1809,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1809| 
	.dwpsn	file "../Source/prod.c",line 1809,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1809| 
	.dwpsn	file "../Source/prod.c",line 1809,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1809| 
        ; branch occurs ; [] |1809| 
$C$L563:    
        MOV       AL,*-SP[40]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1810,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1810| 
        SUB       AL,*-SP[39]           ; [CPU_] |1810| 
        ADDB      AL,#1                 ; [CPU_] |1810| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1810| 
        ; call occurs [#I$$TOFS] ; [] |1810| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1810| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1810| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1810| 
        ; call occurs [#FS$$MPY] ; [] |1810| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1810| 
        MOV       AL,*-SP[39]           ; [CPU_] |1810| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1810| 
        ; call occurs [#I$$TOFS] ; [] |1810| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1810| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1810| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1810| 
        ; call occurs [#FS$$DIV] ; [] |1810| 
        MOVZ      AR6,*-SP[40]          ; [CPU_] |1810| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1810| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1810| 
        ADDL      ACC,XAR1              ; [CPU_] |1810| 
        MOVL      XAR4,ACC              ; [CPU_] |1810| 
        MOVB      XAR0,#48              ; [CPU_] |1810| 
	.dwpsn	file "../Source/prod.c",line 1809,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1809| 
	.dwpsn	file "../Source/prod.c",line 1810,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1810| 
	.dwpsn	file "../Source/prod.c",line 1809,column 38,is_stmt,isa 0
        MOV       *-SP[40],AR6          ; [CPU_] |1809| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1809,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1809| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1809| 
        MOV       *-SP[39],AL           ; [CPU_] |1809| 
        CMP       AL,*-SP[40]           ; [CPU_] |1809| 
        B         $C$L563,GT            ; [CPU_] |1809| 
        ; branchcc occurs ; [] |1809| 
	.dwpsn	file "../Source/prod.c",line 1815,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1815| 
        B         $C$L567,UNC           ; [CPU_] |1815| 
        ; branch occurs ; [] |1815| 
$C$L565:    
        MOVZ      AR6,*-SP[40]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1816,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1816| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1816| 
        MOVL      XAR0,#44              ; [CPU_] |1816| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1816| 
        ADDL      ACC,XAR1              ; [CPU_] |1816| 
        ADDB      ACC,#48               ; [CPU_] |1816| 
        MOVL      XAR1,ACC              ; [CPU_] |1816| 
        MOVB      AL,#1                 ; [CPU_] |1816| 
        ADD       AL,AR6                ; [CPU_] |1816| 
        MOV       *-SP[3],AL            ; [CPU_] |1816| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1816| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1816| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1816| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_sprintf")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1816| 
        ; call occurs [#_sprintf] ; [] |1816| 
        MOVL      XAR0,#44              ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1818,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1818| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1818| 
	.dwpsn	file "../Source/prod.c",line 1816,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1818,column 7,is_stmt,isa 0
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1818| 
        ; call occurs [#_scia_getparam] ; [] |1818| 
        CMPB      AL,#0                 ; [CPU_] |1818| 
        B         $C$L566,EQ            ; [CPU_] |1818| 
        ; branchcc occurs ; [] |1818| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_strtod")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1822,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1822| 
$C$L566:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1824,column 7,is_stmt,isa 0
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1824| 
        ; call occurs [#_scia_puts] ; [] |1824| 
	.dwpsn	file "../Source/prod.c",line 1825,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1825| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1825| 
        ; call occurs [#_scia_puts] ; [] |1825| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1815,column 38,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1815| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1815,column 18,is_stmt,isa 0
        CMP       AL,*-SP[40]           ; [CPU_] |1815| 
        B         $C$L565,GT            ; [CPU_] |1815| 
        ; branchcc occurs ; [] |1815| 
	.dwpsn	file "../Source/prod.c",line 1831,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1831| 
        B         $C$L572,UNC           ; [CPU_] |1831| 
        ; branch occurs ; [] |1831| 
$C$L568:    
        MOVZ      AR6,*-SP[40]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1832,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1832| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1832| 
        ADDL      ACC,XAR1              ; [CPU_] |1832| 
        ADDB      ACC,#48               ; [CPU_] |1832| 
        MOVL      XAR1,ACC              ; [CPU_] |1832| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1832| 
        MOVL      XAR0,#70              ; [CPU_] |1832| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1832| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1832| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1832| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1832| 
        ANDB      AL,#0x0f              ; [CPU_] |1832| 
        MOV       ACC,AL << 1           ; [CPU_] |1832| 
        ADDL      ACC,XAR7              ; [CPU_] |1832| 
        MOVL      XAR4,ACC              ; [CPU_] |1832| 
        MOVL      XAR0,#44              ; [CPU_] |1832| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1832| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1832| 
        MOVB      AL,#1                 ; [CPU_] |1832| 
        ADD       AL,AR6                ; [CPU_] |1832| 
        MOV       *-SP[7],AL            ; [CPU_] |1832| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1832| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_sprintf")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1832| 
        ; call occurs [#_sprintf] ; [] |1832| 
        MOVL      XAR0,#44              ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1836| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1832,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1836| 
        ; call occurs [#_scia_getparam] ; [] |1836| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1837| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1837| 
        ; call occurs [#_scia_puts] ; [] |1837| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1840,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1840| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1840,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1840| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1841,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1841| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1841,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1841| 
        MOVB      ACC,#0                ; [CPU_] |1841| 
        SUBB      ACC,#1                ; [CPU_] |1841| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1841| 
        B         $C$L571,EQ            ; [CPU_] |1841| 
        ; branchcc occurs ; [] |1841| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1842,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1842| 
        ; branch occurs ; [] |1842| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1843,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1843| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_delay_us")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1843| 
        ; call occurs [#_delay_us] ; [] |1843| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1842,column 15,is_stmt,isa 0
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1842| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1842| 
        CMPB      AL,#0                 ; [CPU_] |1842| 
        B         $C$L569,EQ            ; [CPU_] |1842| 
        ; branchcc occurs ; [] |1842| 
	.dwpsn	file "../Source/prod.c",line 1846,column 8,is_stmt,isa 0
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1846| 
        ; call occurs [#_ad7738_getraw] ; [] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1847| 
        ADDL      XAR4,ACC              ; [CPU_] |1847| 
        MOVL      XAR0,#16              ; [CPU_] |1847| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1847| 
        MOVL      XAR0,#16              ; [CPU_] |1847| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1847| 
        ASR64     ACC:P,16              ; [CPU_] |1847| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1847| 
        MOVL      XAR0,#16              ; [CPU_] |1847| 
        ASR64     ACC:P,16              ; [CPU_] |1847| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1847| 
        MOVL      XAR0,#16              ; [CPU_] |1847| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1847| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1847| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1847| 
        MOVL      *-SP[32],P            ; [CPU_] |1847| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1841,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1841| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1841| 
        MOVB      ACC,#0                ; [CPU_] |1841| 
        SUBB      ACC,#1                ; [CPU_] |1841| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1841| 
        B         $C$L570,NEQ           ; [CPU_] |1841| 
        ; branchcc occurs ; [] |1841| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1849,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1849| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1849| 
        ; call occurs [#_scia_puts] ; [] |1849| 
	.dwpsn	file "../Source/prod.c",line 1850,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1850| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1850| 
        MOV       *-SP[2],#0            ; [CPU_] |1850| 
        MOV       *-SP[1],#0            ; [CPU_] |1850| 
        MOVL      P,*-SP[32]            ; [CPU_] |1850| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1850| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1850| 
        ; call occurs [#LL$$DIV] ; [] |1850| 
        ADDB      XAR1,#24              ; [CPU_] |1850| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1850| 
	.dwpsn	file "../Source/prod.c",line 1831,column 38,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1831| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1831,column 18,is_stmt,isa 0
        CMP       AL,*-SP[40]           ; [CPU_] |1831| 
        B         $C$L568,GT            ; [CPU_] |1831| 
        ; branchcc occurs ; [] |1831| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[50]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1854,column 11,is_stmt,isa 0
        MOV       *-SP[40],#0           ; [CPU_] |1854| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1854| 
        ; branch occurs ; [] |1854| 
$C$L573:    
        MOV       AL,*-SP[40]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1855,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1855| 
        ADDL      XAR1,ACC              ; [CPU_] |1855| 
        MOVB      XAR0,#48              ; [CPU_] |1855| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1855| 
        MOVB      XAR0,#50              ; [CPU_] |1855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1855| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1855| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1855| 
        ; call occurs [#FS$$SUB] ; [] |1855| 
        MOVB      XAR0,#74              ; [CPU_] |1855| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1855| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1855| 
        MOVB      XAR0,#72              ; [CPU_] |1855| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1855| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1855| 
        ; call occurs [#L$$TOFS] ; [] |1855| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1855| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1855| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1855| 
        ; call occurs [#FS$$DIV] ; [] |1855| 
        MOVL      XAR0,#42              ; [CPU_] |1855| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1855| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1855| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1855| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1855| 
        ; call occurs [#FS$$DIV] ; [] |1855| 
        MOVB      XAR0,#96              ; [CPU_] |1855| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1855| 
	.dwpsn	file "../Source/prod.c",line 1859,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1859| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1859| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1859| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1859| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1859| 
        ; call occurs [#FS$$MPY] ; [] |1859| 
        MOVB      XAR0,#72              ; [CPU_] |1859| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1859| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1859| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1859| 
        ; call occurs [#L$$TOFS] ; [] |1859| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1859| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1859| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1859| 
        ; call occurs [#FS$$MPY] ; [] |1859| 
        MOVB      XAR0,#48              ; [CPU_] |1859| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1859| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1859| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1859| 
        ; call occurs [#FS$$SUB] ; [] |1859| 
        MOVB      XAR0,#118             ; [CPU_] |1859| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1859| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1854,column 42,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1854| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[39],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[39]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1863| 
        CMP       AL,*-SP[40]           ; [CPU_] |1863| 
        B         $C$L573,GT            ; [CPU_] |1863| 
        ; branchcc occurs ; [] |1863| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 1934,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1934| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1934| 
        MOV       AL,#1024              ; [CPU_] |1934| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1934| 
        ; call occurs [#_scia_getparam] ; [] |1934| 
	.dwpsn	file "../Source/prod.c",line 1937,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1937| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1937| 
        ; call occurs [#_scia_puts] ; [] |1937| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |1965| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1939,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1939| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] |1939| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 1940,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1940| 
        B         $C$L578,LEQ           ; [CPU_] |1940| 
        ; branchcc occurs ; [] |1940| 
	.dwpsn	file "../Source/prod.c",line 1942,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1942| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1942| 
        ; call occurs [#_shunt_switch] ; [] |1942| 
        MOV       *-SP[39],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 1944,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1944| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_delay_us")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1944| 
        ; call occurs [#_delay_us] ; [] |1944| 
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1944| 
	.dwpsn	file "../Source/prod.c",line 1943,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1943| 
        MOVZ      AR0,AR6               ; [CPU_] |1943| 
        MOV       *-SP[39],AR6          ; [CPU_] |1943| 
        CMP       AR0,#-1               ; [CPU_] |1943| 
        B         $C$L577,NEQ           ; [CPU_] |1943| 
        ; branchcc occurs ; [] |1943| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1947| 
        ; call occurs [#_maf_rst] ; [] |1947| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1949,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1949| 
        SPM       #0                    ; [CPU_] 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_delay_us")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1949| 
        ; call occurs [#_delay_us] ; [] |1949| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 1952,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1952| 
	.dwpsn	file "../Source/prod.c",line 1953,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1953| 
	.dwpsn	file "../Source/prod.c",line 1952,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1952| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1952| 
	.dwpsn	file "../Source/prod.c",line 1954,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1954| 
	.dwpsn	file "../Source/prod.c",line 1953,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1953| 
	.dwpsn	file "../Source/prod.c",line 1954,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1954| 
        MOVB      ACC,#0                ; [CPU_] |1954| 
        SUBB      ACC,#1                ; [CPU_] |1954| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1954| 
        B         $C$L580,EQ            ; [CPU_] |1954| 
        ; branchcc occurs ; [] |1954| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1955,column 14,is_stmt,isa 0
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1955| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1955| 
        CMPB      AL,#0                 ; [CPU_] |1955| 
        B         $C$L586,EQ            ; [CPU_] |1955| 
        ; branchcc occurs ; [] |1955| 
	.dwpsn	file "../Source/prod.c",line 1959,column 7,is_stmt,isa 0
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1959| 
        ; call occurs [#_ad7738_getraw] ; [] |1959| 
	.dwpsn	file "../Source/prod.c",line 1960,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1960| 
        ADDL      XAR4,ACC              ; [CPU_] |1960| 
        MOVL      XAR0,#14              ; [CPU_] |1960| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1960| 
        MOVL      XAR0,#14              ; [CPU_] |1960| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1960| 
        ASR64     ACC:P,16              ; [CPU_] |1960| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1960| 
        MOVL      XAR0,#14              ; [CPU_] |1960| 
        ASR64     ACC:P,16              ; [CPU_] |1960| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1960| 
        MOVL      XAR0,#14              ; [CPU_] |1960| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1960| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1960| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1960| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1960| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1960| 
	.dwpsn	file "../Source/prod.c",line 1954,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1954| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1954| 
        MOVB      ACC,#0                ; [CPU_] |1954| 
        SUBB      ACC,#1                ; [CPU_] |1954| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1954| 
        B         $C$L579,NEQ           ; [CPU_] |1954| 
        ; branchcc occurs ; [] |1954| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1962| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1962| 
        MOV       *-SP[2],#0            ; [CPU_] |1962| 
        MOV       *-SP[1],#0            ; [CPU_] |1962| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |1962| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |1962| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1962| 
        ; call occurs [#LL$$DIV] ; [] |1962| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1965| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1962| 
	.dwpsn	file "../Source/prod.c",line 1964,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |1964| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1962| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |1965| 
        CMPB      AL,#2                 ; [CPU_] |1965| 
        B         $C$L583,LEQ           ; [CPU_] |1965| 
        ; branchcc occurs ; [] |1965| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1966,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |1966| 
        ; branch occurs ; [] |1966| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 1967,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |1967| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1966,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |1966| 
        B         $C$L583,HIS           ; [CPU_] |1966| 
        ; branchcc occurs ; [] |1966| 
        MOVB      AL,#1                 ; [CPU_] |1966| 
        ADD       AL,AR4                ; [CPU_] |1966| 
        MOVZ      AR5,AL                ; [CPU_] |1966| 
        MOV       ACC,AR5 << 1          ; [CPU_] |1966| 
        ADDL      ACC,XAR3              ; [CPU_] |1966| 
        MOVL      XAR6,ACC              ; [CPU_] |1966| 
        MOVB      XAR0,#72              ; [CPU_] |1966| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |1966| 
        MOVL      XAR0,#12              ; [CPU_] |1966| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1966| 
        MOVL      XAR0,#12              ; [CPU_] |1966| 
        ASR64     ACC:P,16              ; [CPU_] |1966| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1966| 
        MOVL      XAR0,#12              ; [CPU_] |1966| 
        ASR64     ACC:P,16              ; [CPU_] |1966| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1966| 
        MOVL      *-SP[4],P             ; [CPU_] |1966| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1966| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1966| 
        MOVL      P,*-SP[32]            ; [CPU_] |1966| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1243, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1966| 
        ; call occurs [#LL$$CMP] ; [] |1966| 
        CMPB      AL,#0                 ; [CPU_] |1966| 
        B         $C$L581,GT            ; [CPU_] |1966| 
        ; branchcc occurs ; [] |1966| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1970,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |1970| 
        ADDL      ACC,XAR3              ; [CPU_] |1970| 
        MOVL      XAR4,ACC              ; [CPU_] |1970| 
        MOVB      XAR0,#96              ; [CPU_] |1970| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1970| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1970| 
        MOVL      XAR0,#42              ; [CPU_] |1970| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1970| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1970| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1970| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1970| 
        ; call occurs [#FS$$MPY] ; [] |1970| 
        MOVL      XAR0,#36              ; [CPU_] |1970| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1970| 
        MOVL      P,*XAR1++             ; [CPU_] |1970| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1970| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1970| 
        ; call occurs [#LL$$TOFS] ; [] |1970| 
        MOVL      XAR0,#36              ; [CPU_] |1970| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1970| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1970| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1970| 
        ; call occurs [#FS$$MPY] ; [] |1970| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1970| 
        MOVB      XAR0,#118             ; [CPU_] |1970| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |1970| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1970| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1970| 
        ; call occurs [#FS$$ADD] ; [] |1970| 
        MOVL      XAR0,#38              ; [CPU_] |1970| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1970| 
        MOVL      XAR0,#38              ; [CPU_] |1970| 
        MOVL      *XAR4++,ACC           ; [CPU_] |1970| 
	.dwpsn	file "../Source/prod.c",line 1939,column 17,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |1939| 
	.dwpsn	file "../Source/prod.c",line 1970,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1970| 
        MOV       AL,*-SP[40]           ; [CPU_] |1970| 
	.dwpsn	file "../Source/prod.c",line 1939,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1939| 
        B         $C$L576,LT            ; [CPU_] |1939| 
        ; branchcc occurs ; [] |1939| 
	.dwpsn	file "../Source/prod.c",line 1974,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1974| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1974| 
        ; call occurs [#_shunt_switch] ; [] |1974| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1976,column 5,is_stmt,isa 0
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1976| 
        ; call occurs [#_maf_rst] ; [] |1976| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1979,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1979| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1979| 
        ; call occurs [#_scia_puts] ; [] |1979| 
	.dwpsn	file "../Source/prod.c",line 1981,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |1981| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1981| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1981| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1981| 
        ; call occurs [#FS$$SUB] ; [] |1981| 
        MOVL      XAR0,#36              ; [CPU_] |1981| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1981| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1981| 
        MOVB      XAR0,#140             ; [CPU_] |1981| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1981| 
	.dwpsn	file "../Source/prod.c",line 1984,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |1984| 
        MOV       AL,#0                 ; [CPU_] |1984| 
        MOV       AH,#0                 ; [CPU_] |1984| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1984| 
	.dwpsn	file "../Source/prod.c",line 1985,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |1985| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1985| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1985| 
	.dwpsn	file "../Source/prod.c",line 1986,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |1986| 
        MOV       AL,#0                 ; [CPU_] |1986| 
        MOV       AH,#0                 ; [CPU_] |1986| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1986| 
	.dwpsn	file "../Source/prod.c",line 1987,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |1987| 
        MOV       AL,*-SP[50]           ; [CPU_] |1987| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1987| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1990,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1990| 
        MOVB      AL,#152               ; [CPU_] |1990| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1990| 
        MOV       T,*-SP[49]            ; [CPU_] |1990| 
        MOVL      XAR7,XAR4             ; [CPU_] |1990| 
        MPYU      ACC,T,AL              ; [CPU_] |1990| 
        ADDL      ACC,XAR6              ; [CPU_] |1990| 
        ADDB      ACC,#82               ; [CPU_] |1990| 
        MOVL      XAR5,ACC              ; [CPU_] |1990| 
        MOVL      XAR0,#42              ; [CPU_] |1990| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1990| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1990| 
        MOV       AL,*-SP[49]           ; [CPU_] |1990| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1993,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |1993| 
	.dwpsn	file "../Source/prod.c",line 1995,column 5,is_stmt,isa 0
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1995| 
        ; call occurs [#_ad7738_setcal] ; [] |1995| 
        MOVL      XAR0,#78              ; [CPU_] |1995| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1995| 
	.dwpsn	file "../Source/prod.c",line 1996,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |1996| 
        MOVL      XAR1,ACC              ; [CPU_] |1996| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1996| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1996| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1996| 
	.dwpsn	file "../Source/prod.c",line 1997,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1997| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1997| 
        ; call occurs [#_ad7738_resetvall] ; [] |1997| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2000,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2000| 
        MOV       AL,*-SP[52]           ; [CPU_] |2000| 
        MOVL      XAR0,#44              ; [CPU_] |2000| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2000| 
        MOV       *-SP[3],AL            ; [CPU_] |2000| 
        MOV       AL,*-SP[51]           ; [CPU_] |2000| 
        MOV       *-SP[4],AL            ; [CPU_] |2000| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2000| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2000| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_sprintf")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2000| 
        ; call occurs [#_sprintf] ; [] |2000| 
        MOVL      XAR4,XAR1             ; [CPU_] |2000| 
	.dwpsn	file "../Source/prod.c",line 2002,column 5,is_stmt,isa 0
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2002| 
        ; call occurs [#_scia_puts] ; [] |2002| 
        MOV       AL,*-SP[49]           ; [CPU_] |2002| 
	.dwpsn	file "../Source/prod.c",line 2003,column 5,is_stmt,isa 0
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2003| 
        ; call occurs [#_print_sensor] ; [] |2003| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2006,column 5,is_stmt,isa 0
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2006| 
        ; call occurs [#_lcd_clear] ; [] |2006| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2007,column 5,is_stmt,isa 0
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_update_units")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2007| 
        ; call occurs [#_update_units] ; [] |2007| 
	.dwpsn	file "../Source/prod.c",line 2008,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2008| 
        ; branch occurs ; [] |2008| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 1956,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1956| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_delay_us")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1956| 
        ; call occurs [#_delay_us] ; [] |1956| 
	.dwpsn	file "../Source/prod.c",line 1955,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |1955| 
        ; branch occurs ; [] |1955| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1800,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1800| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1800| 
        ; call occurs [#_scia_puts] ; [] |1800| 
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1792| 
        ; branch occurs ; [] |1792| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1730,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1730| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1730| 
        ; call occurs [#_scia_puts] ; [] |1730| 
	.dwpsn	file "../Source/prod.c",line 1724,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1724| 
        ; branch occurs ; [] |1724| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1645,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1645| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1645| 
        ; call occurs [#_scia_puts] ; [] |1645| 
	.dwpsn	file "../Source/prod.c",line 1635,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1635| 
        ; branch occurs ; [] |1635| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1628,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1628| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1628| 
        ; call occurs [#_scia_puts] ; [] |1628| 
	.dwpsn	file "../Source/prod.c",line 1620,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1620| 
        ; branch occurs ; [] |1620| 
$C$L591:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1342,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1342| 
        B         $C$L625,LO            ; [CPU_] |1342| 
        ; branchcc occurs ; [] |1342| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1346,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1346| 
        CMPB      AL,#67                ; [CPU_] |1346| 
        B         $C$L592,EQ            ; [CPU_] |1346| 
        ; branchcc occurs ; [] |1346| 
        CMPB      AL,#68                ; [CPU_] |1346| 
        B         $C$L625,NEQ           ; [CPU_] |1346| 
        ; branchcc occurs ; [] |1346| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1351,column 5,is_stmt,isa 0
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_atoi")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1351| 
        ; call occurs [#_atoi] ; [] |1351| 
        MOV       *-SP[50],AL           ; [CPU_] |1351| 
	.dwpsn	file "../Source/prod.c",line 1353,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1353| 
        CMPB      AL,#4                 ; [CPU_] |1353| 
        B         $C$L625,HIS           ; [CPU_] |1353| 
        ; branchcc occurs ; [] |1353| 
	.dwpsn	file "../Source/prod.c",line 1358,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1358| 
        MOV       AH,#0                 ; [CPU_] |1358| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1358| 
	.dwpsn	file "../Source/prod.c",line 1359,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1359| 
        MOV       AH,#0                 ; [CPU_] |1359| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1359| 
        MOV       AL,*-SP[51]           ; [CPU_] |1359| 
	.dwpsn	file "../Source/prod.c",line 1360,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1360| 
        B         $C$L596,LOS           ; [CPU_] |1360| 
        ; branchcc occurs ; [] |1360| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1360,column 10,is_stmt,isa 0
        MOV       *-SP[39],#3           ; [CPU_] |1360| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1361,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1361| 
        CMPB      AL,#88                ; [CPU_] |1361| 
        B         $C$L594,NEQ           ; [CPU_] |1361| 
        ; branchcc occurs ; [] |1361| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[39]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_strtod")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1363,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1363| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1366,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1366| 
        B         $C$L595,NEQ           ; [CPU_] |1366| 
        ; branchcc occurs ; [] |1366| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[39]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_strtod")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1368,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1368| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1360,column 17,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |1360| 
        MOV       AL,*-SP[51]           ; [CPU_] |1360| 
        ADDB      XAR1,#1               ; [CPU_] |1360| 
        CMP       AL,*-SP[39]           ; [CPU_] |1360| 
        B         $C$L593,HI            ; [CPU_] |1360| 
        ; branchcc occurs ; [] |1360| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1373,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1373| 
	.dwpsn	file "../Source/prod.c",line 1356,column 5,is_stmt,isa 0
        DEC       *-SP[50]              ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1373,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1373| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1373| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1373| 
        ; call occurs [#FS$$CMP] ; [] |1373| 
        CMPB      AL,#0                 ; [CPU_] |1373| 
        B         $C$L625,EQ            ; [CPU_] |1373| 
        ; branchcc occurs ; [] |1373| 
	.dwpsn	file "../Source/prod.c",line 1377,column 5,is_stmt,isa 0
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1377| 
        ; call occurs [#_lcd_clear] ; [] |1377| 
	.dwpsn	file "../Source/prod.c",line 1378,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1378| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1378| 
        MOVL      XAR0,#44              ; [CPU_] |1378| 
        ADD       AL,*-SP[50]           ; [CPU_] |1378| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1378| 
        MOVZ      AR1,AL                ; [CPU_] |1378| 
        MOV       *-SP[51],AL           ; [CPU_] |1378| 
        MOV       *-SP[3],AL            ; [CPU_] |1378| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1378| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_sprintf")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1378| 
        ; call occurs [#_sprintf] ; [] |1378| 
        MOVL      XAR0,#44              ; [CPU_] |1378| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1378,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1378| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1379| 
        ; call occurs [#_lcd_puts] ; [] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1380| 
        MOVL      XAR0,#44              ; [CPU_] |1380| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1380| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1380| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1380| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1380| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_sprintf")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1380| 
        ; call occurs [#_sprintf] ; [] |1380| 
        MOVL      XAR0,#44              ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1381,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1381| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1381,column 5,is_stmt,isa 0
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1381| 
        ; call occurs [#_lcd_puts] ; [] |1381| 
	.dwpsn	file "../Source/prod.c",line 1382,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1382| 
        MOVL      XAR0,#44              ; [CPU_] |1382| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1382| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1382| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1382| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1382| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_sprintf")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1382| 
        ; call occurs [#_sprintf] ; [] |1382| 
        MOVL      XAR0,#44              ; [CPU_] |1382| 
	.dwpsn	file "../Source/prod.c",line 1383,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1383| 
	.dwpsn	file "../Source/prod.c",line 1382,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1382| 
	.dwpsn	file "../Source/prod.c",line 1383,column 5,is_stmt,isa 0
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1383| 
        ; call occurs [#_lcd_puts] ; [] |1383| 
	.dwpsn	file "../Source/prod.c",line 1385,column 5,is_stmt,isa 0
        MOVL      XAR0,#38              ; [CPU_] |1385| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1385| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1385| 
        ADDB      ACC,#1                ; [CPU_] |1385| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1385| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1385| 
        CMPB      AL,#67                ; [CPU_] |1385| 
        B         $C$L619,EQ            ; [CPU_] |1385| 
        ; branchcc occurs ; [] |1385| 
        CMPB      AL,#68                ; [CPU_] |1385| 
        B         $C$L625,NEQ           ; [CPU_] |1385| 
        ; branchcc occurs ; [] |1385| 
	.dwpsn	file "../Source/prod.c",line 1438,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1438| 
        MOV       AH,#16672             ; [CPU_] |1438| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1438| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1438| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1438| 
        ; call occurs [#FS$$CMP] ; [] |1438| 
        CMPB      AL,#0                 ; [CPU_] |1438| 
        B         $C$L618,GT            ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1438| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1438| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1438| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1438| 
        ; call occurs [#FS$$CMP] ; [] |1438| 
        CMPB      AL,#0                 ; [CPU_] |1438| 
        B         $C$L618,LT            ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
        MOV       AL,#0                 ; [CPU_] |1438| 
        MOV       AH,#16672             ; [CPU_] |1438| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1438| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1438| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1438| 
        ; call occurs [#FS$$CMP] ; [] |1438| 
        CMPB      AL,#0                 ; [CPU_] |1438| 
        B         $C$L618,GT            ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1438| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1438| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1438| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1438| 
        ; call occurs [#FS$$CMP] ; [] |1438| 
        CMPB      AL,#0                 ; [CPU_] |1438| 
        B         $C$L618,LT            ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
	.dwpsn	file "../Source/prod.c",line 1446,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1446| 
        MOVB      AL,#0                 ; [CPU_] |1446| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1446| 
        ; call occurs [#_lcd_puts] ; [] |1446| 
	.dwpsn	file "../Source/prod.c",line 1448,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1448| 
        MOVL      XAR0,#44              ; [CPU_] |1448| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1448| 
        MOV       *-SP[3],AR1           ; [CPU_] |1448| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1448| 
        MOVL      XAR4,XAR1             ; [CPU_] |1448| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("_sprintf")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1448| 
        ; call occurs [#_sprintf] ; [] |1448| 
        MOVL      XAR4,XAR1             ; [CPU_] |1448| 
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1451| 
        ; call occurs [#_scia_puts] ; [] |1451| 
	.dwpsn	file "../Source/prod.c",line 1452,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1452| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1452| 
        ; call occurs [#_scia_puts] ; [] |1452| 
	.dwpsn	file "../Source/prod.c",line 1453,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1453| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1453| 
        ; call occurs [#_dac_setmode] ; [] |1453| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOV       T,*-SP[50]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
        MOV       AL,*-SP[50]           ; [CPU_] 
        MOV       *-SP[40],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOV       *-SP[39],#1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1456,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1456| 
	.dwpsn	file "../Source/prod.c",line 1457,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1457| 
        MOV       AH,#0                 ; [CPU_] |1457| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1457| 
        MOVL      ACC,XAR1              ; [CPU_] |1457| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1457| 
        ; call occurs [#FS$$CMP] ; [] |1457| 
        CMPB      AL,#0                 ; [CPU_] |1457| 
        B         $C$L598,GEQ           ; [CPU_] |1457| 
        ; branchcc occurs ; [] |1457| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1457| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1457| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1457| 
        B         $C$L599,UNC           ; [CPU_] |1457| 
        ; branch occurs ; [] |1457| 
$C$L598:    
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1457| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1457| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1457| 
$C$L599:    
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1457| 
        ; call occurs [#FS$$MPY] ; [] |1457| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1457| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1457| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1457| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1457| 
        ; call occurs [#FS$$ADD] ; [] |1457| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1457| 
        ; call occurs [#FS$$TOLL] ; [] |1457| 
	.dwpsn	file "../Source/prod.c",line 1463,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1463| 
	.dwpsn	file "../Source/prod.c",line 1457,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1457| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1457| 
	.dwpsn	file "../Source/prod.c",line 1463,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1463| 
        CMP64     ACC:P                 ; [CPU_] |1463| 
        B         $C$L601,LEQ           ; [CPU_] |1463| 
        ; branchcc occurs ; [] |1463| 
	.dwpsn	file "../Source/prod.c",line 1465,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1465| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1465| 
        MOV       *-SP[2],#0            ; [CPU_] |1465| 
        MOV       *-SP[1],#0            ; [CPU_] |1465| 
        MOVL      P,*-SP[32]            ; [CPU_] |1465| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1465| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1289, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1465| 
        ; call occurs [#LL$$CMP] ; [] |1465| 
        CMPB      AL,#0                 ; [CPU_] |1465| 
        B         $C$L600,GEQ           ; [CPU_] |1465| 
        ; branchcc occurs ; [] |1465| 
	.dwpsn	file "../Source/prod.c",line 1468,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1468| 
        MOV       AL,*-SP[32]           ; [CPU_] |1468| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1468| 
        B         $C$L602,UNC           ; [CPU_] |1468| 
        ; branch occurs ; [] |1468| 
$C$L600:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1466,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1466| 
	.dwpsn	file "../Source/prod.c",line 1467,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1467| 
        ; branch occurs ; [] |1467| 
$C$L601:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1464,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1464| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1471,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1471| 
        MOVL      XAR0,#44              ; [CPU_] |1471| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1471| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1471| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1471| 
        MOVL      XAR4,XAR1             ; [CPU_] |1471| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_sprintf")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1471| 
        ; call occurs [#_sprintf] ; [] |1471| 
        MOVL      XAR4,XAR1             ; [CPU_] |1471| 
	.dwpsn	file "../Source/prod.c",line 1472,column 7,is_stmt,isa 0
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1472| 
        ; call occurs [#_scia_puts] ; [] |1472| 
	.dwpsn	file "../Source/prod.c",line 1473,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1473| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1473| 
$C$L603:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1476,column 8,is_stmt,isa 0
        MOV       AH,*-SP[40]           ; [CPU_] |1476| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1476| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1476| 
        ; call occurs [#_mcbsp_xmit] ; [] |1476| 
	.dwpsn	file "../Source/prod.c",line 1477,column 8,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1477| 
        ; call occurs [#_latch_dac] ; [] |1477| 
	.dwpsn	file "../Source/prod.c",line 1480,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1480| 
        MOVL      XAR4,XAR1             ; [CPU_] |1480| 
        MOVL      XAR5,XAR1             ; [CPU_] |1480| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1480| 
        ; call occurs [#_scia_getparam] ; [] |1480| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1482,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1482| 
        CMPB      AL,#45                ; [CPU_] |1482| 
        B         $C$L604,EQ            ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
        CMPB      AL,#83                ; [CPU_] |1482| 
        B         $C$L609,EQ            ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1489,column 8,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_atoi")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1489| 
        ; call occurs [#_atoi] ; [] |1489| 
        CMPB      AL,#0                 ; [CPU_] |1489| 
	.dwpsn	file "../Source/prod.c",line 1491,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1491| 
	.dwpsn	file "../Source/prod.c",line 1494,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1494| 
        CMPB      AH,#43                ; [CPU_] |1494| 
        B         $C$L605,EQ            ; [CPU_] |1494| 
        ; branchcc occurs ; [] |1494| 
	.dwpsn	file "../Source/prod.c",line 1501,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1501| 
        B         $C$L608,NEQ           ; [CPU_] |1501| 
        ; branchcc occurs ; [] |1501| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1503,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1503| 
        B         $C$L606,HI            ; [CPU_] |1503| 
        ; branchcc occurs ; [] |1503| 
	.dwpsn	file "../Source/prod.c",line 1504,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1504| 
	.dwpsn	file "../Source/prod.c",line 1505,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1505| 
        ; branch occurs ; [] |1505| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1496,column 9,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1496| 
        MOV       AH,#65535             ; [CPU_] |1496| 
        SUB       AH,AL                 ; [CPU_] |1496| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1496| 
        B         $C$L607,HIS           ; [CPU_] |1496| 
        ; branchcc occurs ; [] |1496| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1499,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1499| 
        B         $C$L608,UNC           ; [CPU_] |1499| 
        ; branch occurs ; [] |1499| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1497,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1497| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1475,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1475| 
        B         $C$L603,NEQ           ; [CPU_] |1475| 
        ; branchcc occurs ; [] |1475| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1511,column 7,is_stmt,isa 0
        MOVL      XAR7,*-SP[58]         ; [CPU_] |1511| 
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1511| 
        MOVL      XAR0,#44              ; [CPU_] |1511| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1511| 
        MOV       AL,*XAR7              ; [CPU_] |1511| 
        MOV       *-SP[3],AL            ; [CPU_] |1511| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1511| 
        ADDB      XAR7,#1               ; [CPU_] |1511| 
        MOVL      *-SP[58],XAR7         ; [CPU_] |1511| 
        MOVL      XAR4,XAR1             ; [CPU_] |1511| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_sprintf")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1511| 
        ; call occurs [#_sprintf] ; [] |1511| 
        MOVL      XAR4,XAR1             ; [CPU_] |1511| 
	.dwpsn	file "../Source/prod.c",line 1512,column 7,is_stmt,isa 0
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1512| 
        ; call occurs [#_scia_puts] ; [] |1512| 
	.dwpsn	file "../Source/prod.c",line 1455,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1512,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1512| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1512| 
	.dwpsn	file "../Source/prod.c",line 1455,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1455| 
        SUBB      XAR6,#1               ; [CPU_U] |1455| 
        ADDB      ACC,#2                ; [CPU_] |1455| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1455| 
        MOVZ      AR0,AR6               ; [CPU_] |1455| 
        MOV       *-SP[39],AR6          ; [CPU_] |1455| 
        CMP       AR0,#-1               ; [CPU_] |1455| 
        B         $C$L597,NEQ           ; [CPU_] |1455| 
        ; branchcc occurs ; [] |1455| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1515,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1515| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1515| 
        ; call occurs [#FS$$TOU] ; [] |1515| 
        MOV       *-SP[33],AL           ; [CPU_] |1515| 
	.dwpsn	file "../Source/prod.c",line 1517,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1517| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1517| 
        ; call occurs [#_scia_puts] ; [] |1517| 
	.dwpsn	file "../Source/prod.c",line 1518,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1518| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |1518| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1518| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1521,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1521| 
        MOV       AH,*-SP[40]           ; [CPU_] |1521| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1521| 
        ; call occurs [#_mcbsp_xmit] ; [] |1521| 
	.dwpsn	file "../Source/prod.c",line 1522,column 7,is_stmt,isa 0
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1522| 
        ; call occurs [#_latch_dac] ; [] |1522| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1522| 
	.dwpsn	file "../Source/prod.c",line 1525,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1525| 
        MOVL      XAR4,XAR5             ; [CPU_] |1525| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1525| 
        ; call occurs [#_scia_getparam] ; [] |1525| 
	.dwpsn	file "../Source/prod.c",line 1530,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1530| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1530| 
        CMPB      AL,#83                ; [CPU_] |1530| 
        B         $C$L615,EQ            ; [CPU_] |1530| 
        ; branchcc occurs ; [] |1530| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1533,column 7,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_atoi")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1533| 
        ; call occurs [#_atoi] ; [] |1533| 
        CMPB      AL,#0                 ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1538,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1538| 
	.dwpsn	file "../Source/prod.c",line 1535,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1535| 
	.dwpsn	file "../Source/prod.c",line 1538,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1538| 
        CMPB      AH,#43                ; [CPU_] |1538| 
        B         $C$L611,EQ            ; [CPU_] |1538| 
        ; branchcc occurs ; [] |1538| 
	.dwpsn	file "../Source/prod.c",line 1545,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1545| 
        B         $C$L614,NEQ           ; [CPU_] |1545| 
        ; branchcc occurs ; [] |1545| 
	.dwpsn	file "../Source/prod.c",line 1547,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1547| 
        B         $C$L612,HI            ; [CPU_] |1547| 
        ; branchcc occurs ; [] |1547| 
	.dwpsn	file "../Source/prod.c",line 1548,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1548| 
	.dwpsn	file "../Source/prod.c",line 1549,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1549| 
        ; branch occurs ; [] |1549| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1540,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1540| 
        SUB       AH,AL                 ; [CPU_] |1540| 
        CMP       AH,*-SP[33]           ; [CPU_] |1540| 
        B         $C$L613,HIS           ; [CPU_] |1540| 
        ; branchcc occurs ; [] |1540| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1543,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1543| 
        B         $C$L614,UNC           ; [CPU_] |1543| 
        ; branch occurs ; [] |1543| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1541,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1541| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1520,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1520| 
        B         $C$L610,NEQ           ; [CPU_] |1520| 
        ; branchcc occurs ; [] |1520| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1555,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1555| 
        MOV       AL,*-SP[33]           ; [CPU_] |1555| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1555| 
        MOV       *-SP[3],AL            ; [CPU_] |1555| 
        MOVL      XAR4,XAR1             ; [CPU_] |1555| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_sprintf")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1555| 
        ; call occurs [#_sprintf] ; [] |1555| 
        MOVL      XAR4,XAR1             ; [CPU_] |1555| 
	.dwpsn	file "../Source/prod.c",line 1556,column 6,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1556| 
        ; call occurs [#_scia_puts] ; [] |1556| 
	.dwpsn	file "../Source/prod.c",line 1559,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1559| 
        MOV       AH,#0                 ; [CPU_] |1559| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1559| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1559| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1559| 
        ; call occurs [#FS$$CMP] ; [] |1559| 
        CMPB      AL,#0                 ; [CPU_] |1559| 
        B         $C$L616,LT            ; [CPU_] |1559| 
        ; branchcc occurs ; [] |1559| 
	.dwpsn	file "../Source/prod.c",line 1565,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1565| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1565| 
        ; call occurs [#U$$TOFS] ; [] |1565| 
        MOVL      XAR1,ACC              ; [CPU_] |1565| 
        MOV       AL,*-SP[35]           ; [CPU_] |1565| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1565| 
        ; call occurs [#U$$TOFS] ; [] |1565| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1565| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1565| 
        ; call occurs [#FS$$SUB] ; [] |1565| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1565| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1565| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1565| 
        ; call occurs [#FS$$DIV] ; [] |1565| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1565| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1565| 
	.dwpsn	file "../Source/prod.c",line 1567,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1567| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1567| 
        ; call occurs [#U$$TOFS] ; [] |1567| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1567| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1567| 
        ; call occurs [#FS$$SUB] ; [] |1567| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1567| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1567| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1567| 
        ; call occurs [#FS$$DIV] ; [] |1567| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1567| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1567| 
        B         $C$L617,UNC           ; [CPU_] |1567| 
        ; branch occurs ; [] |1567| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1560,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1560| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1560| 
        ; call occurs [#U$$TOFS] ; [] |1560| 
        MOVL      XAR1,ACC              ; [CPU_] |1560| 
        MOV       AL,*-SP[35]           ; [CPU_] |1560| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1560| 
        ; call occurs [#U$$TOFS] ; [] |1560| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1560| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1560| 
        ; call occurs [#FS$$SUB] ; [] |1560| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1560| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1560| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1560| 
        ; call occurs [#FS$$DIV] ; [] |1560| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1560| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1560| 
	.dwpsn	file "../Source/prod.c",line 1562,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1562| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1562| 
        ; call occurs [#U$$TOFS] ; [] |1562| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1562| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1562| 
        ; call occurs [#FS$$SUB] ; [] |1562| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1562| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1562| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1562| 
        ; call occurs [#FS$$DIV] ; [] |1562| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1562| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1562| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1570,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1570| 
	.dwpsn	file "../Source/prod.c",line 1572,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1572| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1572| 
        ; call occurs [#_dac_setmode] ; [] |1572| 
	.dwpsn	file "../Source/prod.c",line 1574,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1574| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1574| 
        MOVL      XAR4,*-SP[56]         ; [CPU_] |1574| 
        MOV       AL,*-SP[51]           ; [CPU_] |1574| 
        MOV       *-SP[3],AL            ; [CPU_] |1574| 
        MOVL      XAR0,#44              ; [CPU_] |1574| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1574| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1574| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1574| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1574| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1574| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1574| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1574| 
        MOVL      XAR4,XAR1             ; [CPU_] |1574| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_sprintf")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1574| 
        ; call occurs [#_sprintf] ; [] |1574| 
        MOVL      XAR4,XAR1             ; [CPU_] |1574| 
	.dwpsn	file "../Source/prod.c",line 1578,column 6,is_stmt,isa 0
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1578| 
        ; call occurs [#_scia_puts] ; [] |1578| 
	.dwpsn	file "../Source/prod.c",line 1580,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1580| 
	.dwpsn	file "../Source/prod.c",line 1581,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1581| 
        ; branch occurs ; [] |1581| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1440,column 7,is_stmt,isa 0
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1440| 
        ; call occurs [#_lcd_clear] ; [] |1440| 
	.dwpsn	file "../Source/prod.c",line 1441,column 7,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_update_units")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1441| 
        ; call occurs [#_update_units] ; [] |1441| 
	.dwpsn	file "../Source/prod.c",line 1442,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1442| 
        ; branch occurs ; [] |1442| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1390| 
        MOVB      AL,#0                 ; [CPU_] |1390| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1390| 
        ; call occurs [#_lcd_puts] ; [] |1390| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1392| 
        MOVL      XAR0,#44              ; [CPU_] |1392| 
        MOV       AL,*-SP[51]           ; [CPU_] |1392| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1392| 
        MOV       *-SP[3],AL            ; [CPU_] |1392| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1392| 
        MOVL      XAR4,XAR1             ; [CPU_] |1392| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_sprintf")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1392| 
        ; call occurs [#_sprintf] ; [] |1392| 
        MOVL      XAR4,XAR1             ; [CPU_] |1392| 
	.dwpsn	file "../Source/prod.c",line 1395,column 6,is_stmt,isa 0
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1395| 
        ; call occurs [#_scia_puts] ; [] |1395| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[39],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1408,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1408| 
        MOVL      XAR0,#42              ; [CPU_] |1408| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1408| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1408| 
        MOVL      XAR0,#44              ; [CPU_] |1408| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1408| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1408| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1408| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_sprintf")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1408| 
        ; call occurs [#_sprintf] ; [] |1408| 
        MOVL      XAR0,#44              ; [CPU_] |1408| 
	.dwpsn	file "../Source/prod.c",line 1411,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1411| 
        MOVL      XAR5,*-SP[58]         ; [CPU_] |1411| 
	.dwpsn	file "../Source/prod.c",line 1408,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1408| 
	.dwpsn	file "../Source/prod.c",line 1411,column 7,is_stmt,isa 0
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1411| 
        ; call occurs [#_scia_getparam] ; [] |1411| 
	.dwpsn	file "../Source/prod.c",line 1412,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1412| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1412| 
        ; call occurs [#_scia_puts] ; [] |1412| 
	.dwpsn	file "../Source/prod.c",line 1415,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1415| 
	.dwpsn	file "../Source/prod.c",line 1414,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1414| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1414| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1414| 
	.dwpsn	file "../Source/prod.c",line 1416,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1416| 
	.dwpsn	file "../Source/prod.c",line 1415,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1415| 
	.dwpsn	file "../Source/prod.c",line 1416,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1416| 
        MOVB      ACC,#0                ; [CPU_] |1416| 
        SUBB      ACC,#1                ; [CPU_] |1416| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1416| 
        B         $C$L622,EQ            ; [CPU_] |1416| 
        ; branchcc occurs ; [] |1416| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1417,column 15,is_stmt,isa 0
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1417| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1417| 
        CMPB      AL,#0                 ; [CPU_] |1417| 
        B         $C$L624,EQ            ; [CPU_] |1417| 
        ; branchcc occurs ; [] |1417| 
	.dwpsn	file "../Source/prod.c",line 1420,column 8,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1420| 
        ; call occurs [#_ad7738_getraw] ; [] |1420| 
	.dwpsn	file "../Source/prod.c",line 1421,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |1421| 
        ADDL      XAR4,ACC              ; [CPU_] |1421| 
        MOVL      XAR0,#10              ; [CPU_] |1421| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1421| 
        MOVL      XAR0,#10              ; [CPU_] |1421| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1421| 
        ASR64     ACC:P,16              ; [CPU_] |1421| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1421| 
        MOVL      XAR0,#10              ; [CPU_] |1421| 
        ASR64     ACC:P,16              ; [CPU_] |1421| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1421| 
        MOVL      XAR0,#10              ; [CPU_] |1421| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1421| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1421| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1421| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1421| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1421| 
	.dwpsn	file "../Source/prod.c",line 1416,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1416| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1416| 
        MOVB      ACC,#0                ; [CPU_] |1416| 
        SUBB      ACC,#1                ; [CPU_] |1416| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1416| 
        B         $C$L621,NEQ           ; [CPU_] |1416| 
        ; branchcc occurs ; [] |1416| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1424,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1424| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1424| 
        ; call occurs [#_scia_puts] ; [] |1424| 
	.dwpsn	file "../Source/prod.c",line 1407,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |1407| 
        MOVL      XAR0,#42              ; [CPU_] |1407| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1407| 
        MOVL      XAR0,#42              ; [CPU_] |1407| 
        SUBB      XAR6,#1               ; [CPU_U] |1407| 
        ADDB      ACC,#2                ; [CPU_] |1407| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1407| 
        MOVZ      AR0,AR6               ; [CPU_] |1407| 
        MOV       *-SP[39],AR6          ; [CPU_] |1407| 
        ADDB      XAR1,#4               ; [CPU_] |1407| 
        CMP       AR0,#-1               ; [CPU_] |1407| 
        B         $C$L620,NEQ           ; [CPU_] |1407| 
        ; branchcc occurs ; [] |1407| 
	.dwpsn	file "../Source/prod.c",line 1427,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1427| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1427| 
        MOVB      AL,#10                ; [CPU_] |1427| 
        MOV       T,*-SP[50]            ; [CPU_] |1427| 
        MPYU      ACC,T,AL              ; [CPU_] |1427| 
        ADDL      ACC,XAR6              ; [CPU_] |1427| 
        MOVL      XAR1,ACC              ; [CPU_] |1427| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1427| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1427| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1427| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1427| 
        ; call occurs [#FS$$SUB] ; [] |1427| 
        MOVL      XAR6,ACC              ; [CPU_] |1427| 
        MOV       AL,#16384             ; [CPU_] |1427| 
        MOV       AH,#17948             ; [CPU_] |1427| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1427| 
        MOVL      ACC,XAR6              ; [CPU_] |1427| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1427| 
        ; call occurs [#FS$$MPY] ; [] |1427| 
        MOVL      *-SP[56],ACC          ; [CPU_] |1427| 
        MOVL      P,*-SP[28]            ; [CPU_] |1427| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1427| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1427| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1427| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1427| 
        ; call occurs [#LL$$TOFS] ; [] |1427| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1427| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |1427| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1427| 
        ; call occurs [#FS$$DIV] ; [] |1427| 
        MOVB      XAR0,#44              ; [CPU_] |1427| 
	.dwpsn	file "../Source/prod.c",line 1430,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1430| 
	.dwpsn	file "../Source/prod.c",line 1427,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1427| 
	.dwpsn	file "../Source/prod.c",line 1430,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1430| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1430| 
        MOV       AL,*-SP[51]           ; [CPU_] |1430| 
        MOV       *-SP[3],AL            ; [CPU_] |1430| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1430| 
        MOVL      XAR0,#44              ; [CPU_] |1430| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1430| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1430| 
        MOVL      XAR4,XAR1             ; [CPU_] |1430| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_sprintf")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1430| 
        ; call occurs [#_sprintf] ; [] |1430| 
        MOVL      XAR4,XAR1             ; [CPU_] |1430| 
	.dwpsn	file "../Source/prod.c",line 1432,column 6,is_stmt,isa 0
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1432| 
        ; call occurs [#_scia_puts] ; [] |1432| 
	.dwpsn	file "../Source/prod.c",line 1433,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1433| 
$C$L623:    
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1433| 
        ; call occurs [#_scia_puts] ; [] |1433| 
	.dwpsn	file "../Source/prod.c",line 1588,column 5,is_stmt,isa 0
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1588| 
        ; call occurs [#_lcd_clear] ; [] |1588| 
	.dwpsn	file "../Source/prod.c",line 1589,column 5,is_stmt,isa 0
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_update_units")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1589| 
        ; call occurs [#_update_units] ; [] |1589| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1592,column 5,is_stmt,isa 0
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1592| 
        ; call occurs [#_ad7738_setcal] ; [] |1592| 
        MOVL      XAR0,#78              ; [CPU_] |1592| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1592| 
	.dwpsn	file "../Source/prod.c",line 1593,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |1593| 
        MOVL      XAR1,ACC              ; [CPU_] |1593| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1593| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1593| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1593| 
	.dwpsn	file "../Source/prod.c",line 1594,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1594| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1594| 
        ; call occurs [#_ad7738_resetvall] ; [] |1594| 
	.dwpsn	file "../Source/prod.c",line 1596,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1596| 
        ; branch occurs ; [] |1596| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1418,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1418| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_delay_us")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1418| 
        ; call occurs [#_delay_us] ; [] |1418| 
	.dwpsn	file "../Source/prod.c",line 1417,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1417| 
        ; branch occurs ; [] |1417| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3547,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3547| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3547| 
        ; call occurs [#_scia_puts] ; [] |3547| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |3547| 
	.dwpsn	file "../Source/prod.c",line 3548,column 5,is_stmt,isa 0
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3548| 
        ; call occurs [#_scia_puts] ; [] |3548| 
	.dwpsn	file "../Source/prod.c",line 3549,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3549| 
	.dwpsn	file "../Source/prod.c",line 3550,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3550| 
        ; branch occurs ; [] |3550| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3508,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3508| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3508| 
        ; call occurs [#_scia_puts] ; [] |3508| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3512,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3512| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_delay_us")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3512| 
        ; call occurs [#_delay_us] ; [] |3512| 
	.dwpsn	file "../Source/prod.c",line 3510,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3510| 
        ; branchcc occurs ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3515,column 5,is_stmt,isa 0
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_reboot")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3515| 
        ; call occurs [#_reboot] ; [] |3515| 
	.dwpsn	file "../Source/prod.c",line 3516,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3516| 
        ; branch occurs ; [] |3516| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3492,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3492| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3492| 
        ; call occurs [#_scia_puts] ; [] |3492| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3496,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3496| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_delay_us")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3496| 
        ; call occurs [#_delay_us] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3494,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3494| 
        ; branchcc occurs ; [] |3494| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3500,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3500| 
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3499| 
	.dwpsn	file "../Source/prod.c",line 3500,column 5,is_stmt,isa 0
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3500| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3500| 
	.dwpsn	file "../Source/prod.c",line 3504,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3504| 
        ; branch occurs ; [] |3504| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3403,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3403| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3403| 
        ; call occurs [#_scia_puts] ; [] |3403| 
	.dwpsn	file "../Source/prod.c",line 3405,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3405| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3405| 
        ; call occurs [#_scia_puts] ; [] |3405| 
	.dwpsn	file "../Source/prod.c",line 3406,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3406| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3406| 
        ; call occurs [#_scia_puts] ; [] |3406| 
	.dwpsn	file "../Source/prod.c",line 3408,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3408| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3408| 
        ; call occurs [#_scia_puts] ; [] |3408| 
	.dwpsn	file "../Source/prod.c",line 3409,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3409| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3409| 
        ; call occurs [#_scia_puts] ; [] |3409| 
	.dwpsn	file "../Source/prod.c",line 3410,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3410| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3410| 
        ; call occurs [#_scia_puts] ; [] |3410| 
	.dwpsn	file "../Source/prod.c",line 3411,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3411| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3411| 
        ; call occurs [#_scia_puts] ; [] |3411| 
	.dwpsn	file "../Source/prod.c",line 3413,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3413| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3413| 
        ; call occurs [#_scia_puts] ; [] |3413| 
	.dwpsn	file "../Source/prod.c",line 3414,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3414| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3414| 
        ; call occurs [#_scia_puts] ; [] |3414| 
	.dwpsn	file "../Source/prod.c",line 3415,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3415| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3415| 
        ; call occurs [#_scia_puts] ; [] |3415| 
	.dwpsn	file "../Source/prod.c",line 3416,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3416| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3416| 
        ; call occurs [#_scia_puts] ; [] |3416| 
	.dwpsn	file "../Source/prod.c",line 3417,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3417| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3417| 
        ; call occurs [#_scia_puts] ; [] |3417| 
	.dwpsn	file "../Source/prod.c",line 3418,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3418| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3418| 
        ; call occurs [#_scia_puts] ; [] |3418| 
	.dwpsn	file "../Source/prod.c",line 3419,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3419| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3419| 
        ; call occurs [#_scia_puts] ; [] |3419| 
	.dwpsn	file "../Source/prod.c",line 3421,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3421| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3421| 
        ; call occurs [#_scia_puts] ; [] |3421| 
	.dwpsn	file "../Source/prod.c",line 3423,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3423| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3423| 
        ; call occurs [#_scia_puts] ; [] |3423| 
	.dwpsn	file "../Source/prod.c",line 3425,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3425| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3425| 
        ; call occurs [#_scia_puts] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3427,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3427| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3427| 
        ; call occurs [#_scia_puts] ; [] |3427| 
	.dwpsn	file "../Source/prod.c",line 3428,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3428| 
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3428| 
        ; call occurs [#_scia_puts] ; [] |3428| 
	.dwpsn	file "../Source/prod.c",line 3429,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3429| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3429| 
        ; call occurs [#_scia_puts] ; [] |3429| 
	.dwpsn	file "../Source/prod.c",line 3430,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3430| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3432,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3432| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3432| 
        ; call occurs [#_scia_puts] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3433,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3433| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3433| 
        ; call occurs [#_scia_puts] ; [] |3433| 
	.dwpsn	file "../Source/prod.c",line 3434,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3434| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3434| 
        ; call occurs [#_scia_puts] ; [] |3434| 
	.dwpsn	file "../Source/prod.c",line 3435,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3435| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3435| 
        ; call occurs [#_scia_puts] ; [] |3435| 
	.dwpsn	file "../Source/prod.c",line 3436,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3436| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3436| 
        ; call occurs [#_scia_puts] ; [] |3436| 
	.dwpsn	file "../Source/prod.c",line 3438,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3438| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3438| 
        ; call occurs [#_scia_puts] ; [] |3438| 
	.dwpsn	file "../Source/prod.c",line 3439,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3439| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3439| 
        ; call occurs [#_scia_puts] ; [] |3439| 
	.dwpsn	file "../Source/prod.c",line 3441,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3441| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3441| 
        ; call occurs [#_scia_puts] ; [] |3441| 
	.dwpsn	file "../Source/prod.c",line 3443,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3443| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3443| 
        ; call occurs [#_scia_puts] ; [] |3443| 
	.dwpsn	file "../Source/prod.c",line 3444,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3444| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3444| 
        ; call occurs [#_scia_puts] ; [] |3444| 
	.dwpsn	file "../Source/prod.c",line 3446,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3446| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3446| 
        ; call occurs [#_scia_puts] ; [] |3446| 
	.dwpsn	file "../Source/prod.c",line 3448,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3448| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3448| 
        ; call occurs [#_scia_puts] ; [] |3448| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3450| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3452,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3452| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3452| 
        ; call occurs [#_scia_puts] ; [] |3452| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3453| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3455| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3456,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3456| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3456| 
        ; call occurs [#_scia_puts] ; [] |3456| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3457| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3458| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3458| 
        ; call occurs [#_scia_puts] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3459| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3460| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3461,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3461| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3461| 
        ; call occurs [#_scia_puts] ; [] |3461| 
	.dwpsn	file "../Source/prod.c",line 3462,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3462| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
	.dwpsn	file "../Source/prod.c",line 3473,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3473| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3473| 
        ; call occurs [#_scia_puts] ; [] |3473| 
	.dwpsn	file "../Source/prod.c",line 3475,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3475| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3475| 
        ; call occurs [#_scia_puts] ; [] |3475| 
	.dwpsn	file "../Source/prod.c",line 3477,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3477| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3477| 
        ; call occurs [#_scia_puts] ; [] |3477| 
	.dwpsn	file "../Source/prod.c",line 3479,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3479| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3481,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3481| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3481| 
        ; call occurs [#_scia_puts] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3486,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3486| 
$C$L631:    
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3486| 
        ; call occurs [#_scia_puts] ; [] |3486| 
$C$L632:    
        MOV       AL,*-SP[40]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3554,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3554| 
        ; branchcc occurs ; [] |3554| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3555,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3555| 
        SPM       #0                    ; [CPU_] 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3555| 
        ; call occurs [#_scia_puts] ; [] |3555| 
$C$L634:    
	.dwpsn	file "../Source/prod.c",line 600,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |600| 
        TBIT      AL,#4                 ; [CPU_] |600| 
        B         $C$L635,TC            ; [CPU_] |600| 
        ; branchcc occurs ; [] |600| 
	.dwpsn	file "../Source/prod.c",line 602,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |602| 
        SPM       #0                    ; [CPU_] 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |602| 
        ; call occurs [#_ad7738_resettare] ; [] |602| 
	.dwpsn	file "../Source/prod.c",line 603,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |603| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |603| 
        ; call occurs [#_ad7738_resetpeak] ; [] |603| 
	.dwpsn	file "../Source/prod.c",line 604,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |604| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |604| 
        ; call occurs [#_ad7738_resetvall] ; [] |604| 
$C$L635:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 682,column 3,is_stmt,isa 0
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |682| 
        ; call occurs [#_ad7738_monrdy] ; [] |682| 
        CMPB      AL,#0                 ; [CPU_] |682| 
        B         $C$L661,EQ            ; [CPU_] |682| 
        ; branchcc occurs ; [] |682| 
	.dwpsn	file "../Source/prod.c",line 684,column 4,is_stmt,isa 0
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |684| 
        ; call occurs [#_ad7738_monclr] ; [] |684| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |684| 
	.dwpsn	file "../Source/prod.c",line 687,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |687| 
        CMPB      AL,#3                 ; [CPU_] |687| 
        B         $C$L636,GT            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        CMPB      AL,#3                 ; [CPU_] |687| 
        B         $C$L642,EQ            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        CMPB      AL,#0                 ; [CPU_] |687| 
        B         $C$L646,EQ            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        CMPB      AL,#1                 ; [CPU_] |687| 
        B         $C$L645,EQ            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        CMPB      AL,#2                 ; [CPU_] |687| 
        B         $C$L644,EQ            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        B         $C$L658,UNC           ; [CPU_] |687| 
        ; branch occurs ; [] |687| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |687| 
        B         $C$L641,EQ            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        CMPB      AL,#5                 ; [CPU_] |687| 
        B         $C$L637,EQ            ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
        CMPB      AL,#6                 ; [CPU_] |687| 
        B         $C$L658,NEQ           ; [CPU_] |687| 
        ; branchcc occurs ; [] |687| 
	.dwpsn	file "../Source/prod.c",line 742,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |742| 
        MOVL      XAR0,#46              ; [CPU_] |742| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |742| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |742| 
	.dwpsn	file "../Source/prod.c",line 743,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |743| 
        ; branch occurs ; [] |743| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 737,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |737| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |737| 
        ; call occurs [#_ad7738_getlimitst] ; [] |737| 
	.dwpsn	file "../Source/prod.c",line 738,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |738| 
        B         $C$L639,NTC           ; [CPU_] |738| 
        ; branchcc occurs ; [] |738| 
        TBIT      AL,#0                 ; [CPU_] |738| 
        B         $C$L638,NTC           ; [CPU_] |738| 
        ; branchcc occurs ; [] |738| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |738| 
        B         $C$L640,UNC           ; [CPU_] |738| 
        ; branch occurs ; [] |738| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |738| 
        B         $C$L640,UNC           ; [CPU_] |738| 
        ; branch occurs ; [] |738| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |738| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |738| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |738| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |738| 
	.dwpsn	file "../Source/prod.c",line 740,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |740| 
        ; branch occurs ; [] |740| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 709,column 5,is_stmt,isa 0
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |709| 
        ; call occurs [#_ad7738_getmon] ; [] |709| 
	.dwpsn	file "../Source/prod.c",line 711,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |711| 
        B         $C$L643,UNC           ; [CPU_] |711| 
        ; branch occurs ; [] |711| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 704,column 5,is_stmt,isa 0
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |704| 
        ; call occurs [#_ad7738_getmon] ; [] |704| 
	.dwpsn	file "../Source/prod.c",line 705,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |705| 
$C$L643:    
	.dwpsn	file "../Source/prod.c",line 704,column 5,is_stmt,isa 0
        MOVL      XAR5,*-SP[60]         ; [CPU_] |704| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 705,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |705| 
        ADDL      XAR4,ACC              ; [CPU_] |705| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |705| 
	.dwpsn	file "../Source/prod.c",line 706,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |706| 
        ; branch occurs ; [] |706| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 699,column 5,is_stmt,isa 0
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |699| 
        ; call occurs [#_ad7738_getvall] ; [] |699| 
	.dwpsn	file "../Source/prod.c",line 701,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |701| 
        ; branch occurs ; [] |701| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 694,column 5,is_stmt,isa 0
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |694| 
        ; call occurs [#_ad7738_getpeak] ; [] |694| 
	.dwpsn	file "../Source/prod.c",line 696,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |696| 
        ; branch occurs ; [] |696| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 689,column 5,is_stmt,isa 0
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |689| 
        ; call occurs [#_ad7738_getmon] ; [] |689| 
$C$L647:    
        MOVL      XAR5,*-SP[60]         ; [CPU_] |689| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 690,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |690| 
        ADDL      XAR4,ACC              ; [CPU_] |690| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |690| 
$C$L648:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |690| 
	.dwpsn	file "../Source/prod.c",line 714,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |714| 
        CMPB      AL,#3                 ; [CPU_] |714| 
        B         $C$L649,GT            ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
        CMPB      AL,#3                 ; [CPU_] |714| 
        B         $C$L651,EQ            ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
        CMPB      AL,#0                 ; [CPU_] |714| 
        B         $C$L654,EQ            ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
        CMPB      AL,#1                 ; [CPU_] |714| 
        B         $C$L653,EQ            ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
        CMPB      AL,#2                 ; [CPU_] |714| 
        B         $C$L652,EQ            ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
        B         $C$L658,UNC           ; [CPU_] |714| 
        ; branch occurs ; [] |714| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |714| 
        B         $C$L650,EQ            ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
        CMPB      AL,#5                 ; [CPU_] |714| 
        B         $C$L658,NEQ           ; [CPU_] |714| 
        ; branchcc occurs ; [] |714| 
	.dwpsn	file "../Source/prod.c",line 731,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |731| 
	.dwpsn	file "../Source/prod.c",line 732,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |732| 
        ; branch occurs ; [] |732| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 728,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |728| 
	.dwpsn	file "../Source/prod.c",line 729,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |729| 
        ; branch occurs ; [] |729| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 725,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |725| 
	.dwpsn	file "../Source/prod.c",line 726,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |726| 
        ; branch occurs ; [] |726| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 722,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |722| 
	.dwpsn	file "../Source/prod.c",line 723,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |723| 
        ; branch occurs ; [] |723| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 719,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |719| 
	.dwpsn	file "../Source/prod.c",line 720,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |720| 
        ; branch occurs ; [] |720| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 716,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |716| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |716| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |716| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |716| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |716| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |716| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_sprintf")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |716| 
        ; call occurs [#_sprintf] ; [] |716| 
$C$L658:    
        MOV       T,*-SP[47]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 747,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |747| 
        MPYB      ACC,T,#20             ; [CPU_] |747| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |747| 
        ADDB      AL,#7                 ; [CPU_] |747| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |747| 
        ; call occurs [#_lcd_puts] ; [] |747| 
	.dwpsn	file "../Source/prod.c",line 750,column 4,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |750| 
	.dwpsn	file "../Source/prod.c",line 747,column 4,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |747| 
	.dwpsn	file "../Source/prod.c",line 750,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |750| 
        B         $C$L659,HIS           ; [CPU_] |750| 
        ; branchcc occurs ; [] |750| 
        MOVL      ACC,*-SP[60]          ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |750| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 751,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |751| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      *-SP[60],ACC          ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 760,column 3,is_stmt,isa 0
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |760| 
        ; call occurs [#_ad7738_tempstart] ; [] |760| 
        CMPB      AL,#0                 ; [CPU_] |760| 
        B         $C$L662,NEQ           ; [CPU_] |760| 
        ; branchcc occurs ; [] |760| 
	.dwpsn	file "../Source/prod.c",line 765,column 8,is_stmt,isa 0
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |765| 
        ; call occurs [#_ad7738_tempread] ; [] |765| 
        CMPB      AL,#0                 ; [CPU_] |765| 
        B         $C$L663,EQ            ; [CPU_] |765| 
        ; branchcc occurs ; [] |765| 
	.dwpsn	file "../Source/prod.c",line 766,column 4,is_stmt,isa 0
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |766| 
        ; call occurs [#_ds1820read] ; [] |766| 
        MOVL      XAR0,#46              ; [CPU_] |766| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |766| 
	.dwpsn	file "../Source/prod.c",line 767,column 4,is_stmt,isa 0
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |767| 
        ; call occurs [#_ad7738_settemp] ; [] |767| 
        B         $C$L663,UNC           ; [CPU_] |767| 
        ; branch occurs ; [] |767| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 761,column 4,is_stmt,isa 0
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |761| 
        ; call occurs [#_ds1820start] ; [] |761| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 774,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |774| 
        MOVB      XAR0,#36              ; [CPU_] |774| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |774| 
        B         $C$L668,EQ            ; [CPU_] |774| 
        ; branchcc occurs ; [] |774| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |774| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |774| 
        CMPB      AL,#0                 ; [CPU_] |774| 
        B         $C$L668,EQ            ; [CPU_] |774| 
        ; branchcc occurs ; [] |774| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 775,column 4,is_stmt,isa 0
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |775| 
        ; call occurs [#_tagdetect] ; [] |775| 
        CMPB      AL,#0                 ; [CPU_] |775| 
        B         $C$L664,NEQ           ; [CPU_] |775| 
        ; branchcc occurs ; [] |775| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 798,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |798| 
        MOV       *+XAR4[0],#0          ; [CPU_] |798| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |798| 
	.dwpsn	file "../Source/prod.c",line 800,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |800| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |800| 
        MOVL      XAR4,ACC              ; [CPU_] |800| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |800| 
        B         $C$L666,EQ            ; [CPU_] |800| 
        ; branchcc occurs ; [] |800| 
	.dwpsn	file "../Source/prod.c",line 801,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |801| 
	.dwpsn	file "../Source/prod.c",line 802,column 6,is_stmt,isa 0
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |802| 
        ; call occurs [#_lcd_clear] ; [] |802| 
	.dwpsn	file "../Source/prod.c",line 803,column 6,is_stmt,isa 0
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_update_units")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |803| 
        ; call occurs [#_update_units] ; [] |803| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 804,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |804| 
        B         $C$L666,UNC           ; [CPU_] |804| 
        ; branch occurs ; [] |804| 
$C$L664:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 777,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |777| 
        B         $C$L665,NEQ           ; [CPU_] |777| 
        ; branchcc occurs ; [] |777| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 780,column 6,is_stmt,isa 0
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_matchTag")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |780| 
        ; call occurs [#_matchTag] ; [] |780| 
        MOVL      XAR0,#80              ; [CPU_] |780| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |780| 
        MOVL      XAR0,#9               ; [CPU_] |780| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |780| 
	.dwpsn	file "../Source/prod.c",line 781,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |781| 
        B         $C$L665,EQ            ; [CPU_] |781| 
        ; branchcc occurs ; [] |781| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 784,column 7,is_stmt,isa 0
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |784| 
        ; call occurs [#_maf_rst] ; [] |784| 
	.dwpsn	file "../Source/prod.c",line 785,column 7,is_stmt,isa 0
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |785| 
        ; call occurs [#_ad7738_setcal] ; [] |785| 
        MOVL      XAR0,#78              ; [CPU_] |785| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |785| 
	.dwpsn	file "../Source/prod.c",line 786,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[50]          ; [CPU_] |786| 
        MOVL      XAR1,ACC              ; [CPU_] |786| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |786| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |786| 
        ; call occurs [#_ad7738_resetpeak] ; [] |786| 
	.dwpsn	file "../Source/prod.c",line 787,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |787| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |787| 
        ; call occurs [#_ad7738_resetvall] ; [] |787| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 790,column 7,is_stmt,isa 0
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |790| 
        ; call occurs [#_lcd_clear] ; [] |790| 
	.dwpsn	file "../Source/prod.c",line 791,column 7,is_stmt,isa 0
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_update_units")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |791| 
        ; call occurs [#_update_units] ; [] |791| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 792,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |792| 
$C$L665:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 795,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |795| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 809,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |809| 
        ADDB      AL,#1                 ; [CPU_] |809| 
        MOV       *+FP[AR0],AL          ; [CPU_] |809| 
        CMPB      AL,#4                 ; [CPU_] |809| 
        B         $C$L667,HIS           ; [CPU_] |809| 
        ; branchcc occurs ; [] |809| 
        MOVL      ACC,*-SP[62]          ; [CPU_] 
        ADDB      ACC,#1                ; [CPU_] |809| 
        MOVL      *-SP[62],ACC          ; [CPU_] |809| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
	.dwpsn	file "../Source/prod.c",line 810,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |810| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOV       *+FP[AR0],#0          ; [CPU_] |810| 
        MOVL      *-SP[62],XAR4         ; [CPU_] 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 818,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |818| 
        CMPB      AL,#1                 ; [CPU_] |818| 
        B         $C$L686,NEQ           ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        MOV       AL,*-SP[46]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
	.dwpsn	file "../Source/prod.c",line 821,column 4,is_stmt,isa 0
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |821| 
        ; call occurs [#_prod_getavail] ; [] |821| 
        MOVL      XAR6,ACC              ; [CPU_] |821| 
        MOV       T,*-SP[43]            ; [CPU_] |821| 
        MPY       P,T,*-SP[44]          ; [CPU_] |821| 
        MOVU      ACC,PL                ; [CPU_] |821| 
        CMPL      ACC,XAR6              ; [CPU_] |821| 
        B         $C$L671,LOS           ; [CPU_] |821| 
        ; branchcc occurs ; [] |821| 
        MOV       AL,*-SP[45]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |821| 
        ; branchcc occurs ; [] |821| 
	.dwpsn	file "../Source/prod.c",line 891,column 11,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |891| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |891| 
        CMPB      AL,#0                 ; [CPU_] |891| 
        B         $C$L669,NEQ           ; [CPU_] |891| 
        ; branchcc occurs ; [] |891| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 899,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |899| 
        B         $C$L686,EQ            ; [CPU_] |899| 
        ; branchcc occurs ; [] |899| 
	.dwpsn	file "../Source/prod.c",line 900,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |900| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |903| 
	.dwpsn	file "../Source/prod.c",line 905,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |905| 
        MOVB      XAR0,#36              ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 904,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 905,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |905| 
        MOVL      XAR0,#80              ; [CPU_] |905| 
        MOV       *+XAR4[2],AL          ; [CPU_] |905| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 909,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |909| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 907,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |907| 
	.dwpsn	file "../Source/prod.c",line 909,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |909| 
        ; branch occurs ; [] |909| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 893,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |893| 
        MOV       *+XAR4[0],#0          ; [CPU_] |893| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 895,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |895| 
	.dwpsn	file "../Source/prod.c",line 894,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 895,column 10,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |895| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 896,column 6,is_stmt,isa 0
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |896| 
        ; call occurs [#_ad7738_getlimitst] ; [] |896| 
        MOV       *XAR1++,AL            ; [CPU_] |896| 
	.dwpsn	file "../Source/prod.c",line 895,column 17,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |895| 
	.dwpsn	file "../Source/prod.c",line 896,column 6,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |896| 
	.dwpsn	file "../Source/prod.c",line 895,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |895| 
        B         $C$L670,LT            ; [CPU_] |895| 
        ; branchcc occurs ; [] |895| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 898,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |898| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 899,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |899| 
        ; branch occurs ; [] |899| 
$C$L671:    
        MOV       AL,*-SP[43]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 828,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |828| 
	.dwpsn	file "../Source/prod.c",line 826,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |826| 
	.dwpsn	file "../Source/prod.c",line 828,column 5,is_stmt,isa 0
        MOVL      *-SP[56],XAR4         ; [CPU_] |828| 
        MOV       *+XAR4[0],#0          ; [CPU_] |828| 
	.dwpsn	file "../Source/prod.c",line 834,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |834| 
	.dwpsn	file "../Source/prod.c",line 829,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |829| 
        MOV       AL,*-SP[44]           ; [CPU_] |829| 
	.dwpsn	file "../Source/prod.c",line 830,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |830| 
        MOV       AL,*-SP[51]           ; [CPU_] |830| 
	.dwpsn	file "../Source/prod.c",line 831,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |831| 
        MOV       *+XAR4[3],AL          ; [CPU_] |831| 
        MOV       AL,*-SP[51]           ; [CPU_] |831| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |832| 
        MOV       *+XAR4[4],AL          ; [CPU_] |832| 
        MOV       AL,*-SP[42]           ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 833,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |833| 
        MOV       AH,*-SP[41]           ; [CPU_] |833| 
	.dwpsn	file "../Source/prod.c",line 834,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |834| 
        MOV       *+XAR4[6],AL          ; [CPU_] |834| 
        MOV       AL,AH                 ; [CPU_] |834| 
        ADDB      AL,#1                 ; [CPU_] |834| 
	.dwpsn	file "../Source/prod.c",line 825,column 5,is_stmt,isa 0
        MOV       *-SP[39],#0           ; [CPU_] |825| 
	.dwpsn	file "../Source/prod.c",line 834,column 5,is_stmt,isa 0
        MOV       *-SP[41],AL           ; [CPU_] |834| 
	.dwpsn	file "../Source/prod.c",line 836,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |836| 
        ; branch occurs ; [] |836| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 837,column 6,is_stmt,isa 0
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |837| 
        ; call occurs [#_prod_getnext] ; [] |837| 
	.dwpsn	file "../Source/prod.c",line 839,column 7,is_stmt,isa 0
        DEC       *-SP[51]              ; [CPU_] |839| 
	.dwpsn	file "../Source/prod.c",line 837,column 6,is_stmt,isa 0
        MOVL      P,XAR4                ; [CPU_] |837| 
	.dwpsn	file "../Source/prod.c",line 839,column 7,is_stmt,isa 0
        B         $C$L682,NEQ           ; [CPU_] |839| 
        ; branchcc occurs ; [] |839| 
        MOV       AL,*-SP[43]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 841,column 6,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |841| 
	.dwpsn	file "../Source/prod.c",line 845,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |845| 
        MOVB      XAR4,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 844,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |844| 
        MOV       *-SP[50],AL           ; [CPU_] |844| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 846,column 7,is_stmt,isa 0
        AND       AL,*-SP[42]           ; [CPU_] |846| 
        B         $C$L675,EQ            ; [CPU_] |846| 
        ; branchcc occurs ; [] |846| 
	.dwpsn	file "../Source/prod.c",line 847,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |847| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |847| 
        MOVL      XAR0,ACC              ; [CPU_] |847| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |847| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 850,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |850| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 848,column 21,is_stmt,isa 0
        MOV       *-SP[49],#2           ; [CPU_] |848| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 849,column 9,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |849| 
        ANDB      AL,#0xff              ; [CPU_] |849| 
        MOV       *XAR5++,AL            ; [CPU_] |849| 
	.dwpsn	file "../Source/prod.c",line 850,column 9,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |850| 
        LSR       AL,8                  ; [CPU_] |850| 
        MOV       *XAR5++,AL            ; [CPU_] |850| 
	.dwpsn	file "../Source/prod.c",line 848,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR6--         ; [CPU_] |848| 
        ; branchcc occurs ; [] |848| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 845,column 18,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |845| 
        ADDB      XAR7,#1               ; [CPU_] |845| 
	.dwpsn	file "../Source/prod.c",line 854,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |854| 
        MOV       *-SP[50],AL           ; [CPU_] |854| 
	.dwpsn	file "../Source/prod.c",line 845,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR4--         ; [CPU_] |845| 
        ; branchcc occurs ; [] |845| 
	.dwpsn	file "../Source/prod.c",line 857,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |857| 
        MOVB      XAR4,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 858,column 7,is_stmt,isa 0
        AND       AL,*-SP[42]           ; [CPU_] |858| 
        B         $C$L678,EQ            ; [CPU_] |858| 
        ; branchcc occurs ; [] |858| 
	.dwpsn	file "../Source/prod.c",line 859,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |859| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |859| 
        ADDB      ACC,#8                ; [CPU_] |859| 
        MOVL      XAR0,ACC              ; [CPU_] |859| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |859| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 862,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |862| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 860,column 21,is_stmt,isa 0
        MOV       *-SP[49],#2           ; [CPU_] |860| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 861,column 9,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |861| 
        ANDB      AL,#0xff              ; [CPU_] |861| 
        MOV       *XAR5++,AL            ; [CPU_] |861| 
	.dwpsn	file "../Source/prod.c",line 862,column 9,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |862| 
        LSR       AL,8                  ; [CPU_] |862| 
        MOV       *XAR5++,AL            ; [CPU_] |862| 
	.dwpsn	file "../Source/prod.c",line 860,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR6--         ; [CPU_] |860| 
        ; branchcc occurs ; [] |860| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 857,column 18,is_stmt,isa 0
        MOV       AL,*-SP[50]           ; [CPU_] |857| 
        ADDB      XAR7,#1               ; [CPU_] |857| 
	.dwpsn	file "../Source/prod.c",line 866,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |866| 
        MOV       *-SP[50],AL           ; [CPU_] |866| 
	.dwpsn	file "../Source/prod.c",line 857,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR4--         ; [CPU_] |857| 
        ; branchcc occurs ; [] |857| 
	.dwpsn	file "../Source/prod.c",line 842,column 6,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |842| 
	.dwpsn	file "../Source/prod.c",line 869,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |869| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[50]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 870,column 7,is_stmt,isa 0
        AND       AL,*-SP[42]           ; [CPU_] |870| 
        B         $C$L681,EQ            ; [CPU_] |870| 
        ; branchcc occurs ; [] |870| 
	.dwpsn	file "../Source/prod.c",line 871,column 8,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |871| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |871| 
        ADDB      ACC,#12               ; [CPU_] |871| 
        MOVL      XAR7,ACC              ; [CPU_] |871| 
        MOVL      ACC,*-SP[56]          ; [CPU_] |871| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 874,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |874| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 872,column 21,is_stmt,isa 0
        MOV       *-SP[49],#2           ; [CPU_] |872| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 873,column 9,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |873| 
        ANDB      AL,#0xff              ; [CPU_] |873| 
        MOV       *XAR5++,AL            ; [CPU_] |873| 
	.dwpsn	file "../Source/prod.c",line 874,column 9,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |874| 
        LSR       AL,8                  ; [CPU_] |874| 
        MOV       *XAR5++,AL            ; [CPU_] |874| 
	.dwpsn	file "../Source/prod.c",line 872,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR6--         ; [CPU_] |872| 
        ; branchcc occurs ; [] |872| 
$C$L681:    
        MOV       AL,*-SP[50]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 869,column 18,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |869| 
	.dwpsn	file "../Source/prod.c",line 878,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |878| 
        MOV       *-SP[50],AL           ; [CPU_] |878| 
	.dwpsn	file "../Source/prod.c",line 869,column 18,is_stmt,isa 0
        MOV       AL,AR4                ; [CPU_] |869| 
        CMPB      AL,#2                 ; [CPU_] |869| 
        B         $C$L679,LT            ; [CPU_] |869| 
        ; branchcc occurs ; [] |869| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 836,column 12,is_stmt,isa 0
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |836| 
        ; call occurs [#_prod_getavail] ; [] |836| 
        TEST      ACC                   ; [CPU_] |836| 
        B         $C$L683,EQ            ; [CPU_] |836| 
        ; branchcc occurs ; [] |836| 
        MOV       AL,*-SP[44]           ; [CPU_] 
        CMP       AL,*-SP[39]           ; [CPU_] |836| 
        B         $C$L672,HI            ; [CPU_] |836| 
        ; branchcc occurs ; [] |836| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 882,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |882| 
        MOV       AL,*-SP[39]           ; [CPU_] |882| 
        MOV       *+XAR4[2],AL          ; [CPU_] |882| 
        MOV       AL,*-SP[45]           ; [CPU_] |882| 
	.dwpsn	file "../Source/prod.c",line 884,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |884| 
        ; branchcc occurs ; [] |884| 
	.dwpsn	file "../Source/prod.c",line 885,column 6,is_stmt,isa 0
        MOV       *-SP[46],#0           ; [CPU_] |885| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 888,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |888| 
$C$L685:    
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |888| 
        ; call occurs [#_scia_send_bin] ; [] |888| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 923,column 4,is_stmt,isa 0
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |923| 
        ; call occurs [#_scia_rx_getcmds] ; [] |923| 
        CMPB      AL,#0                 ; [CPU_] |923| 
        B         $C$L634,EQ            ; [CPU_] |923| 
        ; branchcc occurs ; [] |923| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 929,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |929| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |929| 
        ; call occurs [#_scia_rx_getcmd] ; [] |929| 
        MOV       *-SP[51],AL           ; [CPU_] |929| 
        CMPB      AL,#0                 ; [CPU_] |929| 
        B         $C$L634,EQ            ; [CPU_] |929| 
        ; branchcc occurs ; [] |929| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 946,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |946| 
        B         $C$L322,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
	.dwpsn	file "../Source/prod.c",line 3559,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3559| 
        B         $C$L634,NEQ           ; [CPU_] |3559| 
        ; branchcc occurs ; [] |3559| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3559| 
        B         $C$L634,LO            ; [CPU_] |3559| 
        ; branchcc occurs ; [] |3559| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3593,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3593| 
	.dwpsn	file "../Source/prod.c",line 3582,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3582| 
	.dwpsn	file "../Source/prod.c",line 3586,column 4,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |3586| 
	.dwpsn	file "../Source/prod.c",line 3585,column 4,is_stmt,isa 0
        MOV       *-SP[53],#2           ; [CPU_] |3585| 
	.dwpsn	file "../Source/prod.c",line 3593,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3593| 
	.dwpsn	file "../Source/prod.c",line 3586,column 4,is_stmt,isa 0
        MOV       *-SP[39],#1           ; [CPU_] |3586| 
	.dwpsn	file "../Source/prod.c",line 3593,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3593| 
        CMPB      AL,#146               ; [CPU_] |3593| 
        B         $C$L694,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#146               ; [CPU_] |3593| 
        B         $C$L231,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#54                ; [CPU_] |3593| 
        B         $C$L690,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#54                ; [CPU_] |3593| 
        B         $C$L725,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#36                ; [CPU_] |3593| 
        B         $C$L688,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#36                ; [CPU_] |3593| 
        B         $C$L287,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#33                ; [CPU_] |3593| 
        B         $C$L687,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#33                ; [CPU_] |3593| 
        B         $C$L302,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#16                ; [CPU_] |3593| 
        B         $C$L741,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        MOV       AH,AL                 ; [CPU_] |3593| 
        ADDB      AH,#-17               ; [CPU_] |3593| 
        CMPB      AH,#1                 ; [CPU_] |3593| 
        B         $C$L740,LOS           ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#32                ; [CPU_] |3593| 
        B         $C$L736,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3593| 
        B         $C$L298,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#35                ; [CPU_] |3593| 
        B         $C$L295,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3593| 
        B         $C$L689,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#51                ; [CPU_] |3593| 
        B         $C$L730,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#48                ; [CPU_] |3593| 
        B         $C$L281,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#49                ; [CPU_] |3593| 
        B         $C$L256,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#50                ; [CPU_] |3593| 
        B         $C$L732,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3593| 
        B         $C$L728,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#53                ; [CPU_] |3593| 
        B         $C$L727,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3593| 
        B         $C$L692,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#71                ; [CPU_] |3593| 
        B         $C$L252,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#68                ; [CPU_] |3593| 
        B         $C$L691,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#65                ; [CPU_] |3593| 
        B         $C$L710,GEQ           ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#55                ; [CPU_] |3593| 
        B         $C$L718,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#56                ; [CPU_] |3593| 
        B         $C$L714,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#57                ; [CPU_] |3593| 
        B         $C$L712,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3593| 
        B         $C$L709,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#70                ; [CPU_] |3593| 
        B         $C$L702,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3593| 
        B         $C$L693,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#132               ; [CPU_] |3593| 
        B         $C$L310,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#72                ; [CPU_] |3593| 
        B         $C$L245,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#130               ; [CPU_] |3593| 
        B         $C$L240,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#131               ; [CPU_] |3593| 
        B         $C$L311,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3593| 
        B         $C$L236,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#145               ; [CPU_] |3593| 
        B         $C$L235,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3593| 
        B         $C$L698,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#169               ; [CPU_] |3593| 
        B         $C$L168,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#161               ; [CPU_] |3593| 
        B         $C$L696,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#161               ; [CPU_] |3593| 
        B         $C$L194,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#150               ; [CPU_] |3593| 
        B         $C$L695,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#150               ; [CPU_] |3593| 
        B         $C$L224,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#147               ; [CPU_] |3593| 
        B         $C$L230,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#148               ; [CPU_] |3593| 
        B         $C$L229,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#149               ; [CPU_] |3593| 
        B         $C$L228,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3593| 
        B         $C$L215,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#160               ; [CPU_] |3593| 
        B         $C$L210,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3593| 
        B         $C$L697,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#166               ; [CPU_] |3593| 
        B         $C$L182,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#162               ; [CPU_] |3593| 
        B         $C$L189,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#163               ; [CPU_] |3593| 
        B         $C$L185,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#165               ; [CPU_] |3593| 
        B         $C$L184,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3593| 
        B         $C$L179,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#168               ; [CPU_] |3593| 
        B         $C$L177,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3593| 
        B         $C$L700,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#195               ; [CPU_] |3593| 
        B         $C$L143,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#192               ; [CPU_] |3593| 
        B         $C$L699,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#192               ; [CPU_] |3593| 
        B         $C$L160,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#170               ; [CPU_] |3593| 
        B         $C$L164,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#186               ; [CPU_] |3593| 
        B         $C$L308,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#187               ; [CPU_] |3593| 
        B         $C$L307,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3593| 
        B         $C$L153,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#194               ; [CPU_] |3593| 
        B         $C$L150,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3593| 
        B         $C$L701,GT            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#210               ; [CPU_] |3593| 
        B         $C$L79,EQ             ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#196               ; [CPU_] |3593| 
        B         $C$L115,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#197               ; [CPU_] |3593| 
        B         $C$L91,EQ             ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#198               ; [CPU_] |3593| 
        B         $C$L80,EQ             ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3593| 
        B         $C$L306,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        CMPB      AL,#240               ; [CPU_] |3593| 
        B         $C$L305,EQ            ; [CPU_] |3593| 
        ; branchcc occurs ; [] |3593| 
        B         $C$L317,UNC           ; [CPU_] |3593| 
        ; branch occurs ; [] |3593| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4257,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4257| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4257| 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4259,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4259| 
        ANDB      AL,#0xff              ; [CPU_] |4259| 
        MOV       *XAR1++,AL            ; [CPU_] |4259| 
	.dwpsn	file "../Source/prod.c",line 4260,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4260| 
        LSR       AL,8                  ; [CPU_] |4260| 
        MOV       *XAR1++,AL            ; [CPU_] |4260| 
	.dwpsn	file "../Source/prod.c",line 4258,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4258| 
        ; branchcc occurs ; [] |4258| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4260,column 6,is_stmt,isa 0
        ADD       *-SP[53],#8           ; [CPU_] |4260| 
        MOV       *-SP[39],#3           ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4266,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4266| 
        MOV       AL,#0                 ; [CPU_] |4266| 
        MOV       AH,#0                 ; [CPU_] |4266| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4266| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4266| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4266| 
        ; call occurs [#FS$$CMP] ; [] |4266| 
        CMPB      AL,#0                 ; [CPU_] |4266| 
        B         $C$L705,NEQ           ; [CPU_] |4266| 
        ; branchcc occurs ; [] |4266| 
	.dwpsn	file "../Source/prod.c",line 4265,column 6,is_stmt,isa 0
        MOV       *-SP[51],#128         ; [CPU_] |4265| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4267,column 7,is_stmt,isa 0
        MOV       *-SP[51],#129         ; [CPU_] |4267| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4269,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4269| 
        MOV       AL,#0                 ; [CPU_] |4269| 
        MOV       AH,#0                 ; [CPU_] |4269| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4269| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4269| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4269| 
        ; call occurs [#FS$$CMP] ; [] |4269| 
        CMPB      AL,#0                 ; [CPU_] |4269| 
        B         $C$L707,EQ            ; [CPU_] |4269| 
        ; branchcc occurs ; [] |4269| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4270,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4270| 
        MOV       *-SP[51],AL           ; [CPU_] |4270| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4272,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[56]         ; [CPU_] |4272| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4272| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4272| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4272| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4272| 
        ; call occurs [#FS$$CMP] ; [] |4272| 
        CMPB      AL,#0                 ; [CPU_] |4272| 
        B         $C$L708,EQ            ; [CPU_] |4272| 
        ; branchcc occurs ; [] |4272| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4273,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4273| 
        MOV       *-SP[51],AL           ; [CPU_] |4273| 
$C$L708:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4275,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4275| 
        MOV       *XAR1++,AL            ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4264,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |4264| 
	.dwpsn	file "../Source/prod.c",line 4275,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4264,column 17,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4264| 
        MOVZ      AR0,AR6               ; [CPU_] |4264| 
        ADDB      ACC,#10               ; [CPU_] |4264| 
        MOV       *-SP[39],AR6          ; [CPU_] |4264| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4264| 
        CMP       AR0,#-1               ; [CPU_] |4264| 
        B         $C$L704,NEQ           ; [CPU_] |4264| 
        ; branchcc occurs ; [] |4264| 
        B         $C$L743,UNC           ; [CPU_] |4264| 
        ; branch occurs ; [] |4264| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4250,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4250| 
        MOV       AH,#16672             ; [CPU_] |4250| 
        MOVL      XAR0,#46              ; [CPU_] |4250| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4250| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4250| 
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4250| 
        ; call occurs [#FS$$MPY] ; [] |4250| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4250| 
        ; call occurs [#FS$$TOU] ; [] |4250| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4250| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4250| 
	.dwpsn	file "../Source/prod.c",line 4251,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4250,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4250| 
	.dwpsn	file "../Source/prod.c",line 4251,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4251| 
        MOV       *-SP[53],#4           ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4253,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4253| 
        ; branch occurs ; [] |4253| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4232,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4232| 
        MOV       AH,#16672             ; [CPU_] |4232| 
        MOVL      XAR0,#46              ; [CPU_] |4232| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4232| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4232| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4232| 
        ; call occurs [#FS$$MPY] ; [] |4232| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4232| 
        ; call occurs [#FS$$TOU] ; [] |4232| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4232| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4232| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4233| 
	.dwpsn	file "../Source/prod.c",line 4232,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4232| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4233| 
	.dwpsn	file "../Source/prod.c",line 4235,column 5,is_stmt,isa 0
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4235| 
        ; call occurs [#_ad7738_getmon] ; [] |4235| 
	.dwpsn	file "../Source/prod.c",line 4236,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4236| 
        MOV       AH,#18371             ; [CPU_] |4236| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4236| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4236| 
        ADDL      ACC,XAR4              ; [CPU_] |4236| 
        SUBB      ACC,#130              ; [CPU_] |4236| 
        MOVL      XAR4,ACC              ; [CPU_] |4236| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4236| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4236| 
        ; call occurs [#FS$$MPY] ; [] |4236| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4236| 
        ; call occurs [#FS$$TOL] ; [] |4236| 
	.dwpsn	file "../Source/prod.c",line 4237,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4237| 
	.dwpsn	file "../Source/prod.c",line 4236,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4236| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4236| 
	.dwpsn	file "../Source/prod.c",line 4237,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4237| 
	.dwpsn	file "../Source/prod.c",line 4236,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4236| 
	.dwpsn	file "../Source/prod.c",line 4237,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4237| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOV       *-SP[53],#8           ; [CPU_] |4240| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4239,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4239| 
        ANDB      AL,#0xff              ; [CPU_] |4239| 
        MOV       *XAR4++,AL            ; [CPU_] |4239| 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4240| 
        LSR       AL,8                  ; [CPU_] |4240| 
        MOV       *XAR4++,AL            ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4238,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4238| 
        ; branchcc occurs ; [] |4238| 
        B         $C$L743,UNC           ; [CPU_] |4238| 
        ; branch occurs ; [] |4238| 
$C$L712:    
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4219| 
        MOV       *-SP[53],AL           ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4218,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4218| 
        MOV       *-SP[39],AL           ; [CPU_] |4218| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4219| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4219| 
        MOV       *XAR1++,AL            ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4218,column 17,is_stmt,isa 0
        INC       *-SP[39]              ; [CPU_] |4218| 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        MOV       AL,*-SP[39]           ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4218,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4218| 
        B         $C$L713,LT            ; [CPU_] |4218| 
        ; branchcc occurs ; [] |4218| 
        B         $C$L743,UNC           ; [CPU_] |4218| 
        ; branch occurs ; [] |4218| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4196,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4196| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4196| 
        MOVL      XAR6,ACC              ; [CPU_] |4196| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4196| 
        MOV       *XAR4++,AL            ; [CPU_] |4196| 
	.dwpsn	file "../Source/prod.c",line 4197,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4197| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4197| 
        MOVL      XAR6,ACC              ; [CPU_] |4197| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4197| 
        MOV       *XAR4++,AL            ; [CPU_] |4197| 
	.dwpsn	file "../Source/prod.c",line 4198,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4198| 
        ADD       ACC,#199 << 4         ; [CPU_] |4198| 
        MOVL      XAR6,ACC              ; [CPU_] |4198| 
	.dwpsn	file "../Source/prod.c",line 4200,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4198,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4198| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4198| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4202,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4202| 
        ANDB      AL,#0xff              ; [CPU_] |4202| 
        MOV       *XAR4++,AL            ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4203,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4203| 
        LSR       AL,8                  ; [CPU_] |4203| 
        MOV       *XAR4++,AL            ; [CPU_] |4203| 
	.dwpsn	file "../Source/prod.c",line 4201,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4201| 
        ; branchcc occurs ; [] |4201| 
	.dwpsn	file "../Source/prod.c",line 4206,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4206| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4208,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4208| 
        ANDB      AL,#0xff              ; [CPU_] |4208| 
        MOV       *XAR4++,AL            ; [CPU_] |4208| 
	.dwpsn	file "../Source/prod.c",line 4209,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4209| 
        LSR       AL,8                  ; [CPU_] |4209| 
        MOV       *XAR4++,AL            ; [CPU_] |4209| 
	.dwpsn	file "../Source/prod.c",line 4207,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4207| 
        ; branchcc occurs ; [] |4207| 
	.dwpsn	file "../Source/prod.c",line 4197,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4197| 
        ADD       *-SP[53],#11          ; [CPU_] |4197| 
	.dwpsn	file "../Source/prod.c",line 4195,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4195| 
        ADDB      XAR0,#8               ; [CPU_] |4195| 
        ADDB      XAR7,#8               ; [CPU_] |4195| 
        SUBB      XAR6,#1               ; [CPU_U] |4195| 
        MOVZ      AR3,AR6               ; [CPU_] |4195| 
        CMP       AR6,#-1               ; [CPU_] |4195| 
        B         $C$L715,NEQ           ; [CPU_] |4195| 
        ; branchcc occurs ; [] |4195| 
        B         $C$L743,UNC           ; [CPU_] |4195| 
        ; branch occurs ; [] |4195| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOV       *-SP[39],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *-SP[56],ACC          ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4142,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4142| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4142| 
        MOVL      XAR6,ACC              ; [CPU_] |4142| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4142| 
        MOV       *XAR4++,AL            ; [CPU_] |4142| 
	.dwpsn	file "../Source/prod.c",line 4143,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4143| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4143| 
        MOVL      XAR6,ACC              ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4147,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4147| 
	.dwpsn	file "../Source/prod.c",line 4143,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4143| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4143| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4154,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4154| 
        ANDB      AL,#0xff              ; [CPU_] |4154| 
        MOV       *XAR4++,AL            ; [CPU_] |4154| 
	.dwpsn	file "../Source/prod.c",line 4155,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4155| 
        LSR       AL,8                  ; [CPU_] |4155| 
        MOV       *XAR4++,AL            ; [CPU_] |4155| 
	.dwpsn	file "../Source/prod.c",line 4153,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR6--         ; [CPU_] |4153| 
        ; branchcc occurs ; [] |4153| 
	.dwpsn	file "../Source/prod.c",line 4160,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR0             ; [CPU_] |4160| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4167,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4167| 
        ANDB      AL,#0xff              ; [CPU_] |4167| 
        MOV       *XAR4++,AL            ; [CPU_] |4167| 
	.dwpsn	file "../Source/prod.c",line 4168,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4168| 
        LSR       AL,8                  ; [CPU_] |4168| 
        MOV       *XAR4++,AL            ; [CPU_] |4168| 
	.dwpsn	file "../Source/prod.c",line 4166,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR6--         ; [CPU_] |4166| 
        ; branchcc occurs ; [] |4166| 
        MOVL      XAR7,*-SP[56]         ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4173,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4173| 
        ANDB      AL,#0xff              ; [CPU_] |4173| 
        MOV       *XAR4++,AL            ; [CPU_] |4173| 
	.dwpsn	file "../Source/prod.c",line 4174,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4174| 
        LSR       AL,8                  ; [CPU_] |4174| 
        MOV       *XAR4++,AL            ; [CPU_] |4174| 
	.dwpsn	file "../Source/prod.c",line 4172,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR6--         ; [CPU_] |4172| 
        ; branchcc occurs ; [] |4172| 
        MOVL      XAR7,XT               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4179,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4179| 
        ANDB      AL,#0xff              ; [CPU_] |4179| 
        MOV       *XAR4++,AL            ; [CPU_] |4179| 
	.dwpsn	file "../Source/prod.c",line 4180,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4180| 
        LSR       AL,8                  ; [CPU_] |4180| 
        MOV       *XAR4++,AL            ; [CPU_] |4180| 
	.dwpsn	file "../Source/prod.c",line 4178,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR6--         ; [CPU_] |4178| 
        ; branchcc occurs ; [] |4178| 
        MOVL      XAR7,P                ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4185,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4185| 
        ANDB      AL,#0xff              ; [CPU_] |4185| 
        MOV       *XAR4++,AL            ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4186,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4186| 
        LSR       AL,8                  ; [CPU_] |4186| 
        MOV       *XAR4++,AL            ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4184,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR6--         ; [CPU_] |4184| 
        ; branchcc occurs ; [] |4184| 
	.dwpsn	file "../Source/prod.c",line 4141,column 17,is_stmt,isa 0
        MOVL      ACC,*-SP[56]          ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4143,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[39]          ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4141,column 17,is_stmt,isa 0
        ADDB      ACC,#12               ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4143,column 6,is_stmt,isa 0
        ADD       *-SP[53],#22          ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4141,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4141| 
        ADDB      XAR1,#12              ; [CPU_] |4141| 
        ADDB      XAR0,#12              ; [CPU_] |4141| 
        SUBB      XAR6,#1               ; [CPU_U] |4141| 
        MOVL      *-SP[56],ACC          ; [CPU_] |4141| 
        MOVL      ACC,XT                ; [CPU_] |4141| 
        MOV       *-SP[39],AR6          ; [CPU_] |4141| 
        ADDB      ACC,#12               ; [CPU_] |4141| 
        MOVL      XT,ACC                ; [CPU_] |4141| 
        MOVL      ACC,P                 ; [CPU_] |4141| 
        ADDB      ACC,#12               ; [CPU_] |4141| 
        MOVL      P,ACC                 ; [CPU_] |4141| 
        CMP       AR6,#-1               ; [CPU_] |4141| 
        B         $C$L719,NEQ           ; [CPU_] |4141| 
        ; branchcc occurs ; [] |4141| 
        B         $C$L743,UNC           ; [CPU_] |4141| 
        ; branch occurs ; [] |4141| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4134,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4134| 
        MOV       *-SP[53],AL           ; [CPU_] |4134| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4132,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4132| 
        MOV       *XAR4++,AL            ; [CPU_] |4132| 
	.dwpsn	file "../Source/prod.c",line 4133,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4133| 
        MOV       *XAR4++,AL            ; [CPU_] |4133| 
	.dwpsn	file "../Source/prod.c",line 4134,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4134| 
	.dwpsn	file "../Source/prod.c",line 4131,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4134,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4134| 
	.dwpsn	file "../Source/prod.c",line 4131,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4131| 
        ; branchcc occurs ; [] |4131| 
        B         $C$L743,UNC           ; [CPU_] |4131| 
        ; branch occurs ; [] |4131| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4122,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4122| 
        MOVB      XAR0,#36              ; [CPU_] |4122| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4122| 
        MOVL      XAR0,#80              ; [CPU_] |4122| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4122| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4124,column 6,is_stmt,isa 0
        MOV       *-SP[53],#7           ; [CPU_] |4124| 
	.dwpsn	file "../Source/prod.c",line 4122,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4122| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4124,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4124| 
	.dwpsn	file "../Source/prod.c",line 4123,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4123| 
        ; branch occurs ; [] |4123| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4108,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4108| 
        MOVB      XAR0,#38              ; [CPU_] |4108| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4108| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4108| 
	.dwpsn	file "../Source/prod.c",line 4109,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4109| 
	.dwpsn	file "../Source/prod.c",line 4108,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4108| 
	.dwpsn	file "../Source/prod.c",line 4109,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4109| 
	.dwpsn	file "../Source/prod.c",line 4108,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4108| 
	.dwpsn	file "../Source/prod.c",line 4109,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4109| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4109| 
	.dwpsn	file "../Source/prod.c",line 4114,column 6,is_stmt,isa 0
        MOV       *-SP[53],#8           ; [CPU_] |4114| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4113,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4113| 
        ANDB      AL,#0xff              ; [CPU_] |4113| 
        MOV       *XAR4++,AL            ; [CPU_] |4113| 
	.dwpsn	file "../Source/prod.c",line 4114,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4114| 
        LSR       AL,8                  ; [CPU_] |4114| 
        MOV       *XAR4++,AL            ; [CPU_] |4114| 
	.dwpsn	file "../Source/prod.c",line 4112,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4112| 
        ; branchcc occurs ; [] |4112| 
        B         $C$L743,UNC           ; [CPU_] |4112| 
        ; branch occurs ; [] |4112| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[53]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4098,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4098| 
        MOV       *-SP[53],AL           ; [CPU_] |4098| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4098| 
	.dwpsn	file "../Source/prod.c",line 4097,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4097| 
	.dwpsn	file "../Source/prod.c",line 4098,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4098| 
	.dwpsn	file "../Source/prod.c",line 4097,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4097| 
        ; branchcc occurs ; [] |4097| 
        B         $C$L743,UNC           ; [CPU_] |4097| 
        ; branch occurs ; [] |4097| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4081,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4081| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4083,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4083| 
        ANDB      AL,#0xff              ; [CPU_] |4083| 
        MOV       *XAR4++,AL            ; [CPU_] |4083| 
	.dwpsn	file "../Source/prod.c",line 4084,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4084| 
        LSR       AL,8                  ; [CPU_] |4084| 
        MOV       *XAR4++,AL            ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4082,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4082| 
        ; branchcc occurs ; [] |4082| 
	.dwpsn	file "../Source/prod.c",line 4080,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4080| 
	.dwpsn	file "../Source/prod.c",line 4084,column 7,is_stmt,isa 0
        ADD       *-SP[53],#4           ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4080,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4080| 
        ; branchcc occurs ; [] |4080| 
	.dwpsn	file "../Source/prod.c",line 4089,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4089| 
        MOVL      ACC,XAR5              ; [CPU_] |4089| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4089| 
        MOVL      XAR6,ACC              ; [CPU_] |4089| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4089| 
        ANDB      AL,#0xff              ; [CPU_] |4089| 
        MOV       *XAR4++,AL            ; [CPU_] |4089| 
	.dwpsn	file "../Source/prod.c",line 4090,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4090| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4090| 
        MOVL      XAR5,ACC              ; [CPU_] |4090| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4090| 
        LSR       AL,8                  ; [CPU_] |4090| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4090| 
$C$L735:    
        ADD       *-SP[53],#2           ; [CPU_] |4090| 
	.dwpsn	file "../Source/prod.c",line 4093,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4093| 
        ; branch occurs ; [] |4093| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3735,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3735| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3735| 
        MOVZ      AR4,AR4               ; [CPU_] |3735| 
        ADD       ACC,*-SP[53]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3737,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3737| 
        ANDB      AL,#0xff              ; [CPU_] |3737| 
        MOV       *XAR1++,AL            ; [CPU_] |3737| 
	.dwpsn	file "../Source/prod.c",line 3738,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3738| 
        LSR       AL,8                  ; [CPU_] |3738| 
        MOV       *XAR1++,AL            ; [CPU_] |3738| 
	.dwpsn	file "../Source/prod.c",line 3736,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3736| 
        ; branchcc occurs ; [] |3736| 
	.dwpsn	file "../Source/prod.c",line 3742,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3742| 
        ANDB      AL,#0xff              ; [CPU_] |3742| 
	.dwpsn	file "../Source/prod.c",line 3743,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3743| 
	.dwpsn	file "../Source/prod.c",line 3742,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3742| 
	.dwpsn	file "../Source/prod.c",line 3743,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3743| 
        LSR       AL,8                  ; [CPU_] |3743| 
        MOV       *XAR1++,AL            ; [CPU_] |3743| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3743| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3747,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3747| 
        ANDB      AL,#0xff              ; [CPU_] |3747| 
        MOV       *XAR1++,AL            ; [CPU_] |3747| 
	.dwpsn	file "../Source/prod.c",line 3748,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3748| 
        LSR       AL,8                  ; [CPU_] |3748| 
        MOV       *XAR1++,AL            ; [CPU_] |3748| 
	.dwpsn	file "../Source/prod.c",line 3746,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3746| 
        ; branchcc occurs ; [] |3746| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3752,column 5,is_stmt,isa 0
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_strlen")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3752| 
        ; call occurs [#_strlen] ; [] |3752| 
	.dwpsn	file "../Source/prod.c",line 3753,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3753| 
	.dwpsn	file "../Source/prod.c",line 3738,column 6,is_stmt,isa 0
        ADD       *-SP[53],#11          ; [CPU_] |3738| 
	.dwpsn	file "../Source/prod.c",line 3754,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3754| 
        B         $C$L743,EQ            ; [CPU_] |3754| 
        ; branchcc occurs ; [] |3754| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3753,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3753| 
	.dwpsn	file "../Source/prod.c",line 3754,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3754| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3755,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3755| 
	.dwpsn	file "../Source/prod.c",line 3754,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3754| 
	.dwpsn	file "../Source/prod.c",line 3755,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3755| 
        INC       *-SP[53]              ; [CPU_] |3755| 
	.dwpsn	file "../Source/prod.c",line 3754,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3754| 
        B         $C$L739,HI            ; [CPU_] |3754| 
        ; branchcc occurs ; [] |3754| 
        B         $C$L743,UNC           ; [CPU_] |3754| 
        ; branch occurs ; [] |3754| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3721,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3721| 
        MOVL      XAR0,#66              ; [CPU_] |3721| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3721| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3721| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3721| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3721| 
	.dwpsn	file "../Source/prod.c",line 3724,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3724| 
        ; branch occurs ; [] |3724| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3715,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3715| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3715| 
$C$L742:    
        MOV       *-SP[53],#3           ; [CPU_] |3715| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5706,column 5,is_stmt,isa 0
        MOV       AL,*-SP[53]           ; [CPU_] |5706| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5706| 
        ; call occurs [#_scia_send_bin] ; [] |5706| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5708| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |5708| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5708| 
        CMPB      AL,#240               ; [CPU_] |5708| 
        B         $C$L634,NEQ           ; [CPU_] |5708| 
        ; branchcc occurs ; [] |5708| 
	.dwpsn	file "../Source/prod.c",line 5709,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5709| 
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_delay_us")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5709| 
        ; call occurs [#_delay_us] ; [] |5709| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5710,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5710| 
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5710| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5710| 
        B         $C$L634,UNC           ; [CPU_] |5710| 
        ; branch occurs ; [] |5710| 
	.dwattr $C$DW$268, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$268, DW_AT_TI_end_line(0x166d)
	.dwattr $C$DW$268, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$268

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1459	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1459, DW_AT_name("get_fattime")
	.dwattr $C$DW$1459, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1459, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1459, DW_AT_external
	.dwattr $C$DW$1459, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1459, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1459, DW_AT_TI_begin_line(0x74)
	.dwattr $C$DW$1459, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1459, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 116,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 116 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 120,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 120 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 121 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 122 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |120| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |120| 
        MOVL      ACC,P                 ; [CPU_] |120| 
        SFR       ACC,1                 ; [CPU_] |120| 
        MOVL      P,ACC                 ; [CPU_] |120| 
        MOV       AL,@_rtc              ; [CPU_] |120| 
        SUB       AL,#1980              ; [CPU_] |120| 
        MOV       ACC,AL << 4           ; [CPU_] |120| 
        OR        ACC,@_rtc+1           ; [CPU_] |120| 
        LSL       ACC,5                 ; [CPU_] |120| 
        OR        ACC,@_rtc+2           ; [CPU_] |120| 
        LSL       ACC,5                 ; [CPU_] |120| 
        OR        ACC,@_rtc+4           ; [CPU_] |120| 
        LSL       ACC,6                 ; [CPU_] |120| 
        OR        ACC,@_rtc+5           ; [CPU_] |120| 
        LSL       ACC,5                 ; [CPU_] |120| 
        OR        AL,PL                 ; [CPU_] |120| 
        OR        AH,PH                 ; [CPU_] |120| 
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1459, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1459, DW_AT_TI_end_line(0x7b)
	.dwattr $C$DW$1459, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1459

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec  4 2019",0
	.align	2
$C$FSL62:	.string	"14:28:55",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_conf_default
	.global	_ad7738_resettare
	.global	_ad7738_setcal
	.global	_ad7738_resetpeak
	.global	_ad7738_resetlimit
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_lcd_puts
	.global	_configCAN
	.global	_ad7738_resetvall
	.global	_lcd_dputs
	.global	_ad7738_monclr
	.global	_maf_rst
	.global	_velf_rst
	.global	_ds1820start
	.global	_ad7738_init
	.global	_dac_setmode
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_METHOD
	.global	_ad7738_settemp
	.global	_delay_us
	.global	_UNITS
	.global	_BITMAP
	.global	_BAUD
	.global	_latch_dac
	.global	_LPV
	.global	_InitPieVectTable
	.global	_mcbsp_xmit
	.global	_INTERFACE
	.global	_gpio_init
	.global	_extio_init
	.global	_led_init
	.global	_lcd_init
	.global	_led_set
	.global	_lcd_clear
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_ssr_set
	.global	_sys_init
	.global	_uart_set_dir
	.global	_tagdetect
	.global	_secureRamFuncs_runstart
	.global	_secureRamFuncs_loadend
	.global	_port4004
	.global	_port400e
	.global	_Flash28_API_LoadStart
	.global	_Flash28_API_RunStart
	.global	_Flash28_API_LoadEnd
	.global	_secureRamFuncs_loadstart
	.global	_scia_send_bin
	.global	_scia_puts
	.global	_scia_getparam
	.global	_conf_write
	.global	_conf_read
	.global	_sprintf
	.global	_atoi
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_getlimitst
	.global	_ad7738_tempstart
	.global	_ad7738_getlimitchgd
	.global	_ds1820read
	.global	_strtod
	.global	_strlen
	.global	_atol
	.global	_Flash_CallbackPtr
	.global	_prod_getnext
	.global	_ad7738_getvall
	.global	_Flash_CPUScaleFactor
	.global	_ad7738_getraw
	.global	_ad7738_getmon
	.global	_prod_getavail
	.global	_ad7738_getpeak
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1461	.dwtag  DW_TAG_member
	.dwattr $C$DW$1461, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1461, DW_AT_name("fs_type")
	.dwattr $C$DW$1461, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1461, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1461, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1462	.dwtag  DW_TAG_member
	.dwattr $C$DW$1462, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1462, DW_AT_name("drv")
	.dwattr $C$DW$1462, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1462, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1462, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1463	.dwtag  DW_TAG_member
	.dwattr $C$DW$1463, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1463, DW_AT_name("csize")
	.dwattr $C$DW$1463, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1463, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1463, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1464	.dwtag  DW_TAG_member
	.dwattr $C$DW$1464, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1464, DW_AT_name("n_fats")
	.dwattr $C$DW$1464, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1464, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1464, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1465	.dwtag  DW_TAG_member
	.dwattr $C$DW$1465, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1465, DW_AT_name("wflag")
	.dwattr $C$DW$1465, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1465, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1465, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1466	.dwtag  DW_TAG_member
	.dwattr $C$DW$1466, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1466, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1466, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1466, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1466, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1467	.dwtag  DW_TAG_member
	.dwattr $C$DW$1467, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1467, DW_AT_name("id")
	.dwattr $C$DW$1467, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1467, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1467, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1468	.dwtag  DW_TAG_member
	.dwattr $C$DW$1468, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1468, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1468, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1468, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1468, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1469	.dwtag  DW_TAG_member
	.dwattr $C$DW$1469, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1469, DW_AT_name("last_clust")
	.dwattr $C$DW$1469, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1469, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1469, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1470	.dwtag  DW_TAG_member
	.dwattr $C$DW$1470, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1470, DW_AT_name("free_clust")
	.dwattr $C$DW$1470, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1470, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1470, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1471	.dwtag  DW_TAG_member
	.dwattr $C$DW$1471, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1471, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1471, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1471, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1471, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1472	.dwtag  DW_TAG_member
	.dwattr $C$DW$1472, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1472, DW_AT_name("cdir")
	.dwattr $C$DW$1472, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1472, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1472, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1473	.dwtag  DW_TAG_member
	.dwattr $C$DW$1473, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1473, DW_AT_name("n_fatent")
	.dwattr $C$DW$1473, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1473, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1473, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1474	.dwtag  DW_TAG_member
	.dwattr $C$DW$1474, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1474, DW_AT_name("fsize")
	.dwattr $C$DW$1474, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1474, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1474, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1475	.dwtag  DW_TAG_member
	.dwattr $C$DW$1475, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1475, DW_AT_name("fatbase")
	.dwattr $C$DW$1475, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1475, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1475, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1476	.dwtag  DW_TAG_member
	.dwattr $C$DW$1476, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1476, DW_AT_name("dirbase")
	.dwattr $C$DW$1476, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1476, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1476, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1477	.dwtag  DW_TAG_member
	.dwattr $C$DW$1477, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1477, DW_AT_name("database")
	.dwattr $C$DW$1477, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1477, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1477, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1478	.dwtag  DW_TAG_member
	.dwattr $C$DW$1478, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1478, DW_AT_name("winsect")
	.dwattr $C$DW$1478, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1478, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1478, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1479	.dwtag  DW_TAG_member
	.dwattr $C$DW$1479, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1479, DW_AT_name("win")
	.dwattr $C$DW$1479, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1479, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1479, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1480	.dwtag  DW_TAG_member
	.dwattr $C$DW$1480, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1480, DW_AT_name("fs")
	.dwattr $C$DW$1480, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1480, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1480, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1481	.dwtag  DW_TAG_member
	.dwattr $C$DW$1481, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1481, DW_AT_name("id")
	.dwattr $C$DW$1481, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1481, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1481, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1482	.dwtag  DW_TAG_member
	.dwattr $C$DW$1482, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1482, DW_AT_name("flag")
	.dwattr $C$DW$1482, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1482, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1482, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1483	.dwtag  DW_TAG_member
	.dwattr $C$DW$1483, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1483, DW_AT_name("pad1")
	.dwattr $C$DW$1483, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1483, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1483, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1484	.dwtag  DW_TAG_member
	.dwattr $C$DW$1484, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1484, DW_AT_name("fptr")
	.dwattr $C$DW$1484, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1484, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1484, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1485	.dwtag  DW_TAG_member
	.dwattr $C$DW$1485, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1485, DW_AT_name("fsize")
	.dwattr $C$DW$1485, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1485, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1485, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1486	.dwtag  DW_TAG_member
	.dwattr $C$DW$1486, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1486, DW_AT_name("org_clust")
	.dwattr $C$DW$1486, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1486, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1486, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1487	.dwtag  DW_TAG_member
	.dwattr $C$DW$1487, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1487, DW_AT_name("curr_clust")
	.dwattr $C$DW$1487, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1487, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1487, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1488	.dwtag  DW_TAG_member
	.dwattr $C$DW$1488, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1488, DW_AT_name("dsect")
	.dwattr $C$DW$1488, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1488, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1488, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1489	.dwtag  DW_TAG_member
	.dwattr $C$DW$1489, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1489, DW_AT_name("dir_sect")
	.dwattr $C$DW$1489, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1489, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1489, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1490	.dwtag  DW_TAG_member
	.dwattr $C$DW$1490, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1490, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1490, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1490, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1490, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1491	.dwtag  DW_TAG_member
	.dwattr $C$DW$1491, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1491, DW_AT_name("cltbl")
	.dwattr $C$DW$1491, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1491, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1491, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1492	.dwtag  DW_TAG_member
	.dwattr $C$DW$1492, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1492, DW_AT_name("buf")
	.dwattr $C$DW$1492, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1492, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1492, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1493	.dwtag  DW_TAG_member
	.dwattr $C$DW$1493, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1493, DW_AT_name("year")
	.dwattr $C$DW$1493, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1493, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1493, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1494, DW_AT_name("month")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1495, DW_AT_name("mday")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1496, DW_AT_name("wday")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("hour")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("min")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1499, DW_AT_name("sec")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1500, DW_AT_name("adc")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1501, DW_AT_name("adw")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1502, DW_AT_name("pos")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1503, DW_AT_name("vel")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1504, DW_AT_name("ci")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1505, DW_AT_name("bslope")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1506, DW_AT_name("tcx")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1507, DW_AT_name("tcy")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1508, DW_AT_name("tcz")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1509	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1509, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1510, DW_AT_name("what")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1511, DW_AT_name("ch")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1512, DW_AT_name("dslopep")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1513, DW_AT_name("dslopen")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1514, DW_AT_name("dint")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1515, DW_AT_name("gain")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1516, DW_AT_name("offset")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1517	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1517, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1518, DW_AT_name("what")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1519, DW_AT_name("ch")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1520, DW_AT_name("adec")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1521	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1521, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1522, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1522, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1522, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1523, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1523, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1523, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1524, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1524, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1524, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1525, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1525, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1525, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1526, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1526, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1526, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1527, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1527, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1527, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1528, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1528, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1528, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1529, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1529, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1529, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1530, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1530, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1530, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1531, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1531, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1531, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1532, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1532, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1532, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1533, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1533, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1533, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1534, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1534, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1534, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1535, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1535, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1535, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1536, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1536, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1536, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1537, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1537, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1537, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1538, DW_AT_name("all")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1539, DW_AT_name("bit")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1540, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1540, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1540, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1541, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1541, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1541, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1542, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1542, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1542, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1543, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1543, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1543, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1544, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1544, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1544, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1545, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1545, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1545, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1546, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1546, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1547, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1547, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1548, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1548, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1548, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1549, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1549, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1549, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1550, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1550, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1550, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1551, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1551, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1552, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1552, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1553, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1553, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1554, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1554, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("all")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1557, DW_AT_name("bit")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("all")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1575, DW_AT_name("bit")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("all")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1593, DW_AT_name("bit")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("all")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1611, DW_AT_name("bit")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("all")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1629, DW_AT_name("bit")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("all")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1647, DW_AT_name("bit")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("all")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1665, DW_AT_name("bit")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("rsvd1")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("rsvd2")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("all")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1673, DW_AT_name("bit")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("rsvd1")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("rsvd2")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("all")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1681, DW_AT_name("bit")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("rsvd1")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("rsvd2")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("all")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1689, DW_AT_name("bit")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("rsvd1")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("rsvd2")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("all")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1697, DW_AT_name("bit")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("rsvd1")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("all")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1703, DW_AT_name("bit")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("rsvd1")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("all")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1709, DW_AT_name("bit")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("rsvd1")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("all")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1715, DW_AT_name("bit")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("rsvd1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("all")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1721, DW_AT_name("bit")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("all")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1739, DW_AT_name("bit")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("all")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1757, DW_AT_name("bit")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("all")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1775, DW_AT_name("bit")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("all")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1793, DW_AT_name("bit")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("rsvd1")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("rsvd2")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("all")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1799, DW_AT_name("bit")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("rsvd1")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("rsvd2")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("all")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1805, DW_AT_name("bit")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("rsvd1")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("rsvd2")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("all")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1811, DW_AT_name("bit")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("rsvd1")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("rsvd2")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("all")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1817, DW_AT_name("bit")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1818, DW_AT_name("GPADAT")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1819, DW_AT_name("GPASET")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1820, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1821, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1822, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1823, DW_AT_name("GPBSET")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1824, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1825, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1826, DW_AT_name("rsvd1")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1827, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1828, DW_AT_name("GPDSET")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1829, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1830, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1831, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1832, DW_AT_name("GPESET")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1833, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1834, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1835, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1836, DW_AT_name("GPFSET")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1837, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1838, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1839, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1840, DW_AT_name("GPGSET")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1841, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1842, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1843, DW_AT_name("rsvd2")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1844	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1844)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("what")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("ch")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("limit")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1848, DW_AT_name("limits")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1849, DW_AT_name("limitr")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1850	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1850, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1851, DW_AT_name("usn")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1852, DW_AT_name("uname")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1853, DW_AT_name("rxdir")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1854, DW_AT_name("baud")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1855, DW_AT_name("tagiden")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1856, DW_AT_name("tarepersist")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("filter")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1858, DW_AT_name("diffwin")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1859, DW_AT_name("ch")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1860, DW_AT_name("sensor")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1861, DW_AT_name("vfd")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1862, DW_AT_name("dac")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1863, DW_AT_name("lim")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1864, DW_AT_name("velfilter")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1865, DW_AT_name("cntperin")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1866, DW_AT_name("magic")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1867	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1867)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1868, DW_AT_name("ssn")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1869, DW_AT_name("slbl")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1870, DW_AT_name("tagid")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1871, DW_AT_name("method")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1872, DW_AT_name("date")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1873, DW_AT_name("range")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1874, DW_AT_name("unit")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1875, DW_AT_name("ounit")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1876, DW_AT_name("ufactor")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1877, DW_AT_name("points")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1878, DW_AT_name("mass")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1879, DW_AT_name("adc")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1880, DW_AT_name("slope")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1881, DW_AT_name("intercept")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1882, DW_AT_name("shunt")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1883, DW_AT_name("base")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1884, DW_AT_name("tare")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1885, DW_AT_name("dacgain")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1886, DW_AT_name("dacoff")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1887, DW_AT_name("ch")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1888	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1888, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1889	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1889)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1890	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1890, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1891	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$6)

$C$DW$T$172	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$1891)


$C$DW$T$173	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_byte_size(0x101)
$C$DW$1892	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1892, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$173

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1893	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$10)

$C$DW$T$195	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$1893)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1894	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$36)

$C$DW$1895	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$1894)

$C$DW$T$295	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$295, DW_AT_type(*$C$DW$1895)

$C$DW$1896	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$36)

$C$DW$T$296	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$296, DW_AT_type(*$C$DW$1896)


$C$DW$T$297	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$T$297, DW_AT_language(DW_LANG_C)
$C$DW$1897	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$297


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1898	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1898, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$302	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$302, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$302, DW_AT_byte_size(0x03)
$C$DW$1899	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1899, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$302

$C$DW$T$303	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$303, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$303, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1900	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1900, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1901	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1901, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1902	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1902, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1903	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$12)

$C$DW$T$325	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$325, DW_AT_type(*$C$DW$1903)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1904	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$90)

$C$DW$T$328	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$328, DW_AT_type(*$C$DW$1904)


$C$DW$T$329	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$329, DW_AT_type(*$C$DW$T$328)
	.dwattr $C$DW$T$329, DW_AT_language(DW_LANG_C)
$C$DW$1905	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$329

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$344	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$344, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$344, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$344, DW_AT_byte_size(0x08)
$C$DW$1906	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1906, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$344

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1907	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1907, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1908	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1908, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1909	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1909, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1910	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1910, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$363	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$363, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$363, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$363, DW_AT_byte_size(0x06)
$C$DW$1911	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1911, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$363

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1912	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1912, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1913	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1913, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$349	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$349, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$349, DW_AT_address_class(0x20)

$C$DW$1914	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$5)

$C$DW$T$176	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$1914)

$C$DW$T$177	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$T$177, DW_AT_address_class(0x20)


$C$DW$T$364	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$364, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$T$364, DW_AT_language(DW_LANG_C)
$C$DW$1915	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$364


$C$DW$T$365	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$365, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$365, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$365, DW_AT_byte_size(0x400)
$C$DW$1916	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1916, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$365


$C$DW$T$370	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$370, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$370, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$370, DW_AT_byte_size(0x08)
$C$DW$1917	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1917, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$370


$C$DW$T$371	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$371, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$371, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$371, DW_AT_byte_size(0x64)
$C$DW$1918	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1918, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$371


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$372, DW_AT_byte_size(0x40)
$C$DW$1919	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1919, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$372

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1920	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1920, DW_AT_name("AL")
	.dwattr $C$DW$1920, DW_AT_location[DW_OP_reg0]

$C$DW$1921	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1921, DW_AT_name("AH")
	.dwattr $C$DW$1921, DW_AT_location[DW_OP_reg1]

$C$DW$1922	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1922, DW_AT_name("PL")
	.dwattr $C$DW$1922, DW_AT_location[DW_OP_reg2]

$C$DW$1923	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1923, DW_AT_name("PH")
	.dwattr $C$DW$1923, DW_AT_location[DW_OP_reg3]

$C$DW$1924	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1924, DW_AT_name("SP")
	.dwattr $C$DW$1924, DW_AT_location[DW_OP_reg20]

$C$DW$1925	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1925, DW_AT_name("XT")
	.dwattr $C$DW$1925, DW_AT_location[DW_OP_reg21]

$C$DW$1926	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1926, DW_AT_name("T")
	.dwattr $C$DW$1926, DW_AT_location[DW_OP_reg22]

$C$DW$1927	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1927, DW_AT_name("ST0")
	.dwattr $C$DW$1927, DW_AT_location[DW_OP_reg23]

$C$DW$1928	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1928, DW_AT_name("ST1")
	.dwattr $C$DW$1928, DW_AT_location[DW_OP_reg24]

$C$DW$1929	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1929, DW_AT_name("PC")
	.dwattr $C$DW$1929, DW_AT_location[DW_OP_reg25]

$C$DW$1930	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1930, DW_AT_name("RPC")
	.dwattr $C$DW$1930, DW_AT_location[DW_OP_reg26]

$C$DW$1931	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1931, DW_AT_name("FP")
	.dwattr $C$DW$1931, DW_AT_location[DW_OP_reg28]

$C$DW$1932	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1932, DW_AT_name("DP")
	.dwattr $C$DW$1932, DW_AT_location[DW_OP_reg29]

$C$DW$1933	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1933, DW_AT_name("SXM")
	.dwattr $C$DW$1933, DW_AT_location[DW_OP_reg30]

$C$DW$1934	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1934, DW_AT_name("PM")
	.dwattr $C$DW$1934, DW_AT_location[DW_OP_reg31]

$C$DW$1935	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1935, DW_AT_name("OVM")
	.dwattr $C$DW$1935, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1936	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1936, DW_AT_name("PAGE0")
	.dwattr $C$DW$1936, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1937	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1937, DW_AT_name("AMODE")
	.dwattr $C$DW$1937, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1938	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1938, DW_AT_name("INTM")
	.dwattr $C$DW$1938, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1939	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1939, DW_AT_name("IFR")
	.dwattr $C$DW$1939, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1940	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1940, DW_AT_name("IER")
	.dwattr $C$DW$1940, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1941	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1941, DW_AT_name("V")
	.dwattr $C$DW$1941, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1942	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1942, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1942, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1943	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1943, DW_AT_name("VOL")
	.dwattr $C$DW$1943, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1944	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1944, DW_AT_name("AR0")
	.dwattr $C$DW$1944, DW_AT_location[DW_OP_reg4]

$C$DW$1945	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1945, DW_AT_name("XAR0")
	.dwattr $C$DW$1945, DW_AT_location[DW_OP_reg5]

$C$DW$1946	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1946, DW_AT_name("AR1")
	.dwattr $C$DW$1946, DW_AT_location[DW_OP_reg6]

$C$DW$1947	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1947, DW_AT_name("XAR1")
	.dwattr $C$DW$1947, DW_AT_location[DW_OP_reg7]

$C$DW$1948	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1948, DW_AT_name("AR2")
	.dwattr $C$DW$1948, DW_AT_location[DW_OP_reg8]

$C$DW$1949	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1949, DW_AT_name("XAR2")
	.dwattr $C$DW$1949, DW_AT_location[DW_OP_reg9]

$C$DW$1950	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1950, DW_AT_name("AR3")
	.dwattr $C$DW$1950, DW_AT_location[DW_OP_reg10]

$C$DW$1951	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1951, DW_AT_name("XAR3")
	.dwattr $C$DW$1951, DW_AT_location[DW_OP_reg11]

$C$DW$1952	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1952, DW_AT_name("AR4")
	.dwattr $C$DW$1952, DW_AT_location[DW_OP_reg12]

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("XAR4")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg13]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("AR5")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg14]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("XAR5")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_reg15]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("AR6")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_reg16]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("XAR6")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg17]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("AR7")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg18]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("XAR7")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

